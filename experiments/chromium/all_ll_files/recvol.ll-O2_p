; ModuleID = '../../third_party/unrar/src/recvol.cpp'
source_filename = "../../third_party/unrar/src/recvol.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%class.ErrorHandler = type <{ i32, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%class.RecVolumes3 = type { [256 x %class.File*], %class.Array, %class.ThreadPool* }
%class.File = type { i32 (...)**, i64, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, [2048 x i32], i32, i64 }
%class.Array = type <{ i8*, i64, i64, i64, i8, [7 x i8] }>
%class.ThreadPool = type { i32, [64 x i64], i32, i32, [64 x %"struct.ThreadPool::QueueEntry"], i32, i32, i8, i32, %union.pthread_cond_t, %union.pthread_mutex_t, i8, %union.pthread_cond_t, %union.pthread_mutex_t, %union.pthread_mutex_t }
%"struct.ThreadPool::QueueEntry" = type { void (i8*)*, i8* }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%class.RAROptions = type <{ i32, i32, i8, i8, i8, [5 x i8], i64, [2048 x i32], [2048 x i32], i32, i8, [3 x i8], [2048 x i32], [2048 x i32], i32, i32, i32, i32, [2048 x i32], %class.SecPassword, i8, i8, [2 x i8], [2048 x i32], i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, [4 x i8], i64, %class.Array.2, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, [128 x i32], [128 x i32], i8, i8, i8, i8, i8, [3 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i8, i8, i8, [5 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i8, i8, i8, [5 x i8], i64, i64, i8, i8, i8, i8, [16 x %struct.FilterMode], [2048 x i32], i32, i32, i32, i32, i32, i32, i8, [3 x i8], [2048 x i32], i32, [4 x i8] }>
%class.SecPassword = type <{ [128 x i32], i8, i8, [2 x i8] }>
%class.Array.2 = type <{ i64*, i64, i64, i64, i8, [7 x i8] }>
%class.RarTime = type { i64 }
%struct.FilterMode = type { i32, i32, i32 }
%class.RecVolumes5 = type { %class.Array.6, i8*, i8*, i8*, i8*, i64, i32, i32, i32, i8*, i32, %class.ThreadPool*, i32, %struct.RecRSThreadData* }
%class.Array.6 = type <{ %struct.RecVolItem*, i64, i64, i64, i8, [7 x i8] }>
%struct.RecVolItem = type { %class.File*, [2048 x i32], i32, i64, i8, i8 }
%struct.RecRSThreadData = type { %class.RecVolumes5*, %class.RSCoder16*, i8, i32, i8*, i64, i64 }
%class.RSCoder16 = type { i32*, i32*, i8, i32, i32, i32, i8*, i32*, i32*, i64 }
%class.RSCoder = type <{ [512 x i32], [256 x i32], [1024 x i32], [256 x i32], i32, [256 x i32], i32, [512 x i32], i8, [3 x i8] }>
%class.RSEncode = type <{ %class.RSCoder, [4 x i8], i8*, i8*, i32, i32, i32, i32, i64, i32*, i32, [4 x i8] }>
%class.uiMsgStore = type <{ [8 x i32*], [8 x i32], i32, i32, i32, [4 x i8] }>
%class.FindFile = type { [2048 x i32], i8, %struct.__dirstream* }
%struct.__dirstream = type opaque
%struct.FindData = type <{ [2048 x i32], i64, i32, i8, i8, [2 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i32, i8, [3 x i8] }>
%class.Archive = type <{ %class.File, %class.CryptData, %class.ComprDataIO, i8, [7 x i8], %class.RAROptions*, %class.RarTime, i32, i32, i8, [7 x i8], %class.QuickOpen, i8, [7 x i8], i64, %struct.BaseBlock, %struct.MarkHeader, %struct.MainHeader, %struct.CryptHeader, [4 x i8], %struct.FileHeader, %struct.EndArcHeader, %struct.SubBlockHeader, [4 x i8], %struct.FileHeader, %struct.CommentHeader, %struct.ProtectHeader, %struct.UnixOwnersHeader, %struct.EAHeader, %struct.StreamHeader, [4 x i8], i64, i64, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], i64, i8, i8, [16 x i8], i8, i8, i32, i64, i64, i64, i8, [3 x i8], [2048 x i32], [4 x i8] }>
%class.CryptData = type { [4 x %"struct.CryptData::KDF3CacheItem"], i32, [4 x %"struct.CryptData::KDF5CacheItem"], i32, i32, %class.Rijndael, [256 x i32], [256 x i8], [4 x i32], [3 x i8], [4 x i16] }
%"struct.CryptData::KDF3CacheItem" = type { %class.SecPassword, [8 x i8], [16 x i8], [16 x i8], i8, [3 x i8] }
%"struct.CryptData::KDF5CacheItem" = type { %class.SecPassword, [16 x i8], [32 x i8], i32, [32 x i8], [32 x i8] }
%class.Rijndael = type { i8, i32, [16 x i8], [15 x [4 x [4 x i8]]] }
%class.ComprDataIO = type <{ i8, [7 x i8], i64, i8*, i8, [7 x i8], i64, i8*, i64, i8*, i64, i8, i8, i8, i8, [4 x i8], %class.File*, %class.File*, %class.CmdAdd*, %struct.FileHeader*, i64*, %class.CryptData*, %class.CryptData*, i32, i32, i8, i8, i8, [5 x i8], i64, i64, i64, i64, i64, i64, i64, %class.DataHash, %class.DataHash, %class.DataHash, i8, i8, [6 x i8] }>
%class.CmdAdd = type opaque
%class.DataHash = type <{ i32, i32, %struct.blake2sp_state*, %class.ThreadPool*, i32, [4 x i8] }>
%struct.blake2sp_state = type <{ [8 x %struct.blake2s_state], %struct.blake2s_state, [512 x i8], i64, %class.ThreadPool*, i32, [4 x i8] }>
%struct.blake2s_state = type <{ [240 x i8], i8*, i32*, i32*, i32*, i64, i8, [7 x i8] }>
%class.QuickOpen = type <{ %class.Archive*, i8, [7 x i8], %struct.QuickOpenItem*, %struct.QuickOpenItem*, i8*, i64, %class.CryptData, i8, [7 x i8], i64, i64, i64, i64, i64, i64, %class.Array, i64, i64, i8, [7 x i8] }>
%struct.QuickOpenItem = type { i8*, i64, i64, %struct.QuickOpenItem* }
%struct.BaseBlock = type { i32, i32, i32, i32, i8 }
%struct.MarkHeader = type { [8 x i8], i32 }
%struct.MainHeader = type { %struct.BaseBlock, i16, i32, i8, i8, i8, i64, i64, i64, i64 }
%struct.CryptHeader = type { %struct.BaseBlock, i8, i32, [16 x i8], [8 x i8] }
%struct.EndArcHeader = type { %struct.BaseBlock, i32, i32, i8, i8, i8, i8 }
%struct.SubBlockHeader = type <{ %struct.BlockHeader, i16, i8, i8 }>
%struct.BlockHeader = type { %struct.BaseBlock, i32 }
%struct.FileHeader = type { %struct.BlockHeader, i8, i32, i8, %union.anon.4, [2048 x i32], %class.Array, %class.RarTime, %class.RarTime, %class.RarTime, i64, i64, i64, %struct.HashValue, i32, i8, i8, i8, i8, i32, i8, [16 x i8], [16 x i8], i8, [8 x i8], i8, [32 x i8], i32, i8, i8, i8, i8, i64, i8, i8, i8, i32, i32, [2048 x i32], i8, i8, i8, i8, [256 x i8], [256 x i8], i32, i32 }
%union.anon.4 = type { i32 }
%struct.HashValue = type { i32, %union.anon.5 }
%union.anon.5 = type { i32, [28 x i8] }
%struct.CommentHeader = type <{ %struct.BaseBlock, i16, i8, i8, i16, [2 x i8] }>
%struct.ProtectHeader = type { %struct.BlockHeader, i8, i16, i32, [8 x i8] }
%struct.UnixOwnersHeader = type { %struct.SubBlockHeader.base, i16, i16, [256 x i8], [256 x i8] }
%struct.SubBlockHeader.base = type <{ %struct.BlockHeader, i16, i8 }>
%struct.EAHeader = type { %struct.SubBlockHeader.base, i32, i8, i8, i32 }
%struct.StreamHeader = type <{ %struct.SubBlockHeader.base, i8, i32, i8, i8, [2 x i8], i32, i16, [260 x i8], [2 x i8] }>
%class.RawRead = type { %class.Array, %class.File*, i64, i64, %class.CryptData* }

$_ZN5ArrayIhE3AddEm = comdat any

$_ZN5ArrayI10RecVolItemE3AddEm = comdat any

@.str = private unnamed_addr constant [5 x i32] [i32 46, i32 114, i32 101, i32 118, i32 0], align 4
@.str.1 = private unnamed_addr constant [4 x i32] [i32 42, i32 46, i32 42, i32 0], align 4
@.str.2 = private unnamed_addr constant [6 x i32] [i32 42, i32 46, i32 114, i32 101, i32 118, i32 0], align 4
@.str.3 = private unnamed_addr constant [5 x i32] [i32 46, i32 98, i32 97, i32 100, i32 0], align 4
@ErrHandler = external global %class.ErrorHandler, align 4
@.str.5 = private unnamed_addr constant [3 x i8] c"RC\00", align 1
@.str.6 = private unnamed_addr constant [19 x i32] [i32 10, i32 84, i32 101, i32 115, i32 116, i32 105, i32 110, i32 103, i32 32, i32 32, i32 32, i32 32, i32 32, i32 37, i32 45, i32 53, i32 54, i32 115, i32 0], align 4
@.str.9 = private unnamed_addr constant [4 x i32] [i32 32, i32 79, i32 75, i32 0], align 4
@.str.10 = private unnamed_addr constant [4 x i32] [i32 114, i32 101, i32 118, i32 0], align 4
@.str.11 = private unnamed_addr constant [4 x i32] [i32 114, i32 97, i32 114, i32 0], align 4
@.str.12 = private unnamed_addr constant [3 x i8] c"RV\00", align 1
@.str.15 = private unnamed_addr constant [1 x i32] zeroinitializer, align 4
@.str.16 = private unnamed_addr constant [44 x i32] [i32 77, i32 97, i32 120, i32 105, i32 109, i32 117, i32 109, i32 32, i32 97, i32 108, i32 108, i32 111, i32 119, i32 101, i32 100, i32 32, i32 97, i32 114, i32 114, i32 97, i32 121, i32 32, i32 115, i32 105, i32 122, i32 101, i32 32, i32 40, i32 37, i32 117, i32 41, i32 32, i32 105, i32 115, i32 32, i32 101, i32 120, i32 99, i32 101, i32 101, i32 100, i32 101, i32 100, i32 0], align 4

@_ZN11RecVolumes3C1EP10RAROptionsb = hidden unnamed_addr alias void (%class.RecVolumes3*, %class.RAROptions*, i1), void (%class.RecVolumes3*, %class.RAROptions*, i1)* @_ZN11RecVolumes3C2EP10RAROptionsb
@_ZN11RecVolumes3D1Ev = hidden unnamed_addr alias void (%class.RecVolumes3*), void (%class.RecVolumes3*)* @_ZN11RecVolumes3D2Ev
@_ZN11RecVolumes5C1EP10RAROptionsb = hidden unnamed_addr alias void (%class.RecVolumes5*, %class.RAROptions*, i1), void (%class.RecVolumes5*, %class.RAROptions*, i1)* @_ZN11RecVolumes5C2EP10RAROptionsb
@_ZN11RecVolumes5D1Ev = hidden unnamed_addr alias void (%class.RecVolumes5*), void (%class.RecVolumes5*)* @_ZN11RecVolumes5D2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z14RSEncodeThreadPv(i8*) local_unnamed_addr #0 {
  %2 = alloca [256 x i8], align 16
  %3 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 0
  %4 = alloca [256 x i8], align 16
  %5 = getelementptr inbounds i8, i8* %0, i64 11296
  %6 = bitcast i8* %5 to i32*
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds i8, i8* %0, i64 11300
  %9 = bitcast i8* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %7, %10
  br i1 %11, label %12, label %175

12:                                               ; preds = %1
  %13 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 0
  %14 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i64 0, i64 0
  %15 = getelementptr inbounds i8, i8* %0, i64 11304
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds i8, i8* %0, i64 11280
  %18 = bitcast i8* %17 to i8**
  %19 = getelementptr inbounds i8, i8* %0, i64 11312
  %20 = bitcast i8* %19 to i64*
  %21 = bitcast i8* %0 to %class.RSCoder*
  %22 = getelementptr inbounds i8, i8* %0, i64 11308
  %23 = bitcast i8* %22 to i32*
  %24 = getelementptr inbounds i8, i8* %0, i64 11288
  %25 = bitcast i8* %24 to i8**
  %26 = sext i32 %7 to i64
  br label %27

27:                                               ; preds = %156, %12
  %28 = phi i64 [ %161, %156 ], [ 0, %12 ]
  %29 = phi i64 [ %157, %156 ], [ %26, %12 ]
  %30 = add i64 %28, %26
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %13) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 256, i1 false) #7
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %14) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 256, i1 false) #7
  %31 = load i32, i32* %16, align 8
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %33, label %126

33:                                               ; preds = %27
  %34 = load i8*, i8** %18, align 8
  %35 = load i64, i64* %20, align 8
  %36 = sext i32 %31 to i64
  %37 = icmp ugt i32 %31, 31
  %38 = icmp eq i64 %35, 1
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %48

40:                                               ; preds = %33
  %41 = getelementptr [256 x i8], [256 x i8]* %2, i64 0, i64 %36
  %42 = getelementptr i8, i8* %34, i64 %30
  %43 = add i64 %30, %36
  %44 = getelementptr i8, i8* %34, i64 %43
  %45 = icmp ult i8* %3, %44
  %46 = icmp ult i8* %42, %41
  %47 = and i1 %45, %46
  br i1 %47, label %48, label %68

48:                                               ; preds = %33, %124, %40
  %49 = phi i64 [ 0, %40 ], [ 0, %33 ], [ %69, %124 ]
  %50 = xor i64 %49, -1
  %51 = add nsw i64 %50, %36
  %52 = and i64 %36, 3
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %65, label %54

54:                                               ; preds = %48, %54
  %55 = phi i64 [ %62, %54 ], [ %49, %48 ]
  %56 = phi i64 [ %63, %54 ], [ %52, %48 ]
  %57 = mul i64 %55, %35
  %58 = add i64 %57, %29
  %59 = getelementptr inbounds i8, i8* %34, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %55
  store i8 %60, i8* %61, align 1
  %62 = add nuw nsw i64 %55, 1
  %63 = add i64 %56, -1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %54, !llvm.loop !2

65:                                               ; preds = %54, %48
  %66 = phi i64 [ %49, %48 ], [ %62, %54 ]
  %67 = icmp ult i64 %51, 3
  br i1 %67, label %126, label %129

68:                                               ; preds = %40
  %69 = and i64 %36, -32
  %70 = add nsw i64 %69, -32
  %71 = lshr exact i64 %70, 5
  %72 = add nuw nsw i64 %71, 1
  %73 = and i64 %72, 1
  %74 = icmp eq i64 %70, 0
  br i1 %74, label %108, label %75

75:                                               ; preds = %68
  %76 = sub nuw nsw i64 %72, %73
  br label %77

77:                                               ; preds = %77, %75
  %78 = phi i64 [ 0, %75 ], [ %105, %77 ]
  %79 = phi i64 [ %76, %75 ], [ %106, %77 ]
  %80 = mul i64 %78, %35
  %81 = add i64 %80, %29
  %82 = getelementptr inbounds i8, i8* %34, i64 %81
  %83 = bitcast i8* %82 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 1, !alias.scope !4
  %85 = getelementptr inbounds i8, i8* %82, i64 16
  %86 = bitcast i8* %85 to <16 x i8>*
  %87 = load <16 x i8>, <16 x i8>* %86, align 1, !alias.scope !4
  %88 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %78
  %89 = bitcast i8* %88 to <16 x i8>*
  store <16 x i8> %84, <16 x i8>* %89, align 16, !alias.scope !7, !noalias !4
  %90 = getelementptr inbounds i8, i8* %88, i64 16
  %91 = bitcast i8* %90 to <16 x i8>*
  store <16 x i8> %87, <16 x i8>* %91, align 16, !alias.scope !7, !noalias !4
  %92 = or i64 %78, 32
  %93 = mul i64 %92, %35
  %94 = add i64 %93, %29
  %95 = getelementptr inbounds i8, i8* %34, i64 %94
  %96 = bitcast i8* %95 to <16 x i8>*
  %97 = load <16 x i8>, <16 x i8>* %96, align 1, !alias.scope !4
  %98 = getelementptr inbounds i8, i8* %95, i64 16
  %99 = bitcast i8* %98 to <16 x i8>*
  %100 = load <16 x i8>, <16 x i8>* %99, align 1, !alias.scope !4
  %101 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %92
  %102 = bitcast i8* %101 to <16 x i8>*
  store <16 x i8> %97, <16 x i8>* %102, align 16, !alias.scope !7, !noalias !4
  %103 = getelementptr inbounds i8, i8* %101, i64 16
  %104 = bitcast i8* %103 to <16 x i8>*
  store <16 x i8> %100, <16 x i8>* %104, align 16, !alias.scope !7, !noalias !4
  %105 = add i64 %78, 64
  %106 = add i64 %79, -2
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %77, !llvm.loop !9

108:                                              ; preds = %77, %68
  %109 = phi i64 [ 0, %68 ], [ %105, %77 ]
  %110 = icmp eq i64 %73, 0
  br i1 %110, label %124, label %111

111:                                              ; preds = %108
  %112 = mul i64 %109, %35
  %113 = add i64 %112, %29
  %114 = getelementptr inbounds i8, i8* %34, i64 %113
  %115 = bitcast i8* %114 to <16 x i8>*
  %116 = load <16 x i8>, <16 x i8>* %115, align 1, !alias.scope !4
  %117 = getelementptr inbounds i8, i8* %114, i64 16
  %118 = bitcast i8* %117 to <16 x i8>*
  %119 = load <16 x i8>, <16 x i8>* %118, align 1, !alias.scope !4
  %120 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %109
  %121 = bitcast i8* %120 to <16 x i8>*
  store <16 x i8> %116, <16 x i8>* %121, align 16, !alias.scope !7, !noalias !4
  %122 = getelementptr inbounds i8, i8* %120, i64 16
  %123 = bitcast i8* %122 to <16 x i8>*
  store <16 x i8> %119, <16 x i8>* %123, align 16, !alias.scope !7, !noalias !4
  br label %124

124:                                              ; preds = %108, %111
  %125 = icmp eq i64 %69, %36
  br i1 %125, label %126, label %48

126:                                              ; preds = %65, %129, %124, %27
  call void @_ZN7RSCoder6EncodeEPhiS0_(%class.RSCoder* %21, i8* nonnull %13, i32 %31, i8* nonnull %14) #7
  %127 = load i32, i32* %23, align 4
  %128 = icmp sgt i32 %127, 0
  br i1 %128, label %162, label %156

129:                                              ; preds = %65, %129
  %130 = phi i64 [ %154, %129 ], [ %66, %65 ]
  %131 = mul i64 %130, %35
  %132 = add i64 %131, %29
  %133 = getelementptr inbounds i8, i8* %34, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %130
  store i8 %134, i8* %135, align 1
  %136 = add nuw nsw i64 %130, 1
  %137 = mul i64 %136, %35
  %138 = add i64 %137, %29
  %139 = getelementptr inbounds i8, i8* %34, i64 %138
  %140 = load i8, i8* %139, align 1
  %141 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %136
  store i8 %140, i8* %141, align 1
  %142 = add nuw nsw i64 %130, 2
  %143 = mul i64 %142, %35
  %144 = add i64 %143, %29
  %145 = getelementptr inbounds i8, i8* %34, i64 %144
  %146 = load i8, i8* %145, align 1
  %147 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %142
  store i8 %146, i8* %147, align 1
  %148 = add nuw nsw i64 %130, 3
  %149 = mul i64 %148, %35
  %150 = add i64 %149, %29
  %151 = getelementptr inbounds i8, i8* %34, i64 %150
  %152 = load i8, i8* %151, align 1
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %148
  store i8 %152, i8* %153, align 1
  %154 = add nuw nsw i64 %130, 4
  %155 = icmp eq i64 %154, %36
  br i1 %155, label %126, label %129, !llvm.loop !11

156:                                              ; preds = %162, %126
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %14) #7
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %13) #7
  %157 = add nsw i64 %29, 1
  %158 = load i32, i32* %9, align 4
  %159 = sext i32 %158 to i64
  %160 = icmp slt i64 %157, %159
  %161 = add i64 %28, 1
  br i1 %160, label %27, label %175

162:                                              ; preds = %126, %162
  %163 = phi i64 [ %171, %162 ], [ 0, %126 ]
  %164 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i64 0, i64 %163
  %165 = load i8, i8* %164, align 1
  %166 = load i8*, i8** %25, align 8
  %167 = load i64, i64* %20, align 8
  %168 = mul i64 %167, %163
  %169 = add i64 %168, %29
  %170 = getelementptr inbounds i8, i8* %166, i64 %169
  store i8 %165, i8* %170, align 1
  %171 = add nuw nsw i64 %163, 1
  %172 = load i32, i32* %23, align 4
  %173 = sext i32 %172 to i64
  %174 = icmp slt i64 %171, %173
  br i1 %174, label %162, label %156

175:                                              ; preds = %156, %1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8RSEncode9EncodeBufEv(%class.RSEncode*) local_unnamed_addr #0 align 2 {
  %2 = alloca [256 x i8], align 16
  %3 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 0
  %4 = alloca [256 x i8], align 16
  %5 = getelementptr inbounds %class.RSEncode, %class.RSEncode* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %class.RSEncode, %class.RSEncode* %0, i64 0, i32 5
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %6, %8
  br i1 %9, label %10, label %20

10:                                               ; preds = %1
  %11 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 0
  %12 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i64 0, i64 0
  %13 = getelementptr inbounds %class.RSEncode, %class.RSEncode* %0, i64 0, i32 6
  %14 = getelementptr inbounds %class.RSEncode, %class.RSEncode* %0, i64 0, i32 2
  %15 = getelementptr inbounds %class.RSEncode, %class.RSEncode* %0, i64 0, i32 8
  %16 = getelementptr inbounds %class.RSEncode, %class.RSEncode* %0, i64 0, i32 0
  %17 = getelementptr inbounds %class.RSEncode, %class.RSEncode* %0, i64 0, i32 7
  %18 = getelementptr inbounds %class.RSEncode, %class.RSEncode* %0, i64 0, i32 3
  %19 = sext i32 %6 to i64
  br label %21

20:                                               ; preds = %114, %1
  ret void

21:                                               ; preds = %10, %114
  %22 = phi i64 [ 0, %10 ], [ %119, %114 ]
  %23 = phi i64 [ %19, %10 ], [ %115, %114 ]
  %24 = add i64 %22, %19
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %11) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 256, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %12) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 256, i1 false)
  %25 = load i32, i32* %13, align 8
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %102

27:                                               ; preds = %21
  %28 = load i8*, i8** %14, align 8
  %29 = load i64, i64* %15, align 8
  %30 = sext i32 %25 to i64
  %31 = icmp ugt i32 %25, 31
  %32 = icmp eq i64 %29, 1
  %33 = and i1 %31, %32
  br i1 %33, label %34, label %42

34:                                               ; preds = %27
  %35 = getelementptr [256 x i8], [256 x i8]* %2, i64 0, i64 %30
  %36 = getelementptr i8, i8* %28, i64 %24
  %37 = add i64 %24, %30
  %38 = getelementptr i8, i8* %28, i64 %37
  %39 = icmp ult i8* %3, %38
  %40 = icmp ult i8* %36, %35
  %41 = and i1 %39, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %27, %100, %34
  %43 = phi i64 [ 0, %34 ], [ 0, %27 ], [ %45, %100 ]
  br label %105

44:                                               ; preds = %34
  %45 = and i64 %30, -32
  %46 = add nsw i64 %45, -32
  %47 = lshr exact i64 %46, 5
  %48 = add nuw nsw i64 %47, 1
  %49 = and i64 %48, 1
  %50 = icmp eq i64 %46, 0
  br i1 %50, label %84, label %51

51:                                               ; preds = %44
  %52 = sub nuw nsw i64 %48, %49
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i64 [ 0, %51 ], [ %81, %53 ]
  %55 = phi i64 [ %52, %51 ], [ %82, %53 ]
  %56 = mul i64 %29, %54
  %57 = add i64 %56, %23
  %58 = getelementptr inbounds i8, i8* %28, i64 %57
  %59 = bitcast i8* %58 to <16 x i8>*
  %60 = load <16 x i8>, <16 x i8>* %59, align 1, !alias.scope !12
  %61 = getelementptr inbounds i8, i8* %58, i64 16
  %62 = bitcast i8* %61 to <16 x i8>*
  %63 = load <16 x i8>, <16 x i8>* %62, align 1, !alias.scope !12
  %64 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %54
  %65 = bitcast i8* %64 to <16 x i8>*
  store <16 x i8> %60, <16 x i8>* %65, align 16, !alias.scope !15, !noalias !12
  %66 = getelementptr inbounds i8, i8* %64, i64 16
  %67 = bitcast i8* %66 to <16 x i8>*
  store <16 x i8> %63, <16 x i8>* %67, align 16, !alias.scope !15, !noalias !12
  %68 = or i64 %54, 32
  %69 = mul i64 %29, %68
  %70 = add i64 %69, %23
  %71 = getelementptr inbounds i8, i8* %28, i64 %70
  %72 = bitcast i8* %71 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1, !alias.scope !12
  %74 = getelementptr inbounds i8, i8* %71, i64 16
  %75 = bitcast i8* %74 to <16 x i8>*
  %76 = load <16 x i8>, <16 x i8>* %75, align 1, !alias.scope !12
  %77 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %68
  %78 = bitcast i8* %77 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %78, align 16, !alias.scope !15, !noalias !12
  %79 = getelementptr inbounds i8, i8* %77, i64 16
  %80 = bitcast i8* %79 to <16 x i8>*
  store <16 x i8> %76, <16 x i8>* %80, align 16, !alias.scope !15, !noalias !12
  %81 = add i64 %54, 64
  %82 = add i64 %55, -2
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %53, !llvm.loop !17

84:                                               ; preds = %53, %44
  %85 = phi i64 [ 0, %44 ], [ %81, %53 ]
  %86 = icmp eq i64 %49, 0
  br i1 %86, label %100, label %87

87:                                               ; preds = %84
  %88 = mul i64 %29, %85
  %89 = add i64 %88, %23
  %90 = getelementptr inbounds i8, i8* %28, i64 %89
  %91 = bitcast i8* %90 to <16 x i8>*
  %92 = load <16 x i8>, <16 x i8>* %91, align 1, !alias.scope !12
  %93 = getelementptr inbounds i8, i8* %90, i64 16
  %94 = bitcast i8* %93 to <16 x i8>*
  %95 = load <16 x i8>, <16 x i8>* %94, align 1, !alias.scope !12
  %96 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %85
  %97 = bitcast i8* %96 to <16 x i8>*
  store <16 x i8> %92, <16 x i8>* %97, align 16, !alias.scope !15, !noalias !12
  %98 = getelementptr inbounds i8, i8* %96, i64 16
  %99 = bitcast i8* %98 to <16 x i8>*
  store <16 x i8> %95, <16 x i8>* %99, align 16, !alias.scope !15, !noalias !12
  br label %100

100:                                              ; preds = %84, %87
  %101 = icmp eq i64 %45, %30
  br i1 %101, label %102, label %42

102:                                              ; preds = %105, %100, %21
  call void @_ZN7RSCoder6EncodeEPhiS0_(%class.RSCoder* %16, i8* nonnull %11, i32 %25, i8* nonnull %12) #7
  %103 = load i32, i32* %17, align 4
  %104 = icmp sgt i32 %103, 0
  br i1 %104, label %120, label %114

105:                                              ; preds = %42, %105
  %106 = phi i64 [ %112, %105 ], [ %43, %42 ]
  %107 = mul i64 %29, %106
  %108 = add i64 %107, %23
  %109 = getelementptr inbounds i8, i8* %28, i64 %108
  %110 = load i8, i8* %109, align 1
  %111 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %106
  store i8 %110, i8* %111, align 1
  %112 = add nuw nsw i64 %106, 1
  %113 = icmp slt i64 %112, %30
  br i1 %113, label %105, label %102, !llvm.loop !18

114:                                              ; preds = %120, %102
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %11) #7
  %115 = add nsw i64 %23, 1
  %116 = load i32, i32* %7, align 4
  %117 = sext i32 %116 to i64
  %118 = icmp slt i64 %115, %117
  %119 = add i64 %22, 1
  br i1 %118, label %21, label %20

120:                                              ; preds = %102, %120
  %121 = phi i64 [ %129, %120 ], [ 0, %102 ]
  %122 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i64 0, i64 %121
  %123 = load i8, i8* %122, align 1
  %124 = load i8*, i8** %18, align 8
  %125 = load i64, i64* %15, align 8
  %126 = mul i64 %125, %121
  %127 = add i64 %126, %23
  %128 = getelementptr inbounds i8, i8* %124, i64 %127
  store i8 %123, i8* %128, align 1
  %129 = add nuw nsw i64 %121, 1
  %130 = load i32, i32* %17, align 4
  %131 = sext i32 %130 to i64
  %132 = icmp slt i64 %129, %131
  br i1 %132, label %120, label %114
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z14RSDecodeThreadPv(i8*) #0 {
  %2 = alloca [256 x i8], align 16
  %3 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 0
  %4 = getelementptr inbounds i8, i8* %0, i64 11296
  %5 = bitcast i8* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds i8, i8* %0, i64 11300
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %6, %9
  br i1 %10, label %11, label %180

11:                                               ; preds = %1
  %12 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 0
  %13 = getelementptr inbounds i8, i8* %0, i64 11304
  %14 = bitcast i8* %13 to i32*
  %15 = getelementptr inbounds i8, i8* %0, i64 11280
  %16 = bitcast i8* %15 to i8**
  %17 = getelementptr inbounds i8, i8* %0, i64 11312
  %18 = bitcast i8* %17 to i64*
  %19 = bitcast i8* %0 to %class.RSCoder*
  %20 = getelementptr inbounds i8, i8* %0, i64 11320
  %21 = bitcast i8* %20 to i32**
  %22 = getelementptr inbounds i8, i8* %0, i64 11328
  %23 = bitcast i8* %22 to i32*
  %24 = sext i32 %6 to i64
  br label %25

25:                                               ; preds = %157, %11
  %26 = phi i64 [ %162, %157 ], [ 0, %11 ]
  %27 = phi i64 [ %158, %157 ], [ %24, %11 ]
  %28 = add i64 %26, %24
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %12) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 256, i1 false) #7
  %29 = load i32, i32* %14, align 8
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %124

31:                                               ; preds = %25
  %32 = load i8*, i8** %16, align 8
  %33 = load i64, i64* %18, align 8
  %34 = sext i32 %29 to i64
  %35 = icmp ugt i32 %29, 31
  %36 = icmp eq i64 %33, 1
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %46

38:                                               ; preds = %31
  %39 = getelementptr [256 x i8], [256 x i8]* %2, i64 0, i64 %34
  %40 = getelementptr i8, i8* %32, i64 %28
  %41 = add i64 %28, %34
  %42 = getelementptr i8, i8* %32, i64 %41
  %43 = icmp ult i8* %3, %42
  %44 = icmp ult i8* %40, %39
  %45 = and i1 %43, %44
  br i1 %45, label %46, label %66

46:                                               ; preds = %31, %122, %38
  %47 = phi i64 [ 0, %38 ], [ 0, %31 ], [ %67, %122 ]
  %48 = xor i64 %47, -1
  %49 = add nsw i64 %48, %34
  %50 = and i64 %34, 3
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %63, label %52

52:                                               ; preds = %46, %52
  %53 = phi i64 [ %60, %52 ], [ %47, %46 ]
  %54 = phi i64 [ %61, %52 ], [ %50, %46 ]
  %55 = mul i64 %53, %33
  %56 = add i64 %55, %27
  %57 = getelementptr inbounds i8, i8* %32, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %53
  store i8 %58, i8* %59, align 1
  %60 = add nuw nsw i64 %53, 1
  %61 = add i64 %54, -1
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %52, !llvm.loop !19

63:                                               ; preds = %52, %46
  %64 = phi i64 [ %47, %46 ], [ %60, %52 ]
  %65 = icmp ult i64 %49, 3
  br i1 %65, label %124, label %130

66:                                               ; preds = %38
  %67 = and i64 %34, -32
  %68 = add nsw i64 %67, -32
  %69 = lshr exact i64 %68, 5
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 1
  %72 = icmp eq i64 %68, 0
  br i1 %72, label %106, label %73

73:                                               ; preds = %66
  %74 = sub nuw nsw i64 %70, %71
  br label %75

75:                                               ; preds = %75, %73
  %76 = phi i64 [ 0, %73 ], [ %103, %75 ]
  %77 = phi i64 [ %74, %73 ], [ %104, %75 ]
  %78 = mul i64 %76, %33
  %79 = add i64 %78, %27
  %80 = getelementptr inbounds i8, i8* %32, i64 %79
  %81 = bitcast i8* %80 to <16 x i8>*
  %82 = load <16 x i8>, <16 x i8>* %81, align 1, !alias.scope !20
  %83 = getelementptr inbounds i8, i8* %80, i64 16
  %84 = bitcast i8* %83 to <16 x i8>*
  %85 = load <16 x i8>, <16 x i8>* %84, align 1, !alias.scope !20
  %86 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %76
  %87 = bitcast i8* %86 to <16 x i8>*
  store <16 x i8> %82, <16 x i8>* %87, align 16, !alias.scope !23, !noalias !20
  %88 = getelementptr inbounds i8, i8* %86, i64 16
  %89 = bitcast i8* %88 to <16 x i8>*
  store <16 x i8> %85, <16 x i8>* %89, align 16, !alias.scope !23, !noalias !20
  %90 = or i64 %76, 32
  %91 = mul i64 %90, %33
  %92 = add i64 %91, %27
  %93 = getelementptr inbounds i8, i8* %32, i64 %92
  %94 = bitcast i8* %93 to <16 x i8>*
  %95 = load <16 x i8>, <16 x i8>* %94, align 1, !alias.scope !20
  %96 = getelementptr inbounds i8, i8* %93, i64 16
  %97 = bitcast i8* %96 to <16 x i8>*
  %98 = load <16 x i8>, <16 x i8>* %97, align 1, !alias.scope !20
  %99 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %90
  %100 = bitcast i8* %99 to <16 x i8>*
  store <16 x i8> %95, <16 x i8>* %100, align 16, !alias.scope !23, !noalias !20
  %101 = getelementptr inbounds i8, i8* %99, i64 16
  %102 = bitcast i8* %101 to <16 x i8>*
  store <16 x i8> %98, <16 x i8>* %102, align 16, !alias.scope !23, !noalias !20
  %103 = add i64 %76, 64
  %104 = add i64 %77, -2
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %106, label %75, !llvm.loop !25

106:                                              ; preds = %75, %66
  %107 = phi i64 [ 0, %66 ], [ %103, %75 ]
  %108 = icmp eq i64 %71, 0
  br i1 %108, label %122, label %109

109:                                              ; preds = %106
  %110 = mul i64 %107, %33
  %111 = add i64 %110, %27
  %112 = getelementptr inbounds i8, i8* %32, i64 %111
  %113 = bitcast i8* %112 to <16 x i8>*
  %114 = load <16 x i8>, <16 x i8>* %113, align 1, !alias.scope !20
  %115 = getelementptr inbounds i8, i8* %112, i64 16
  %116 = bitcast i8* %115 to <16 x i8>*
  %117 = load <16 x i8>, <16 x i8>* %116, align 1, !alias.scope !20
  %118 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %107
  %119 = bitcast i8* %118 to <16 x i8>*
  store <16 x i8> %114, <16 x i8>* %119, align 16, !alias.scope !23, !noalias !20
  %120 = getelementptr inbounds i8, i8* %118, i64 16
  %121 = bitcast i8* %120 to <16 x i8>*
  store <16 x i8> %117, <16 x i8>* %121, align 16, !alias.scope !23, !noalias !20
  br label %122

122:                                              ; preds = %106, %109
  %123 = icmp eq i64 %67, %34
  br i1 %123, label %124, label %46

124:                                              ; preds = %63, %130, %122, %25
  %125 = load i32*, i32** %21, align 8
  %126 = load i32, i32* %23, align 8
  %127 = call zeroext i1 @_ZN7RSCoder6DecodeEPhiPii(%class.RSCoder* %19, i8* nonnull %12, i32 %29, i32* %125, i32 %126) #7
  %128 = load i32, i32* %23, align 8
  %129 = icmp sgt i32 %128, 0
  br i1 %129, label %163, label %157

130:                                              ; preds = %63, %130
  %131 = phi i64 [ %155, %130 ], [ %64, %63 ]
  %132 = mul i64 %131, %33
  %133 = add i64 %132, %27
  %134 = getelementptr inbounds i8, i8* %32, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %131
  store i8 %135, i8* %136, align 1
  %137 = add nuw nsw i64 %131, 1
  %138 = mul i64 %137, %33
  %139 = add i64 %138, %27
  %140 = getelementptr inbounds i8, i8* %32, i64 %139
  %141 = load i8, i8* %140, align 1
  %142 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %137
  store i8 %141, i8* %142, align 1
  %143 = add nuw nsw i64 %131, 2
  %144 = mul i64 %143, %33
  %145 = add i64 %144, %27
  %146 = getelementptr inbounds i8, i8* %32, i64 %145
  %147 = load i8, i8* %146, align 1
  %148 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %143
  store i8 %147, i8* %148, align 1
  %149 = add nuw nsw i64 %131, 3
  %150 = mul i64 %149, %33
  %151 = add i64 %150, %27
  %152 = getelementptr inbounds i8, i8* %32, i64 %151
  %153 = load i8, i8* %152, align 1
  %154 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %149
  store i8 %153, i8* %154, align 1
  %155 = add nuw nsw i64 %131, 4
  %156 = icmp eq i64 %155, %34
  br i1 %156, label %124, label %130, !llvm.loop !26

157:                                              ; preds = %163, %124
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %12) #7
  %158 = add nsw i64 %27, 1
  %159 = load i32, i32* %8, align 4
  %160 = sext i32 %159 to i64
  %161 = icmp slt i64 %158, %160
  %162 = add i64 %26, 1
  br i1 %161, label %25, label %180

163:                                              ; preds = %124, %163
  %164 = phi i64 [ %176, %163 ], [ 0, %124 ]
  %165 = load i32*, i32** %21, align 8
  %166 = getelementptr inbounds i32, i32* %165, i64 %164
  %167 = load i32, i32* %166, align 4
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = load i8*, i8** %16, align 8
  %172 = load i64, i64* %18, align 8
  %173 = mul i64 %172, %168
  %174 = add i64 %173, %27
  %175 = getelementptr inbounds i8, i8* %171, i64 %174
  store i8 %170, i8* %175, align 1
  %176 = add nuw nsw i64 %164, 1
  %177 = load i32, i32* %23, align 8
  %178 = sext i32 %177 to i64
  %179 = icmp slt i64 %176, %178
  br i1 %179, label %163, label %157

180:                                              ; preds = %157, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8RSEncode9DecodeBufEv(%class.RSEncode*) local_unnamed_addr #0 align 2 {
  %2 = alloca [256 x i8], align 16
  %3 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 0
  %4 = getelementptr inbounds %class.RSEncode, %class.RSEncode* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %class.RSEncode, %class.RSEncode* %0, i64 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %5, %7
  br i1 %8, label %9, label %18

9:                                                ; preds = %1
  %10 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 0
  %11 = getelementptr inbounds %class.RSEncode, %class.RSEncode* %0, i64 0, i32 6
  %12 = getelementptr inbounds %class.RSEncode, %class.RSEncode* %0, i64 0, i32 2
  %13 = getelementptr inbounds %class.RSEncode, %class.RSEncode* %0, i64 0, i32 8
  %14 = getelementptr inbounds %class.RSEncode, %class.RSEncode* %0, i64 0, i32 0
  %15 = getelementptr inbounds %class.RSEncode, %class.RSEncode* %0, i64 0, i32 9
  %16 = getelementptr inbounds %class.RSEncode, %class.RSEncode* %0, i64 0, i32 10
  %17 = sext i32 %5 to i64
  br label %19

18:                                               ; preds = %115, %1
  ret void

19:                                               ; preds = %9, %115
  %20 = phi i64 [ 0, %9 ], [ %120, %115 ]
  %21 = phi i64 [ %17, %9 ], [ %116, %115 ]
  %22 = add i64 %20, %17
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %10) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 256, i1 false)
  %23 = load i32, i32* %11, align 8
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %100

25:                                               ; preds = %19
  %26 = load i8*, i8** %12, align 8
  %27 = load i64, i64* %13, align 8
  %28 = sext i32 %23 to i64
  %29 = icmp ugt i32 %23, 31
  %30 = icmp eq i64 %27, 1
  %31 = and i1 %29, %30
  br i1 %31, label %32, label %40

32:                                               ; preds = %25
  %33 = getelementptr [256 x i8], [256 x i8]* %2, i64 0, i64 %28
  %34 = getelementptr i8, i8* %26, i64 %22
  %35 = add i64 %22, %28
  %36 = getelementptr i8, i8* %26, i64 %35
  %37 = icmp ult i8* %3, %36
  %38 = icmp ult i8* %34, %33
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %42

40:                                               ; preds = %25, %98, %32
  %41 = phi i64 [ 0, %32 ], [ 0, %25 ], [ %43, %98 ]
  br label %106

42:                                               ; preds = %32
  %43 = and i64 %28, -32
  %44 = add nsw i64 %43, -32
  %45 = lshr exact i64 %44, 5
  %46 = add nuw nsw i64 %45, 1
  %47 = and i64 %46, 1
  %48 = icmp eq i64 %44, 0
  br i1 %48, label %82, label %49

49:                                               ; preds = %42
  %50 = sub nuw nsw i64 %46, %47
  br label %51

51:                                               ; preds = %51, %49
  %52 = phi i64 [ 0, %49 ], [ %79, %51 ]
  %53 = phi i64 [ %50, %49 ], [ %80, %51 ]
  %54 = mul i64 %27, %52
  %55 = add i64 %54, %21
  %56 = getelementptr inbounds i8, i8* %26, i64 %55
  %57 = bitcast i8* %56 to <16 x i8>*
  %58 = load <16 x i8>, <16 x i8>* %57, align 1, !alias.scope !27
  %59 = getelementptr inbounds i8, i8* %56, i64 16
  %60 = bitcast i8* %59 to <16 x i8>*
  %61 = load <16 x i8>, <16 x i8>* %60, align 1, !alias.scope !27
  %62 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %52
  %63 = bitcast i8* %62 to <16 x i8>*
  store <16 x i8> %58, <16 x i8>* %63, align 16, !alias.scope !30, !noalias !27
  %64 = getelementptr inbounds i8, i8* %62, i64 16
  %65 = bitcast i8* %64 to <16 x i8>*
  store <16 x i8> %61, <16 x i8>* %65, align 16, !alias.scope !30, !noalias !27
  %66 = or i64 %52, 32
  %67 = mul i64 %27, %66
  %68 = add i64 %67, %21
  %69 = getelementptr inbounds i8, i8* %26, i64 %68
  %70 = bitcast i8* %69 to <16 x i8>*
  %71 = load <16 x i8>, <16 x i8>* %70, align 1, !alias.scope !27
  %72 = getelementptr inbounds i8, i8* %69, i64 16
  %73 = bitcast i8* %72 to <16 x i8>*
  %74 = load <16 x i8>, <16 x i8>* %73, align 1, !alias.scope !27
  %75 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %66
  %76 = bitcast i8* %75 to <16 x i8>*
  store <16 x i8> %71, <16 x i8>* %76, align 16, !alias.scope !30, !noalias !27
  %77 = getelementptr inbounds i8, i8* %75, i64 16
  %78 = bitcast i8* %77 to <16 x i8>*
  store <16 x i8> %74, <16 x i8>* %78, align 16, !alias.scope !30, !noalias !27
  %79 = add i64 %52, 64
  %80 = add i64 %53, -2
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %51, !llvm.loop !32

82:                                               ; preds = %51, %42
  %83 = phi i64 [ 0, %42 ], [ %79, %51 ]
  %84 = icmp eq i64 %47, 0
  br i1 %84, label %98, label %85

85:                                               ; preds = %82
  %86 = mul i64 %27, %83
  %87 = add i64 %86, %21
  %88 = getelementptr inbounds i8, i8* %26, i64 %87
  %89 = bitcast i8* %88 to <16 x i8>*
  %90 = load <16 x i8>, <16 x i8>* %89, align 1, !alias.scope !27
  %91 = getelementptr inbounds i8, i8* %88, i64 16
  %92 = bitcast i8* %91 to <16 x i8>*
  %93 = load <16 x i8>, <16 x i8>* %92, align 1, !alias.scope !27
  %94 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %83
  %95 = bitcast i8* %94 to <16 x i8>*
  store <16 x i8> %90, <16 x i8>* %95, align 16, !alias.scope !30, !noalias !27
  %96 = getelementptr inbounds i8, i8* %94, i64 16
  %97 = bitcast i8* %96 to <16 x i8>*
  store <16 x i8> %93, <16 x i8>* %97, align 16, !alias.scope !30, !noalias !27
  br label %98

98:                                               ; preds = %82, %85
  %99 = icmp eq i64 %43, %28
  br i1 %99, label %100, label %40

100:                                              ; preds = %106, %98, %19
  %101 = load i32*, i32** %15, align 8
  %102 = load i32, i32* %16, align 8
  %103 = call zeroext i1 @_ZN7RSCoder6DecodeEPhiPii(%class.RSCoder* %14, i8* nonnull %10, i32 %23, i32* %101, i32 %102) #7
  %104 = load i32, i32* %16, align 8
  %105 = icmp sgt i32 %104, 0
  br i1 %105, label %121, label %115

106:                                              ; preds = %40, %106
  %107 = phi i64 [ %113, %106 ], [ %41, %40 ]
  %108 = mul i64 %27, %107
  %109 = add i64 %108, %21
  %110 = getelementptr inbounds i8, i8* %26, i64 %109
  %111 = load i8, i8* %110, align 1
  %112 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %107
  store i8 %111, i8* %112, align 1
  %113 = add nuw nsw i64 %107, 1
  %114 = icmp slt i64 %113, %28
  br i1 %114, label %106, label %100, !llvm.loop !33

115:                                              ; preds = %121, %100
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %10) #7
  %116 = add nsw i64 %21, 1
  %117 = load i32, i32* %6, align 4
  %118 = sext i32 %117 to i64
  %119 = icmp slt i64 %116, %118
  %120 = add i64 %20, 1
  br i1 %119, label %19, label %18

121:                                              ; preds = %100, %121
  %122 = phi i64 [ %134, %121 ], [ 0, %100 ]
  %123 = load i32*, i32** %15, align 8
  %124 = getelementptr inbounds i32, i32* %123, i64 %122
  %125 = load i32, i32* %124, align 4
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = load i8*, i8** %12, align 8
  %130 = load i64, i64* %13, align 8
  %131 = mul i64 %130, %126
  %132 = add i64 %131, %21
  %133 = getelementptr inbounds i8, i8* %129, i64 %132
  store i8 %128, i8* %133, align 1
  %134 = add nuw nsw i64 %122, 1
  %135 = load i32, i32* %16, align 8
  %136 = sext i32 %135 to i64
  %137 = icmp slt i64 %134, %136
  br i1 %137, label %121, label %115
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11RecVolumes3C2EP10RAROptionsb(%class.RecVolumes3*, %class.RAROptions* nocapture readonly, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = bitcast %class.RecVolumes3* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 2081, i1 false)
  br i1 %2, label %5, label %7

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.RecVolumes3, %class.RecVolumes3* %0, i64 0, i32 2
  store %class.ThreadPool* null, %class.ThreadPool** %6, align 8
  br label %16

7:                                                ; preds = %3
  %8 = bitcast %class.RecVolumes3* %0 to i8*
  %9 = getelementptr inbounds %class.RecVolumes3, %class.RecVolumes3* %0, i64 0, i32 1
  tail call void @_ZN5ArrayIhE3AddEm(%class.Array* %9, i64 67108864) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 2048, i1 false)
  %10 = tail call i8* @_Znwm(i64 1792) #8
  %11 = bitcast i8* %10 to %class.ThreadPool*
  %12 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %1, i64 0, i32 106
  %13 = load i32, i32* %12, align 8
  tail call void @_ZN10ThreadPoolC1Ej(%class.ThreadPool* nonnull %11, i32 %13) #7
  %14 = getelementptr inbounds %class.RecVolumes3, %class.RecVolumes3* %0, i64 0, i32 2
  %15 = bitcast %class.ThreadPool** %14 to i8**
  store i8* %10, i8** %15, align 8
  br label %16

16:                                               ; preds = %7, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN10ThreadPoolC1Ej(%class.ThreadPool*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11RecVolumes3D2Ev(%class.RecVolumes3* nocapture readonly) unnamed_addr #0 align 2 {
  br label %6

2:                                                ; preds = %16
  %3 = getelementptr inbounds %class.RecVolumes3, %class.RecVolumes3* %0, i64 0, i32 2
  %4 = load %class.ThreadPool*, %class.ThreadPool** %3, align 8
  %5 = icmp eq %class.ThreadPool* %4, null
  br i1 %5, label %21, label %19

6:                                                ; preds = %16, %1
  %7 = phi i64 [ 0, %1 ], [ %17, %16 ]
  %8 = getelementptr inbounds %class.RecVolumes3, %class.RecVolumes3* %0, i64 0, i32 0, i64 %7
  %9 = load %class.File*, %class.File** %8, align 8
  %10 = icmp eq %class.File* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %6
  %12 = bitcast %class.File* %9 to void (%class.File*)***
  %13 = load void (%class.File*)**, void (%class.File*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.File*)*, void (%class.File*)** %13, i64 1
  %15 = load void (%class.File*)*, void (%class.File*)** %14, align 8
  tail call void %15(%class.File* nonnull %9) #7
  br label %16

16:                                               ; preds = %6, %11
  %17 = add nuw nsw i64 %7, 1
  %18 = icmp eq i64 %17, 256
  br i1 %18, label %2, label %6

19:                                               ; preds = %2
  tail call void @_ZN10ThreadPoolD1Ev(%class.ThreadPool* nonnull %4) #7
  %20 = bitcast %class.ThreadPool* %4 to i8*
  tail call void @_ZdlPv(i8* %20) #8
  br label %21

21:                                               ; preds = %19, %2
  %22 = getelementptr inbounds %class.RecVolumes3, %class.RecVolumes3* %0, i64 0, i32 1, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %35, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.RecVolumes3, %class.RecVolumes3* %0, i64 0, i32 1, i32 4
  %27 = load i8, i8* %26, align 8, !range !34
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %class.RecVolumes3, %class.RecVolumes3* %0, i64 0, i32 1, i32 2
  %31 = load i64, i64* %30, align 8
  tail call void @_Z9cleandataPvm(i8* nonnull %23, i64 %31) #7
  %32 = load i8*, i8** %22, align 8
  br label %33

33:                                               ; preds = %29, %25
  %34 = phi i8* [ %23, %25 ], [ %32, %29 ]
  tail call void @free(i8* %34) #7
  br label %35

35:                                               ; preds = %21, %33
  ret void
}

; Function Attrs: nounwind
declare void @_ZN10ThreadPoolD1Ev(%class.ThreadPool*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN7RSCoder6EncodeEPhiS0_(%class.RSCoder*, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11RecVolumes37RestoreEP10RAROptionsPKwb(%class.RecVolumes3* nocapture, %class.RAROptions*, i32*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca [256 x i8], align 16
  %6 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 0
  %7 = alloca %class.uiMsgStore, align 16
  %8 = alloca %class.uiMsgStore, align 16
  %9 = alloca %class.uiMsgStore, align 16
  %10 = alloca %class.uiMsgStore, align 16
  %11 = alloca %class.uiMsgStore, align 16
  %12 = alloca %class.uiMsgStore, align 8
  %13 = alloca %class.uiMsgStore, align 8
  %14 = alloca %class.uiMsgStore, align 16
  %15 = alloca %class.uiMsgStore, align 16
  %16 = alloca %class.uiMsgStore, align 8
  %17 = alloca %class.uiMsgStore, align 8
  %18 = alloca %class.uiMsgStore, align 8
  %19 = alloca %class.uiMsgStore, align 8
  %20 = alloca %class.uiMsgStore, align 16
  %21 = alloca %class.uiMsgStore, align 8
  %22 = alloca %class.uiMsgStore, align 8
  %23 = alloca %class.uiMsgStore, align 8
  %24 = alloca %class.uiMsgStore, align 16
  %25 = alloca %class.uiMsgStore, align 8
  %26 = alloca [2048 x i32], align 16
  %27 = alloca %class.FindFile, align 8
  %28 = alloca %struct.FindData, align 8
  %29 = alloca %class.Archive, align 8
  %30 = alloca %class.Archive, align 8
  %31 = alloca [2048 x i32], align 16
  %32 = alloca %class.FindFile, align 8
  %33 = alloca %struct.FindData, align 8
  %34 = alloca [2048 x i32], align 16
  %35 = alloca %class.File, align 8
  %36 = alloca i32, align 4
  %37 = alloca [256 x i8], align 16
  %38 = alloca [2048 x i32], align 16
  %39 = alloca i32, align 4
  %40 = alloca [2048 x i32], align 16
  %41 = alloca [256 x i32], align 16
  %42 = alloca %class.Archive, align 8
  %43 = alloca [8192 x i8], align 16
  %44 = bitcast [2048 x i32]* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %44) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %44, i8 -86, i64 8192, i1 false)
  %45 = getelementptr inbounds [2048 x i32], [2048 x i32]* %26, i64 0, i64 0
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %45, i32* %2, i64 2048) #7
  %46 = call i32* @_Z6GetExtPKw(i32* nonnull %45) #7
  %47 = icmp eq i32* %46, null
  br i1 %47, label %118, label %48

48:                                               ; preds = %4
  %49 = call i32 @_Z8wcsicompPKwS0_(i32* nonnull %46, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str, i64 0, i64 0)) #7
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %118

51:                                               ; preds = %48
  %52 = call i32* @_Z6GetExtPKw(i32* nonnull %45) #7
  %53 = icmp eq i32* %52, null
  br i1 %53, label %79, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds i32, i32* %52, i64 -1
  %56 = icmp ugt i32* %55, %45
  br i1 %56, label %57, label %76

57:                                               ; preds = %54, %72
  %58 = phi i32* [ %74, %72 ], [ %55, %54 ]
  %59 = phi i32 [ %73, %72 ], [ 0, %54 ]
  %60 = phi i32* [ %58, %72 ], [ %52, %54 ]
  %61 = load i32, i32* %58, align 4
  %62 = call zeroext i1 @_Z7IsDigiti(i32 %61) #7
  br i1 %62, label %72, label %63

63:                                               ; preds = %57
  %64 = load i32, i32* %58, align 4
  %65 = icmp eq i32 %64, 95
  br i1 %65, label %66, label %76

66:                                               ; preds = %63
  %67 = getelementptr inbounds i32, i32* %60, i64 -2
  %68 = load i32, i32* %67, align 4
  %69 = call zeroext i1 @_Z7IsDigiti(i32 %68) #7
  br i1 %69, label %70, label %76

70:                                               ; preds = %66
  %71 = add nsw i32 %59, 1
  br label %72

72:                                               ; preds = %70, %57
  %73 = phi i32 [ %59, %57 ], [ %71, %70 ]
  %74 = getelementptr inbounds i32, i32* %58, i64 -1
  %75 = icmp ugt i32* %74, %45
  br i1 %75, label %57, label %76

76:                                               ; preds = %72, %66, %63, %54
  %77 = phi i32 [ 0, %54 ], [ %73, %72 ], [ %59, %66 ], [ %59, %63 ]
  %78 = icmp slt i32 %77, 2
  br label %79

79:                                               ; preds = %51, %76
  %80 = phi i1 [ %78, %76 ], [ true, %51 ]
  %81 = zext i1 %80 to i8
  %82 = getelementptr inbounds [2048 x i32], [2048 x i32]* %26, i64 0, i64 1
  %83 = icmp ugt i32* %46, %82
  br i1 %83, label %84, label %94

84:                                               ; preds = %79, %92
  %85 = phi i32* [ %86, %92 ], [ %46, %79 ]
  %86 = getelementptr inbounds i32, i32* %85, i64 -1
  %87 = load i32, i32* %86, align 4
  %88 = call zeroext i1 @_Z7IsDigiti(i32 %87) #7
  br i1 %88, label %92, label %89

89:                                               ; preds = %84
  %90 = load i32, i32* %86, align 4
  %91 = icmp eq i32 %90, 95
  br i1 %91, label %92, label %94

92:                                               ; preds = %84, %89
  %93 = icmp ugt i32* %86, %82
  br i1 %93, label %84, label %94

94:                                               ; preds = %89, %92, %79
  %95 = phi i32* [ %46, %79 ], [ %86, %92 ], [ %85, %89 ]
  %96 = ptrtoint i32* %95 to i64
  %97 = ptrtoint [2048 x i32]* %26 to i64
  %98 = sub i64 %96, %97
  %99 = ashr exact i64 %98, 2
  %100 = sub nsw i64 2048, %99
  call void @_Z8wcsncpyzPwPKwm(i32* %95, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.1, i64 0, i64 0), i64 %100) #7
  %101 = bitcast %class.FindFile* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8208, i8* nonnull %101) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 -86, i64 8208, i1 false)
  call void @_ZN8FindFileC1Ev(%class.FindFile* nonnull %27) #7
  call void @_ZN8FindFile7SetMaskEPKw(%class.FindFile* nonnull %27, i32* nonnull %45) #7
  %102 = bitcast %struct.FindData* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8240, i8* nonnull %102) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %102, i8 -86, i64 8240, i1 false)
  %103 = getelementptr inbounds %struct.FindData, %struct.FindData* %28, i64 0, i32 6, i32 0
  %104 = bitcast i64* %103 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 24, i1 false) #7
  %105 = call zeroext i1 @_ZN8FindFile4NextEP8FindDatab(%class.FindFile* nonnull %27, %struct.FindData* nonnull %28, i1 zeroext false) #7
  br i1 %105, label %106, label %117

106:                                              ; preds = %94
  %107 = bitcast %class.Archive* %29 to i8*
  %108 = getelementptr inbounds %class.Archive, %class.Archive* %29, i64 0, i32 0
  %109 = getelementptr inbounds %struct.FindData, %struct.FindData* %28, i64 0, i32 0, i64 0
  br label %110

110:                                              ; preds = %106, %115
  call void @llvm.lifetime.start.p0i8(i64 65336, i8* nonnull %107) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %107, i8 -86, i64 65336, i1 false)
  call void @_ZN7ArchiveC1EP10RAROptions(%class.Archive* nonnull %29, %class.RAROptions* %1) #7
  %111 = call zeroext i1 @_ZN4File5WOpenEPKw(%class.File* nonnull %108, i32* nonnull %109) #7
  br i1 %111, label %112, label %115

112:                                              ; preds = %110
  %113 = call zeroext i1 @_ZN7Archive9IsArchiveEb(%class.Archive* nonnull %29, i1 zeroext true) #7
  br i1 %113, label %114, label %115

114:                                              ; preds = %112
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %45, i32* nonnull %109, i64 2048) #7
  call void @_ZN7ArchiveD1Ev(%class.Archive* nonnull %29) #7
  call void @llvm.lifetime.end.p0i8(i64 65336, i8* nonnull %107) #7
  br label %117

115:                                              ; preds = %110, %112
  call void @_ZN7ArchiveD1Ev(%class.Archive* nonnull %29) #7
  call void @llvm.lifetime.end.p0i8(i64 65336, i8* nonnull %107) #7
  %116 = call zeroext i1 @_ZN8FindFile4NextEP8FindDatab(%class.FindFile* nonnull %27, %struct.FindData* nonnull %28, i1 zeroext false) #7
  br i1 %116, label %110, label %117

117:                                              ; preds = %115, %94, %114
  call void @llvm.lifetime.end.p0i8(i64 8240, i8* nonnull %102) #7
  call void @_ZN8FindFileD1Ev(%class.FindFile* nonnull %27) #7
  call void @llvm.lifetime.end.p0i8(i64 8208, i8* nonnull %101) #7
  br label %118

118:                                              ; preds = %4, %117, %48
  %119 = phi i1 [ false, %117 ], [ true, %48 ], [ true, %4 ]
  %120 = phi i8 [ %81, %117 ], [ 0, %48 ], [ 0, %4 ]
  %121 = bitcast %class.Archive* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 65336, i8* nonnull %121) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 -86, i64 65336, i1 false)
  call void @_ZN7ArchiveC1EP10RAROptions(%class.Archive* nonnull %30, %class.RAROptions* %1) #7
  %122 = call zeroext i1 @_ZN7Archive10WCheckOpenEPKw(%class.Archive* nonnull %30, i32* nonnull %45) #7
  br i1 %122, label %123, label %1043

123:                                              ; preds = %118
  %124 = getelementptr inbounds %class.Archive, %class.Archive* %30, i64 0, i32 35
  %125 = load i8, i8* %124, align 1, !range !34
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %127, label %141

127:                                              ; preds = %123
  %128 = bitcast %class.uiMsgStore* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %128) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %128, i8 -86, i64 112, i1 false) #7
  %129 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %25, i64 0, i32 0, i64 0
  %130 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %25, i64 0, i32 0, i64 1
  %131 = bitcast i32** %130 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %131, align 8
  %132 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %25, i64 0, i32 0, i64 3
  %133 = bitcast i32** %132 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %133, align 8
  %134 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %25, i64 0, i32 0, i64 5
  %135 = bitcast i32** %134 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %135, align 8
  %136 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %25, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32** %136, align 8
  %137 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %25, i64 0, i32 1, i64 0
  %138 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %25, i64 0, i32 4
  %139 = bitcast i32* %137 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %139, i8 0, i64 40, i1 false) #7
  store i32 47, i32* %138, align 8
  %140 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %25, i64 0, i32 2
  store i32 1, i32* %140, align 8
  store i32* %45, i32** %129, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %25) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %128) #7
  br label %1043

141:                                              ; preds = %123
  %142 = getelementptr inbounds %class.Archive, %class.Archive* %30, i64 0, i32 40
  %143 = load i8, i8* %142, align 2, !range !34
  %144 = icmp ne i8 %143, 0
  %145 = getelementptr inbounds %class.Archive, %class.Archive* %30, i64 0, i32 0
  %146 = call zeroext i1 @_ZN4File5CloseEv(%class.File* nonnull %145) #7
  %147 = call i32* @_Z18VolNameToFirstNamePKwPwmb(i32* nonnull %45, i32* nonnull %45, i64 2048, i1 zeroext %144) #7
  %148 = bitcast [2048 x i32]* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %148) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %148, i8 -86, i64 8192, i1 false)
  %149 = getelementptr inbounds [2048 x i32], [2048 x i32]* %31, i64 0, i64 0
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %149, i32* nonnull %45, i64 2048) #7
  %150 = ptrtoint i32* %147 to i64
  %151 = ptrtoint [2048 x i32]* %26 to i64
  %152 = sub i64 %150, %151
  %153 = ashr exact i64 %152, 2
  %154 = getelementptr inbounds [2048 x i32], [2048 x i32]* %31, i64 0, i64 %153
  %155 = sub nsw i64 2048, %153
  call void @_Z8wcsncpyzPwPKwm(i32* %154, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @.str.2, i64 0, i64 0), i64 %155) #7
  %156 = bitcast %class.FindFile* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8208, i8* nonnull %156) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %156, i8 -86, i64 8208, i1 false)
  call void @_ZN8FindFileC1Ev(%class.FindFile* nonnull %32) #7
  call void @_ZN8FindFile7SetMaskEPKw(%class.FindFile* nonnull %32, i32* nonnull %149) #7
  %157 = bitcast %struct.FindData* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8240, i8* nonnull %157) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %157, i8 -86, i64 8240, i1 false)
  %158 = getelementptr inbounds %struct.FindData, %struct.FindData* %33, i64 0, i32 6, i32 0
  %159 = bitcast i64* %158 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %159, i8 0, i64 24, i1 false) #7
  %160 = bitcast [2048 x i32]* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %160) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %160, i8 -86, i64 8192, i1 false)
  %161 = call zeroext i1 @_ZN8FindFile4NextEP8FindDatab(%class.FindFile* nonnull %32, %struct.FindData* nonnull %33, i1 zeroext false) #7
  br i1 %161, label %162, label %345

162:                                              ; preds = %141
  %163 = getelementptr inbounds %struct.FindData, %struct.FindData* %33, i64 0, i32 0, i64 0
  %164 = getelementptr inbounds %struct.FindData, %struct.FindData* %33, i64 0, i32 0, i64 %153
  %165 = bitcast %class.uiMsgStore* %24 to i8*
  %166 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %24, i64 0, i32 0, i64 2
  %167 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %24, i64 0, i32 0, i64 4
  %168 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %24, i64 0, i32 0, i64 6
  %169 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %24, i64 0, i32 1, i64 0
  %170 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %24, i64 0, i32 4
  %171 = bitcast i32* %169 to i8*
  %172 = bitcast %class.uiMsgStore* %23 to i8*
  %173 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %23, i64 0, i32 0, i64 0
  %174 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %23, i64 0, i32 0, i64 1
  %175 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %23, i64 0, i32 0, i64 3
  %176 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %23, i64 0, i32 0, i64 5
  %177 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %23, i64 0, i32 0, i64 7
  %178 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %23, i64 0, i32 1, i64 0
  %179 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %23, i64 0, i32 4
  %180 = bitcast i32* %178 to i8*
  %181 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %23, i64 0, i32 2
  %182 = bitcast %class.File* %35 to i8*
  %183 = bitcast i32* %36 to i8*
  %184 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %1, i64 0, i32 106
  %185 = bitcast %class.uiMsgStore* %22 to i8*
  %186 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %22, i64 0, i32 0, i64 0
  %187 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %22, i64 0, i32 0, i64 1
  %188 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %22, i64 0, i32 0, i64 3
  %189 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %22, i64 0, i32 0, i64 5
  %190 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %22, i64 0, i32 0, i64 7
  %191 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %22, i64 0, i32 1, i64 0
  %192 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %22, i64 0, i32 4
  %193 = bitcast i32* %191 to i8*
  %194 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %22, i64 0, i32 2
  %195 = getelementptr inbounds [2048 x i32], [2048 x i32]* %34, i64 0, i64 0
  %196 = bitcast %class.uiMsgStore* %24 to <2 x i32*>*
  %197 = bitcast i32** %166 to <2 x i32*>*
  %198 = bitcast i32** %167 to <2 x i32*>*
  %199 = bitcast i32** %168 to <2 x i32*>*
  %200 = bitcast i32** %174 to <2 x i32*>*
  %201 = bitcast i32** %175 to <2 x i32*>*
  %202 = bitcast i32** %176 to <2 x i32*>*
  %203 = bitcast i32** %187 to <2 x i32*>*
  %204 = bitcast i32** %188 to <2 x i32*>*
  %205 = bitcast i32** %189 to <2 x i32*>*
  br label %206

206:                                              ; preds = %162, %337
  %207 = phi i32 [ 0, %162 ], [ %338, %337 ]
  %208 = phi i32 [ 0, %162 ], [ %339, %337 ]
  %209 = phi i32 [ 0, %162 ], [ %340, %337 ]
  %210 = phi i8 [ 0, %162 ], [ %341, %337 ]
  %211 = phi i64 [ 0, %162 ], [ %342, %337 ]
  %212 = phi i8 [ %120, %162 ], [ %343, %337 ]
  %213 = and i8 %212, 1
  %214 = icmp eq i8 %213, 0
  %215 = and i1 %214, %119
  br i1 %215, label %216, label %236

216:                                              ; preds = %206
  %217 = call i32* @_Z6GetExtPKw(i32* nonnull %163) #7
  %218 = icmp eq i32* %217, null
  br i1 %218, label %240, label %219

219:                                              ; preds = %216
  %220 = getelementptr inbounds i32, i32* %217, i64 -1
  %221 = icmp ugt i32* %220, %163
  br i1 %221, label %222, label %232

222:                                              ; preds = %219, %228
  %223 = phi i32* [ %230, %228 ], [ %220, %219 ]
  %224 = phi i32 [ %229, %228 ], [ 0, %219 ]
  %225 = load i32, i32* %223, align 4
  switch i32 %225, label %228 [
    i32 46, label %232
    i32 95, label %226
  ]

226:                                              ; preds = %222
  %227 = add nsw i32 %224, 1
  br label %228

228:                                              ; preds = %222, %226
  %229 = phi i32 [ %227, %226 ], [ %224, %222 ]
  %230 = getelementptr inbounds i32, i32* %223, i64 -1
  %231 = icmp ugt i32* %230, %163
  br i1 %231, label %222, label %232

232:                                              ; preds = %228, %222, %219
  %233 = phi i32 [ 0, %219 ], [ %224, %222 ], [ %229, %228 ]
  %234 = icmp ne i32 %233, 2
  %235 = zext i1 %234 to i8
  br label %236

236:                                              ; preds = %232, %206
  %237 = phi i8 [ %212, %206 ], [ %235, %232 ]
  %238 = and i8 %237, 1
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %279, label %240

240:                                              ; preds = %216, %236
  %241 = phi i8 [ %237, %236 ], [ 1, %216 ]
  %242 = and i8 %210, 1
  %243 = icmp eq i8 %242, 0
  br i1 %243, label %244, label %245

244:                                              ; preds = %240
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %165) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %165, i8 -86, i64 112, i1 false) #7
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %196, align 16
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %197, align 16
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %198, align 16
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %199, align 16
  call void @llvm.memset.p0i8.i64(i8* align 16 %171, i8 0, i64 40, i1 false) #7
  store i32 118, i32* %170, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %24) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %165) #7
  br label %245

245:                                              ; preds = %240, %244
  %246 = phi i8 [ %210, %240 ], [ 1, %244 ]
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %172) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %172, i8 -86, i64 112, i1 false) #7
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %200, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %201, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %202, align 8
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32** %177, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %180, i8 0, i64 40, i1 false) #7
  store i32 100, i32* %179, align 8
  store i32 1, i32* %181, align 8
  store i32* %163, i32** %173, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %23) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %172) #7
  call void @llvm.lifetime.start.p0i8(i64 8248, i8* nonnull %182) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %182, i8 -86, i64 8248, i1 false)
  call void @_ZN4FileC1Ev(%class.File* nonnull %35) #7
  call void @_ZN4File5TOpenEPKw(%class.File* nonnull %35, i32* nonnull %163) #7
  call void @_ZN4File4SeekEli(%class.File* nonnull %35, i64 0, i32 2) #7
  %247 = call i64 @_ZN4File4TellEv(%class.File* nonnull %35) #7
  %248 = add nsw i64 %247, -7
  call void @_ZN4File4SeekEli(%class.File* nonnull %35, i64 %248, i32 0) #7
  %249 = call zeroext i8 @_ZN4File7GetByteEv(%class.File* nonnull %35) #7
  %250 = zext i8 %249 to i32
  %251 = add nuw nsw i32 %250, 1
  %252 = call zeroext i8 @_ZN4File7GetByteEv(%class.File* nonnull %35) #7
  %253 = zext i8 %252 to i32
  %254 = add nuw nsw i32 %253, 1
  %255 = call zeroext i8 @_ZN4File7GetByteEv(%class.File* nonnull %35) #7
  %256 = zext i8 %255 to i32
  %257 = add nuw nsw i32 %256, 1
  %258 = call zeroext i8 @_ZN4File7GetByteEv(%class.File* nonnull %35) #7
  %259 = zext i8 %258 to i32
  %260 = call zeroext i8 @_ZN4File7GetByteEv(%class.File* nonnull %35) #7
  %261 = zext i8 %260 to i32
  %262 = shl nuw nsw i32 %261, 8
  %263 = or i32 %262, %259
  %264 = call zeroext i8 @_ZN4File7GetByteEv(%class.File* nonnull %35) #7
  %265 = zext i8 %264 to i32
  %266 = shl nuw nsw i32 %265, 16
  %267 = or i32 %266, %263
  %268 = call zeroext i8 @_ZN4File7GetByteEv(%class.File* nonnull %35) #7
  %269 = zext i8 %268 to i32
  %270 = shl nuw i32 %269, 24
  %271 = or i32 %270, %267
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %183) #7
  store i32 -1431655766, i32* %36, align 4
  %272 = load i32, i32* %184, align 8
  %273 = add nsw i64 %247, -4
  call void @_Z11CalcFileSumP4FilePjPhjlj(%class.File* nonnull %35, i32* nonnull %36, i8* null, i32 %272, i64 %273, i32 0) #7
  %274 = load i32, i32* %36, align 4
  %275 = icmp eq i32 %271, %274
  br i1 %275, label %277, label %276

276:                                              ; preds = %245
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %185) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %185, i8 -86, i64 112, i1 false) #7
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %203, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %204, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %205, align 8
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32** %190, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %193, i8 0, i64 40, i1 false) #7
  store i32 123, i32* %192, align 8
  store i32 1, i32* %194, align 8
  store i32* %163, i32** %186, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %22) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %185) #7
  br label %277

277:                                              ; preds = %245, %276
  %278 = phi i32 [ 6, %276 ], [ 0, %245 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %183) #7
  call void @_ZN4FileD1Ev(%class.File* nonnull %35) #7
  call void @llvm.lifetime.end.p0i8(i64 8248, i8* nonnull %182) #7
  switch i32 %278, label %1041 [
    i32 0, label %295
    i32 6, label %337
  ]

279:                                              ; preds = %236
  %280 = call i32* @_Z6GetExtPKw(i32* nonnull %163) #7
  %281 = icmp eq i32* %280, null
  br i1 %281, label %337, label %282

282:                                              ; preds = %279, %282
  %283 = phi i32* [ %284, %282 ], [ %280, %279 ]
  %284 = getelementptr inbounds i32, i32* %283, i64 -1
  %285 = load i32, i32* %284, align 4
  %286 = call zeroext i1 @_Z7IsDigiti(i32 %285) #7
  %287 = xor i1 %286, true
  %288 = icmp ult i32* %284, %164
  %289 = or i1 %288, %287
  br i1 %289, label %290, label %282

290:                                              ; preds = %282
  %291 = call i32 @_Z5atoiwPKw(i32* %283) #7
  %292 = icmp eq i32 %291, 0
  %293 = icmp sgt i32 %291, 255
  %294 = or i1 %292, %293
  br label %1045

295:                                              ; preds = %277, %1067
  %296 = phi i32 [ %257, %277 ], [ %291, %1067 ]
  %297 = phi i32 [ %251, %277 ], [ %1068, %1067 ]
  %298 = phi i32 [ %254, %277 ], [ %1054, %1067 ]
  %299 = phi i8 [ %241, %277 ], [ %237, %1067 ]
  %300 = phi i8 [ %246, %277 ], [ %210, %1067 ]
  %301 = add nsw i32 %297, %298
  %302 = icmp sgt i32 %301, 255
  br i1 %302, label %337, label %303

303:                                              ; preds = %295
  %304 = icmp eq i32 %208, 0
  %305 = icmp eq i32 %208, %298
  %306 = or i1 %304, %305
  br i1 %306, label %307, label %311

307:                                              ; preds = %303
  %308 = icmp eq i32 %209, 0
  %309 = icmp eq i32 %209, %297
  %310 = or i1 %308, %309
  br i1 %310, label %325, label %311

311:                                              ; preds = %303, %307
  %312 = bitcast %class.uiMsgStore* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %312) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %312, i8 -86, i64 112, i1 false) #7
  %313 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %21, i64 0, i32 0, i64 0
  %314 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %21, i64 0, i32 0, i64 1
  %315 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %21, i64 0, i32 0, i64 2
  %316 = bitcast i32** %315 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %316, align 8
  %317 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %21, i64 0, i32 0, i64 4
  %318 = bitcast i32** %317 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %318, align 8
  %319 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %21, i64 0, i32 0, i64 6
  %320 = bitcast i32** %319 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %320, align 8
  %321 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %21, i64 0, i32 1, i64 0
  %322 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %21, i64 0, i32 4
  %323 = bitcast i32* %321 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %323, i8 0, i64 40, i1 false) #7
  store i32 50, i32* %322, align 8
  %324 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %21, i64 0, i32 2
  store i32* %163, i32** %313, align 8
  store i32 2, i32* %324, align 8
  store i32* %195, i32** %314, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %21) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %312) #7
  br label %1041

325:                                              ; preds = %307
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %195, i32* nonnull %163, i64 2048) #7
  %326 = call i8* @_Znwm(i64 8248) #8
  %327 = bitcast i8* %326 to %class.File*
  call void @_ZN4FileC1Ev(%class.File* nonnull %327) #7
  call void @_ZN4File5TOpenEPKw(%class.File* nonnull %327, i32* nonnull %163) #7
  %328 = add i32 %297, -1
  %329 = add i32 %328, %296
  %330 = sext i32 %329 to i64
  %331 = getelementptr inbounds %class.RecVolumes3, %class.RecVolumes3* %0, i64 0, i32 0, i64 %330
  %332 = bitcast %class.File** %331 to i8**
  store i8* %326, i8** %332, align 8
  %333 = add nsw i32 %207, 1
  %334 = icmp eq i64 %211, 0
  br i1 %334, label %335, label %337

335:                                              ; preds = %325
  %336 = call i64 @_ZN4File10FileLengthEv(%class.File* nonnull %327) #7
  br label %337

337:                                              ; preds = %277, %279, %1067, %325, %335, %295
  %338 = phi i32 [ %207, %279 ], [ %207, %1067 ], [ %333, %325 ], [ %333, %335 ], [ %207, %295 ], [ %207, %277 ]
  %339 = phi i32 [ %208, %279 ], [ %208, %1067 ], [ %298, %325 ], [ %298, %335 ], [ %208, %295 ], [ %208, %277 ]
  %340 = phi i32 [ %209, %279 ], [ %209, %1067 ], [ %297, %325 ], [ %297, %335 ], [ %209, %295 ], [ %209, %277 ]
  %341 = phi i8 [ %210, %279 ], [ %210, %1067 ], [ %300, %325 ], [ %300, %335 ], [ %300, %295 ], [ %246, %277 ]
  %342 = phi i64 [ %211, %279 ], [ %211, %1067 ], [ %211, %325 ], [ %336, %335 ], [ %211, %295 ], [ %211, %277 ]
  %343 = phi i8 [ %237, %279 ], [ %237, %1067 ], [ %299, %325 ], [ %299, %335 ], [ %299, %295 ], [ %241, %277 ]
  %344 = call zeroext i1 @_ZN8FindFile4NextEP8FindDatab(%class.FindFile* nonnull %32, %struct.FindData* nonnull %33, i1 zeroext false) #7
  br i1 %344, label %206, label %345

345:                                              ; preds = %337, %141
  %346 = phi i8 [ %120, %141 ], [ %343, %337 ]
  %347 = phi i64 [ 0, %141 ], [ %342, %337 ]
  %348 = phi i32 [ 0, %141 ], [ %340, %337 ]
  %349 = phi i32 [ 0, %141 ], [ %339, %337 ]
  %350 = phi i32 [ 0, %141 ], [ %338, %337 ]
  %351 = xor i1 %3, true
  %352 = icmp ne i32 %350, 0
  %353 = or i1 %352, %351
  br i1 %353, label %354, label %1041

354:                                              ; preds = %345
  %355 = bitcast %class.uiMsgStore* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %355) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %355, i8 -86, i64 112, i1 false) #7
  %356 = bitcast %class.uiMsgStore* %20 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %356, align 16
  %357 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %20, i64 0, i32 0, i64 2
  %358 = bitcast i32** %357 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %358, align 16
  %359 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %20, i64 0, i32 0, i64 4
  %360 = bitcast i32** %359 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %360, align 16
  %361 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %20, i64 0, i32 0, i64 6
  %362 = bitcast i32** %361 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %362, align 16
  %363 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %20, i64 0, i32 1, i64 0
  %364 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %20, i64 0, i32 4
  %365 = bitcast i32* %363 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %365, i8 0, i64 40, i1 false) #7
  store i32 119, i32* %364, align 8
  %366 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %20, i64 0, i32 3
  store i32 1, i32* %366, align 4
  store i32 %350, i32* %363, align 16
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %20) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %355) #7
  %367 = icmp eq i32 %350, 0
  br i1 %367, label %1041, label %368

368:                                              ; preds = %354
  %369 = getelementptr inbounds [256 x i8], [256 x i8]* %37, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %369) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %369, i8 0, i64 256, i1 false)
  %370 = bitcast [2048 x i32]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %370) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %370, i8 -86, i64 8192, i1 false)
  %371 = getelementptr inbounds [2048 x i32], [2048 x i32]* %38, i64 0, i64 0
  store i32 0, i32* %371, align 16
  %372 = icmp sgt i32 %348, 0
  br i1 %372, label %373, label %557

373:                                              ; preds = %368
  %374 = bitcast %class.uiMsgStore* %19 to i8*
  %375 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %19, i64 0, i32 0, i64 0
  %376 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %19, i64 0, i32 0, i64 1
  %377 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %19, i64 0, i32 0, i64 3
  %378 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %19, i64 0, i32 0, i64 5
  %379 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %19, i64 0, i32 0, i64 7
  %380 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %19, i64 0, i32 1, i64 0
  %381 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %19, i64 0, i32 4
  %382 = bitcast i32* %380 to i8*
  %383 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %19, i64 0, i32 2
  %384 = bitcast i32* %39 to i8*
  %385 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %1, i64 0, i32 106
  %386 = bitcast %class.uiMsgStore* %18 to i8*
  %387 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %18, i64 0, i32 0, i64 0
  %388 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %18, i64 0, i32 0, i64 1
  %389 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %18, i64 0, i32 0, i64 3
  %390 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %18, i64 0, i32 0, i64 5
  %391 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %18, i64 0, i32 0, i64 7
  %392 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %18, i64 0, i32 1, i64 0
  %393 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %18, i64 0, i32 4
  %394 = bitcast i32* %392 to i8*
  %395 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %18, i64 0, i32 2
  %396 = bitcast [2048 x i32]* %40 to i8*
  %397 = getelementptr inbounds [2048 x i32], [2048 x i32]* %40, i64 0, i64 0
  %398 = bitcast %class.uiMsgStore* %17 to i8*
  %399 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %17, i64 0, i32 0, i64 0
  %400 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %17, i64 0, i32 0, i64 1
  %401 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %17, i64 0, i32 0, i64 3
  %402 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %17, i64 0, i32 0, i64 5
  %403 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %17, i64 0, i32 0, i64 7
  %404 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %17, i64 0, i32 1, i64 0
  %405 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %17, i64 0, i32 4
  %406 = bitcast i32* %404 to i8*
  %407 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %17, i64 0, i32 2
  %408 = bitcast %class.uiMsgStore* %16 to i8*
  %409 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %16, i64 0, i32 0, i64 0
  %410 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %16, i64 0, i32 0, i64 1
  %411 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %16, i64 0, i32 0, i64 2
  %412 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %16, i64 0, i32 0, i64 4
  %413 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %16, i64 0, i32 0, i64 6
  %414 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %16, i64 0, i32 1, i64 0
  %415 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %16, i64 0, i32 4
  %416 = bitcast i32* %414 to i8*
  %417 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %16, i64 0, i32 2
  %418 = add nsw i32 %348, -1
  %419 = bitcast %class.uiMsgStore* %13 to i8*
  %420 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %13, i64 0, i32 0, i64 0
  %421 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %13, i64 0, i32 0, i64 1
  %422 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %13, i64 0, i32 0, i64 3
  %423 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %13, i64 0, i32 0, i64 5
  %424 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %13, i64 0, i32 0, i64 7
  %425 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %13, i64 0, i32 1, i64 0
  %426 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %13, i64 0, i32 4
  %427 = bitcast i32* %425 to i8*
  %428 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %13, i64 0, i32 2
  %429 = bitcast %class.uiMsgStore* %12 to i8*
  %430 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %12, i64 0, i32 0, i64 0
  %431 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %12, i64 0, i32 0, i64 1
  %432 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %12, i64 0, i32 0, i64 3
  %433 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %12, i64 0, i32 0, i64 5
  %434 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %12, i64 0, i32 0, i64 7
  %435 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %12, i64 0, i32 1, i64 0
  %436 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %12, i64 0, i32 4
  %437 = bitcast i32* %435 to i8*
  %438 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %12, i64 0, i32 2
  %439 = xor i1 %144, true
  %440 = zext i32 %418 to i64
  %441 = zext i32 %348 to i64
  %442 = bitcast i32** %376 to <2 x i32*>*
  %443 = bitcast i32** %377 to <2 x i32*>*
  %444 = bitcast i32** %378 to <2 x i32*>*
  %445 = bitcast i32** %388 to <2 x i32*>*
  %446 = bitcast i32** %389 to <2 x i32*>*
  %447 = bitcast i32** %390 to <2 x i32*>*
  %448 = bitcast i32** %400 to <2 x i32*>*
  %449 = bitcast i32** %401 to <2 x i32*>*
  %450 = bitcast i32** %402 to <2 x i32*>*
  %451 = bitcast i32** %411 to <2 x i32*>*
  %452 = bitcast i32** %412 to <2 x i32*>*
  %453 = bitcast i32** %413 to <2 x i32*>*
  %454 = bitcast i32** %421 to <2 x i32*>*
  %455 = bitcast i32** %422 to <2 x i32*>*
  %456 = bitcast i32** %423 to <2 x i32*>*
  %457 = bitcast i32** %431 to <2 x i32*>*
  %458 = bitcast i32** %432 to <2 x i32*>*
  %459 = bitcast i32** %433 to <2 x i32*>*
  br label %460

460:                                              ; preds = %527, %373
  %461 = phi i64 [ 0, %373 ], [ %531, %527 ]
  %462 = phi i32 [ 0, %373 ], [ %528, %527 ]
  %463 = call i8* @_Znwm(i64 65336) #8
  %464 = bitcast i8* %463 to %class.Archive*
  call void @_ZN7ArchiveC1EP10RAROptions(%class.Archive* nonnull %464, %class.RAROptions* %1) #7
  %465 = call zeroext i1 @_Z9FileExistPKw(i32* nonnull %45) #7
  %466 = bitcast i8* %463 to %class.File*
  br i1 %465, label %467, label %519

467:                                              ; preds = %460
  call void @_ZN4File5TOpenEPKw(%class.File* nonnull %466, i32* nonnull %45) #7
  %468 = call zeroext i1 @_ZN7Archive9IsArchiveEb(%class.Archive* nonnull %464, i1 zeroext false) #7
  %469 = zext i1 %468 to i8
  br i1 %468, label %470, label %503

470:                                              ; preds = %467
  %471 = call i64 @_ZN7Archive10ReadHeaderEv(%class.Archive* nonnull %464) #7
  %472 = icmp eq i64 %471, 0
  br i1 %472, label %512, label %473

473:                                              ; preds = %470
  %474 = getelementptr inbounds i8, i8* %463, i64 14940
  %475 = bitcast i8* %474 to i32*
  br label %476

476:                                              ; preds = %473, %496
  %477 = load i32, i32* %475, align 4
  %478 = icmp eq i32 %477, 5
  br i1 %478, label %479, label %496

479:                                              ; preds = %476
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %374) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %374, i8 -86, i64 112, i1 false) #7
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %442, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %443, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %444, align 8
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32** %379, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %382, i8 0, i64 40, i1 false) #7
  store i32 100, i32* %381, align 8
  store i32 1, i32* %383, align 8
  store i32* %45, i32** %375, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %19) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %374) #7
  %480 = getelementptr inbounds i8, i8* %463, i64 38861
  %481 = load i8, i8* %480, align 1, !range !34
  %482 = icmp eq i8 %481, 0
  br i1 %482, label %499, label %483

483:                                              ; preds = %479
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %384) #7
  store i32 -1431655766, i32* %39, align 4
  %484 = load i32, i32* %385, align 8
  %485 = getelementptr inbounds i8, i8* %463, i64 57048
  %486 = bitcast i8* %485 to i64*
  %487 = load i64, i64* %486, align 8
  call void @_Z11CalcFileSumP4FilePjPhjlj(%class.File* nonnull %466, i32* nonnull %39, i8* null, i32 %484, i64 %487, i32 0) #7
  %488 = getelementptr inbounds i8, i8* %463, i64 38852
  %489 = bitcast i8* %488 to i32*
  %490 = load i32, i32* %489, align 4
  %491 = load i32, i32* %39, align 4
  %492 = icmp eq i32 %490, %491
  br i1 %492, label %494, label %493

493:                                              ; preds = %483
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %386) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %386, i8 -86, i64 112, i1 false) #7
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %445, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %446, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %447, align 8
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32** %391, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %394, i8 0, i64 40, i1 false) #7
  store i32 123, i32* %393, align 8
  store i32 1, i32* %395, align 8
  store i32* %45, i32** %387, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %18) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %386) #7
  br label %494

494:                                              ; preds = %483, %493
  %495 = phi i8 [ 0, %493 ], [ %469, %483 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %384) #7
  br label %499

496:                                              ; preds = %476
  call void @_ZN7Archive10SeekToNextEv(%class.Archive* nonnull %464) #7
  %497 = call i64 @_ZN7Archive10ReadHeaderEv(%class.Archive* nonnull %464) #7
  %498 = icmp eq i64 %497, 0
  br i1 %498, label %499, label %476

499:                                              ; preds = %496, %479, %494
  %500 = phi i8 [ %495, %494 ], [ %469, %479 ], [ %469, %496 ]
  %501 = and i8 %500, 1
  %502 = icmp eq i8 %501, 0
  br i1 %502, label %503, label %512

503:                                              ; preds = %467, %499
  %504 = phi i8 [ %500, %499 ], [ 0, %467 ]
  %505 = bitcast i8* %463 to i1 (%class.File*)***
  %506 = load i1 (%class.File*)**, i1 (%class.File*)*** %505, align 8
  %507 = getelementptr inbounds i1 (%class.File*)*, i1 (%class.File*)** %506, i64 3
  %508 = load i1 (%class.File*)*, i1 (%class.File*)** %507, align 8
  %509 = call zeroext i1 %508(%class.File* nonnull %466) #7
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %396) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %396, i8 -86, i64 8192, i1 false)
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %397, i32* nonnull %45, i64 2048) #7
  call void @_Z8wcsncatzPwPKwm(i32* nonnull %397, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.3, i64 0, i64 0), i64 2048) #7
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %398) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %398, i8 -86, i64 112, i1 false) #7
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %448, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %449, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %450, align 8
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32** %403, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %406, i8 0, i64 40, i1 false) #7
  store i32 115, i32* %405, align 8
  store i32 1, i32* %407, align 8
  store i32* %45, i32** %399, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %17) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %398) #7
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %408) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %408, i8 -86, i64 112, i1 false) #7
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %451, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %452, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %453, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %416, i8 0, i64 40, i1 false) #7
  store i32 117, i32* %415, align 8
  store i32* %45, i32** %409, align 8
  store i32 2, i32* %417, align 8
  store i32* %397, i32** %410, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %16) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %408) #7
  %510 = call zeroext i1 @_Z10RenameFilePKwS0_(i32* nonnull %45, i32* nonnull %397) #7
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %396) #7
  %511 = and i8 %504, 1
  br label %512

512:                                              ; preds = %470, %503, %499
  %513 = phi i8 [ %511, %503 ], [ 1, %499 ], [ %469, %470 ]
  %514 = bitcast i8* %463 to void (%class.Archive*, i64, i32)***
  %515 = load void (%class.Archive*, i64, i32)**, void (%class.Archive*, i64, i32)*** %514, align 8
  %516 = getelementptr inbounds void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %515, i64 5
  %517 = load void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %516, align 8
  call void %517(%class.Archive* nonnull %464, i64 0, i32 0) #7
  %518 = icmp eq i8 %513, 0
  br i1 %518, label %519, label %527

519:                                              ; preds = %460, %512
  %520 = call zeroext i1 @_ZN4File6CreateEPKwj(%class.File* nonnull %466, i32* nonnull %45, i32 18) #7
  br i1 %520, label %521, label %533

521:                                              ; preds = %519
  %522 = getelementptr inbounds [256 x i8], [256 x i8]* %37, i64 0, i64 %461
  store i8 1, i8* %522, align 1
  %523 = add nsw i32 %462, 1
  %524 = icmp eq i64 %461, %440
  br i1 %524, label %525, label %526

525:                                              ; preds = %521
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %371, i32* nonnull %45, i64 2048) #7
  br label %526

526:                                              ; preds = %525, %521
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %419) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %419, i8 -86, i64 112, i1 false) #7
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %454, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %455, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %456, align 8
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32** %424, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %427, i8 0, i64 40, i1 false) #7
  store i32 121, i32* %426, align 8
  store i32 1, i32* %428, align 8
  store i32* %45, i32** %420, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %13) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %419) #7
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %429) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %429, i8 -86, i64 112, i1 false) #7
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %457, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %458, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %459, align 8
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32** %434, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %437, i8 0, i64 40, i1 false) #7
  store i32 147, i32* %436, align 8
  store i32 1, i32* %438, align 8
  store i32* %45, i32** %430, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %429) #7
  br label %527

527:                                              ; preds = %526, %512
  %528 = phi i32 [ %462, %512 ], [ %523, %526 ]
  %529 = getelementptr inbounds %class.RecVolumes3, %class.RecVolumes3* %0, i64 0, i32 0, i64 %461
  %530 = bitcast %class.File** %529 to i8**
  store i8* %463, i8** %530, align 8
  call void @_Z14NextVolumeNamePwjb(i32* nonnull %45, i32 2048, i1 zeroext %439) #7
  %531 = add nuw nsw i64 %461, 1
  %532 = icmp eq i64 %531, %441
  br i1 %532, label %557, label %460

533:                                              ; preds = %519
  %534 = bitcast %class.uiMsgStore* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %534) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %534, i8 -86, i64 112, i1 false) #7
  %535 = bitcast %class.uiMsgStore* %15 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %535, align 16
  %536 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %15, i64 0, i32 0, i64 2
  %537 = bitcast i32** %536 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %537, align 16
  %538 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %15, i64 0, i32 0, i64 4
  %539 = bitcast i32** %538 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %539, align 16
  %540 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %15, i64 0, i32 0, i64 6
  %541 = bitcast i32** %540 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %541, align 16
  %542 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %15, i64 0, i32 1, i64 0
  %543 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %15, i64 0, i32 4
  %544 = bitcast i32* %542 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %544, i8 0, i64 40, i1 false) #7
  store i32 52, i32* %543, align 8
  %545 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %15, i64 0, i32 3
  store i32 1, i32* %545, align 4
  store i32 %350, i32* %542, align 16
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %15) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %534) #7
  %546 = bitcast %class.uiMsgStore* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %546) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %546, i8 -86, i64 112, i1 false) #7
  %547 = bitcast %class.uiMsgStore* %14 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %547, align 16
  %548 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %14, i64 0, i32 0, i64 2
  %549 = bitcast i32** %548 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %549, align 16
  %550 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %14, i64 0, i32 0, i64 4
  %551 = bitcast i32** %550 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %551, align 16
  %552 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %14, i64 0, i32 0, i64 6
  %553 = bitcast i32** %552 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %553, align 16
  %554 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %14, i64 0, i32 1, i64 0
  %555 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %14, i64 0, i32 4
  %556 = bitcast i32* %554 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %556, i8 0, i64 40, i1 false) #7
  store i32 53, i32* %555, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %14) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %546) #7
  call void @_ZN12ErrorHandler14CreateErrorMsgEPKw(%class.ErrorHandler* nonnull @ErrHandler, i32* nonnull %45) #7
  br label %1039

557:                                              ; preds = %527, %368
  %558 = phi i32 [ 0, %368 ], [ %528, %527 ]
  %559 = bitcast %class.uiMsgStore* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %559) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %559, i8 -86, i64 112, i1 false) #7
  %560 = bitcast %class.uiMsgStore* %11 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %560, align 16
  %561 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %11, i64 0, i32 0, i64 2
  %562 = bitcast i32** %561 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %562, align 16
  %563 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %11, i64 0, i32 0, i64 4
  %564 = bitcast i32** %563 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %564, align 16
  %565 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %11, i64 0, i32 0, i64 6
  %566 = bitcast i32** %565 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %566, align 16
  %567 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %11, i64 0, i32 1, i64 0
  %568 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %11, i64 0, i32 4
  %569 = bitcast i32* %567 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %569, i8 0, i64 40, i1 false) #7
  store i32 120, i32* %568, align 8
  %570 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %11, i64 0, i32 3
  store i32 1, i32* %570, align 4
  store i32 %558, i32* %567, align 16
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %11) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %559) #7
  %571 = icmp eq i32 %558, 0
  br i1 %571, label %572, label %584

572:                                              ; preds = %557
  %573 = bitcast %class.uiMsgStore* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %573) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %573, i8 -86, i64 112, i1 false) #7
  %574 = bitcast %class.uiMsgStore* %10 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %574, align 16
  %575 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %10, i64 0, i32 0, i64 2
  %576 = bitcast i32** %575 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %576, align 16
  %577 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %10, i64 0, i32 0, i64 4
  %578 = bitcast i32** %577 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %578, align 16
  %579 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %10, i64 0, i32 0, i64 6
  %580 = bitcast i32** %579 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %580, align 16
  %581 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %10, i64 0, i32 1, i64 0
  %582 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %10, i64 0, i32 4
  %583 = bitcast i32* %581 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %583, i8 0, i64 40, i1 false) #7
  store i32 51, i32* %582, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %10) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %573) #7
  br label %1039

584:                                              ; preds = %557
  %585 = icmp sgt i32 %558, %350
  br i1 %585, label %586, label %610

586:                                              ; preds = %584
  %587 = bitcast %class.uiMsgStore* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %587) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %587, i8 -86, i64 112, i1 false) #7
  %588 = bitcast %class.uiMsgStore* %9 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %588, align 16
  %589 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %9, i64 0, i32 0, i64 2
  %590 = bitcast i32** %589 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %590, align 16
  %591 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %9, i64 0, i32 0, i64 4
  %592 = bitcast i32** %591 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %592, align 16
  %593 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %9, i64 0, i32 0, i64 6
  %594 = bitcast i32** %593 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %594, align 16
  %595 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %9, i64 0, i32 1, i64 0
  %596 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %9, i64 0, i32 4
  %597 = bitcast i32* %595 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %597, i8 0, i64 40, i1 false) #7
  store i32 52, i32* %596, align 8
  %598 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %9, i64 0, i32 3
  store i32 1, i32* %598, align 4
  store i32 %350, i32* %595, align 16
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %587) #7
  %599 = bitcast %class.uiMsgStore* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %599) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %599, i8 -86, i64 112, i1 false) #7
  %600 = bitcast %class.uiMsgStore* %8 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %600, align 16
  %601 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %8, i64 0, i32 0, i64 2
  %602 = bitcast i32** %601 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %602, align 16
  %603 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %8, i64 0, i32 0, i64 4
  %604 = bitcast i32** %603 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %604, align 16
  %605 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %8, i64 0, i32 0, i64 6
  %606 = bitcast i32** %605 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %606, align 16
  %607 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %8, i64 0, i32 1, i64 0
  %608 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %8, i64 0, i32 4
  %609 = bitcast i32* %607 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %609, i8 0, i64 40, i1 false) #7
  store i32 54, i32* %608, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %599) #7
  br label %1039

610:                                              ; preds = %584
  %611 = bitcast %class.uiMsgStore* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %611) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %611, i8 -86, i64 112, i1 false) #7
  %612 = bitcast %class.uiMsgStore* %7 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %612, align 16
  %613 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %7, i64 0, i32 0, i64 2
  %614 = bitcast i32** %613 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %614, align 16
  %615 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %7, i64 0, i32 0, i64 4
  %616 = bitcast i32** %615 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %616, align 16
  %617 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %7, i64 0, i32 0, i64 6
  %618 = bitcast i32** %617 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %618, align 16
  %619 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %7, i64 0, i32 1, i64 0
  %620 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %7, i64 0, i32 4
  %621 = bitcast i32* %619 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %621, i8 0, i64 40, i1 false) #7
  store i32 122, i32* %620, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %611) #7
  %622 = add i32 %349, %348
  %623 = bitcast [256 x i32]* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %623) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %623, i8 -86, i64 1024, i1 false)
  %624 = icmp sgt i32 %622, 0
  br i1 %624, label %625, label %649

625:                                              ; preds = %610
  %626 = zext i32 %622 to i64
  %627 = and i64 %626, 1
  %628 = icmp eq i32 %622, 1
  br i1 %628, label %631, label %629

629:                                              ; preds = %625
  %630 = sub nsw i64 %626, %627
  br label %660

631:                                              ; preds = %1082, %625
  %632 = phi i32 [ undef, %625 ], [ %1083, %1082 ]
  %633 = phi i64 [ 0, %625 ], [ %1084, %1082 ]
  %634 = phi i32 [ 0, %625 ], [ %1083, %1082 ]
  %635 = icmp eq i64 %627, 0
  br i1 %635, label %649, label %636

636:                                              ; preds = %631
  %637 = getelementptr inbounds [256 x i8], [256 x i8]* %37, i64 0, i64 %633
  %638 = load i8, i8* %637, align 1, !range !34
  %639 = icmp eq i8 %638, 0
  br i1 %639, label %640, label %644

640:                                              ; preds = %636
  %641 = getelementptr inbounds %class.RecVolumes3, %class.RecVolumes3* %0, i64 0, i32 0, i64 %633
  %642 = load %class.File*, %class.File** %641, align 8
  %643 = icmp eq %class.File* %642, null
  br i1 %643, label %644, label %649

644:                                              ; preds = %640, %636
  %645 = add nsw i32 %634, 1
  %646 = sext i32 %634 to i64
  %647 = getelementptr inbounds [256 x i32], [256 x i32]* %41, i64 0, i64 %646
  %648 = trunc i64 %633 to i32
  store i32 %648, i32* %647, align 4
  br label %649

649:                                              ; preds = %631, %640, %644, %610
  %650 = phi i32 [ 0, %610 ], [ %632, %631 ], [ %645, %644 ], [ %634, %640 ]
  %651 = sext i32 %622 to i64
  %652 = udiv i64 67108864, %651
  %653 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %1, i64 0, i32 106
  %654 = load i32, i32* %653, align 8
  %655 = zext i32 %654 to i64
  %656 = mul nuw nsw i64 %655, 11336
  %657 = call i8* @_Znam(i64 %656) #8
  %658 = bitcast i8* %657 to %class.RSEncode*
  %659 = icmp eq i32 %654, 0
  br i1 %659, label %682, label %693

660:                                              ; preds = %1082, %629
  %661 = phi i64 [ 0, %629 ], [ %1084, %1082 ]
  %662 = phi i32 [ 0, %629 ], [ %1083, %1082 ]
  %663 = phi i64 [ %630, %629 ], [ %1085, %1082 ]
  %664 = getelementptr inbounds [256 x i8], [256 x i8]* %37, i64 0, i64 %661
  %665 = load i8, i8* %664, align 2, !range !34
  %666 = icmp eq i8 %665, 0
  br i1 %666, label %667, label %671

667:                                              ; preds = %660
  %668 = getelementptr inbounds %class.RecVolumes3, %class.RecVolumes3* %0, i64 0, i32 0, i64 %661
  %669 = load %class.File*, %class.File** %668, align 8
  %670 = icmp eq %class.File* %669, null
  br i1 %670, label %671, label %676

671:                                              ; preds = %660, %667
  %672 = add nsw i32 %662, 1
  %673 = sext i32 %662 to i64
  %674 = getelementptr inbounds [256 x i32], [256 x i32]* %41, i64 0, i64 %673
  %675 = trunc i64 %661 to i32
  store i32 %675, i32* %674, align 4
  br label %676

676:                                              ; preds = %667, %671
  %677 = phi i32 [ %672, %671 ], [ %662, %667 ]
  %678 = or i64 %661, 1
  %679 = getelementptr inbounds [256 x i8], [256 x i8]* %37, i64 0, i64 %678
  %680 = load i8, i8* %679, align 1, !range !34
  %681 = icmp eq i8 %680, 0
  br i1 %681, label %1073, label %1077

682:                                              ; preds = %693, %649
  %683 = getelementptr inbounds %class.RecVolumes3, %class.RecVolumes3* %0, i64 0, i32 1, i32 0
  %684 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %1, i64 0, i32 31
  %685 = add i32 %654, -1
  %686 = bitcast i8** %683 to i64*
  %687 = getelementptr inbounds [256 x i32], [256 x i32]* %41, i64 0, i64 0
  %688 = icmp ugt i32 %654, 1
  %689 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 0
  %690 = getelementptr inbounds %class.RecVolumes3, %class.RecVolumes3* %0, i64 0, i32 2
  %691 = zext i32 %622 to i64
  %692 = zext i32 %348 to i64
  call void @_Z4Waitv() #7
  br i1 %624, label %699, label %702

693:                                              ; preds = %649, %693
  %694 = phi i64 [ %696, %693 ], [ 0, %649 ]
  %695 = getelementptr inbounds %class.RSEncode, %class.RSEncode* %658, i64 %694, i32 0
  call void @_ZN7RSCoder4InitEi(%class.RSCoder* %695, i32 %349) #7
  %696 = add nuw nsw i64 %694, 1
  %697 = icmp eq i64 %696, %655
  br i1 %697, label %682, label %693

698:                                              ; preds = %960, %758
  call void @_Z4Waitv() #7
  br i1 %624, label %699, label %702

699:                                              ; preds = %682, %698
  %700 = phi i32 [ %750, %698 ], [ -1, %682 ]
  %701 = phi i64 [ %752, %698 ], [ 0, %682 ]
  br label %705

702:                                              ; preds = %698, %682
  call void @_ZdaPv(i8* nonnull %657) #8
  br label %968

703:                                              ; preds = %738
  %704 = icmp eq i32 %739, 0
  br i1 %704, label %963, label %742

705:                                              ; preds = %699, %738
  %706 = phi i64 [ %740, %738 ], [ 0, %699 ]
  %707 = phi i32 [ %739, %738 ], [ 0, %699 ]
  %708 = getelementptr inbounds [256 x i8], [256 x i8]* %37, i64 0, i64 %706
  %709 = load i8, i8* %708, align 1, !range !34
  %710 = icmp eq i8 %709, 0
  br i1 %710, label %711, label %715

711:                                              ; preds = %705
  %712 = getelementptr inbounds %class.RecVolumes3, %class.RecVolumes3* %0, i64 0, i32 0, i64 %706
  %713 = load %class.File*, %class.File** %712, align 8
  %714 = icmp eq %class.File* %713, null
  br i1 %714, label %715, label %719

715:                                              ; preds = %705, %711
  %716 = mul nuw nsw i64 %652, %706
  %717 = load i8*, i8** %683, align 8
  %718 = getelementptr inbounds i8, i8* %717, i64 %716
  call void @llvm.memset.p0i8.i64(i8* align 1 %718, i8 0, i64 %652, i1 false)
  br label %738

719:                                              ; preds = %711
  %720 = mul nuw nsw i64 %652, %706
  %721 = load i8*, i8** %683, align 8
  %722 = getelementptr inbounds i8, i8* %721, i64 %720
  %723 = bitcast %class.File* %713 to i32 (%class.File*, i8*, i64)***
  %724 = load i32 (%class.File*, i8*, i64)**, i32 (%class.File*, i8*, i64)*** %723, align 8
  %725 = getelementptr inbounds i32 (%class.File*, i8*, i64)*, i32 (%class.File*, i8*, i64)** %724, i64 4
  %726 = load i32 (%class.File*, i8*, i64)*, i32 (%class.File*, i8*, i64)** %725, align 8
  %727 = call i32 %726(%class.File* nonnull %713, i8* %722, i64 %652) #7
  %728 = sext i32 %727 to i64
  %729 = icmp eq i64 %652, %728
  br i1 %729, label %735, label %730

730:                                              ; preds = %719
  %731 = add nsw i64 %720, %728
  %732 = load i8*, i8** %683, align 8
  %733 = getelementptr inbounds i8, i8* %732, i64 %731
  %734 = sub nsw i64 %652, %728
  call void @llvm.memset.p0i8.i64(i8* align 1 %733, i8 0, i64 %734, i1 false)
  br label %735

735:                                              ; preds = %719, %730
  %736 = icmp sgt i32 %727, %707
  %737 = select i1 %736, i32 %727, i32 %707
  br label %738

738:                                              ; preds = %715, %735
  %739 = phi i32 [ %707, %715 ], [ %737, %735 ]
  %740 = add nuw nsw i64 %706, 1
  %741 = icmp eq i64 %740, %691
  br i1 %741, label %703, label %705

742:                                              ; preds = %703
  %743 = call i32 @_Z9ToPercentll(i64 %701, i64 %347) #7
  %744 = load i8, i8* %684, align 4, !range !34
  %745 = icmp ne i8 %744, 0
  %746 = icmp eq i32 %743, %700
  %747 = or i1 %746, %745
  br i1 %747, label %749, label %748

748:                                              ; preds = %742
  call void @_Z17uiProcessProgressPKcll(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i64 %701, i64 %347) #7
  br label %749

749:                                              ; preds = %742, %748
  %750 = phi i32 [ %700, %742 ], [ %743, %748 ]
  %751 = sext i32 %739 to i64
  %752 = add nsw i64 %701, %751
  %753 = udiv i32 %739, %654
  %754 = icmp sgt i32 %739, 0
  br i1 %754, label %755, label %758

755:                                              ; preds = %749
  %756 = icmp slt i32 %753, 256
  %757 = select i1 %756, i32 %739, i32 %753
  br label %760

758:                                              ; preds = %945, %749
  %759 = load %class.ThreadPool*, %class.ThreadPool** %690, align 8
  call void @_ZN10ThreadPool8WaitDoneEv(%class.ThreadPool* %759) #7
  br i1 %372, label %948, label %698

760:                                              ; preds = %755, %945
  %761 = phi i32 [ %946, %945 ], [ 0, %755 ]
  %762 = phi i32 [ %766, %945 ], [ %757, %755 ]
  %763 = phi i32 [ %773, %945 ], [ 0, %755 ]
  %764 = icmp eq i32 %761, %685
  %765 = sub nsw i32 %739, %763
  %766 = select i1 %764, i32 %765, i32 %762
  %767 = zext i32 %761 to i64
  %768 = getelementptr inbounds %class.RSEncode, %class.RSEncode* %658, i64 %767
  %769 = load i64, i64* %686, align 8
  %770 = getelementptr inbounds %class.RSEncode, %class.RSEncode* %658, i64 %767, i32 2
  %771 = bitcast i8** %770 to i64*
  store i64 %769, i64* %771, align 8
  %772 = getelementptr inbounds %class.RSEncode, %class.RSEncode* %658, i64 %767, i32 4
  store i32 %763, i32* %772, align 8
  %773 = add nsw i32 %766, %763
  %774 = getelementptr inbounds %class.RSEncode, %class.RSEncode* %658, i64 %767, i32 5
  store i32 %773, i32* %774, align 4
  %775 = getelementptr inbounds %class.RSEncode, %class.RSEncode* %658, i64 %767, i32 6
  store i32 %622, i32* %775, align 8
  %776 = getelementptr inbounds %class.RSEncode, %class.RSEncode* %658, i64 %767, i32 8
  store i64 %652, i64* %776, align 8
  %777 = getelementptr inbounds %class.RSEncode, %class.RSEncode* %658, i64 %767, i32 9
  store i32* %687, i32** %777, align 8
  %778 = getelementptr inbounds %class.RSEncode, %class.RSEncode* %658, i64 %767, i32 10
  store i32 %650, i32* %778, align 8
  br i1 %688, label %779, label %782

779:                                              ; preds = %760
  %780 = load %class.ThreadPool*, %class.ThreadPool** %690, align 8
  %781 = bitcast %class.RSEncode* %768 to i8*
  call void @_ZN10ThreadPool7AddTaskEPFvPvES0_(%class.ThreadPool* %780, void (i8*)* nonnull @_Z14RSDecodeThreadPv, i8* %781) #7
  br label %945

782:                                              ; preds = %760
  %783 = icmp sgt i32 %766, 0
  br i1 %783, label %784, label %945

784:                                              ; preds = %782
  %785 = getelementptr inbounds %class.RSEncode, %class.RSEncode* %768, i64 0, i32 0
  %786 = sext i32 %763 to i64
  br label %787

787:                                              ; preds = %925, %784
  %788 = phi i64 [ %927, %925 ], [ 0, %784 ]
  %789 = phi i32 [ %920, %925 ], [ %650, %784 ]
  %790 = phi i32 [ %926, %925 ], [ %622, %784 ]
  %791 = phi i64 [ %921, %925 ], [ %786, %784 ]
  %792 = add i64 %788, %786
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %689) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %689, i8 -86, i64 256, i1 false) #7
  %793 = icmp sgt i32 %790, 0
  br i1 %793, label %794, label %887

794:                                              ; preds = %787
  %795 = load i8*, i8** %770, align 8
  %796 = load i64, i64* %776, align 8
  %797 = sext i32 %790 to i64
  %798 = icmp ugt i32 %790, 31
  %799 = icmp eq i64 %796, 1
  %800 = and i1 %798, %799
  br i1 %800, label %801, label %809

801:                                              ; preds = %794
  %802 = getelementptr [256 x i8], [256 x i8]* %5, i64 0, i64 %797
  %803 = getelementptr i8, i8* %795, i64 %792
  %804 = add i64 %792, %797
  %805 = getelementptr i8, i8* %795, i64 %804
  %806 = icmp ult i8* %6, %805
  %807 = icmp ult i8* %803, %802
  %808 = and i1 %806, %807
  br i1 %808, label %809, label %829

809:                                              ; preds = %794, %885, %801
  %810 = phi i64 [ 0, %801 ], [ 0, %794 ], [ %830, %885 ]
  %811 = xor i64 %810, -1
  %812 = add nsw i64 %811, %797
  %813 = and i64 %797, 3
  %814 = icmp eq i64 %813, 0
  br i1 %814, label %826, label %815

815:                                              ; preds = %809, %815
  %816 = phi i64 [ %823, %815 ], [ %810, %809 ]
  %817 = phi i64 [ %824, %815 ], [ %813, %809 ]
  %818 = mul i64 %816, %796
  %819 = add i64 %818, %791
  %820 = getelementptr inbounds i8, i8* %795, i64 %819
  %821 = load i8, i8* %820, align 1
  %822 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %816
  store i8 %821, i8* %822, align 1
  %823 = add nuw nsw i64 %816, 1
  %824 = add i64 %817, -1
  %825 = icmp eq i64 %824, 0
  br i1 %825, label %826, label %815, !llvm.loop !35

826:                                              ; preds = %815, %809
  %827 = phi i64 [ %810, %809 ], [ %823, %815 ]
  %828 = icmp ult i64 %812, 3
  br i1 %828, label %887, label %892

829:                                              ; preds = %801
  %830 = and i64 %797, -32
  %831 = add nsw i64 %830, -32
  %832 = lshr exact i64 %831, 5
  %833 = add nuw nsw i64 %832, 1
  %834 = and i64 %833, 1
  %835 = icmp eq i64 %831, 0
  br i1 %835, label %869, label %836

836:                                              ; preds = %829
  %837 = sub nuw nsw i64 %833, %834
  br label %838

838:                                              ; preds = %838, %836
  %839 = phi i64 [ 0, %836 ], [ %866, %838 ]
  %840 = phi i64 [ %837, %836 ], [ %867, %838 ]
  %841 = mul i64 %839, %796
  %842 = add i64 %841, %791
  %843 = getelementptr inbounds i8, i8* %795, i64 %842
  %844 = bitcast i8* %843 to <16 x i8>*
  %845 = load <16 x i8>, <16 x i8>* %844, align 1, !alias.scope !36
  %846 = getelementptr inbounds i8, i8* %843, i64 16
  %847 = bitcast i8* %846 to <16 x i8>*
  %848 = load <16 x i8>, <16 x i8>* %847, align 1, !alias.scope !36
  %849 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %839
  %850 = bitcast i8* %849 to <16 x i8>*
  store <16 x i8> %845, <16 x i8>* %850, align 16, !alias.scope !39, !noalias !36
  %851 = getelementptr inbounds i8, i8* %849, i64 16
  %852 = bitcast i8* %851 to <16 x i8>*
  store <16 x i8> %848, <16 x i8>* %852, align 16, !alias.scope !39, !noalias !36
  %853 = or i64 %839, 32
  %854 = mul i64 %853, %796
  %855 = add i64 %854, %791
  %856 = getelementptr inbounds i8, i8* %795, i64 %855
  %857 = bitcast i8* %856 to <16 x i8>*
  %858 = load <16 x i8>, <16 x i8>* %857, align 1, !alias.scope !36
  %859 = getelementptr inbounds i8, i8* %856, i64 16
  %860 = bitcast i8* %859 to <16 x i8>*
  %861 = load <16 x i8>, <16 x i8>* %860, align 1, !alias.scope !36
  %862 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %853
  %863 = bitcast i8* %862 to <16 x i8>*
  store <16 x i8> %858, <16 x i8>* %863, align 16, !alias.scope !39, !noalias !36
  %864 = getelementptr inbounds i8, i8* %862, i64 16
  %865 = bitcast i8* %864 to <16 x i8>*
  store <16 x i8> %861, <16 x i8>* %865, align 16, !alias.scope !39, !noalias !36
  %866 = add i64 %839, 64
  %867 = add i64 %840, -2
  %868 = icmp eq i64 %867, 0
  br i1 %868, label %869, label %838, !llvm.loop !41

869:                                              ; preds = %838, %829
  %870 = phi i64 [ 0, %829 ], [ %866, %838 ]
  %871 = icmp eq i64 %834, 0
  br i1 %871, label %885, label %872

872:                                              ; preds = %869
  %873 = mul i64 %870, %796
  %874 = add i64 %873, %791
  %875 = getelementptr inbounds i8, i8* %795, i64 %874
  %876 = bitcast i8* %875 to <16 x i8>*
  %877 = load <16 x i8>, <16 x i8>* %876, align 1, !alias.scope !36
  %878 = getelementptr inbounds i8, i8* %875, i64 16
  %879 = bitcast i8* %878 to <16 x i8>*
  %880 = load <16 x i8>, <16 x i8>* %879, align 1, !alias.scope !36
  %881 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %870
  %882 = bitcast i8* %881 to <16 x i8>*
  store <16 x i8> %877, <16 x i8>* %882, align 16, !alias.scope !39, !noalias !36
  %883 = getelementptr inbounds i8, i8* %881, i64 16
  %884 = bitcast i8* %883 to <16 x i8>*
  store <16 x i8> %880, <16 x i8>* %884, align 16, !alias.scope !39, !noalias !36
  br label %885

885:                                              ; preds = %869, %872
  %886 = icmp eq i64 %830, %797
  br i1 %886, label %887, label %809

887:                                              ; preds = %826, %892, %885, %787
  %888 = load i32*, i32** %777, align 8
  %889 = call zeroext i1 @_ZN7RSCoder6DecodeEPhiPii(%class.RSCoder* %785, i8* nonnull %689, i32 %790, i32* %888, i32 %789) #7
  %890 = load i32, i32* %778, align 8
  %891 = icmp sgt i32 %890, 0
  br i1 %891, label %928, label %919

892:                                              ; preds = %826, %892
  %893 = phi i64 [ %917, %892 ], [ %827, %826 ]
  %894 = mul i64 %893, %796
  %895 = add i64 %894, %791
  %896 = getelementptr inbounds i8, i8* %795, i64 %895
  %897 = load i8, i8* %896, align 1
  %898 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %893
  store i8 %897, i8* %898, align 1
  %899 = add nuw nsw i64 %893, 1
  %900 = mul i64 %899, %796
  %901 = add i64 %900, %791
  %902 = getelementptr inbounds i8, i8* %795, i64 %901
  %903 = load i8, i8* %902, align 1
  %904 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %899
  store i8 %903, i8* %904, align 1
  %905 = add nuw nsw i64 %893, 2
  %906 = mul i64 %905, %796
  %907 = add i64 %906, %791
  %908 = getelementptr inbounds i8, i8* %795, i64 %907
  %909 = load i8, i8* %908, align 1
  %910 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %905
  store i8 %909, i8* %910, align 1
  %911 = add nuw nsw i64 %893, 3
  %912 = mul i64 %911, %796
  %913 = add i64 %912, %791
  %914 = getelementptr inbounds i8, i8* %795, i64 %913
  %915 = load i8, i8* %914, align 1
  %916 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %911
  store i8 %915, i8* %916, align 1
  %917 = add nuw nsw i64 %893, 4
  %918 = icmp eq i64 %917, %797
  br i1 %918, label %887, label %892, !llvm.loop !42

919:                                              ; preds = %928, %887
  %920 = phi i32 [ %890, %887 ], [ %942, %928 ]
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %689) #7
  %921 = add nsw i64 %791, 1
  %922 = load i32, i32* %774, align 4
  %923 = sext i32 %922 to i64
  %924 = icmp slt i64 %921, %923
  br i1 %924, label %925, label %945

925:                                              ; preds = %919
  %926 = load i32, i32* %775, align 8
  %927 = add i64 %788, 1
  br label %787

928:                                              ; preds = %887, %928
  %929 = phi i64 [ %941, %928 ], [ 0, %887 ]
  %930 = load i32*, i32** %777, align 8
  %931 = getelementptr inbounds i32, i32* %930, i64 %929
  %932 = load i32, i32* %931, align 4
  %933 = sext i32 %932 to i64
  %934 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %933
  %935 = load i8, i8* %934, align 1
  %936 = load i8*, i8** %770, align 8
  %937 = load i64, i64* %776, align 8
  %938 = mul i64 %937, %933
  %939 = add i64 %938, %791
  %940 = getelementptr inbounds i8, i8* %936, i64 %939
  store i8 %935, i8* %940, align 1
  %941 = add nuw nsw i64 %929, 1
  %942 = load i32, i32* %778, align 8
  %943 = sext i32 %942 to i64
  %944 = icmp slt i64 %941, %943
  br i1 %944, label %928, label %919

945:                                              ; preds = %919, %782, %779
  %946 = add i32 %761, 1
  %947 = icmp sgt i32 %739, %773
  br i1 %947, label %760, label %758

948:                                              ; preds = %758, %960
  %949 = phi i64 [ %961, %960 ], [ 0, %758 ]
  %950 = getelementptr inbounds [256 x i8], [256 x i8]* %37, i64 0, i64 %949
  %951 = load i8, i8* %950, align 1, !range !34
  %952 = icmp eq i8 %951, 0
  br i1 %952, label %960, label %953

953:                                              ; preds = %948
  %954 = getelementptr inbounds %class.RecVolumes3, %class.RecVolumes3* %0, i64 0, i32 0, i64 %949
  %955 = load %class.File*, %class.File** %954, align 8
  %956 = mul nuw nsw i64 %652, %949
  %957 = load i8*, i8** %683, align 8
  %958 = getelementptr inbounds i8, i8* %957, i64 %956
  %959 = call zeroext i1 @_ZN4File5WriteEPKvm(%class.File* %955, i8* %958, i64 %751) #7
  br label %960

960:                                              ; preds = %948, %953
  %961 = add nuw nsw i64 %949, 1
  %962 = icmp eq i64 %961, %692
  br i1 %962, label %698, label %948

963:                                              ; preds = %703
  call void @_ZdaPv(i8* nonnull %657) #8
  br i1 %624, label %964, label %968

964:                                              ; preds = %963
  %965 = and i8 %346, 1
  %966 = icmp eq i8 %965, 0
  %967 = zext i32 %622 to i64
  br label %971

968:                                              ; preds = %998, %702, %963
  %969 = load i32, i32* %371, align 16
  %970 = icmp eq i32 %969, 0
  br i1 %970, label %1038, label %1001

971:                                              ; preds = %998, %964
  %972 = phi i64 [ 0, %964 ], [ %999, %998 ]
  %973 = getelementptr inbounds %class.RecVolumes3, %class.RecVolumes3* %0, i64 0, i32 0, i64 %972
  %974 = load %class.File*, %class.File** %973, align 8
  %975 = icmp eq %class.File* %974, null
  br i1 %975, label %998, label %976

976:                                              ; preds = %971
  br i1 %966, label %992, label %977

977:                                              ; preds = %976
  %978 = getelementptr inbounds [256 x i8], [256 x i8]* %37, i64 0, i64 %972
  %979 = load i8, i8* %978, align 1, !range !34
  %980 = icmp eq i8 %979, 0
  br i1 %980, label %992, label %981

981:                                              ; preds = %977
  %982 = bitcast %class.File* %974 to i64 (%class.File*)***
  %983 = load i64 (%class.File*)**, i64 (%class.File*)*** %982, align 8
  %984 = getelementptr inbounds i64 (%class.File*)*, i64 (%class.File*)** %983, i64 6
  %985 = load i64 (%class.File*)*, i64 (%class.File*)** %984, align 8
  %986 = call i64 %985(%class.File* nonnull %974) #7
  %987 = add nsw i64 %986, -7
  %988 = bitcast %class.File* %974 to void (%class.File*, i64, i32)***
  %989 = load void (%class.File*, i64, i32)**, void (%class.File*, i64, i32)*** %988, align 8
  %990 = getelementptr inbounds void (%class.File*, i64, i32)*, void (%class.File*, i64, i32)** %989, i64 5
  %991 = load void (%class.File*, i64, i32)*, void (%class.File*, i64, i32)** %990, align 8
  call void %991(%class.File* nonnull %974, i64 %987, i32 0) #7
  call void @_ZN4File7PutByteEh(%class.File* nonnull %974, i8 zeroext 0) #7
  call void @_ZN4File7PutByteEh(%class.File* nonnull %974, i8 zeroext 0) #7
  call void @_ZN4File7PutByteEh(%class.File* nonnull %974, i8 zeroext 0) #7
  call void @_ZN4File7PutByteEh(%class.File* nonnull %974, i8 zeroext 0) #7
  call void @_ZN4File7PutByteEh(%class.File* nonnull %974, i8 zeroext 0) #7
  call void @_ZN4File7PutByteEh(%class.File* nonnull %974, i8 zeroext 0) #7
  call void @_ZN4File7PutByteEh(%class.File* nonnull %974, i8 zeroext 0) #7
  br label %992

992:                                              ; preds = %981, %977, %976
  %993 = bitcast %class.File* %974 to i1 (%class.File*)***
  %994 = load i1 (%class.File*)**, i1 (%class.File*)*** %993, align 8
  %995 = getelementptr inbounds i1 (%class.File*)*, i1 (%class.File*)** %994, i64 3
  %996 = load i1 (%class.File*)*, i1 (%class.File*)** %995, align 8
  %997 = call zeroext i1 %996(%class.File* nonnull %974) #7
  store %class.File* null, %class.File** %973, align 8
  br label %998

998:                                              ; preds = %971, %992
  %999 = add nuw nsw i64 %972, 1
  %1000 = icmp eq i64 %999, %967
  br i1 %1000, label %968, label %971

1001:                                             ; preds = %968
  %1002 = bitcast %class.Archive* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 65336, i8* nonnull %1002) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1002, i8 -86, i64 65336, i1 false)
  call void @_ZN7ArchiveC1EP10RAROptions(%class.Archive* nonnull %42, %class.RAROptions* %1) #7
  %1003 = call zeroext i1 @_ZN7Archive4OpenEPKwj(%class.Archive* nonnull %42, i32* nonnull %371, i32 1) #7
  br i1 %1003, label %1004, label %1037

1004:                                             ; preds = %1001
  %1005 = call zeroext i1 @_ZN7Archive9IsArchiveEb(%class.Archive* nonnull %42, i1 zeroext true) #7
  br i1 %1005, label %1006, label %1037

1006:                                             ; preds = %1004
  %1007 = call i64 @_ZN7Archive11SearchBlockE11HEADER_TYPE(%class.Archive* nonnull %42, i32 5) #7
  %1008 = icmp eq i64 %1007, 0
  br i1 %1008, label %1037, label %1009

1009:                                             ; preds = %1006
  %1010 = getelementptr inbounds %class.Archive, %class.Archive* %42, i64 0, i32 32
  %1011 = load i64, i64* %1010, align 8
  call void @_ZN7Archive4SeekEli(%class.Archive* nonnull %42, i64 %1011, i32 0) #7
  %1012 = getelementptr inbounds [8192 x i8], [8192 x i8]* %43, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %1012) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1012, i8 -86, i64 8192, i1 false)
  %1013 = call i32 @_ZN7Archive4ReadEPvm(%class.Archive* nonnull %42, i8* nonnull %1012, i64 8192) #7
  %1014 = icmp sgt i32 %1013, 0
  br i1 %1014, label %1015, label %1029

1015:                                             ; preds = %1009
  %1016 = zext i32 %1013 to i64
  br label %1017

1017:                                             ; preds = %1023, %1015
  %1018 = phi i64 [ 0, %1015 ], [ %1024, %1023 ]
  %1019 = phi i32 [ 0, %1015 ], [ %1025, %1023 ]
  %1020 = getelementptr inbounds [8192 x i8], [8192 x i8]* %43, i64 0, i64 %1018
  %1021 = load i8, i8* %1020, align 1
  %1022 = icmp eq i8 %1021, 0
  br i1 %1022, label %1023, label %1027

1023:                                             ; preds = %1017
  %1024 = add nuw nsw i64 %1018, 1
  %1025 = add nuw nsw i32 %1019, 1
  %1026 = icmp eq i64 %1024, %1016
  br i1 %1026, label %1029, label %1017

1027:                                             ; preds = %1017
  %1028 = trunc i64 %1018 to i32
  br label %1029

1029:                                             ; preds = %1023, %1027, %1009
  %1030 = phi i32 [ 0, %1009 ], [ %1028, %1027 ], [ %1025, %1023 ]
  %1031 = icmp eq i32 %1030, %1013
  br i1 %1031, label %1032, label %1036

1032:                                             ; preds = %1029
  %1033 = load i64, i64* %1010, align 8
  call void @_ZN7Archive4SeekEli(%class.Archive* nonnull %42, i64 %1033, i32 0) #7
  %1034 = getelementptr inbounds %class.Archive, %class.Archive* %42, i64 0, i32 0
  %1035 = call zeroext i1 @_ZN4File8TruncateEv(%class.File* nonnull %1034) #7
  br label %1036

1036:                                             ; preds = %1032, %1029
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %1012) #7
  br label %1037

1037:                                             ; preds = %1006, %1036, %1004, %1001
  call void @_ZN7ArchiveD1Ev(%class.Archive* nonnull %42) #7
  call void @llvm.lifetime.end.p0i8(i64 65336, i8* nonnull %1002) #7
  br label %1038

1038:                                             ; preds = %968, %1037
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %623) #7
  br label %1039

1039:                                             ; preds = %533, %1038, %586, %572
  %1040 = phi i1 [ false, %572 ], [ false, %586 ], [ true, %1038 ], [ false, %533 ]
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %370) #7
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %369) #7
  br label %1041

1041:                                             ; preds = %277, %345, %311, %354, %1039
  %1042 = phi i1 [ %1040, %1039 ], [ false, %354 ], [ false, %311 ], [ false, %345 ], [ false, %277 ]
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %160) #7
  call void @llvm.lifetime.end.p0i8(i64 8240, i8* nonnull %157) #7
  call void @_ZN8FindFileD1Ev(%class.FindFile* nonnull %32) #7
  call void @llvm.lifetime.end.p0i8(i64 8208, i8* nonnull %156) #7
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %148) #7
  br label %1043

1043:                                             ; preds = %118, %1041, %127
  %1044 = phi i1 [ %1042, %1041 ], [ false, %127 ], [ false, %118 ]
  call void @_ZN7ArchiveD1Ev(%class.Archive* nonnull %30) #7
  call void @llvm.lifetime.end.p0i8(i64 65336, i8* nonnull %121) #7
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %44) #7
  ret i1 %1044

1045:                                             ; preds = %1045, %290
  %1046 = phi i32* [ %1047, %1045 ], [ %284, %290 ]
  %1047 = getelementptr inbounds i32, i32* %1046, i64 -1
  %1048 = load i32, i32* %1047, align 4
  %1049 = call zeroext i1 @_Z7IsDigiti(i32 %1048) #7
  %1050 = xor i1 %1049, true
  %1051 = icmp ult i32* %1047, %164
  %1052 = or i1 %1051, %1050
  br i1 %1052, label %1053, label %1045

1053:                                             ; preds = %1045
  %1054 = call i32 @_Z5atoiwPKw(i32* %1046) #7
  %1055 = icmp eq i32 %1054, 0
  %1056 = icmp sgt i32 %1054, 255
  %1057 = or i1 %1055, %1056
  %1058 = or i1 %1057, %294
  br label %1059

1059:                                             ; preds = %1059, %1053
  %1060 = phi i32* [ %1061, %1059 ], [ %1047, %1053 ]
  %1061 = getelementptr inbounds i32, i32* %1060, i64 -1
  %1062 = load i32, i32* %1061, align 4
  %1063 = call zeroext i1 @_Z7IsDigiti(i32 %1062) #7
  %1064 = xor i1 %1063, true
  %1065 = icmp ult i32* %1061, %164
  %1066 = or i1 %1065, %1064
  br i1 %1066, label %1067, label %1059

1067:                                             ; preds = %1059
  %1068 = call i32 @_Z5atoiwPKw(i32* %1060) #7
  %1069 = icmp eq i32 %1068, 0
  %1070 = icmp sgt i32 %1068, 255
  %1071 = or i1 %1069, %1070
  %1072 = or i1 %1071, %1058
  br i1 %1072, label %337, label %295

1073:                                             ; preds = %676
  %1074 = getelementptr inbounds %class.RecVolumes3, %class.RecVolumes3* %0, i64 0, i32 0, i64 %678
  %1075 = load %class.File*, %class.File** %1074, align 8
  %1076 = icmp eq %class.File* %1075, null
  br i1 %1076, label %1077, label %1082

1077:                                             ; preds = %1073, %676
  %1078 = add nsw i32 %677, 1
  %1079 = sext i32 %677 to i64
  %1080 = getelementptr inbounds [256 x i32], [256 x i32]* %41, i64 0, i64 %1079
  %1081 = trunc i64 %678 to i32
  store i32 %1081, i32* %1080, align 4
  br label %1082

1082:                                             ; preds = %1077, %1073
  %1083 = phi i32 [ %1078, %1077 ], [ %677, %1073 ]
  %1084 = add nuw nsw i64 %661, 2
  %1085 = add i64 %663, -2
  %1086 = icmp eq i64 %1085, 0
  br i1 %1086, label %631, label %660
}

declare void @_Z8wcsncpyzPwPKwm(i32*, i32*, i64) local_unnamed_addr #3

declare i32* @_Z6GetExtPKw(i32*) local_unnamed_addr #3

declare i32 @_Z8wcsicompPKwS0_(i32*, i32*) local_unnamed_addr #3

declare zeroext i1 @_Z7IsDigiti(i32) local_unnamed_addr #3

declare void @_ZN8FindFileC1Ev(%class.FindFile*) unnamed_addr #3

declare void @_ZN8FindFile7SetMaskEPKw(%class.FindFile*, i32*) local_unnamed_addr #3

declare zeroext i1 @_ZN8FindFile4NextEP8FindDatab(%class.FindFile*, %struct.FindData*, i1 zeroext) local_unnamed_addr #3

declare void @_ZN7ArchiveC1EP10RAROptions(%class.Archive*, %class.RAROptions*) unnamed_addr #3

declare zeroext i1 @_ZN4File5WOpenEPKw(%class.File*, i32*) local_unnamed_addr #3

declare zeroext i1 @_ZN7Archive9IsArchiveEb(%class.Archive*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7ArchiveD1Ev(%class.Archive*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN8FindFileD1Ev(%class.FindFile*) unnamed_addr #4

declare zeroext i1 @_ZN7Archive10WCheckOpenEPKw(%class.Archive*, i32*) local_unnamed_addr #3

declare zeroext i1 @_ZN4File5CloseEv(%class.File*) unnamed_addr #3

declare i32* @_Z18VolNameToFirstNamePKwPwmb(i32*, i32*, i64, i1 zeroext) local_unnamed_addr #3

declare void @_ZN4FileC1Ev(%class.File*) unnamed_addr #3

declare void @_ZN4File5TOpenEPKw(%class.File*, i32*) local_unnamed_addr #3

declare void @_ZN4File4SeekEli(%class.File*, i64, i32) unnamed_addr #3

declare i64 @_ZN4File4TellEv(%class.File*) unnamed_addr #3

declare zeroext i8 @_ZN4File7GetByteEv(%class.File*) local_unnamed_addr #3

declare void @_Z11CalcFileSumP4FilePjPhjlj(%class.File*, i32*, i8*, i32, i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4FileD1Ev(%class.File*) unnamed_addr #4

declare i32 @_Z5atoiwPKw(i32*) local_unnamed_addr #3

declare i64 @_ZN4File10FileLengthEv(%class.File*) local_unnamed_addr #3

declare zeroext i1 @_Z9FileExistPKw(i32*) local_unnamed_addr #3

declare i64 @_ZN7Archive10ReadHeaderEv(%class.Archive*) local_unnamed_addr #3

declare void @_ZN7Archive10SeekToNextEv(%class.Archive*) local_unnamed_addr #3

declare void @_Z8wcsncatzPwPKwm(i32*, i32*, i64) local_unnamed_addr #3

declare zeroext i1 @_Z10RenameFilePKwS0_(i32*, i32*) local_unnamed_addr #3

declare zeroext i1 @_ZN4File6CreateEPKwj(%class.File*, i32*, i32) local_unnamed_addr #3

declare void @_ZN12ErrorHandler14CreateErrorMsgEPKw(%class.ErrorHandler*, i32*) local_unnamed_addr #3

declare void @_Z14NextVolumeNamePwjb(i32*, i32, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #2

declare void @_Z4Waitv() local_unnamed_addr #3

declare i32 @_Z9ToPercentll(i64, i64) local_unnamed_addr #3

declare void @_Z17uiProcessProgressPKcll(i8*, i64, i64) local_unnamed_addr #3

declare void @_ZN10ThreadPool7AddTaskEPFvPvES0_(%class.ThreadPool*, void (i8*)*, i8*) local_unnamed_addr #3

declare void @_ZN10ThreadPool8WaitDoneEv(%class.ThreadPool*) local_unnamed_addr #3

declare zeroext i1 @_ZN4File5WriteEPKvm(%class.File*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

declare void @_ZN4File7PutByteEh(%class.File*, i8 zeroext) local_unnamed_addr #3

declare zeroext i1 @_ZN7Archive4OpenEPKwj(%class.Archive*, i32*, i32) unnamed_addr #3

declare i64 @_ZN7Archive11SearchBlockE11HEADER_TYPE(%class.Archive*, i32) local_unnamed_addr #3

declare void @_ZN7Archive4SeekEli(%class.Archive*, i64, i32) unnamed_addr #3

declare i32 @_ZN7Archive4ReadEPvm(%class.Archive*, i8*, i64) unnamed_addr #3

declare zeroext i1 @_ZN4File8TruncateEv(%class.File*) local_unnamed_addr #3

declare zeroext i1 @_ZN7RSCoder6DecodeEPhiPii(%class.RSCoder*, i8*, i32, i32*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11RecVolumes34TestEP10RAROptionsPKw(%class.RecVolumes3* nocapture readnone, %class.RAROptions* nocapture readonly, i32*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.uiMsgStore, align 8
  %5 = alloca [2048 x i32], align 16
  %6 = alloca %class.File, align 8
  %7 = alloca i32, align 4
  %8 = tail call i32* @_Z6GetExtPKw(i32* %2) #7
  %9 = icmp eq i32* %8, null
  br i1 %9, label %36, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds i32, i32* %8, i64 -1
  %12 = icmp ugt i32* %11, %2
  br i1 %12, label %13, label %36

13:                                               ; preds = %10, %28
  %14 = phi i32* [ %30, %28 ], [ %11, %10 ]
  %15 = phi i32 [ %29, %28 ], [ 0, %10 ]
  %16 = phi i32* [ %14, %28 ], [ %8, %10 ]
  %17 = load i32, i32* %14, align 4
  %18 = tail call zeroext i1 @_Z7IsDigiti(i32 %17) #7
  br i1 %18, label %28, label %19

19:                                               ; preds = %13
  %20 = load i32, i32* %14, align 4
  %21 = icmp eq i32 %20, 95
  br i1 %21, label %22, label %32

22:                                               ; preds = %19
  %23 = getelementptr inbounds i32, i32* %16, i64 -2
  %24 = load i32, i32* %23, align 4
  %25 = tail call zeroext i1 @_Z7IsDigiti(i32 %24) #7
  br i1 %25, label %26, label %32

26:                                               ; preds = %22
  %27 = add nsw i32 %15, 1
  br label %28

28:                                               ; preds = %26, %13
  %29 = phi i32 [ %15, %13 ], [ %27, %26 ]
  %30 = getelementptr inbounds i32, i32* %14, i64 -1
  %31 = icmp ugt i32* %30, %2
  br i1 %31, label %13, label %32

32:                                               ; preds = %19, %22, %28
  %33 = phi i32 [ %15, %19 ], [ %15, %22 ], [ %29, %28 ]
  %34 = icmp slt i32 %33, 2
  br i1 %34, label %36, label %35

35:                                               ; preds = %32
  tail call void @_ZN12ErrorHandler16UnknownMethodMsgEPKwS1_(%class.ErrorHandler* nonnull @ErrHandler, i32* %2, i32* %2) #7
  br label %93

36:                                               ; preds = %10, %3, %32
  %37 = bitcast [2048 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %37) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 -86, i64 8192, i1 false)
  %38 = getelementptr inbounds [2048 x i32], [2048 x i32]* %5, i64 0, i64 0
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %38, i32* %2, i64 2048) #7
  %39 = call zeroext i1 @_Z9FileExistPKw(i32* nonnull %38) #7
  br i1 %39, label %40, label %92

40:                                               ; preds = %36
  %41 = bitcast %class.File* %6 to i8*
  %42 = bitcast i32* %7 to i8*
  %43 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %1, i64 0, i32 31
  %44 = bitcast %class.uiMsgStore* %4 to i8*
  %45 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 0
  %46 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 1
  %47 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 2
  %48 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 4
  %49 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 6
  %50 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 1, i64 0
  %51 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 4
  %52 = bitcast i32* %50 to i8*
  %53 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 2
  %54 = bitcast i32** %47 to <2 x i32*>*
  %55 = bitcast i32** %48 to <2 x i32*>*
  %56 = bitcast i32** %49 to <2 x i32*>*
  br label %57

57:                                               ; preds = %40, %90
  call void @llvm.lifetime.start.p0i8(i64 8248, i8* nonnull %41) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 8248, i1 false)
  call void @_ZN4FileC1Ev(%class.File* nonnull %6) #7
  %58 = call zeroext i1 @_ZN4File4OpenEPKwj(%class.File* nonnull %6, i32* nonnull %38, i32 0) #7
  br i1 %58, label %60, label %59

59:                                               ; preds = %57
  call void @_ZN12ErrorHandler12OpenErrorMsgEPKw(%class.ErrorHandler* nonnull @ErrHandler, i32* nonnull %38) #7
  br label %90

60:                                               ; preds = %57
  %61 = call zeroext i1 @_Z18uiStartFileExtractPKwbbb(i32* nonnull %38, i1 zeroext false, i1 zeroext true, i1 zeroext false) #7
  br i1 %61, label %63, label %62

62:                                               ; preds = %60
  call void @_ZN4FileD1Ev(%class.File* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8248, i8* nonnull %41) #7
  br label %92

63:                                               ; preds = %60
  %64 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([19 x i32], [19 x i32]* @.str.6, i64 0, i64 0)) #7
  call void @_ZN4File4SeekEli(%class.File* nonnull %6, i64 0, i32 2) #7
  %65 = call i64 @_ZN4File4TellEv(%class.File* nonnull %6) #7
  %66 = add nsw i64 %65, -4
  call void @_ZN4File4SeekEli(%class.File* nonnull %6, i64 %66, i32 0) #7
  %67 = call zeroext i8 @_ZN4File7GetByteEv(%class.File* nonnull %6) #7
  %68 = zext i8 %67 to i32
  %69 = call zeroext i8 @_ZN4File7GetByteEv(%class.File* nonnull %6) #7
  %70 = zext i8 %69 to i32
  %71 = shl nuw nsw i32 %70, 8
  %72 = or i32 %71, %68
  %73 = call zeroext i8 @_ZN4File7GetByteEv(%class.File* nonnull %6) #7
  %74 = zext i8 %73 to i32
  %75 = shl nuw nsw i32 %74, 16
  %76 = or i32 %75, %72
  %77 = call zeroext i8 @_ZN4File7GetByteEv(%class.File* nonnull %6) #7
  %78 = zext i8 %77 to i32
  %79 = shl nuw i32 %78, 24
  %80 = or i32 %79, %76
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #7
  store i32 -1431655766, i32* %7, align 4
  %81 = load i8, i8* %43, align 4, !range !34
  %82 = icmp eq i8 %81, 0
  %83 = select i1 %82, i32 4, i32 0
  call void @_Z11CalcFileSumP4FilePjPhjlj(%class.File* nonnull %6, i32* nonnull %7, i8* null, i32 1, i64 %66, i32 %83) #7
  %84 = load i32, i32* %7, align 4
  %85 = icmp eq i32 %80, %84
  br i1 %85, label %86, label %88

86:                                               ; preds = %63
  %87 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.9, i64 0, i64 0)) #7
  br label %89

88:                                               ; preds = %63
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %44) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 112, i1 false) #7
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %54, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %55, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %56, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 40, i1 false) #7
  store i32 3, i32* %51, align 8
  store i32* %38, i32** %45, align 8
  store i32 2, i32* %53, align 8
  store i32* %38, i32** %46, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %44) #7
  call void @_ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 3) #7
  br label %89

89:                                               ; preds = %88, %86
  call void @_Z14NextVolumeNamePwjb(i32* nonnull %38, i32 2048, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #7
  br label %90

90:                                               ; preds = %89, %59
  call void @_ZN4FileD1Ev(%class.File* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8248, i8* nonnull %41) #7
  %91 = call zeroext i1 @_Z9FileExistPKw(i32* nonnull %38) #7
  br i1 %91, label %57, label %92

92:                                               ; preds = %90, %36, %62
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %37) #7
  br label %93

93:                                               ; preds = %92, %35
  ret void
}

declare void @_ZN12ErrorHandler16UnknownMethodMsgEPKwS1_(%class.ErrorHandler*, i32*, i32*) local_unnamed_addr #3

declare zeroext i1 @_ZN4File4OpenEPKwj(%class.File*, i32*, i32) unnamed_addr #3

declare void @_ZN12ErrorHandler12OpenErrorMsgEPKw(%class.ErrorHandler*, i32*) local_unnamed_addr #3

declare zeroext i1 @_Z18uiStartFileExtractPKwbbb(i32*, i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #3

declare i32* @_Z2StPKw(i32*) local_unnamed_addr #3

declare void @_ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(%class.ErrorHandler*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11RecVolumes5C2EP10RAROptionsb(%class.RecVolumes5*, %class.RAROptions* nocapture readonly, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = bitcast %class.RecVolumes5* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 33, i1 false) #7
  %5 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 3
  store i8* null, i8** %5, align 8
  %6 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 1
  store i8* null, i8** %6, align 8
  %7 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 5
  %8 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %1, i64 0, i32 106
  %9 = bitcast i64* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false)
  %10 = load i32, i32* %8, align 8
  %11 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 12
  store i32 %10, i32* %11, align 8
  %12 = zext i32 %10 to i64
  %13 = mul nuw nsw i64 %12, 48
  %14 = tail call i8* @_Znam(i64 %13) #8
  %15 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 13
  %16 = bitcast %struct.RecRSThreadData** %15 to i8**
  store i8* %14, i8** %16, align 8
  %17 = icmp eq i32 %10, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %3
  %19 = bitcast i8* %14 to %class.RecVolumes5**
  store %class.RecVolumes5* %0, %class.RecVolumes5** %19, align 8
  %20 = load %struct.RecRSThreadData*, %struct.RecRSThreadData** %15, align 8
  %21 = getelementptr inbounds %struct.RecRSThreadData, %struct.RecRSThreadData* %20, i64 0, i32 1
  store %class.RSCoder16* null, %class.RSCoder16** %21, align 8
  %22 = load i32, i32* %11, align 8
  %23 = icmp ugt i32 %22, 1
  br i1 %23, label %26, label %24

24:                                               ; preds = %26, %18, %3
  %25 = phi i32 [ 0, %3 ], [ %22, %18 ], [ %33, %26 ]
  br i1 %2, label %36, label %38

26:                                               ; preds = %18, %26
  %27 = phi i64 [ %32, %26 ], [ 1, %18 ]
  %28 = load %struct.RecRSThreadData*, %struct.RecRSThreadData** %15, align 8
  %29 = getelementptr inbounds %struct.RecRSThreadData, %struct.RecRSThreadData* %28, i64 %27, i32 0
  store %class.RecVolumes5* %0, %class.RecVolumes5** %29, align 8
  %30 = load %struct.RecRSThreadData*, %struct.RecRSThreadData** %15, align 8
  %31 = getelementptr inbounds %struct.RecRSThreadData, %struct.RecRSThreadData* %30, i64 %27, i32 1
  store %class.RSCoder16* null, %class.RSCoder16** %31, align 8
  %32 = add nuw nsw i64 %27, 1
  %33 = load i32, i32* %11, align 8
  %34 = zext i32 %33 to i64
  %35 = icmp ult i64 %32, %34
  br i1 %35, label %26, label %24

36:                                               ; preds = %24
  %37 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 11
  store %class.ThreadPool* null, %class.ThreadPool** %37, align 8
  br label %45

38:                                               ; preds = %24
  %39 = tail call i8* @_Znwm(i64 1792) #8
  %40 = bitcast i8* %39 to %class.ThreadPool*
  tail call void @_ZN10ThreadPoolC1Ej(%class.ThreadPool* nonnull %40, i32 %25) #7
  %41 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 11
  %42 = bitcast %class.ThreadPool** %41 to i8**
  store i8* %39, i8** %42, align 8
  %43 = tail call i8* @_Znam(i64 67108865) #8
  store i8* %43, i8** %5, align 8
  %44 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 4
  store i8* %43, i8** %44, align 8
  br label %45

45:                                               ; preds = %38, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11RecVolumes5D2Ev(%class.RecVolumes5* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 3
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %3) #8
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 1
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdaPv(i8* nonnull %8) #8
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %37, %11
  %18 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 12
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 13
  %22 = load %struct.RecRSThreadData*, %struct.RecRSThreadData** %21, align 8
  br i1 %20, label %42, label %45

23:                                               ; preds = %15, %37
  %24 = phi i64 [ %13, %15 ], [ %38, %37 ]
  %25 = phi i64 [ 0, %15 ], [ %40, %37 ]
  %26 = phi i32 [ 0, %15 ], [ %39, %37 ]
  %27 = load %struct.RecVolItem*, %struct.RecVolItem** %16, align 8
  %28 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %27, i64 %25, i32 0
  %29 = load %class.File*, %class.File** %28, align 8
  %30 = icmp eq %class.File* %29, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %23
  %32 = bitcast %class.File* %29 to void (%class.File*)***
  %33 = load void (%class.File*)**, void (%class.File*)*** %32, align 8
  %34 = getelementptr inbounds void (%class.File*)*, void (%class.File*)** %33, i64 1
  %35 = load void (%class.File*)*, void (%class.File*)** %34, align 8
  tail call void %35(%class.File* nonnull %29) #7
  %36 = load i64, i64* %12, align 8
  br label %37

37:                                               ; preds = %23, %31
  %38 = phi i64 [ %24, %23 ], [ %36, %31 ]
  %39 = add i32 %26, 1
  %40 = zext i32 %39 to i64
  %41 = icmp ugt i64 %38, %40
  br i1 %41, label %23, label %17

42:                                               ; preds = %56, %17
  %43 = phi %struct.RecRSThreadData* [ %22, %17 ], [ %57, %56 ]
  %44 = icmp eq %struct.RecRSThreadData* %43, null
  br i1 %44, label %64, label %62

45:                                               ; preds = %17, %56
  %46 = phi %struct.RecRSThreadData* [ %57, %56 ], [ %22, %17 ]
  %47 = phi i32 [ %58, %56 ], [ %19, %17 ]
  %48 = phi i64 [ %59, %56 ], [ 0, %17 ]
  %49 = getelementptr inbounds %struct.RecRSThreadData, %struct.RecRSThreadData* %46, i64 %48, i32 1
  %50 = load %class.RSCoder16*, %class.RSCoder16** %49, align 8
  %51 = icmp eq %class.RSCoder16* %50, null
  br i1 %51, label %56, label %52

52:                                               ; preds = %45
  tail call void @_ZN9RSCoder16D1Ev(%class.RSCoder16* nonnull %50) #7
  %53 = bitcast %class.RSCoder16* %50 to i8*
  tail call void @_ZdlPv(i8* %53) #8
  %54 = load i32, i32* %18, align 8
  %55 = load %struct.RecRSThreadData*, %struct.RecRSThreadData** %21, align 8
  br label %56

56:                                               ; preds = %45, %52
  %57 = phi %struct.RecRSThreadData* [ %46, %45 ], [ %55, %52 ]
  %58 = phi i32 [ %47, %45 ], [ %54, %52 ]
  %59 = add nuw nsw i64 %48, 1
  %60 = zext i32 %58 to i64
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %45, label %42

62:                                               ; preds = %42
  %63 = bitcast %struct.RecRSThreadData* %43 to i8*
  tail call void @_ZdaPv(i8* %63) #8
  br label %64

64:                                               ; preds = %62, %42
  %65 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 11
  %66 = load %class.ThreadPool*, %class.ThreadPool** %65, align 8
  %67 = icmp eq %class.ThreadPool* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %64
  tail call void @_ZN10ThreadPoolD1Ev(%class.ThreadPool* nonnull %66) #7
  %69 = bitcast %class.ThreadPool* %66 to i8*
  tail call void @_ZdlPv(i8* %69) #8
  br label %70

70:                                               ; preds = %68, %64
  %71 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 0, i32 0
  %72 = load %struct.RecVolItem*, %struct.RecVolItem** %71, align 8
  %73 = icmp eq %struct.RecVolItem* %72, null
  %74 = bitcast %struct.RecVolItem* %72 to i8*
  br i1 %73, label %87, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 0, i32 4
  %77 = load i8, i8* %76, align 8, !range !34
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %85, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 0, i32 2
  %81 = load i64, i64* %80, align 8
  %82 = mul i64 %81, 8224
  tail call void @_Z9cleandataPvm(i8* nonnull %74, i64 %82) #7
  %83 = bitcast %class.RecVolumes5* %0 to i8**
  %84 = load i8*, i8** %83, align 8
  br label %85

85:                                               ; preds = %79, %75
  %86 = phi i8* [ %84, %79 ], [ %74, %75 ]
  tail call void @free(i8* %86) #7
  br label %87

87:                                               ; preds = %70, %85
  ret void
}

; Function Attrs: nounwind
declare void @_ZN9RSCoder16D1Ev(%class.RSCoder16*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z11RecThreadRSPv(i8* nocapture readonly) #0 {
  %2 = bitcast i8* %0 to %class.RecVolumes5**
  %3 = load %class.RecVolumes5*, %class.RecVolumes5** %2, align 8
  %4 = getelementptr inbounds i8, i8* %0, i64 16
  %5 = load i8, i8* %4, align 8, !range !34
  %6 = icmp eq i8 %5, 0
  %7 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %3, i64 0, i32 7
  %8 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %3, i64 0, i32 10
  %9 = select i1 %6, i32* %8, i32* %7
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %42, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds i8, i8* %0, i64 8
  %14 = bitcast i8* %13 to %class.RSCoder16**
  %15 = getelementptr inbounds i8, i8* %0, i64 20
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds i8, i8* %0, i64 24
  %18 = bitcast i8* %17 to i8**
  %19 = getelementptr inbounds i8, i8* %0, i64 32
  %20 = bitcast i8* %19 to i64*
  %21 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %3, i64 0, i32 4
  %22 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %3, i64 0, i32 5
  %23 = getelementptr inbounds i8, i8* %0, i64 40
  %24 = bitcast i8* %23 to i64*
  %25 = zext i32 %10 to i64
  br label %26

26:                                               ; preds = %26, %12
  %27 = phi i64 [ 0, %12 ], [ %40, %26 ]
  %28 = load %class.RSCoder16*, %class.RSCoder16** %14, align 8
  %29 = load i32, i32* %16, align 4
  %30 = load i8*, i8** %18, align 8
  %31 = load i64, i64* %20, align 8
  %32 = getelementptr inbounds i8, i8* %30, i64 %31
  %33 = load i8*, i8** %21, align 8
  %34 = load i64, i64* %22, align 8
  %35 = mul i64 %34, %27
  %36 = getelementptr inbounds i8, i8* %33, i64 %35
  %37 = getelementptr inbounds i8, i8* %36, i64 %31
  %38 = load i64, i64* %24, align 8
  %39 = trunc i64 %27 to i32
  tail call void @_ZN9RSCoder169UpdateECCEjjPKhPhm(%class.RSCoder16* %28, i32 %29, i32 %39, i8* %32, i8* %37, i64 %38) #7
  %40 = add nuw nsw i64 %27, 1
  %41 = icmp eq i64 %40, %25
  br i1 %41, label %42, label %26

42:                                               ; preds = %26, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11RecVolumes513ProcessAreaRSEP15RecRSThreadData(%class.RecVolumes5* nocapture readonly, %struct.RecRSThreadData* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.RecRSThreadData, %struct.RecRSThreadData* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !34
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 7
  %7 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 10
  %8 = select i1 %5, i32* %7, i32* %6
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.RecRSThreadData, %struct.RecRSThreadData* %1, i64 0, i32 1
  %13 = getelementptr inbounds %struct.RecRSThreadData, %struct.RecRSThreadData* %1, i64 0, i32 3
  %14 = getelementptr inbounds %struct.RecRSThreadData, %struct.RecRSThreadData* %1, i64 0, i32 4
  %15 = getelementptr inbounds %struct.RecRSThreadData, %struct.RecRSThreadData* %1, i64 0, i32 5
  %16 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 4
  %17 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 5
  %18 = getelementptr inbounds %struct.RecRSThreadData, %struct.RecRSThreadData* %1, i64 0, i32 6
  %19 = zext i32 %9 to i64
  br label %21

20:                                               ; preds = %21, %2
  ret void

21:                                               ; preds = %21, %11
  %22 = phi i64 [ 0, %11 ], [ %35, %21 ]
  %23 = load %class.RSCoder16*, %class.RSCoder16** %12, align 8
  %24 = load i32, i32* %13, align 4
  %25 = load i8*, i8** %14, align 8
  %26 = load i64, i64* %15, align 8
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  %28 = load i8*, i8** %16, align 8
  %29 = load i64, i64* %17, align 8
  %30 = mul i64 %29, %22
  %31 = getelementptr inbounds i8, i8* %28, i64 %30
  %32 = getelementptr inbounds i8, i8* %31, i64 %26
  %33 = load i64, i64* %18, align 8
  %34 = trunc i64 %22 to i32
  tail call void @_ZN9RSCoder169UpdateECCEjjPKhPhm(%class.RSCoder16* %23, i32 %24, i32 %34, i8* %27, i8* %32, i64 %33) #7
  %35 = add nuw nsw i64 %22, 1
  %36 = icmp eq i64 %35, %19
  br i1 %36, label %20, label %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11RecVolumes59ProcessRSEP10RAROptionsjPKhjb(%class.RecVolumes5* nocapture readonly, %class.RAROptions* nocapture readnone, i32, i8*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = zext i1 %5 to i8
  %8 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 12
  %9 = load i32, i32* %8, align 8
  %10 = lshr i32 %4, 12
  %11 = icmp ult i32 %9, %10
  %12 = select i1 %11, i32 %9, i32 %10
  %13 = icmp eq i32 %12, 0
  %14 = select i1 %13, i32 1, i32 %12
  %15 = udiv i32 %4, %14
  %16 = and i32 %15, 1
  %17 = add i32 %16, %15
  %18 = zext i32 %4 to i64
  %19 = zext i32 %14 to i64
  %20 = icmp ne i32 %14, 0
  %21 = icmp ne i32 %4, 0
  %22 = and i1 %20, %21
  br i1 %22, label %23, label %39

23:                                               ; preds = %6
  %24 = icmp ugt i32 %17, 4096
  %25 = select i1 %24, i32 %17, i32 4096
  %26 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 13
  %27 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 6
  %28 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 7
  %29 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 9
  %30 = zext i32 %25 to i64
  %31 = add nsw i32 %14, -1
  %32 = zext i32 %31 to i64
  %33 = icmp ugt i32 %14, 1
  %34 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 10
  %35 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 4
  %36 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 5
  %37 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 11
  %38 = select i1 %5, i32* %28, i32* %34
  br label %42

39:                                               ; preds = %102, %6
  %40 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 11
  %41 = load %class.ThreadPool*, %class.ThreadPool** %40, align 8
  tail call void @_ZN10ThreadPool8WaitDoneEv(%class.ThreadPool* %41) #7
  ret void

42:                                               ; preds = %23, %102
  %43 = phi i64 [ 0, %23 ], [ %70, %102 ]
  %44 = phi i64 [ 0, %23 ], [ %103, %102 ]
  %45 = load %struct.RecRSThreadData*, %struct.RecRSThreadData** %26, align 8
  %46 = getelementptr inbounds %struct.RecRSThreadData, %struct.RecRSThreadData* %45, i64 %44
  %47 = getelementptr inbounds %struct.RecRSThreadData, %struct.RecRSThreadData* %45, i64 %44, i32 1
  %48 = load %class.RSCoder16*, %class.RSCoder16** %47, align 8
  %49 = icmp eq %class.RSCoder16* %48, null
  br i1 %49, label %50, label %61

50:                                               ; preds = %42
  %51 = tail call i8* @_Znwm(i64 64) #8
  %52 = bitcast i8* %51 to %class.RSCoder16*
  tail call void @_ZN9RSCoder16C1Ev(%class.RSCoder16* nonnull %52) #7
  %53 = bitcast %class.RSCoder16** %47 to i8**
  store i8* %51, i8** %53, align 8
  %54 = load i32, i32* %27, align 8
  %55 = load i32, i32* %28, align 4
  br i1 %5, label %58, label %56

56:                                               ; preds = %50
  %57 = load i8*, i8** %29, align 8
  br label %58

58:                                               ; preds = %50, %56
  %59 = phi i8* [ %57, %56 ], [ null, %50 ]
  %60 = tail call zeroext i1 @_ZN9RSCoder164InitEjjPb(%class.RSCoder16* nonnull %52, i32 %54, i32 %55, i8* %59) #7
  br label %61

61:                                               ; preds = %58, %42
  %62 = getelementptr inbounds %struct.RecRSThreadData, %struct.RecRSThreadData* %45, i64 %44, i32 3
  store i32 %2, i32* %62, align 4
  %63 = getelementptr inbounds %struct.RecRSThreadData, %struct.RecRSThreadData* %45, i64 %44, i32 4
  store i8* %3, i8** %63, align 8
  %64 = getelementptr inbounds %struct.RecRSThreadData, %struct.RecRSThreadData* %45, i64 %44, i32 2
  store i8 %7, i8* %64, align 8
  %65 = getelementptr inbounds %struct.RecRSThreadData, %struct.RecRSThreadData* %45, i64 %44, i32 5
  store i64 %43, i64* %65, align 8
  %66 = add i64 %43, %30
  %67 = icmp ugt i64 %66, %18
  %68 = icmp eq i64 %44, %32
  %69 = or i1 %67, %68
  %70 = select i1 %69, i64 %18, i64 %66
  %71 = sub i64 %70, %43
  %72 = getelementptr inbounds %struct.RecRSThreadData, %struct.RecRSThreadData* %45, i64 %44, i32 6
  store i64 %71, i64* %72, align 8
  br i1 %33, label %73, label %76

73:                                               ; preds = %61
  %74 = load %class.ThreadPool*, %class.ThreadPool** %37, align 8
  %75 = bitcast %struct.RecRSThreadData* %46 to i8*
  tail call void @_ZN10ThreadPool7AddTaskEPFvPvES0_(%class.ThreadPool* %74, void (i8*)* nonnull @_Z11RecThreadRSPv, i8* %75) #7
  br label %102

76:                                               ; preds = %61
  %77 = load i32, i32* %38, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %102, label %79

79:                                               ; preds = %76
  %80 = zext i32 %77 to i64
  %81 = load %class.RSCoder16*, %class.RSCoder16** %47, align 8
  %82 = getelementptr inbounds i8, i8* %3, i64 %43
  %83 = load i8*, i8** %35, align 8
  %84 = getelementptr inbounds i8, i8* %83, i64 %43
  tail call void @_ZN9RSCoder169UpdateECCEjjPKhPhm(%class.RSCoder16* %81, i32 %2, i32 0, i8* %82, i8* %84, i64 %71) #7
  %85 = icmp eq i32 %77, 1
  br i1 %85, label %102, label %86

86:                                               ; preds = %79, %86
  %87 = phi i64 [ %100, %86 ], [ 1, %79 ]
  %88 = load i32, i32* %62, align 4
  %89 = load i8*, i8** %63, align 8
  %90 = load i64, i64* %65, align 8
  %91 = load i64, i64* %72, align 8
  %92 = load %class.RSCoder16*, %class.RSCoder16** %47, align 8
  %93 = getelementptr inbounds i8, i8* %89, i64 %90
  %94 = load i8*, i8** %35, align 8
  %95 = load i64, i64* %36, align 8
  %96 = mul i64 %95, %87
  %97 = getelementptr inbounds i8, i8* %94, i64 %96
  %98 = getelementptr inbounds i8, i8* %97, i64 %90
  %99 = trunc i64 %87 to i32
  tail call void @_ZN9RSCoder169UpdateECCEjjPKhPhm(%class.RSCoder16* %92, i32 %88, i32 %99, i8* %93, i8* %98, i64 %91) #7
  %100 = add nuw nsw i64 %87, 1
  %101 = icmp eq i64 %100, %80
  br i1 %101, label %102, label %86

102:                                              ; preds = %86, %79, %76, %73
  %103 = add nuw nsw i64 %44, 1
  %104 = icmp ult i64 %103, %19
  %105 = icmp ult i64 %70, %18
  %106 = and i1 %104, %105
  br i1 %106, label %42, label %39
}

declare void @_ZN9RSCoder16C1Ev(%class.RSCoder16*) unnamed_addr #3

declare zeroext i1 @_ZN9RSCoder164InitEjjPb(%class.RSCoder16*, i32, i32, i8*) local_unnamed_addr #3

declare void @_ZN9RSCoder169UpdateECCEjjPKhPhm(%class.RSCoder16*, i32, i32, i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11RecVolumes57RestoreEP10RAROptionsPKwb(%class.RecVolumes5*, %class.RAROptions*, i32*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.uiMsgStore, align 8
  %6 = alloca %class.uiMsgStore, align 16
  %7 = alloca %class.uiMsgStore, align 16
  %8 = alloca %class.uiMsgStore, align 16
  %9 = alloca %class.uiMsgStore, align 16
  %10 = alloca %class.uiMsgStore, align 8
  %11 = alloca %class.uiMsgStore, align 8
  %12 = alloca %class.uiMsgStore, align 8
  %13 = alloca %class.uiMsgStore, align 16
  %14 = alloca %class.uiMsgStore, align 16
  %15 = alloca %class.uiMsgStore, align 16
  %16 = alloca %class.uiMsgStore, align 8
  %17 = alloca %class.uiMsgStore, align 8
  %18 = alloca %class.uiMsgStore, align 8
  %19 = alloca [2048 x i32], align 16
  %20 = alloca [2048 x i32], align 16
  %21 = alloca %class.FindFile, align 8
  %22 = alloca %struct.FindData, align 8
  %23 = alloca i32, align 4
  %24 = alloca [2048 x i32], align 16
  %25 = alloca i8, align 1
  %26 = alloca %class.RSCoder16, align 8
  %27 = bitcast [2048 x i32]* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %27) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %27, i8 -86, i64 8192, i1 false)
  %28 = getelementptr inbounds [2048 x i32], [2048 x i32]* %19, i64 0, i64 0
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %28, i32* %2, i64 2048) #7
  %29 = call i32* @_Z13GetVolNumPartPKw(i32* nonnull %28) #7
  br label %30

30:                                               ; preds = %33, %4
  %31 = phi i32* [ %29, %4 ], [ %34, %33 ]
  %32 = icmp ugt i32* %31, %28
  br i1 %32, label %33, label %37

33:                                               ; preds = %30
  %34 = getelementptr inbounds i32, i32* %31, i64 -1
  %35 = load i32, i32* %34, align 4
  %36 = call zeroext i1 @_Z7IsDigiti(i32 %35) #7
  br i1 %36, label %30, label %37

37:                                               ; preds = %30, %33
  %38 = icmp eq i32* %31, %28
  br i1 %38, label %727, label %39

39:                                               ; preds = %37
  %40 = ptrtoint i32* %31 to i64
  %41 = ptrtoint [2048 x i32]* %19 to i64
  %42 = sub i64 %40, %41
  %43 = ashr exact i64 %42, 2
  %44 = sub nsw i64 2048, %43
  call void @_Z8wcsncpyzPwPKwm(i32* %31, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.1, i64 0, i64 0), i64 %44) #7
  %45 = bitcast [2048 x i32]* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %45) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %45, i8 -86, i64 8192, i1 false)
  %46 = getelementptr inbounds [2048 x i32], [2048 x i32]* %20, i64 0, i64 0
  store i32 0, i32* %46, align 16
  %47 = bitcast %class.FindFile* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8208, i8* nonnull %47) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 8208, i1 false)
  call void @_ZN8FindFileC1Ev(%class.FindFile* nonnull %21) #7
  call void @_ZN8FindFile7SetMaskEPKw(%class.FindFile* nonnull %21, i32* nonnull %28) #7
  %48 = bitcast %struct.FindData* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8240, i8* nonnull %48) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 8240, i1 false)
  %49 = getelementptr inbounds %struct.FindData, %struct.FindData* %22, i64 0, i32 6, i32 0
  %50 = bitcast i64* %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #7
  %51 = call zeroext i1 @_ZN8FindFile4NextEP8FindDatab(%class.FindFile* nonnull %21, %struct.FindData* nonnull %22, i1 zeroext false) #7
  br i1 %51, label %52, label %208

52:                                               ; preds = %39
  %53 = getelementptr inbounds %struct.FindData, %struct.FindData* %22, i64 0, i32 0, i64 0
  %54 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 0
  %55 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 0, i32 1
  %56 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 0, i32 2
  %57 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 0, i32 0
  br label %58

58:                                               ; preds = %52, %204
  %59 = phi i32 [ 0, %52 ], [ %206, %204 ]
  %60 = phi i64 [ 0, %52 ], [ %205, %204 ]
  call void @_Z4Waitv() #7
  %61 = call i8* @_Znwm(i64 65336) #8
  %62 = bitcast i8* %61 to %class.Archive*
  call void @_ZN7ArchiveC1EP10RAROptions(%class.Archive* nonnull %62, %class.RAROptions* %1) #7
  %63 = bitcast i8* %61 to %class.File*
  %64 = call zeroext i1 @_ZN4File5WOpenEPKw(%class.File* nonnull %63, i32* nonnull %53) #7
  br i1 %64, label %65, label %186

65:                                               ; preds = %58
  %66 = call zeroext i1 @_Z6CmpExtPKwS0_(i32* nonnull %53, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.10, i64 0, i64 0)) #7
  br i1 %66, label %67, label %77

67:                                               ; preds = %65
  %68 = icmp eq i32 %59, 0
  %69 = call i32 @_ZN11RecVolumes510ReadHeaderEP4Fileb(%class.RecVolumes5* %0, %class.File* nonnull %63, i1 zeroext %68)
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %186, label %71

71:                                               ; preds = %67
  br i1 %68, label %72, label %74

72:                                               ; preds = %71
  %73 = call i64 @_ZN4File10FileLengthEv(%class.File* nonnull %63) #7
  br label %74

74:                                               ; preds = %72, %71
  %75 = phi i64 [ %73, %72 ], [ %60, %71 ]
  %76 = add i32 %59, 1
  br label %181

77:                                               ; preds = %65
  %78 = call zeroext i1 @_ZN7Archive9IsArchiveEb(%class.Archive* nonnull %62, i1 zeroext true) #7
  br i1 %78, label %79, label %186

79:                                               ; preds = %77
  %80 = getelementptr inbounds i8, i8* %61, i64 57080
  %81 = bitcast i8* %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %79
  %85 = call zeroext i1 @_Z6CmpExtPKwS0_(i32* nonnull %53, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.11, i64 0, i64 0)) #7
  br i1 %85, label %86, label %186

86:                                               ; preds = %79, %84
  %87 = getelementptr inbounds i8, i8* %61, i64 57069
  %88 = load i8, i8* %87, align 1, !range !34
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %108

90:                                               ; preds = %86
  %91 = getelementptr inbounds i8, i8* %61, i64 57088
  %92 = load i8, i8* %91, align 8, !range !34
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %94, label %108

94:                                               ; preds = %90
  %95 = bitcast %class.uiMsgStore* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %95) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 -86, i64 112, i1 false) #7
  %96 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %18, i64 0, i32 0, i64 0
  %97 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %18, i64 0, i32 0, i64 1
  %98 = bitcast i32** %97 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %98, align 8
  %99 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %18, i64 0, i32 0, i64 3
  %100 = bitcast i32** %99 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %100, align 8
  %101 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %18, i64 0, i32 0, i64 5
  %102 = bitcast i32** %101 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %102, align 8
  %103 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %18, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32** %103, align 8
  %104 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %18, i64 0, i32 1, i64 0
  %105 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %18, i64 0, i32 4
  %106 = bitcast i32* %104 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 40, i1 false) #7
  store i32 47, i32* %105, align 8
  %107 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %18, i64 0, i32 2
  store i32 1, i32* %107, align 8
  store i32* %28, i32** %96, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %18) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %95) #7
  br label %725

108:                                              ; preds = %90, %86
  %109 = getelementptr inbounds i8, i8* %61, i64 21352
  store i8 0, i8* %109, align 8
  %110 = bitcast i8* %61 to void (%class.Archive*, i64, i32)***
  %111 = load void (%class.Archive*, i64, i32)**, void (%class.Archive*, i64, i32)*** %110, align 8
  %112 = getelementptr inbounds void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %111, i64 5
  %113 = load void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %112, align 8
  call void %113(%class.Archive* nonnull %62, i64 0, i32 0) #7
  %114 = call i32* @_Z13GetVolNumPartPKw(i32* nonnull %53) #7
  %115 = icmp ult i32* %114, %53
  br i1 %115, label %204, label %116

116:                                              ; preds = %108, %126
  %117 = phi i32 [ %131, %126 ], [ 1, %108 ]
  %118 = phi i32 [ %130, %126 ], [ 0, %108 ]
  %119 = phi i32* [ %132, %126 ], [ %114, %108 ]
  %120 = load i32, i32* %119, align 4
  %121 = call zeroext i1 @_Z7IsDigiti(i32 %120) #7
  br i1 %121, label %126, label %122

122:                                              ; preds = %116, %126
  %123 = phi i32 [ %118, %116 ], [ %130, %126 ]
  %124 = add i32 %123, -1
  %125 = icmp ugt i32 %124, 65534
  br i1 %125, label %204, label %134

126:                                              ; preds = %116
  %127 = load i32, i32* %119, align 4
  %128 = add nsw i32 %127, -48
  %129 = mul i32 %128, %117
  %130 = add i32 %129, %118
  %131 = mul i32 %117, 10
  %132 = getelementptr inbounds i32, i32* %119, i64 -1
  %133 = icmp ult i32* %132, %53
  br i1 %133, label %122, label %116

134:                                              ; preds = %122
  %135 = load i64, i64* %55, align 8
  %136 = zext i32 %123 to i64
  %137 = icmp ult i64 %135, %136
  br i1 %137, label %138, label %176

138:                                              ; preds = %134
  %139 = load i64, i64* %56, align 8
  %140 = icmp ult i64 %139, %136
  br i1 %140, label %141, label %143

141:                                              ; preds = %138
  %142 = sub i64 %136, %135
  call void @_ZN5ArrayI10RecVolItemE3AddEm(%class.Array.6* %54, i64 %142) #7
  br label %144

143:                                              ; preds = %138
  store i64 %136, i64* %55, align 8
  br label %144

144:                                              ; preds = %143, %141
  %145 = sub i64 %136, %135
  %146 = xor i64 %135, -1
  %147 = add i64 %146, %136
  %148 = and i64 %145, 3
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %158, label %150

150:                                              ; preds = %144, %150
  %151 = phi i64 [ %155, %150 ], [ %135, %144 ]
  %152 = phi i64 [ %156, %150 ], [ %148, %144 ]
  %153 = load %struct.RecVolItem*, %struct.RecVolItem** %57, align 8
  %154 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %153, i64 %151, i32 0
  store %class.File* null, %class.File** %154, align 8
  %155 = add nuw nsw i64 %151, 1
  %156 = add i64 %152, -1
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %150, !llvm.loop !43

158:                                              ; preds = %150, %144
  %159 = phi i64 [ %135, %144 ], [ %155, %150 ]
  %160 = icmp ult i64 %147, 3
  br i1 %160, label %176, label %161

161:                                              ; preds = %158, %161
  %162 = phi i64 [ %174, %161 ], [ %159, %158 ]
  %163 = load %struct.RecVolItem*, %struct.RecVolItem** %57, align 8
  %164 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %163, i64 %162, i32 0
  store %class.File* null, %class.File** %164, align 8
  %165 = add nuw nsw i64 %162, 1
  %166 = load %struct.RecVolItem*, %struct.RecVolItem** %57, align 8
  %167 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %166, i64 %165, i32 0
  store %class.File* null, %class.File** %167, align 8
  %168 = add nuw nsw i64 %162, 2
  %169 = load %struct.RecVolItem*, %struct.RecVolItem** %57, align 8
  %170 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %169, i64 %168, i32 0
  store %class.File* null, %class.File** %170, align 8
  %171 = add nuw nsw i64 %162, 3
  %172 = load %struct.RecVolItem*, %struct.RecVolItem** %57, align 8
  %173 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %172, i64 %171, i32 0
  store %class.File* null, %class.File** %173, align 8
  %174 = add nuw nsw i64 %162, 4
  %175 = icmp eq i64 %174, %136
  br i1 %175, label %176, label %161

176:                                              ; preds = %158, %161, %134
  %177 = load i32, i32* %46, align 16
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %181

179:                                              ; preds = %176
  %180 = call i32* @_Z18VolNameToFirstNamePKwPwmb(i32* nonnull %53, i32* nonnull %46, i64 2048, i1 zeroext true) #7
  br label %181

181:                                              ; preds = %176, %179, %74
  %182 = phi i64 [ %75, %74 ], [ %60, %179 ], [ %60, %176 ]
  %183 = phi i32 [ %76, %74 ], [ %59, %179 ], [ %59, %176 ]
  %184 = phi i32 [ %69, %74 ], [ %124, %179 ], [ %124, %176 ]
  %185 = icmp eq i32 %184, -1
  br i1 %185, label %186, label %193

186:                                              ; preds = %67, %58, %77, %84, %181
  %187 = phi i32 [ %183, %181 ], [ %59, %84 ], [ %59, %77 ], [ %59, %58 ], [ %59, %67 ]
  %188 = phi i64 [ %182, %181 ], [ %60, %84 ], [ %60, %77 ], [ %60, %58 ], [ %60, %67 ]
  %189 = bitcast i8* %61 to void (%class.Archive*)***
  %190 = load void (%class.Archive*)**, void (%class.Archive*)*** %189, align 8
  %191 = getelementptr inbounds void (%class.Archive*)*, void (%class.Archive*)** %190, i64 1
  %192 = load void (%class.Archive*)*, void (%class.Archive*)** %191, align 8
  call void %192(%class.Archive* nonnull %62) #7
  br label %204

193:                                              ; preds = %181
  %194 = zext i32 %184 to i64
  %195 = load i64, i64* %55, align 8
  %196 = icmp ugt i64 %195, %194
  br i1 %196, label %197, label %204

197:                                              ; preds = %193
  %198 = sext i32 %184 to i64
  %199 = load %struct.RecVolItem*, %struct.RecVolItem** %57, align 8
  %200 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %199, i64 %198
  %201 = bitcast %struct.RecVolItem* %200 to i8**
  store i8* %61, i8** %201, align 8
  %202 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %199, i64 %198, i32 4
  store i8 0, i8* %202, align 8
  %203 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %199, i64 %198, i32 1, i64 0
  call void @_Z8wcsncpyzPwPKwm(i32* %203, i32* nonnull %53, i64 2048) #7
  br label %204

204:                                              ; preds = %108, %122, %186, %197, %193
  %205 = phi i64 [ %182, %193 ], [ %182, %197 ], [ %188, %186 ], [ %60, %122 ], [ %60, %108 ]
  %206 = phi i32 [ %183, %193 ], [ %183, %197 ], [ %187, %186 ], [ %59, %122 ], [ %59, %108 ]
  %207 = call zeroext i1 @_ZN8FindFile4NextEP8FindDatab(%class.FindFile* nonnull %21, %struct.FindData* nonnull %22, i1 zeroext false) #7
  br i1 %207, label %58, label %208

208:                                              ; preds = %204, %39
  %209 = phi i64 [ 0, %39 ], [ %205, %204 ]
  %210 = phi i32 [ 0, %39 ], [ %206, %204 ]
  %211 = xor i1 %3, true
  %212 = icmp ne i32 %210, 0
  %213 = or i1 %212, %211
  br i1 %213, label %214, label %725

214:                                              ; preds = %208
  %215 = bitcast %class.uiMsgStore* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %215) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %215, i8 -86, i64 112, i1 false) #7
  %216 = bitcast %class.uiMsgStore* %15 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %216, align 16
  %217 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %15, i64 0, i32 0, i64 2
  %218 = bitcast i32** %217 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %218, align 16
  %219 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %15, i64 0, i32 0, i64 4
  %220 = bitcast i32** %219 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %220, align 16
  %221 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %15, i64 0, i32 0, i64 6
  %222 = bitcast i32** %221 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %222, align 16
  %223 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %15, i64 0, i32 1, i64 0
  %224 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %15, i64 0, i32 4
  %225 = bitcast i32* %223 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %225, i8 0, i64 40, i1 false) #7
  store i32 119, i32* %224, align 8
  %226 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %15, i64 0, i32 3
  store i32 1, i32* %226, align 4
  store i32 %210, i32* %223, align 16
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %15) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %215) #7
  %227 = icmp eq i32 %210, 0
  br i1 %227, label %725, label %228

228:                                              ; preds = %214
  %229 = bitcast %class.uiMsgStore* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %229) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %229, i8 -86, i64 112, i1 false) #7
  %230 = bitcast %class.uiMsgStore* %14 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %230, align 16
  %231 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %14, i64 0, i32 0, i64 2
  %232 = bitcast i32** %231 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %232, align 16
  %233 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %14, i64 0, i32 0, i64 4
  %234 = bitcast i32** %233 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %234, align 16
  %235 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %14, i64 0, i32 0, i64 6
  %236 = bitcast i32** %235 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %236, align 16
  %237 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %14, i64 0, i32 1, i64 0
  %238 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %14, i64 0, i32 4
  %239 = bitcast i32* %237 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %239, i8 0, i64 40, i1 false) #7
  store i32 118, i32* %238, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %14) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %229) #7
  %240 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 10
  store i32 0, i32* %240, align 8
  %241 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 8
  %242 = load i32, i32* %241, align 8
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %277, label %244

244:                                              ; preds = %228
  %245 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 0, i32 0
  %246 = bitcast %class.uiMsgStore* %11 to i8*
  %247 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %11, i64 0, i32 0, i64 0
  %248 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %11, i64 0, i32 0, i64 1
  %249 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %11, i64 0, i32 0, i64 3
  %250 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %11, i64 0, i32 0, i64 5
  %251 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %11, i64 0, i32 0, i64 7
  %252 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %11, i64 0, i32 1, i64 0
  %253 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %11, i64 0, i32 4
  %254 = bitcast i32* %252 to i8*
  %255 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %11, i64 0, i32 2
  %256 = bitcast i32* %23 to i8*
  %257 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 12
  %258 = bitcast %class.uiMsgStore* %10 to i8*
  %259 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %10, i64 0, i32 0, i64 0
  %260 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %10, i64 0, i32 0, i64 1
  %261 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %10, i64 0, i32 0, i64 3
  %262 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %10, i64 0, i32 0, i64 5
  %263 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %10, i64 0, i32 0, i64 7
  %264 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %10, i64 0, i32 1, i64 0
  %265 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %10, i64 0, i32 4
  %266 = bitcast i32* %264 to i8*
  %267 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %10, i64 0, i32 2
  %268 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 6
  %269 = bitcast i32** %248 to <2 x i32*>*
  %270 = bitcast i32** %249 to <2 x i32*>*
  %271 = bitcast i32** %250 to <2 x i32*>*
  %272 = bitcast i32** %260 to <2 x i32*>*
  %273 = bitcast i32** %261 to <2 x i32*>*
  %274 = bitcast i32** %262 to <2 x i32*>*
  br label %294

275:                                              ; preds = %340
  %276 = load i32, i32* %240, align 8
  br label %277

277:                                              ; preds = %275, %228
  %278 = phi i32 [ 0, %228 ], [ %276, %275 ]
  %279 = phi i32 [ %210, %228 ], [ %326, %275 ]
  %280 = bitcast %class.uiMsgStore* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %280) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %280, i8 -86, i64 112, i1 false) #7
  %281 = bitcast %class.uiMsgStore* %13 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %281, align 16
  %282 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %13, i64 0, i32 0, i64 2
  %283 = bitcast i32** %282 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %283, align 16
  %284 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %13, i64 0, i32 0, i64 4
  %285 = bitcast i32** %284 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %285, align 16
  %286 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %13, i64 0, i32 0, i64 6
  %287 = bitcast i32** %286 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %287, align 16
  %288 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %13, i64 0, i32 1, i64 0
  %289 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %13, i64 0, i32 4
  %290 = bitcast i32* %288 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %290, i8 0, i64 40, i1 false) #7
  store i32 120, i32* %289, align 8
  %291 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %13, i64 0, i32 3
  store i32 1, i32* %291, align 4
  store i32 %278, i32* %288, align 16
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %13) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %280) #7
  %292 = load i32, i32* %240, align 8
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %345, label %357

294:                                              ; preds = %244, %340
  %295 = phi i64 [ 0, %244 ], [ %341, %340 ]
  %296 = phi i32 [ %210, %244 ], [ %326, %340 ]
  %297 = load %struct.RecVolItem*, %struct.RecVolItem** %245, align 8
  %298 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %297, i64 %295, i32 0
  %299 = load %class.File*, %class.File** %298, align 8
  %300 = icmp eq %class.File* %299, null
  br i1 %300, label %325, label %301

301:                                              ; preds = %294
  %302 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %297, i64 %295, i32 1, i64 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %246) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %246, i8 -86, i64 112, i1 false) #7
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %269, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %270, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %271, align 8
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32** %251, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %254, i8 0, i64 40, i1 false) #7
  store i32 100, i32* %253, align 8
  store i32 1, i32* %255, align 8
  store i32* %302, i32** %247, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %11) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %246) #7
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %256) #7
  store i32 -1431655766, i32* %23, align 4
  %303 = load %class.File*, %class.File** %298, align 8
  %304 = load i32, i32* %257, align 8
  call void @_Z11CalcFileSumP4FilePjPhjlj(%class.File* %303, i32* nonnull %23, i8* null, i32 %304, i64 9223372034707292159, i32 8) #7
  %305 = load i32, i32* %23, align 4
  %306 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %297, i64 %295, i32 2
  %307 = load i32, i32* %306, align 8
  %308 = icmp eq i32 %305, %307
  %309 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %297, i64 %295, i32 5
  %310 = zext i1 %308 to i8
  store i8 %310, i8* %309, align 1
  br i1 %308, label %323, label %311

311:                                              ; preds = %301
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %258) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %258, i8 -86, i64 112, i1 false) #7
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %272, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %273, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %274, align 8
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32** %263, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %266, i8 0, i64 40, i1 false) #7
  store i32 123, i32* %265, align 8
  store i32 1, i32* %267, align 8
  store i32* %302, i32** %259, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %10) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %258) #7
  %312 = load i32, i32* %268, align 8
  %313 = zext i32 %312 to i64
  %314 = icmp ult i64 %295, %313
  br i1 %314, label %323, label %315

315:                                              ; preds = %311
  %316 = load %class.File*, %class.File** %298, align 8
  %317 = bitcast %class.File* %316 to i1 (%class.File*)***
  %318 = load i1 (%class.File*)**, i1 (%class.File*)*** %317, align 8
  %319 = getelementptr inbounds i1 (%class.File*)*, i1 (%class.File*)** %318, i64 3
  %320 = load i1 (%class.File*)*, i1 (%class.File*)** %319, align 8
  %321 = call zeroext i1 %320(%class.File* %316) #7
  store %class.File* null, %class.File** %298, align 8
  %322 = add i32 %296, -1
  br label %323

323:                                              ; preds = %311, %315, %301
  %324 = phi i32 [ %296, %301 ], [ %322, %315 ], [ %296, %311 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %256) #7
  br label %325

325:                                              ; preds = %294, %323
  %326 = phi i32 [ %324, %323 ], [ %296, %294 ]
  %327 = load i32, i32* %268, align 8
  %328 = zext i32 %327 to i64
  %329 = icmp ult i64 %295, %328
  br i1 %329, label %330, label %340

330:                                              ; preds = %325
  %331 = load %class.File*, %class.File** %298, align 8
  %332 = icmp eq %class.File* %331, null
  br i1 %332, label %337, label %333

333:                                              ; preds = %330
  %334 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %297, i64 %295, i32 5
  %335 = load i8, i8* %334, align 1, !range !34
  %336 = icmp eq i8 %335, 0
  br i1 %336, label %337, label %340

337:                                              ; preds = %333, %330
  %338 = load i32, i32* %240, align 8
  %339 = add i32 %338, 1
  store i32 %339, i32* %240, align 8
  br label %340

340:                                              ; preds = %333, %337, %325
  %341 = add nuw nsw i64 %295, 1
  %342 = load i32, i32* %241, align 8
  %343 = zext i32 %342 to i64
  %344 = icmp ult i64 %341, %343
  br i1 %344, label %294, label %275

345:                                              ; preds = %277
  %346 = bitcast %class.uiMsgStore* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %346) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %346, i8 -86, i64 112, i1 false) #7
  %347 = bitcast %class.uiMsgStore* %9 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %347, align 16
  %348 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %9, i64 0, i32 0, i64 2
  %349 = bitcast i32** %348 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %349, align 16
  %350 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %9, i64 0, i32 0, i64 4
  %351 = bitcast i32** %350 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %351, align 16
  %352 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %9, i64 0, i32 0, i64 6
  %353 = bitcast i32** %352 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %353, align 16
  %354 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %9, i64 0, i32 1, i64 0
  %355 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %9, i64 0, i32 4
  %356 = bitcast i32* %354 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %356, i8 0, i64 40, i1 false) #7
  store i32 51, i32* %355, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %346) #7
  br label %725

357:                                              ; preds = %277
  %358 = icmp ugt i32 %292, %279
  br i1 %358, label %359, label %383

359:                                              ; preds = %357
  %360 = bitcast %class.uiMsgStore* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %360) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %360, i8 -86, i64 112, i1 false) #7
  %361 = bitcast %class.uiMsgStore* %8 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %361, align 16
  %362 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %8, i64 0, i32 0, i64 2
  %363 = bitcast i32** %362 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %363, align 16
  %364 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %8, i64 0, i32 0, i64 4
  %365 = bitcast i32** %364 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %365, align 16
  %366 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %8, i64 0, i32 0, i64 6
  %367 = bitcast i32** %366 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %367, align 16
  %368 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %8, i64 0, i32 1, i64 0
  %369 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %8, i64 0, i32 4
  %370 = bitcast i32* %368 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %370, i8 0, i64 40, i1 false) #7
  store i32 52, i32* %369, align 8
  %371 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %8, i64 0, i32 3
  store i32 1, i32* %371, align 4
  store i32 %279, i32* %368, align 16
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %360) #7
  %372 = bitcast %class.uiMsgStore* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %372) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %372, i8 -86, i64 112, i1 false) #7
  %373 = bitcast %class.uiMsgStore* %7 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %373, align 16
  %374 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %7, i64 0, i32 0, i64 2
  %375 = bitcast i32** %374 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %375, align 16
  %376 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %7, i64 0, i32 0, i64 4
  %377 = bitcast i32** %376 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %377, align 16
  %378 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %7, i64 0, i32 0, i64 6
  %379 = bitcast i32** %378 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %379, align 16
  %380 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %7, i64 0, i32 1, i64 0
  %381 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %7, i64 0, i32 4
  %382 = bitcast i32* %380 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %382, i8 0, i64 40, i1 false) #7
  store i32 54, i32* %381, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %372) #7
  br label %725

383:                                              ; preds = %357
  %384 = bitcast %class.uiMsgStore* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %384) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %384, i8 -86, i64 112, i1 false) #7
  %385 = bitcast %class.uiMsgStore* %6 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %385, align 16
  %386 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 0, i64 2
  %387 = bitcast i32** %386 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %387, align 16
  %388 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 0, i64 4
  %389 = bitcast i32** %388 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %389, align 16
  %390 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 0, i64 6
  %391 = bitcast i32** %390 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %391, align 16
  %392 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 1, i64 0
  %393 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 4
  %394 = bitcast i32* %392 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %394, i8 0, i64 40, i1 false) #7
  store i32 122, i32* %393, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %384) #7
  %395 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 6
  %396 = load i32, i32* %395, align 8
  %397 = icmp eq i32 %396, 0
  br i1 %397, label %454, label %398

398:                                              ; preds = %383
  %399 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 0, i32 0
  %400 = bitcast [2048 x i32]* %24 to i8*
  %401 = getelementptr inbounds [2048 x i32], [2048 x i32]* %24, i64 0, i64 0
  %402 = bitcast %class.uiMsgStore* %5 to i8*
  %403 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 0
  %404 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 1
  %405 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 3
  %406 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 5
  %407 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 7
  %408 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 1, i64 0
  %409 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 4
  %410 = bitcast i32* %408 to i8*
  %411 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 2
  %412 = bitcast %class.uiMsgStore* %12 to i8*
  %413 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %12, i64 0, i32 0, i64 0
  %414 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %12, i64 0, i32 0, i64 1
  %415 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %12, i64 0, i32 0, i64 2
  %416 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %12, i64 0, i32 0, i64 4
  %417 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %12, i64 0, i32 0, i64 6
  %418 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %12, i64 0, i32 1, i64 0
  %419 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %12, i64 0, i32 4
  %420 = bitcast i32* %418 to i8*
  %421 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %12, i64 0, i32 2
  %422 = bitcast %class.uiMsgStore* %16 to i8*
  %423 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %16, i64 0, i32 0, i64 0
  %424 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %16, i64 0, i32 0, i64 1
  %425 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %16, i64 0, i32 0, i64 3
  %426 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %16, i64 0, i32 0, i64 5
  %427 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %16, i64 0, i32 0, i64 7
  %428 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %16, i64 0, i32 1, i64 0
  %429 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %16, i64 0, i32 4
  %430 = bitcast i32* %428 to i8*
  %431 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %16, i64 0, i32 2
  %432 = bitcast %class.uiMsgStore* %17 to i8*
  %433 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %17, i64 0, i32 0, i64 0
  %434 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %17, i64 0, i32 0, i64 1
  %435 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %17, i64 0, i32 0, i64 3
  %436 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %17, i64 0, i32 0, i64 5
  %437 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %17, i64 0, i32 0, i64 7
  %438 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %17, i64 0, i32 1, i64 0
  %439 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %17, i64 0, i32 4
  %440 = bitcast i32* %438 to i8*
  %441 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %17, i64 0, i32 2
  %442 = bitcast i32** %404 to <2 x i32*>*
  %443 = bitcast i32** %405 to <2 x i32*>*
  %444 = bitcast i32** %406 to <2 x i32*>*
  %445 = bitcast i32** %415 to <2 x i32*>*
  %446 = bitcast i32** %416 to <2 x i32*>*
  %447 = bitcast i32** %417 to <2 x i32*>*
  %448 = bitcast i32** %424 to <2 x i32*>*
  %449 = bitcast i32** %425 to <2 x i32*>*
  %450 = bitcast i32** %426 to <2 x i32*>*
  %451 = bitcast i32** %434 to <2 x i32*>*
  %452 = bitcast i32** %435 to <2 x i32*>*
  %453 = bitcast i32** %436 to <2 x i32*>*
  br label %463

454:                                              ; preds = %521, %383
  %455 = phi i64 [ 0, %383 ], [ %471, %521 ]
  store i32 0, i32* %240, align 8
  %456 = load i32, i32* %241, align 8
  %457 = zext i32 %456 to i64
  %458 = call i8* @_Znam(i64 %457) #8
  %459 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 9
  store i8* %458, i8** %459, align 8
  %460 = icmp eq i32 %456, 0
  br i1 %460, label %528, label %461

461:                                              ; preds = %454
  %462 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 0, i32 0
  br label %540

463:                                              ; preds = %398, %521
  %464 = phi i64 [ 0, %398 ], [ %522, %521 ]
  %465 = phi i64 [ 0, %398 ], [ %471, %521 ]
  %466 = load %struct.RecVolItem*, %struct.RecVolItem** %399, align 8
  %467 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %466, i64 %464
  %468 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %466, i64 %464, i32 3
  %469 = load i64, i64* %468, align 8
  %470 = icmp ugt i64 %469, %465
  %471 = select i1 %470, i64 %469, i64 %465
  %472 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %467, i64 0, i32 0
  %473 = load %class.File*, %class.File** %472, align 8
  %474 = icmp eq %class.File* %473, null
  br i1 %474, label %475, label %477

475:                                              ; preds = %463
  %476 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %466, i64 %464, i32 4
  store i8 1, i8* %476, align 8
  br label %503

477:                                              ; preds = %463
  %478 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %466, i64 %464, i32 5
  %479 = load i8, i8* %478, align 1, !range !34
  %480 = icmp eq i8 %479, 0
  br i1 %480, label %483, label %481

481:                                              ; preds = %477
  %482 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %466, i64 %464, i32 4
  store i8 0, i8* %482, align 8
  br label %521

483:                                              ; preds = %477
  %484 = bitcast %class.File* %473 to i1 (%class.File*)***
  %485 = load i1 (%class.File*)**, i1 (%class.File*)*** %484, align 8
  %486 = getelementptr inbounds i1 (%class.File*)*, i1 (%class.File*)** %485, i64 3
  %487 = load i1 (%class.File*)*, i1 (%class.File*)** %486, align 8
  %488 = call zeroext i1 %487(%class.File* nonnull %473) #7
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %400) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %400, i8 -86, i64 8192, i1 false)
  %489 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %466, i64 %464, i32 1, i64 0
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %401, i32* %489, i64 2048) #7
  call void @_Z8wcsncatzPwPKwm(i32* nonnull %401, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.3, i64 0, i64 0), i64 2048) #7
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %402) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %402, i8 -86, i64 112, i1 false) #7
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %442, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %443, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %444, align 8
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32** %407, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %410, i8 0, i64 40, i1 false) #7
  store i32 115, i32* %409, align 8
  store i32 1, i32* %411, align 8
  store i32* %489, i32** %403, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %402) #7
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %412) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %412, i8 -86, i64 112, i1 false) #7
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %445, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %446, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %447, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %420, i8 0, i64 40, i1 false) #7
  store i32 117, i32* %419, align 8
  store i32* %489, i32** %413, align 8
  store i32 2, i32* %421, align 8
  store i32* %401, i32** %414, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %412) #7
  %490 = call zeroext i1 @_Z10RenameFilePKwS0_(i32* %489, i32* nonnull %401) #7
  %491 = load %class.File*, %class.File** %472, align 8
  %492 = icmp eq %class.File* %491, null
  br i1 %492, label %498, label %493

493:                                              ; preds = %483
  %494 = bitcast %class.File* %491 to void (%class.File*)***
  %495 = load void (%class.File*)**, void (%class.File*)*** %494, align 8
  %496 = getelementptr inbounds void (%class.File*)*, void (%class.File*)** %495, i64 1
  %497 = load void (%class.File*)*, void (%class.File*)** %496, align 8
  call void %497(%class.File* nonnull %491) #7
  br label %498

498:                                              ; preds = %483, %493
  store %class.File* null, %class.File** %472, align 8
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %400) #7
  %499 = load %class.File*, %class.File** %472, align 8
  %500 = icmp eq %class.File* %499, null
  %501 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %466, i64 %464, i32 4
  %502 = zext i1 %500 to i8
  store i8 %502, i8* %501, align 8
  br i1 %500, label %503, label %521

503:                                              ; preds = %475, %498
  %504 = phi i8* [ %476, %475 ], [ %501, %498 ]
  %505 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %466, i64 %464, i32 1, i64 0
  call void @_Z8wcsncpyzPwPKwm(i32* %505, i32* nonnull %46, i64 2048) #7
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %422) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %422, i8 -86, i64 112, i1 false) #7
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %448, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %449, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %450, align 8
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32** %427, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %430, i8 0, i64 40, i1 false) #7
  store i32 116, i32* %429, align 8
  store i32 1, i32* %431, align 8
  store i32* %505, i32** %423, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %16) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %422) #7
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %432) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %432, i8 -86, i64 112, i1 false) #7
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %451, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %452, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %453, align 8
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32** %437, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %440, i8 0, i64 40, i1 false) #7
  store i32 147, i32* %439, align 8
  store i32 1, i32* %441, align 8
  store i32* %505, i32** %433, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %17) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %432) #7
  %506 = call i8* @_Znwm(i64 8248) #8
  %507 = bitcast i8* %506 to %class.File*
  call void @_ZN4FileC1Ev(%class.File* nonnull %507) #7
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %25) #7
  store i8 -86, i8* %25, align 1
  %508 = call zeroext i1 @_Z10FileCreateP10RAROptionsP4FilePwmPblP7RarTimeb(%class.RAROptions* %1, %class.File* nonnull %507, i32* %505, i64 2048, i8* nonnull %25, i64 9223372034707292159, %class.RarTime* null, i1 zeroext false) #7
  br i1 %508, label %518, label %509

509:                                              ; preds = %503
  %510 = load i8, i8* %25, align 1, !range !34
  %511 = icmp eq i8 %510, 0
  br i1 %511, label %512, label %514

512:                                              ; preds = %509
  call void @_ZN12ErrorHandler14CreateErrorMsgEPKw(%class.ErrorHandler* nonnull @ErrHandler, i32* %505) #7
  %513 = load i8, i8* %25, align 1, !range !34
  br label %514

514:                                              ; preds = %509, %512
  %515 = phi i8 [ 1, %509 ], [ %513, %512 ]
  %516 = icmp eq i8 %515, 0
  %517 = select i1 %516, i32 9, i32 255
  call void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 %517) #7
  br label %518

518:                                              ; preds = %514, %503
  %519 = load i64, i64* %468, align 8
  call void @_ZN4File8PreallocEl(%class.File* nonnull %507, i64 %519) #7
  %520 = bitcast %struct.RecVolItem* %467 to i8**
  store i8* %506, i8** %520, align 8
  store i8 1, i8* %504, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %25) #7
  br label %521

521:                                              ; preds = %481, %518, %498
  call void @_Z14NextVolumeNamePwjb(i32* nonnull %46, i32 2048, i1 zeroext false) #7
  %522 = add nuw nsw i64 %464, 1
  %523 = load i32, i32* %395, align 8
  %524 = zext i32 %523 to i64
  %525 = icmp ult i64 %522, %524
  br i1 %525, label %463, label %454

526:                                              ; preds = %566
  %527 = load i32, i32* %240, align 8
  br label %528

528:                                              ; preds = %526, %454
  %529 = phi i32 [ %527, %526 ], [ 0, %454 ]
  %530 = udiv i32 67108864, %529
  %531 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 5
  %532 = and i32 %530, -2
  %533 = zext i32 %532 to i64
  store i64 %533, i64* %531, align 8
  %534 = bitcast %class.RSCoder16* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %534) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %534, i8 -86, i64 64, i1 false)
  call void @_ZN9RSCoder16C1Ev(%class.RSCoder16* nonnull %26) #7
  %535 = load i32, i32* %395, align 8
  %536 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 7
  %537 = load i32, i32* %536, align 4
  %538 = load i8*, i8** %459, align 8
  %539 = call zeroext i1 @_ZN9RSCoder164InitEjjPb(%class.RSCoder16* nonnull %26, i32 %535, i32 %537, i8* %538) #7
  br i1 %539, label %575, label %571

540:                                              ; preds = %461, %566
  %541 = phi i64 [ 0, %461 ], [ %567, %566 ]
  %542 = load %struct.RecVolItem*, %struct.RecVolItem** %462, align 8
  %543 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %542, i64 %541, i32 0
  %544 = load %class.File*, %class.File** %543, align 8
  %545 = icmp eq %class.File* %544, null
  br i1 %545, label %550, label %546

546:                                              ; preds = %540
  %547 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %542, i64 %541, i32 4
  %548 = load i8, i8* %547, align 8, !range !34
  %549 = xor i8 %548, 1
  br label %550

550:                                              ; preds = %540, %546
  %551 = phi i8 [ 0, %540 ], [ %549, %546 ]
  %552 = load i8*, i8** %459, align 8
  %553 = getelementptr inbounds i8, i8* %552, i64 %541
  %554 = and i8 %551, 1
  store i8 %554, i8* %553, align 1
  %555 = load i32, i32* %395, align 8
  %556 = zext i32 %555 to i64
  %557 = icmp ult i64 %541, %556
  br i1 %557, label %558, label %566

558:                                              ; preds = %550
  %559 = load i8*, i8** %459, align 8
  %560 = getelementptr inbounds i8, i8* %559, i64 %541
  %561 = load i8, i8* %560, align 1, !range !34
  %562 = icmp eq i8 %561, 0
  br i1 %562, label %563, label %566

563:                                              ; preds = %558
  %564 = load i32, i32* %240, align 8
  %565 = add i32 %564, 1
  store i32 %565, i32* %240, align 8
  br label %566

566:                                              ; preds = %558, %550, %563
  %567 = add nuw nsw i64 %541, 1
  %568 = load i32, i32* %241, align 8
  %569 = zext i32 %568 to i64
  %570 = icmp ult i64 %567, %569
  br i1 %570, label %540, label %526

571:                                              ; preds = %528
  %572 = load i8*, i8** %459, align 8
  %573 = icmp eq i8* %572, null
  br i1 %573, label %723, label %574

574:                                              ; preds = %571
  call void @_ZdaPv(i8* nonnull %572) #8
  br label %723

575:                                              ; preds = %528
  %576 = load i64, i64* %531, align 8
  %577 = add i64 %576, 1
  %578 = call i8* @_Znam(i64 %577) #8
  %579 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 1
  store i8* %578, i8** %579, align 8
  %580 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 0, i32 0
  %581 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 4
  %582 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %1, i64 0, i32 31
  call void @_Z4Waitv() #7
  %583 = load i32, i32* %395, align 8
  %584 = icmp eq i32 %583, 0
  br i1 %584, label %596, label %585

585:                                              ; preds = %575, %694
  %586 = phi i32 [ %698, %694 ], [ %583, %575 ]
  %587 = phi i32 [ %695, %694 ], [ -1, %575 ]
  %588 = phi i64 [ %697, %694 ], [ 0, %575 ]
  %589 = sub i64 %455, %588
  br label %599

590:                                              ; preds = %645
  %591 = icmp eq i32 %647, 0
  br i1 %591, label %596, label %592

592:                                              ; preds = %590
  %593 = icmp eq i32 %652, 0
  br i1 %593, label %655, label %594

594:                                              ; preds = %592
  %595 = sext i32 %647 to i64
  br label %661

596:                                              ; preds = %590, %694, %575
  %597 = load i32, i32* %241, align 8
  %598 = icmp eq i32 %597, 0
  br i1 %598, label %700, label %703

599:                                              ; preds = %585, %645
  %600 = phi i64 [ 0, %585 ], [ %651, %645 ]
  %601 = phi i32 [ %586, %585 ], [ %621, %645 ]
  %602 = phi i32 [ 0, %585 ], [ %647, %645 ]
  %603 = load i8*, i8** %459, align 8
  %604 = getelementptr inbounds i8, i8* %603, i64 %600
  %605 = load i8, i8* %604, align 1, !range !34
  %606 = icmp eq i8 %605, 0
  %607 = trunc i64 %600 to i32
  br i1 %606, label %610, label %608

608:                                              ; preds = %599
  %609 = and i64 %600, 4294967295
  br label %619

610:                                              ; preds = %599, %610
  %611 = phi i32 [ %616, %610 ], [ %601, %599 ]
  %612 = zext i32 %611 to i64
  %613 = getelementptr inbounds i8, i8* %603, i64 %612
  %614 = load i8, i8* %613, align 1, !range !34
  %615 = icmp eq i8 %614, 0
  %616 = add i32 %611, 1
  br i1 %615, label %610, label %617

617:                                              ; preds = %610
  %618 = zext i32 %611 to i64
  br label %619

619:                                              ; preds = %617, %608
  %620 = phi i64 [ %609, %608 ], [ %618, %617 ]
  %621 = phi i32 [ %601, %608 ], [ %616, %617 ]
  %622 = load %struct.RecVolItem*, %struct.RecVolItem** %580, align 8
  %623 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %622, i64 %620, i32 0
  %624 = load %class.File*, %class.File** %623, align 8
  %625 = icmp eq %class.File* %624, null
  br i1 %625, label %637, label %626

626:                                              ; preds = %619
  %627 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %622, i64 %620, i32 4
  %628 = load i8, i8* %627, align 8, !range !34
  %629 = icmp eq i8 %628, 0
  br i1 %629, label %630, label %637

630:                                              ; preds = %626
  %631 = load i64, i64* %531, align 8
  %632 = bitcast %class.File* %624 to i32 (%class.File*, i8*, i64)***
  %633 = load i32 (%class.File*, i8*, i64)**, i32 (%class.File*, i8*, i64)*** %632, align 8
  %634 = getelementptr inbounds i32 (%class.File*, i8*, i64)*, i32 (%class.File*, i8*, i64)** %633, i64 4
  %635 = load i32 (%class.File*, i8*, i64)*, i32 (%class.File*, i8*, i64)** %634, align 8
  %636 = call i32 %635(%class.File* nonnull %624, i8* nonnull %578, i64 %631) #7
  br label %637

637:                                              ; preds = %626, %619, %630
  %638 = phi i32 [ 0, %626 ], [ %636, %630 ], [ 0, %619 ]
  %639 = sext i32 %638 to i64
  %640 = load i64, i64* %531, align 8
  %641 = icmp eq i64 %640, %639
  br i1 %641, label %645, label %642

642:                                              ; preds = %637
  %643 = getelementptr inbounds i8, i8* %578, i64 %639
  %644 = sub i64 %640, %639
  call void @llvm.memset.p0i8.i64(i8* align 1 %643, i8 0, i64 %644, i1 false)
  br label %645

645:                                              ; preds = %637, %642
  %646 = icmp sgt i32 %638, %602
  %647 = select i1 %646, i32 %638, i32 %602
  %648 = icmp ult i64 %640, %589
  %649 = select i1 %648, i64 %640, i64 %589
  %650 = trunc i64 %649 to i32
  call void @_ZN11RecVolumes59ProcessRSEP10RAROptionsjPKhjb(%class.RecVolumes5* %0, %class.RAROptions* undef, i32 %607, i8* nonnull %578, i32 %650, i1 zeroext false)
  %651 = add nuw nsw i64 %600, 1
  %652 = load i32, i32* %395, align 8
  %653 = zext i32 %652 to i64
  %654 = icmp ult i64 %651, %653
  br i1 %654, label %599, label %590

655:                                              ; preds = %687, %592
  %656 = call i32 @_Z9ToPercentll(i64 %588, i64 %209) #7
  %657 = load i8, i8* %582, align 4, !range !34
  %658 = icmp ne i8 %657, 0
  %659 = icmp eq i32 %656, %587
  %660 = or i1 %659, %658
  br i1 %660, label %694, label %693

661:                                              ; preds = %594, %687
  %662 = phi i32 [ %652, %594 ], [ %688, %687 ]
  %663 = phi i64 [ 0, %594 ], [ %690, %687 ]
  %664 = phi i32 [ 0, %594 ], [ %689, %687 ]
  %665 = load i8*, i8** %459, align 8
  %666 = getelementptr inbounds i8, i8* %665, i64 %663
  %667 = load i8, i8* %666, align 1, !range !34
  %668 = icmp eq i8 %667, 0
  br i1 %668, label %669, label %687

669:                                              ; preds = %661
  %670 = load %struct.RecVolItem*, %struct.RecVolItem** %580, align 8
  %671 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %670, i64 %663, i32 3
  %672 = load i64, i64* %671, align 8
  %673 = icmp ugt i64 %672, %595
  %674 = select i1 %673, i64 %595, i64 %672
  %675 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %670, i64 %663, i32 0
  %676 = load %class.File*, %class.File** %675, align 8
  %677 = load i8*, i8** %581, align 8
  %678 = add i32 %664, 1
  %679 = zext i32 %664 to i64
  %680 = load i64, i64* %531, align 8
  %681 = mul i64 %680, %679
  %682 = getelementptr inbounds i8, i8* %677, i64 %681
  %683 = call zeroext i1 @_ZN4File5WriteEPKvm(%class.File* %676, i8* %682, i64 %674) #7
  %684 = load i64, i64* %671, align 8
  %685 = sub i64 %684, %674
  store i64 %685, i64* %671, align 8
  %686 = load i32, i32* %395, align 8
  br label %687

687:                                              ; preds = %661, %669
  %688 = phi i32 [ %662, %661 ], [ %686, %669 ]
  %689 = phi i32 [ %664, %661 ], [ %678, %669 ]
  %690 = add nuw nsw i64 %663, 1
  %691 = zext i32 %688 to i64
  %692 = icmp ult i64 %690, %691
  br i1 %692, label %661, label %655

693:                                              ; preds = %655
  call void @_Z17uiProcessProgressPKcll(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i64 %588, i64 %209) #7
  br label %694

694:                                              ; preds = %655, %693
  %695 = phi i32 [ %587, %655 ], [ %656, %693 ]
  %696 = sext i32 %647 to i64
  %697 = add nsw i64 %588, %696
  call void @_Z4Waitv() #7
  %698 = load i32, i32* %395, align 8
  %699 = icmp eq i32 %698, 0
  br i1 %699, label %596, label %585

700:                                              ; preds = %717, %596
  %701 = load i8*, i8** %459, align 8
  %702 = icmp eq i8* %701, null
  br i1 %702, label %723, label %722

703:                                              ; preds = %596, %717
  %704 = phi i32 [ %718, %717 ], [ %597, %596 ]
  %705 = phi i64 [ %719, %717 ], [ 0, %596 ]
  %706 = load %struct.RecVolItem*, %struct.RecVolItem** %580, align 8
  %707 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %706, i64 %705, i32 0
  %708 = load %class.File*, %class.File** %707, align 8
  %709 = icmp eq %class.File* %708, null
  br i1 %709, label %717, label %710

710:                                              ; preds = %703
  %711 = bitcast %class.File* %708 to i1 (%class.File*)***
  %712 = load i1 (%class.File*)**, i1 (%class.File*)*** %711, align 8
  %713 = getelementptr inbounds i1 (%class.File*)*, i1 (%class.File*)** %712, i64 3
  %714 = load i1 (%class.File*)*, i1 (%class.File*)** %713, align 8
  %715 = call zeroext i1 %714(%class.File* nonnull %708) #7
  %716 = load i32, i32* %241, align 8
  br label %717

717:                                              ; preds = %703, %710
  %718 = phi i32 [ %704, %703 ], [ %716, %710 ]
  %719 = add nuw nsw i64 %705, 1
  %720 = zext i32 %718 to i64
  %721 = icmp ult i64 %719, %720
  br i1 %721, label %703, label %700

722:                                              ; preds = %700
  call void @_ZdaPv(i8* nonnull %701) #8
  br label %723

723:                                              ; preds = %700, %722, %571, %574
  %724 = phi i1 [ false, %574 ], [ false, %571 ], [ true, %722 ], [ true, %700 ]
  call void @_ZN9RSCoder16D1Ev(%class.RSCoder16* nonnull %26) #7
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %534) #7
  br label %725

725:                                              ; preds = %208, %94, %214, %723, %359, %345
  %726 = phi i1 [ false, %345 ], [ false, %359 ], [ %724, %723 ], [ false, %214 ], [ false, %94 ], [ false, %208 ]
  call void @llvm.lifetime.end.p0i8(i64 8240, i8* nonnull %48) #7
  call void @_ZN8FindFileD1Ev(%class.FindFile* nonnull %21) #7
  call void @llvm.lifetime.end.p0i8(i64 8208, i8* nonnull %47) #7
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %45) #7
  br label %727

727:                                              ; preds = %37, %725
  %728 = phi i1 [ %726, %725 ], [ false, %37 ]
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %27) #7
  ret i1 %728
}

declare i32* @_Z13GetVolNumPartPKw(i32*) local_unnamed_addr #3

declare zeroext i1 @_Z6CmpExtPKwS0_(i32*, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11RecVolumes510ReadHeaderEP4Fileb(%class.RecVolumes5*, %class.File*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca [16 x i8], align 16
  %5 = alloca %class.RawRead, align 8
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #7
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 8
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 12
  %9 = bitcast %class.File* %1 to i32 (%class.File*, i8*, i64)***
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 16, i1 false)
  %10 = load i32 (%class.File*, i8*, i64)**, i32 (%class.File*, i8*, i64)*** %9, align 8
  %11 = getelementptr inbounds i32 (%class.File*, i8*, i64)*, i32 (%class.File*, i8*, i64)** %10, i64 4
  %12 = load i32 (%class.File*, i8*, i64)*, i32 (%class.File*, i8*, i64)** %11, align 8
  %13 = call i32 %12(%class.File* %1, i8* nonnull %6, i64 16) #7
  %14 = icmp eq i32 %13, 16
  br i1 %14, label %15, label %124

15:                                               ; preds = %3
  %16 = bitcast [16 x i8]* %4 to i64*
  %17 = load i64, i64* %16, align 16
  %18 = icmp eq i64 %17, 8531315341307044178
  br i1 %18, label %19, label %124

19:                                               ; preds = %15
  %20 = bitcast i8* %8 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = add i32 %21, -6
  %23 = icmp ugt i32 %22, 1048570
  br i1 %23, label %124, label %24

24:                                               ; preds = %19
  %25 = bitcast i8* %7 to i32*
  %26 = load i32, i32* %25, align 8
  %27 = bitcast %class.RawRead* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %27) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 72, i1 false)
  call void @_ZN7RawReadC1EP4File(%class.RawRead* nonnull %5, %class.File* %1) #7
  %28 = zext i32 %21 to i64
  %29 = call i64 @_ZN7RawRead4ReadEm(%class.RawRead* nonnull %5, i64 %28) #7
  %30 = icmp eq i64 %29, %28
  br i1 %30, label %31, label %108

31:                                               ; preds = %24
  %32 = call i32 @_Z5CRC32jPKvm(i32 -1, i8* %8, i64 4) #7
  %33 = getelementptr inbounds %class.RawRead, %class.RawRead* %5, i64 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = call i32 @_Z5CRC32jPKvm(i32 %32, i8* %34, i64 %28) #7
  %36 = xor i32 %35, -1
  %37 = icmp eq i32 %26, %36
  br i1 %37, label %38, label %108

38:                                               ; preds = %31
  %39 = call zeroext i8 @_ZN7RawRead4Get1Ev(%class.RawRead* nonnull %5) #7
  %40 = icmp eq i8 %39, 1
  br i1 %40, label %41, label %108

41:                                               ; preds = %38
  %42 = call zeroext i16 @_ZN7RawRead4Get2Ev(%class.RawRead* nonnull %5) #7
  %43 = zext i16 %42 to i32
  %44 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 6
  store i32 %43, i32* %44, align 8
  %45 = call zeroext i16 @_ZN7RawRead4Get2Ev(%class.RawRead* nonnull %5) #7
  %46 = zext i16 %45 to i32
  %47 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 7
  store i32 %46, i32* %47, align 4
  %48 = load i32, i32* %44, align 8
  %49 = add i32 %48, %46
  %50 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 8
  store i32 %49, i32* %50, align 8
  %51 = call zeroext i16 @_ZN7RawRead4Get2Ev(%class.RawRead* nonnull %5) #7
  %52 = zext i16 %51 to i32
  %53 = load i32, i32* %50, align 8
  %54 = icmp ule i32 %53, %52
  %55 = icmp ugt i32 %53, 65535
  %56 = or i1 %54, %55
  br i1 %56, label %108, label %57

57:                                               ; preds = %41
  %58 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* nonnull %5) #7
  br i1 %2, label %59, label %103

59:                                               ; preds = %57
  %60 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = load i32, i32* %50, align 8
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 0, i32 2
  %65 = load i64, i64* %64, align 8
  %66 = icmp ult i64 %65, %63
  br i1 %66, label %67, label %72

67:                                               ; preds = %59
  %68 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 0
  %69 = sub i64 %63, %61
  call void @_ZN5ArrayI10RecVolItemE3AddEm(%class.Array.6* %68, i64 %69) #7
  %70 = load i32, i32* %50, align 8
  %71 = zext i32 %70 to i64
  br label %73

72:                                               ; preds = %59
  store i64 %63, i64* %60, align 8
  br label %73

73:                                               ; preds = %67, %72
  %74 = phi i64 [ %71, %67 ], [ %63, %72 ]
  %75 = icmp ult i64 %61, %74
  br i1 %75, label %76, label %78

76:                                               ; preds = %73
  %77 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 0, i32 0
  br label %83

78:                                               ; preds = %83, %73
  %79 = load i32, i32* %44, align 8
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %103, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 0, i32 0
  br label %91

83:                                               ; preds = %76, %83
  %84 = phi i64 [ %61, %76 ], [ %87, %83 ]
  %85 = load %struct.RecVolItem*, %struct.RecVolItem** %77, align 8
  %86 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %85, i64 %84, i32 0
  store %class.File* null, %class.File** %86, align 8
  %87 = add nuw nsw i64 %84, 1
  %88 = load i32, i32* %50, align 8
  %89 = zext i32 %88 to i64
  %90 = icmp ult i64 %87, %89
  br i1 %90, label %83, label %78

91:                                               ; preds = %81, %91
  %92 = phi i64 [ 0, %81 ], [ %99, %91 ]
  %93 = call i64 @_ZN7RawRead4Get8Ev(%class.RawRead* nonnull %5) #7
  %94 = load %struct.RecVolItem*, %struct.RecVolItem** %82, align 8
  %95 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %94, i64 %92, i32 3
  store i64 %93, i64* %95, align 8
  %96 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* nonnull %5) #7
  %97 = load %struct.RecVolItem*, %struct.RecVolItem** %82, align 8
  %98 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %97, i64 %92, i32 2
  store i32 %96, i32* %98, align 8
  %99 = add nuw nsw i64 %92, 1
  %100 = load i32, i32* %44, align 8
  %101 = zext i32 %100 to i64
  %102 = icmp ult i64 %99, %101
  br i1 %102, label %91, label %103

103:                                              ; preds = %91, %78, %57
  %104 = zext i16 %51 to i64
  %105 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 0, i32 0
  %106 = load %struct.RecVolItem*, %struct.RecVolItem** %105, align 8
  %107 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %106, i64 %104, i32 2
  store i32 %58, i32* %107, align 8
  br label %108

108:                                              ; preds = %31, %38, %41, %103, %24
  %109 = phi i32 [ 0, %24 ], [ 0, %31 ], [ 0, %38 ], [ %52, %103 ], [ 0, %41 ]
  %110 = getelementptr inbounds %class.RawRead, %class.RawRead* %5, i64 0, i32 0, i32 0
  %111 = load i8*, i8** %110, align 8
  %112 = icmp eq i8* %111, null
  br i1 %112, label %123, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds %class.RawRead, %class.RawRead* %5, i64 0, i32 0, i32 4
  %115 = load i8, i8* %114, align 8, !range !34
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %121, label %117

117:                                              ; preds = %113
  %118 = getelementptr inbounds %class.RawRead, %class.RawRead* %5, i64 0, i32 0, i32 2
  %119 = load i64, i64* %118, align 8
  call void @_Z9cleandataPvm(i8* nonnull %111, i64 %119) #7
  %120 = load i8*, i8** %110, align 8
  br label %121

121:                                              ; preds = %117, %113
  %122 = phi i8* [ %111, %113 ], [ %120, %117 ]
  call void @free(i8* %122) #7
  br label %123

123:                                              ; preds = %108, %121
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %27) #7
  br label %124

124:                                              ; preds = %123, %19, %15, %3
  %125 = phi i32 [ 0, %3 ], [ 0, %15 ], [ %109, %123 ], [ 0, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #7
  ret i32 %125
}

declare zeroext i1 @_Z10FileCreateP10RAROptionsP4FilePwmPblP7RarTimeb(%class.RAROptions*, %class.File*, i32*, i64, i8*, i64, %class.RarTime*, i1 zeroext) local_unnamed_addr #3

declare void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler*, i32) local_unnamed_addr #3

declare void @_ZN4File8PreallocEl(%class.File*, i64) local_unnamed_addr #3

declare void @_ZN7RawReadC1EP4File(%class.RawRead*, %class.File*) unnamed_addr #3

declare i64 @_ZN7RawRead4ReadEm(%class.RawRead*, i64) local_unnamed_addr #3

declare i32 @_Z5CRC32jPKvm(i32, i8*, i64) local_unnamed_addr #3

declare zeroext i8 @_ZN7RawRead4Get1Ev(%class.RawRead*) local_unnamed_addr #3

declare zeroext i16 @_ZN7RawRead4Get2Ev(%class.RawRead*) local_unnamed_addr #3

declare i32 @_ZN7RawRead4Get4Ev(%class.RawRead*) local_unnamed_addr #3

declare i64 @_ZN7RawRead4Get8Ev(%class.RawRead*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11RecVolumes54TestEP10RAROptionsPKw(%class.RecVolumes5*, %class.RAROptions* nocapture readonly, i32*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.uiMsgStore, align 8
  %5 = alloca [2048 x i32], align 16
  %6 = alloca %class.File, align 8
  %7 = alloca i32, align 4
  %8 = bitcast [2048 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %8) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 8192, i1 false)
  %9 = getelementptr inbounds [2048 x i32], [2048 x i32]* %5, i64 0, i64 0
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %9, i32* %2, i64 2048) #7
  %10 = call zeroext i1 @_Z9FileExistPKw(i32* nonnull %9) #7
  br i1 %10, label %11, label %61

11:                                               ; preds = %3
  %12 = bitcast %class.File* %6 to i8*
  %13 = bitcast i32* %7 to i8*
  %14 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %1, i64 0, i32 31
  %15 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %0, i64 0, i32 0, i32 0
  %16 = bitcast %class.uiMsgStore* %4 to i8*
  %17 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 0
  %18 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 1
  %19 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 2
  %20 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 4
  %21 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 6
  %22 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 1, i64 0
  %23 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 4
  %24 = bitcast i32* %22 to i8*
  %25 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 2
  %26 = bitcast i32** %19 to <2 x i32*>*
  %27 = bitcast i32** %20 to <2 x i32*>*
  %28 = bitcast i32** %21 to <2 x i32*>*
  br label %29

29:                                               ; preds = %11, %58
  %30 = phi i32 [ 0, %11 ], [ %59, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 8248, i8* nonnull %12) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 8248, i1 false)
  call void @_ZN4FileC1Ev(%class.File* nonnull %6) #7
  %31 = call zeroext i1 @_ZN4File4OpenEPKwj(%class.File* nonnull %6, i32* nonnull %9, i32 0) #7
  br i1 %31, label %33, label %32

32:                                               ; preds = %29
  call void @_ZN12ErrorHandler12OpenErrorMsgEPKw(%class.ErrorHandler* nonnull @ErrHandler, i32* nonnull %9) #7
  br label %58

33:                                               ; preds = %29
  %34 = call zeroext i1 @_Z18uiStartFileExtractPKwbbb(i32* nonnull %9, i1 zeroext false, i1 zeroext true, i1 zeroext false) #7
  br i1 %34, label %36, label %35

35:                                               ; preds = %33
  call void @_ZN4FileD1Ev(%class.File* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8248, i8* nonnull %12) #7
  br label %61

36:                                               ; preds = %33
  %37 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([19 x i32], [19 x i32]* @.str.6, i64 0, i64 0)) #7
  %38 = icmp eq i32 %30, 0
  %39 = call i32 @_ZN11RecVolumes510ReadHeaderEP4Fileb(%class.RecVolumes5* %0, %class.File* nonnull %6, i1 zeroext %38)
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %36
  %42 = add i32 %30, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #7
  store i32 -1431655766, i32* %7, align 4
  %43 = load i8, i8* %14, align 4, !range !34
  %44 = icmp eq i8 %43, 0
  %45 = select i1 %44, i32 12, i32 8
  call void @_Z11CalcFileSumP4FilePjPhjlj(%class.File* nonnull %6, i32* nonnull %7, i8* null, i32 1, i64 9223372034707292159, i32 %45) #7
  %46 = load i32, i32* %7, align 4
  %47 = zext i32 %39 to i64
  %48 = load %struct.RecVolItem*, %struct.RecVolItem** %15, align 8
  %49 = getelementptr inbounds %struct.RecVolItem, %struct.RecVolItem* %48, i64 %47, i32 2
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %46, %50
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #7
  br i1 %51, label %52, label %54

52:                                               ; preds = %41
  %53 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.9, i64 0, i64 0)) #7
  br label %56

54:                                               ; preds = %36, %41
  %55 = phi i32 [ %42, %41 ], [ %30, %36 ]
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %16) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 112, i1 false) #7
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %26, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %27, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.15, i64 0, i64 0)>, <2 x i32*>* %28, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 40, i1 false) #7
  store i32 3, i32* %23, align 8
  store i32* %9, i32** %17, align 8
  store i32 2, i32* %25, align 8
  store i32* %9, i32** %18, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %16) #7
  call void @_ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 3) #7
  br label %56

56:                                               ; preds = %54, %52
  %57 = phi i32 [ %55, %54 ], [ %42, %52 ]
  call void @_Z14NextVolumeNamePwjb(i32* nonnull %9, i32 2048, i1 zeroext false) #7
  br label %58

58:                                               ; preds = %56, %32
  %59 = phi i32 [ %57, %56 ], [ %30, %32 ]
  call void @_ZN4FileD1Ev(%class.File* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8248, i8* nonnull %12) #7
  %60 = call zeroext i1 @_Z9FileExistPKw(i32* nonnull %9) #7
  br i1 %60, label %29, label %61

61:                                               ; preds = %58, %3, %35
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %8) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z17RecVolumesRestoreP10RAROptionsPKwb(%class.RAROptions*, i32*, i1 zeroext) local_unnamed_addr #0 {
  %4 = alloca %class.Archive, align 8
  %5 = alloca i64, align 8
  %6 = alloca %class.RecVolumes3, align 8
  %7 = alloca %class.RecVolumes5, align 8
  %8 = bitcast %class.Archive* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 65336, i8* nonnull %8) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 65336, i1 false)
  call void @_ZN7ArchiveC1EP10RAROptions(%class.Archive* nonnull %4, %class.RAROptions* %0) #7
  %9 = call zeroext i1 @_ZN7Archive4OpenEPKwj(%class.Archive* nonnull %4, i32* %1, i32 0) #7
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  br i1 %2, label %121, label %11

11:                                               ; preds = %10
  call void @_ZN12ErrorHandler12OpenErrorMsgEPKw(%class.ErrorHandler* nonnull @ErrHandler, i32* %1) #7
  br label %121

12:                                               ; preds = %3
  %13 = call zeroext i1 @_ZN7Archive9IsArchiveEb(%class.Archive* nonnull %4, i1 zeroext true) #7
  br i1 %13, label %14, label %17

14:                                               ; preds = %12
  %15 = getelementptr inbounds %class.Archive, %class.Archive* %4, i64 0, i32 33
  %16 = load i32, i32* %15, align 8
  br label %27

17:                                               ; preds = %12
  %18 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #7
  store i64 -6148914691236517206, i64* %5, align 8
  call void @_ZN7Archive4SeekEli(%class.Archive* nonnull %4, i64 0, i32 0) #7
  %19 = call i32 @_ZN7Archive4ReadEPvm(%class.Archive* nonnull %4, i8* nonnull %18, i64 8) #7
  %20 = icmp eq i32 %19, 8
  br i1 %20, label %21, label %25

21:                                               ; preds = %17
  %22 = load i64, i64* %5, align 8
  %23 = icmp eq i64 %22, 8531315341307044178
  %24 = select i1 %23, i32 3, i32 2
  br label %25

25:                                               ; preds = %21, %17
  %26 = phi i32 [ 2, %17 ], [ %24, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #7
  br label %27

27:                                               ; preds = %25, %14
  %28 = phi i32 [ %16, %14 ], [ %26, %25 ]
  %29 = getelementptr inbounds %class.Archive, %class.Archive* %4, i64 0, i32 0
  %30 = call zeroext i1 @_ZN4File5CloseEv(%class.File* nonnull %29) #7
  %31 = icmp eq i32 %28, 2
  br i1 %31, label %32, label %75

32:                                               ; preds = %27
  %33 = bitcast %class.RecVolumes3* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2096, i8* nonnull %33) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 2096, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 2081, i1 false) #7
  %34 = getelementptr inbounds %class.RecVolumes3, %class.RecVolumes3* %6, i64 0, i32 1
  call void @_ZN5ArrayIhE3AddEm(%class.Array* %34, i64 67108864) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 2048, i1 false) #7
  %35 = call i8* @_Znwm(i64 1792) #8
  %36 = bitcast i8* %35 to %class.ThreadPool*
  %37 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %0, i64 0, i32 106
  %38 = load i32, i32* %37, align 8
  call void @_ZN10ThreadPoolC1Ej(%class.ThreadPool* nonnull %36, i32 %38) #7
  %39 = getelementptr inbounds %class.RecVolumes3, %class.RecVolumes3* %6, i64 0, i32 2
  %40 = bitcast %class.ThreadPool** %39 to i8**
  store i8* %35, i8** %40, align 8
  %41 = call zeroext i1 @_ZN11RecVolumes37RestoreEP10RAROptionsPKwb(%class.RecVolumes3* nonnull %6, %class.RAROptions* %0, i32* %1, i1 zeroext %2)
  br label %45

42:                                               ; preds = %55
  %43 = load %class.ThreadPool*, %class.ThreadPool** %39, align 8
  %44 = icmp eq %class.ThreadPool* %43, null
  br i1 %44, label %60, label %58

45:                                               ; preds = %55, %32
  %46 = phi i64 [ 0, %32 ], [ %56, %55 ]
  %47 = getelementptr inbounds %class.RecVolumes3, %class.RecVolumes3* %6, i64 0, i32 0, i64 %46
  %48 = load %class.File*, %class.File** %47, align 8
  %49 = icmp eq %class.File* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %45
  %51 = bitcast %class.File* %48 to void (%class.File*)***
  %52 = load void (%class.File*)**, void (%class.File*)*** %51, align 8
  %53 = getelementptr inbounds void (%class.File*)*, void (%class.File*)** %52, i64 1
  %54 = load void (%class.File*)*, void (%class.File*)** %53, align 8
  call void %54(%class.File* nonnull %48) #7
  br label %55

55:                                               ; preds = %50, %45
  %56 = add nuw nsw i64 %46, 1
  %57 = icmp eq i64 %56, 256
  br i1 %57, label %42, label %45

58:                                               ; preds = %42
  call void @_ZN10ThreadPoolD1Ev(%class.ThreadPool* nonnull %43) #7
  %59 = bitcast %class.ThreadPool* %43 to i8*
  call void @_ZdlPv(i8* %59) #8
  br label %60

60:                                               ; preds = %58, %42
  %61 = getelementptr inbounds %class.RecVolumes3, %class.RecVolumes3* %6, i64 0, i32 1, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = icmp eq i8* %62, null
  br i1 %63, label %74, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %class.RecVolumes3, %class.RecVolumes3* %6, i64 0, i32 1, i32 4
  %66 = load i8, i8* %65, align 8, !range !34
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %72, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %class.RecVolumes3, %class.RecVolumes3* %6, i64 0, i32 1, i32 2
  %70 = load i64, i64* %69, align 8
  call void @_Z9cleandataPvm(i8* nonnull %62, i64 %70) #7
  %71 = load i8*, i8** %61, align 8
  br label %72

72:                                               ; preds = %68, %64
  %73 = phi i8* [ %62, %64 ], [ %71, %68 ]
  call void @free(i8* %73) #7
  br label %74

74:                                               ; preds = %60, %72
  call void @llvm.lifetime.end.p0i8(i64 2096, i8* nonnull %33) #7
  br label %121

75:                                               ; preds = %27
  %76 = bitcast %class.RecVolumes5* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %76) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 -86, i64 128, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 33, i1 false) #7
  %77 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %7, i64 0, i32 3
  store i8* null, i8** %77, align 8
  %78 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %7, i64 0, i32 1
  store i8* null, i8** %78, align 8
  %79 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %7, i64 0, i32 5
  %80 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %0, i64 0, i32 106
  %81 = bitcast i64* %79 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 20, i1 false) #7
  %82 = load i32, i32* %80, align 8
  %83 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %7, i64 0, i32 12
  store i32 %82, i32* %83, align 8
  %84 = zext i32 %82 to i64
  %85 = mul nuw nsw i64 %84, 48
  %86 = call i8* @_Znam(i64 %85) #8
  %87 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %7, i64 0, i32 13
  %88 = bitcast %struct.RecRSThreadData** %87 to i8**
  store i8* %86, i8** %88, align 8
  %89 = icmp eq i32 %82, 0
  br i1 %89, label %112, label %90

90:                                               ; preds = %75
  %91 = bitcast i8* %86 to %class.RecVolumes5**
  store %class.RecVolumes5* %7, %class.RecVolumes5** %91, align 8
  %92 = getelementptr inbounds i8, i8* %86, i64 8
  %93 = bitcast i8* %92 to %class.RSCoder16**
  store %class.RSCoder16* null, %class.RSCoder16** %93, align 8
  %94 = icmp eq i32 %82, 1
  br i1 %94, label %112, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds i8, i8* %86, i64 48
  %97 = bitcast i8* %96 to %class.RecVolumes5**
  store %class.RecVolumes5* %7, %class.RecVolumes5** %97, align 8
  %98 = load %struct.RecRSThreadData*, %struct.RecRSThreadData** %87, align 8
  %99 = getelementptr inbounds %struct.RecRSThreadData, %struct.RecRSThreadData* %98, i64 1, i32 1
  store %class.RSCoder16* null, %class.RSCoder16** %99, align 8
  %100 = load i32, i32* %83, align 8
  %101 = icmp ugt i32 %100, 2
  br i1 %101, label %102, label %112

102:                                              ; preds = %95, %102
  %103 = phi i64 [ %108, %102 ], [ 2, %95 ]
  %104 = load %struct.RecRSThreadData*, %struct.RecRSThreadData** %87, align 8
  %105 = getelementptr inbounds %struct.RecRSThreadData, %struct.RecRSThreadData* %104, i64 %103, i32 0
  store %class.RecVolumes5* %7, %class.RecVolumes5** %105, align 8
  %106 = load %struct.RecRSThreadData*, %struct.RecRSThreadData** %87, align 8
  %107 = getelementptr inbounds %struct.RecRSThreadData, %struct.RecRSThreadData* %106, i64 %103, i32 1
  store %class.RSCoder16* null, %class.RSCoder16** %107, align 8
  %108 = add nuw nsw i64 %103, 1
  %109 = load i32, i32* %83, align 8
  %110 = zext i32 %109 to i64
  %111 = icmp ult i64 %108, %110
  br i1 %111, label %102, label %112

112:                                              ; preds = %102, %95, %90, %75
  %113 = phi i32 [ 0, %75 ], [ 1, %90 ], [ %100, %95 ], [ %109, %102 ]
  %114 = call i8* @_Znwm(i64 1792) #8
  %115 = bitcast i8* %114 to %class.ThreadPool*
  call void @_ZN10ThreadPoolC1Ej(%class.ThreadPool* nonnull %115, i32 %113) #7
  %116 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %7, i64 0, i32 11
  %117 = bitcast %class.ThreadPool** %116 to i8**
  store i8* %114, i8** %117, align 8
  %118 = call i8* @_Znam(i64 67108865) #8
  store i8* %118, i8** %77, align 8
  %119 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %7, i64 0, i32 4
  store i8* %118, i8** %119, align 8
  %120 = call zeroext i1 @_ZN11RecVolumes57RestoreEP10RAROptionsPKwb(%class.RecVolumes5* nonnull %7, %class.RAROptions* %0, i32* %1, i1 zeroext %2)
  call void @_ZN11RecVolumes5D2Ev(%class.RecVolumes5* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %76) #7
  br label %121

121:                                              ; preds = %74, %112, %10, %11
  %122 = phi i1 [ false, %11 ], [ false, %10 ], [ %41, %74 ], [ %120, %112 ]
  call void @_ZN7ArchiveD1Ev(%class.Archive* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 65336, i8* nonnull %8) #7
  ret i1 %122
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z14RecVolumesTestP10RAROptionsP7ArchivePKw(%class.RAROptions* nocapture readonly, %class.Archive* readonly, i32*) local_unnamed_addr #0 {
  %4 = alloca [2048 x i32], align 16
  %5 = alloca [2048 x i32], align 16
  %6 = alloca [2048 x i32], align 16
  %7 = alloca %class.FindFile, align 8
  %8 = alloca %struct.FindData, align 8
  %9 = alloca %class.File, align 8
  %10 = alloca i64, align 8
  %11 = alloca %class.RecVolumes5, align 8
  %12 = alloca %class.RecVolumes3, align 8
  %13 = bitcast [2048 x i32]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %13) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 8192, i1 false)
  %14 = getelementptr inbounds [2048 x i32], [2048 x i32]* %4, i64 0, i64 0
  store i32 0, i32* %14, align 16
  %15 = icmp eq %class.Archive* %1, null
  br i1 %15, label %59, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %class.Archive, %class.Archive* %1, i64 0, i32 40
  %18 = load i8, i8* %17, align 2, !range !34
  %19 = icmp ne i8 %18, 0
  %20 = bitcast [2048 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %20) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -86, i64 8192, i1 false)
  %21 = getelementptr inbounds [2048 x i32], [2048 x i32]* %5, i64 0, i64 0
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %21, i32* %2, i64 2048) #7
  %22 = call i32* @_Z18VolNameToFirstNamePKwPwmb(i32* nonnull %21, i32* nonnull %21, i64 2048, i1 zeroext %19) #7
  %23 = bitcast [2048 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %23) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %23, i8 -86, i64 8192, i1 false)
  %24 = getelementptr inbounds [2048 x i32], [2048 x i32]* %6, i64 0, i64 0
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %24, i32* nonnull %21, i64 2048) #7
  %25 = ptrtoint i32* %22 to i64
  %26 = ptrtoint [2048 x i32]* %5 to i64
  %27 = sub i64 %25, %26
  %28 = ashr exact i64 %27, 2
  %29 = getelementptr inbounds [2048 x i32], [2048 x i32]* %6, i64 0, i64 %28
  %30 = sub nsw i64 2048, %28
  call void @_Z8wcsncpyzPwPKwm(i32* %29, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @.str.2, i64 0, i64 0), i64 %30) #7
  %31 = bitcast %class.FindFile* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8208, i8* nonnull %31) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 8208, i1 false)
  call void @_ZN8FindFileC1Ev(%class.FindFile* nonnull %7) #7
  call void @_ZN8FindFile7SetMaskEPKw(%class.FindFile* nonnull %7, i32* nonnull %24) #7
  %32 = bitcast %struct.FindData* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8240, i8* nonnull %32) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 8240, i1 false)
  %33 = getelementptr inbounds %struct.FindData, %struct.FindData* %8, i64 0, i32 6, i32 0
  %34 = bitcast i64* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #7
  %35 = call zeroext i1 @_ZN8FindFile4NextEP8FindDatab(%class.FindFile* nonnull %7, %struct.FindData* nonnull %8, i1 zeroext false) #7
  br i1 %35, label %36, label %55

36:                                               ; preds = %16
  %37 = getelementptr inbounds %struct.FindData, %struct.FindData* %8, i64 0, i32 0, i64 0
  br label %38

38:                                               ; preds = %36, %53
  %39 = call i32* @_Z13GetVolNumPartPKw(i32* nonnull %37) #7
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 49
  br i1 %41, label %42, label %53

42:                                               ; preds = %38, %49
  %43 = phi i32* [ %44, %49 ], [ %39, %38 ]
  %44 = getelementptr inbounds i32, i32* %43, i64 -1
  %45 = icmp ult i32* %44, %37
  br i1 %45, label %52, label %46

46:                                               ; preds = %42
  %47 = load i32, i32* %44, align 4
  %48 = call zeroext i1 @_Z7IsDigiti(i32 %47) #7
  br i1 %48, label %49, label %52

49:                                               ; preds = %46
  %50 = load i32, i32* %44, align 4
  %51 = icmp eq i32 %50, 48
  br i1 %51, label %42, label %53

52:                                               ; preds = %46, %42
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %14, i32* nonnull %37, i64 2048) #7
  br label %55

53:                                               ; preds = %49, %38
  %54 = call zeroext i1 @_ZN8FindFile4NextEP8FindDatab(%class.FindFile* nonnull %7, %struct.FindData* nonnull %8, i1 zeroext false) #7
  br i1 %54, label %38, label %55

55:                                               ; preds = %53, %16, %52
  %56 = phi i32* [ %14, %52 ], [ %2, %16 ], [ %2, %53 ]
  %57 = load i32, i32* %14, align 16
  %58 = icmp eq i32 %57, 0
  call void @llvm.lifetime.end.p0i8(i64 8240, i8* nonnull %32) #7
  call void @_ZN8FindFileD1Ev(%class.FindFile* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8208, i8* nonnull %31) #7
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %23) #7
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %20) #7
  br i1 %58, label %132, label %59

59:                                               ; preds = %55, %3
  %60 = phi i32* [ %56, %55 ], [ %2, %3 ]
  %61 = bitcast %class.File* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8248, i8* nonnull %61) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 8248, i1 false)
  call void @_ZN4FileC1Ev(%class.File* nonnull %9) #7
  %62 = call zeroext i1 @_ZN4File4OpenEPKwj(%class.File* nonnull %9, i32* %60, i32 0) #7
  br i1 %62, label %64, label %63

63:                                               ; preds = %59
  call void @_ZN12ErrorHandler12OpenErrorMsgEPKw(%class.ErrorHandler* nonnull @ErrHandler, i32* %60) #7
  br label %131

64:                                               ; preds = %59
  %65 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #7
  store i64 -6148914691236517206, i64* %10, align 8
  %66 = call i32 @_ZN4File4ReadEPvm(%class.File* nonnull %9, i8* nonnull %65, i64 8) #7
  %67 = icmp eq i32 %66, 8
  br i1 %67, label %68, label %111

68:                                               ; preds = %64
  %69 = load i64, i64* %10, align 8
  %70 = icmp eq i64 %69, 8531315341307044178
  %71 = call zeroext i1 @_ZN4File5CloseEv(%class.File* nonnull %9) #7
  br i1 %70, label %72, label %113

72:                                               ; preds = %68
  %73 = bitcast %class.RecVolumes5* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %73) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 128, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 0, i64 33, i1 false) #7
  %74 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %11, i64 0, i32 3
  store i8* null, i8** %74, align 8
  %75 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %11, i64 0, i32 1
  store i8* null, i8** %75, align 8
  %76 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %11, i64 0, i32 5
  %77 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %0, i64 0, i32 106
  %78 = bitcast i64* %76 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 20, i1 false) #7
  %79 = load i32, i32* %77, align 8
  %80 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %11, i64 0, i32 12
  store i32 %79, i32* %80, align 8
  %81 = zext i32 %79 to i64
  %82 = mul nuw nsw i64 %81, 48
  %83 = call i8* @_Znam(i64 %82) #8
  %84 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %11, i64 0, i32 13
  %85 = bitcast %struct.RecRSThreadData** %84 to i8**
  store i8* %83, i8** %85, align 8
  %86 = icmp eq i32 %79, 0
  br i1 %86, label %109, label %87

87:                                               ; preds = %72
  %88 = bitcast i8* %83 to %class.RecVolumes5**
  store %class.RecVolumes5* %11, %class.RecVolumes5** %88, align 8
  %89 = getelementptr inbounds i8, i8* %83, i64 8
  %90 = bitcast i8* %89 to %class.RSCoder16**
  store %class.RSCoder16* null, %class.RSCoder16** %90, align 8
  %91 = icmp eq i32 %79, 1
  br i1 %91, label %109, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds i8, i8* %83, i64 48
  %94 = bitcast i8* %93 to %class.RecVolumes5**
  store %class.RecVolumes5* %11, %class.RecVolumes5** %94, align 8
  %95 = load %struct.RecRSThreadData*, %struct.RecRSThreadData** %84, align 8
  %96 = getelementptr inbounds %struct.RecRSThreadData, %struct.RecRSThreadData* %95, i64 1, i32 1
  store %class.RSCoder16* null, %class.RSCoder16** %96, align 8
  %97 = load i32, i32* %80, align 8
  %98 = icmp ugt i32 %97, 2
  br i1 %98, label %99, label %109

99:                                               ; preds = %92, %99
  %100 = phi i64 [ %105, %99 ], [ 2, %92 ]
  %101 = load %struct.RecRSThreadData*, %struct.RecRSThreadData** %84, align 8
  %102 = getelementptr inbounds %struct.RecRSThreadData, %struct.RecRSThreadData* %101, i64 %100, i32 0
  store %class.RecVolumes5* %11, %class.RecVolumes5** %102, align 8
  %103 = load %struct.RecRSThreadData*, %struct.RecRSThreadData** %84, align 8
  %104 = getelementptr inbounds %struct.RecRSThreadData, %struct.RecRSThreadData* %103, i64 %100, i32 1
  store %class.RSCoder16* null, %class.RSCoder16** %104, align 8
  %105 = add nuw nsw i64 %100, 1
  %106 = load i32, i32* %80, align 8
  %107 = zext i32 %106 to i64
  %108 = icmp ult i64 %105, %107
  br i1 %108, label %99, label %109

109:                                              ; preds = %99, %92, %87, %72
  %110 = getelementptr inbounds %class.RecVolumes5, %class.RecVolumes5* %11, i64 0, i32 11
  store %class.ThreadPool* null, %class.ThreadPool** %110, align 8
  call void @_ZN11RecVolumes54TestEP10RAROptionsPKw(%class.RecVolumes5* nonnull %11, %class.RAROptions* %0, i32* %60)
  call void @_ZN11RecVolumes5D2Ev(%class.RecVolumes5* nonnull %11) #7
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %73) #7
  br label %130

111:                                              ; preds = %64
  %112 = call zeroext i1 @_ZN4File5CloseEv(%class.File* nonnull %9) #7
  br label %113

113:                                              ; preds = %111, %68
  %114 = bitcast %class.RecVolumes3* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2096, i8* nonnull %114) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 2088, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 0, i64 2081, i1 false) #7
  %115 = getelementptr inbounds %class.RecVolumes3, %class.RecVolumes3* %12, i64 0, i32 2
  store %class.ThreadPool* null, %class.ThreadPool** %115, align 8
  call void @_ZN11RecVolumes34TestEP10RAROptionsPKw(%class.RecVolumes3* undef, %class.RAROptions* %0, i32* %60)
  br label %116

116:                                              ; preds = %126, %113
  %117 = phi i64 [ 0, %113 ], [ %127, %126 ]
  %118 = getelementptr inbounds %class.RecVolumes3, %class.RecVolumes3* %12, i64 0, i32 0, i64 %117
  %119 = load %class.File*, %class.File** %118, align 8
  %120 = icmp eq %class.File* %119, null
  br i1 %120, label %126, label %121

121:                                              ; preds = %116
  %122 = bitcast %class.File* %119 to void (%class.File*)***
  %123 = load void (%class.File*)**, void (%class.File*)*** %122, align 8
  %124 = getelementptr inbounds void (%class.File*)*, void (%class.File*)** %123, i64 1
  %125 = load void (%class.File*)*, void (%class.File*)** %124, align 8
  call void %125(%class.File* nonnull %119) #7
  br label %126

126:                                              ; preds = %121, %116
  %127 = add nuw nsw i64 %117, 1
  %128 = icmp eq i64 %127, 256
  br i1 %128, label %129, label %116

129:                                              ; preds = %126
  call void @llvm.lifetime.end.p0i8(i64 2096, i8* nonnull %114) #7
  br label %130

130:                                              ; preds = %129, %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #7
  br label %131

131:                                              ; preds = %130, %63
  call void @_ZN4FileD1Ev(%class.File* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 8248, i8* nonnull %61) #7
  br label %132

132:                                              ; preds = %55, %131
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %13) #7
  ret void
}

declare i32 @_ZN4File4ReadEPvm(%class.File*, i8*, i64) unnamed_addr #3

declare void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore*) local_unnamed_addr #3

declare void @_ZN7RSCoder4InitEi(%class.RSCoder*, i32) local_unnamed_addr #3

declare void @_Z9cleandataPvm(i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5ArrayIhE3AddEm(%class.Array*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %5, %7
  br i1 %8, label %9, label %49

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = icmp ne i64 %11, 0
  %13 = icmp ugt i64 %5, %11
  %14 = and i1 %12, %13
  br i1 %14, label %15, label %18

15:                                               ; preds = %9
  tail call void (%class.ErrorHandler*, i32*, ...) @_ZN12ErrorHandler13GeneralErrMsgEPKwz(%class.ErrorHandler* nonnull @ErrHandler, i32* getelementptr inbounds ([44 x i32], [44 x i32]* @.str.16, i64 0, i64 0), i64 %11) #7
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #7
  %16 = load i64, i64* %6, align 8
  %17 = load i64, i64* %3, align 8
  br label %18

18:                                               ; preds = %9, %15
  %19 = phi i64 [ %5, %9 ], [ %17, %15 ]
  %20 = phi i64 [ %7, %9 ], [ %16, %15 ]
  %21 = lshr i64 %20, 2
  %22 = add i64 %20, 32
  %23 = add i64 %22, %21
  %24 = icmp ugt i64 %19, %23
  %25 = select i1 %24, i64 %19, i64 %23
  %26 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 8, !range !34
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %40, label %29

29:                                               ; preds = %18
  %30 = tail call noalias i8* @malloc(i64 %25) #7
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #7
  br label %33

33:                                               ; preds = %32, %29
  %34 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %33
  %38 = load i64, i64* %6, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* nonnull align 1 %35, i64 %38, i1 false)
  tail call void @_Z9cleandataPvm(i8* nonnull %35, i64 %38) #7
  %39 = load i8*, i8** %34, align 8
  tail call void @free(i8* %39) #7
  br label %46

40:                                               ; preds = %18
  %41 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = tail call i8* @realloc(i8* %42, i64 %25) #7
  %44 = icmp eq i8* %43, null
  br i1 %44, label %45, label %46

45:                                               ; preds = %40
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #7
  br label %46

46:                                               ; preds = %33, %40, %45, %37
  %47 = phi i8* [ %30, %37 ], [ %30, %33 ], [ null, %45 ], [ %43, %40 ]
  %48 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 0
  store i8* %47, i8** %48, align 8
  store i64 %25, i64* %6, align 8
  br label %49

49:                                               ; preds = %46, %2
  ret void
}

declare void @_ZN12ErrorHandler13GeneralErrMsgEPKwz(%class.ErrorHandler*, i32*, ...) local_unnamed_addr #3

declare void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5ArrayI10RecVolItemE3AddEm(%class.Array.6*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.Array.6, %class.Array.6* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %class.Array.6, %class.Array.6* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %5, %7
  br i1 %8, label %9, label %56

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.Array.6, %class.Array.6* %0, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = icmp ne i64 %11, 0
  %13 = icmp ugt i64 %5, %11
  %14 = and i1 %12, %13
  br i1 %14, label %15, label %18

15:                                               ; preds = %9
  tail call void (%class.ErrorHandler*, i32*, ...) @_ZN12ErrorHandler13GeneralErrMsgEPKwz(%class.ErrorHandler* nonnull @ErrHandler, i32* getelementptr inbounds ([44 x i32], [44 x i32]* @.str.16, i64 0, i64 0), i64 %11) #7
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #7
  %16 = load i64, i64* %6, align 8
  %17 = load i64, i64* %3, align 8
  br label %18

18:                                               ; preds = %9, %15
  %19 = phi i64 [ %5, %9 ], [ %17, %15 ]
  %20 = phi i64 [ %7, %9 ], [ %16, %15 ]
  %21 = lshr i64 %20, 2
  %22 = add i64 %20, 32
  %23 = add i64 %22, %21
  %24 = icmp ugt i64 %19, %23
  %25 = select i1 %24, i64 %19, i64 %23
  %26 = getelementptr inbounds %class.Array.6, %class.Array.6* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 8, !range !34
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %45, label %29

29:                                               ; preds = %18
  %30 = mul i64 %25, 8224
  %31 = tail call noalias i8* @malloc(i64 %30) #7
  %32 = bitcast i8* %31 to %struct.RecVolItem*
  %33 = icmp eq i8* %31, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #7
  br label %35

35:                                               ; preds = %34, %29
  %36 = getelementptr inbounds %class.Array.6, %class.Array.6* %0, i64 0, i32 0
  %37 = load %struct.RecVolItem*, %struct.RecVolItem** %36, align 8
  %38 = icmp eq %struct.RecVolItem* %37, null
  %39 = bitcast %struct.RecVolItem* %37 to i8*
  br i1 %38, label %53, label %40

40:                                               ; preds = %35
  %41 = load i64, i64* %6, align 8
  %42 = mul i64 %41, 8224
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* nonnull align 8 %39, i64 %42, i1 false)
  %43 = bitcast %class.Array.6* %0 to i8**
  tail call void @_Z9cleandataPvm(i8* nonnull %39, i64 %42) #7
  %44 = load i8*, i8** %43, align 8
  tail call void @free(i8* %44) #7
  br label %53

45:                                               ; preds = %18
  %46 = bitcast %class.Array.6* %0 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = mul i64 %25, 8224
  %49 = tail call i8* @realloc(i8* %47, i64 %48) #7
  %50 = bitcast i8* %49 to %struct.RecVolItem*
  %51 = icmp eq i8* %49, null
  br i1 %51, label %52, label %53

52:                                               ; preds = %45
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #7
  br label %53

53:                                               ; preds = %35, %45, %52, %40
  %54 = phi %struct.RecVolItem* [ %32, %40 ], [ %32, %35 ], [ null, %52 ], [ %50, %45 ]
  %55 = getelementptr inbounds %class.Array.6, %class.Array.6* %0, i64 0, i32 0
  store %struct.RecVolItem* %54, %struct.RecVolItem** %55, align 8
  store i64 %25, i64* %6, align 8
  br label %56

56:                                               ; preds = %53, %2
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{!5}
!5 = distinct !{!5, !6}
!6 = distinct !{!6, !"LVerDomain"}
!7 = !{!8}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !10}
!12 = !{!13}
!13 = distinct !{!13, !14}
!14 = distinct !{!14, !"LVerDomain"}
!15 = !{!16}
!16 = distinct !{!16, !14}
!17 = distinct !{!17, !10}
!18 = distinct !{!18, !10}
!19 = distinct !{!19, !3}
!20 = !{!21}
!21 = distinct !{!21, !22}
!22 = distinct !{!22, !"LVerDomain"}
!23 = !{!24}
!24 = distinct !{!24, !22}
!25 = distinct !{!25, !10}
!26 = distinct !{!26, !10}
!27 = !{!28}
!28 = distinct !{!28, !29}
!29 = distinct !{!29, !"LVerDomain"}
!30 = !{!31}
!31 = distinct !{!31, !29}
!32 = distinct !{!32, !10}
!33 = distinct !{!33, !10}
!34 = !{i8 0, i8 2}
!35 = distinct !{!35, !3}
!36 = !{!37}
!37 = distinct !{!37, !38}
!38 = distinct !{!38, !"LVerDomain"}
!39 = !{!40}
!40 = distinct !{!40, !38}
!41 = distinct !{!41, !10}
!42 = distinct !{!42, !10}
!43 = distinct !{!43, !3}
