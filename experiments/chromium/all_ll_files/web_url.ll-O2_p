; ModuleID = '../../third_party/blink/renderer/platform/exported/web_url.cc'
source_filename = "../../third_party/blink/renderer/platform/exported/web_url.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"class.blink::WebString" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"class.WTF::String" = type { %class.scoped_refptr }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }

@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8

@_ZN5blink6WebURLC1ERKNS_4KURLE = hidden unnamed_addr alias void (%"class.blink::WebURL"*, %"class.blink::KURL"*), void (%"class.blink::WebURL"*, %"class.blink::KURL"*)* @_ZN5blink6WebURLC2ERKNS_4KURLE

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink6WebURL10ProtocolIsEPKc(%"class.blink::WebURL"*, i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #5
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %0, i64 0, i32 0
  %9 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink9WebStringcvN3WTF10StringViewEEv(%"class.WTF::StringView"* nonnull sret %3, %"class.blink::WebString"* %8) #5
  %10 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %0, i64 0, i32 2
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  %13 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #5
  %14 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #5
  br i1 %12, label %56, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %0, i64 0, i32 1, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = bitcast %"class.WTF::StringView"* %3 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %19, i32* %23, align 8
  %24 = inttoptr i64 %21 to %"class.WTF::StringImpl"*
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %15
  %30 = load i8*, i8** %7, align 8
  %31 = zext i32 %17 to i64
  %32 = getelementptr inbounds i8, i8* %30, i64 %31
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* %32, i8** %33, align 8
  br label %41

34:                                               ; preds = %15
  %35 = bitcast i8** %7 to i16**
  %36 = load i16*, i16** %35, align 8
  %37 = zext i32 %17 to i64
  %38 = getelementptr inbounds i16, i16* %36, i64 %37
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %40 = bitcast i8** %39 to i16**
  store i16* %38, i16** %40, align 8
  br label %41

41:                                               ; preds = %29, %34
  %42 = icmp eq i8* %1, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %41
  %44 = call i64 @strlen(i8* nonnull %1) #6
  %45 = icmp ult i64 %44, 4294967296
  br i1 %45, label %47, label %46, !prof !3

46:                                               ; preds = %43
  call void @llvm.trap() #5
  unreachable

47:                                               ; preds = %43
  %48 = trunc i64 %44 to i32
  br label %49

49:                                               ; preds = %41, %47
  %50 = phi i32 [ %48, %47 ], [ 0, %41 ]
  %51 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %52 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* %1, i8** %53, align 8
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %50, i32* %54, align 8
  %55 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #5
  br label %56

56:                                               ; preds = %2, %49
  %57 = phi i1 [ false, %2 ], [ %55, %49 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #5
  ret i1 %57
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNK5blink9WebStringcvN3WTF10StringViewEEv(%"class.WTF::StringView"* sret, %"class.blink::WebString"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink6WebURLC2ERKNS_4KURLE(%"class.blink::WebURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %1, i64 0, i32 4
  tail call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* %3, %"class.WTF::String"* dereferenceable(8) %4) #5
  %5 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %1, i64 0, i32 3
  tail call void @_ZN3url6ParsedC1ERKS0_(%"struct.url::Parsed"* %5, %"struct.url::Parsed"* dereferenceable(80) %6) #5
  %7 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %0, i64 0, i32 2
  %8 = tail call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* %1) #5
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %7, align 8
  ret void
}

declare void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN3url6ParsedC1ERKS0_(%"struct.url::Parsed"*, %"struct.url::Parsed"* dereferenceable(80)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(96) %"class.blink::WebURL"* @_ZN5blink6WebURLaSERKNS_4KURLE(%"class.blink::WebURL"* returned, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %1, i64 0, i32 4
  %4 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %0, i64 0, i32 0
  %5 = tail call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKN3WTF6StringE(%"class.blink::WebString"* %4, %"class.WTF::String"* dereferenceable(8) %3) #5
  %6 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %1, i64 0, i32 3
  %7 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %0, i64 0, i32 1
  %8 = tail call dereferenceable(80) %"struct.url::Parsed"* @_ZN3url6ParsedaSERKS0_(%"struct.url::Parsed"* %7, %"struct.url::Parsed"* dereferenceable(80) %6) #5
  %9 = tail call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* %1) #5
  %10 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %0, i64 0, i32 2
  %11 = zext i1 %9 to i8
  store i8 %11, i8* %10, align 8
  ret %"class.blink::WebURL"* %0
}

declare dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKN3WTF6StringE(%"class.blink::WebString"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare dereferenceable(80) %"struct.url::Parsed"* @_ZN3url6ParsedaSERKS0_(%"struct.url::Parsed"*, %"struct.url::Parsed"* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink6WebURLcvNS_4KURLEEv(%"class.blink::KURL"* noalias sret, %"class.blink::WebURL"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #5
  %5 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %1, i64 0, i32 0
  %6 = tail call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF12AtomicStringEEv(%"class.blink::WebString"* %5) #5
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %1, i64 0, i32 1
  %9 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %1, i64 0, i32 2
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp ne i8 %10, 0
  call void @_ZN5blink4KURLC1ERKN3WTF12AtomicStringERKN3url6ParsedEb(%"class.blink::KURL"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3, %"struct.url::Parsed"* dereferenceable(80) %8, i1 zeroext %11) #5
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #5
  br label %27

27:                                               ; preds = %2, %23, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #5
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF12AtomicStringEEv(%"class.blink::WebString"*) local_unnamed_addr #2

declare void @_ZN5blink4KURLC1ERKN3WTF12AtomicStringERKN3url6ParsedEb(%"class.blink::KURL"*, %"class.WTF::AtomicString"* dereferenceable(8), %"struct.url::Parsed"* dereferenceable(80), i1 zeroext) unnamed_addr #2

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind }
attributes #6 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
