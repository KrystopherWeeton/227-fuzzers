; ModuleID = '../../net/third_party/quiche/src/quic/platform/api/quic_socket_address.cc'
source_filename = "../../net/third_party/quiche/src/quic/platform/api/quic_socket_address.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.quic::QuicSocketAddress" = type <{ %"class.quic::QuicIpAddress", i16, [2 x i8] }>
%"class.quic::QuicIpAddress" = type { %union.anon, i32 }
%union.anon = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.0 }
%union.anon.0 = type { [4 x i32] }
%struct.sockaddr_storage = type { i16, [118 x i8], i64 }
%struct.sockaddr = type { i16, [14 x i8] }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.1 }
%union.anon.1 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%struct.in_addr = type { i32 }
%"class.absl::AlphaNum" = type { %"class.absl::string_view", [32 x i8] }
%"class.absl::string_view" = type { i8*, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [74 x i8] c"../../net/third_party/quiche/src/quic/platform/api/quic_socket_address.cc\00", align 1
@.str.1 = private unnamed_addr constant [32 x i8] c"Unknown address family passed: \00", align 1
@.str.2 = private unnamed_addr constant [42 x i8] c"Socket address of invalid length provided\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"]:\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN4quic17QuicSocketAddressC1ENS_13QuicIpAddressEt = hidden unnamed_addr alias void (%"class.quic::QuicSocketAddress"*, %"class.quic::QuicIpAddress"*, i16), void (%"class.quic::QuicSocketAddress"*, %"class.quic::QuicIpAddress"*, i16)* @_ZN4quic17QuicSocketAddressC2ENS_13QuicIpAddressEt
@_ZN4quic17QuicSocketAddressC1ERK16sockaddr_storage = hidden unnamed_addr alias void (%"class.quic::QuicSocketAddress"*, %struct.sockaddr_storage*), void (%"class.quic::QuicSocketAddress"*, %struct.sockaddr_storage*)* @_ZN4quic17QuicSocketAddressC2ERK16sockaddr_storage
@_ZN4quic17QuicSocketAddressC1EPK8sockaddrj = hidden unnamed_addr alias void (%"class.quic::QuicSocketAddress"*, %struct.sockaddr*, i32), void (%"class.quic::QuicSocketAddress"*, %struct.sockaddr*, i32)* @_ZN4quic17QuicSocketAddressC2EPK8sockaddrj

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic17QuicSocketAddressC2ENS_13QuicIpAddressEt(%"class.quic::QuicSocketAddress"* nocapture, %"class.quic::QuicIpAddress"* nocapture readonly byval(%"class.quic::QuicIpAddress") align 8, i16 zeroext) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.quic::QuicSocketAddress"* %0 to i8*
  %5 = bitcast %"class.quic::QuicIpAddress"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* nonnull align 8 %5, i64 20, i1 false)
  %6 = getelementptr inbounds %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress"* %0, i64 0, i32 1
  store i16 %2, i16* %6, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic17QuicSocketAddressC2ERK16sockaddr_storage(%"class.quic::QuicSocketAddress"*, %struct.sockaddr_storage* dereferenceable(128)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.quic::QuicIpAddress", align 4
  %4 = alloca %"class.quic::QuicIpAddress", align 4
  %5 = alloca %"class.logging::LogMessage", align 8
  %6 = getelementptr inbounds %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress"* %0, i64 0, i32 0
  tail call void @_ZN4quic13QuicIpAddressC1Ev(%"class.quic::QuicIpAddress"* %6) #9
  %7 = getelementptr inbounds %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress"* %0, i64 0, i32 1
  store i16 0, i16* %7, align 4
  %8 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %1, i64 0, i32 0
  %9 = load i16, i16* %8, align 8
  switch i16 %9, label %28 [
    i16 2, label %10
    i16 10, label %19
  ]

10:                                               ; preds = %2
  %11 = bitcast %"class.quic::QuicIpAddress"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %11) #9
  %12 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %1, i64 0, i32 1, i64 2
  %13 = bitcast i8* %12 to %struct.in_addr*
  call void @_ZN4quic13QuicIpAddressC1ERK7in_addr(%"class.quic::QuicIpAddress"* nonnull %3, %struct.in_addr* dereferenceable(4) %13) #9
  %14 = bitcast %"class.quic::QuicSocketAddress"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* nonnull align 4 %11, i64 20, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %11) #9
  %15 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %1, i64 0, i32 1
  %16 = bitcast [118 x i8]* %15 to i16*
  %17 = load i16, i16* %16, align 2
  %18 = call i16 @llvm.bswap.i16(i16 %17) #9
  store i16 %18, i16* %7, align 4
  br label %37

19:                                               ; preds = %2
  %20 = bitcast %"class.quic::QuicIpAddress"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %20) #9
  %21 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %1, i64 0, i32 1, i64 6
  %22 = bitcast i8* %21 to %struct.in6_addr*
  call void @_ZN4quic13QuicIpAddressC1ERK8in6_addr(%"class.quic::QuicIpAddress"* nonnull %4, %struct.in6_addr* dereferenceable(16) %22) #9
  %23 = bitcast %"class.quic::QuicSocketAddress"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* nonnull align 4 %20, i64 20, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %20) #9
  %24 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %1, i64 0, i32 1
  %25 = bitcast [118 x i8]* %24 to i16*
  %26 = load i16, i16* %25, align 2
  %27 = call i16 @llvm.bswap.i16(i16 %26) #9
  store i16 %27, i16* %7, align 4
  br label %37

28:                                               ; preds = %2
  %29 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #9
  br i1 %29, label %30, label %37

30:                                               ; preds = %28
  %31 = bitcast %"class.logging::LogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %31) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %5, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str, i64 0, i64 0), i32 36, i32 2) #9
  %32 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %5, i64 0, i32 2
  %33 = bitcast %"class.std::__1::basic_ostringstream"* %32 to %"class.std::__1::basic_ostream"*
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %33, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0), i64 31) #9
  %35 = load i16, i16* %8, align 8
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEt(%"class.std::__1::basic_ostream"* %34, i16 zeroext %35) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %31) #9
  br label %37

37:                                               ; preds = %30, %28, %19, %10
  ret void
}

declare void @_ZN4quic13QuicIpAddressC1Ev(%"class.quic::QuicIpAddress"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4quic13QuicIpAddressC1ERK7in_addr(%"class.quic::QuicIpAddress"*, %struct.in_addr* dereferenceable(4)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4quic13QuicIpAddressC1ERK8in6_addr(%"class.quic::QuicIpAddress"*, %struct.in6_addr* dereferenceable(16)) unnamed_addr #2

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #2

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEt(%"class.std::__1::basic_ostream"*, i16 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic17QuicSocketAddressC2EPK8sockaddrj(%"class.quic::QuicSocketAddress"*, %struct.sockaddr* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %4 = alloca %struct.sockaddr_storage, align 8
  %5 = alloca %"class.logging::LogMessage", align 8
  %6 = alloca %"class.quic::QuicSocketAddress", align 4
  %7 = getelementptr inbounds %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress"* %0, i64 0, i32 0
  tail call void @_ZN4quic13QuicIpAddressC1Ev(%"class.quic::QuicIpAddress"* %7) #9
  %8 = getelementptr inbounds %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress"* %0, i64 0, i32 1
  store i16 0, i16* %8, align 4
  %9 = bitcast %struct.sockaddr_storage* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 128, i1 false)
  %10 = icmp ult i32 %2, 16
  br i1 %10, label %19, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 0
  %13 = load i16, i16* %12, align 2
  %14 = icmp eq i16 %13, 10
  %15 = icmp ult i32 %2, 28
  %16 = and i1 %15, %14
  %17 = icmp ugt i32 %2, 128
  %18 = or i1 %17, %16
  br i1 %18, label %19, label %26

19:                                               ; preds = %11, %3
  %20 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #9
  br i1 %20, label %21, label %31

21:                                               ; preds = %19
  %22 = bitcast %"class.logging::LogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %22) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %5, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str, i64 0, i64 0), i32 52, i32 2) #9
  %23 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %5, i64 0, i32 2
  %24 = bitcast %"class.std::__1::basic_ostringstream"* %23 to %"class.std::__1::basic_ostream"*
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %24, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0), i64 41) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %22) #9
  br label %31

26:                                               ; preds = %11
  %27 = bitcast %struct.sockaddr* %1 to i8*
  %28 = zext i32 %2 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 2 %27, i64 %28, i1 false)
  %29 = bitcast %"class.quic::QuicSocketAddress"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #9
  call void @_ZN4quic17QuicSocketAddressC2ERK16sockaddr_storage(%"class.quic::QuicSocketAddress"* nonnull %6, %struct.sockaddr_storage* nonnull dereferenceable(128) %4)
  %30 = bitcast %"class.quic::QuicSocketAddress"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %30, i8* nonnull align 4 %29, i64 22, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #9
  br label %31

31:                                               ; preds = %21, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %9) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quiceqERKNS_17QuicSocketAddressES2_(%"class.quic::QuicSocketAddress"* nocapture readonly dereferenceable(24), %"class.quic::QuicSocketAddress"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.quic::QuicIpAddress", align 8
  %4 = alloca %"class.quic::QuicIpAddress", align 8
  %5 = bitcast %"class.quic::QuicIpAddress"* %3 to i8*
  %6 = bitcast %"class.quic::QuicSocketAddress"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 4 %6, i64 20, i1 false)
  %7 = bitcast %"class.quic::QuicIpAddress"* %4 to i8*
  %8 = bitcast %"class.quic::QuicSocketAddress"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 4 %8, i64 20, i1 false)
  %9 = tail call zeroext i1 @_ZN4quiceqENS_13QuicIpAddressES0_(%"class.quic::QuicIpAddress"* nonnull byval(%"class.quic::QuicIpAddress") align 8 %3, %"class.quic::QuicIpAddress"* nonnull byval(%"class.quic::QuicIpAddress") align 8 %4) #9
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress"* %0, i64 0, i32 1
  %12 = load i16, i16* %11, align 4
  %13 = getelementptr inbounds %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress"* %1, i64 0, i32 1
  %14 = load i16, i16* %13, align 4
  %15 = icmp eq i16 %12, %14
  br label %16

16:                                               ; preds = %10, %2
  %17 = phi i1 [ false, %2 ], [ %15, %10 ]
  ret i1 %17
}

declare zeroext i1 @_ZN4quiceqENS_13QuicIpAddressES0_(%"class.quic::QuicIpAddress"* byval(%"class.quic::QuicIpAddress") align 8, %"class.quic::QuicIpAddress"* byval(%"class.quic::QuicIpAddress") align 8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quicneERKNS_17QuicSocketAddressES2_(%"class.quic::QuicSocketAddress"* nocapture readonly dereferenceable(24), %"class.quic::QuicSocketAddress"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.quic::QuicIpAddress", align 8
  %4 = alloca %"class.quic::QuicIpAddress", align 8
  %5 = bitcast %"class.quic::QuicIpAddress"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %5)
  %6 = bitcast %"class.quic::QuicIpAddress"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6)
  %7 = bitcast %"class.quic::QuicSocketAddress"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 4 %7, i64 20, i1 false) #9
  %8 = bitcast %"class.quic::QuicSocketAddress"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 4 %8, i64 20, i1 false) #9
  %9 = tail call zeroext i1 @_ZN4quiceqENS_13QuicIpAddressES0_(%"class.quic::QuicIpAddress"* nonnull byval(%"class.quic::QuicIpAddress") align 8 %3, %"class.quic::QuicIpAddress"* nonnull byval(%"class.quic::QuicIpAddress") align 8 %4) #9
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress"* %0, i64 0, i32 1
  %12 = load i16, i16* %11, align 4
  %13 = getelementptr inbounds %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress"* %1, i64 0, i32 1
  %14 = load i16, i16* %13, align 4
  %15 = icmp ne i16 %12, %14
  br label %16

16:                                               ; preds = %2, %10
  %17 = phi i1 [ true, %2 ], [ %15, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6)
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4quic17QuicSocketAddress13IsInitializedEv(%"class.quic::QuicSocketAddress"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK4quic13QuicIpAddress13IsInitializedEv(%"class.quic::QuicIpAddress"* %2) #9
  ret i1 %3
}

declare zeroext i1 @_ZNK4quic13QuicIpAddress13IsInitializedEv(%"class.quic::QuicIpAddress"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4quic17QuicSocketAddress8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.quic::QuicSocketAddress"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::AlphaNum", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.absl::AlphaNum", align 8
  %6 = alloca %"class.absl::AlphaNum", align 8
  %7 = alloca %"class.absl::AlphaNum", align 8
  %8 = alloca %"class.absl::AlphaNum", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.absl::AlphaNum", align 8
  %11 = alloca %"class.absl::AlphaNum", align 8
  %12 = getelementptr inbounds %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress"* %1, i64 0, i32 0
  %13 = tail call i32 @_ZNK4quic13QuicIpAddress14address_familyEv(%"class.quic::QuicIpAddress"* %12) #9
  switch i32 %13, label %105 [
    i32 0, label %14
    i32 1, label %58
  ]

14:                                               ; preds = %2
  %15 = bitcast %"class.absl::AlphaNum"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %15) #9
  %16 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #9
  call void @_ZNK4quic13QuicIpAddress8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.quic::QuicIpAddress"* %12) #9
  %17 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = zext i8 %19 to i64
  %23 = bitcast %"class.absl::AlphaNum"* %3 to %"class.std::__1::basic_string"**
  store %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"** %23, align 8
  br label %32

24:                                               ; preds = %14
  %25 = bitcast %"class.std::__1::basic_string"* %4 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.absl::AlphaNum"* %3 to i64*
  store i64 %26, i64* %29, align 8
  %30 = icmp sgt i64 %28, -1
  br i1 %30, label %32, label %31, !prof !2

31:                                               ; preds = %24
  call void @llvm.trap() #9
  unreachable

32:                                               ; preds = %21, %24
  %33 = phi i64 [ %22, %21 ], [ %28, %24 ]
  %34 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %3, i64 0, i32 0, i32 1
  store i64 %33, i64* %34, align 8
  %35 = bitcast %"class.absl::AlphaNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %35) #9
  %36 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i8** %36, align 8
  %37 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 1
  store i64 1, i64* %37, align 8
  %38 = bitcast %"class.absl::AlphaNum"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %38) #9
  %39 = getelementptr inbounds %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress"* %1, i64 0, i32 1
  %40 = load i16, i16* %39, align 4
  %41 = zext i16 %40 to i32
  %42 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 1, i64 0
  %43 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEiPc(i32 %41, i8* %42) #9
  %44 = ptrtoint i8* %43 to i64
  %45 = ptrtoint i8* %42 to i64
  %46 = sub i64 %44, %45
  %47 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 0
  store i8* %42, i8** %47, align 8
  %48 = icmp sgt i64 %46, -1
  br i1 %48, label %50, label %49, !prof !2

49:                                               ; preds = %32
  call void @llvm.trap() #9
  unreachable

50:                                               ; preds = %32
  %51 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 1
  store i64 %46, i64* %51, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_(%"class.std::__1::basic_string"* sret %0, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %3, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %5, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %6) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %38) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %35) #9
  %52 = load i8, i8* %18, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %56) #10
  br label %57

57:                                               ; preds = %50, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %15) #9
  br label %109

58:                                               ; preds = %2
  %59 = bitcast %"class.absl::AlphaNum"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %59) #9
  %60 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %7, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i8** %60, align 8
  %61 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %7, i64 0, i32 0, i32 1
  store i64 1, i64* %61, align 8
  %62 = bitcast %"class.absl::AlphaNum"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %62) #9
  %63 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #9
  call void @_ZNK4quic13QuicIpAddress8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %9, %"class.quic::QuicIpAddress"* %12) #9
  %64 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %58
  %69 = zext i8 %66 to i64
  %70 = bitcast %"class.absl::AlphaNum"* %8 to %"class.std::__1::basic_string"**
  store %"class.std::__1::basic_string"* %9, %"class.std::__1::basic_string"** %70, align 8
  br label %79

71:                                               ; preds = %58
  %72 = bitcast %"class.std::__1::basic_string"* %9 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.absl::AlphaNum"* %8 to i64*
  store i64 %73, i64* %76, align 8
  %77 = icmp sgt i64 %75, -1
  br i1 %77, label %79, label %78, !prof !2

78:                                               ; preds = %71
  call void @llvm.trap() #9
  unreachable

79:                                               ; preds = %68, %71
  %80 = phi i64 [ %69, %68 ], [ %75, %71 ]
  %81 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %8, i64 0, i32 0, i32 1
  store i64 %80, i64* %81, align 8
  %82 = bitcast %"class.absl::AlphaNum"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %82) #9
  %83 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %10, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %83, align 8
  %84 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %10, i64 0, i32 0, i32 1
  store i64 2, i64* %84, align 8
  %85 = bitcast %"class.absl::AlphaNum"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %85) #9
  %86 = getelementptr inbounds %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress"* %1, i64 0, i32 1
  %87 = load i16, i16* %86, align 4
  %88 = zext i16 %87 to i32
  %89 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %11, i64 0, i32 1, i64 0
  %90 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEiPc(i32 %88, i8* %89) #9
  %91 = ptrtoint i8* %90 to i64
  %92 = ptrtoint i8* %89 to i64
  %93 = sub i64 %91, %92
  %94 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %11, i64 0, i32 0, i32 0
  store i8* %89, i8** %94, align 8
  %95 = icmp sgt i64 %93, -1
  br i1 %95, label %97, label %96, !prof !2

96:                                               ; preds = %79
  call void @llvm.trap() #9
  unreachable

97:                                               ; preds = %79
  %98 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %11, i64 0, i32 0, i32 1
  store i64 %93, i64* %98, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_S2_(%"class.std::__1::basic_string"* sret %0, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %7, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %8, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %10, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %11) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %85) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %82) #9
  %99 = load i8, i8* %65, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  call void @_ZdlPv(i8* %103) #10
  br label %104

104:                                              ; preds = %97, %101
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %62) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %59) #9
  br label %109

105:                                              ; preds = %2
  %106 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  store i8 0, i8* %107, align 1
  %108 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %108, align 8
  br label %109

109:                                              ; preds = %105, %104, %57
  ret void
}

declare i32 @_ZNK4quic13QuicIpAddress14address_familyEv(%"class.quic::QuicIpAddress"*) local_unnamed_addr #2

declare void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_(%"class.std::__1::basic_string"* sret, %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48)) local_unnamed_addr #2

declare void @_ZNK4quic13QuicIpAddress8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.quic::QuicIpAddress"*) local_unnamed_addr #2

declare void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_S2_(%"class.std::__1::basic_string"* sret, %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4quic17QuicSocketAddress10FromSocketEi(%"class.quic::QuicSocketAddress"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.sockaddr_storage, align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.quic::QuicSocketAddress", align 4
  %6 = bitcast %struct.sockaddr_storage* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 128, i1 false)
  %7 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #9
  store i32 128, i32* %4, align 4
  %8 = bitcast %struct.sockaddr_storage* %3 to %struct.sockaddr*
  %9 = call i32 @getsockname(i32 %1, %struct.sockaddr* nonnull %8, i32* nonnull %4) #9
  %10 = icmp eq i32 %9, 0
  %11 = load i32, i32* %4, align 4
  %12 = add i32 %11, -1
  %13 = icmp ult i32 %12, 128
  %14 = and i1 %10, %13
  br i1 %14, label %15, label %18

15:                                               ; preds = %2
  %16 = bitcast %"class.quic::QuicSocketAddress"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #9
  call void @_ZN4quic17QuicSocketAddressC2ERK16sockaddr_storage(%"class.quic::QuicSocketAddress"* nonnull %5, %struct.sockaddr_storage* nonnull dereferenceable(128) %3)
  %17 = bitcast %"class.quic::QuicSocketAddress"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* nonnull align 4 %16, i64 22, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #9
  br label %18

18:                                               ; preds = %2, %15
  %19 = phi i32 [ 0, %15 ], [ -1, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %6) #9
  ret i32 %19
}

; Function Attrs: nounwind
declare i32 @getsockname(i32, %struct.sockaddr*, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4quic17QuicSocketAddress10NormalizedEv(%"class.quic::QuicSocketAddress"* noalias nocapture sret, %"class.quic::QuicSocketAddress"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.quic::QuicIpAddress", align 8
  %4 = getelementptr inbounds %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress"* %1, i64 0, i32 0
  call void @_ZNK4quic13QuicIpAddress10NormalizedEv(%"class.quic::QuicIpAddress"* nonnull sret %3, %"class.quic::QuicIpAddress"* %4) #9
  %5 = getelementptr inbounds %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress"* %1, i64 0, i32 1
  %6 = load i16, i16* %5, align 4
  %7 = bitcast %"class.quic::QuicIpAddress"* %3 to i8*
  %8 = bitcast %"class.quic::QuicSocketAddress"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* nonnull align 8 %7, i64 20, i1 false)
  %9 = getelementptr inbounds %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress"* %0, i64 0, i32 1
  store i16 %6, i16* %9, align 4
  ret void
}

declare void @_ZNK4quic13QuicIpAddress10NormalizedEv(%"class.quic::QuicIpAddress"* sret, %"class.quic::QuicIpAddress"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4quic17QuicSocketAddress4hostEv(%"class.quic::QuicIpAddress"* noalias nocapture sret, %"class.quic::QuicSocketAddress"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.quic::QuicIpAddress"* %0 to i8*
  %4 = bitcast %"class.quic::QuicSocketAddress"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 20, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i16 @_ZNK4quic17QuicSocketAddress4portEv(%"class.quic::QuicSocketAddress"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress"* %0, i64 0, i32 1
  %3 = load i16, i16* %2, align 4
  ret i16 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4quic17QuicSocketAddress15generic_addressEv(%struct.sockaddr_storage* noalias nocapture sret, %"class.quic::QuicSocketAddress"*) local_unnamed_addr #0 align 2 {
  %3 = alloca [104 x i8], align 8
  %4 = getelementptr inbounds [104 x i8], [104 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %4)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 104, i1 false)
  %5 = getelementptr inbounds %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress"* %1, i64 0, i32 0
  %6 = tail call i32 @_ZNK4quic13QuicIpAddress14address_familyEv(%"class.quic::QuicIpAddress"* %5) #9
  switch i32 %6, label %21 [
    i32 0, label %7
    i32 1, label %9
  ]

7:                                                ; preds = %2
  %8 = tail call i32 @_ZNK4quic13QuicIpAddress7GetIPv4Ev(%"class.quic::QuicIpAddress"* %5) #9
  br label %13

9:                                                ; preds = %2
  %10 = tail call { i64, i64 } @_ZNK4quic13QuicIpAddress7GetIPv6Ev(%"class.quic::QuicIpAddress"* %5) #9
  %11 = extractvalue { i64, i64 } %10, 0
  %12 = extractvalue { i64, i64 } %10, 1
  br label %13

13:                                               ; preds = %7, %9
  %14 = phi i64 [ 0, %7 ], [ %11, %9 ]
  %15 = phi i64 [ 0, %7 ], [ %12, %9 ]
  %16 = phi i32 [ %8, %7 ], [ 0, %9 ]
  %17 = phi i16 [ 2, %7 ], [ 10, %9 ]
  %18 = getelementptr inbounds %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress"* %1, i64 0, i32 1
  %19 = load i16, i16* %18, align 4
  %20 = tail call i16 @llvm.bswap.i16(i16 %19) #9
  br label %21

21:                                               ; preds = %13, %2
  %22 = phi i64 [ 0, %2 ], [ %14, %13 ]
  %23 = phi i64 [ 0, %2 ], [ %15, %13 ]
  %24 = phi i32 [ 0, %2 ], [ %16, %13 ]
  %25 = phi i16 [ 0, %2 ], [ %20, %13 ]
  %26 = phi i16 [ 0, %2 ], [ %17, %13 ]
  %27 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %0, i64 0, i32 0
  store i16 %26, i16* %27, align 8
  %28 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %0, i64 0, i32 1
  %29 = bitcast [118 x i8]* %28 to i16*
  store i16 %25, i16* %29, align 2
  %30 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %0, i64 0, i32 1, i64 2
  %31 = bitcast i8* %30 to i32*
  store i32 %24, i32* %31, align 4
  %32 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %0, i64 0, i32 1, i64 6
  %33 = bitcast i8* %32 to i64*
  store i64 %22, i64* %33, align 8
  %34 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %0, i64 0, i32 1, i64 14
  %35 = bitcast i8* %34 to i64*
  store i64 %23, i64* %35, align 8
  %36 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %0, i64 0, i32 1, i64 22
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* nonnull align 8 %4, i64 104, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %4)
  ret void
}

declare i32 @_ZNK4quic13QuicIpAddress7GetIPv4Ev(%"class.quic::QuicIpAddress"*) local_unnamed_addr #2

declare { i64, i64 } @_ZNK4quic13QuicIpAddress7GetIPv6Ev(%"class.quic::QuicIpAddress"*) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare i8* @_ZN4absl16numbers_internal15FastIntToBufferEiPc(i32, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #10
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
