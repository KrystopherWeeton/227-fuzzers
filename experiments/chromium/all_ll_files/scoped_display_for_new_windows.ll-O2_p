; ModuleID = '../../ui/display/scoped_display_for_new_windows.cc'
source_filename = "../../ui/display/scoped_display_for_new_windows.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.display::ScopedDisplayForNewWindows" = type { i8 }
%"class.aura::Window" = type opaque
%"class.display::Screen" = type { i32 (...)**, i64, i64 }
%"class.display::Display" = type { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, %"class.absl::optional", i32, i32, %"class.gfx::Size", %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.0" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }

@_ZN7display26ScopedDisplayForNewWindowsC1El = hidden unnamed_addr alias void (%"class.display::ScopedDisplayForNewWindows"*, i64), void (%"class.display::ScopedDisplayForNewWindows"*, i64)* @_ZN7display26ScopedDisplayForNewWindowsC2El
@_ZN7display26ScopedDisplayForNewWindowsC1EPN4aura6WindowE = hidden unnamed_addr alias void (%"class.display::ScopedDisplayForNewWindows"*, %"class.aura::Window"*), void (%"class.display::ScopedDisplayForNewWindows"*, %"class.aura::Window"*)* @_ZN7display26ScopedDisplayForNewWindowsC2EPN4aura6WindowE
@_ZN7display26ScopedDisplayForNewWindowsD1Ev = hidden unnamed_addr alias void (%"class.display::ScopedDisplayForNewWindows"*), void (%"class.display::ScopedDisplayForNewWindows"*)* @_ZN7display26ScopedDisplayForNewWindowsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display26ScopedDisplayForNewWindowsC2El(%"class.display::ScopedDisplayForNewWindows"* nocapture readnone, i64) unnamed_addr #0 align 2 {
  %3 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #4
  tail call void @_ZN7display6Screen29SetScopedDisplayForNewWindowsEl(%"class.display::Screen"* %3, i64 %1) #4
  ret void
}

declare %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() local_unnamed_addr #1

declare void @_ZN7display6Screen29SetScopedDisplayForNewWindowsEl(%"class.display::Screen"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display26ScopedDisplayForNewWindowsC2EPN4aura6WindowE(%"class.display::ScopedDisplayForNewWindows"* nocapture readnone, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.display::Display", align 8
  %4 = bitcast %"class.display::Display"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %4) #4
  %5 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #4
  %6 = bitcast %"class.display::Screen"* %5 to void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)***
  %7 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)**, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %7, i64 9
  %9 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %8, align 8
  call void %9(%"class.display::Display"* nonnull sret %3, %"class.display::Screen"* %5, %"class.aura::Window"* %1) #4
  %10 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %3, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #4
  call void @_ZN7display6Screen29SetScopedDisplayForNewWindowsEl(%"class.display::Screen"* %12, i64 %11) #4
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %3) #4
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %4) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @_ZN7display7DisplayD1Ev(%"class.display::Display"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display26ScopedDisplayForNewWindowsD2Ev(%"class.display::ScopedDisplayForNewWindows"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #4
  tail call void @_ZN7display6Screen29SetScopedDisplayForNewWindowsEl(%"class.display::Screen"* %2, i64 -1) #4
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
