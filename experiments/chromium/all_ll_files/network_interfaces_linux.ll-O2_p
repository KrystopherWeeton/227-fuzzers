; ModuleID = '../../net/base/network_interfaces_linux.cc'
source_filename = "../../net/base/network_interfaces_linux.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%union.anon.2 = type { [16 x i8] }
%struct.sockaddr = type { i16, [14 x i8] }
%"class.net::internal::AddressTrackerLinux" = type <{ i32 (...)**, i8* (i32, i8*)*, %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::ScopedGeneric", %"class.std::__1::unique_ptr.50", %"class.base::Lock", %"class.std::__1::map", %"class.base::Lock", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set.69", %"class.base::Lock", i8, [7 x i8], %"class.base::ConditionVariable", i32, i8, [3 x i8], i32, %"class.base::ThreadChecker", [3 x i8] }>
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.49" }
%"struct.std::__1::__atomic_base.49" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.base::FileDescriptorWatcher::Controller"* }
%"class.base::FileDescriptorWatcher::Controller" = type { %"class.base::RepeatingCallback", %class.scoped_refptr.53, %"class.base::FileDescriptorWatcher::Controller::Watcher"*, %"class.base::WaitableEvent", %"class.base::SequenceCheckerDoNothing", %"class.base::WeakPtrFactory" }
%class.scoped_refptr.53 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.54" }>
%"class.base::RefCountedThreadSafe.54" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::FileDescriptorWatcher::Controller::Watcher" = type opaque
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.55, i8, [7 x i8] }>
%class.scoped_refptr.55 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.56", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.56" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.57" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.61 }
%class.scoped_refptr.61 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.62", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.62" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.63" }
%"struct.std::__1::atomic.63" = type { %"struct.std::__1::__atomic_base.64" }
%"struct.std::__1::__atomic_base.64" = type { %"struct.std::__1::__atomic_base.65" }
%"struct.std::__1::__atomic_base.65" = type { %"struct.std::__1::__cxx_atomic_impl.66" }
%"struct.std::__1::__cxx_atomic_impl.66" = type { %"struct.std::__1::__cxx_atomic_base_impl.67" }
%"struct.std::__1::__cxx_atomic_base_impl.67" = type { i8 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.23", %"class.std::__1::__compressed_pair.25", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11", %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { float }
%"class.std::__1::unordered_set.69" = type { %"class.std::__1::__hash_table.70" }
%"class.std::__1::__hash_table.70" = type <{ %"class.std::__1::unique_ptr.71", %"class.std::__1::__compressed_pair.81", %"class.std::__1::__compressed_pair.86", %"class.std::__1::__compressed_pair.90", [4 x i8] }>
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73", %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.std::__1::__hash_node_base.74"** }
%"struct.std::__1::__hash_node_base.74" = type { %"struct.std::__1::__hash_node_base.74"* }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.std::__1::__bucket_list_deallocator.76" }
%"class.std::__1::__bucket_list_deallocator.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.std::__1::__hash_node_base.74" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::ConditionVariable" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t*, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.95, %union.anon.97, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.95 = type { i64 }
%union.anon.97 = type { i64 }
%"class.base::ThreadChecker" = type { i8 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%struct.iwreq = type { %union.anon.1, %union.iwreq_data }
%union.anon.1 = type { [16 x i8] }
%union.iwreq_data = type { %struct.iw_point }
%struct.iw_point = type { i8*, i16, i16 }
%struct.ethtool_cmd = type { i32, i32, i32, i16, i8, i8, i8, i8, i8, i8, i32, i32, i16, i8, i8, i32, [2 x i32] }
%struct.ifreq = type { %union.anon.2, %union.anon.3 }
%union.anon.3 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.net::NetworkInterface"*, %"struct.net::NetworkInterface"*, %"class.std::__1::__compressed_pair.5" }
%"struct.net::NetworkInterface" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, %"class.net::IPAddress", [3 x i8], i32, i32, [4 x i8] }>
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.net::NetworkInterface"* }
%"class.std::__1::map.36" = type { %"class.std::__1::__tree.37" }
%"class.std::__1::__tree.37" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%struct.sockaddr_storage = type { i16, [118 x i8], i64 }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.48" }
%"struct.std::__1::pair.48" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__tree_node.100" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.99" }
%"struct.std::__1::__value_type.99" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.net::IPAddress", %struct.ifaddrmsg }
%struct.ifaddrmsg = type { i8, i8, i8, i8, i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev = comdat any

$_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorIN3net16NetworkInterfaceENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net9IPAddressE9ifaddrmsgEENS_19__map_value_compareIS3_S5_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

$_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE = comdat any

@__const._ZN3net8internal26GetInterfaceConnectionTypeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE.ifr = private unnamed_addr constant { %union.anon.2, { %struct.sockaddr, [8 x i8] } } { %union.anon.2 zeroinitializer, { %struct.sockaddr, [8 x i8] } { %struct.sockaddr zeroinitializer, [8 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA" } }, align 8
@__const._ZN3net14GetNetworkListEPNSt3__16vectorINS_16NetworkInterfaceENS0_9allocatorIS2_EEEEi.tracker = private unnamed_addr constant %"class.net::internal::AddressTrackerLinux" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* (i32, i8*)* inttoptr (i64 -6148914691236517206 to i8* (i32, i8*)*), %"class.base::RepeatingCallback" { %"class.base::internal::CallbackBaseCopyable" { %"class.base::internal::CallbackBase" { %class.scoped_refptr { %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*) } } } }, %"class.base::RepeatingCallback" { %"class.base::internal::CallbackBaseCopyable" { %"class.base::internal::CallbackBase" { %class.scoped_refptr { %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*) } } } }, %"class.base::RepeatingCallback" { %"class.base::internal::CallbackBaseCopyable" { %"class.base::internal::CallbackBase" { %class.scoped_refptr { %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*) } } } }, %"class.base::ScopedGeneric" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" { i32 -1431655766 }, i8 -86, [3 x i8] c"\AA\AA\AA" }>, %"class.std::__1::unique_ptr.50" { %"class.std::__1::__compressed_pair.51" { %"struct.std::__1::__compressed_pair_elem.52" { %"class.base::FileDescriptorWatcher::Controller"* inttoptr (i64 -6148914691236517206 to %"class.base::FileDescriptorWatcher::Controller"*) } } }, %"class.base::Lock" { %"class.base::internal::LockImpl" { %union.pthread_mutex_t { %struct.__pthread_mutex_s { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i16 -21846, i16 -21846, %struct.__pthread_internal_list { %struct.__pthread_internal_list* inttoptr (i64 -6148914691236517206 to %struct.__pthread_internal_list*), %struct.__pthread_internal_list* inttoptr (i64 -6148914691236517206 to %struct.__pthread_internal_list*) } } } } }, %"class.std::__1::map" { %"class.std::__1::__tree" { %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__compressed_pair.28" { %"struct.std::__1::__compressed_pair_elem.29" { %"class.std::__1::__tree_end_node" { %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*) } } }, %"class.std::__1::__compressed_pair.33" { %"struct.std::__1::__compressed_pair_elem.14" { i64 -6148914691236517206 } } } }, %"class.base::Lock" { %"class.base::internal::LockImpl" { %union.pthread_mutex_t { %struct.__pthread_mutex_s { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i16 -21846, i16 -21846, %struct.__pthread_internal_list { %struct.__pthread_internal_list* inttoptr (i64 -6148914691236517206 to %struct.__pthread_internal_list*), %struct.__pthread_internal_list* inttoptr (i64 -6148914691236517206 to %struct.__pthread_internal_list*) } } } } }, %"class.std::__1::unordered_set" { %"class.std::__1::__hash_table" <{ %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.10" { %"struct.std::__1::__compressed_pair_elem.11" { %"struct.std::__1::__hash_node_base"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"**) }, %"struct.std::__1::__compressed_pair_elem.12" { %"class.std::__1::__bucket_list_deallocator" { %"class.std::__1::__compressed_pair.13" { %"struct.std::__1::__compressed_pair_elem.14" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.18" { %"struct.std::__1::__compressed_pair_elem.19" { %"struct.std::__1::__hash_node_base" { %"struct.std::__1::__hash_node_base"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"*) } } }, %"class.std::__1::__compressed_pair.23" { %"struct.std::__1::__compressed_pair_elem.14" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.25" { %"struct.std::__1::__compressed_pair_elem.26" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_set.69" { %"class.std::__1::__hash_table.70" <{ %"class.std::__1::unique_ptr.71" { %"class.std::__1::__compressed_pair.72" { %"struct.std::__1::__compressed_pair_elem.73" { %"struct.std::__1::__hash_node_base.74"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.74"**) }, %"struct.std::__1::__compressed_pair_elem.75" { %"class.std::__1::__bucket_list_deallocator.76" { %"class.std::__1::__compressed_pair.77" { %"struct.std::__1::__compressed_pair_elem.14" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.81" { %"struct.std::__1::__compressed_pair_elem.82" { %"struct.std::__1::__hash_node_base.74" { %"struct.std::__1::__hash_node_base.74"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.74"*) } } }, %"class.std::__1::__compressed_pair.86" { %"struct.std::__1::__compressed_pair_elem.14" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.90" { %"struct.std::__1::__compressed_pair_elem.26" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.base::Lock" { %"class.base::internal::LockImpl" { %union.pthread_mutex_t { %struct.__pthread_mutex_s { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i16 -21846, i16 -21846, %struct.__pthread_internal_list { %struct.__pthread_internal_list* inttoptr (i64 -6148914691236517206 to %struct.__pthread_internal_list*), %struct.__pthread_internal_list* inttoptr (i64 -6148914691236517206 to %struct.__pthread_internal_list*) } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.base::ConditionVariable" <{ %union.pthread_cond_t { %struct.__pthread_cond_s { %union.anon.95 { i64 -6148914691236517206 }, %union.anon.97 { i64 -6148914691236517206 }, [2 x i32] [i32 -1431655766, i32 -1431655766], [2 x i32] [i32 -1431655766, i32 -1431655766], i32 -1431655766, i32 -1431655766, [2 x i32] [i32 -1431655766, i32 -1431655766] } }, %union.pthread_mutex_t* inttoptr (i64 -6148914691236517206 to %union.pthread_mutex_t*), i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, %"class.base::ThreadChecker" { i8 -86 }, [3 x i8] c"\AA\AA\AA" }>, align 8
@_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::ScopedGeneric"*)* @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev to i8*), i8* bitcast (void (%"class.base::ScopedGeneric"*)* @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [28 x i8] c"../../base/scoped_generic.h\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"!receiving_\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"ScopedGeneric destroyed with active receiver\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net8internal26GetInterfaceConnectionTypeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = alloca %"class.base::ScopedGeneric", align 8
  %3 = alloca %struct.iwreq, align 8
  %4 = alloca %struct.ethtool_cmd, align 4
  %5 = alloca %struct.ifreq, align 8
  %6 = bitcast %"class.base::ScopedGeneric"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %2, i64 0, i32 1, i32 0
  %8 = bitcast %"class.base::ScopedGeneric"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  call void @_ZN3net8internal17GetSocketForIoctlEv(%"class.base::ScopedGeneric"* nonnull sret %2)
  %9 = load i32, i32* %7, align 8
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %44, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.iwreq, %struct.iwreq* %3, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 32, i1 false)
  %13 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %20 = select i1 %16, i8* %18, i8* %19
  %21 = call i8* @strncpy(i8* nonnull %12, i8* %20, i64 15)
  %22 = load i32, i32* %7, align 8
  %23 = call i32 (i32, i64, ...) @ioctl(i32 %22, i64 35585, %struct.iwreq* nonnull %3) #13
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %25, label %42

25:                                               ; preds = %11
  %26 = bitcast %struct.ethtool_cmd* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %26) #13
  %27 = getelementptr inbounds %struct.ethtool_cmd, %struct.ethtool_cmd* %4, i64 0, i32 1
  %28 = bitcast i32* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %28, i8 0, i64 40, i1 false)
  %29 = getelementptr inbounds %struct.ethtool_cmd, %struct.ethtool_cmd* %4, i64 0, i32 0
  store i32 1, i32* %29, align 4
  %30 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %5, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %30) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* align 8 getelementptr inbounds ({ %union.anon.2, { %struct.sockaddr, [8 x i8] } }, { %union.anon.2, { %struct.sockaddr, [8 x i8] } }* @__const._ZN3net8internal26GetInterfaceConnectionTypeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE.ifr, i64 0, i32 0, i32 0, i64 0), i64 40, i1 false)
  %31 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %5, i64 0, i32 1
  %32 = bitcast %union.anon.3* %31 to %struct.ethtool_cmd**
  store %struct.ethtool_cmd* %4, %struct.ethtool_cmd** %32, align 8
  %33 = load i8, i8* %14, align 1
  %34 = icmp slt i8 %33, 0
  %35 = load i8*, i8** %17, align 8
  %36 = select i1 %34, i8* %35, i8* %19
  %37 = call i8* @strncpy(i8* nonnull %30, i8* %36, i64 15)
  %38 = load i32, i32* %7, align 8
  %39 = call i32 (i32, i64, ...) @ioctl(i32 %38, i64 35142, %struct.ifreq* nonnull %5) #13
  %40 = icmp ne i32 %39, -1
  %41 = zext i1 %40 to i32
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %30) #13
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %26) #13
  br label %42

42:                                               ; preds = %11, %25
  %43 = phi i32 [ %41, %25 ], [ 2, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #13
  br label %44

44:                                               ; preds = %1, %42
  %45 = phi i32 [ %43, %42 ], [ 0, %1 ]
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret i32 %45
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net8internal17GetSocketForIoctlEv(%"class.base::ScopedGeneric"* noalias sret) local_unnamed_addr #0 {
  %2 = alloca %"class.base::ScopedGeneric", align 8
  %3 = bitcast %"class.base::ScopedGeneric"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #13
  %4 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %2, i64 0, i32 0
  %5 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %2, i64 0, i32 1, i32 0
  %6 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %2, i64 0, i32 2
  %7 = bitcast %"class.base::ScopedGeneric"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  %8 = tail call i32 @socket(i32 10, i32 2, i32 0) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  store i32 %8, i32* %5, align 8
  store i8 0, i8* %6, align 4
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %17, label %10

10:                                               ; preds = %1
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %2, i32 %8) #13
  %11 = load i32, i32* %5, align 8
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %17, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  store i32 -1, i32* %5, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %2, i32 %11) #13
  %15 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 1, i32 0
  store i32 %11, i32* %15, align 4
  %16 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 2
  store i8 0, i8* %16, align 4
  br label %23

17:                                               ; preds = %10, %1
  %18 = call i32 @socket(i32 2, i32 2, i32 0) #13
  %19 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 1, i32 0
  store i32 %18, i32* %20, align 4
  %21 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 2
  store i8 0, i8* %21, align 4
  %22 = icmp eq i32 %18, -1
  br i1 %22, label %25, label %23

23:                                               ; preds = %17, %13
  %24 = phi i32 [ %11, %13 ], [ %18, %17 ]
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %0, i32 %24) #13
  br label %25

25:                                               ; preds = %23, %17
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: alwaysinline nofree nounwind ssp uwtable
declare i8* @strncpy(i8* noalias returned, i8* noalias nocapture readonly, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @ioctl(i32, i64, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 128, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0)) #13
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %9, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i64 0, i64 0), i64 44) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13
  br label %11

11:                                               ; preds = %1, %7
  %12 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %0, i32 %13) #13
  %16 = load i32, i32* %12, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %16) #13
  store i32 -1, i32* %12, align 8
  br label %17

17:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net8internal16GetInterfaceSSIDERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) #0 {
  %3 = alloca %"class.base::ScopedGeneric", align 8
  %4 = alloca %struct.iwreq, align 8
  %5 = alloca [33 x i8], align 16
  %6 = bitcast %"class.base::ScopedGeneric"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %3, i64 0, i32 1, i32 0
  %8 = bitcast %"class.base::ScopedGeneric"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  call void @_ZN3net8internal17GetSocketForIoctlEv(%"class.base::ScopedGeneric"* nonnull sret %3)
  %9 = load i32, i32* %7, align 8
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #13
  br label %59

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.iwreq, %struct.iwreq* %4, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 32, i1 false)
  %15 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %22 = select i1 %18, i8* %20, i8* %21
  %23 = call i8* @strncpy(i8* nonnull %14, i8* %22, i64 15)
  %24 = getelementptr inbounds [33 x i8], [33 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 33, i8* nonnull %24) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %24, i8 0, i64 33, i1 false)
  %25 = getelementptr inbounds %struct.iwreq, %struct.iwreq* %4, i64 0, i32 1, i32 0, i32 0
  store i8* %24, i8** %25, align 8
  %26 = getelementptr inbounds %struct.iwreq, %struct.iwreq* %4, i64 0, i32 1, i32 0, i32 1
  store i16 32, i16* %26, align 8
  %27 = load i32, i32* %7, align 8
  %28 = call i32 (i32, i64, ...) @ioctl(i32 %27, i64 35611, %struct.iwreq* nonnull %4) #13
  %29 = icmp eq i32 %28, -1
  br i1 %29, label %56, label %30

30:                                               ; preds = %13
  %31 = call i64 @strlen(i8* nonnull %24) #13
  %32 = icmp ugt i64 %31, -17
  br i1 %32, label %33, label %35

33:                                               ; preds = %30
  %34 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %34) #14
  unreachable

35:                                               ; preds = %30
  %36 = icmp ult i64 %31, 23
  br i1 %36, label %45, label %37

37:                                               ; preds = %35
  %38 = add nuw i64 %31, 16
  %39 = and i64 %38, -16
  %40 = call i8* @_Znwm(i64 %39) #15
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %40, i8** %41, align 8
  %42 = or i64 %39, -9223372036854775808
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %31, i64* %44, align 8
  br label %51

45:                                               ; preds = %35
  %46 = trunc i64 %31 to i8
  %47 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  store i8 %46, i8* %48, align 1
  %49 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %50 = icmp eq i64 %31, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %45, %37
  %52 = phi i8* [ %40, %37 ], [ %49, %45 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* nonnull align 16 %24, i64 %31, i1 false) #13
  br label %53

53:                                               ; preds = %45, %51
  %54 = phi i8* [ %49, %45 ], [ %52, %51 ]
  %55 = getelementptr inbounds i8, i8* %54, i64 %31
  store i8 0, i8* %55, align 1
  br label %58

56:                                               ; preds = %13
  %57 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #13
  br label %58

58:                                               ; preds = %56, %53
  call void @llvm.lifetime.end.p0i8(i64 33, i8* nonnull %24) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #13
  br label %59

59:                                               ; preds = %58, %11
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net8internal18GetNetworkListImplEPNSt3__16vectorINS_16NetworkInterfaceENS1_9allocatorIS3_EEEEiRKNS1_13unordered_setIiNS1_4hashIiEENS1_8equal_toIiEENS4_IiEEEERKNS1_3mapINS_9IPAddressE9ifaddrmsgNS1_4lessISI_EENS4_INS1_4pairIKSI_SJ_EEEEEEPFPciST_E(%"class.std::__1::vector"*, i32, %"class.std::__1::unordered_set"* nocapture readonly dereferenceable(40), %"class.std::__1::map"* dereferenceable(24), i8* (i32, i8*)* nocapture) local_unnamed_addr #0 {
  %6 = alloca %"class.std::__1::map.36", align 8
  %7 = alloca %struct.sockaddr_storage, align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.net::IPEndPoint", align 2
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca [16 x i8], align 16
  %12 = alloca %"struct.net::NetworkInterface", align 8
  %13 = bitcast %"class.std::__1::map.36"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #13
  %14 = getelementptr inbounds %"class.std::__1::map.36", %"class.std::__1::map.36"* %6, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::map.36", %"class.std::__1::map.36"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::map.36", %"class.std::__1::map.36"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::map.36", %"class.std::__1::map.36"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_node_base"** %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %17, %"class.std::__1::__tree_end_node"** %14, align 8
  %19 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 0
  %20 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %20, %21
  br i1 %22, label %45, label %23

23:                                               ; preds = %5
  %24 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = bitcast %struct.sockaddr_storage* %7 to i8*
  %27 = bitcast i32* %8 to i8*
  %28 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %29 = bitcast %struct.sockaddr_storage* %7 to %struct.sockaddr*
  %30 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node"**
  %31 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = getelementptr inbounds [16 x i8], [16 x i8]* %11, i64 0, i64 0
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 0, i32 0
  %38 = bitcast %"class.std::__1::map.36"* %6 to i64*
  %39 = bitcast %"struct.net::NetworkInterface"* %12 to i8*
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast %"struct.net::NetworkInterface"** %40 to i64*
  br label %48

43:                                               ; preds = %339
  %44 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %30, align 8
  br label %45

45:                                               ; preds = %5, %43
  %46 = phi %"class.std::__1::__tree_node"* [ %44, %43 ], [ null, %5 ]
  %47 = getelementptr inbounds %"class.std::__1::map.36", %"class.std::__1::map.36"* %6, i64 0, i32 0
  call void @_ZNSt3__16__treeINS_12__value_typeIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.37"* nonnull %47, %"class.std::__1::__tree_node"* %46) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #13
  ret i1 true

48:                                               ; preds = %23, %339
  %49 = phi %"class.std::__1::__tree_end_node"* [ %20, %23 ], [ %340, %339 ]
  %50 = bitcast %"class.std::__1::__tree_end_node"* %49 to %"class.std::__1::__tree_node.100"*
  %51 = getelementptr inbounds %"class.std::__1::__tree_node.100", %"class.std::__1::__tree_node.100"* %50, i64 0, i32 1, i32 0, i32 1, i32 4
  %52 = load i32, i32* %51, align 4
  %53 = sext i32 %52 to i64
  %54 = load i64, i64* %24, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %311, label %56

56:                                               ; preds = %48
  %57 = call i64 @llvm.ctpop.i64(i64 %54) #13, !range !3
  %58 = icmp ugt i64 %57, 1
  br i1 %58, label %62, label %59

59:                                               ; preds = %56
  %60 = add i64 %54, -1
  %61 = and i64 %60, %53
  br label %66

62:                                               ; preds = %56
  %63 = icmp ugt i64 %54, %53
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  %65 = urem i64 %53, %54
  br label %66

66:                                               ; preds = %64, %62, %59
  %67 = phi i64 [ %61, %59 ], [ %65, %64 ], [ %53, %62 ]
  %68 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %25, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %68, i64 %67
  %70 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %69, align 8
  %71 = icmp eq %"struct.std::__1::__hash_node_base"* %70, null
  br i1 %71, label %311, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %70, i64 0, i32 0
  %74 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %73, align 8
  %75 = icmp eq %"struct.std::__1::__hash_node_base"* %74, null
  br i1 %75, label %311, label %76

76:                                               ; preds = %72
  %77 = add i64 %54, -1
  br label %78

78:                                               ; preds = %99, %76
  %79 = phi %"struct.std::__1::__hash_node_base"* [ %74, %76 ], [ %101, %99 ]
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %79, i64 1
  %81 = bitcast %"struct.std::__1::__hash_node_base"* %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = icmp eq i64 %82, %53
  br i1 %83, label %94, label %84

84:                                               ; preds = %78
  br i1 %58, label %87, label %85

85:                                               ; preds = %84
  %86 = and i64 %82, %77
  br label %91

87:                                               ; preds = %84
  %88 = icmp ult i64 %82, %54
  br i1 %88, label %91, label %89

89:                                               ; preds = %87
  %90 = urem i64 %82, %54
  br label %91

91:                                               ; preds = %89, %87, %85
  %92 = phi i64 [ %86, %85 ], [ %90, %89 ], [ %82, %87 ]
  %93 = icmp eq i64 %92, %67
  br i1 %93, label %99, label %311

94:                                               ; preds = %78
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %79, i64 2
  %96 = bitcast %"struct.std::__1::__hash_node_base"* %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, %52
  br i1 %98, label %103, label %99

99:                                               ; preds = %94, %91
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %79, i64 0, i32 0
  %101 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base"* %101, null
  br i1 %102, label %311, label %78

103:                                              ; preds = %94
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %26) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 128, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #13
  store i32 128, i32* %8, align 4
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %28) #13
  %104 = getelementptr inbounds %"class.std::__1::__tree_node.100", %"class.std::__1::__tree_node.100"* %50, i64 0, i32 1, i32 0, i32 0
  call void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"* nonnull %9, %"class.net::IPAddress"* dereferenceable(17) %104, i16 zeroext 0) #13
  %105 = call zeroext i1 @_ZNK3net10IPEndPoint10ToSockAddrEP8sockaddrPj(%"class.net::IPEndPoint"* nonnull %9, %struct.sockaddr* nonnull %29, i32* nonnull %8) #13
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %28) #13
  br i1 %105, label %106, label %310

106:                                              ; preds = %103
  %107 = call zeroext i1 @_ZN3net8internal30IsLoopbackOrUnspecifiedAddressEPK8sockaddr(%struct.sockaddr* nonnull %29) #13
  br i1 %107, label %310, label %108

108:                                              ; preds = %106
  %109 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %49, i64 6
  %110 = bitcast %"class.std::__1::__tree_end_node"* %109 to i8*
  %111 = load i8, i8* %110, align 4
  %112 = icmp eq i8 %111, 10
  br i1 %112, label %113, label %124

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.std::__1::__tree_node.100", %"class.std::__1::__tree_node.100"* %50, i64 0, i32 1, i32 0, i32 1, i32 2
  %115 = load i8, i8* %114, align 2
  %116 = zext i8 %115 to i32
  %117 = and i32 %116, 76
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %310

119:                                              ; preds = %113
  %120 = and i32 %116, 1
  %121 = lshr i32 %116, 4
  %122 = and i32 %121, 2
  %123 = or i32 %122, %120
  br label %124

124:                                              ; preds = %119, %108
  %125 = phi i32 [ 0, %108 ], [ %123, %119 ]
  %126 = load i32, i32* %51, align 4
  %127 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %30, align 8
  %128 = icmp eq %"class.std::__1::__tree_node"* %127, null
  br i1 %128, label %150, label %129

129:                                              ; preds = %124, %129
  %130 = phi %"class.std::__1::__tree_end_node"* [ %140, %129 ], [ %17, %124 ]
  %131 = phi %"class.std::__1::__tree_node"* [ %141, %129 ], [ %127, %124 ]
  %132 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %131, i64 0, i32 1, i32 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = icmp slt i32 %133, %126
  %135 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %131, i64 0, i32 0, i32 1
  %136 = bitcast %"class.std::__1::__tree_node_base"** %135 to %"class.std::__1::__tree_node"**
  %137 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %131, i64 0, i32 0, i32 0
  %138 = bitcast %"class.std::__1::__tree_node"* %131 to %"class.std::__1::__tree_node"**
  %139 = select i1 %134, %"class.std::__1::__tree_node"** %136, %"class.std::__1::__tree_node"** %138
  %140 = select i1 %134, %"class.std::__1::__tree_end_node"* %130, %"class.std::__1::__tree_end_node"* %137
  %141 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %139, align 8
  %142 = icmp eq %"class.std::__1::__tree_node"* %141, null
  br i1 %142, label %143, label %129

143:                                              ; preds = %129
  %144 = icmp eq %"class.std::__1::__tree_end_node"* %140, %17
  br i1 %144, label %150, label %145

145:                                              ; preds = %143
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %140, i64 4
  %147 = bitcast %"class.std::__1::__tree_end_node"* %146 to i32*
  %148 = load i32, i32* %147, align 4
  %149 = icmp slt i32 %126, %148
  br i1 %149, label %150, label %151

150:                                              ; preds = %145, %143, %124
  br label %151

151:                                              ; preds = %145, %150
  %152 = phi %"class.std::__1::__tree_end_node"* [ %17, %150 ], [ %140, %145 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #13
  %153 = icmp eq %"class.std::__1::__tree_end_node"* %152, %17
  br i1 %153, label %154, label %270

154:                                              ; preds = %151
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 0, i64 16, i1 false)
  %155 = call i8* %4(i32 %126, i8* nonnull %36) #13
  %156 = load i8, i8* %155, align 1
  %157 = call i1 @llvm.is.constant.i8(i8 %156) #13
  br i1 %157, label %158, label %176

158:                                              ; preds = %154
  %159 = call i64 @strlen(i8* %155) #13
  %160 = icmp ult i64 %159, 23
  br i1 %160, label %161, label %174

161:                                              ; preds = %158
  %162 = load i8, i8* %35, align 1
  %163 = icmp slt i8 %162, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %161
  store i64 %159, i64* %33, align 8
  %165 = load i8*, i8** %32, align 8
  br label %168

166:                                              ; preds = %161
  %167 = trunc i64 %159 to i8
  store i8 %167, i8* %35, align 1
  br label %168

168:                                              ; preds = %166, %164
  %169 = phi i8* [ %165, %164 ], [ %31, %166 ]
  %170 = icmp eq i64 %159, 0
  br i1 %170, label %172, label %171

171:                                              ; preds = %168
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %169, i8* align 1 %155, i64 %159, i1 false) #13
  br label %172

172:                                              ; preds = %171, %168
  %173 = getelementptr inbounds i8, i8* %169, i64 %159
  store i8 0, i8* %173, align 1
  br label %178

174:                                              ; preds = %158
  %175 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* nonnull %10, i8* %155, i64 %159) #13
  br label %178

176:                                              ; preds = %154
  %177 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* nonnull %10, i8* %155) #13
  br label %178

178:                                              ; preds = %172, %174, %176
  %179 = load i8, i8* %35, align 1
  %180 = icmp slt i8 %179, 0
  %181 = load i64, i64* %33, align 8
  %182 = zext i8 %179 to i64
  %183 = select i1 %180, i64 %181, i64 %182
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %269, label %185

185:                                              ; preds = %178
  %186 = load i32, i32* %51, align 4
  %187 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %30, align 8
  %188 = icmp eq %"class.std::__1::__tree_node"* %187, null
  br i1 %188, label %215, label %189

189:                                              ; preds = %185, %211
  %190 = phi %"class.std::__1::__tree_node"* [ %214, %211 ], [ %187, %185 ]
  %191 = phi %"class.std::__1::__tree_node_base"** [ %213, %211 ], [ %15, %185 ]
  %192 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %190, i64 0, i32 1, i32 0, i32 0
  %193 = load i32, i32* %192, align 4
  %194 = icmp slt i32 %186, %193
  br i1 %194, label %195, label %201

195:                                              ; preds = %189
  %196 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %190, i64 0, i32 0, i32 0, i32 0
  %197 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %196, align 8
  %198 = icmp eq %"class.std::__1::__tree_node_base"* %197, null
  br i1 %198, label %199, label %211

199:                                              ; preds = %195
  %200 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %190, i64 0, i32 0, i32 0
  br label %215

201:                                              ; preds = %189
  %202 = icmp slt i32 %193, %186
  br i1 %202, label %203, label %209

203:                                              ; preds = %201
  %204 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %190, i64 0, i32 0, i32 1
  %205 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %204, align 8
  %206 = icmp eq %"class.std::__1::__tree_node_base"* %205, null
  br i1 %206, label %207, label %211

207:                                              ; preds = %203
  %208 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %190, i64 0, i32 0, i32 0
  br label %215

209:                                              ; preds = %201
  %210 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %190, i64 0, i32 0, i32 0
  br label %215

211:                                              ; preds = %203, %195
  %212 = phi %"class.std::__1::__tree_node_base"* [ %197, %195 ], [ %205, %203 ]
  %213 = phi %"class.std::__1::__tree_node_base"** [ %196, %195 ], [ %204, %203 ]
  %214 = bitcast %"class.std::__1::__tree_node_base"* %212 to %"class.std::__1::__tree_node"*
  br label %189

215:                                              ; preds = %185, %209, %207, %199
  %216 = phi %"class.std::__1::__tree_end_node"* [ %200, %199 ], [ %208, %207 ], [ %210, %209 ], [ %17, %185 ]
  %217 = phi %"class.std::__1::__tree_node_base"** [ %196, %199 ], [ %204, %207 ], [ %191, %209 ], [ %37, %185 ]
  %218 = bitcast %"class.std::__1::__tree_node_base"** %217 to %"class.std::__1::__tree_node"**
  %219 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %218, align 8
  %220 = icmp eq %"class.std::__1::__tree_node"* %219, null
  br i1 %220, label %221, label %243

221:                                              ; preds = %215
  %222 = call i8* @_Znwm(i64 64) #15, !noalias !4
  %223 = getelementptr inbounds i8, i8* %222, i64 32
  %224 = bitcast i8* %223 to i32*
  store i32 %186, i32* %224, align 8, !noalias !4
  %225 = getelementptr inbounds i8, i8* %222, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %225, i8 0, i64 24, i1 false) #13, !noalias !4
  %226 = bitcast i8* %222 to %"class.std::__1::__tree_node"*
  %227 = bitcast i8* %222 to %"class.std::__1::__tree_node_base"*
  %228 = getelementptr inbounds i8, i8* %222, i64 16
  %229 = bitcast i8* %228 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %222, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %216, %"class.std::__1::__tree_end_node"** %229, align 8
  %230 = bitcast %"class.std::__1::__tree_node_base"** %217 to i8**
  store i8* %222, i8** %230, align 8
  %231 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %14, align 8
  %232 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %231, i64 0, i32 0
  %233 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %232, align 8
  %234 = icmp eq %"class.std::__1::__tree_node_base"* %233, null
  br i1 %234, label %238, label %235

235:                                              ; preds = %221
  %236 = ptrtoint %"class.std::__1::__tree_node_base"* %233 to i64
  store i64 %236, i64* %38, align 8
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  br label %238

238:                                              ; preds = %235, %221
  %239 = phi %"class.std::__1::__tree_node_base"* [ %227, %221 ], [ %237, %235 ]
  %240 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %240, %"class.std::__1::__tree_node_base"* %239) #13
  %241 = load i64, i64* %16, align 8
  %242 = add i64 %241, 1
  store i64 %242, i64* %16, align 8
  br label %243

243:                                              ; preds = %215, %238
  %244 = phi %"class.std::__1::__tree_node"* [ %226, %238 ], [ %219, %215 ]
  %245 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %244, i64 0, i32 1, i32 0, i32 1
  %246 = icmp eq %"class.std::__1::basic_string"* %245, %10
  br i1 %246, label %268, label %247

247:                                              ; preds = %243
  %248 = bitcast %"class.std::__1::basic_string"* %245 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %249 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %248, i64 0, i32 1, i32 0
  %250 = load i8, i8* %249, align 1
  %251 = icmp slt i8 %250, 0
  %252 = load i8, i8* %35, align 1
  %253 = icmp slt i8 %252, 0
  br i1 %251, label %261, label %254

254:                                              ; preds = %247
  br i1 %253, label %257, label %255

255:                                              ; preds = %254
  %256 = bitcast %"class.std::__1::basic_string"* %245 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %256, i8* nonnull align 8 %31, i64 24, i1 false) #13
  br label %268

257:                                              ; preds = %254
  %258 = load i8*, i8** %32, align 8
  %259 = load i64, i64* %33, align 8
  %260 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %245, i8* %258, i64 %259) #13
  br label %268

261:                                              ; preds = %247
  %262 = load i8*, i8** %32, align 8
  %263 = load i64, i64* %33, align 8
  %264 = zext i8 %252 to i64
  %265 = select i1 %253, i8* %262, i8* %31
  %266 = select i1 %253, i64 %263, i64 %264
  %267 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %245, i8* %265, i64 %266) #13
  br label %268

268:                                              ; preds = %243, %255, %257, %261
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #13
  br label %288

269:                                              ; preds = %178
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #13
  br label %304

270:                                              ; preds = %151
  %271 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %152, i64 5
  %272 = bitcast %"class.std::__1::__tree_end_node"* %271 to %"class.std::__1::basic_string"*
  %273 = icmp eq %"class.std::__1::basic_string"* %10, %272
  br i1 %273, label %288, label %274

274:                                              ; preds = %270
  %275 = bitcast %"class.std::__1::__tree_end_node"* %271 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %276 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %275, i64 0, i32 1, i32 0
  %277 = load i8, i8* %276, align 1
  %278 = icmp slt i8 %277, 0
  br i1 %278, label %281, label %279

279:                                              ; preds = %274
  %280 = bitcast %"class.std::__1::__tree_end_node"* %271 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* align 8 %280, i64 24, i1 false) #13
  br label %288

281:                                              ; preds = %274
  %282 = bitcast %"class.std::__1::__tree_end_node"* %271 to i8**
  %283 = load i8*, i8** %282, align 8
  %284 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %152, i64 6
  %285 = bitcast %"class.std::__1::__tree_end_node"* %284 to i64*
  %286 = load i64, i64* %285, align 8
  %287 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %10, i8* %283, i64 %286) #13
  br label %288

288:                                              ; preds = %281, %279, %270, %268
  %289 = call zeroext i1 @_ZN3net8internal21ShouldIgnoreInterfaceERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, i32 %1) #13
  br i1 %289, label %304, label %290

290:                                              ; preds = %288
  %291 = call i32 @_ZN3net8internal26GetInterfaceConnectionTypeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %10)
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %39) #13
  %292 = load i32, i32* %51, align 4
  %293 = getelementptr inbounds %"class.std::__1::__tree_node.100", %"class.std::__1::__tree_node.100"* %50, i64 0, i32 1, i32 0, i32 1, i32 1
  %294 = load i8, i8* %293, align 1
  %295 = zext i8 %294 to i32
  call void @_ZN3net16NetworkInterfaceC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_jNS_21NetworkChangeNotifier14ConnectionTypeERKNS_9IPAddressEji(%"struct.net::NetworkInterface"* nonnull %12, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, i32 %292, i32 %291, %"class.net::IPAddress"* dereferenceable(17) %104, i32 %295, i32 %125) #13
  %296 = load %"struct.net::NetworkInterface"*, %"struct.net::NetworkInterface"** %40, align 8
  %297 = load %"struct.net::NetworkInterface"*, %"struct.net::NetworkInterface"** %41, align 8
  %298 = icmp ult %"struct.net::NetworkInterface"* %296, %297
  br i1 %298, label %299, label %302

299:                                              ; preds = %290
  call void @_ZN3net16NetworkInterfaceC1ERKS0_(%"struct.net::NetworkInterface"* %296, %"struct.net::NetworkInterface"* nonnull dereferenceable(88) %12) #13
  %300 = getelementptr inbounds %"struct.net::NetworkInterface", %"struct.net::NetworkInterface"* %296, i64 1
  %301 = ptrtoint %"struct.net::NetworkInterface"* %300 to i64
  store i64 %301, i64* %42, align 8
  br label %303

302:                                              ; preds = %290
  call void @_ZNSt3__16vectorIN3net16NetworkInterfaceENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %0, %"struct.net::NetworkInterface"* nonnull dereferenceable(88) %12) #13
  br label %303

303:                                              ; preds = %299, %302
  call void @_ZN3net16NetworkInterfaceD1Ev(%"struct.net::NetworkInterface"* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %39) #13
  br label %304

304:                                              ; preds = %288, %269, %303
  %305 = load i8, i8* %35, align 1
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %307, label %309

307:                                              ; preds = %304
  %308 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %308) #15
  br label %309

309:                                              ; preds = %304, %307
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br label %310

310:                                              ; preds = %309, %113, %106, %103
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #13
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %26) #13
  br label %311

311:                                              ; preds = %99, %91, %72, %48, %66, %310
  %312 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %49, i64 1, i32 0
  %313 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %312, align 8
  %314 = icmp eq %"class.std::__1::__tree_node_base"* %313, null
  br i1 %314, label %315, label %323

315:                                              ; preds = %311
  %316 = bitcast %"class.std::__1::__tree_end_node"* %49 to %"class.std::__1::__tree_node_base"*
  %317 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %49, i64 2
  %318 = bitcast %"class.std::__1::__tree_end_node"* %317 to %"class.std::__1::__tree_end_node"**
  %319 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %318, align 8
  %320 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %319, i64 0, i32 0
  %321 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %320, align 8
  %322 = icmp eq %"class.std::__1::__tree_node_base"* %321, %316
  br i1 %322, label %339, label %330

323:                                              ; preds = %311, %323
  %324 = phi %"class.std::__1::__tree_node_base"* [ %326, %323 ], [ %313, %311 ]
  %325 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %324, i64 0, i32 0, i32 0
  %326 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %325, align 8
  %327 = icmp eq %"class.std::__1::__tree_node_base"* %326, null
  br i1 %327, label %328, label %323

328:                                              ; preds = %323
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %324, i64 0, i32 0
  br label %339

330:                                              ; preds = %315, %330
  %331 = phi %"class.std::__1::__tree_end_node"** [ %334, %330 ], [ %318, %315 ]
  %332 = bitcast %"class.std::__1::__tree_end_node"** %331 to %"class.std::__1::__tree_node_base"**
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %333, i64 0, i32 2
  %335 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %334, align 8
  %336 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %335, i64 0, i32 0
  %337 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %336, align 8
  %338 = icmp eq %"class.std::__1::__tree_node_base"* %337, %333
  br i1 %338, label %339, label %330

339:                                              ; preds = %330, %315, %328
  %340 = phi %"class.std::__1::__tree_end_node"* [ %329, %328 ], [ %319, %315 ], [ %335, %330 ]
  %341 = icmp eq %"class.std::__1::__tree_end_node"* %340, %21
  br i1 %341, label %43, label %48
}

declare void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"*, %"class.net::IPAddress"* dereferenceable(17), i16 zeroext) unnamed_addr #4

declare zeroext i1 @_ZNK3net10IPEndPoint10ToSockAddrEP8sockaddrPj(%"class.net::IPEndPoint"*, %struct.sockaddr*, i32*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"*) unnamed_addr #3

declare zeroext i1 @_ZN3net8internal30IsLoopbackOrUnspecifiedAddressEPK8sockaddr(%struct.sockaddr*) local_unnamed_addr #4

declare zeroext i1 @_ZN3net8internal21ShouldIgnoreInterfaceERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #4

declare void @_ZN3net16NetworkInterfaceC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_jNS_21NetworkChangeNotifier14ConnectionTypeERKNS_9IPAddressEji(%"struct.net::NetworkInterface"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i32, i32, %"class.net::IPAddress"* dereferenceable(17), i32, i32) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3net16NetworkInterfaceD1Ev(%"struct.net::NetworkInterface"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net8internal36GetWifiSSIDFromInterfaceListInternalERKNSt3__16vectorINS_16NetworkInterfaceENS1_9allocatorIS3_EEEEPFNS1_12basic_stringIcNS1_11char_traitsIcEENS4_IcEEEERKSD_E(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), void (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* nocapture) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #13
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %10 = bitcast %"struct.net::NetworkInterface"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %11, %13
  br i1 %14, label %15, label %18

15:                                               ; preds = %3
  %16 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %114

18:                                               ; preds = %3
  %19 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %27 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  br label %35

28:                                               ; preds = %52, %111
  %29 = phi i64 [ 1, %52 ], [ %113, %111 ]
  %30 = load i64, i64* %10, align 8
  %31 = load i64, i64* %12, align 8
  %32 = sub i64 %30, %31
  %33 = sdiv exact i64 %32, 88
  %34 = icmp ult i64 %29, %33
  br i1 %34, label %35, label %114

35:                                               ; preds = %18, %28
  %36 = phi i64 [ %13, %18 ], [ %31, %28 ]
  %37 = phi i64 [ 0, %18 ], [ %29, %28 ]
  %38 = inttoptr i64 %36 to %"struct.net::NetworkInterface"*
  %39 = getelementptr inbounds %"struct.net::NetworkInterface", %"struct.net::NetworkInterface"* %38, i64 %37, i32 3
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 2
  br i1 %41, label %43, label %42

42:                                               ; preds = %35
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #13
  br label %117

43:                                               ; preds = %35
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #13
  %44 = getelementptr inbounds %"struct.net::NetworkInterface", %"struct.net::NetworkInterface"* %38, i64 %37, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false)
  call void %2(%"class.std::__1::basic_string"* nonnull sret %5, %"class.std::__1::basic_string"* dereferenceable(24) %44) #13
  %45 = icmp eq i64 %37, 0
  br i1 %45, label %46, label %64

46:                                               ; preds = %43
  %47 = load i8, i8* %25, align 1
  %48 = icmp slt i8 %47, 0
  %49 = load i8, i8* %23, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %48, label %57, label %51

51:                                               ; preds = %46
  br i1 %50, label %53, label %52

52:                                               ; preds = %51
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* nonnull align 8 %19, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #13
  br label %28

53:                                               ; preds = %51
  %54 = load i8*, i8** %20, align 8
  %55 = load i64, i64* %21, align 8
  %56 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %54, i64 %55) #13
  br label %105

57:                                               ; preds = %46
  %58 = load i8*, i8** %20, align 8
  %59 = load i64, i64* %21, align 8
  %60 = zext i8 %49 to i64
  %61 = select i1 %50, i8* %58, i8* %19
  %62 = select i1 %50, i64 %59, i64 %60
  %63 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %61, i64 %62) #13
  br label %105

64:                                               ; preds = %43
  %65 = load i8, i8* %23, align 1
  %66 = icmp slt i8 %65, 0
  %67 = load i64, i64* %21, align 8
  %68 = zext i8 %65 to i64
  %69 = select i1 %66, i64 %67, i64 %68
  %70 = load i8, i8* %25, align 1
  %71 = icmp slt i8 %70, 0
  %72 = load i64, i64* %8, align 8
  %73 = zext i8 %70 to i64
  %74 = select i1 %71, i64 %72, i64 %73
  %75 = icmp eq i64 %69, %74
  br i1 %75, label %76, label %104

76:                                               ; preds = %64
  %77 = load i8*, i8** %20, align 8
  %78 = select i1 %66, i8* %77, i8* %19
  %79 = load i8*, i8** %7, align 8
  %80 = select i1 %71, i8* %79, i8* %6
  %81 = icmp eq i64 %69, 0
  br i1 %66, label %88, label %82

82:                                               ; preds = %76
  br i1 %81, label %105, label %83

83:                                               ; preds = %82
  %84 = ptrtoint i8* %77 to i64
  %85 = trunc i64 %84 to i8
  %86 = load i8, i8* %80, align 1
  %87 = icmp eq i8 %86, %85
  br i1 %87, label %89, label %104

88:                                               ; preds = %76
  br i1 %81, label %105, label %101

89:                                               ; preds = %83, %96
  %90 = phi i64 [ %93, %96 ], [ %68, %83 ]
  %91 = phi i8* [ %94, %96 ], [ %19, %83 ]
  %92 = phi i8* [ %97, %96 ], [ %80, %83 ]
  %93 = add i64 %90, -1
  %94 = getelementptr inbounds i8, i8* %91, i64 1
  %95 = icmp eq i64 %93, 0
  br i1 %95, label %105, label %96

96:                                               ; preds = %89
  %97 = getelementptr inbounds i8, i8* %92, i64 1
  %98 = load i8, i8* %94, align 1
  %99 = load i8, i8* %97, align 1
  %100 = icmp eq i8 %98, %99
  br i1 %100, label %89, label %104

101:                                              ; preds = %88
  %102 = call i32 @bcmp(i8* %78, i8* %80, i64 %69) #13
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %105, label %104

104:                                              ; preds = %96, %83, %101, %64
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #13
  br label %105

105:                                              ; preds = %89, %101, %82, %88, %57, %53, %104
  %106 = phi i32 [ 0, %82 ], [ 0, %88 ], [ 0, %57 ], [ 0, %53 ], [ 0, %101 ], [ 1, %104 ], [ 0, %89 ]
  %107 = load i8, i8* %23, align 1
  %108 = icmp slt i8 %107, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %105
  %110 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %110) #15
  br label %111

111:                                              ; preds = %105, %109
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #13
  %112 = icmp eq i32 %106, 0
  %113 = add nuw i64 %37, 1
  br i1 %112, label %28, label %117

114:                                              ; preds = %28, %15
  %115 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %17, %15 ], [ %24, %28 ]
  %116 = phi i8* [ %16, %15 ], [ %26, %28 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* nonnull align 8 %6, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #13
  br label %117

117:                                              ; preds = %111, %42, %114
  %118 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %24, %42 ], [ %115, %114 ], [ %24, %111 ]
  %119 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %118, i64 0, i32 1, i32 0
  %120 = load i8, i8* %119, align 1
  %121 = icmp slt i8 %120, 0
  br i1 %121, label %122, label %124

122:                                              ; preds = %117
  %123 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %123) #15
  br label %124

124:                                              ; preds = %117, %122
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret void
}

; Function Attrs: nounwind
declare i32 @socket(i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net14GetNetworkListEPNSt3__16vectorINS_16NetworkInterfaceENS0_9allocatorIS2_EEEEi(%"class.std::__1::vector"*, i32) local_unnamed_addr #0 {
  %3 = alloca %"class.net::internal::AddressTrackerLinux", align 8
  %4 = alloca %"class.std::__1::unordered_set", align 8
  %5 = alloca %"class.std::__1::map", align 8
  %6 = icmp eq %"class.std::__1::vector"* %0, null
  br i1 %6, label %32, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.net::internal::AddressTrackerLinux"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 376, i8* nonnull %8) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast (%"class.net::internal::AddressTrackerLinux"* @__const._ZN3net14GetNetworkListEPNSt3__16vectorINS_16NetworkInterfaceENS0_9allocatorIS2_EEEEi.tracker to i8*), i64 376, i1 false)
  call void @_ZN3net8internal19AddressTrackerLinuxC1Ev(%"class.net::internal::AddressTrackerLinux"* nonnull %3) #13
  call void @_ZN3net8internal19AddressTrackerLinux4InitEv(%"class.net::internal::AddressTrackerLinux"* nonnull %3) #13
  %9 = bitcast %"class.std::__1::unordered_set"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #13
  call void @_ZNK3net8internal19AddressTrackerLinux14GetOnlineLinksEv(%"class.std::__1::unordered_set"* nonnull sret %4, %"class.net::internal::AddressTrackerLinux"* nonnull %3) #13
  %10 = bitcast %"class.std::__1::map"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #13
  call void @_ZNK3net8internal19AddressTrackerLinux13GetAddressMapEv(%"class.std::__1::map"* nonnull sret %5, %"class.net::internal::AddressTrackerLinux"* nonnull %3) #13
  %11 = call zeroext i1 @_ZN3net8internal18GetNetworkListImplEPNSt3__16vectorINS_16NetworkInterfaceENS1_9allocatorIS3_EEEEiRKNS1_13unordered_setIiNS1_4hashIiEENS1_8equal_toIiEENS4_IiEEEERKNS1_3mapINS_9IPAddressE9ifaddrmsgNS1_4lessISI_EENS4_INS1_4pairIKSI_SJ_EEEEEEPFPciST_E(%"class.std::__1::vector"* nonnull %0, i32 %1, %"class.std::__1::unordered_set"* nonnull dereferenceable(40) %4, %"class.std::__1::map"* nonnull dereferenceable(24) %5, i8* (i32, i8*)* nonnull @_ZN3net8internal19AddressTrackerLinux16GetInterfaceNameEiPc)
  %12 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %5, i64 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %14 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node.100"**
  %15 = load %"class.std::__1::__tree_node.100"*, %"class.std::__1::__tree_node.100"** %14, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIN3net9IPAddressE9ifaddrmsgEENS_19__map_value_compareIS3_S5_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* nonnull %12, %"class.std::__1::__tree_node.100"* %15) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #13
  %16 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %16, align 8
  %18 = icmp eq %"struct.std::__1::__hash_node_base"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %7, %19
  %20 = phi %"struct.std::__1::__hash_node_base"* [ %22, %19 ], [ %17, %7 ]
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, align 8
  %23 = bitcast %"struct.std::__1::__hash_node_base"* %20 to i8*
  call void @_ZdlPv(i8* %23) #15
  %24 = icmp eq %"struct.std::__1::__hash_node_base"* %22, null
  br i1 %24, label %25, label %19

25:                                               ; preds = %19, %7
  %26 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %26, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"** %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = bitcast %"struct.std::__1::__hash_node_base"** %27 to i8*
  call void @_ZdlPv(i8* %30) #15
  br label %31

31:                                               ; preds = %25, %29
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #13
  call void @_ZN3net8internal19AddressTrackerLinuxD1Ev(%"class.net::internal::AddressTrackerLinux"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 376, i8* nonnull %8) #13
  br label %32

32:                                               ; preds = %2, %31
  %33 = phi i1 [ true, %31 ], [ false, %2 ]
  ret i1 %33
}

declare void @_ZN3net8internal19AddressTrackerLinuxC1Ev(%"class.net::internal::AddressTrackerLinux"*) unnamed_addr #4

declare void @_ZN3net8internal19AddressTrackerLinux4InitEv(%"class.net::internal::AddressTrackerLinux"*) local_unnamed_addr #4

declare void @_ZNK3net8internal19AddressTrackerLinux14GetOnlineLinksEv(%"class.std::__1::unordered_set"* sret, %"class.net::internal::AddressTrackerLinux"*) local_unnamed_addr #4

declare void @_ZNK3net8internal19AddressTrackerLinux13GetAddressMapEv(%"class.std::__1::map"* sret, %"class.net::internal::AddressTrackerLinux"*) local_unnamed_addr #4

declare i8* @_ZN3net8internal19AddressTrackerLinux16GetInterfaceNameEiPc(i32, i8*) #4

; Function Attrs: nounwind
declare void @_ZN3net8internal19AddressTrackerLinuxD1Ev(%"class.net::internal::AddressTrackerLinux"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11GetWifiSSIDEv(%"class.std::__1::basic_string"* noalias nocapture sret) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::vector", align 8
  %3 = bitcast %"class.std::__1::vector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #13
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 24, i1 false) #13
  %6 = call zeroext i1 @_ZN3net14GetNetworkListEPNSt3__16vectorINS_16NetworkInterfaceENS0_9allocatorIS2_EEEEi(%"class.std::__1::vector"* nonnull %2, i32 0)
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  call void @_ZN3net8internal36GetWifiSSIDFromInterfaceListInternalERKNSt3__16vectorINS_16NetworkInterfaceENS1_9allocatorIS3_EEEEPFNS1_12basic_stringIcNS1_11char_traitsIcEENS4_IcEEEERKSD_E(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::vector"* nonnull dereferenceable(24) %2, void (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* nonnull @_ZN3net8internal16GetInterfaceSSIDERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE)
  br label %10

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #13
  br label %10

10:                                               ; preds = %8, %7
  %11 = load %"struct.net::NetworkInterface"*, %"struct.net::NetworkInterface"** %4, align 8
  %12 = icmp eq %"struct.net::NetworkInterface"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %10
  %14 = bitcast %"struct.net::NetworkInterface"* %11 to i8*
  %15 = load %"struct.net::NetworkInterface"*, %"struct.net::NetworkInterface"** %5, align 8
  %16 = icmp eq %"struct.net::NetworkInterface"* %15, %11
  br i1 %16, label %24, label %17

17:                                               ; preds = %13, %17
  %18 = phi %"struct.net::NetworkInterface"* [ %19, %17 ], [ %15, %13 ]
  %19 = getelementptr inbounds %"struct.net::NetworkInterface", %"struct.net::NetworkInterface"* %18, i64 -1
  call void @_ZN3net16NetworkInterfaceD1Ev(%"struct.net::NetworkInterface"* %19) #13
  %20 = icmp eq %"struct.net::NetworkInterface"* %19, %11
  br i1 %20, label %21, label %17

21:                                               ; preds = %17
  %22 = bitcast %"class.std::__1::vector"* %2 to i8**
  %23 = load i8*, i8** %22, align 8
  br label %24

24:                                               ; preds = %21, %13
  %25 = phi i8* [ %23, %21 ], [ %14, %13 ]
  store %"struct.net::NetworkInterface"* %11, %"struct.net::NetworkInterface"** %5, align 8
  call void @_ZdlPv(i8* %25) #15
  br label %26

26:                                               ; preds = %10, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev(%"class.base::ScopedGeneric"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* %0) #13
  %2 = bitcast %"class.base::ScopedGeneric"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #15
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

declare void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32) local_unnamed_addr #4

declare void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16), i32) local_unnamed_addr #4

declare void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16), i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.37"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.37"* %0, %"class.std::__1::__tree_node"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.37"* %0, %"class.std::__1::__tree_node"* %9) #13
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #15
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #9

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net16NetworkInterfaceENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"*, %"struct.net::NetworkInterface"* dereferenceable(88)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.net::NetworkInterface"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 88
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 209622091746699450
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.net::NetworkInterface"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 88
  %20 = icmp ult i64 %19, 104811045873349725
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 209622091746699450, %14 ]
  %28 = mul i64 %27, 88
  %29 = tail call i8* @_Znwm(i64 %28) #15
  %30 = bitcast i8* %29 to %"struct.net::NetworkInterface"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.net::NetworkInterface"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.net::NetworkInterface", %"struct.net::NetworkInterface"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.net::NetworkInterface", %"struct.net::NetworkInterface"* %33, i64 %32
  %36 = ptrtoint %"struct.net::NetworkInterface"* %35 to i64
  tail call void @_ZN3net16NetworkInterfaceC1ERKS0_(%"struct.net::NetworkInterface"* %34, %"struct.net::NetworkInterface"* dereferenceable(88) %1) #13
  %37 = getelementptr inbounds %"struct.net::NetworkInterface", %"struct.net::NetworkInterface"* %34, i64 1
  %38 = ptrtoint %"struct.net::NetworkInterface"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.net::NetworkInterface"*, %"struct.net::NetworkInterface"** %39, align 8
  %41 = load %"struct.net::NetworkInterface"*, %"struct.net::NetworkInterface"** %3, align 8
  %42 = icmp eq %"struct.net::NetworkInterface"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.net::NetworkInterface"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.net::NetworkInterface"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.net::NetworkInterface"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.net::NetworkInterface", %"struct.net::NetworkInterface"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.net::NetworkInterface", %"struct.net::NetworkInterface"* %47, i64 -1
  tail call void @_ZN3net16NetworkInterfaceC1ERKS0_(%"struct.net::NetworkInterface"* %48, %"struct.net::NetworkInterface"* dereferenceable(88) %49) #13
  %50 = icmp eq %"struct.net::NetworkInterface"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.net::NetworkInterface"*, %"struct.net::NetworkInterface"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.net::NetworkInterface"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.net::NetworkInterface"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.net::NetworkInterface"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.net::NetworkInterface"*
  %60 = icmp eq %"struct.net::NetworkInterface"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.net::NetworkInterface"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.net::NetworkInterface", %"struct.net::NetworkInterface"* %62, i64 -1
  tail call void @_ZN3net16NetworkInterfaceD1Ev(%"struct.net::NetworkInterface"* %63) #13
  %64 = icmp eq %"struct.net::NetworkInterface"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #15
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN3net16NetworkInterfaceC1ERKS0_(%"struct.net::NetworkInterface"*, %"struct.net::NetworkInterface"* dereferenceable(88)) unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN3net9IPAddressE9ifaddrmsgEENS_19__map_value_compareIS3_S5_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node.100"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.100"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.100"* %1 to %"class.std::__1::__tree_node.100"**
  %6 = load %"class.std::__1::__tree_node.100"*, %"class.std::__1::__tree_node.100"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net9IPAddressE9ifaddrmsgEENS_19__map_value_compareIS3_S5_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.100"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.100", %"class.std::__1::__tree_node.100"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.100"**
  %9 = load %"class.std::__1::__tree_node.100"*, %"class.std::__1::__tree_node.100"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net9IPAddressE9ifaddrmsgEENS_19__map_value_compareIS3_S5_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.100"* %9) #13
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.100", %"class.std::__1::__tree_node.100"* %1, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %10) #13
  %11 = bitcast %"class.std::__1::__tree_node.100"* %1 to i8*
  tail call void @_ZdlPv(i8* %11) #15
  ret void

12:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #11

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { alwaysinline nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__16__treeINS_12__value_typeIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS5_IS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISQ_EEEEEEDpOT_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__16__treeINS_12__value_typeIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS5_IS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISQ_EEEEEEDpOT_"}
