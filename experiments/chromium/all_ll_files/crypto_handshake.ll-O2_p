; ModuleID = '../../net/third_party/quiche/src/quic/core/crypto/crypto_handshake.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/crypto/crypto_handshake.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.quic::QuicCryptoNegotiatedParameters" = type { %"class.quic::QuicReferenceCounted.base", i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"struct.quic::CrypterPair", %"struct.quic::CrypterPair", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::unique_ptr.16", %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i16, i16, i16 }
%"class.quic::QuicReferenceCounted.base" = type { %"class.quic::QuicReferenceCountedImpl.base" }
%"class.quic::QuicReferenceCountedImpl.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.quic::CrypterPair" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.5" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.quic::QuicEncrypter"* }
%"class.quic::QuicEncrypter" = type { %"class.quic::QuicCrypter" }
%"class.quic::QuicCrypter" = type { i32 (...)** }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.quic::QuicDecrypter"* }
%"class.quic::QuicDecrypter" = type { %"class.quic::QuicCrypter" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.quic::SynchronousKeyExchange"* }
%"class.quic::SynchronousKeyExchange" = type { %"class.quic::AsynchronousKeyExchange" }
%"class.quic::AsynchronousKeyExchange" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.quic::QuicCryptoConfig" = type { %"class.std::__1::vector.22", %"class.std::__1::vector.22", %"class.quic::CommonCertSets"* }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { i32*, i32*, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i32* }
%"class.quic::CommonCertSets" = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZTVN4quic30QuicCryptoNegotiatedParametersE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.quic::QuicCryptoNegotiatedParameters"*)* @_ZN4quic30QuicCryptoNegotiatedParametersD2Ev to i8*), i8* bitcast (void (%"struct.quic::QuicCryptoNegotiatedParameters"*)* @_ZN4quic30QuicCryptoNegotiatedParametersD0Ev to i8*)] }, align 8
@_ZN4quic16QuicCryptoConfig13kInitialLabelE = hidden local_unnamed_addr constant [19 x i8] c"QUIC key expansion\00", align 16
@_ZN4quic16QuicCryptoConfig10kCETVLabelE = hidden local_unnamed_addr constant [16 x i8] c"QUIC CETV block\00", align 16
@_ZN4quic16QuicCryptoConfig19kForwardSecureLabelE = hidden local_unnamed_addr constant [34 x i8] c"QUIC forward secure key expansion\00", align 16

@_ZN4quic30QuicCryptoNegotiatedParametersC1Ev = hidden unnamed_addr alias void (%"struct.quic::QuicCryptoNegotiatedParameters"*), void (%"struct.quic::QuicCryptoNegotiatedParameters"*)* @_ZN4quic30QuicCryptoNegotiatedParametersC2Ev
@_ZN4quic30QuicCryptoNegotiatedParametersD1Ev = hidden unnamed_addr alias void (%"struct.quic::QuicCryptoNegotiatedParameters"*), void (%"struct.quic::QuicCryptoNegotiatedParameters"*)* @_ZN4quic30QuicCryptoNegotiatedParametersD2Ev
@_ZN4quic11CrypterPairC1Ev = hidden unnamed_addr alias void (%"struct.quic::CrypterPair"*), void (%"struct.quic::CrypterPair"*)* @_ZN4quic11CrypterPairC2Ev
@_ZN4quic11CrypterPairD1Ev = hidden unnamed_addr alias void (%"struct.quic::CrypterPair"*), void (%"struct.quic::CrypterPair"*)* @_ZN4quic11CrypterPairD2Ev
@_ZN4quic16QuicCryptoConfigC1Ev = hidden unnamed_addr alias void (%"class.quic::QuicCryptoConfig"*), void (%"class.quic::QuicCryptoConfig"*)* @_ZN4quic16QuicCryptoConfigC2Ev
@_ZN4quic16QuicCryptoConfigD1Ev = hidden unnamed_addr alias void (%"class.quic::QuicCryptoConfig"*), void (%"class.quic::QuicCryptoConfig"*)* @_ZN4quic16QuicCryptoConfigD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic30QuicCryptoNegotiatedParametersC2Ev(%"struct.quic::QuicCryptoNegotiatedParameters"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.quic::QuicCryptoNegotiatedParameters", %"struct.quic::QuicCryptoNegotiatedParameters"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"struct.quic::QuicCryptoNegotiatedParameters", %"struct.quic::QuicCryptoNegotiatedParameters"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4quic30QuicCryptoNegotiatedParametersE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"struct.quic::QuicCryptoNegotiatedParameters", %"struct.quic::QuicCryptoNegotiatedParameters"* %0, i64 0, i32 1
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"struct.quic::QuicCryptoNegotiatedParameters", %"struct.quic::QuicCryptoNegotiatedParameters"* %0, i64 0, i32 2
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.quic::QuicCryptoNegotiatedParameters", %"struct.quic::QuicCryptoNegotiatedParameters"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"struct.quic::QuicCryptoNegotiatedParameters", %"struct.quic::QuicCryptoNegotiatedParameters"* %0, i64 0, i32 17
  %8 = getelementptr inbounds %"struct.quic::QuicCryptoNegotiatedParameters", %"struct.quic::QuicCryptoNegotiatedParameters"* %0, i64 0, i32 20
  store i16 0, i16* %8, align 2
  %9 = getelementptr inbounds %"struct.quic::QuicCryptoNegotiatedParameters", %"struct.quic::QuicCryptoNegotiatedParameters"* %0, i64 0, i32 21
  store i16 0, i16* %9, align 4
  %10 = getelementptr inbounds %"struct.quic::QuicCryptoNegotiatedParameters", %"struct.quic::QuicCryptoNegotiatedParameters"* %0, i64 0, i32 22
  store i16 0, i16* %10, align 2
  %11 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 284, i1 false)
  %12 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 49, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic30QuicCryptoNegotiatedParametersD2Ev(%"struct.quic::QuicCryptoNegotiatedParameters"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.quic::QuicCryptoNegotiatedParameters", %"struct.quic::QuicCryptoNegotiatedParameters"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4quic30QuicCryptoNegotiatedParametersE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.quic::QuicCryptoNegotiatedParameters", %"struct.quic::QuicCryptoNegotiatedParameters"* %0, i64 0, i32 18
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #5
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"struct.quic::QuicCryptoNegotiatedParameters", %"struct.quic::QuicCryptoNegotiatedParameters"* %0, i64 0, i32 17
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #5
  br label %20

20:                                               ; preds = %11, %17
  %21 = getelementptr inbounds %"struct.quic::QuicCryptoNegotiatedParameters", %"struct.quic::QuicCryptoNegotiatedParameters"* %0, i64 0, i32 15
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #5
  br label %29

29:                                               ; preds = %20, %26
  %30 = getelementptr inbounds %"struct.quic::QuicCryptoNegotiatedParameters", %"struct.quic::QuicCryptoNegotiatedParameters"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %31 = load %"class.quic::SynchronousKeyExchange"*, %"class.quic::SynchronousKeyExchange"** %30, align 8
  store %"class.quic::SynchronousKeyExchange"* null, %"class.quic::SynchronousKeyExchange"** %30, align 8
  %32 = icmp eq %"class.quic::SynchronousKeyExchange"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = bitcast %"class.quic::SynchronousKeyExchange"* %31 to void (%"class.quic::SynchronousKeyExchange"*)***
  %35 = load void (%"class.quic::SynchronousKeyExchange"*)**, void (%"class.quic::SynchronousKeyExchange"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.quic::SynchronousKeyExchange"*)*, void (%"class.quic::SynchronousKeyExchange"*)** %35, i64 1
  %37 = load void (%"class.quic::SynchronousKeyExchange"*)*, void (%"class.quic::SynchronousKeyExchange"*)** %36, align 8
  tail call void %37(%"class.quic::SynchronousKeyExchange"* nonnull %31) #6
  br label %38

38:                                               ; preds = %29, %33
  %39 = getelementptr inbounds %"struct.quic::QuicCryptoNegotiatedParameters", %"struct.quic::QuicCryptoNegotiatedParameters"* %0, i64 0, i32 13
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %40, align 8
  %42 = icmp eq %"class.std::__1::basic_string"* %41, null
  br i1 %42, label %65, label %43

43:                                               ; preds = %38
  %44 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  %45 = getelementptr inbounds %"struct.quic::QuicCryptoNegotiatedParameters", %"struct.quic::QuicCryptoNegotiatedParameters"* %0, i64 0, i32 13, i32 0, i32 1
  %46 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %45, align 8
  %47 = icmp eq %"class.std::__1::basic_string"* %46, %41
  br i1 %47, label %63, label %48

48:                                               ; preds = %43, %58
  %49 = phi %"class.std::__1::basic_string"* [ %50, %58 ], [ %46, %43 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %51 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  tail call void @_ZdlPv(i8* %57) #5
  br label %58

58:                                               ; preds = %55, %48
  %59 = icmp eq %"class.std::__1::basic_string"* %50, %41
  br i1 %59, label %60, label %48

60:                                               ; preds = %58
  %61 = bitcast %"class.std::__1::vector"* %39 to i8**
  %62 = load i8*, i8** %61, align 8
  br label %63

63:                                               ; preds = %60, %43
  %64 = phi i8* [ %62, %60 ], [ %44, %43 ]
  store %"class.std::__1::basic_string"* %41, %"class.std::__1::basic_string"** %45, align 8
  tail call void @_ZdlPv(i8* %64) #5
  br label %65

65:                                               ; preds = %38, %63
  %66 = getelementptr inbounds %"struct.quic::QuicCryptoNegotiatedParameters", %"struct.quic::QuicCryptoNegotiatedParameters"* %0, i64 0, i32 12
  %67 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  tail call void @_ZdlPv(i8* %73) #5
  br label %74

74:                                               ; preds = %65, %71
  %75 = getelementptr inbounds %"struct.quic::QuicCryptoNegotiatedParameters", %"struct.quic::QuicCryptoNegotiatedParameters"* %0, i64 0, i32 11
  %76 = bitcast %"class.std::__1::basic_string"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  tail call void @_ZdlPv(i8* %82) #5
  br label %83

83:                                               ; preds = %74, %80
  %84 = getelementptr inbounds %"struct.quic::QuicCryptoNegotiatedParameters", %"struct.quic::QuicCryptoNegotiatedParameters"* %0, i64 0, i32 10
  %85 = bitcast %"class.std::__1::basic_string"* %84 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  tail call void @_ZdlPv(i8* %91) #5
  br label %92

92:                                               ; preds = %83, %89
  %93 = getelementptr inbounds %"struct.quic::QuicCryptoNegotiatedParameters", %"struct.quic::QuicCryptoNegotiatedParameters"* %0, i64 0, i32 9
  %94 = bitcast %"class.std::__1::basic_string"* %93 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  tail call void @_ZdlPv(i8* %100) #5
  br label %101

101:                                              ; preds = %92, %98
  %102 = getelementptr inbounds %"struct.quic::QuicCryptoNegotiatedParameters", %"struct.quic::QuicCryptoNegotiatedParameters"* %0, i64 0, i32 8, i32 1, i32 0, i32 0, i32 0
  %103 = load %"class.quic::QuicDecrypter"*, %"class.quic::QuicDecrypter"** %102, align 8
  store %"class.quic::QuicDecrypter"* null, %"class.quic::QuicDecrypter"** %102, align 8
  %104 = icmp eq %"class.quic::QuicDecrypter"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %101
  %106 = bitcast %"class.quic::QuicDecrypter"* %103 to void (%"class.quic::QuicDecrypter"*)***
  %107 = load void (%"class.quic::QuicDecrypter"*)**, void (%"class.quic::QuicDecrypter"*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.quic::QuicDecrypter"*)*, void (%"class.quic::QuicDecrypter"*)** %107, i64 1
  %109 = load void (%"class.quic::QuicDecrypter"*)*, void (%"class.quic::QuicDecrypter"*)** %108, align 8
  tail call void %109(%"class.quic::QuicDecrypter"* nonnull %103) #6
  br label %110

110:                                              ; preds = %105, %101
  %111 = getelementptr inbounds %"struct.quic::QuicCryptoNegotiatedParameters", %"struct.quic::QuicCryptoNegotiatedParameters"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %112 = load %"class.quic::QuicEncrypter"*, %"class.quic::QuicEncrypter"** %111, align 8
  store %"class.quic::QuicEncrypter"* null, %"class.quic::QuicEncrypter"** %111, align 8
  %113 = icmp eq %"class.quic::QuicEncrypter"* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %110
  %115 = bitcast %"class.quic::QuicEncrypter"* %112 to void (%"class.quic::QuicEncrypter"*)***
  %116 = load void (%"class.quic::QuicEncrypter"*)**, void (%"class.quic::QuicEncrypter"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.quic::QuicEncrypter"*)*, void (%"class.quic::QuicEncrypter"*)** %116, i64 1
  %118 = load void (%"class.quic::QuicEncrypter"*)*, void (%"class.quic::QuicEncrypter"*)** %117, align 8
  tail call void %118(%"class.quic::QuicEncrypter"* nonnull %112) #6
  br label %119

119:                                              ; preds = %110, %114
  %120 = getelementptr inbounds %"struct.quic::QuicCryptoNegotiatedParameters", %"struct.quic::QuicCryptoNegotiatedParameters"* %0, i64 0, i32 7, i32 1, i32 0, i32 0, i32 0
  %121 = load %"class.quic::QuicDecrypter"*, %"class.quic::QuicDecrypter"** %120, align 8
  store %"class.quic::QuicDecrypter"* null, %"class.quic::QuicDecrypter"** %120, align 8
  %122 = icmp eq %"class.quic::QuicDecrypter"* %121, null
  br i1 %122, label %128, label %123

123:                                              ; preds = %119
  %124 = bitcast %"class.quic::QuicDecrypter"* %121 to void (%"class.quic::QuicDecrypter"*)***
  %125 = load void (%"class.quic::QuicDecrypter"*)**, void (%"class.quic::QuicDecrypter"*)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.quic::QuicDecrypter"*)*, void (%"class.quic::QuicDecrypter"*)** %125, i64 1
  %127 = load void (%"class.quic::QuicDecrypter"*)*, void (%"class.quic::QuicDecrypter"*)** %126, align 8
  tail call void %127(%"class.quic::QuicDecrypter"* nonnull %121) #6
  br label %128

128:                                              ; preds = %123, %119
  %129 = getelementptr inbounds %"struct.quic::QuicCryptoNegotiatedParameters", %"struct.quic::QuicCryptoNegotiatedParameters"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %130 = load %"class.quic::QuicEncrypter"*, %"class.quic::QuicEncrypter"** %129, align 8
  store %"class.quic::QuicEncrypter"* null, %"class.quic::QuicEncrypter"** %129, align 8
  %131 = icmp eq %"class.quic::QuicEncrypter"* %130, null
  br i1 %131, label %137, label %132

132:                                              ; preds = %128
  %133 = bitcast %"class.quic::QuicEncrypter"* %130 to void (%"class.quic::QuicEncrypter"*)***
  %134 = load void (%"class.quic::QuicEncrypter"*)**, void (%"class.quic::QuicEncrypter"*)*** %133, align 8
  %135 = getelementptr inbounds void (%"class.quic::QuicEncrypter"*)*, void (%"class.quic::QuicEncrypter"*)** %134, i64 1
  %136 = load void (%"class.quic::QuicEncrypter"*)*, void (%"class.quic::QuicEncrypter"*)** %135, align 8
  tail call void %136(%"class.quic::QuicEncrypter"* nonnull %130) #6
  br label %137

137:                                              ; preds = %128, %132
  %138 = getelementptr inbounds %"struct.quic::QuicCryptoNegotiatedParameters", %"struct.quic::QuicCryptoNegotiatedParameters"* %0, i64 0, i32 6
  %139 = bitcast %"class.std::__1::basic_string"* %138 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  %141 = load i8, i8* %140, align 1
  %142 = icmp slt i8 %141, 0
  br i1 %142, label %143, label %146

143:                                              ; preds = %137
  %144 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %138, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load i8*, i8** %144, align 8
  tail call void @_ZdlPv(i8* %145) #5
  br label %146

146:                                              ; preds = %137, %143
  %147 = getelementptr inbounds %"struct.quic::QuicCryptoNegotiatedParameters", %"struct.quic::QuicCryptoNegotiatedParameters"* %0, i64 0, i32 5
  %148 = bitcast %"class.std::__1::basic_string"* %147 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %149 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %148, i64 0, i32 1, i32 0
  %150 = load i8, i8* %149, align 1
  %151 = icmp slt i8 %150, 0
  br i1 %151, label %152, label %155

152:                                              ; preds = %146
  %153 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %147, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load i8*, i8** %153, align 8
  tail call void @_ZdlPv(i8* %154) #5
  br label %155

155:                                              ; preds = %146, %152
  %156 = getelementptr inbounds %"struct.quic::QuicCryptoNegotiatedParameters", %"struct.quic::QuicCryptoNegotiatedParameters"* %0, i64 0, i32 4
  %157 = bitcast %"class.std::__1::basic_string"* %156 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %158 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %157, i64 0, i32 1, i32 0
  %159 = load i8, i8* %158, align 1
  %160 = icmp slt i8 %159, 0
  br i1 %160, label %161, label %164

161:                                              ; preds = %155
  %162 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %156, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load i8*, i8** %162, align 8
  tail call void @_ZdlPv(i8* %163) #5
  br label %164

164:                                              ; preds = %155, %161
  %165 = getelementptr inbounds %"struct.quic::QuicCryptoNegotiatedParameters", %"struct.quic::QuicCryptoNegotiatedParameters"* %0, i64 0, i32 3
  %166 = bitcast %"class.std::__1::basic_string"* %165 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %167 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %166, i64 0, i32 1, i32 0
  %168 = load i8, i8* %167, align 1
  %169 = icmp slt i8 %168, 0
  br i1 %169, label %170, label %173

170:                                              ; preds = %164
  %171 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %165, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load i8*, i8** %171, align 8
  tail call void @_ZdlPv(i8* %172) #5
  br label %173

173:                                              ; preds = %164, %170
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic30QuicCryptoNegotiatedParametersD0Ev(%"struct.quic::QuicCryptoNegotiatedParameters"*) unnamed_addr #0 align 2 {
  tail call void @_ZN4quic30QuicCryptoNegotiatedParametersD2Ev(%"struct.quic::QuicCryptoNegotiatedParameters"* %0) #6
  %2 = bitcast %"struct.quic::QuicCryptoNegotiatedParameters"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4quic11CrypterPairC2Ev(%"struct.quic::CrypterPair"* nocapture) unnamed_addr #2 align 2 {
  %2 = bitcast %"struct.quic::CrypterPair"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic11CrypterPairD2Ev(%"struct.quic::CrypterPair"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.quic::CrypterPair", %"struct.quic::CrypterPair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.quic::QuicDecrypter"*, %"class.quic::QuicDecrypter"** %2, align 8
  store %"class.quic::QuicDecrypter"* null, %"class.quic::QuicDecrypter"** %2, align 8
  %4 = icmp eq %"class.quic::QuicDecrypter"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.quic::QuicDecrypter"* %3 to void (%"class.quic::QuicDecrypter"*)***
  %7 = load void (%"class.quic::QuicDecrypter"*)**, void (%"class.quic::QuicDecrypter"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.quic::QuicDecrypter"*)*, void (%"class.quic::QuicDecrypter"*)** %7, i64 1
  %9 = load void (%"class.quic::QuicDecrypter"*)*, void (%"class.quic::QuicDecrypter"*)** %8, align 8
  tail call void %9(%"class.quic::QuicDecrypter"* nonnull %3) #6
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"struct.quic::CrypterPair", %"struct.quic::CrypterPair"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.quic::QuicEncrypter"*, %"class.quic::QuicEncrypter"** %11, align 8
  store %"class.quic::QuicEncrypter"* null, %"class.quic::QuicEncrypter"** %11, align 8
  %13 = icmp eq %"class.quic::QuicEncrypter"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.quic::QuicEncrypter"* %12 to void (%"class.quic::QuicEncrypter"*)***
  %16 = load void (%"class.quic::QuicEncrypter"*)**, void (%"class.quic::QuicEncrypter"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.quic::QuicEncrypter"*)*, void (%"class.quic::QuicEncrypter"*)** %16, i64 1
  %18 = load void (%"class.quic::QuicEncrypter"*)*, void (%"class.quic::QuicEncrypter"*)** %17, align 8
  tail call void %18(%"class.quic::QuicEncrypter"* nonnull %12) #6
  br label %19

19:                                               ; preds = %10, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic16QuicCryptoConfigC2Ev(%"class.quic::QuicCryptoConfig"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicCryptoConfig", %"class.quic::QuicCryptoConfig"* %0, i64 0, i32 2
  %3 = bitcast %"class.quic::QuicCryptoConfig"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 48, i1 false)
  %4 = tail call %"class.quic::CommonCertSets"* @_ZN4quic14CommonCertSets15GetInstanceQUICEv() #6
  store %"class.quic::CommonCertSets"* %4, %"class.quic::CommonCertSets"** %2, align 8
  ret void
}

declare %"class.quic::CommonCertSets"* @_ZN4quic14CommonCertSets15GetInstanceQUICEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic16QuicCryptoConfigD2Ev(%"class.quic::QuicCryptoConfig"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicCryptoConfig", %"class.quic::QuicCryptoConfig"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i32* %3 to i64
  %7 = getelementptr inbounds %"class.quic::QuicCryptoConfig", %"class.quic::QuicCryptoConfig"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i32* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #5
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.quic::QuicCryptoConfig", %"class.quic::QuicCryptoConfig"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = icmp eq i32* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint i32* %12 to i64
  %16 = getelementptr inbounds %"class.quic::QuicCryptoConfig", %"class.quic::QuicCryptoConfig"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast i32** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast i32* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #5
  br label %19

19:                                               ; preds = %10, %14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { builtin nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
