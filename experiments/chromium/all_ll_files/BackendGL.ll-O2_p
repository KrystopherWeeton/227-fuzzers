; ModuleID = '../../third_party/dawn/src/dawn_native/opengl/BackendGL.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/opengl/BackendGL.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.dawn_native::opengl::(anonymous namespace)::Vendor" = type { i8*, i32 }
%"class.dawn_native::opengl::Backend" = type { %"class.dawn_native::BackendConnection.base", i8, [3 x i8] }
%"class.dawn_native::BackendConnection.base" = type <{ i32 (...)**, %"class.dawn_native::InstanceBase"*, i32 }>
%"class.dawn_native::InstanceBase" = type { %class.RefCounted, i8, i8, i8, i32, %"class.dawn_platform::Platform"*, %"class.std::__1::vector", %"class.std::__1::vector.2", %"class.dawn_native::ExtensionsInfo", %"class.dawn_native::TogglesInfo", %"class.std::__1::unique_ptr.61" }
%class.RefCounted = type { i32 (...)**, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.dawn_platform::Platform" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.std::__1::unique_ptr.4"*, %"class.std::__1::unique_ptr.4"*, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.dawn_native::AdapterBase"* }
%"class.dawn_native::AdapterBase" = type <{ i32 (...)**, %"struct.dawn_native::PCIInfo", i32, [4 x i8], %"class.std::__1::basic_string", %"struct.dawn_native::ExtensionsSet", %"class.dawn_native::InstanceBase"*, i32, [4 x i8] }>
%"struct.dawn_native::PCIInfo" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.dawn_native::ExtensionsSet" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::unique_ptr.4"* }
%"class.dawn_native::ExtensionsInfo" = type { %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.18", %"class.std::__1::__compressed_pair.27", %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.34", [4 x i8] }>
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20", %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { i64 }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { float }
%"class.dawn_native::TogglesInfo" = type { i8, [7 x i8], %"class.std::__1::unordered_map.37" }
%"class.std::__1::unordered_map.37" = type { %"class.std::__1::__hash_table.38" }
%"class.std::__1::__hash_table.38" = type <{ %"class.std::__1::unique_ptr.39", %"class.std::__1::__compressed_pair.49", %"class.std::__1::__compressed_pair.54", %"class.std::__1::__compressed_pair.57", [4 x i8] }>
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41", %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.std::__1::__hash_node_base.42"** }
%"struct.std::__1::__hash_node_base.42" = type { %"struct.std::__1::__hash_node_base.42"* }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.std::__1::__bucket_list_deallocator.44" }
%"class.std::__1::__bucket_list_deallocator.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.std::__1::__hash_node_base.42" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.dawn_native::XlibXcbFunctions"* }
%"class.dawn_native::XlibXcbFunctions" = type opaque
%"class.dawn_native::BackendConnection" = type <{ i32 (...)**, %"class.dawn_native::InstanceBase"*, i32, [4 x i8] }>
%class.Result = type { i32, %"class.std::__1::unique_ptr.67", %"class.std::__1::vector.2" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.dawn_native::ErrorData"* }
%"class.dawn_native::ErrorData" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.70" }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"class.std::__1::__compressed_pair.72" }
%"struct.dawn_native::ErrorData::BacktraceRecord" = type { i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"* }
%"struct.dawn_native::AdapterDiscoveryOptionsBase" = type { i32 }
%class.Result.107 = type { %"class.std::__1::unique_ptr.67" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.dawn_native::opengl::AdapterDiscoveryOptions" = type { %"struct.dawn_native::AdapterDiscoveryOptionsBase", i8* (i8*)* }
%"class.dawn_native::opengl::Adapter" = type { %"class.dawn_native::AdapterBase.base", %"struct.dawn_native::opengl::OpenGLFunctions" }
%"class.dawn_native::AdapterBase.base" = type <{ i32 (...)**, %"struct.dawn_native::PCIInfo", i32, [4 x i8], %"class.std::__1::basic_string", %"struct.dawn_native::ExtensionsSet", %"class.dawn_native::InstanceBase"*, i32 }>
%"struct.dawn_native::opengl::OpenGLFunctions" = type { %"struct.dawn_native::opengl::OpenGLFunctionsBase", %"struct.dawn_native::opengl::OpenGLVersion", [4 x i8], %"class.std::__1::unordered_set" }
%"struct.dawn_native::opengl::OpenGLFunctionsBase" = type { void (i32)*, void (i32, i32)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (float, float, float, float)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, i32 (i32)*, void (i32)*, void (float, float, float, float)*, void (float)*, void (i32)*, void (i8, i8, i8, i8)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, i32 ()*, i32 (i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i8)*, void (float, float)*, void (i32, i32)*, void (i32)*, void (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i8*)*, void (i32)*, void (i32)*, void ()*, void ()*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i8*)*, void (i32, i32, i32*)*, i32 ()*, void (i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, i8* (i32)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, i32 (i32, i8*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i8**)*, void (i32, i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, void (float)*, void (i32)*, void (i32, i32)*, void (float, float)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void ()*, void (i32, i32, i32, i32)*, void (float, i8)*, void (i32, i32, i32, i32)*, void (i32, i32*, i32, i8*, i32)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, float)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32)*, void (i32)*, void (i32, float)*, void (i32, float*)*, void (i32, float, float)*, void (i32, float*)*, void (i32, float, float, float)*, void (i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32*)*, void (i32, i32*)*, i8 (i32)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, i8 (i32)*, void (i32, i32, i8**)*, void (i32, i32*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, i8* (i32, i64, i64, i32)*, void (i32, i64, i64)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, i8 (i32)*, void (i32, i32, i32*)*, void (i32)*, void ()*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32)*, void (i32, i32, i8**, i32)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, i32 (i32, i8*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, float, i32)*, i8* (i32, i32)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*, i32, i32*)*, i32 (i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i8*, i32)*, %struct.__GLsync* (i32, i32)*, i8 (%struct.__GLsync*)*, void (%struct.__GLsync*)*, i32 (%struct.__GLsync*, i32, i64)*, void (%struct.__GLsync*, i32, i64)*, void (i32, i64*)*, void (%struct.__GLsync*, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i64*)*, void (i32, i32*)*, void (i32, i32*)*, i8 (i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, i8 (i32)*, void ()*, void ()*, void (i32, i32, i32*, i32*, i8*)*, void (i32, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32)*, void (i64)*, void (i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32, i32*, i32, i32*, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i32)*, i32 (i32, i32, i8**)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, i8 (i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, float)*, void (i32, i32, float, float)*, void (i32, i32, float, float, float)*, void (i32, i32, float, float, float, float)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i8, i32, i32, i32)*, void (i32, i32, i8*)*, void (i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i64, i32)*, void (i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32)*, void ()*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32, i8*)*, void (void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i8*)*, void ()*, void (i32, i32, i32, i8*)*, void (i32, i32, i32, i32*, i8*)*, void (i8*, i32, i8*)*, void (i8*, i32, i32*, i8*)*, void (i32, i8**)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i8, i8, i8, i8)*, i8 (i32, i32)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32, i32)*, void (i32, i32, i32, i32)*, void (float, float, float, float, float, float, float, float)*, i32 ()*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (float)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i8)*, void (float)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32)*, void (double)*, void (i32)*, void (i32, float)*, void (i32, double*)*, void (i32, i32, i32, i32, i8*)*, void (double, double)*, void (i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32*, i32*, i32)*, void (i32, i32*, i32, i8**, i32)*, void (i32, float)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i64, i64, i8*)*, i8* (i32, i32)*, void (i32, i32, double*)*, void (i32, double)*, void (i32, double*)*, void (i32, i16)*, void (i32, i16*)*, void (i32, double, double)*, void (i32, double*)*, void (i32, i16, i16)*, void (i32, i16*)*, void (i32, double, double, double)*, void (i32, double*)*, void (i32, i16, i16, i16)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i8, i8, i8, i8)*, void (i32, i8*)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, double, double, double, double)*, void (i32, double*)*, void (i32, i32*)*, void (i32, i16, i16, i16, i16)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i32)*, void (i32, i32)*, void ()*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i8*)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, i16*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32*, i32, i8**, i32, i32*)*, void (i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i8*)*, i32 (i32, i8*)*, void (i32, i32)*, void (i32, i32, i64*)*, void (i32, i32, i64*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, double)*, void (i32, double, double)*, void (i32, double, double, double)*, void (i32, double, double, double, double)*, void (i32, i32, double*)*, void (i32, i32, double*)*, void (i32, i32, double*)*, void (i32, i32, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, double*)*, i32 (i32, i32, i8*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, double)*, void (i32, i32, i32, double*)*, void (i32, i32, double, double)*, void (i32, i32, i32, double*)*, void (i32, i32, double, double, double)*, void (i32, i32, i32, double*)*, void (i32, i32, double, double, double, double)*, void (i32, i32, i32, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, double)*, void (i32, double, double)*, void (i32, double, double, double)*, void (i32, double, double, double, double)*, void (i32, double*)*, void (i32, double*)*, void (i32, double*)*, void (i32, double*)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, double*)*, void (i32, i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, double*)*, void (i32, double, double)*, void (i32, i32, float*)*, void (i32, i32, double*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i8*, i32, i32)*, void (i32, i32, i32, i8*, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i32, i32, i8*)*, void (i32, i32, i32, i32, i64*)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i64, i64)*, void (i32)*, void (i32, i8*, i32, i32)*, void (i32, i32, i8*, i32, i32)*, i32 (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*, i64*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i64*, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i64*)*, void (i32, i32*)*, void (i32, i64, i8*, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i32, i32, i8*)*, i8* (i32, i32)*, i8* (i32, i64, i64, i32)*, i8 (i32)*, void (i32, i64, i64)*, void (i32, i32, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i8**)*, void (i32, i64, i64, i8*)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, float, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i64, i32)*, void (i32, i32, i32, i32*, i64*, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i64*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, double*)*, void (i32, i32, i32, double*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i16*)*, void (i32, i8*)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i8*, i32, i8*, i8*)*, void (i32, i8, i32, i32, i32, i8*)*, void (i32, i8, i32, i32, i32, i8*)*, void ()*, void (i32, i8*, i32, i32*, i32*)*, void (i32, i8*, i64, i32, i32)*, void (i32, i32, i8*, i64, i32, i32)*, void (float, float, float)* }
%struct.__GLsync = type opaque
%"struct.dawn_native::opengl::OpenGLVersion" = type { i32, i32, i32 }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.83" }
%"class.std::__1::__hash_table.83" = type <{ %"class.std::__1::unique_ptr.84", %"class.std::__1::__compressed_pair.94", %"class.std::__1::__compressed_pair.99", %"class.std::__1::__compressed_pair.101", [4 x i8] }>
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86", %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"struct.std::__1::__hash_node_base.87"** }
%"struct.std::__1::__hash_node_base.87" = type { %"struct.std::__1::__hash_node_base.87"* }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.std::__1::__bucket_list_deallocator.89" }
%"class.std::__1::__bucket_list_deallocator.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.87" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.dawn::LogMessage" = type { i32, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%class.Result.115 = type { i64 }
%"struct.dawn_native::DeviceDescriptor" = type { %"class.std::__1::vector.108", %"class.std::__1::vector.108", %"class.std::__1::vector.108" }
%"class.std::__1::vector.108" = type { %"class.std::__1::__vector_base.109" }
%"class.std::__1::__vector_base.109" = type { i8**, i8**, %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { i8** }
%class.Result.116 = type { i64 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN11dawn_native6opengl7Adapter10InitializeEPKNS0_23AdapterDiscoveryOptionsE = comdat any

$_ZN11dawn_native17BackendConnectionD2Ev = comdat any

$_ZN11dawn_native6opengl7BackendD0Ev = comdat any

$_ZN11dawn_native6opengl7Adapter29InitializeSupportedExtensionsEv = comdat any

$_ZN4dawn10LogMessagelsIRA14_KcEERS0_OT_ = comdat any

$_ZN4dawn10LogMessagelsIRPKcEERS0_OT_ = comdat any

$_ZN4dawn10LogMessagelsIRA10_KcEERS0_OT_ = comdat any

$_ZN4dawn10LogMessagelsIRjEERS0_OT_ = comdat any

$_ZN4dawn10LogMessagelsIRA16_KcEERS0_OT_ = comdat any

$_ZN4dawn10LogMessagelsIRA15_KcEERS0_OT_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN11dawn_native6opengl7AdapterD2Ev = comdat any

$_ZN11dawn_native6opengl7AdapterD0Ev = comdat any

$_ZN11dawn_native6opengl7Adapter16CreateDeviceImplEPKNS_16DeviceDescriptorE = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN11dawn_native11AdapterBaseENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZTVN11dawn_native6opengl7AdapterE = comdat any

@_ZTVN11dawn_native6opengl7BackendE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.dawn_native::BackendConnection"*)* @_ZN11dawn_native17BackendConnectionD2Ev to i8*), i8* bitcast (void (%"class.dawn_native::opengl::Backend"*)* @_ZN11dawn_native6opengl7BackendD0Ev to i8*), i8* bitcast (void (%"class.std::__1::vector.2"*, %"class.dawn_native::opengl::Backend"*)* @_ZN11dawn_native6opengl7Backend23DiscoverDefaultAdaptersEv to i8*), i8* bitcast (void (%class.Result*, %"class.dawn_native::opengl::Backend"*, %"struct.dawn_native::AdapterDiscoveryOptionsBase"*)* @_ZN11dawn_native6opengl7Backend16DiscoverAdaptersEPKNS_27AdapterDiscoveryOptionsBaseE to i8*)] }, align 8
@.str = private unnamed_addr constant [52 x i8] c"The OpenGL backend can only create a single adapter\00", align 1
@.str.1 = private unnamed_addr constant [60 x i8] c"../../third_party/dawn/src/dawn_native/opengl/BackendGL.cpp\00", align 1
@__func__._ZN11dawn_native6opengl7Backend16DiscoverAdaptersEPKNS_27AdapterDiscoveryOptionsBaseE = private unnamed_addr constant [17 x i8] c"DiscoverAdapters\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"AdapterDiscoveryOptions::getProc must be set\00", align 1
@__func__._ZN11dawn_native6opengl7Adapter10InitializeEPKNS0_23AdapterDiscoveryOptionsE = private unnamed_addr constant [11 x i8] c"Initialize\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"OpenGL version \00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"SwiftShader\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"OpenGL\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"Window System\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"Shader Compiler\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c"Third Party\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"Application\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"Other\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"UNKNOWN\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"High\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"Medium\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"Low\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"Notification\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c"OpenGL error:\00", align 1
@.str.17 = private unnamed_addr constant [14 x i8] c"\0A    Source: \00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"\0A    ID: \00", align 1
@.str.19 = private unnamed_addr constant [16 x i8] c"\0A    Severity: \00", align 1
@.str.20 = private unnamed_addr constant [15 x i8] c"\0A    Message: \00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZN11dawn_native6opengl12_GLOBAL__N_18kVendorsE = internal unnamed_addr constant [6 x %"struct.dawn_native::opengl::(anonymous namespace)::Vendor"] [%"struct.dawn_native::opengl::(anonymous namespace)::Vendor" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i32 0, i32 0), i32 4098 }, %"struct.dawn_native::opengl::(anonymous namespace)::Vendor" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i32 0, i32 0), i32 5045 }, %"struct.dawn_native::opengl::(anonymous namespace)::Vendor" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.24, i32 0, i32 0), i32 4112 }, %"struct.dawn_native::opengl::(anonymous namespace)::Vendor" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i32 0, i32 0), i32 32902 }, %"struct.dawn_native::opengl::(anonymous namespace)::Vendor" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i32 0, i32 0), i32 4318 }, %"struct.dawn_native::opengl::(anonymous namespace)::Vendor" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i32 0, i32 0), i32 20803 }], align 16
@.str.22 = private unnamed_addr constant [4 x i8] c"ATI\00", align 1
@.str.23 = private unnamed_addr constant [4 x i8] c"ARM\00", align 1
@.str.24 = private unnamed_addr constant [12 x i8] c"Imagination\00", align 1
@.str.25 = private unnamed_addr constant [6 x i8] c"Intel\00", align 1
@.str.26 = private unnamed_addr constant [7 x i8] c"NVIDIA\00", align 1
@.str.27 = private unnamed_addr constant [9 x i8] c"Qualcomm\00", align 1
@.str.28 = private unnamed_addr constant [32 x i8] c"GL_EXT_texture_compression_s3tc\00", align 1
@.str.29 = private unnamed_addr constant [32 x i8] c"GL_EXT_texture_compression_dxt1\00", align 1
@.str.30 = private unnamed_addr constant [34 x i8] c"GL_ANGLE_texture_compression_dxt3\00", align 1
@.str.31 = private unnamed_addr constant [34 x i8] c"GL_ANGLE_texture_compression_dxt5\00", align 1
@.str.32 = private unnamed_addr constant [20 x i8] c"GL_EXT_texture_sRGB\00", align 1
@.str.33 = private unnamed_addr constant [37 x i8] c"GL_EXT_texture_compression_s3tc_srgb\00", align 1
@.str.34 = private unnamed_addr constant [19 x i8] c"GL_NV_sRGB_formats\00", align 1
@.str.35 = private unnamed_addr constant [32 x i8] c"GL_ARB_texture_compression_rgtc\00", align 1
@.str.36 = private unnamed_addr constant [32 x i8] c"GL_EXT_texture_compression_rgtc\00", align 1
@.str.37 = private unnamed_addr constant [32 x i8] c"GL_ARB_texture_compression_bptc\00", align 1
@.str.38 = private unnamed_addr constant [32 x i8] c"GL_EXT_texture_compression_bptc\00", align 1
@_ZTVN11dawn_native6opengl7AdapterE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.dawn_native::opengl::Adapter"*)* @_ZN11dawn_native6opengl7AdapterD2Ev to i8*), i8* bitcast (void (%"class.dawn_native::opengl::Adapter"*)* @_ZN11dawn_native6opengl7AdapterD0Ev to i8*), i8* bitcast (void (%class.Result.115*, %"class.dawn_native::opengl::Adapter"*, %"struct.dawn_native::DeviceDescriptor"*)* @_ZN11dawn_native6opengl7Adapter16CreateDeviceImplEPKNS_16DeviceDescriptorE to i8*), i8* bitcast (void (%class.Result.107*, %"class.dawn_native::AdapterBase"*)* @_ZN11dawn_native11AdapterBase33ResetInternalDeviceForTestingImplEv to i8*)] }, comdat, align 8
@_ZTVN11dawn_native11AdapterBaseE = external unnamed_addr constant { [6 x i8*] }, align 8

@_ZN11dawn_native6opengl7BackendC1EPNS_12InstanceBaseEN4wgpu11BackendTypeE = hidden unnamed_addr alias void (%"class.dawn_native::opengl::Backend"*, %"class.dawn_native::InstanceBase"*, i32), void (%"class.dawn_native::opengl::Backend"*, %"class.dawn_native::InstanceBase"*, i32)* @_ZN11dawn_native6opengl7BackendC2EPNS_12InstanceBaseEN4wgpu11BackendTypeE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl7BackendC2EPNS_12InstanceBaseEN4wgpu11BackendTypeE(%"class.dawn_native::opengl::Backend"*, %"class.dawn_native::InstanceBase"*, i32) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.dawn_native::opengl::Backend"* %0 to %"class.dawn_native::BackendConnection"*
  tail call void @_ZN11dawn_native17BackendConnectionC2EPNS_12InstanceBaseEN4wgpu11BackendTypeE(%"class.dawn_native::BackendConnection"* %4, %"class.dawn_native::InstanceBase"* %1, i32 %2) #13
  %5 = getelementptr inbounds %"class.dawn_native::opengl::Backend", %"class.dawn_native::opengl::Backend"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native6opengl7BackendE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.dawn_native::opengl::Backend", %"class.dawn_native::opengl::Backend"* %0, i64 0, i32 1
  store i8 0, i8* %6, align 4
  ret void
}

declare void @_ZN11dawn_native17BackendConnectionC2EPNS_12InstanceBaseEN4wgpu11BackendTypeE(%"class.dawn_native::BackendConnection"*, %"class.dawn_native::InstanceBase"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl7Backend23DiscoverDefaultAdaptersEv(%"class.std::__1::vector.2"* noalias nocapture sret, %"class.dawn_native::opengl::Backend"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::vector.2"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl7Backend16DiscoverAdaptersEPKNS_27AdapterDiscoveryOptionsBaseE(%class.Result* noalias nocapture sret, %"class.dawn_native::opengl::Backend"*, %"struct.dawn_native::AdapterDiscoveryOptionsBase"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %class.Result.107, align 8
  %7 = alloca %"class.std::__1::vector.2", align 16
  %8 = alloca %"class.std::__1::unique_ptr.4", align 8
  %9 = getelementptr inbounds %"class.dawn_native::opengl::Backend", %"class.dawn_native::opengl::Backend"* %1, i64 0, i32 1
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %31, label %12

12:                                               ; preds = %3
  %13 = tail call i8* @_Znwm(i64 64) #14
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %13, i8** %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast i64* %15 to <2 x i64>*
  store <2 x i64> <i64 51, i64 -9223372036854775744>, <2 x i64>* %16, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %13, i8* align 1 getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i64 51, i1 false) #13
  %17 = getelementptr inbounds i8, i8* %13, i64 51
  store i8 0, i8* %17, align 1
  %18 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 0, %"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__._ZN11dawn_native6opengl7Backend16DiscoverAdaptersEPKNS_27AdapterDiscoveryOptionsBaseE, i64 0, i64 0), i32 269) #13
  %19 = ptrtoint %"class.dawn_native::ErrorData"* %18 to i64
  %20 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 0
  store i32 1, i32* %20, align 8
  %21 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 1
  %22 = bitcast %"class.std::__1::unique_ptr.67"* %21 to i64*
  store i64 %19, i64* %22, align 8
  %23 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 2
  %24 = bitcast %"class.std::__1::vector.2"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #13
  %25 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %134

29:                                               ; preds = %12
  %30 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %30) #14
  br label %134

31:                                               ; preds = %3
  %32 = getelementptr inbounds %"struct.dawn_native::AdapterDiscoveryOptionsBase", %"struct.dawn_native::AdapterDiscoveryOptionsBase"* %2, i64 2
  %33 = bitcast %"struct.dawn_native::AdapterDiscoveryOptionsBase"* %32 to i8* (i8*)**
  %34 = load i8* (i8*)*, i8* (i8*)** %33, align 8
  %35 = icmp eq i8* (i8*)* %34, null
  br i1 %35, label %36, label %55

36:                                               ; preds = %31
  %37 = tail call i8* @_Znwm(i64 48) #14
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %37, i8** %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = bitcast i64* %39 to <2 x i64>*
  store <2 x i64> <i64 44, i64 -9223372036854775760>, <2 x i64>* %40, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %37, i8* align 1 getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i64 0, i64 0), i64 44, i1 false) #13
  %41 = getelementptr inbounds i8, i8* %37, i64 44
  store i8 0, i8* %41, align 1
  %42 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 0, %"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__._ZN11dawn_native6opengl7Backend16DiscoverAdaptersEPKNS_27AdapterDiscoveryOptionsBaseE, i64 0, i64 0), i32 277) #13
  %43 = ptrtoint %"class.dawn_native::ErrorData"* %42 to i64
  %44 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 0
  store i32 1, i32* %44, align 8
  %45 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 1
  %46 = bitcast %"class.std::__1::unique_ptr.67"* %45 to i64*
  store i64 %43, i64* %46, align 8
  %47 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 2
  %48 = bitcast %"class.std::__1::vector.2"* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #13
  %49 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %134

53:                                               ; preds = %36
  %54 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %54) #14
  br label %134

55:                                               ; preds = %31
  %56 = bitcast %"struct.dawn_native::AdapterDiscoveryOptionsBase"* %2 to %"struct.dawn_native::opengl::AdapterDiscoveryOptions"*
  %57 = bitcast %"class.dawn_native::opengl::Backend"* %1 to %"class.dawn_native::BackendConnection"*
  %58 = tail call %"class.dawn_native::InstanceBase"* @_ZNK11dawn_native17BackendConnection11GetInstanceEv(%"class.dawn_native::BackendConnection"* %57) #13
  %59 = getelementptr inbounds %"struct.dawn_native::AdapterDiscoveryOptionsBase", %"struct.dawn_native::AdapterDiscoveryOptionsBase"* %2, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = tail call i8* @_Znwm(i64 5760) #14
  %62 = bitcast i8* %61 to %"class.dawn_native::opengl::Adapter"*
  %63 = bitcast i8* %61 to %"class.dawn_native::AdapterBase"*
  tail call void @_ZN11dawn_native11AdapterBaseC2EPNS_12InstanceBaseEN4wgpu11BackendTypeE(%"class.dawn_native::AdapterBase"* nonnull %63, %"class.dawn_native::InstanceBase"* %58, i32 %60) #13
  %64 = bitcast i8* %61 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native6opengl7AdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %64, align 8
  %65 = getelementptr inbounds i8, i8* %61, i64 96
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 5608, i1 false) #13
  %66 = getelementptr inbounds i8, i8* %61, i64 5720
  %67 = getelementptr inbounds i8, i8* %61, i64 5752
  %68 = bitcast i8* %67 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %68, align 4
  %69 = bitcast %class.Result.107* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #13
  %70 = getelementptr inbounds %class.Result.107, %class.Result.107* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %70, align 8
  call void @_ZN11dawn_native6opengl7Adapter10InitializeEPKNS0_23AdapterDiscoveryOptionsE(%class.Result.107* nonnull sret %6, %"class.dawn_native::opengl::Adapter"* nonnull %62, %"struct.dawn_native::opengl::AdapterDiscoveryOptions"* %56)
  %71 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %70, align 8
  %72 = icmp eq %"class.dawn_native::ErrorData"* %71, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %70, align 8
  br i1 %72, label %102, label %73, !prof !3

73:                                               ; preds = %55
  %74 = ptrtoint %"class.dawn_native::ErrorData"* %71 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %71, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__._ZN11dawn_native6opengl7Backend16DiscoverAdaptersEPKNS_27AdapterDiscoveryOptionsBaseE, i64 0, i64 0), i32 282) #13
  %75 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 0
  store i32 1, i32* %75, align 8
  %76 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 1
  %77 = bitcast %"class.std::__1::unique_ptr.67"* %76 to i64*
  store i64 %74, i64* %77, align 8
  %78 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 2
  %79 = bitcast %"class.std::__1::vector.2"* %78 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 24, i1 false) #13
  %80 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %70, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %70, align 8
  %81 = icmp eq %"class.dawn_native::ErrorData"* %80, null
  br i1 %81, label %129, label %82

82:                                               ; preds = %73
  %83 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %80, i64 0, i32 2, i32 0, i32 0
  %84 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %83, align 8
  %85 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %82
  %87 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %84 to i64
  %88 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %80, i64 0, i32 2, i32 0, i32 1
  %89 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %88 to i64*
  store i64 %87, i64* %89, align 8
  %90 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %84 to i8*
  call void @_ZdlPv(i8* %90) #14
  br label %91

91:                                               ; preds = %86, %82
  %92 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %80, i64 0, i32 1
  %93 = bitcast %"class.std::__1::basic_string"* %92 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  %95 = load i8, i8* %94, align 1
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %100

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void @_ZdlPv(i8* %99) #14
  br label %100

100:                                              ; preds = %97, %91
  %101 = bitcast %"class.dawn_native::ErrorData"* %80 to i8*
  call void @_ZdlPv(i8* %101) #14
  br label %129

102:                                              ; preds = %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #13
  store i8 1, i8* %9, align 4
  %103 = bitcast %"class.std::__1::vector.2"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #13
  %104 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %103, i8 0, i64 24, i1 false) #13
  %105 = bitcast %"class.std::__1::unique_ptr.4"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #13
  %106 = ptrtoint i8* %61 to i64
  %107 = bitcast %"class.std::__1::unique_ptr.4"* %8 to i64*
  store i64 %106, i64* %107, align 8
  call void @_ZNSt3__16vectorINS_10unique_ptrIN11dawn_native11AdapterBaseENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.2"* nonnull %7, %"class.std::__1::unique_ptr.4"* nonnull dereferenceable(8) %8) #13
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %8, i64 0, i32 0, i32 0, i32 0
  %109 = load %"class.dawn_native::AdapterBase"*, %"class.dawn_native::AdapterBase"** %108, align 8
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::AdapterBase"* null, %"class.dawn_native::AdapterBase"** %110, align 8
  %111 = icmp eq %"class.dawn_native::AdapterBase"* %109, null
  br i1 %111, label %117, label %112

112:                                              ; preds = %102
  %113 = bitcast %"class.dawn_native::AdapterBase"* %109 to void (%"class.dawn_native::AdapterBase"*)***
  %114 = load void (%"class.dawn_native::AdapterBase"*)**, void (%"class.dawn_native::AdapterBase"*)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.dawn_native::AdapterBase"*)*, void (%"class.dawn_native::AdapterBase"*)** %114, i64 1
  %116 = load void (%"class.dawn_native::AdapterBase"*)*, void (%"class.dawn_native::AdapterBase"*)** %115, align 8
  call void %116(%"class.dawn_native::AdapterBase"* nonnull %109) #13
  br label %117

117:                                              ; preds = %112, %102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #13
  %118 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 0
  store i32 0, i32* %118, align 8
  %119 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 1
  %120 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 2
  %121 = bitcast %"class.std::__1::unique_ptr.67"* %119 to i64*
  store i64 0, i64* %121, align 8
  %122 = bitcast %"class.std::__1::vector.2"* %7 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 16
  %124 = bitcast %"class.std::__1::vector.2"* %120 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %124, align 8
  %125 = bitcast %"class.std::__1::unique_ptr.4"** %104 to i64*
  %126 = load i64, i64* %125, align 16
  %127 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %128 = bitcast %"class.std::__1::unique_ptr.4"** %127 to i64*
  store i64 %126, i64* %128, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #13
  br label %134

129:                                              ; preds = %73, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #13
  %130 = bitcast i8* %61 to void (%"class.dawn_native::opengl::Adapter"*)***
  %131 = load void (%"class.dawn_native::opengl::Adapter"*)**, void (%"class.dawn_native::opengl::Adapter"*)*** %130, align 8
  %132 = getelementptr inbounds void (%"class.dawn_native::opengl::Adapter"*)*, void (%"class.dawn_native::opengl::Adapter"*)** %131, i64 1
  %133 = load void (%"class.dawn_native::opengl::Adapter"*)*, void (%"class.dawn_native::opengl::Adapter"*)** %132, align 8
  call void %133(%"class.dawn_native::opengl::Adapter"* nonnull %62) #13
  br label %134

134:                                              ; preds = %129, %117, %53, %36, %29, %12
  ret void
}

declare %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32, %"class.std::__1::basic_string"*, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.dawn_native::InstanceBase"* @_ZNK11dawn_native17BackendConnection11GetInstanceEv(%"class.dawn_native::BackendConnection"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11dawn_native6opengl7Adapter10InitializeEPKNS0_23AdapterDiscoveryOptionsE(%class.Result.107* noalias sret, %"class.dawn_native::opengl::Adapter"*, %"struct.dawn_native::opengl::AdapterDiscoveryOptions"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %class.Result.107, align 8
  %5 = alloca [15 x i8], align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %class.Result.107* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = getelementptr inbounds %class.Result.107, %class.Result.107* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %8, align 8
  %9 = getelementptr inbounds %"class.dawn_native::opengl::Adapter", %"class.dawn_native::opengl::Adapter"* %1, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.dawn_native::opengl::AdapterDiscoveryOptions", %"struct.dawn_native::opengl::AdapterDiscoveryOptions"* %2, i64 0, i32 1
  %11 = load i8* (i8*)*, i8* (i8*)** %10, align 8
  call void @_ZN11dawn_native6opengl15OpenGLFunctions10InitializeEPFPvPKcE(%class.Result.107* nonnull sret %4, %"struct.dawn_native::opengl::OpenGLFunctions"* %9, i8* (i8*)* %11) #13
  %12 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %8, align 8
  %13 = icmp eq %"class.dawn_native::ErrorData"* %12, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %8, align 8
  br i1 %13, label %40, label %14, !prof !3

14:                                               ; preds = %3
  %15 = ptrtoint %"class.dawn_native::ErrorData"* %12 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %12, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__._ZN11dawn_native6opengl7Adapter10InitializeEPKNS0_23AdapterDiscoveryOptionsE, i64 0, i64 0), i32 128) #13
  %16 = bitcast %class.Result.107* %0 to i64*
  store i64 %15, i64* %16, align 8
  %17 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %8, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %8, align 8
  %18 = icmp eq %"class.dawn_native::ErrorData"* %17, null
  br i1 %18, label %39, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %17, i64 0, i32 2, i32 0, i32 0
  %21 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %20, align 8
  %22 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %21 to i64
  %25 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %17, i64 0, i32 2, i32 0, i32 1
  %26 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %21 to i8*
  call void @_ZdlPv(i8* %27) #14
  br label %28

28:                                               ; preds = %23, %19
  %29 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %17, i64 0, i32 1
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %36) #14
  br label %37

37:                                               ; preds = %34, %28
  %38 = bitcast %"class.dawn_native::ErrorData"* %17 to i8*
  call void @_ZdlPv(i8* %38) #14
  br label %39

39:                                               ; preds = %14, %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  br label %214

40:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  %41 = call dereferenceable(12) %"struct.dawn_native::opengl::OpenGLVersion"* @_ZNK11dawn_native6opengl15OpenGLFunctions10GetVersionEv(%"struct.dawn_native::opengl::OpenGLFunctions"* %9) #13
  %42 = call zeroext i1 @_ZNK11dawn_native6opengl13OpenGLVersion4IsESEv(%"struct.dawn_native::opengl::OpenGLVersion"* %41) #13
  %43 = call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions11IsAtLeastGLEjj(%"struct.dawn_native::opengl::OpenGLFunctions"* %9, i32 4, i32 3) #13
  br i1 %43, label %46, label %44

44:                                               ; preds = %40
  %45 = call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions13IsAtLeastGLESEjj(%"struct.dawn_native::opengl::OpenGLFunctions"* %9, i32 3, i32 2) #13
  br label %46

46:                                               ; preds = %44, %40
  %47 = phi i1 [ true, %40 ], [ %45, %44 ]
  %48 = bitcast %"class.dawn_native::opengl::Adapter"* %1 to %"class.dawn_native::AdapterBase"*
  %49 = call %"class.dawn_native::InstanceBase"* @_ZNK11dawn_native11AdapterBase11GetInstanceEv(%"class.dawn_native::AdapterBase"* %48) #13
  %50 = call zeroext i1 @_ZNK11dawn_native12InstanceBase26IsBackendValidationEnabledEv(%"class.dawn_native::InstanceBase"* %49) #13
  %51 = and i1 %47, %50
  br i1 %51, label %52, label %63

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.dawn_native::opengl::Adapter", %"class.dawn_native::opengl::Adapter"* %1, i64 0, i32 1, i32 0, i32 42
  %54 = load void (i32)*, void (i32)** %53, align 8
  call void %54(i32 37600) #13
  %55 = load void (i32)*, void (i32)** %53, align 8
  call void %55(i32 33346) #13
  %56 = getelementptr inbounds %"class.dawn_native::opengl::Adapter", %"class.dawn_native::opengl::Adapter"* %1, i64 0, i32 1, i32 0, i32 316
  %57 = load void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32*, i8)** %56, align 8
  call void %57(i32 4352, i32 4352, i32 37190, i32 0, i32* null, i8 zeroext 1) #13
  %58 = load void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32*, i8)** %56, align 8
  call void %58(i32 4352, i32 4352, i32 37191, i32 0, i32* null, i8 zeroext 1) #13
  %59 = load void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32*, i8)** %56, align 8
  call void %59(i32 4352, i32 4352, i32 37192, i32 0, i32* null, i8 zeroext 0) #13
  %60 = load void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32*, i8)** %56, align 8
  call void %60(i32 4352, i32 4352, i32 33387, i32 0, i32* null, i8 zeroext 0) #13
  %61 = getelementptr inbounds %"class.dawn_native::opengl::Adapter", %"class.dawn_native::opengl::Adapter"* %1, i64 0, i32 1, i32 0, i32 318
  %62 = load void (void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, void (void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)** %61, align 8
  call void %62(void (i32, i32, i32, i32, i32, i8*, i8*)* nonnull @_ZN11dawn_native6opengl12_GLOBAL__N_116OnGLDebugMessageEjjjjiPKcPKv, i8* null) #13
  br label %63

63:                                               ; preds = %46, %52
  %64 = getelementptr inbounds %"class.dawn_native::opengl::Adapter", %"class.dawn_native::opengl::Adapter"* %1, i64 0, i32 1, i32 0, i32 42
  %65 = load void (i32)*, void (i32)** %64, align 8
  call void %65(i32 2929) #13
  %66 = load void (i32)*, void (i32)** %64, align 8
  call void %66(i32 3089) #13
  %67 = load void (i32)*, void (i32)** %64, align 8
  call void %67(i32 36201) #13
  %68 = call dereferenceable(12) %"struct.dawn_native::opengl::OpenGLVersion"* @_ZNK11dawn_native6opengl15OpenGLFunctions10GetVersionEv(%"struct.dawn_native::opengl::OpenGLFunctions"* %9) #13
  %69 = call zeroext i1 @_ZNK11dawn_native6opengl13OpenGLVersion9IsDesktopEv(%"struct.dawn_native::opengl::OpenGLVersion"* %68) #13
  br i1 %69, label %70, label %73

70:                                               ; preds = %63
  %71 = load void (i32)*, void (i32)** %64, align 8
  call void %71(i32 32925) #13
  %72 = load void (i32)*, void (i32)** %64, align 8
  call void %72(i32 36281) #13
  br label %73

73:                                               ; preds = %70, %63
  %74 = load void (i32)*, void (i32)** %64, align 8
  call void %74(i32 36433) #13
  %75 = getelementptr inbounds %"class.dawn_native::opengl::Adapter", %"class.dawn_native::opengl::Adapter"* %1, i64 0, i32 1, i32 0, i32 71
  %76 = load i8* (i32)*, i8* (i32)** %75, align 8
  %77 = call i8* %76(i32 7937) #13
  %78 = getelementptr inbounds %"class.dawn_native::opengl::Adapter", %"class.dawn_native::opengl::Adapter"* %1, i64 0, i32 0, i32 1, i32 2
  %79 = load i8, i8* %77, align 1
  %80 = call i1 @llvm.is.constant.i8(i8 %79) #13
  br i1 %80, label %81, label %104

81:                                               ; preds = %73
  %82 = call i64 @strlen(i8* %77) #13
  %83 = icmp ult i64 %82, 23
  br i1 %83, label %84, label %102

84:                                               ; preds = %81
  %85 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %93

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.dawn_native::opengl::Adapter", %"class.dawn_native::opengl::Adapter"* %1, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %82, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  br label %96

93:                                               ; preds = %84
  %94 = trunc i64 %82 to i8
  store i8 %94, i8* %86, align 1
  %95 = bitcast %"class.std::__1::basic_string"* %78 to i8*
  br label %96

96:                                               ; preds = %93, %89
  %97 = phi i8* [ %92, %89 ], [ %95, %93 ]
  %98 = icmp eq i64 %82, 0
  br i1 %98, label %100, label %99

99:                                               ; preds = %96
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %97, i8* align 1 %77, i64 %82, i1 false) #13
  br label %100

100:                                              ; preds = %99, %96
  %101 = getelementptr inbounds i8, i8* %97, i64 %82
  store i8 0, i8* %101, align 1
  br label %106

102:                                              ; preds = %81
  %103 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %78, i8* %77, i64 %82) #13
  br label %106

104:                                              ; preds = %73
  %105 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* %78, i8* %77) #13
  br label %106

106:                                              ; preds = %100, %102, %104
  %107 = load i8* (i32)*, i8* (i32)** %75, align 8
  %108 = call i8* %107(i32 7936) #13
  %109 = call i8* @strstr(i8* %108, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i64 0, i64 0)) #15
  %110 = icmp eq i8* %109, null
  br i1 %110, label %115, label %111

111:                                              ; preds = %127, %124, %121, %118, %115, %106
  %112 = phi %"struct.dawn_native::opengl::(anonymous namespace)::Vendor"* [ getelementptr inbounds ([6 x %"struct.dawn_native::opengl::(anonymous namespace)::Vendor"], [6 x %"struct.dawn_native::opengl::(anonymous namespace)::Vendor"]* @_ZN11dawn_native6opengl12_GLOBAL__N_18kVendorsE, i64 0, i64 0), %106 ], [ getelementptr inbounds ([6 x %"struct.dawn_native::opengl::(anonymous namespace)::Vendor"], [6 x %"struct.dawn_native::opengl::(anonymous namespace)::Vendor"]* @_ZN11dawn_native6opengl12_GLOBAL__N_18kVendorsE, i64 0, i64 1), %115 ], [ getelementptr inbounds ([6 x %"struct.dawn_native::opengl::(anonymous namespace)::Vendor"], [6 x %"struct.dawn_native::opengl::(anonymous namespace)::Vendor"]* @_ZN11dawn_native6opengl12_GLOBAL__N_18kVendorsE, i64 0, i64 2), %118 ], [ getelementptr inbounds ([6 x %"struct.dawn_native::opengl::(anonymous namespace)::Vendor"], [6 x %"struct.dawn_native::opengl::(anonymous namespace)::Vendor"]* @_ZN11dawn_native6opengl12_GLOBAL__N_18kVendorsE, i64 0, i64 3), %121 ], [ getelementptr inbounds ([6 x %"struct.dawn_native::opengl::(anonymous namespace)::Vendor"], [6 x %"struct.dawn_native::opengl::(anonymous namespace)::Vendor"]* @_ZN11dawn_native6opengl12_GLOBAL__N_18kVendorsE, i64 0, i64 4), %124 ], [ getelementptr inbounds ([6 x %"struct.dawn_native::opengl::(anonymous namespace)::Vendor"], [6 x %"struct.dawn_native::opengl::(anonymous namespace)::Vendor"]* @_ZN11dawn_native6opengl12_GLOBAL__N_18kVendorsE, i64 0, i64 5), %127 ]
  %113 = getelementptr inbounds %"struct.dawn_native::opengl::(anonymous namespace)::Vendor", %"struct.dawn_native::opengl::(anonymous namespace)::Vendor"* %112, i64 0, i32 1
  %114 = load i32, i32* %113, align 8
  br label %130

115:                                              ; preds = %106
  %116 = call i8* @strstr(i8* %108, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i64 0, i64 0)) #15
  %117 = icmp eq i8* %116, null
  br i1 %117, label %118, label %111

118:                                              ; preds = %115
  %119 = call i8* @strstr(i8* %108, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.24, i64 0, i64 0)) #15
  %120 = icmp eq i8* %119, null
  br i1 %120, label %121, label %111

121:                                              ; preds = %118
  %122 = call i8* @strstr(i8* %108, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0)) #15
  %123 = icmp eq i8* %122, null
  br i1 %123, label %124, label %111

124:                                              ; preds = %121
  %125 = call i8* @strstr(i8* %108, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i64 0, i64 0)) #15
  %126 = icmp eq i8* %125, null
  br i1 %126, label %127, label %111

127:                                              ; preds = %124
  %128 = call i8* @strstr(i8* %108, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i64 0, i64 0)) #15
  %129 = icmp eq i8* %128, null
  br i1 %129, label %130, label %111

130:                                              ; preds = %111, %127
  %131 = phi i32 [ %114, %111 ], [ 0, %127 ]
  %132 = getelementptr inbounds %"class.dawn_native::opengl::Adapter", %"class.dawn_native::opengl::Adapter"* %1, i64 0, i32 0, i32 1, i32 1
  store i32 %131, i32* %132, align 4
  %133 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %133)
  %134 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %134) #13
  %135 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  store i8 15, i8* %136, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %134, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i64 15, i1 false) #13
  %137 = getelementptr inbounds i8, i8* %134, i64 15
  store i8 0, i8* %137, align 1
  %138 = load i8* (i32)*, i8* (i32)** %75, align 8
  %139 = call i8* %138(i32 7938) #13
  %140 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %6, i8* %139) #13, !noalias !4
  %141 = bitcast %"class.std::__1::basic_string"* %140 to i8*
  %142 = bitcast %"class.std::__1::basic_string"* %140 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %140, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %145 = bitcast i64* %144 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %133, i8* align 8 %145, i64 15, i1 false)
  %146 = getelementptr inbounds i8, i8* %141, i64 23
  %147 = load i8, i8* %146, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %141, i8 0, i64 24, i1 false) #13, !noalias !4
  %148 = getelementptr inbounds %"class.dawn_native::opengl::Adapter", %"class.dawn_native::opengl::Adapter"* %1, i64 0, i32 0, i32 4
  %149 = bitcast %"class.std::__1::basic_string"* %148 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %150 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %149, i64 0, i32 1, i32 0
  %151 = load i8, i8* %150, align 1
  %152 = icmp slt i8 %151, 0
  br i1 %152, label %153, label %156

153:                                              ; preds = %130
  %154 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %148, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load i8*, i8** %154, align 8
  call void @_ZdlPv(i8* %155) #14
  br label %156

156:                                              ; preds = %153, %130
  %157 = getelementptr inbounds %"class.dawn_native::opengl::Adapter", %"class.dawn_native::opengl::Adapter"* %1, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = bitcast i8** %157 to i64*
  store i64 %143, i64* %158, align 8
  %159 = getelementptr inbounds %"class.dawn_native::opengl::Adapter", %"class.dawn_native::opengl::Adapter"* %1, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %160 = bitcast i64* %159 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %160, i8* nonnull align 8 %133, i64 15, i1 false)
  %161 = bitcast %"class.dawn_native::opengl::Adapter"* %1 to i8*
  %162 = getelementptr inbounds i8, i8* %161, i64 71
  store i8 %147, i8* %162, align 1
  %163 = load i8, i8* %136, align 1
  %164 = icmp slt i8 %163, 0
  br i1 %164, label %165, label %168

165:                                              ; preds = %156
  %166 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load i8*, i8** %166, align 8
  call void @_ZdlPv(i8* %167) #14
  br label %168

168:                                              ; preds = %156, %165
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %134) #13
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %133)
  %169 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %170 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %169, i64 0, i32 1, i32 0
  %171 = load i8, i8* %170, align 1
  %172 = icmp slt i8 %171, 0
  br i1 %172, label %173, label %178

173:                                              ; preds = %168
  %174 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load i8*, i8** %174, align 8
  %176 = getelementptr inbounds %"class.dawn_native::opengl::Adapter", %"class.dawn_native::opengl::Adapter"* %1, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %177 = load i64, i64* %176, align 8
  br label %181

178:                                              ; preds = %168
  %179 = bitcast %"class.std::__1::basic_string"* %78 to i8*
  %180 = zext i8 %171 to i64
  br label %181

181:                                              ; preds = %173, %178
  %182 = phi i8* [ %175, %173 ], [ %179, %178 ]
  %183 = phi i64 [ %177, %173 ], [ %180, %178 ]
  %184 = getelementptr inbounds i8, i8* %182, i64 %183
  %185 = ptrtoint i8* %184 to i64
  %186 = ptrtoint i8* %182 to i64
  %187 = icmp slt i64 %183, 11
  br i1 %187, label %212, label %188

188:                                              ; preds = %181, %199
  %189 = phi i64 [ %202, %199 ], [ %183, %181 ]
  %190 = phi i8* [ %200, %199 ], [ %182, %181 ]
  %191 = add nsw i64 %189, -10
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %212, label %193

193:                                              ; preds = %188
  %194 = call i8* @memchr(i8* %190, i32 83, i64 %191) #13
  %195 = icmp eq i8* %194, null
  br i1 %195, label %212, label %196

196:                                              ; preds = %193
  %197 = call i32 @bcmp(i8* nonnull %194, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i64 11) #13
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %204, label %199

199:                                              ; preds = %196
  %200 = getelementptr inbounds i8, i8* %194, i64 1
  %201 = ptrtoint i8* %200 to i64
  %202 = sub i64 %185, %201
  %203 = icmp slt i64 %202, 11
  br i1 %203, label %212, label %188

204:                                              ; preds = %196
  %205 = ptrtoint i8* %194 to i64
  %206 = icmp eq i8* %194, %184
  %207 = sub i64 %205, %186
  %208 = icmp eq i64 %207, -1
  %209 = or i1 %206, %208
  br i1 %209, label %212, label %210

210:                                              ; preds = %204
  %211 = getelementptr inbounds %"class.dawn_native::opengl::Adapter", %"class.dawn_native::opengl::Adapter"* %1, i64 0, i32 0, i32 2
  store i32 2, i32* %211, align 8
  br label %212

212:                                              ; preds = %199, %193, %188, %181, %204, %210
  call void @_ZN11dawn_native6opengl7Adapter29InitializeSupportedExtensionsEv(%"class.dawn_native::opengl::Adapter"* %1)
  %213 = bitcast %class.Result.107* %0 to i64*
  store i64 0, i64* %213, align 8
  br label %214

214:                                              ; preds = %39, %212
  ret void
}

declare void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"*, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.dawn_native::BackendConnection"* @_ZN11dawn_native6opengl7ConnectEPNS_12InstanceBaseEN4wgpu11BackendTypeE(%"class.dawn_native::InstanceBase"*, i32) local_unnamed_addr #0 {
  %3 = tail call i8* @_Znwm(i64 24) #14
  %4 = bitcast i8* %3 to %"class.dawn_native::BackendConnection"*
  tail call void @_ZN11dawn_native17BackendConnectionC2EPNS_12InstanceBaseEN4wgpu11BackendTypeE(%"class.dawn_native::BackendConnection"* nonnull %4, %"class.dawn_native::InstanceBase"* %0, i32 %1) #13
  %5 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native6opengl7BackendE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %3, i64 20
  store i8 0, i8* %6, align 4
  ret %"class.dawn_native::BackendConnection"* %4
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11dawn_native17BackendConnectionD2Ev(%"class.dawn_native::BackendConnection"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11dawn_native6opengl7BackendD0Ev(%"class.dawn_native::opengl::Backend"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.dawn_native::opengl::Backend"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

declare void @_ZN11dawn_native6opengl15OpenGLFunctions10InitializeEPFPvPKcE(%class.Result.107* sret, %"struct.dawn_native::opengl::OpenGLFunctions"*, i8* (i8*)*) local_unnamed_addr #1

declare dereferenceable(12) %"struct.dawn_native::opengl::OpenGLVersion"* @_ZNK11dawn_native6opengl15OpenGLFunctions10GetVersionEv(%"struct.dawn_native::opengl::OpenGLFunctions"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK11dawn_native6opengl13OpenGLVersion4IsESEv(%"struct.dawn_native::opengl::OpenGLVersion"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions11IsAtLeastGLEjj(%"struct.dawn_native::opengl::OpenGLFunctions"*, i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions13IsAtLeastGLESEjj(%"struct.dawn_native::opengl::OpenGLFunctions"*, i32, i32) local_unnamed_addr #1

declare %"class.dawn_native::InstanceBase"* @_ZNK11dawn_native11AdapterBase11GetInstanceEv(%"class.dawn_native::AdapterBase"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK11dawn_native12InstanceBase26IsBackendValidationEnabledEv(%"class.dawn_native::InstanceBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN11dawn_native6opengl12_GLOBAL__N_116OnGLDebugMessageEjjjjiPKcPKv(i32, i32, i32, i32, i32, i8*, i8* nocapture readnone) #0 {
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca %"class.dawn::LogMessage", align 8
  store i32 %2, i32* %8, align 4
  store i8* %5, i8** %9, align 8
  %13 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  switch i32 %0, label %20 [
    i32 33350, label %14
    i32 33351, label %15
    i32 33352, label %16
    i32 33353, label %17
    i32 33354, label %18
    i32 33355, label %19
  ]

14:                                               ; preds = %7
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i8** %10, align 8
  br label %21

15:                                               ; preds = %7
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), i8** %10, align 8
  br label %21

16:                                               ; preds = %7
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0), i8** %10, align 8
  br label %21

17:                                               ; preds = %7
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i64 0, i64 0), i8** %10, align 8
  br label %21

18:                                               ; preds = %7
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0), i8** %10, align 8
  br label %21

19:                                               ; preds = %7
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), i8** %10, align 8
  br label %21

20:                                               ; preds = %7
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0), i8** %10, align 8
  br label %21

21:                                               ; preds = %20, %19, %18, %17, %16, %15, %14
  %22 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %11, align 8
  switch i32 %3, label %27 [
    i32 37190, label %23
    i32 37191, label %24
    i32 37192, label %25
    i32 33387, label %26
  ]

23:                                               ; preds = %21
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i8** %11, align 8
  br label %28

24:                                               ; preds = %21
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i64 0, i64 0), i8** %11, align 8
  br label %28

25:                                               ; preds = %21
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), i8** %11, align 8
  br label %28

26:                                               ; preds = %21
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0), i8** %11, align 8
  br label %28

27:                                               ; preds = %21
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0), i8** %11, align 8
  br label %28

28:                                               ; preds = %27, %26, %25, %24, %23
  %29 = icmp eq i32 %1, 33356
  br i1 %29, label %30, label %41

30:                                               ; preds = %28
  %31 = bitcast %"class.dawn::LogMessage"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %31) #13
  call void @_ZN4dawn10WarningLogEv(%"class.dawn::LogMessage"* nonnull sret %12) #13
  %32 = call dereferenceable(272) %"class.dawn::LogMessage"* @_ZN4dawn10LogMessagelsIRA14_KcEERS0_OT_(%"class.dawn::LogMessage"* nonnull %12, [14 x i8]* nonnull dereferenceable(14) @.str.16)
  %33 = call dereferenceable(272) %"class.dawn::LogMessage"* @_ZN4dawn10LogMessagelsIRA14_KcEERS0_OT_(%"class.dawn::LogMessage"* %32, [14 x i8]* nonnull dereferenceable(14) @.str.17)
  %34 = call dereferenceable(272) %"class.dawn::LogMessage"* @_ZN4dawn10LogMessagelsIRPKcEERS0_OT_(%"class.dawn::LogMessage"* %33, i8** nonnull dereferenceable(8) %10)
  %35 = call dereferenceable(272) %"class.dawn::LogMessage"* @_ZN4dawn10LogMessagelsIRA10_KcEERS0_OT_(%"class.dawn::LogMessage"* %34, [10 x i8]* nonnull dereferenceable(10) @.str.18)
  %36 = call dereferenceable(272) %"class.dawn::LogMessage"* @_ZN4dawn10LogMessagelsIRjEERS0_OT_(%"class.dawn::LogMessage"* %35, i32* nonnull dereferenceable(4) %8)
  %37 = call dereferenceable(272) %"class.dawn::LogMessage"* @_ZN4dawn10LogMessagelsIRA16_KcEERS0_OT_(%"class.dawn::LogMessage"* %36, [16 x i8]* nonnull dereferenceable(16) @.str.19)
  %38 = call dereferenceable(272) %"class.dawn::LogMessage"* @_ZN4dawn10LogMessagelsIRPKcEERS0_OT_(%"class.dawn::LogMessage"* %37, i8** nonnull dereferenceable(8) %11)
  %39 = call dereferenceable(272) %"class.dawn::LogMessage"* @_ZN4dawn10LogMessagelsIRA15_KcEERS0_OT_(%"class.dawn::LogMessage"* %38, [15 x i8]* nonnull dereferenceable(15) @.str.20)
  %40 = call dereferenceable(272) %"class.dawn::LogMessage"* @_ZN4dawn10LogMessagelsIRPKcEERS0_OT_(%"class.dawn::LogMessage"* %39, i8** nonnull dereferenceable(8) %9)
  call void @_ZN4dawn10LogMessageD1Ev(%"class.dawn::LogMessage"* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %31) #13
  unreachable

41:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #13
  ret void
}

declare zeroext i1 @_ZNK11dawn_native6opengl13OpenGLVersion9IsDesktopEv(%"struct.dawn_native::opengl::OpenGLVersion"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11dawn_native6opengl7Adapter29InitializeSupportedExtensionsEv(%"class.dawn_native::opengl::Adapter"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::opengl::Adapter", %"class.dawn_native::opengl::Adapter"* %0, i64 0, i32 1
  %3 = tail call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions22IsGLExtensionSupportedEPKc(%"struct.dawn_native::opengl::OpenGLFunctions"* %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28, i64 0, i64 0)) #13
  br i1 %3, label %10, label %4

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions22IsGLExtensionSupportedEPKc(%"struct.dawn_native::opengl::OpenGLFunctions"* %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.29, i64 0, i64 0)) #13
  br i1 %5, label %6, label %10

6:                                                ; preds = %4
  %7 = tail call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions22IsGLExtensionSupportedEPKc(%"struct.dawn_native::opengl::OpenGLFunctions"* %2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.30, i64 0, i64 0)) #13
  br i1 %7, label %8, label %10

8:                                                ; preds = %6
  %9 = tail call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions22IsGLExtensionSupportedEPKc(%"struct.dawn_native::opengl::OpenGLFunctions"* %2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.31, i64 0, i64 0)) #13
  br label %10

10:                                               ; preds = %4, %6, %8, %1
  %11 = phi i1 [ true, %1 ], [ false, %6 ], [ false, %4 ], [ %9, %8 ]
  %12 = tail call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions22IsGLExtensionSupportedEPKc(%"struct.dawn_native::opengl::OpenGLFunctions"* %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.32, i64 0, i64 0)) #13
  %13 = tail call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions22IsGLExtensionSupportedEPKc(%"struct.dawn_native::opengl::OpenGLFunctions"* %2, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.33, i64 0, i64 0)) #13
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = tail call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions22IsGLExtensionSupportedEPKc(%"struct.dawn_native::opengl::OpenGLFunctions"* %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.34, i64 0, i64 0)) #13
  br label %16

16:                                               ; preds = %14, %10
  %17 = phi i1 [ true, %10 ], [ %15, %14 ]
  %18 = tail call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions11IsAtLeastGLEjj(%"struct.dawn_native::opengl::OpenGLFunctions"* %2, i32 3, i32 0) #13
  br i1 %18, label %24, label %19

19:                                               ; preds = %16
  %20 = tail call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions22IsGLExtensionSupportedEPKc(%"struct.dawn_native::opengl::OpenGLFunctions"* %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.35, i64 0, i64 0)) #13
  br i1 %20, label %24, label %21

21:                                               ; preds = %19
  %22 = tail call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions22IsGLExtensionSupportedEPKc(%"struct.dawn_native::opengl::OpenGLFunctions"* %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.36, i64 0, i64 0)) #13
  %23 = xor i1 %22, true
  br label %24

24:                                               ; preds = %21, %19, %16
  %25 = phi i1 [ false, %19 ], [ false, %16 ], [ %23, %21 ]
  %26 = tail call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions11IsAtLeastGLEjj(%"struct.dawn_native::opengl::OpenGLFunctions"* %2, i32 4, i32 2) #13
  br i1 %26, label %32, label %27

27:                                               ; preds = %24
  %28 = tail call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions22IsGLExtensionSupportedEPKc(%"struct.dawn_native::opengl::OpenGLFunctions"* %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.37, i64 0, i64 0)) #13
  br i1 %28, label %32, label %29

29:                                               ; preds = %27
  %30 = tail call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions22IsGLExtensionSupportedEPKc(%"struct.dawn_native::opengl::OpenGLFunctions"* %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.38, i64 0, i64 0)) #13
  %31 = xor i1 %30, true
  br label %32

32:                                               ; preds = %29, %27, %24
  %33 = phi i1 [ false, %27 ], [ false, %24 ], [ %31, %29 ]
  br i1 %11, label %34, label %41

34:                                               ; preds = %32
  %35 = or i1 %12, %17
  %36 = xor i1 %35, true
  %37 = or i1 %25, %36
  %38 = or i1 %37, %33
  br i1 %38, label %41, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.dawn_native::opengl::Adapter", %"class.dawn_native::opengl::Adapter"* %0, i64 0, i32 0, i32 5
  tail call void @_ZN11dawn_native13ExtensionsSet15EnableExtensionENS_9ExtensionE(%"struct.dawn_native::ExtensionsSet"* %40, i32 0) #13
  br label %41

41:                                               ; preds = %34, %39, %32
  ret void
}

declare void @_ZN4dawn10WarningLogEv(%"class.dawn::LogMessage"* sret) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(272) %"class.dawn::LogMessage"* @_ZN4dawn10LogMessagelsIRA14_KcEERS0_OT_(%"class.dawn::LogMessage"*, [14 x i8]* dereferenceable(14)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dawn::LogMessage", %"class.dawn::LogMessage"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_ostringstream"* %3 to %"class.std::__1::basic_ostream"*
  %5 = getelementptr inbounds [14 x i8], [14 x i8]* %1, i64 0, i64 0
  %6 = tail call i64 @strlen(i8* %5) #13
  %7 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %4, i8* %5, i64 %6) #13
  ret %"class.dawn::LogMessage"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(272) %"class.dawn::LogMessage"* @_ZN4dawn10LogMessagelsIRPKcEERS0_OT_(%"class.dawn::LogMessage"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dawn::LogMessage", %"class.dawn::LogMessage"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_ostringstream"* %3 to %"class.std::__1::basic_ostream"*
  %5 = load i8*, i8** %1, align 8
  %6 = tail call i64 @strlen(i8* %5) #13
  %7 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %4, i8* %5, i64 %6) #13
  ret %"class.dawn::LogMessage"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(272) %"class.dawn::LogMessage"* @_ZN4dawn10LogMessagelsIRA10_KcEERS0_OT_(%"class.dawn::LogMessage"*, [10 x i8]* dereferenceable(10)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dawn::LogMessage", %"class.dawn::LogMessage"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_ostringstream"* %3 to %"class.std::__1::basic_ostream"*
  %5 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %6 = tail call i64 @strlen(i8* %5) #13
  %7 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %4, i8* %5, i64 %6) #13
  ret %"class.dawn::LogMessage"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(272) %"class.dawn::LogMessage"* @_ZN4dawn10LogMessagelsIRjEERS0_OT_(%"class.dawn::LogMessage"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dawn::LogMessage", %"class.dawn::LogMessage"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_ostringstream"* %3 to %"class.std::__1::basic_ostream"*
  %5 = load i32, i32* %1, align 4
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %4, i32 %5) #13
  ret %"class.dawn::LogMessage"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(272) %"class.dawn::LogMessage"* @_ZN4dawn10LogMessagelsIRA16_KcEERS0_OT_(%"class.dawn::LogMessage"*, [16 x i8]* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dawn::LogMessage", %"class.dawn::LogMessage"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_ostringstream"* %3 to %"class.std::__1::basic_ostream"*
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 0
  %6 = tail call i64 @strlen(i8* %5) #13
  %7 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %4, i8* %5, i64 %6) #13
  ret %"class.dawn::LogMessage"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(272) %"class.dawn::LogMessage"* @_ZN4dawn10LogMessagelsIRA15_KcEERS0_OT_(%"class.dawn::LogMessage"*, [15 x i8]* dereferenceable(15)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dawn::LogMessage", %"class.dawn::LogMessage"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_ostringstream"* %3 to %"class.std::__1::basic_ostream"*
  %5 = getelementptr inbounds [15 x i8], [15 x i8]* %1, i64 0, i64 0
  %6 = tail call i64 @strlen(i8* %5) #13
  %7 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %4, i8* %5, i64 %6) #13
  ret %"class.dawn::LogMessage"* %0
}

; Function Attrs: nounwind
declare void @_ZN4dawn10LogMessageD1Ev(%"class.dawn::LogMessage"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #14
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #5

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #8

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nofree nounwind readonly
declare i8* @strstr(i8*, i8* nocapture) local_unnamed_addr #9

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #9

declare zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions22IsGLExtensionSupportedEPKc(%"struct.dawn_native::opengl::OpenGLFunctions"*, i8*) local_unnamed_addr #1

declare void @_ZN11dawn_native13ExtensionsSet15EnableExtensionENS_9ExtensionE(%"struct.dawn_native::ExtensionsSet"*, i32) local_unnamed_addr #1

declare void @_ZN11dawn_native11AdapterBaseC2EPNS_12InstanceBaseEN4wgpu11BackendTypeE(%"class.dawn_native::AdapterBase"*, %"class.dawn_native::InstanceBase"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11dawn_native6opengl7AdapterD2Ev(%"class.dawn_native::opengl::Adapter"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::opengl::Adapter", %"class.dawn_native::opengl::Adapter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native6opengl7AdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dawn_native::opengl::Adapter", %"class.dawn_native::opengl::Adapter"* %0, i64 0, i32 1, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.87"*, %"struct.std::__1::__hash_node_base.87"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.87"* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %1, %18
  %7 = phi %"struct.std::__1::__hash_node_base.87"* [ %9, %18 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.87", %"struct.std::__1::__hash_node_base.87"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.87"*, %"struct.std::__1::__hash_node_base.87"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.87", %"struct.std::__1::__hash_node_base.87"* %7, i64 2
  %11 = bitcast %"struct.std::__1::__hash_node_base.87"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %6
  %16 = bitcast %"struct.std::__1::__hash_node_base.87"* %10 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #14
  br label %18

18:                                               ; preds = %15, %6
  %19 = bitcast %"struct.std::__1::__hash_node_base.87"* %7 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  %20 = icmp eq %"struct.std::__1::__hash_node_base.87"* %9, null
  br i1 %20, label %21, label %6

21:                                               ; preds = %18, %1
  %22 = getelementptr inbounds %"class.dawn_native::opengl::Adapter", %"class.dawn_native::opengl::Adapter"* %0, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.87"**, %"struct.std::__1::__hash_node_base.87"*** %22, align 8
  store %"struct.std::__1::__hash_node_base.87"** null, %"struct.std::__1::__hash_node_base.87"*** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base.87"** %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast %"struct.std::__1::__hash_node_base.87"** %23 to i8*
  tail call void @_ZdlPv(i8* %26) #14
  br label %27

27:                                               ; preds = %21, %25
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native11AdapterBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %28 = getelementptr inbounds %"class.dawn_native::opengl::Adapter", %"class.dawn_native::opengl::Adapter"* %0, i64 0, i32 0, i32 4
  %29 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZdlPv(i8* %35) #14
  br label %36

36:                                               ; preds = %33, %27
  %37 = getelementptr inbounds %"class.dawn_native::opengl::Adapter", %"class.dawn_native::opengl::Adapter"* %0, i64 0, i32 0, i32 1, i32 2
  %38 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  tail call void @_ZdlPv(i8* %44) #14
  br label %45

45:                                               ; preds = %36, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11dawn_native6opengl7AdapterD0Ev(%"class.dawn_native::opengl::Adapter"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN11dawn_native6opengl7AdapterD2Ev(%"class.dawn_native::opengl::Adapter"* %0) #13
  %2 = bitcast %"class.dawn_native::opengl::Adapter"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11dawn_native6opengl7Adapter16CreateDeviceImplEPKNS_16DeviceDescriptorE(%class.Result.115* noalias sret, %"class.dawn_native::opengl::Adapter"*, %"struct.dawn_native::DeviceDescriptor"*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %class.Result.116, align 8
  %5 = bitcast %class.Result.116* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = bitcast %"class.dawn_native::opengl::Adapter"* %1 to %"class.dawn_native::AdapterBase"*
  %7 = getelementptr inbounds %"class.dawn_native::opengl::Adapter", %"class.dawn_native::opengl::Adapter"* %1, i64 0, i32 1
  call void @_ZN11dawn_native6opengl6Device6CreateEPNS_11AdapterBaseEPKNS_16DeviceDescriptorERKNS0_15OpenGLFunctionsE(%class.Result.116* nonnull sret %4, %"class.dawn_native::AdapterBase"* %6, %"struct.dawn_native::DeviceDescriptor"* %2, %"struct.dawn_native::opengl::OpenGLFunctions"* dereferenceable(5664) %7) #13
  %8 = getelementptr inbounds %class.Result.115, %class.Result.115* %0, i64 0, i32 0
  %9 = getelementptr inbounds %class.Result.116, %class.Result.116* %4, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %8, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  ret void
}

declare void @_ZN11dawn_native11AdapterBase33ResetInternalDeviceForTestingImplEv(%class.Result.107* sret, %"class.dawn_native::AdapterBase"*) unnamed_addr #1

declare void @_ZN11dawn_native6opengl6Device6CreateEPNS_11AdapterBaseEPKNS_16DeviceDescriptorERKNS0_15OpenGLFunctionsE(%class.Result.116* sret, %"class.dawn_native::AdapterBase"*, %"struct.dawn_native::DeviceDescriptor"*, %"struct.dawn_native::opengl::OpenGLFunctions"* dereferenceable(5664)) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN11dawn_native11AdapterBaseENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.2"*, %"class.std::__1::unique_ptr.4"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.4"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.4"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.4"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.4"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.4"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.4"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.dawn_native::AdapterBase"* null, %"class.dawn_native::AdapterBase"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.4"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.4"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.4"*, %"class.std::__1::unique_ptr.4"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.4"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.4"*, %"class.std::__1::unique_ptr.4"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.4"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.dawn_native::AdapterBase"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.4"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.4"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.4"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.dawn_native::AdapterBase"* null, %"class.dawn_native::AdapterBase"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.4"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !7

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.4"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.4"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.4"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.4"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.4"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.4"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.dawn_native::AdapterBase"* null, %"class.dawn_native::AdapterBase"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.4"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.4"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.dawn_native::AdapterBase"* null, %"class.dawn_native::AdapterBase"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.4"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.4"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.dawn_native::AdapterBase"* null, %"class.dawn_native::AdapterBase"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.4"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.4"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.dawn_native::AdapterBase"* null, %"class.dawn_native::AdapterBase"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.4"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.4"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.dawn_native::AdapterBase"* null, %"class.dawn_native::AdapterBase"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.4"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.4"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.dawn_native::AdapterBase"* null, %"class.dawn_native::AdapterBase"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.4"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.4"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.dawn_native::AdapterBase"* null, %"class.dawn_native::AdapterBase"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.4"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.4"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.dawn_native::AdapterBase"* null, %"class.dawn_native::AdapterBase"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.4"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.4"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.4"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.4"*, %"class.std::__1::unique_ptr.4"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.4"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.4"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.4"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.4"*
  %138 = icmp eq %"class.std::__1::unique_ptr.4"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.4"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.dawn_native::AdapterBase"*, %"class.dawn_native::AdapterBase"** %142, align 8
  store %"class.dawn_native::AdapterBase"* null, %"class.dawn_native::AdapterBase"** %142, align 8
  %144 = icmp eq %"class.dawn_native::AdapterBase"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.dawn_native::AdapterBase"* %143 to void (%"class.dawn_native::AdapterBase"*)***
  %147 = load void (%"class.dawn_native::AdapterBase"*)**, void (%"class.dawn_native::AdapterBase"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.dawn_native::AdapterBase"*)*, void (%"class.dawn_native::AdapterBase"*)** %147, i64 1
  %149 = load void (%"class.dawn_native::AdapterBase"*)*, void (%"class.dawn_native::AdapterBase"*)** %148, align 8
  tail call void %149(%"class.dawn_native::AdapterBase"* nonnull %143) #13
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.4"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #14
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone }
attributes #9 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind readonly }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
