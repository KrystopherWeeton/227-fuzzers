; ModuleID = '../../third_party/blink/renderer/core/page/plugin_data.cc'
source_filename = "../../third_party/blink/renderer/core/page/plugin_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.203" }
%"struct.std::__1::atomic.203" = type { %"struct.std::__1::__atomic_base.204" }
%"struct.std::__1::__atomic_base.204" = type { %"struct.std::__1::__atomic_base.205" }
%"struct.std::__1::__atomic_base.205" = type { %"struct.std::__1::__cxx_atomic_impl.206" }
%"struct.std::__1::__cxx_atomic_impl.206" = type { %"struct.std::__1::__cxx_atomic_base_impl.207" }
%"struct.std::__1::__cxx_atomic_base_impl.207" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.142", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.158", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.176", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.183", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.122", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__cxx_atomic_impl.45" }
%"struct.std::__1::__cxx_atomic_impl.45" = type { %"struct.std::__1::__cxx_atomic_base_impl.46" }
%"struct.std::__1::__cxx_atomic_base_impl.46" = type { i64 }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.blink::Worklist.53"* }
%"class.blink::Worklist.53" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.blink::Worklist.60"* }
%"class.blink::Worklist.60" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::Worklist.67"* }
%"class.blink::Worklist.67" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::Worklist.74"* }
%"class.blink::Worklist.74" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::Worklist.81"* }
%"class.blink::Worklist.81" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::Worklist.88"* }
%"class.blink::Worklist.88" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist.95"* }
%"class.blink::Worklist.95" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.102", %"class.std::__1::__compressed_pair.109", %"class.std::__1::__compressed_pair.114", %"class.std::__1::__compressed_pair.116", [4 x i8] }>
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104", %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { i64 }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { float }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.125", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.134" }
%"class.WTF::Vector.134" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.150" }
%"class.WTF::VectorBuffer.150" = type { %"class.WTF::VectorBufferBase.151" }
%"class.WTF::VectorBufferBase.151" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.164" }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.53"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.60"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.67"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.74"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.81"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.187" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.182 }
%class.scoped_refptr.182 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.183" = type { %"struct.std::__1::__atomic_base.184" }
%"struct.std::__1::__atomic_base.184" = type { %"struct.std::__1::__cxx_atomic_impl.185" }
%"struct.std::__1::__cxx_atomic_impl.185" = type { %"struct.std::__1::__cxx_atomic_base_impl.186" }
%"struct.std::__1::__cxx_atomic_base_impl.186" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::MimeClassInfo" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector", %"class.blink::Member" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::PluginInfo"* }
%"class.blink::PluginInfo" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.blink::Color", i8, %"class.blink::HeapVector" }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.5" }
%"class.WTF::Vector.5" = type { %"class.WTF::VectorBuffer.6" }
%"class.WTF::VectorBuffer.6" = type { %"class.WTF::VectorBufferBase.7" }
%"class.WTF::VectorBufferBase.7" = type { %"class.blink::Member.8"*, i32, i32 }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::MimeClassInfo"* }
%"class.blink::PluginData" = type { %"class.blink::HeapVector.194", %"class.blink::HeapVector", %class.scoped_refptr.201 }
%"class.blink::HeapVector.194" = type { %"class.WTF::Vector.197" }
%"class.WTF::Vector.197" = type { %"class.WTF::VectorBuffer.198" }
%"class.WTF::VectorBuffer.198" = type { %"class.WTF::VectorBufferBase.199" }
%"class.WTF::VectorBufferBase.199" = type { %"class.blink::Member"*, i32, i32 }
%class.scoped_refptr.201 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.201 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.379" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.202, %"class.std::__1::unique_ptr.329", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.208, i32 }>
%class.scoped_refptr.202 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.208, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.295", %"class.absl::optional.300", %"class.absl::optional.256", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.320", i8, [7 x i8], %class.scoped_refptr.208, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.203" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.212 }
%union.anon.212 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.216", %"class.std::__1::unique_ptr.222", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.228 }
%class.scoped_refptr.228 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.229", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.229" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.230" }
%"struct.std::__1::atomic.230" = type { %"struct.std::__1::__atomic_base.231" }
%"struct.std::__1::__atomic_base.231" = type { %"struct.std::__1::__atomic_base.232" }
%"struct.std::__1::__atomic_base.232" = type { %"struct.std::__1::__cxx_atomic_impl.233" }
%"struct.std::__1::__cxx_atomic_impl.233" = type { %"struct.std::__1::__cxx_atomic_base_impl.234" }
%"struct.std::__1::__cxx_atomic_base_impl.234" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.208, %"class.std::__1::unique_ptr.237", %"class.absl::optional.246", %"struct.std::__1::atomic.183", i8, i8, i8, i8, i32, i32, %"class.absl::optional.256", %"class.std::__1::unique_ptr.261", i8, i64, %class.scoped_refptr.291, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.294" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.235 }
%class.scoped_refptr.235 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.236", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.236" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.208, i8, %"class.mojo::ScopedHandleBase.240", %class.scoped_refptr.241, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.242" }
%"class.mojo::ScopedHandleBase.240" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.241 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.242" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.246" = type { %"class.absl::optional_internal::optional_data.247" }
%"class.absl::optional_internal::optional_data.247" = type { %"class.absl::optional_internal::optional_data_base.248" }
%"class.absl::optional_internal::optional_data_base.248" = type { %"class.absl::optional_internal::optional_data_dtor_base.249" }
%"class.absl::optional_internal::optional_data_dtor_base.249" = type { i8, %union.anon.250 }
%union.anon.250 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.251", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.251" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.264", i8, i64, %class.scoped_refptr.265, %class.scoped_refptr.287 }
%"class.base::RepeatingCallback.264" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.265 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.266", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.276", i8, [7 x i8] }>
%"class.base::RefCounted.266" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.267 }
%class.scoped_refptr.267 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"class.std::__1::map.276" = type { %"class.std::__1::__tree.277" }
%"class.std::__1::__tree.277" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.278", %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%class.scoped_refptr.287 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.291 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.292 }
%class.scoped_refptr.292 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.385", [4 x i8], %"class.base::RepeatingCallback.332", %class.scoped_refptr.208, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.385" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.332" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.293 }
%class.scoped_refptr.293 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.294" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.295" = type { %"class.absl::optional_internal::optional_data.296" }
%"class.absl::optional_internal::optional_data.296" = type { %"class.absl::optional_internal::optional_data_base.297" }
%"class.absl::optional_internal::optional_data_base.297" = type { %"class.absl::optional_internal::optional_data_dtor_base.298" }
%"class.absl::optional_internal::optional_data_dtor_base.298" = type { i8, %union.anon.299 }
%union.anon.299 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.300" = type { %"class.absl::optional_internal::optional_data.301" }
%"class.absl::optional_internal::optional_data.301" = type { %"class.absl::optional_internal::optional_data_base.302" }
%"class.absl::optional_internal::optional_data_base.302" = type { %"class.absl::optional_internal::optional_data_dtor_base.303" }
%"class.absl::optional_internal::optional_data_dtor_base.303" = type { i8, [7 x i8], %union.anon.304 }
%union.anon.304 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.256" = type { %"class.absl::optional_internal::optional_data.257" }
%"class.absl::optional_internal::optional_data.257" = type { %"class.absl::optional_internal::optional_data_base.258" }
%"class.absl::optional_internal::optional_data_base.258" = type { %"class.absl::optional_internal::optional_data_dtor_base.259" }
%"class.absl::optional_internal::optional_data_dtor_base.259" = type { i8, %union.anon.260 }
%union.anon.260 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.305 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.305 = type { %"class.std::__1::map.308" }
%"class.std::__1::map.308" = type { %"class.std::__1::__tree.309" }
%"class.std::__1::__tree.309" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.310", %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.319"*, i64 }
%"class.std::__1::unique_ptr.319" = type opaque
%"class.std::__1::map.320" = type { %"class.std::__1::__tree.321" }
%"class.std::__1::__tree.321" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.322", %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.332", %"class.base::OnceCallback.333", %"class.absl::optional.334", %"class.absl::optional.339", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.346", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.354", %"class.std::__1::map.365", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.374", i8, %class.scoped_refptr.208, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.375" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.333" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.334" = type { %"class.absl::optional_internal::optional_data.335" }
%"class.absl::optional_internal::optional_data.335" = type { %"class.absl::optional_internal::optional_data_base.336" }
%"class.absl::optional_internal::optional_data_base.336" = type { %"class.absl::optional_internal::optional_data_dtor_base.337" }
%"class.absl::optional_internal::optional_data_dtor_base.337" = type { i8, %union.anon.338 }
%union.anon.338 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.339" = type { %"class.absl::optional_internal::optional_data.340" }
%"class.absl::optional_internal::optional_data.340" = type { %"class.absl::optional_internal::optional_data_base.341" }
%"class.absl::optional_internal::optional_data_base.341" = type { %"class.absl::optional_internal::optional_data_dtor_base.342" }
%"class.absl::optional_internal::optional_data_dtor_base.342" = type { i8, %union.anon.343 }
%union.anon.343 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.208, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.344" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.344" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.349", %class.scoped_refptr.350 }
%"class.base::RepeatingCallback.349" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.350 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.354" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"class.std::__1::map.365" = type { %"class.std::__1::__tree.366" }
%"class.std::__1::__tree.366" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.367", %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"class.base::OnceCallback.374" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.375" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.208 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.209" }>
%"class.base::RefCountedThreadSafe.209" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"class.blink::mojom::blink::PluginRegistryProxy"* }
%"class.blink::mojom::blink::PluginRegistryProxy" = type { %"class.blink::mojom::blink::PluginRegistry", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PluginRegistry" = type { i32 (...)** }
%"class.mojo::GenericPendingReceiver" = type <{ %"class.absl::optional.398", %"class.mojo::ScopedHandleBase", [4 x i8] }>
%"class.absl::optional.398" = type { %"class.absl::optional_internal::optional_data.399" }
%"class.absl::optional_internal::optional_data.399" = type { %"class.absl::optional_internal::optional_data_base.400" }
%"class.absl::optional_internal::optional_data_base.400" = type { %"class.absl::optional_internal::optional_data_dtor_base.401" }
%"class.absl::optional_internal::optional_data_dtor_base.401" = type { i8, %union.anon.402 }
%union.anon.402 = type { %"class.std::__1::basic_string" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.WTF::Vector.403" = type { %"class.WTF::VectorBuffer.404" }
%"class.WTF::VectorBuffer.404" = type { %"class.WTF::VectorBufferBase.405" }
%"class.WTF::VectorBufferBase.405" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.406" }
%"class.std::__1::unique_ptr.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.blink::mojom::blink::PluginInfo"* }
%"class.blink::mojom::blink::PluginInfo" = type <{ %"class.WTF::String", %"class.WTF::String", %"class.base::FilePath", i32, [4 x i8], %"class.WTF::Vector.409", i8, [7 x i8] }>
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.WTF::Vector.409" = type { %"class.WTF::VectorBuffer.410" }
%"class.WTF::VectorBuffer.410" = type { %"class.WTF::VectorBufferBase.411" }
%"class.WTF::VectorBufferBase.411" = type { %"class.mojo::StructPtr.412"*, i32, i32 }
%"class.mojo::StructPtr.412" = type { %"class.std::__1::unique_ptr.413" }
%"class.std::__1::unique_ptr.413" = type { %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"class.blink::mojom::blink::PluginMimeType"* }
%"class.blink::mojom::blink::PluginMimeType" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector" }
%"class.mojo::internal::InterfacePtrStateBase" = type <{ %class.scoped_refptr.202, %"class.std::__1::unique_ptr.329", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.208, i32, [4 x i8] }>
%"class.blink::Platform" = type { i32 (...)** }
%"class.blink::ThreadSafeBrowserInterfaceBrokerProxy" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.386", %"class.base::Lock", %"class.std::__1::map.387" }
%"class.base::RefCountedThreadSafe.386" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::map.387" = type { %"class.std::__1::__tree.388" }
%"class.std::__1::__tree.388" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.389", %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%struct.MojoCreateMessagePipeOptions = type { i32, i32 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.209", [4 x i8] }>
%"class.blink::HeapVectorBacking.463" = type { i8 }

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_ = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN5blink10TraceTraitINS_10PluginInfoEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13MimeClassInfoEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13MimeClassInfoEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13MimeClassInfoEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13MimeClassInfoEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13MimeClassInfoEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13MimeClassInfoEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13MimeClassInfoEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_13MimeClassInfoEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13MimeClassInfoEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_13MimeClassInfoEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_10PluginInfoEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN4mojo6RemoteIN5blink5mojom5blink14PluginRegistryEE26BindNewPipeAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4mojo6RemoteIN5blink5mojom5blink14PluginRegistryEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_10PluginInfoEEEPhm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_10PluginInfoEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_10PluginInfoEE7GetNameEPKv = comdat any

$_ZN5blink8internal18FinalizerTraitImplINS_10PluginInfoELb1EE10Destructor4CallEPv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_10PluginInfoEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_10PluginInfoEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_10PluginInfoEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_10PluginInfoEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_10PluginInfoEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_10PluginInfoEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_10PluginInfoEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_13MimeClassInfoEEEPhm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_13MimeClassInfoEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_13MimeClassInfoEE7GetNameEPKv = comdat any

$_ZN5blink13MimeClassInfoD2Ev = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_ = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13MimeClassInfoEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13MimeClassInfoEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_10PluginInfoEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_10PluginInfoEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10PluginInfoEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10PluginInfoEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_13MimeClassInfoEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_13MimeClassInfoEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.5 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13MimeClassInfoEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13MimeClassInfoEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13MimeClassInfoEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13MimeClassInfoEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.8 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13MimeClassInfoEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [167 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::MimeClassInfo>, WTF::VectorTraits<blink::Member<blink::MimeClassInfo> > >]\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZN5blink5mojom5blink14PluginRegistry5Name_E = external constant [0 x i8], align 1
@_ZTVN5blink5mojom5blink31PluginRegistryResponseValidatorE = external unnamed_addr constant { [6 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10PluginInfoEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::PluginInfo]\00", align 1
@_ZZN5blink11GCInfoTraitINS_10PluginInfoEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_10PluginInfoEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_10PluginInfoEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_10PluginInfoEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_10PluginInfoEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10PluginInfoEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_10PluginInfoEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_10PluginInfoEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10PluginInfoEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_10PluginInfoEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [161 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::PluginInfo>, WTF::VectorTraits<blink::Member<blink::PluginInfo> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13MimeClassInfoEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::MimeClassInfo]\00", align 1
@_ZZN5blink11GCInfoTraitINS_13MimeClassInfoEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_13MimeClassInfoEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_13MimeClassInfoEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_13MimeClassInfoEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_13MimeClassInfoEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.12 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1

@_ZN5blink13MimeClassInfoC1ERKN3WTF6StringES4_RNS_10PluginInfoE = hidden unnamed_addr alias void (%"class.blink::MimeClassInfo"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::PluginInfo"*), void (%"class.blink::MimeClassInfo"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::PluginInfo"*)* @_ZN5blink13MimeClassInfoC2ERKN3WTF6StringES4_RNS_10PluginInfoE
@_ZN5blink10PluginInfoC1ERKN3WTF6StringES4_S4_NS_5ColorEb = hidden unnamed_addr alias void (%"class.blink::PluginInfo"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32, i1), void (%"class.blink::PluginInfo"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32, i1)* @_ZN5blink10PluginInfoC2ERKN3WTF6StringES4_S4_NS_5ColorEb

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13MimeClassInfo5TraceEPNS_7VisitorE(%"class.blink::MimeClassInfo"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10PluginInfoEE5TraceEPNS_7VisitorEPKv) #12
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13MimeClassInfoC2ERKN3WTF6StringES4_RNS_10PluginInfoE(%"class.blink::MimeClassInfo"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::PluginInfo"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %7, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #12
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !2

23:                                               ; preds = %14
  tail call void @llvm.trap() #12
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %4, %9, %24
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %29, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %30, label %48, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %48

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i33
  %40 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #12
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !2

45:                                               ; preds = %36
  tail call void @llvm.trap() #12
  unreachable

46:                                               ; preds = %36
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %37, align 4
  br label %48

48:                                               ; preds = %26, %31, %46
  %49 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %0, i64 0, i32 2
  %50 = bitcast %"class.WTF::Vector"* %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 16, i1 false) #12
  %51 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::PluginInfo"* %3, %"class.blink::PluginInfo"** %51, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10PluginInfo5TraceEPNS_7VisitorE(%"class.blink::PluginInfo"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %0, i64 0, i32 5
  %4 = bitcast %"class.blink::HeapVector"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast %"class.blink::HeapVector"* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #12
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13MimeClassInfoEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #12
  br label %18

18:                                               ; preds = %2, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10PluginInfoC2ERKN3WTF6StringES4_S4_NS_5ColorEb(%"class.blink::PluginInfo"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), i32, i1 zeroext) unnamed_addr #0 align 2 {
  %7 = zext i1 %5 to i8
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #12
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #12
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %6, %12, %27
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %32, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %33, label %51, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i33
  %43 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %42, i33 1) #12
  %44 = extractvalue { i33, i1 } %43, 1
  %45 = extractvalue { i33, i1 } %43, 0
  %46 = icmp slt i33 %45, 0
  %47 = or i1 %44, %46
  br i1 %47, label %48, label %49, !prof !2

48:                                               ; preds = %39
  tail call void @llvm.trap() #12
  unreachable

49:                                               ; preds = %39
  %50 = trunc i33 %45 to i32
  store i32 %50, i32* %40, align 4
  br label %51

51:                                               ; preds = %29, %34, %49
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %54, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %55, label %73, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %73

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i33
  %65 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %64, i33 1) #12
  %66 = extractvalue { i33, i1 } %65, 1
  %67 = extractvalue { i33, i1 } %65, 0
  %68 = icmp slt i33 %67, 0
  %69 = or i1 %66, %68
  br i1 %69, label %70, label %71, !prof !2

70:                                               ; preds = %61
  tail call void @llvm.trap() #12
  unreachable

71:                                               ; preds = %61
  %72 = trunc i33 %67 to i32
  store i32 %72, i32* %62, align 4
  br label %73

73:                                               ; preds = %51, %56, %71
  %74 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %0, i64 0, i32 3, i32 0
  store i32 %4, i32* %74, align 8
  %75 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %0, i64 0, i32 4
  store i8 %7, i8* %75, align 4
  %76 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %0, i64 0, i32 5
  %77 = bitcast %"class.blink::HeapVector"* %76 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 16, i1 false) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10PluginInfo11AddMimeTypeEPNS_13MimeClassInfoE(%"class.blink::PluginInfo"*, %"class.blink::MimeClassInfo"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::MimeClassInfo"*, align 8
  store %"class.blink::MimeClassInfo"* %1, %"class.blink::MimeClassInfo"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %0, i64 0, i32 5, i32 0
  %5 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %25, label %10, !prof !2

10:                                               ; preds = %2
  %11 = ptrtoint %"class.blink::MimeClassInfo"* %1 to i64
  %12 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %4, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::Member.8"*, %"class.blink::Member.8"** %12, align 8
  %14 = zext i32 %6 to i64
  %15 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %13, i64 %14
  %16 = bitcast %"class.blink::Member.8"* %15 to i64*
  store atomic i64 %11, i64* %16 monotonic, align 8
  %17 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %10
  %20 = bitcast %"class.blink::MimeClassInfo"* %1 to i8*
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #12
  br label %22

22:                                               ; preds = %19, %10
  %23 = load i32, i32* %5, align 4
  %24 = add i32 %23, 1
  store i32 %24, i32* %5, align 4
  br label %26

25:                                               ; preds = %2
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13MimeClassInfoEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.5"* %4, %"class.blink::MimeClassInfo"** nonnull dereferenceable(8) %3) #12
  br label %26

26:                                               ; preds = %22, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MimeClassInfo"* @_ZNK5blink10PluginInfo16GetMimeClassInfoEj(%"class.blink::PluginInfo"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp ugt i32 %4, %1
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %0, i64 0, i32 5, i32 0
  %8 = tail call dereferenceable(8) %"class.blink::Member.8"* @_ZNK3WTF6VectorIN5blink6MemberINS1_13MimeClassInfoEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.5"* %7, i32 %1) #12
  %9 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %9, align 8
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi %"class.blink::MimeClassInfo"* [ %10, %6 ], [ null, %2 ]
  ret %"class.blink::MimeClassInfo"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MimeClassInfo"* @_ZNK5blink10PluginInfo16GetMimeClassInfoERKN3WTF6StringE(%"class.blink::PluginInfo"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Member.8"*, %"class.blink::Member.8"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %23, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  br label %14

12:                                               ; preds = %14
  %13 = icmp eq %"class.blink::Member.8"* %22, %8
  br i1 %13, label %23, label %14

14:                                               ; preds = %10, %12
  %15 = phi %"class.blink::Member.8"* [ %4, %10 ], [ %22, %12 ]
  %16 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %21 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"* %20) #12
  %22 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %15, i64 1
  br i1 %21, label %23, label %12

23:                                               ; preds = %12, %14, %2
  %24 = phi %"class.blink::MimeClassInfo"* [ null, %2 ], [ %17, %14 ], [ null, %12 ]
  ret %"class.blink::MimeClassInfo"* %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink10PluginInfo20GetMimeClassInfoSizeEv(%"class.blink::PluginInfo"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10PluginData5TraceEPNS_7VisitorE(%"class.blink::PluginData"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::PluginData"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast %"class.blink::PluginData"* %0 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #12
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %1, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_10PluginInfoEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #12
  br label %17

17:                                               ; preds = %2, %11
  %18 = getelementptr inbounds %"class.blink::PluginData", %"class.blink::PluginData"* %0, i64 0, i32 1
  %19 = bitcast %"class.blink::HeapVector"* %18 to i64*
  %20 = load atomic i64, i64* %19 monotonic, align 8
  %21 = icmp eq i64 %20, 0
  %22 = bitcast %"class.blink::HeapVector"* %18 to i8**
  %23 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %24 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %23, i64 11
  %25 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %24, align 8
  tail call void %25(%"class.blink::Visitor"* %1, i8** %22) #12
  br i1 %21, label %32, label %26

26:                                               ; preds = %17
  %27 = inttoptr i64 %20 to i8*
  %28 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %29 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %29, i64 5
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %30, align 8
  tail call void %31(%"class.blink::Visitor"* %1, i8* nonnull %27, i8* nonnull %27, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13MimeClassInfoEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #12
  br label %32

32:                                               ; preds = %17, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10PluginData29RefreshBrowserSidePluginCacheEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.mojo::ScopedHandleBase", align 4
  %2 = alloca %"class.mojo::Remote", align 8
  %3 = alloca %"class.mojo::GenericPendingReceiver", align 8
  %4 = alloca %"class.mojo::PendingReceiver", align 8
  %5 = alloca %"class.WTF::Vector.403", align 8
  %6 = alloca %class.scoped_refptr.201, align 8
  %7 = bitcast %"class.mojo::Remote"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false)
  %8 = bitcast %"class.mojo::Remote"* %2 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %8) #12
  %9 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %2, i64 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::unique_ptr.379"* %9 to i64*
  store i64 0, i64* %10, align 8
  %11 = call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #12
  %12 = bitcast %"class.blink::Platform"* %11 to %"class.blink::ThreadSafeBrowserInterfaceBrokerProxy"* (%"class.blink::Platform"*)***
  %13 = load %"class.blink::ThreadSafeBrowserInterfaceBrokerProxy"* (%"class.blink::Platform"*)**, %"class.blink::ThreadSafeBrowserInterfaceBrokerProxy"* (%"class.blink::Platform"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ThreadSafeBrowserInterfaceBrokerProxy"* (%"class.blink::Platform"*)*, %"class.blink::ThreadSafeBrowserInterfaceBrokerProxy"* (%"class.blink::Platform"*)** %13, i64 95
  %15 = load %"class.blink::ThreadSafeBrowserInterfaceBrokerProxy"* (%"class.blink::Platform"*)*, %"class.blink::ThreadSafeBrowserInterfaceBrokerProxy"* (%"class.blink::Platform"*)** %14, align 8
  %16 = call %"class.blink::ThreadSafeBrowserInterfaceBrokerProxy"* %15(%"class.blink::Platform"* %11) #12
  call void @_ZN4mojo6RemoteIN5blink5mojom5blink14PluginRegistryEE26BindNewPipeAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::PendingReceiver"* nonnull sret %4, %"class.mojo::Remote"* nonnull %2, %"class.base::SequencedTaskRunner"* null) #12
  %17 = bitcast %"class.mojo::ScopedHandleBase"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17)
  %18 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink14PluginRegistry5Name_E, i64 0, i64 0)) #12
  %19 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %1, i64 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 8, !noalias !3
  store i32 %21, i32* %19, align 4, !alias.scope !3
  store i32 0, i32* %20, align 8, !noalias !3
  call void @_ZN4mojo22GenericPendingReceiverC2EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"class.mojo::GenericPendingReceiver"* nonnull %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink14PluginRegistry5Name_E, i64 0, i64 0), i64 %18, %"class.mojo::ScopedHandleBase"* nonnull %1) #12
  %22 = load i32, i32* %19, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %0
  %25 = call i32 @MojoClose(i32 %22) #12
  br label %26

26:                                               ; preds = %0, %24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17)
  call void @_ZN5blink37ThreadSafeBrowserInterfaceBrokerProxy12GetInterfaceEN4mojo22GenericPendingReceiverE(%"class.blink::ThreadSafeBrowserInterfaceBrokerProxy"* %16, %"class.mojo::GenericPendingReceiver"* nonnull %3) #12
  call void @_ZN4mojo22GenericPendingReceiverD1Ev(%"class.mojo::GenericPendingReceiver"* nonnull %3) #12
  %27 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %4, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %27) #12
  %28 = bitcast %"class.WTF::Vector.403"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #12
  %29 = getelementptr inbounds %"class.WTF::Vector.403", %"class.WTF::Vector.403"* %5, i64 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.WTF::Vector.403", %"class.WTF::Vector.403"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 16, i1 false) #12
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.379", %"class.std::__1::unique_ptr.379"* %9, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::mojom::blink::PluginRegistryProxy"*, %"class.blink::mojom::blink::PluginRegistryProxy"** %31, align 8
  %33 = icmp eq %"class.blink::mojom::blink::PluginRegistryProxy"* %32, null
  br i1 %33, label %34, label %53

34:                                               ; preds = %26
  %35 = call i8* @_Znwm(i64 8) #13
  %36 = bitcast i8* %35 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink31PluginRegistryResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = bitcast i8* %35 to %"class.mojo::MessageReceiver"*
  %38 = call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %8, i1 zeroext false, i1 zeroext true, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %37, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink14PluginRegistry5Name_E, i64 0, i64 0)) #12
  br i1 %38, label %39, label %53

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %41 = bitcast %"class.mojo::InterfaceEndpointClient"** %40 to %"class.mojo::MessageReceiverWithResponder"**
  %42 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %41, align 8
  %43 = call i8* @_Znwm(i64 16) #13
  %44 = bitcast i8* %43 to %"class.blink::mojom::blink::PluginRegistryProxy"*
  call void @_ZN5blink5mojom5blink19PluginRegistryProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::PluginRegistryProxy"* nonnull %44, %"class.mojo::MessageReceiverWithResponder"* %42) #12
  %45 = ptrtoint i8* %43 to i64
  %46 = load %"class.blink::mojom::blink::PluginRegistryProxy"*, %"class.blink::mojom::blink::PluginRegistryProxy"** %31, align 8
  store i64 %45, i64* %10, align 8
  %47 = icmp eq %"class.blink::mojom::blink::PluginRegistryProxy"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %39
  %49 = bitcast %"class.blink::mojom::blink::PluginRegistryProxy"* %46 to void (%"class.blink::mojom::blink::PluginRegistryProxy"*)***
  %50 = load void (%"class.blink::mojom::blink::PluginRegistryProxy"*)**, void (%"class.blink::mojom::blink::PluginRegistryProxy"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.blink::mojom::blink::PluginRegistryProxy"*)*, void (%"class.blink::mojom::blink::PluginRegistryProxy"*)** %50, i64 1
  %52 = load void (%"class.blink::mojom::blink::PluginRegistryProxy"*)*, void (%"class.blink::mojom::blink::PluginRegistryProxy"*)** %51, align 8
  call void %52(%"class.blink::mojom::blink::PluginRegistryProxy"* nonnull %46) #12
  br label %53

53:                                               ; preds = %26, %34, %39, %48
  %54 = load %"class.blink::mojom::blink::PluginRegistryProxy"*, %"class.blink::mojom::blink::PluginRegistryProxy"** %31, align 8
  %55 = bitcast %class.scoped_refptr.201* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #12
  %56 = call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin18CreateUniqueOpaqueEv() #12
  %57 = ptrtoint %"class.blink::SecurityOrigin"* %56 to i64
  %58 = bitcast %class.scoped_refptr.201* %6 to i64*
  store i64 %57, i64* %58, align 8
  %59 = call zeroext i1 @_ZN5blink5mojom5blink19PluginRegistryProxy10GetPluginsEbRK13scoped_refptrIKNS_14SecurityOriginEEPN3WTF6VectorIN4mojo9StructPtrINS1_10PluginInfoEEELj0ENS9_18PartitionAllocatorEEE(%"class.blink::mojom::blink::PluginRegistryProxy"* %54, i1 zeroext true, %class.scoped_refptr.201* nonnull dereferenceable(8) %6, %"class.WTF::Vector.403"* nonnull %5) #12
  %60 = getelementptr inbounds %class.scoped_refptr.201, %class.scoped_refptr.201* %6, i64 0, i32 0
  %61 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %60, align 8
  %62 = icmp eq %"class.blink::SecurityOrigin"* %61, null
  br i1 %62, label %70, label %63

63:                                               ; preds = %53
  %64 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %61, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %64) #12
  %65 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %63
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %61) #12
  %69 = bitcast %"class.blink::SecurityOrigin"* %61 to i8*
  call void @free(i8* %69) #12
  br label %70

70:                                               ; preds = %68, %63, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #12
  %71 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %29, align 8
  %72 = icmp eq %"class.mojo::StructPtr"* %71, null
  br i1 %72, label %95, label %73, !prof !8

73:                                               ; preds = %70
  %74 = bitcast %"class.mojo::StructPtr"* %71 to i8*
  %75 = load i32, i32* %30, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %93, label %77, !prof !2

77:                                               ; preds = %73
  %78 = zext i32 %75 to i64
  %79 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %71, i64 %78
  br label %80

80:                                               ; preds = %87, %77
  %81 = phi %"class.mojo::StructPtr"* [ %88, %87 ], [ %71, %77 ]
  %82 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %81, i64 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"class.blink::mojom::blink::PluginInfo"*, %"class.blink::mojom::blink::PluginInfo"** %82, align 8
  store %"class.blink::mojom::blink::PluginInfo"* null, %"class.blink::mojom::blink::PluginInfo"** %82, align 8
  %84 = icmp eq %"class.blink::mojom::blink::PluginInfo"* %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %80
  call void @_ZN5blink5mojom5blink10PluginInfoD1Ev(%"class.blink::mojom::blink::PluginInfo"* nonnull %83) #12
  %86 = bitcast %"class.blink::mojom::blink::PluginInfo"* %83 to i8*
  call void @_ZdlPv(i8* %86) #13
  br label %87

87:                                               ; preds = %85, %80
  %88 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %81, i64 1
  %89 = icmp eq %"class.mojo::StructPtr"* %88, %79
  br i1 %89, label %90, label %80

90:                                               ; preds = %87
  store i32 0, i32* %30, align 4
  %91 = bitcast %"class.WTF::Vector.403"* %5 to i8**
  %92 = load i8*, i8** %91, align 8
  br label %93

93:                                               ; preds = %90, %73
  %94 = phi i8* [ %92, %90 ], [ %74, %73 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %94) #12
  store %"class.mojo::StructPtr"* null, %"class.mojo::StructPtr"** %29, align 8
  br label %95

95:                                               ; preds = %70, %93
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #12
  %96 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %97 = load %"class.blink::mojom::blink::PluginRegistryProxy"*, %"class.blink::mojom::blink::PluginRegistryProxy"** %96, align 8
  store %"class.blink::mojom::blink::PluginRegistryProxy"* null, %"class.blink::mojom::blink::PluginRegistryProxy"** %96, align 8
  %98 = icmp eq %"class.blink::mojom::blink::PluginRegistryProxy"* %97, null
  br i1 %98, label %104, label %99

99:                                               ; preds = %95
  %100 = bitcast %"class.blink::mojom::blink::PluginRegistryProxy"* %97 to void (%"class.blink::mojom::blink::PluginRegistryProxy"*)***
  %101 = load void (%"class.blink::mojom::blink::PluginRegistryProxy"*)**, void (%"class.blink::mojom::blink::PluginRegistryProxy"*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.blink::mojom::blink::PluginRegistryProxy"*)*, void (%"class.blink::mojom::blink::PluginRegistryProxy"*)** %101, i64 1
  %103 = load void (%"class.blink::mojom::blink::PluginRegistryProxy"*)*, void (%"class.blink::mojom::blink::PluginRegistryProxy"*)** %102, align 8
  call void %103(%"class.blink::mojom::blink::PluginRegistryProxy"* nonnull %97) #12
  br label %104

104:                                              ; preds = %95, %99
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() local_unnamed_addr #3

declare void @_ZN5blink37ThreadSafeBrowserInterfaceBrokerProxy12GetInterfaceEN4mojo22GenericPendingReceiverE(%"class.blink::ThreadSafeBrowserInterfaceBrokerProxy"*, %"class.mojo::GenericPendingReceiver"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo22GenericPendingReceiverD1Ev(%"class.mojo::GenericPendingReceiver"*) unnamed_addr #4

declare zeroext i1 @_ZN5blink5mojom5blink19PluginRegistryProxy10GetPluginsEbRK13scoped_refptrIKNS_14SecurityOriginEEPN3WTF6VectorIN4mojo9StructPtrINS1_10PluginInfoEEELj0ENS9_18PartitionAllocatorEEE(%"class.blink::mojom::blink::PluginRegistryProxy"*, i1 zeroext, %class.scoped_refptr.201* dereferenceable(8), %"class.WTF::Vector.403"*) unnamed_addr #3

declare %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin18CreateUniqueOpaqueEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10PluginData16UpdatePluginListEPKNS_14SecurityOriginE(%"class.blink::PluginData"*, %"class.blink::SecurityOrigin"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::MimeClassInfo"*, align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.mojo::ScopedHandleBase", align 4
  %6 = alloca %"class.mojo::Remote", align 8
  %7 = alloca %"class.mojo::GenericPendingReceiver", align 8
  %8 = alloca %"class.mojo::PendingReceiver", align 8
  %9 = alloca %"class.WTF::Vector.403", align 8
  %10 = alloca %"class.blink::PluginInfo"*, align 8
  %11 = alloca %"class.blink::WebString", align 8
  %12 = alloca %"class.blink::MimeClassInfo"*, align 8
  tail call void @_ZN5blink10PluginData15ResetPluginDataEv(%"class.blink::PluginData"* %0)
  %13 = getelementptr inbounds %"class.blink::PluginData", %"class.blink::PluginData"* %0, i64 0, i32 2
  %14 = icmp eq %"class.blink::SecurityOrigin"* %1, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %16) #12
  br label %17

17:                                               ; preds = %15, %2
  %18 = ptrtoint %"class.blink::SecurityOrigin"* %1 to i64
  %19 = bitcast %class.scoped_refptr.201* %13 to i64*
  %20 = getelementptr inbounds %class.scoped_refptr.201, %class.scoped_refptr.201* %13, i64 0, i32 0
  %21 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %20, align 8
  store i64 %18, i64* %19, align 8
  %22 = icmp eq %"class.blink::SecurityOrigin"* %21, null
  br i1 %22, label %30, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %21, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %24) #12
  %25 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %23
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %21) #12
  %29 = bitcast %"class.blink::SecurityOrigin"* %21 to i8*
  tail call void @free(i8* %29) #12
  br label %30

30:                                               ; preds = %17, %23, %28
  %31 = bitcast %"class.mojo::Remote"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %31) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 48, i1 false)
  %32 = bitcast %"class.mojo::Remote"* %6 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %32) #12
  %33 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %6, i64 0, i32 0, i32 1
  %34 = bitcast %"class.std::__1::unique_ptr.379"* %33 to i64*
  store i64 0, i64* %34, align 8
  %35 = call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #12
  %36 = bitcast %"class.blink::Platform"* %35 to %"class.blink::ThreadSafeBrowserInterfaceBrokerProxy"* (%"class.blink::Platform"*)***
  %37 = load %"class.blink::ThreadSafeBrowserInterfaceBrokerProxy"* (%"class.blink::Platform"*)**, %"class.blink::ThreadSafeBrowserInterfaceBrokerProxy"* (%"class.blink::Platform"*)*** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ThreadSafeBrowserInterfaceBrokerProxy"* (%"class.blink::Platform"*)*, %"class.blink::ThreadSafeBrowserInterfaceBrokerProxy"* (%"class.blink::Platform"*)** %37, i64 95
  %39 = load %"class.blink::ThreadSafeBrowserInterfaceBrokerProxy"* (%"class.blink::Platform"*)*, %"class.blink::ThreadSafeBrowserInterfaceBrokerProxy"* (%"class.blink::Platform"*)** %38, align 8
  %40 = call %"class.blink::ThreadSafeBrowserInterfaceBrokerProxy"* %39(%"class.blink::Platform"* %35) #12
  call void @_ZN4mojo6RemoteIN5blink5mojom5blink14PluginRegistryEE26BindNewPipeAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::PendingReceiver"* nonnull sret %8, %"class.mojo::Remote"* nonnull %6, %"class.base::SequencedTaskRunner"* null) #12
  %41 = bitcast %"class.mojo::ScopedHandleBase"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41)
  %42 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink14PluginRegistry5Name_E, i64 0, i64 0)) #12
  %43 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %5, i64 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i32, i32* %44, align 8, !noalias !9
  store i32 %45, i32* %43, align 4, !alias.scope !9
  store i32 0, i32* %44, align 8, !noalias !9
  call void @_ZN4mojo22GenericPendingReceiverC2EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"class.mojo::GenericPendingReceiver"* nonnull %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink14PluginRegistry5Name_E, i64 0, i64 0), i64 %42, %"class.mojo::ScopedHandleBase"* nonnull %5) #12
  %46 = load i32, i32* %43, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %30
  %49 = call i32 @MojoClose(i32 %46) #12
  br label %50

50:                                               ; preds = %30, %48
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41)
  call void @_ZN5blink37ThreadSafeBrowserInterfaceBrokerProxy12GetInterfaceEN4mojo22GenericPendingReceiverE(%"class.blink::ThreadSafeBrowserInterfaceBrokerProxy"* %40, %"class.mojo::GenericPendingReceiver"* nonnull %7) #12
  call void @_ZN4mojo22GenericPendingReceiverD1Ev(%"class.mojo::GenericPendingReceiver"* nonnull %7) #12
  %51 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %8, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %51) #12
  %52 = bitcast %"class.WTF::Vector.403"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #12
  %53 = getelementptr inbounds %"class.WTF::Vector.403", %"class.WTF::Vector.403"* %9, i64 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.WTF::Vector.403", %"class.WTF::Vector.403"* %9, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 16, i1 false) #12
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.379", %"class.std::__1::unique_ptr.379"* %33, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.blink::mojom::blink::PluginRegistryProxy"*, %"class.blink::mojom::blink::PluginRegistryProxy"** %55, align 8
  %57 = icmp eq %"class.blink::mojom::blink::PluginRegistryProxy"* %56, null
  br i1 %57, label %58, label %77

58:                                               ; preds = %50
  %59 = call i8* @_Znwm(i64 8) #13
  %60 = bitcast i8* %59 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink31PluginRegistryResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %61 = bitcast i8* %59 to %"class.mojo::MessageReceiver"*
  %62 = call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %32, i1 zeroext false, i1 zeroext true, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %61, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink14PluginRegistry5Name_E, i64 0, i64 0)) #12
  br i1 %62, label %63, label %77

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %65 = bitcast %"class.mojo::InterfaceEndpointClient"** %64 to %"class.mojo::MessageReceiverWithResponder"**
  %66 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %65, align 8
  %67 = call i8* @_Znwm(i64 16) #13
  %68 = bitcast i8* %67 to %"class.blink::mojom::blink::PluginRegistryProxy"*
  call void @_ZN5blink5mojom5blink19PluginRegistryProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::PluginRegistryProxy"* nonnull %68, %"class.mojo::MessageReceiverWithResponder"* %66) #12
  %69 = ptrtoint i8* %67 to i64
  %70 = load %"class.blink::mojom::blink::PluginRegistryProxy"*, %"class.blink::mojom::blink::PluginRegistryProxy"** %55, align 8
  store i64 %69, i64* %34, align 8
  %71 = icmp eq %"class.blink::mojom::blink::PluginRegistryProxy"* %70, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %63
  %73 = bitcast %"class.blink::mojom::blink::PluginRegistryProxy"* %70 to void (%"class.blink::mojom::blink::PluginRegistryProxy"*)***
  %74 = load void (%"class.blink::mojom::blink::PluginRegistryProxy"*)**, void (%"class.blink::mojom::blink::PluginRegistryProxy"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.blink::mojom::blink::PluginRegistryProxy"*)*, void (%"class.blink::mojom::blink::PluginRegistryProxy"*)** %74, i64 1
  %76 = load void (%"class.blink::mojom::blink::PluginRegistryProxy"*)*, void (%"class.blink::mojom::blink::PluginRegistryProxy"*)** %75, align 8
  call void %76(%"class.blink::mojom::blink::PluginRegistryProxy"* nonnull %70) #12
  br label %77

77:                                               ; preds = %50, %58, %63, %72
  %78 = load %"class.blink::mojom::blink::PluginRegistryProxy"*, %"class.blink::mojom::blink::PluginRegistryProxy"** %55, align 8
  %79 = call zeroext i1 @_ZN5blink5mojom5blink19PluginRegistryProxy10GetPluginsEbRK13scoped_refptrIKNS_14SecurityOriginEEPN3WTF6VectorIN4mojo9StructPtrINS1_10PluginInfoEEELj0ENS9_18PartitionAllocatorEEE(%"class.blink::mojom::blink::PluginRegistryProxy"* %78, i1 zeroext false, %class.scoped_refptr.201* dereferenceable(8) %13, %"class.WTF::Vector.403"* nonnull %9) #12
  %80 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %53, align 8
  %81 = load i32, i32* %54, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %80, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %104, label %85

85:                                               ; preds = %77
  %86 = bitcast %"class.blink::PluginInfo"** %10 to i8*
  %87 = bitcast %"class.blink::WebString"* %11 to i8*
  %88 = bitcast %"class.WTF::String"* %4 to i8*
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %90 = bitcast %"class.blink::PluginInfo"** %10 to i8**
  %91 = getelementptr inbounds %"class.blink::PluginData", %"class.blink::PluginData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %92 = getelementptr inbounds %"class.blink::PluginData", %"class.blink::PluginData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %93 = getelementptr inbounds %"class.blink::PluginData", %"class.blink::PluginData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.blink::PluginInfo"** %10 to i64*
  %95 = getelementptr inbounds %"class.blink::PluginData", %"class.blink::PluginData"* %0, i64 0, i32 0, i32 0
  %96 = bitcast %"class.blink::MimeClassInfo"** %12 to i8*
  %97 = bitcast %"class.blink::MimeClassInfo"** %12 to i8**
  %98 = bitcast %"class.blink::MimeClassInfo"** %3 to i8*
  %99 = getelementptr inbounds %"class.blink::PluginData", %"class.blink::PluginData"* %0, i64 0, i32 1, i32 0
  %100 = getelementptr inbounds %"class.blink::PluginData", %"class.blink::PluginData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %101 = getelementptr inbounds %"class.blink::PluginData", %"class.blink::PluginData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %102 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %99, i64 0, i32 0, i32 0, i32 0
  %103 = bitcast %"class.blink::MimeClassInfo"** %12 to i64*
  br label %151

104:                                              ; preds = %212, %77
  %105 = getelementptr inbounds %"class.blink::PluginData", %"class.blink::PluginData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"class.blink::Member"*, %"class.blink::Member"** %105, align 8
  %107 = getelementptr inbounds %"class.blink::PluginData", %"class.blink::PluginData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %106, i64 %109
  call fastcc void @"_ZNSt3__16__sortIRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_0PNS1_6MemberINS1_10PluginInfoEEEEEvT0_SC_T_"(%"class.blink::Member"* %106, %"class.blink::Member"* %110) #12
  %111 = getelementptr inbounds %"class.blink::PluginData", %"class.blink::PluginData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %112 = load %"class.blink::Member.8"*, %"class.blink::Member.8"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::PluginData", %"class.blink::PluginData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %114 = load i32, i32* %113, align 4
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %112, i64 %115
  call fastcc void @"_ZNSt3__16__sortIRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_1PNS1_6MemberINS1_13MimeClassInfoEEEEEvT0_SC_T_"(%"class.blink::Member.8"* %112, %"class.blink::Member.8"* %116) #12
  %117 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %53, align 8
  %118 = icmp eq %"class.mojo::StructPtr"* %117, null
  br i1 %118, label %141, label %119, !prof !8

119:                                              ; preds = %104
  %120 = bitcast %"class.mojo::StructPtr"* %117 to i8*
  %121 = load i32, i32* %54, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %139, label %123, !prof !2

123:                                              ; preds = %119
  %124 = zext i32 %121 to i64
  %125 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %117, i64 %124
  br label %126

126:                                              ; preds = %133, %123
  %127 = phi %"class.mojo::StructPtr"* [ %134, %133 ], [ %117, %123 ]
  %128 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  %129 = load %"class.blink::mojom::blink::PluginInfo"*, %"class.blink::mojom::blink::PluginInfo"** %128, align 8
  store %"class.blink::mojom::blink::PluginInfo"* null, %"class.blink::mojom::blink::PluginInfo"** %128, align 8
  %130 = icmp eq %"class.blink::mojom::blink::PluginInfo"* %129, null
  br i1 %130, label %133, label %131

131:                                              ; preds = %126
  call void @_ZN5blink5mojom5blink10PluginInfoD1Ev(%"class.blink::mojom::blink::PluginInfo"* nonnull %129) #12
  %132 = bitcast %"class.blink::mojom::blink::PluginInfo"* %129 to i8*
  call void @_ZdlPv(i8* %132) #13
  br label %133

133:                                              ; preds = %131, %126
  %134 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %127, i64 1
  %135 = icmp eq %"class.mojo::StructPtr"* %134, %125
  br i1 %135, label %136, label %126

136:                                              ; preds = %133
  store i32 0, i32* %54, align 4
  %137 = bitcast %"class.WTF::Vector.403"* %9 to i8**
  %138 = load i8*, i8** %137, align 8
  br label %139

139:                                              ; preds = %136, %119
  %140 = phi i8* [ %138, %136 ], [ %120, %119 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %140) #12
  store %"class.mojo::StructPtr"* null, %"class.mojo::StructPtr"** %53, align 8
  br label %141

141:                                              ; preds = %104, %139
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #12
  %142 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %143 = load %"class.blink::mojom::blink::PluginRegistryProxy"*, %"class.blink::mojom::blink::PluginRegistryProxy"** %142, align 8
  store %"class.blink::mojom::blink::PluginRegistryProxy"* null, %"class.blink::mojom::blink::PluginRegistryProxy"** %142, align 8
  %144 = icmp eq %"class.blink::mojom::blink::PluginRegistryProxy"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %141
  %146 = bitcast %"class.blink::mojom::blink::PluginRegistryProxy"* %143 to void (%"class.blink::mojom::blink::PluginRegistryProxy"*)***
  %147 = load void (%"class.blink::mojom::blink::PluginRegistryProxy"*)**, void (%"class.blink::mojom::blink::PluginRegistryProxy"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::mojom::blink::PluginRegistryProxy"*)*, void (%"class.blink::mojom::blink::PluginRegistryProxy"*)** %147, i64 1
  %149 = load void (%"class.blink::mojom::blink::PluginRegistryProxy"*)*, void (%"class.blink::mojom::blink::PluginRegistryProxy"*)** %148, align 8
  call void %149(%"class.blink::mojom::blink::PluginRegistryProxy"* nonnull %143) #12
  br label %150

150:                                              ; preds = %141, %145
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %32) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %31) #12
  ret void

151:                                              ; preds = %85, %212
  %152 = phi %"class.mojo::StructPtr"* [ %80, %85 ], [ %213, %212 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #12
  store %"class.blink::PluginInfo"* inttoptr (i64 -6148914691236517206 to %"class.blink::PluginInfo"*), %"class.blink::PluginInfo"** %10, align 8
  %153 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %152, i64 0, i32 0, i32 0, i32 0, i32 0
  %154 = load %"class.blink::mojom::blink::PluginInfo"*, %"class.blink::mojom::blink::PluginInfo"** %153, align 8
  %155 = getelementptr inbounds %"class.blink::mojom::blink::PluginInfo", %"class.blink::mojom::blink::PluginInfo"* %154, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #12
  %156 = getelementptr inbounds %"class.blink::mojom::blink::PluginInfo", %"class.blink::mojom::blink::PluginInfo"* %154, i64 0, i32 2
  call void @_ZN5blink19FilePathToWebStringERKN4base8FilePathE(%"class.blink::WebString"* nonnull sret %11, %"class.base::FilePath"* dereferenceable(24) %156) #12
  %157 = load %"class.blink::mojom::blink::PluginInfo"*, %"class.blink::mojom::blink::PluginInfo"** %153, align 8
  %158 = getelementptr inbounds %"class.blink::mojom::blink::PluginInfo", %"class.blink::mojom::blink::PluginInfo"* %157, i64 0, i32 1
  %159 = getelementptr inbounds %"class.blink::mojom::blink::PluginInfo", %"class.blink::mojom::blink::PluginInfo"* %157, i64 0, i32 3
  %160 = getelementptr inbounds %"class.blink::mojom::blink::PluginInfo", %"class.blink::mojom::blink::PluginInfo"* %157, i64 0, i32 6
  %161 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_10PluginInfoEEEPhm(i64 48) #12
  %162 = bitcast i8* %161 to %"class.blink::PluginInfo"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #12
  %163 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* nonnull %11) #12
  store %"class.WTF::StringImpl"* %163, %"class.WTF::StringImpl"** %89, align 8
  %164 = load i32, i32* %159, align 4
  %165 = load i8, i8* %160, align 1, !range !14
  %166 = icmp ne i8 %165, 0
  call void @_ZN5blink10PluginInfoC2ERKN3WTF6StringES4_S4_NS_5ColorEb(%"class.blink::PluginInfo"* %162, %"class.WTF::String"* dereferenceable(8) %155, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %158, i32 %164, i1 zeroext %166) #12
  %167 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %167, label %181, label %168

168:                                              ; preds = %151
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 0
  %174 = load i32, i32* %173, align 4
  br i1 %172, label %175, label %177

175:                                              ; preds = %168
  %176 = add i32 %174, -1
  store i32 %176, i32* %173, align 4
  br label %177

177:                                              ; preds = %175, %168
  %178 = phi i32 [ %176, %175 ], [ %174, %168 ]
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %181

180:                                              ; preds = %177
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %163) #12
  br label %181

181:                                              ; preds = %151, %177, %180
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #12
  %182 = getelementptr inbounds i8, i8* %161, i64 -4
  %183 = bitcast i8* %182 to i16*
  %184 = load atomic i16, i16* %183 monotonic, align 2
  %185 = or i16 %184, 1
  store atomic i16 %185, i16* %183 release, align 2
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #12
  store i8* %161, i8** %90, align 8
  %186 = load i32, i32* %91, align 4
  %187 = load i32, i32* %92, align 8
  %188 = icmp eq i32 %186, %187
  br i1 %188, label %202, label %189, !prof !2

189:                                              ; preds = %181
  %190 = ptrtoint i8* %161 to i64
  %191 = load %"class.blink::Member"*, %"class.blink::Member"** %93, align 8
  %192 = zext i32 %186 to i64
  %193 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %191, i64 %192
  %194 = bitcast %"class.blink::Member"* %193 to i64*
  store atomic i64 %190, i64* %194 monotonic, align 8
  %195 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %199, label %197

197:                                              ; preds = %189
  %198 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %161) #12
  br label %199

199:                                              ; preds = %197, %189
  %200 = load i32, i32* %91, align 4
  %201 = add i32 %200, 1
  store i32 %201, i32* %91, align 4
  br label %203

202:                                              ; preds = %181
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_10PluginInfoEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.197"* %95, %"class.blink::PluginInfo"** nonnull dereferenceable(8) %10) #12
  br label %203

203:                                              ; preds = %199, %202
  %204 = load %"class.blink::mojom::blink::PluginInfo"*, %"class.blink::mojom::blink::PluginInfo"** %153, align 8
  %205 = getelementptr inbounds %"class.blink::mojom::blink::PluginInfo", %"class.blink::mojom::blink::PluginInfo"* %204, i64 0, i32 5, i32 0, i32 0, i32 0
  %206 = load %"class.mojo::StructPtr.412"*, %"class.mojo::StructPtr.412"** %205, align 8
  %207 = getelementptr inbounds %"class.blink::mojom::blink::PluginInfo", %"class.blink::mojom::blink::PluginInfo"* %204, i64 0, i32 5, i32 0, i32 0, i32 2
  %208 = load i32, i32* %207, align 4
  %209 = zext i32 %208 to i64
  %210 = getelementptr inbounds %"class.mojo::StructPtr.412", %"class.mojo::StructPtr.412"* %206, i64 %209
  %211 = icmp eq i32 %208, 0
  br i1 %211, label %212, label %215

212:                                              ; preds = %320, %203
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #12
  %213 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %152, i64 1
  %214 = icmp eq %"class.mojo::StructPtr"* %213, %83
  br i1 %214, label %104, label %151

215:                                              ; preds = %203, %320
  %216 = phi %"class.mojo::StructPtr.412"* [ %321, %320 ], [ %206, %203 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #12
  store %"class.blink::MimeClassInfo"* inttoptr (i64 -6148914691236517206 to %"class.blink::MimeClassInfo"*), %"class.blink::MimeClassInfo"** %12, align 8
  %217 = getelementptr inbounds %"class.mojo::StructPtr.412", %"class.mojo::StructPtr.412"* %216, i64 0, i32 0, i32 0, i32 0, i32 0
  %218 = load %"class.blink::mojom::blink::PluginMimeType"*, %"class.blink::mojom::blink::PluginMimeType"** %217, align 8
  %219 = load i64, i64* %94, align 8
  %220 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13MimeClassInfoEEEPhm(i64 40) #12
  %221 = getelementptr inbounds %"class.blink::mojom::blink::PluginMimeType", %"class.blink::mojom::blink::PluginMimeType"* %218, i64 0, i32 0, i32 0, i32 0
  %222 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %221, align 8
  %223 = bitcast i8* %220 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %222, %"class.WTF::StringImpl"** %223, align 8
  %224 = icmp eq %"class.WTF::StringImpl"* %222, null
  br i1 %224, label %242, label %225

225:                                              ; preds = %215
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load atomic i32, i32* %226 monotonic, align 4
  %228 = and i32 %227, 2
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %242

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 0
  %232 = load i32, i32* %231, align 4
  %233 = zext i32 %232 to i33
  %234 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %233, i33 1) #12
  %235 = extractvalue { i33, i1 } %234, 1
  %236 = extractvalue { i33, i1 } %234, 0
  %237 = icmp slt i33 %236, 0
  %238 = or i1 %235, %237
  br i1 %238, label %239, label %240, !prof !2

239:                                              ; preds = %230
  call void @llvm.trap() #12
  unreachable

240:                                              ; preds = %230
  %241 = trunc i33 %236 to i32
  store i32 %241, i32* %231, align 4
  br label %242

242:                                              ; preds = %240, %225, %215
  %243 = getelementptr inbounds %"class.blink::mojom::blink::PluginMimeType", %"class.blink::mojom::blink::PluginMimeType"* %218, i64 0, i32 1, i32 0, i32 0
  %244 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %243, align 8
  %245 = getelementptr inbounds i8, i8* %220, i64 8
  %246 = bitcast i8* %245 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %244, %"class.WTF::StringImpl"** %246, align 8
  %247 = icmp eq %"class.WTF::StringImpl"* %244, null
  br i1 %247, label %265, label %248

248:                                              ; preds = %242
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = load atomic i32, i32* %249 monotonic, align 4
  %251 = and i32 %250, 2
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %265

253:                                              ; preds = %248
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 0, i32 0
  %255 = load i32, i32* %254, align 4
  %256 = zext i32 %255 to i33
  %257 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %256, i33 1) #12
  %258 = extractvalue { i33, i1 } %257, 1
  %259 = extractvalue { i33, i1 } %257, 0
  %260 = icmp slt i33 %259, 0
  %261 = or i1 %258, %260
  br i1 %261, label %262, label %263, !prof !2

262:                                              ; preds = %253
  call void @llvm.trap() #12
  unreachable

263:                                              ; preds = %253
  %264 = trunc i33 %259 to i32
  store i32 %264, i32* %254, align 4
  br label %265

265:                                              ; preds = %242, %248, %263
  %266 = getelementptr inbounds i8, i8* %220, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %266, i8 0, i64 16, i1 false) #12
  %267 = getelementptr inbounds i8, i8* %220, i64 32
  %268 = bitcast i8* %267 to i64*
  store i64 %219, i64* %268, align 8
  %269 = getelementptr inbounds i8, i8* %220, i64 -4
  %270 = bitcast i8* %269 to i16*
  %271 = load atomic i16, i16* %270 monotonic, align 2
  %272 = or i16 %271, 1
  store atomic i16 %272, i16* %270 release, align 2
  store i8* %220, i8** %97, align 8
  %273 = load %"class.blink::mojom::blink::PluginMimeType"*, %"class.blink::mojom::blink::PluginMimeType"** %217, align 8
  %274 = getelementptr inbounds %"class.blink::mojom::blink::PluginMimeType", %"class.blink::mojom::blink::PluginMimeType"* %273, i64 0, i32 2
  %275 = bitcast i8* %266 to %"class.WTF::Vector"*
  %276 = call dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector"* %275, %"class.WTF::Vector"* dereferenceable(16) %274)
  %277 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %10, align 8
  %278 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %12, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98)
  store %"class.blink::MimeClassInfo"* %278, %"class.blink::MimeClassInfo"** %3, align 8
  %279 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %277, i64 0, i32 5, i32 0
  %280 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %277, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %281 = load i32, i32* %280, align 4
  %282 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %277, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %283 = load i32, i32* %282, align 8
  %284 = icmp eq i32 %281, %283
  br i1 %284, label %300, label %285, !prof !2

285:                                              ; preds = %265
  %286 = ptrtoint %"class.blink::MimeClassInfo"* %278 to i64
  %287 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %279, i64 0, i32 0, i32 0, i32 0
  %288 = load %"class.blink::Member.8"*, %"class.blink::Member.8"** %287, align 8
  %289 = zext i32 %281 to i64
  %290 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %288, i64 %289
  %291 = bitcast %"class.blink::Member.8"* %290 to i64*
  store atomic i64 %286, i64* %291 monotonic, align 8
  %292 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %297, label %294

294:                                              ; preds = %285
  %295 = bitcast %"class.blink::MimeClassInfo"* %278 to i8*
  %296 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %295) #12
  br label %297

297:                                              ; preds = %294, %285
  %298 = load i32, i32* %280, align 4
  %299 = add i32 %298, 1
  store i32 %299, i32* %280, align 4
  br label %301

300:                                              ; preds = %265
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13MimeClassInfoEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.5"* %279, %"class.blink::MimeClassInfo"** nonnull dereferenceable(8) %3) #12
  br label %301

301:                                              ; preds = %297, %300
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98)
  %302 = load i32, i32* %100, align 4
  %303 = load i32, i32* %101, align 8
  %304 = icmp eq i32 %302, %303
  br i1 %304, label %319, label %305, !prof !2

305:                                              ; preds = %301
  %306 = load %"class.blink::Member.8"*, %"class.blink::Member.8"** %102, align 8
  %307 = zext i32 %302 to i64
  %308 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %306, i64 %307
  %309 = load i64, i64* %103, align 8
  %310 = bitcast %"class.blink::Member.8"* %308 to i64*
  store atomic i64 %309, i64* %310 monotonic, align 8
  %311 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %316, label %313

313:                                              ; preds = %305
  %314 = inttoptr i64 %309 to i8*
  %315 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %314) #12
  br label %316

316:                                              ; preds = %313, %305
  %317 = load i32, i32* %100, align 4
  %318 = add i32 %317, 1
  store i32 %318, i32* %100, align 4
  br label %320

319:                                              ; preds = %301
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13MimeClassInfoEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.5"* %99, %"class.blink::MimeClassInfo"** nonnull dereferenceable(8) %12) #12
  br label %320

320:                                              ; preds = %316, %319
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #12
  %321 = getelementptr inbounds %"class.mojo::StructPtr.412", %"class.mojo::StructPtr.412"* %216, i64 1
  %322 = icmp eq %"class.mojo::StructPtr.412"* %321, %210
  br i1 %322, label %212, label %215
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10PluginData15ResetPluginDataEv(%"class.blink::PluginData"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PluginData", %"class.blink::PluginData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::PluginData", %"class.blink::PluginData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = bitcast %"class.blink::PluginData"* %0 to i8**
  br i1 %8, label %14, label %10

10:                                               ; preds = %5
  %11 = load i8*, i8** %9, align 8
  %12 = zext i32 %7 to i64
  %13 = shl nuw nsw i64 %12, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %11, i64 %13) #12
  store i32 0, i32* %6, align 4
  br label %14

14:                                               ; preds = %10, %5
  %15 = load i8*, i8** %9, align 8
  %16 = bitcast %"class.blink::PluginData"* %0 to i64*
  store atomic i64 0, i64* %16 monotonic, align 8
  store i32 0, i32* %2, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %15) #12
  br label %17

17:                                               ; preds = %1, %14
  %18 = getelementptr inbounds %"class.blink::PluginData", %"class.blink::PluginData"* %0, i64 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.blink::PluginData", %"class.blink::PluginData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %34, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::PluginData", %"class.blink::PluginData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  %26 = bitcast %"class.WTF::Vector.5"* %18 to i8**
  br i1 %25, label %31, label %27

27:                                               ; preds = %22
  %28 = load i8*, i8** %26, align 8
  %29 = zext i32 %24 to i64
  %30 = shl nuw nsw i64 %29, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %28, i64 %30) #12
  store i32 0, i32* %23, align 4
  br label %31

31:                                               ; preds = %27, %22
  %32 = load i8*, i8** %26, align 8
  %33 = bitcast %"class.WTF::Vector.5"* %18 to i64*
  store atomic i64 0, i64* %33 monotonic, align 8
  store i32 0, i32* %19, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %32) #12
  br label %34

34:                                               ; preds = %17, %31
  %35 = getelementptr inbounds %"class.blink::PluginData", %"class.blink::PluginData"* %0, i64 0, i32 2
  %36 = bitcast %class.scoped_refptr.201* %35 to i64*
  %37 = getelementptr inbounds %class.scoped_refptr.201, %class.scoped_refptr.201* %35, i64 0, i32 0
  %38 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %37, align 8
  store i64 0, i64* %36, align 8
  %39 = icmp eq %"class.blink::SecurityOrigin"* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %41) #12
  %42 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %40
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %38) #12
  %46 = bitcast %"class.blink::SecurityOrigin"* %38 to i8*
  tail call void @free(i8* %46) #12
  br label %47

47:                                               ; preds = %34, %40, %45
  ret void
}

declare void @_ZN5blink19FilePathToWebStringERKN4base8FilePathE(%"class.blink::WebString"* sret, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector"* %1, %0
  br i1 %3, label %219, label %4, !prof !2

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %39

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %13
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %15
  br label %17

17:                                               ; preds = %35, %10
  %18 = phi %"class.WTF::String"* [ %36, %35 ], [ %16, %10 ]
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #12
  br label %35

35:                                               ; preds = %34, %31, %17
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 1
  %37 = icmp eq %"class.WTF::String"* %36, %14
  br i1 %37, label %38, label %17

38:                                               ; preds = %35
  store i32 %8, i32* %5, align 4
  br label %116

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp ugt i32 %8, %41
  br i1 %42, label %43, label %114

43:                                               ; preds = %39
  %44 = icmp eq i32 %41, 0
  br i1 %44, label %80, label %45

45:                                               ; preds = %43
  %46 = icmp eq i32 %6, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = zext i32 %6 to i64
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %50
  br label %52

52:                                               ; preds = %70, %47
  %53 = phi %"class.WTF::String"* [ %71, %70 ], [ %49, %47 ]
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #12
  br label %70

70:                                               ; preds = %69, %66, %52
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 1
  %72 = icmp eq %"class.WTF::String"* %71, %51
  br i1 %72, label %73, label %52

73:                                               ; preds = %70
  store i32 0, i32* %5, align 4
  br label %74

74:                                               ; preds = %73, %45
  %75 = bitcast %"class.WTF::Vector"* %0 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %77 monotonic, align 8
  store i32 0, i32* %40, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #12
  %78 = load i32, i32* %7, align 4
  %79 = load i32, i32* %40, align 8
  br label %80

80:                                               ; preds = %43, %74
  %81 = phi i32 [ 0, %43 ], [ %79, %74 ]
  %82 = phi i32 [ %8, %43 ], [ %78, %74 ]
  %83 = icmp ult i32 %81, %82
  br i1 %83, label %84, label %114, !prof !8

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8
  %87 = icmp eq %"class.WTF::String"* %86, null
  %88 = zext i32 %82 to i64
  %89 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %88) #12
  %90 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %89, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #12
  br i1 %87, label %91, label %96

91:                                               ; preds = %84
  %92 = ptrtoint i8* %90 to i64
  %93 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %92, i64* %93 monotonic, align 8
  %94 = lshr i64 %89, 3
  %95 = trunc i64 %94 to i32
  store i32 %95, i32* %40, align 8
  br label %114

96:                                               ; preds = %84
  %97 = lshr i64 %89, 3
  %98 = ptrtoint i8* %90 to i64
  %99 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8
  %100 = icmp ne i8* %90, null
  %101 = icmp ne %"class.WTF::String"* %99, null
  %102 = and i1 %100, %101
  %103 = bitcast %"class.WTF::String"* %99 to i8*
  br i1 %102, label %104, label %110, !prof !8

104:                                              ; preds = %96
  %105 = load i32, i32* %5, align 4
  %106 = zext i32 %105 to i64
  %107 = shl nuw nsw i64 %106, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* nonnull align 8 %103, i64 %107, i1 false) #12
  %108 = bitcast %"class.WTF::Vector"* %0 to i8**
  %109 = load i8*, i8** %108, align 8
  br label %110

110:                                              ; preds = %104, %96
  %111 = phi i8* [ %109, %104 ], [ %103, %96 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %111) #12
  %112 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %98, i64* %112 monotonic, align 8
  %113 = trunc i64 %97 to i32
  store i32 %113, i32* %40, align 8
  br label %114

114:                                              ; preds = %39, %80, %91, %110
  %115 = load i32, i32* %5, align 4
  br label %116

116:                                              ; preds = %114, %38
  %117 = phi i32 [ %115, %114 ], [ %8, %38 ]
  %118 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::String"*, %"class.WTF::String"** %118, align 8
  %120 = zext i32 %117 to i64
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 %120
  %122 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  %124 = icmp eq i32 %117, 0
  br i1 %124, label %175, label %125

125:                                              ; preds = %116, %167
  %126 = phi %"class.WTF::String"* [ %169, %167 ], [ %123, %116 ]
  %127 = phi %"class.WTF::String"* [ %168, %167 ], [ %119, %116 ]
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %148, label %131

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %148

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = zext i32 %138 to i33
  %140 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %139, i33 1) #12
  %141 = extractvalue { i33, i1 } %140, 1
  %142 = extractvalue { i33, i1 } %140, 0
  %143 = icmp slt i33 %142, 0
  %144 = or i1 %141, %143
  br i1 %144, label %145, label %146, !prof !2

145:                                              ; preds = %136
  tail call void @llvm.trap() #12
  unreachable

146:                                              ; preds = %136
  %147 = trunc i33 %142 to i32
  store i32 %147, i32* %137, align 4
  br label %148

148:                                              ; preds = %146, %131, %125
  %149 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %150 = bitcast %"class.WTF::String"* %126 to i64*
  %151 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 0, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  store i64 %149, i64* %150, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #12
  br label %167

167:                                              ; preds = %166, %163, %148
  %168 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 1
  %169 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 1
  %170 = icmp eq %"class.WTF::String"* %168, %121
  br i1 %170, label %171, label %125

171:                                              ; preds = %167
  %172 = load %"class.WTF::String"*, %"class.WTF::String"** %118, align 8
  %173 = load i32, i32* %5, align 4
  %174 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  br label %175

175:                                              ; preds = %171, %116
  %176 = phi %"class.WTF::String"* [ %174, %171 ], [ %123, %116 ]
  %177 = phi i32 [ %173, %171 ], [ 0, %116 ]
  %178 = phi %"class.WTF::String"* [ %172, %171 ], [ %119, %116 ]
  %179 = zext i32 %177 to i64
  %180 = load i32, i32* %7, align 4
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %181
  %183 = icmp eq i32 %177, %180
  br i1 %183, label %217, label %184

184:                                              ; preds = %175
  %185 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %176, i64 %179
  %186 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %179
  br label %187

187:                                              ; preds = %184, %211
  %188 = phi %"class.WTF::String"* [ %212, %211 ], [ %185, %184 ]
  %189 = phi %"class.WTF::String"* [ %213, %211 ], [ %186, %184 ]
  %190 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 0, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %191, %"class.WTF::StringImpl"** %192, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %193, label %211, label %194

194:                                              ; preds = %187
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %211

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i33
  %203 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %202, i33 1) #12
  %204 = extractvalue { i33, i1 } %203, 1
  %205 = extractvalue { i33, i1 } %203, 0
  %206 = icmp slt i33 %205, 0
  %207 = or i1 %204, %206
  br i1 %207, label %208, label %209, !prof !2

208:                                              ; preds = %199
  tail call void @llvm.trap() #12
  unreachable

209:                                              ; preds = %199
  %210 = trunc i33 %205 to i32
  store i32 %210, i32* %200, align 4
  br label %211

211:                                              ; preds = %209, %194, %187
  %212 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 1
  %213 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 1
  %214 = icmp eq %"class.WTF::String"* %213, %182
  br i1 %214, label %215, label %187

215:                                              ; preds = %211
  %216 = load i32, i32* %7, align 4
  br label %217

217:                                              ; preds = %215, %175
  %218 = phi i32 [ %216, %215 ], [ %177, %175 ]
  store i32 %218, i32* %5, align 4
  br label %219

219:                                              ; preds = %2, %217
  ret %"class.WTF::Vector"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10PluginData16SupportsMimeTypeERKN3WTF6StringE(%"class.blink::PluginData"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PluginData", %"class.blink::PluginData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Member.8"*, %"class.blink::Member.8"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::PluginData", %"class.blink::PluginData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %23, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  br label %14

12:                                               ; preds = %14
  %13 = icmp eq %"class.blink::Member.8"* %22, %8
  br i1 %13, label %23, label %14

14:                                               ; preds = %10, %12
  %15 = phi %"class.blink::Member.8"* [ %4, %10 ], [ %22, %12 ]
  %16 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %21 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"* %20) #12
  %22 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %15, i64 1
  br i1 %21, label %23, label %12

23:                                               ; preds = %12, %14, %2
  %24 = phi i1 [ false, %2 ], [ true, %14 ], [ false, %12 ]
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10PluginData32PluginBackgroundColorForMimeTypeERKN3WTF6StringE(%"class.blink::PluginData"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PluginData", %"class.blink::PluginData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Member.8"*, %"class.blink::Member.8"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::PluginData", %"class.blink::PluginData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %28, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  br label %14

12:                                               ; preds = %14
  %13 = icmp eq %"class.blink::Member.8"* %22, %8
  br i1 %13, label %28, label %14

14:                                               ; preds = %10, %12
  %15 = phi %"class.blink::Member.8"* [ %4, %10 ], [ %22, %12 ]
  %16 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %21 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"* %20) #12
  %22 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %15, i64 1
  br i1 %21, label %23, label %12

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %17, i64 0, i32 3, i32 0, i32 0
  %25 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %25, i64 0, i32 3, i32 0
  %27 = load i32, i32* %26, align 8
  br label %28

28:                                               ; preds = %12, %2, %23
  %29 = phi i32 [ %27, %23 ], [ 0, %2 ], [ 0, %12 ]
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10PluginData24IsExternalPluginMimeTypeERKN3WTF6StringE(%"class.blink::PluginData"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PluginData", %"class.blink::PluginData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Member.8"*, %"class.blink::Member.8"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::PluginData", %"class.blink::PluginData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %29, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  br label %14

12:                                               ; preds = %14
  %13 = icmp eq %"class.blink::Member.8"* %22, %8
  br i1 %13, label %29, label %14

14:                                               ; preds = %10, %12
  %15 = phi %"class.blink::Member.8"* [ %4, %10 ], [ %22, %12 ]
  %16 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %21 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"* %20) #12
  %22 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %15, i64 1
  br i1 %21, label %23, label %12

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %17, i64 0, i32 3, i32 0, i32 0
  %25 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %25, i64 0, i32 4
  %27 = load i8, i8* %26, align 4, !range !14
  %28 = icmp ne i8 %27, 0
  br label %29

29:                                               ; preds = %12, %2, %23
  %30 = phi i1 [ %28, %23 ], [ false, %2 ], [ false, %12 ]
  ret i1 %30
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #3

declare void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink10PluginInfoD1Ev(%"class.blink::mojom::blink::PluginInfo"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #12
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #12
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #12
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #12
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #12
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #12
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10PluginInfoEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 32
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast i8* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8** %7) #12
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %0, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13MimeClassInfoEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #12
  br label %18

18:                                               ; preds = %2, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13MimeClassInfoEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.8"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.8"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13MimeClassInfoEE5TraceEPNS_7VisitorEPKv) #12
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13MimeClassInfoEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 32
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10PluginInfoEE5TraceEPNS_7VisitorEPKv) #12
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13MimeClassInfoEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.5"*, %"class.blink::MimeClassInfo"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_13MimeClassInfoEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.5"* %0, i32 %14) #12
  %15 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.8"*, %"class.blink::Member.8"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %16, i64 %18
  %20 = bitcast %"class.blink::MimeClassInfo"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.8"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #12
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13MimeClassInfoEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.5"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !8

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.8"*, %"class.blink::Member.8"** %8, align 8
  %10 = icmp eq %"class.blink::Member.8"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13MimeClassInfoEEEEEmm(i64 %11) #12
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13MimeClassInfoEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #12
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.5"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #12
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.8"*, %"class.blink::Member.8"** %8, align 8
  %26 = icmp eq %"class.blink::Member.8"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.8"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #12
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #12
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #12
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !14
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0)) #12
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #12
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13MimeClassInfoEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.5"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13MimeClassInfoEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.5"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.5"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.5"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #12
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #12
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13MimeClassInfoEEEEEmm(i64 %14) #12
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13MimeClassInfoEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #12
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.8"*, %"class.blink::Member.8"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.8"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.8"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !8

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.5"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #12
  %33 = bitcast %"class.WTF::Vector.5"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #12
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #12
  %42 = bitcast %"class.WTF::Vector.5"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #12
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13MimeClassInfoEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.3, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  ret i64 %20
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13MimeClassInfoEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.5, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13MimeClassInfoEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13MimeClassInfoEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13MimeClassInfoEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13MimeClassInfoEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13MimeClassInfoEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([167 x i8], [167 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13MimeClassInfoEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #8 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #12
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %21, i8* %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #12
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13MimeClassInfoEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #3

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #3

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #3

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.8"* @_ZNK3WTF6VectorIN5blink6MemberINS1_13MimeClassInfoEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.5"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.8"*, %"class.blink::Member.8"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %24, i64 %25
  ret %"class.blink::Member.8"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_10PluginInfoEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10PluginInfoEE5TraceEPNS_7VisitorEPKv) #12
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo6RemoteIN5blink5mojom5blink14PluginRegistryEE26BindNewPipeAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::PendingReceiver"* noalias sret, %"class.mojo::Remote"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::ScopedHandleBase", align 4
  %5 = alloca %"class.mojo::ScopedHandleBase", align 4
  %6 = alloca %"class.mojo::MessagePipeHandle", align 4
  %7 = alloca %"class.mojo::MessagePipeHandle", align 4
  %8 = alloca %"class.mojo::PendingRemote", align 4
  %9 = bitcast %"class.mojo::MessagePipeHandle"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %6, i64 0, i32 0, i32 0
  store i32 0, i32* %10, align 4
  %11 = bitcast %"class.mojo::MessagePipeHandle"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %7, i64 0, i32 0, i32 0
  store i32 0, i32* %12, align 4
  %13 = call i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions* null, i32* nonnull %10, i32* nonnull %12) #12
  %14 = load i32, i32* %10, align 4
  %15 = load i32, i32* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #12
  %16 = bitcast %"class.mojo::ScopedHandleBase"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16)
  %17 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %8, i64 0, i32 0
  %18 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %5, i64 0, i32 0, i32 0, i32 0
  store i32 %14, i32* %18, align 4, !alias.scope !15
  call void @_ZN4mojo8internal18PendingRemoteStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEEj(%"struct.mojo::internal::PendingRemoteState"* nonnull %17, %"class.mojo::ScopedHandleBase"* nonnull %5, i32 0) #12
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %3
  %22 = call i32 @MojoClose(i32 %19) #12
  br label %23

23:                                               ; preds = %21, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16)
  call void @_ZN4mojo6RemoteIN5blink5mojom5blink14PluginRegistryEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote"* %1, %"class.mojo::PendingRemote"* nonnull %8, %"class.base::SequencedTaskRunner"* %2)
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %17) #12
  %24 = bitcast %"class.mojo::ScopedHandleBase"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24)
  %25 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %0, i64 0, i32 0
  %26 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 %15, i32* %26, align 4, !alias.scope !18
  call void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"* %25, %"class.mojo::ScopedHandleBase"* nonnull %4) #12
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %23
  %30 = call i32 @MojoClose(i32 %27) #12
  br label %31

31:                                               ; preds = %23, %29
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo6RemoteIN5blink5mojom5blink14PluginRegistryEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote"*, %"class.mojo::PendingRemote"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::internal::InterfacePtrState", align 8
  %5 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %25

8:                                                ; preds = %3
  %9 = bitcast %"class.mojo::internal::InterfacePtrState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false) #12
  %10 = bitcast %"class.mojo::internal::InterfacePtrState"* %4 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #12
  %11 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %4, i64 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr.379"* %11 to i64*
  %13 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr.379"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 0, i64* %14, align 8
  %16 = bitcast %"class.mojo::Remote"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %16, %"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #12
  %17 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.blink::mojom::blink::PluginRegistryProxy"*, %"class.blink::mojom::blink::PluginRegistryProxy"** %17, align 8
  store %"class.blink::mojom::blink::PluginRegistryProxy"* null, %"class.blink::mojom::blink::PluginRegistryProxy"** %17, align 8
  %19 = icmp eq %"class.blink::mojom::blink::PluginRegistryProxy"* %18, null
  br i1 %19, label %52, label %20

20:                                               ; preds = %8
  %21 = bitcast %"class.blink::mojom::blink::PluginRegistryProxy"* %18 to void (%"class.blink::mojom::blink::PluginRegistryProxy"*)***
  %22 = load void (%"class.blink::mojom::blink::PluginRegistryProxy"*)**, void (%"class.blink::mojom::blink::PluginRegistryProxy"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::mojom::blink::PluginRegistryProxy"*)*, void (%"class.blink::mojom::blink::PluginRegistryProxy"*)** %22, i64 1
  %24 = load void (%"class.blink::mojom::blink::PluginRegistryProxy"*)*, void (%"class.blink::mojom::blink::PluginRegistryProxy"*)** %23, align 8
  call void %24(%"class.blink::mojom::blink::PluginRegistryProxy"* nonnull %18) #12
  br label %52

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %1, i64 0, i32 0
  %27 = bitcast %"class.mojo::Remote"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"* %27, %"struct.mojo::internal::PendingRemoteState"* %26, %"class.base::SequencedTaskRunner"* %2) #12
  %28 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.379", %"class.std::__1::unique_ptr.379"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::mojom::blink::PluginRegistryProxy"*, %"class.blink::mojom::blink::PluginRegistryProxy"** %29, align 8
  %31 = icmp eq %"class.blink::mojom::blink::PluginRegistryProxy"* %30, null
  br i1 %31, label %32, label %62

32:                                               ; preds = %25
  %33 = tail call i8* @_Znwm(i64 8) #13
  %34 = bitcast i8* %33 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink31PluginRegistryResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = bitcast i8* %33 to %"class.mojo::MessageReceiver"*
  %36 = tail call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %27, i1 zeroext false, i1 zeroext true, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %35, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink14PluginRegistry5Name_E, i64 0, i64 0)) #12
  br i1 %36, label %37, label %62

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %39 = bitcast %"class.mojo::InterfaceEndpointClient"** %38 to %"class.mojo::MessageReceiverWithResponder"**
  %40 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %39, align 8
  %41 = tail call i8* @_Znwm(i64 16) #13
  %42 = bitcast i8* %41 to %"class.blink::mojom::blink::PluginRegistryProxy"*
  tail call void @_ZN5blink5mojom5blink19PluginRegistryProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::PluginRegistryProxy"* nonnull %42, %"class.mojo::MessageReceiverWithResponder"* %40) #12
  %43 = ptrtoint i8* %41 to i64
  %44 = load %"class.blink::mojom::blink::PluginRegistryProxy"*, %"class.blink::mojom::blink::PluginRegistryProxy"** %29, align 8
  %45 = bitcast %"class.std::__1::unique_ptr.379"* %28 to i64*
  store i64 %43, i64* %45, align 8
  %46 = icmp eq %"class.blink::mojom::blink::PluginRegistryProxy"* %44, null
  br i1 %46, label %62, label %47

47:                                               ; preds = %37
  %48 = bitcast %"class.blink::mojom::blink::PluginRegistryProxy"* %44 to void (%"class.blink::mojom::blink::PluginRegistryProxy"*)***
  %49 = load void (%"class.blink::mojom::blink::PluginRegistryProxy"*)**, void (%"class.blink::mojom::blink::PluginRegistryProxy"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::mojom::blink::PluginRegistryProxy"*)*, void (%"class.blink::mojom::blink::PluginRegistryProxy"*)** %49, i64 1
  %51 = load void (%"class.blink::mojom::blink::PluginRegistryProxy"*)*, void (%"class.blink::mojom::blink::PluginRegistryProxy"*)** %50, align 8
  tail call void %51(%"class.blink::mojom::blink::PluginRegistryProxy"* nonnull %44) #12
  br label %62

52:                                               ; preds = %20, %8
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #12
  %53 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %53, label %62, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe.209", %"class.base::RefCountedThreadSafe.209"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw sub i32* %56, i32 1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.base::RefCountedThreadSafe.209", %"class.base::RefCountedThreadSafe.209"* %55, i64 -2
  %61 = bitcast %"class.base::RefCountedThreadSafe.209"* %60 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %61) #12
  br label %62

62:                                               ; preds = %47, %37, %32, %25, %52, %54, %59
  ret void
}

declare i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions*, i32*, i32*) local_unnamed_addr #3

declare i32 @MojoClose(i32) local_unnamed_addr #3

declare void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"*, %"class.mojo::internal::InterfacePtrStateBase"*) local_unnamed_addr #3

declare void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"*, %"struct.mojo::internal::PendingRemoteState"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #3

declare zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"*, i1 zeroext, i1 zeroext, i1 zeroext, %"class.mojo::MessageReceiver"*, i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZN5blink5mojom5blink19PluginRegistryProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::PluginRegistryProxy"*, %"class.mojo::MessageReceiverWithResponder"*) unnamed_addr #3

declare void @_ZN4mojo8internal18PendingRemoteStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEEj(%"struct.mojo::internal::PendingRemoteState"*, %"class.mojo::ScopedHandleBase"*, i32) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #4

declare void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"*, %"class.mojo::ScopedHandleBase"*) unnamed_addr #3

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #3

declare void @_ZN4mojo22GenericPendingReceiverC2EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"class.mojo::GenericPendingReceiver"*, i8*, i64, %"class.mojo::ScopedHandleBase"*) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_10PluginInfoEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_10PluginInfoEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_10PluginInfoEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_10PluginInfoEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10PluginInfoEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_10PluginInfoEE8FinalizeEPv(i8*) #0 comdat align 2 {
  tail call void @_ZN5blink8internal18FinalizerTraitImplINS_10PluginInfoELb1EE10Destructor4CallEPv(i8* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_10PluginInfoEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal18FinalizerTraitImplINS_10PluginInfoELb1EE10Destructor4CallEPv(i8*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 16
  %3 = bitcast i8* %2 to %"class.WTF::StringImpl"**
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds i8, i8* %0, i64 8
  %21 = bitcast i8* %20 to %"class.WTF::StringImpl"**
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %24
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #12
  br label %37

37:                                               ; preds = %36, %33, %19
  %38 = bitcast i8* %0 to %"class.WTF::StringImpl"**
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #12
  br label %54

54:                                               ; preds = %37, %50, %53
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_10PluginInfoEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.197"*, %"class.blink::PluginInfo"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_10PluginInfoEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.197"* %0, i32 %14) #12
  %15 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::PluginInfo"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #12
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_10PluginInfoEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.197"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !8

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_10PluginInfoEEEEEmm(i64 %11) #12
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.463"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_10PluginInfoEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #12
  %16 = ptrtoint %"class.blink::HeapVectorBacking.463"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.197"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.463", %"class.blink::HeapVectorBacking.463"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #12
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %26 = icmp eq %"class.blink::Member"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #12
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #12
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #12
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !14
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0)) #12
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #12
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_10PluginInfoEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.197"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_10PluginInfoEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.197"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.197"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.197"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #12
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #12
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_10PluginInfoEEEEEmm(i64 %14) #12
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.463"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_10PluginInfoEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #12
  %18 = ptrtoint %"class.blink::HeapVectorBacking.463"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member"*, %"class.blink::Member"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.463"* %17, null
  %23 = icmp ne %"class.blink::Member"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !8

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.197"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.463", %"class.blink::HeapVectorBacking.463"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #12
  %33 = bitcast %"class.WTF::Vector.197"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #12
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #12
  %42 = bitcast %"class.WTF::Vector.197"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.463", %"class.blink::HeapVectorBacking.463"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #12
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_10PluginInfoEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.3, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.463"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_10PluginInfoEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.5, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_10PluginInfoEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.463"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.463"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_10PluginInfoEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10PluginInfoEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10PluginInfoEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10PluginInfoEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([161 x i8], [161 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_10PluginInfoEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_10PluginInfoEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_13MimeClassInfoEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_13MimeClassInfoEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_13MimeClassInfoEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_13MimeClassInfoEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13MimeClassInfoEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_13MimeClassInfoEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::MimeClassInfo"*
  tail call void @_ZN5blink13MimeClassInfoD2Ev(%"class.blink::MimeClassInfo"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_13MimeClassInfoEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13MimeClassInfoD2Ev(%"class.blink::MimeClassInfo"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = icmp eq %"class.WTF::String"* %4, null
  br i1 %5, label %40, label %6, !prof !8

6:                                                ; preds = %1
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %38, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %12
  br label %14

14:                                               ; preds = %32, %11
  %15 = phi %"class.WTF::String"* [ %33, %32 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #12
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 1
  %34 = icmp eq %"class.WTF::String"* %33, %13
  br i1 %34, label %35, label %14

35:                                               ; preds = %32
  store i32 0, i32* %8, align 4
  %36 = bitcast %"class.WTF::Vector"* %2 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %6
  %39 = phi i8* [ %37, %35 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %3, align 8
  br label %40

40:                                               ; preds = %1, %38
  %41 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %0, i64 0, i32 1, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #12
  br label %57

57:                                               ; preds = %40, %53, %56
  %58 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %0, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #12
  br label %74

74:                                               ; preds = %57, %70, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.12, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_0PNS1_6MemberINS1_10PluginInfoEEEEEvT0_SC_T_"(%"class.blink::Member"*, %"class.blink::Member"*) unnamed_addr #0 {
  br label %3

3:                                                ; preds = %343, %2
  %4 = phi %"class.blink::Member"* [ %1, %2 ], [ %305, %343 ]
  %5 = phi %"class.blink::Member"* [ %0, %2 ], [ %15, %343 ]
  %6 = ptrtoint %"class.blink::Member"* %4 to i64
  %7 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %4, i64 -1
  %8 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %7, i64 0, i32 0, i32 0
  %9 = bitcast %"class.blink::Member"* %7 to i64*
  %10 = bitcast %"class.blink::Member"* %7 to i8**
  %11 = ptrtoint %"class.blink::Member"* %4 to i64
  br label %12

12:                                               ; preds = %352, %3
  %13 = phi %"class.blink::Member"* [ %5, %3 ], [ %353, %352 ]
  br label %14

14:                                               ; preds = %200, %12
  %15 = phi %"class.blink::Member"* [ %13, %12 ], [ %183, %200 ]
  %16 = ptrtoint %"class.blink::Member"* %15 to i64
  %17 = sub i64 %6, %16
  %18 = ashr exact i64 %17, 3
  switch i64 %18, label %61 [
    i64 0, label %356
    i64 1, label %356
    i64 2, label %19
    i64 3, label %46
    i64 4, label %50
    i64 5, label %55
  ]

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %4, i64 -1
  %21 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %22, i64 0, i32 0
  %24 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 0, i32 0, i32 0
  %25 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %25, i64 0, i32 0
  %27 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %23, %"class.WTF::String"* dereferenceable(8) %26) #12
  br i1 %27, label %28, label %356

28:                                               ; preds = %19
  %29 = bitcast %"class.blink::Member"* %15 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::Member"* %20 to i64*
  %32 = load i64, i64* %31, align 8
  store atomic i64 %32, i64* %29 monotonic, align 8
  store atomic i64 %30, i64* %31 monotonic, align 8
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %28
  %36 = bitcast %"class.blink::Member"* %15 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %37) #12
  br label %39

39:                                               ; preds = %35, %28
  %40 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %356, label %42

42:                                               ; preds = %39
  %43 = bitcast %"class.blink::Member"* %20 to i8**
  %44 = load i8*, i8** %43, align 8
  %45 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %44) #12
  br label %356

46:                                               ; preds = %14
  %47 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 1
  %48 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %4, i64 -1
  %49 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_0PNS1_6MemberINS1_10PluginInfoEEEEEjT0_SC_SC_T_"(%"class.blink::Member"* %15, %"class.blink::Member"* %47, %"class.blink::Member"* %48)
  br label %356

50:                                               ; preds = %14
  %51 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 1
  %52 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 2
  %53 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %4, i64 -1
  %54 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_0PNS1_6MemberINS1_10PluginInfoEEEEEjT0_SC_SC_SC_T_"(%"class.blink::Member"* %15, %"class.blink::Member"* %51, %"class.blink::Member"* %52, %"class.blink::Member"* %53)
  br label %356

55:                                               ; preds = %14
  %56 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 1
  %57 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 2
  %58 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 3
  %59 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %4, i64 -1
  %60 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_0PNS1_6MemberINS1_10PluginInfoEEEEEjT0_SC_SC_SC_SC_T_"(%"class.blink::Member"* %15, %"class.blink::Member"* %56, %"class.blink::Member"* %57, %"class.blink::Member"* %58, %"class.blink::Member"* %59)
  br label %356

61:                                               ; preds = %14
  %62 = icmp slt i64 %17, 56
  br i1 %62, label %63, label %114

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 2
  %65 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 1
  %66 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_0PNS1_6MemberINS1_10PluginInfoEEEEEjT0_SC_SC_T_"(%"class.blink::Member"* %15, %"class.blink::Member"* %65, %"class.blink::Member"* %64) #12
  %67 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 3
  %68 = icmp eq %"class.blink::Member"* %67, %4
  br i1 %68, label %356, label %69

69:                                               ; preds = %63, %111
  %70 = phi %"class.blink::Member"* [ %112, %111 ], [ %67, %63 ]
  %71 = phi %"class.blink::Member"* [ %70, %111 ], [ %64, %63 ]
  %72 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %70, i64 0, i32 0, i32 0
  %73 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %73, i64 0, i32 0
  %75 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %71, i64 0, i32 0, i32 0
  %76 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %76, i64 0, i32 0
  %78 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %74, %"class.WTF::String"* dereferenceable(8) %77) #12
  br i1 %78, label %79, label %111

79:                                               ; preds = %69
  %80 = bitcast %"class.blink::Member"* %70 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = inttoptr i64 %81 to %"class.blink::PluginInfo"*
  %83 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %82, i64 0, i32 0
  br label %84

84:                                               ; preds = %97, %79
  %85 = phi %"class.blink::Member"* [ %70, %79 ], [ %86, %97 ]
  %86 = phi %"class.blink::Member"* [ %71, %79 ], [ %98, %97 ]
  %87 = bitcast %"class.blink::Member"* %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"class.blink::Member"* %85 to i64*
  store atomic i64 %88, i64* %89 monotonic, align 8
  %90 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %95, label %92

92:                                               ; preds = %84
  %93 = inttoptr i64 %88 to i8*
  %94 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %93) #12
  br label %95

95:                                               ; preds = %92, %84
  %96 = icmp eq %"class.blink::Member"* %86, %15
  br i1 %96, label %103, label %97

97:                                               ; preds = %95
  %98 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %86, i64 -1
  %99 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %98, i64 0, i32 0, i32 0
  %100 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %100, i64 0, i32 0
  %102 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %83, %"class.WTF::String"* dereferenceable(8) %101) #12
  br i1 %102, label %84, label %103

103:                                              ; preds = %95, %97
  %104 = phi %"class.blink::Member"* [ %86, %97 ], [ %15, %95 ]
  %105 = bitcast %"class.blink::Member"* %104 to i64*
  store atomic i64 %81, i64* %105 monotonic, align 8
  %106 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %111, label %108

108:                                              ; preds = %103
  %109 = inttoptr i64 %81 to i8*
  %110 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %109) #12
  br label %111

111:                                              ; preds = %108, %103, %69
  %112 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %70, i64 1
  %113 = icmp eq %"class.blink::Member"* %112, %4
  br i1 %113, label %356, label %69

114:                                              ; preds = %61
  %115 = icmp sgt i64 %17, 7992
  %116 = sdiv i64 %18, 2
  %117 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 %116
  br i1 %115, label %118, label %123

118:                                              ; preds = %114
  %119 = sdiv i64 %18, 4
  %120 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 %119
  %121 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %117, i64 %119
  %122 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_0PNS1_6MemberINS1_10PluginInfoEEEEEjT0_SC_SC_SC_SC_T_"(%"class.blink::Member"* %15, %"class.blink::Member"* %120, %"class.blink::Member"* %117, %"class.blink::Member"* %121, %"class.blink::Member"* %7)
  br label %125

123:                                              ; preds = %114
  %124 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_0PNS1_6MemberINS1_10PluginInfoEEEEEjT0_SC_SC_T_"(%"class.blink::Member"* %15, %"class.blink::Member"* %117, %"class.blink::Member"* %7)
  br label %125

125:                                              ; preds = %123, %118
  %126 = phi i32 [ %122, %118 ], [ %124, %123 ]
  %127 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 0, i32 0, i32 0
  %128 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %127, align 8
  %129 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %128, i64 0, i32 0
  %130 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %117, i64 0, i32 0, i32 0
  %131 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %131, i64 0, i32 0
  %133 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %129, %"class.WTF::String"* dereferenceable(8) %132) #12
  br i1 %133, label %248, label %134

134:                                              ; preds = %125, %221
  %135 = phi %"class.blink::Member"* [ %136, %221 ], [ %7, %125 ]
  %136 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %135, i64 -1
  %137 = icmp eq %"class.blink::Member"* %15, %136
  br i1 %137, label %138, label %221

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 1
  %140 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %127, align 8
  %141 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %140, i64 0, i32 0
  %142 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %8, align 8
  %143 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %142, i64 0, i32 0
  %144 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %141, %"class.WTF::String"* dereferenceable(8) %143) #12
  br i1 %144, label %176, label %145

145:                                              ; preds = %138
  %146 = icmp eq %"class.blink::Member"* %139, %7
  br i1 %146, label %356, label %147

147:                                              ; preds = %145, %173
  %148 = phi %"class.blink::Member"* [ %174, %173 ], [ %139, %145 ]
  %149 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %127, align 8
  %150 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %149, i64 0, i32 0
  %151 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %148, i64 0, i32 0, i32 0
  %152 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %151, align 8
  %153 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %152, i64 0, i32 0
  %154 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %150, %"class.WTF::String"* dereferenceable(8) %153) #12
  br i1 %154, label %155, label %173

155:                                              ; preds = %147
  %156 = bitcast %"class.blink::Member"* %148 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = load i64, i64* %9, align 8
  store atomic i64 %158, i64* %156 monotonic, align 8
  store atomic i64 %157, i64* %9 monotonic, align 8
  %159 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %165, label %161

161:                                              ; preds = %155
  %162 = bitcast %"class.blink::Member"* %148 to i8**
  %163 = load i8*, i8** %162, align 8
  %164 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %163) #12
  br label %165

165:                                              ; preds = %161, %155
  %166 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %171, label %168

168:                                              ; preds = %165
  %169 = load i8*, i8** %10, align 8
  %170 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %169) #12
  br label %171

171:                                              ; preds = %165, %168
  %172 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %148, i64 1
  br label %176

173:                                              ; preds = %147
  %174 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %148, i64 1
  %175 = icmp eq %"class.blink::Member"* %174, %7
  br i1 %175, label %356, label %147

176:                                              ; preds = %171, %138
  %177 = phi %"class.blink::Member"* [ %139, %138 ], [ %172, %171 ]
  %178 = icmp eq %"class.blink::Member"* %177, %7
  br i1 %178, label %356, label %179

179:                                              ; preds = %176, %216
  %180 = phi %"class.blink::Member"* [ %190, %216 ], [ %177, %176 ]
  %181 = phi %"class.blink::Member"* [ %193, %216 ], [ %7, %176 ]
  br label %182

182:                                              ; preds = %182, %179
  %183 = phi %"class.blink::Member"* [ %180, %179 ], [ %190, %182 ]
  %184 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %127, align 8
  %185 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %184, i64 0, i32 0
  %186 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %183, i64 0, i32 0, i32 0
  %187 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %186, align 8
  %188 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %187, i64 0, i32 0
  %189 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %185, %"class.WTF::String"* dereferenceable(8) %188) #12
  %190 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %183, i64 1
  br i1 %189, label %191, label %182

191:                                              ; preds = %182, %191
  %192 = phi %"class.blink::Member"* [ %193, %191 ], [ %181, %182 ]
  %193 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %192, i64 -1
  %194 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %127, align 8
  %195 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %194, i64 0, i32 0
  %196 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %193, i64 0, i32 0, i32 0
  %197 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %196, align 8
  %198 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %197, i64 0, i32 0
  %199 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %195, %"class.WTF::String"* dereferenceable(8) %198) #12
  br i1 %199, label %191, label %200

200:                                              ; preds = %191
  %201 = icmp ult %"class.blink::Member"* %183, %193
  br i1 %201, label %202, label %14

202:                                              ; preds = %200
  %203 = bitcast %"class.blink::Member"* %183 to i64*
  %204 = load i64, i64* %203, align 8
  %205 = bitcast %"class.blink::Member"* %193 to i64*
  %206 = load i64, i64* %205, align 8
  store atomic i64 %206, i64* %203 monotonic, align 8
  store atomic i64 %204, i64* %205 monotonic, align 8
  %207 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %213, label %209

209:                                              ; preds = %202
  %210 = bitcast %"class.blink::Member"* %183 to i8**
  %211 = load i8*, i8** %210, align 8
  %212 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %211) #12
  br label %213

213:                                              ; preds = %209, %202
  %214 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %213, %217
  br label %179

217:                                              ; preds = %213
  %218 = bitcast %"class.blink::Member"* %193 to i8**
  %219 = load i8*, i8** %218, align 8
  %220 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %219) #12
  br label %216

221:                                              ; preds = %134
  %222 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %136, i64 0, i32 0, i32 0
  %223 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %222, align 8
  %224 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %223, i64 0, i32 0
  %225 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %130, align 8
  %226 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %225, i64 0, i32 0
  %227 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %224, %"class.WTF::String"* dereferenceable(8) %226) #12
  br i1 %227, label %228, label %134

228:                                              ; preds = %221
  %229 = bitcast %"class.blink::Member"* %15 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = bitcast %"class.blink::Member"* %136 to i64*
  %232 = load i64, i64* %231, align 8
  store atomic i64 %232, i64* %229 monotonic, align 8
  store atomic i64 %230, i64* %231 monotonic, align 8
  %233 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %239, label %235

235:                                              ; preds = %228
  %236 = bitcast %"class.blink::Member"* %15 to i8**
  %237 = load i8*, i8** %236, align 8
  %238 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %237) #12
  br label %239

239:                                              ; preds = %235, %228
  %240 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %246, label %242

242:                                              ; preds = %239
  %243 = bitcast %"class.blink::Member"* %136 to i8**
  %244 = load i8*, i8** %243, align 8
  %245 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %244) #12
  br label %246

246:                                              ; preds = %239, %242
  %247 = add i32 %126, 1
  br label %248

248:                                              ; preds = %125, %246
  %249 = phi i32 [ %247, %246 ], [ %126, %125 ]
  %250 = phi %"class.blink::Member"* [ %136, %246 ], [ %7, %125 ]
  %251 = ptrtoint %"class.blink::Member"* %15 to i64
  %252 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 1
  %253 = icmp ult %"class.blink::Member"* %252, %250
  br i1 %253, label %254, label %302

254:                                              ; preds = %248, %298
  %255 = phi %"class.blink::Member"* [ %301, %298 ], [ %117, %248 ]
  %256 = phi i32 [ %299, %298 ], [ %249, %248 ]
  %257 = phi %"class.blink::Member"* [ %268, %298 ], [ %252, %248 ]
  %258 = phi %"class.blink::Member"* [ %271, %298 ], [ %250, %248 ]
  %259 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %255, i64 0, i32 0, i32 0
  br label %260

260:                                              ; preds = %260, %254
  %261 = phi %"class.blink::Member"* [ %257, %254 ], [ %268, %260 ]
  %262 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %261, i64 0, i32 0, i32 0
  %263 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %262, align 8
  %264 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %263, i64 0, i32 0
  %265 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %259, align 8
  %266 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %265, i64 0, i32 0
  %267 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %264, %"class.WTF::String"* dereferenceable(8) %266) #12
  %268 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %261, i64 1
  br i1 %267, label %260, label %269

269:                                              ; preds = %260, %269
  %270 = phi %"class.blink::Member"* [ %271, %269 ], [ %258, %260 ]
  %271 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %270, i64 -1
  %272 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %271, i64 0, i32 0, i32 0
  %273 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %272, align 8
  %274 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %273, i64 0, i32 0
  %275 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %259, align 8
  %276 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %275, i64 0, i32 0
  %277 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %274, %"class.WTF::String"* dereferenceable(8) %276) #12
  br i1 %277, label %278, label %269

278:                                              ; preds = %269
  %279 = icmp ugt %"class.blink::Member"* %261, %271
  br i1 %279, label %302, label %280

280:                                              ; preds = %278
  %281 = bitcast %"class.blink::Member"* %261 to i64*
  %282 = load i64, i64* %281, align 8
  %283 = bitcast %"class.blink::Member"* %271 to i64*
  %284 = load i64, i64* %283, align 8
  store atomic i64 %284, i64* %281 monotonic, align 8
  store atomic i64 %282, i64* %283 monotonic, align 8
  %285 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %291, label %287

287:                                              ; preds = %280
  %288 = bitcast %"class.blink::Member"* %261 to i8**
  %289 = load i8*, i8** %288, align 8
  %290 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %289) #12
  br label %291

291:                                              ; preds = %287, %280
  %292 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %298, label %294

294:                                              ; preds = %291
  %295 = bitcast %"class.blink::Member"* %271 to i8**
  %296 = load i8*, i8** %295, align 8
  %297 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %296) #12
  br label %298

298:                                              ; preds = %291, %294
  %299 = add i32 %256, 1
  %300 = icmp eq %"class.blink::Member"* %255, %261
  %301 = select i1 %300, %"class.blink::Member"* %271, %"class.blink::Member"* %255
  br label %254

302:                                              ; preds = %278, %248
  %303 = phi %"class.blink::Member"* [ %117, %248 ], [ %255, %278 ]
  %304 = phi i32 [ %249, %248 ], [ %256, %278 ]
  %305 = phi %"class.blink::Member"* [ %252, %248 ], [ %261, %278 ]
  %306 = icmp eq %"class.blink::Member"* %305, %303
  br i1 %306, label %335, label %307

307:                                              ; preds = %302
  %308 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %303, i64 0, i32 0, i32 0
  %309 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %308, align 8
  %310 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %309, i64 0, i32 0
  %311 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %305, i64 0, i32 0, i32 0
  %312 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %311, align 8
  %313 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %312, i64 0, i32 0
  %314 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %310, %"class.WTF::String"* dereferenceable(8) %313) #12
  br i1 %314, label %315, label %335

315:                                              ; preds = %307
  %316 = bitcast %"class.blink::Member"* %305 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = bitcast %"class.blink::Member"* %303 to i64*
  %319 = load i64, i64* %318, align 8
  store atomic i64 %319, i64* %316 monotonic, align 8
  store atomic i64 %317, i64* %318 monotonic, align 8
  %320 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %326, label %322

322:                                              ; preds = %315
  %323 = bitcast %"class.blink::Member"* %305 to i8**
  %324 = load i8*, i8** %323, align 8
  %325 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %324) #12
  br label %326

326:                                              ; preds = %322, %315
  %327 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %333, label %329

329:                                              ; preds = %326
  %330 = bitcast %"class.blink::Member"* %303 to i8**
  %331 = load i8*, i8** %330, align 8
  %332 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %331) #12
  br label %333

333:                                              ; preds = %326, %329
  %334 = add i32 %304, 1
  br label %335

335:                                              ; preds = %302, %333, %307
  %336 = phi i32 [ %334, %333 ], [ %304, %307 ], [ %304, %302 ]
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %338, label %345

338:                                              ; preds = %335
  %339 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_0PNS1_6MemberINS1_10PluginInfoEEEEEbT0_SC_T_"(%"class.blink::Member"* %15, %"class.blink::Member"* %305)
  %340 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %305, i64 1
  %341 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_0PNS1_6MemberINS1_10PluginInfoEEEEEbT0_SC_T_"(%"class.blink::Member"* %340, %"class.blink::Member"* %4)
  br i1 %341, label %342, label %344

342:                                              ; preds = %338
  br i1 %339, label %356, label %343

343:                                              ; preds = %342, %354
  br label %3

344:                                              ; preds = %338
  br i1 %339, label %352, label %345

345:                                              ; preds = %344, %335
  %346 = ptrtoint %"class.blink::Member"* %305 to i64
  %347 = sub i64 %346, %251
  %348 = sub i64 %11, %346
  %349 = icmp slt i64 %347, %348
  br i1 %349, label %350, label %354

350:                                              ; preds = %345
  tail call fastcc void @"_ZNSt3__16__sortIRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_0PNS1_6MemberINS1_10PluginInfoEEEEEvT0_SC_T_"(%"class.blink::Member"* %15, %"class.blink::Member"* %305)
  %351 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %305, i64 1
  br label %352

352:                                              ; preds = %350, %344
  %353 = phi %"class.blink::Member"* [ %340, %344 ], [ %351, %350 ]
  br label %12

354:                                              ; preds = %345
  %355 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %305, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_0PNS1_6MemberINS1_10PluginInfoEEEEEvT0_SC_T_"(%"class.blink::Member"* %355, %"class.blink::Member"* %4)
  br label %343

356:                                              ; preds = %342, %176, %14, %14, %145, %173, %111, %63, %42, %39, %19, %46, %50, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort3IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_0PNS1_6MemberINS1_10PluginInfoEEEEEjT0_SC_SC_T_"(%"class.blink::Member"* nocapture, %"class.blink::Member"* nocapture, %"class.blink::Member"* nocapture) unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %5, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %8, i64 0, i32 0
  %10 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %6, %"class.WTF::String"* dereferenceable(8) %9) #12
  %11 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 0, i32 0, i32 0
  %12 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %12, i64 0, i32 0
  %14 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %4, align 8
  %15 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %14, i64 0, i32 0
  %16 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %13, %"class.WTF::String"* dereferenceable(8) %15) #12
  br i1 %10, label %59, label %17

17:                                               ; preds = %3
  br i1 %16, label %18, label %117

18:                                               ; preds = %17
  %19 = bitcast %"class.blink::Member"* %1 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.blink::Member"* %2 to i64*
  %22 = load i64, i64* %21, align 8
  store atomic i64 %22, i64* %19 monotonic, align 8
  store atomic i64 %20, i64* %21 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %18
  %26 = bitcast %"class.blink::Member"* %1 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #12
  br label %29

29:                                               ; preds = %25, %18
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %29
  %33 = bitcast %"class.blink::Member"* %2 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %34) #12
  br label %36

36:                                               ; preds = %29, %32
  %37 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %4, align 8
  %38 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %37, i64 0, i32 0
  %39 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %7, align 8
  %40 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %39, i64 0, i32 0
  %41 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %38, %"class.WTF::String"* dereferenceable(8) %40) #12
  br i1 %41, label %42, label %117

42:                                               ; preds = %36
  %43 = bitcast %"class.blink::Member"* %0 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = load i64, i64* %19, align 8
  store atomic i64 %45, i64* %43 monotonic, align 8
  store atomic i64 %44, i64* %19 monotonic, align 8
  %46 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %52, label %48

48:                                               ; preds = %42
  %49 = bitcast %"class.blink::Member"* %0 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %50) #12
  br label %52

52:                                               ; preds = %48, %42
  %53 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %117, label %55

55:                                               ; preds = %52
  %56 = bitcast %"class.blink::Member"* %1 to i8**
  %57 = load i8*, i8** %56, align 8
  %58 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %57) #12
  br label %117

59:                                               ; preds = %3
  %60 = bitcast %"class.blink::Member"* %0 to i64*
  %61 = load i64, i64* %60, align 8
  br i1 %16, label %62, label %78

62:                                               ; preds = %59
  %63 = bitcast %"class.blink::Member"* %2 to i64*
  %64 = load i64, i64* %63, align 8
  store atomic i64 %64, i64* %60 monotonic, align 8
  store atomic i64 %61, i64* %63 monotonic, align 8
  %65 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %71, label %67

67:                                               ; preds = %62
  %68 = bitcast %"class.blink::Member"* %0 to i8**
  %69 = load i8*, i8** %68, align 8
  %70 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %69) #12
  br label %71

71:                                               ; preds = %67, %62
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %117, label %74

74:                                               ; preds = %71
  %75 = bitcast %"class.blink::Member"* %2 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %76) #12
  br label %117

78:                                               ; preds = %59
  %79 = bitcast %"class.blink::Member"* %1 to i64*
  %80 = load i64, i64* %79, align 8
  store atomic i64 %80, i64* %60 monotonic, align 8
  store atomic i64 %61, i64* %79 monotonic, align 8
  %81 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %87, label %83

83:                                               ; preds = %78
  %84 = bitcast %"class.blink::Member"* %0 to i8**
  %85 = load i8*, i8** %84, align 8
  %86 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %85) #12
  br label %87

87:                                               ; preds = %83, %78
  %88 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %94, label %90

90:                                               ; preds = %87
  %91 = bitcast %"class.blink::Member"* %1 to i8**
  %92 = load i8*, i8** %91, align 8
  %93 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %92) #12
  br label %94

94:                                               ; preds = %87, %90
  %95 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %11, align 8
  %96 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %95, i64 0, i32 0
  %97 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %4, align 8
  %98 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %97, i64 0, i32 0
  %99 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %96, %"class.WTF::String"* dereferenceable(8) %98) #12
  br i1 %99, label %100, label %117

100:                                              ; preds = %94
  %101 = load i64, i64* %79, align 8
  %102 = bitcast %"class.blink::Member"* %2 to i64*
  %103 = load i64, i64* %102, align 8
  store atomic i64 %103, i64* %79 monotonic, align 8
  store atomic i64 %101, i64* %102 monotonic, align 8
  %104 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %110, label %106

106:                                              ; preds = %100
  %107 = bitcast %"class.blink::Member"* %1 to i8**
  %108 = load i8*, i8** %107, align 8
  %109 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %108) #12
  br label %110

110:                                              ; preds = %106, %100
  %111 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %117, label %113

113:                                              ; preds = %110
  %114 = bitcast %"class.blink::Member"* %2 to i8**
  %115 = load i8*, i8** %114, align 8
  %116 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %115) #12
  br label %117

117:                                              ; preds = %113, %110, %74, %71, %55, %52, %94, %36, %17
  %118 = phi i32 [ 0, %17 ], [ 1, %36 ], [ 1, %94 ], [ 2, %52 ], [ 2, %55 ], [ 1, %71 ], [ 1, %74 ], [ 2, %110 ], [ 2, %113 ]
  ret i32 %118
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_0PNS1_6MemberINS1_10PluginInfoEEEEEjT0_SC_SC_SC_T_"(%"class.blink::Member"* nocapture, %"class.blink::Member"* nocapture, %"class.blink::Member"* nocapture, %"class.blink::Member"* nocapture) unnamed_addr #0 {
  %5 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_0PNS1_6MemberINS1_10PluginInfoEEEEEjT0_SC_SC_T_"(%"class.blink::Member"* %0, %"class.blink::Member"* %1, %"class.blink::Member"* %2)
  %6 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 0, i32 0, i32 0
  %10 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %10, i64 0, i32 0
  %12 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %8, %"class.WTF::String"* dereferenceable(8) %11) #12
  br i1 %12, label %13, label %83

13:                                               ; preds = %4
  %14 = bitcast %"class.blink::Member"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.blink::Member"* %3 to i64*
  %17 = load i64, i64* %16, align 8
  store atomic i64 %17, i64* %14 monotonic, align 8
  store atomic i64 %15, i64* %16 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.blink::Member"* %2 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #12
  br label %24

24:                                               ; preds = %20, %13
  %25 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %3 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %29) #12
  br label %31

31:                                               ; preds = %24, %27
  %32 = add i32 %5, 1
  %33 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %9, align 8
  %34 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %33, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 0, i32 0, i32 0
  %36 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %36, i64 0, i32 0
  %38 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %34, %"class.WTF::String"* dereferenceable(8) %37) #12
  br i1 %38, label %39, label %83

39:                                               ; preds = %31
  %40 = bitcast %"class.blink::Member"* %1 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = load i64, i64* %14, align 8
  store atomic i64 %42, i64* %40 monotonic, align 8
  store atomic i64 %41, i64* %14 monotonic, align 8
  %43 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %39
  %46 = bitcast %"class.blink::Member"* %1 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #12
  br label %49

49:                                               ; preds = %45, %39
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.blink::Member"* %2 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %54) #12
  br label %56

56:                                               ; preds = %49, %52
  %57 = add i32 %5, 2
  %58 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %35, align 8
  %59 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %58, i64 0, i32 0
  %60 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 0, i32 0, i32 0
  %61 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %61, i64 0, i32 0
  %63 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %59, %"class.WTF::String"* dereferenceable(8) %62) #12
  br i1 %63, label %64, label %83

64:                                               ; preds = %56
  %65 = bitcast %"class.blink::Member"* %0 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = load i64, i64* %40, align 8
  store atomic i64 %67, i64* %65 monotonic, align 8
  store atomic i64 %66, i64* %40 monotonic, align 8
  %68 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %74, label %70

70:                                               ; preds = %64
  %71 = bitcast %"class.blink::Member"* %0 to i8**
  %72 = load i8*, i8** %71, align 8
  %73 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %72) #12
  br label %74

74:                                               ; preds = %70, %64
  %75 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %81, label %77

77:                                               ; preds = %74
  %78 = bitcast %"class.blink::Member"* %1 to i8**
  %79 = load i8*, i8** %78, align 8
  %80 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %79) #12
  br label %81

81:                                               ; preds = %74, %77
  %82 = add i32 %5, 3
  br label %83

83:                                               ; preds = %31, %81, %56, %4
  %84 = phi i32 [ %82, %81 ], [ %57, %56 ], [ %32, %31 ], [ %5, %4 ]
  ret i32 %84
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort5IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_0PNS1_6MemberINS1_10PluginInfoEEEEEjT0_SC_SC_SC_SC_T_"(%"class.blink::Member"* nocapture, %"class.blink::Member"* nocapture, %"class.blink::Member"* nocapture, %"class.blink::Member"* nocapture, %"class.blink::Member"* nocapture) unnamed_addr #0 {
  %6 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_0PNS1_6MemberINS1_10PluginInfoEEEEEjT0_SC_SC_SC_T_"(%"class.blink::Member"* %0, %"class.blink::Member"* %1, %"class.blink::Member"* %2, %"class.blink::Member"* %3)
  %7 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %8, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 0, i32 0, i32 0
  %11 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %11, i64 0, i32 0
  %13 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %9, %"class.WTF::String"* dereferenceable(8) %12) #12
  br i1 %13, label %14, label %109

14:                                               ; preds = %5
  %15 = bitcast %"class.blink::Member"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.blink::Member"* %4 to i64*
  %18 = load i64, i64* %17, align 8
  store atomic i64 %18, i64* %15 monotonic, align 8
  store atomic i64 %16, i64* %17 monotonic, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.blink::Member"* %3 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %23) #12
  br label %25

25:                                               ; preds = %21, %14
  %26 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %25
  %29 = bitcast %"class.blink::Member"* %4 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #12
  br label %32

32:                                               ; preds = %25, %28
  %33 = add i32 %6, 1
  %34 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %10, align 8
  %35 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %34, i64 0, i32 0
  %36 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 0, i32 0, i32 0
  %37 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %37, i64 0, i32 0
  %39 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %35, %"class.WTF::String"* dereferenceable(8) %38) #12
  br i1 %39, label %40, label %109

40:                                               ; preds = %32
  %41 = bitcast %"class.blink::Member"* %2 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = load i64, i64* %15, align 8
  store atomic i64 %43, i64* %41 monotonic, align 8
  store atomic i64 %42, i64* %15 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::Member"* %2 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #12
  br label %50

50:                                               ; preds = %46, %40
  %51 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %50
  %54 = bitcast %"class.blink::Member"* %3 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %55) #12
  br label %57

57:                                               ; preds = %50, %53
  %58 = add i32 %6, 2
  %59 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %36, align 8
  %60 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %59, i64 0, i32 0
  %61 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 0, i32 0, i32 0
  %62 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %62, i64 0, i32 0
  %64 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %60, %"class.WTF::String"* dereferenceable(8) %63) #12
  br i1 %64, label %65, label %109

65:                                               ; preds = %57
  %66 = bitcast %"class.blink::Member"* %1 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = load i64, i64* %41, align 8
  store atomic i64 %68, i64* %66 monotonic, align 8
  store atomic i64 %67, i64* %41 monotonic, align 8
  %69 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %75, label %71

71:                                               ; preds = %65
  %72 = bitcast %"class.blink::Member"* %1 to i8**
  %73 = load i8*, i8** %72, align 8
  %74 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %73) #12
  br label %75

75:                                               ; preds = %71, %65
  %76 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %75
  %79 = bitcast %"class.blink::Member"* %2 to i8**
  %80 = load i8*, i8** %79, align 8
  %81 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %80) #12
  br label %82

82:                                               ; preds = %75, %78
  %83 = add i32 %6, 3
  %84 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %61, align 8
  %85 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %84, i64 0, i32 0
  %86 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 0, i32 0, i32 0
  %87 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %87, i64 0, i32 0
  %89 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %85, %"class.WTF::String"* dereferenceable(8) %88) #12
  br i1 %89, label %90, label %109

90:                                               ; preds = %82
  %91 = bitcast %"class.blink::Member"* %0 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = load i64, i64* %66, align 8
  store atomic i64 %93, i64* %91 monotonic, align 8
  store atomic i64 %92, i64* %66 monotonic, align 8
  %94 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %100, label %96

96:                                               ; preds = %90
  %97 = bitcast %"class.blink::Member"* %0 to i8**
  %98 = load i8*, i8** %97, align 8
  %99 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %98) #12
  br label %100

100:                                              ; preds = %96, %90
  %101 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %107, label %103

103:                                              ; preds = %100
  %104 = bitcast %"class.blink::Member"* %1 to i8**
  %105 = load i8*, i8** %104, align 8
  %106 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %105) #12
  br label %107

107:                                              ; preds = %100, %103
  %108 = add i32 %6, 4
  br label %109

109:                                              ; preds = %32, %82, %107, %57, %5
  %110 = phi i32 [ %108, %107 ], [ %83, %82 ], [ %58, %57 ], [ %33, %32 ], [ %6, %5 ]
  ret i32 %110
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_0PNS1_6MemberINS1_10PluginInfoEEEEEbT0_SC_T_"(%"class.blink::Member"*, %"class.blink::Member"*) unnamed_addr #0 {
  %3 = ptrtoint %"class.blink::Member"* %1 to i64
  %4 = ptrtoint %"class.blink::Member"* %0 to i64
  %5 = sub i64 %3, %4
  %6 = ashr exact i64 %5, 3
  switch i64 %6, label %49 [
    i64 0, label %108
    i64 1, label %108
    i64 2, label %7
    i64 3, label %34
    i64 4, label %38
    i64 5, label %43
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 -1
  %9 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %10, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 0, i32 0, i32 0
  %13 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %13, i64 0, i32 0
  %15 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %11, %"class.WTF::String"* dereferenceable(8) %14) #12
  br i1 %15, label %16, label %108

16:                                               ; preds = %7
  %17 = bitcast %"class.blink::Member"* %0 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.blink::Member"* %8 to i64*
  %20 = load i64, i64* %19, align 8
  store atomic i64 %20, i64* %17 monotonic, align 8
  store atomic i64 %18, i64* %19 monotonic, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.blink::Member"* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %25) #12
  br label %27

27:                                               ; preds = %23, %16
  %28 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %108, label %30

30:                                               ; preds = %27
  %31 = bitcast %"class.blink::Member"* %8 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %32) #12
  br label %108

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 1
  %36 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 -1
  %37 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_0PNS1_6MemberINS1_10PluginInfoEEEEEjT0_SC_SC_T_"(%"class.blink::Member"* %0, %"class.blink::Member"* %35, %"class.blink::Member"* %36)
  br label %108

38:                                               ; preds = %2
  %39 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 1
  %40 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 2
  %41 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 -1
  %42 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_0PNS1_6MemberINS1_10PluginInfoEEEEEjT0_SC_SC_SC_T_"(%"class.blink::Member"* %0, %"class.blink::Member"* %39, %"class.blink::Member"* %40, %"class.blink::Member"* %41)
  br label %108

43:                                               ; preds = %2
  %44 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 1
  %45 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 2
  %46 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 3
  %47 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 -1
  %48 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_0PNS1_6MemberINS1_10PluginInfoEEEEEjT0_SC_SC_SC_SC_T_"(%"class.blink::Member"* %0, %"class.blink::Member"* %44, %"class.blink::Member"* %45, %"class.blink::Member"* %46, %"class.blink::Member"* %47)
  br label %108

49:                                               ; preds = %2
  %50 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 2
  %51 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 1
  %52 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_0PNS1_6MemberINS1_10PluginInfoEEEEEjT0_SC_SC_T_"(%"class.blink::Member"* %0, %"class.blink::Member"* %51, %"class.blink::Member"* %50)
  %53 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 3
  %54 = icmp eq %"class.blink::Member"* %53, %1
  br i1 %54, label %108, label %55

55:                                               ; preds = %49, %101
  %56 = phi %"class.blink::Member"* [ %103, %101 ], [ %53, %49 ]
  %57 = phi i32 [ %102, %101 ], [ 0, %49 ]
  %58 = phi %"class.blink::Member"* [ %56, %101 ], [ %50, %49 ]
  %59 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %56, i64 0, i32 0, i32 0
  %60 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %60, i64 0, i32 0
  %62 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %58, i64 0, i32 0, i32 0
  %63 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %63, i64 0, i32 0
  %65 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %61, %"class.WTF::String"* dereferenceable(8) %64) #12
  br i1 %65, label %66, label %101

66:                                               ; preds = %55
  %67 = bitcast %"class.blink::Member"* %56 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = inttoptr i64 %68 to %"class.blink::PluginInfo"*
  %70 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %69, i64 0, i32 0
  br label %71

71:                                               ; preds = %84, %66
  %72 = phi %"class.blink::Member"* [ %56, %66 ], [ %73, %84 ]
  %73 = phi %"class.blink::Member"* [ %58, %66 ], [ %85, %84 ]
  %74 = bitcast %"class.blink::Member"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member"* %72 to i64*
  store atomic i64 %75, i64* %76 monotonic, align 8
  %77 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %71
  %80 = inttoptr i64 %75 to i8*
  %81 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %80) #12
  br label %82

82:                                               ; preds = %71, %79
  %83 = icmp eq %"class.blink::Member"* %73, %0
  br i1 %83, label %90, label %84

84:                                               ; preds = %82
  %85 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %73, i64 -1
  %86 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %85, i64 0, i32 0, i32 0
  %87 = load %"class.blink::PluginInfo"*, %"class.blink::PluginInfo"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::PluginInfo", %"class.blink::PluginInfo"* %87, i64 0, i32 0
  %89 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %70, %"class.WTF::String"* dereferenceable(8) %88) #12
  br i1 %89, label %71, label %90

90:                                               ; preds = %82, %84
  %91 = phi %"class.blink::Member"* [ %73, %84 ], [ %0, %82 ]
  %92 = bitcast %"class.blink::Member"* %91 to i64*
  store atomic i64 %68, i64* %92 monotonic, align 8
  %93 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %90
  %96 = inttoptr i64 %68 to i8*
  %97 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %96) #12
  br label %98

98:                                               ; preds = %90, %95
  %99 = add i32 %57, 1
  %100 = icmp eq i32 %99, 8
  br i1 %100, label %105, label %101

101:                                              ; preds = %98, %55
  %102 = phi i32 [ %99, %98 ], [ %57, %55 ]
  %103 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %56, i64 1
  %104 = icmp eq %"class.blink::Member"* %103, %1
  br i1 %104, label %108, label %55

105:                                              ; preds = %98
  %106 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %56, i64 1
  %107 = icmp eq %"class.blink::Member"* %106, %1
  br label %108

108:                                              ; preds = %101, %105, %49, %30, %27, %7, %2, %2, %43, %38, %34
  %109 = phi i1 [ true, %43 ], [ true, %38 ], [ true, %34 ], [ true, %2 ], [ true, %2 ], [ true, %7 ], [ true, %27 ], [ true, %30 ], [ true, %49 ], [ %107, %105 ], [ true, %101 ]
  ret i1 %109
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #8 comdat {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %4, null
  %8 = icmp ne %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %9, label %15

9:                                                ; preds = %2
  br i1 %8, label %10, label %168

10:                                               ; preds = %9
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp ne i32 %12, 0
  %14 = sext i1 %13 to i32
  br label %168

15:                                               ; preds = %2
  br i1 %8, label %21, label %16

16:                                               ; preds = %15
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp ne i32 %18, 0
  %20 = zext i1 %19 to i32
  br label %168

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 1
  %29 = icmp ne i32 %28, 0
  br i1 %25, label %94, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp ult i32 %32, %34
  %36 = select i1 %35, i32 %32, i32 %34
  %37 = icmp eq i32 %36, 0
  br i1 %29, label %38, label %64

38:                                               ; preds = %30
  br i1 %37, label %59, label %39

39:                                               ; preds = %38
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %51, %39
  %45 = phi i32 [ %54, %51 ], [ 0, %39 ]
  %46 = phi i8* [ %53, %51 ], [ %41, %39 ]
  %47 = phi i8* [ %52, %51 ], [ %43, %39 ]
  %48 = load i8, i8* %47, align 1
  %49 = load i8, i8* %46, align 1
  %50 = icmp eq i8 %48, %49
  br i1 %50, label %51, label %56

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, i8* %47, i64 1
  %53 = getelementptr inbounds i8, i8* %46, i64 1
  %54 = add nuw i32 %45, 1
  %55 = icmp ult i32 %54, %36
  br i1 %55, label %44, label %59

56:                                               ; preds = %44
  %57 = icmp ugt i8 %48, %49
  %58 = select i1 %57, i32 1, i32 -1
  br label %168

59:                                               ; preds = %51, %38
  %60 = icmp eq i32 %32, %34
  br i1 %60, label %168, label %61

61:                                               ; preds = %59
  %62 = icmp ugt i32 %32, %34
  %63 = select i1 %62, i32 1, i32 -1
  br label %168

64:                                               ; preds = %30
  br i1 %37, label %89, label %65

65:                                               ; preds = %64
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %67 = bitcast %"class.WTF::StringImpl"* %66 to i16*
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %69 = bitcast %"class.WTF::StringImpl"* %68 to i8*
  br label %70

70:                                               ; preds = %79, %65
  %71 = phi i32 [ %82, %79 ], [ 0, %65 ]
  %72 = phi i16* [ %81, %79 ], [ %67, %65 ]
  %73 = phi i8* [ %80, %79 ], [ %69, %65 ]
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = load i16, i16* %72, align 2
  %77 = zext i16 %76 to i32
  %78 = icmp eq i32 %75, %77
  br i1 %78, label %79, label %84

79:                                               ; preds = %70
  %80 = getelementptr inbounds i8, i8* %73, i64 1
  %81 = getelementptr inbounds i16, i16* %72, i64 1
  %82 = add nuw i32 %71, 1
  %83 = icmp ult i32 %82, %36
  br i1 %83, label %70, label %89

84:                                               ; preds = %70
  %85 = zext i8 %74 to i32
  %86 = zext i16 %76 to i32
  %87 = icmp ugt i32 %85, %86
  %88 = select i1 %87, i32 1, i32 -1
  br label %168

89:                                               ; preds = %79, %64
  %90 = icmp eq i32 %32, %34
  br i1 %90, label %168, label %91

91:                                               ; preds = %89
  %92 = icmp ugt i32 %32, %34
  %93 = select i1 %92, i32 1, i32 -1
  br label %168

94:                                               ; preds = %21
  br i1 %29, label %95, label %135

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp ult i32 %97, %99
  %101 = select i1 %100, i32 %97, i32 %99
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %127, label %103

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %105 = bitcast %"class.WTF::StringImpl"* %104 to i16*
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %107 = bitcast %"class.WTF::StringImpl"* %106 to i8*
  br label %108

108:                                              ; preds = %117, %103
  %109 = phi i32 [ %120, %117 ], [ 0, %103 ]
  %110 = phi i16* [ %119, %117 ], [ %105, %103 ]
  %111 = phi i8* [ %118, %117 ], [ %107, %103 ]
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = load i16, i16* %110, align 2
  %115 = zext i16 %114 to i32
  %116 = icmp eq i32 %113, %115
  br i1 %116, label %117, label %122

117:                                              ; preds = %108
  %118 = getelementptr inbounds i8, i8* %111, i64 1
  %119 = getelementptr inbounds i16, i16* %110, i64 1
  %120 = add nuw i32 %109, 1
  %121 = icmp ult i32 %120, %101
  br i1 %121, label %108, label %127

122:                                              ; preds = %108
  %123 = zext i8 %112 to i32
  %124 = zext i16 %114 to i32
  %125 = icmp ugt i32 %123, %124
  %126 = select i1 %125, i32 1, i32 -1
  br label %132

127:                                              ; preds = %117, %95
  %128 = icmp eq i32 %97, %99
  br i1 %128, label %132, label %129

129:                                              ; preds = %127
  %130 = icmp ugt i32 %97, %99
  %131 = select i1 %130, i32 1, i32 -1
  br label %132

132:                                              ; preds = %129, %127, %122
  %133 = phi i32 [ %126, %122 ], [ %131, %129 ], [ 0, %127 ]
  %134 = sub nsw i32 0, %133
  br label %168

135:                                              ; preds = %94
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = icmp ult i32 %137, %139
  %141 = select i1 %140, i32 %137, i32 %139
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %163, label %143

143:                                              ; preds = %135
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %145 = bitcast %"class.WTF::StringImpl"* %144 to i16*
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %147 = bitcast %"class.WTF::StringImpl"* %146 to i16*
  br label %148

148:                                              ; preds = %155, %143
  %149 = phi i32 [ %158, %155 ], [ 0, %143 ]
  %150 = phi i16* [ %157, %155 ], [ %145, %143 ]
  %151 = phi i16* [ %156, %155 ], [ %147, %143 ]
  %152 = load i16, i16* %151, align 2
  %153 = load i16, i16* %150, align 2
  %154 = icmp eq i16 %152, %153
  br i1 %154, label %155, label %160

155:                                              ; preds = %148
  %156 = getelementptr inbounds i16, i16* %151, i64 1
  %157 = getelementptr inbounds i16, i16* %150, i64 1
  %158 = add nuw i32 %149, 1
  %159 = icmp ult i32 %158, %141
  br i1 %159, label %148, label %163

160:                                              ; preds = %148
  %161 = icmp ugt i16 %152, %153
  %162 = select i1 %161, i32 1, i32 -1
  br label %168

163:                                              ; preds = %155, %135
  %164 = icmp eq i32 %137, %139
  br i1 %164, label %168, label %165

165:                                              ; preds = %163
  %166 = icmp ugt i32 %137, %139
  %167 = select i1 %166, i32 1, i32 -1
  br label %168

168:                                              ; preds = %9, %10, %16, %56, %59, %61, %84, %89, %91, %132, %160, %163, %165
  %169 = phi i32 [ %20, %16 ], [ 0, %9 ], [ %14, %10 ], [ %134, %132 ], [ %58, %56 ], [ %63, %61 ], [ 0, %59 ], [ %88, %84 ], [ %93, %91 ], [ 0, %89 ], [ %162, %160 ], [ %167, %165 ], [ 0, %163 ]
  %170 = icmp slt i32 %169, 0
  ret i1 %170
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_1PNS1_6MemberINS1_13MimeClassInfoEEEEEvT0_SC_T_"(%"class.blink::Member.8"*, %"class.blink::Member.8"*) unnamed_addr #0 {
  br label %3

3:                                                ; preds = %343, %2
  %4 = phi %"class.blink::Member.8"* [ %1, %2 ], [ %305, %343 ]
  %5 = phi %"class.blink::Member.8"* [ %0, %2 ], [ %15, %343 ]
  %6 = ptrtoint %"class.blink::Member.8"* %4 to i64
  %7 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %4, i64 -1
  %8 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %7, i64 0, i32 0, i32 0
  %9 = bitcast %"class.blink::Member.8"* %7 to i64*
  %10 = bitcast %"class.blink::Member.8"* %7 to i8**
  %11 = ptrtoint %"class.blink::Member.8"* %4 to i64
  br label %12

12:                                               ; preds = %352, %3
  %13 = phi %"class.blink::Member.8"* [ %5, %3 ], [ %353, %352 ]
  br label %14

14:                                               ; preds = %200, %12
  %15 = phi %"class.blink::Member.8"* [ %13, %12 ], [ %183, %200 ]
  %16 = ptrtoint %"class.blink::Member.8"* %15 to i64
  %17 = sub i64 %6, %16
  %18 = ashr exact i64 %17, 3
  switch i64 %18, label %61 [
    i64 0, label %356
    i64 1, label %356
    i64 2, label %19
    i64 3, label %46
    i64 4, label %50
    i64 5, label %55
  ]

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %4, i64 -1
  %21 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %22, i64 0, i32 0
  %24 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %15, i64 0, i32 0, i32 0
  %25 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %25, i64 0, i32 0
  %27 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %23, %"class.WTF::String"* dereferenceable(8) %26) #12
  br i1 %27, label %28, label %356

28:                                               ; preds = %19
  %29 = bitcast %"class.blink::Member.8"* %15 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::Member.8"* %20 to i64*
  %32 = load i64, i64* %31, align 8
  store atomic i64 %32, i64* %29 monotonic, align 8
  store atomic i64 %30, i64* %31 monotonic, align 8
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %28
  %36 = bitcast %"class.blink::Member.8"* %15 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %37) #12
  br label %39

39:                                               ; preds = %35, %28
  %40 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %356, label %42

42:                                               ; preds = %39
  %43 = bitcast %"class.blink::Member.8"* %20 to i8**
  %44 = load i8*, i8** %43, align 8
  %45 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %44) #12
  br label %356

46:                                               ; preds = %14
  %47 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %15, i64 1
  %48 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %4, i64 -1
  %49 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_1PNS1_6MemberINS1_13MimeClassInfoEEEEEjT0_SC_SC_T_"(%"class.blink::Member.8"* %15, %"class.blink::Member.8"* %47, %"class.blink::Member.8"* %48)
  br label %356

50:                                               ; preds = %14
  %51 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %15, i64 1
  %52 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %15, i64 2
  %53 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %4, i64 -1
  %54 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_1PNS1_6MemberINS1_13MimeClassInfoEEEEEjT0_SC_SC_SC_T_"(%"class.blink::Member.8"* %15, %"class.blink::Member.8"* %51, %"class.blink::Member.8"* %52, %"class.blink::Member.8"* %53)
  br label %356

55:                                               ; preds = %14
  %56 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %15, i64 1
  %57 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %15, i64 2
  %58 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %15, i64 3
  %59 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %4, i64 -1
  %60 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_1PNS1_6MemberINS1_13MimeClassInfoEEEEEjT0_SC_SC_SC_SC_T_"(%"class.blink::Member.8"* %15, %"class.blink::Member.8"* %56, %"class.blink::Member.8"* %57, %"class.blink::Member.8"* %58, %"class.blink::Member.8"* %59)
  br label %356

61:                                               ; preds = %14
  %62 = icmp slt i64 %17, 56
  br i1 %62, label %63, label %114

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %15, i64 2
  %65 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %15, i64 1
  %66 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_1PNS1_6MemberINS1_13MimeClassInfoEEEEEjT0_SC_SC_T_"(%"class.blink::Member.8"* %15, %"class.blink::Member.8"* %65, %"class.blink::Member.8"* %64) #12
  %67 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %15, i64 3
  %68 = icmp eq %"class.blink::Member.8"* %67, %4
  br i1 %68, label %356, label %69

69:                                               ; preds = %63, %111
  %70 = phi %"class.blink::Member.8"* [ %112, %111 ], [ %67, %63 ]
  %71 = phi %"class.blink::Member.8"* [ %70, %111 ], [ %64, %63 ]
  %72 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %70, i64 0, i32 0, i32 0
  %73 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %73, i64 0, i32 0
  %75 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %71, i64 0, i32 0, i32 0
  %76 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %76, i64 0, i32 0
  %78 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %74, %"class.WTF::String"* dereferenceable(8) %77) #12
  br i1 %78, label %79, label %111

79:                                               ; preds = %69
  %80 = bitcast %"class.blink::Member.8"* %70 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = inttoptr i64 %81 to %"class.blink::MimeClassInfo"*
  %83 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %82, i64 0, i32 0
  br label %84

84:                                               ; preds = %97, %79
  %85 = phi %"class.blink::Member.8"* [ %70, %79 ], [ %86, %97 ]
  %86 = phi %"class.blink::Member.8"* [ %71, %79 ], [ %98, %97 ]
  %87 = bitcast %"class.blink::Member.8"* %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"class.blink::Member.8"* %85 to i64*
  store atomic i64 %88, i64* %89 monotonic, align 8
  %90 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %95, label %92

92:                                               ; preds = %84
  %93 = inttoptr i64 %88 to i8*
  %94 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %93) #12
  br label %95

95:                                               ; preds = %92, %84
  %96 = icmp eq %"class.blink::Member.8"* %86, %15
  br i1 %96, label %103, label %97

97:                                               ; preds = %95
  %98 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %86, i64 -1
  %99 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %98, i64 0, i32 0, i32 0
  %100 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %100, i64 0, i32 0
  %102 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %83, %"class.WTF::String"* dereferenceable(8) %101) #12
  br i1 %102, label %84, label %103

103:                                              ; preds = %95, %97
  %104 = phi %"class.blink::Member.8"* [ %86, %97 ], [ %15, %95 ]
  %105 = bitcast %"class.blink::Member.8"* %104 to i64*
  store atomic i64 %81, i64* %105 monotonic, align 8
  %106 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %111, label %108

108:                                              ; preds = %103
  %109 = inttoptr i64 %81 to i8*
  %110 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %109) #12
  br label %111

111:                                              ; preds = %108, %103, %69
  %112 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %70, i64 1
  %113 = icmp eq %"class.blink::Member.8"* %112, %4
  br i1 %113, label %356, label %69

114:                                              ; preds = %61
  %115 = icmp sgt i64 %17, 7992
  %116 = sdiv i64 %18, 2
  %117 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %15, i64 %116
  br i1 %115, label %118, label %123

118:                                              ; preds = %114
  %119 = sdiv i64 %18, 4
  %120 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %15, i64 %119
  %121 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %117, i64 %119
  %122 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_1PNS1_6MemberINS1_13MimeClassInfoEEEEEjT0_SC_SC_SC_SC_T_"(%"class.blink::Member.8"* %15, %"class.blink::Member.8"* %120, %"class.blink::Member.8"* %117, %"class.blink::Member.8"* %121, %"class.blink::Member.8"* %7)
  br label %125

123:                                              ; preds = %114
  %124 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_1PNS1_6MemberINS1_13MimeClassInfoEEEEEjT0_SC_SC_T_"(%"class.blink::Member.8"* %15, %"class.blink::Member.8"* %117, %"class.blink::Member.8"* %7)
  br label %125

125:                                              ; preds = %123, %118
  %126 = phi i32 [ %122, %118 ], [ %124, %123 ]
  %127 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %15, i64 0, i32 0, i32 0
  %128 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %127, align 8
  %129 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %128, i64 0, i32 0
  %130 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %117, i64 0, i32 0, i32 0
  %131 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %131, i64 0, i32 0
  %133 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %129, %"class.WTF::String"* dereferenceable(8) %132) #12
  br i1 %133, label %248, label %134

134:                                              ; preds = %125, %221
  %135 = phi %"class.blink::Member.8"* [ %136, %221 ], [ %7, %125 ]
  %136 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %135, i64 -1
  %137 = icmp eq %"class.blink::Member.8"* %15, %136
  br i1 %137, label %138, label %221

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %15, i64 1
  %140 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %127, align 8
  %141 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %140, i64 0, i32 0
  %142 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %8, align 8
  %143 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %142, i64 0, i32 0
  %144 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %141, %"class.WTF::String"* dereferenceable(8) %143) #12
  br i1 %144, label %176, label %145

145:                                              ; preds = %138
  %146 = icmp eq %"class.blink::Member.8"* %139, %7
  br i1 %146, label %356, label %147

147:                                              ; preds = %145, %173
  %148 = phi %"class.blink::Member.8"* [ %174, %173 ], [ %139, %145 ]
  %149 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %127, align 8
  %150 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %149, i64 0, i32 0
  %151 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %148, i64 0, i32 0, i32 0
  %152 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %151, align 8
  %153 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %152, i64 0, i32 0
  %154 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %150, %"class.WTF::String"* dereferenceable(8) %153) #12
  br i1 %154, label %155, label %173

155:                                              ; preds = %147
  %156 = bitcast %"class.blink::Member.8"* %148 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = load i64, i64* %9, align 8
  store atomic i64 %158, i64* %156 monotonic, align 8
  store atomic i64 %157, i64* %9 monotonic, align 8
  %159 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %165, label %161

161:                                              ; preds = %155
  %162 = bitcast %"class.blink::Member.8"* %148 to i8**
  %163 = load i8*, i8** %162, align 8
  %164 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %163) #12
  br label %165

165:                                              ; preds = %161, %155
  %166 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %171, label %168

168:                                              ; preds = %165
  %169 = load i8*, i8** %10, align 8
  %170 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %169) #12
  br label %171

171:                                              ; preds = %165, %168
  %172 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %148, i64 1
  br label %176

173:                                              ; preds = %147
  %174 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %148, i64 1
  %175 = icmp eq %"class.blink::Member.8"* %174, %7
  br i1 %175, label %356, label %147

176:                                              ; preds = %171, %138
  %177 = phi %"class.blink::Member.8"* [ %139, %138 ], [ %172, %171 ]
  %178 = icmp eq %"class.blink::Member.8"* %177, %7
  br i1 %178, label %356, label %179

179:                                              ; preds = %176, %216
  %180 = phi %"class.blink::Member.8"* [ %190, %216 ], [ %177, %176 ]
  %181 = phi %"class.blink::Member.8"* [ %193, %216 ], [ %7, %176 ]
  br label %182

182:                                              ; preds = %182, %179
  %183 = phi %"class.blink::Member.8"* [ %180, %179 ], [ %190, %182 ]
  %184 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %127, align 8
  %185 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %184, i64 0, i32 0
  %186 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %183, i64 0, i32 0, i32 0
  %187 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %186, align 8
  %188 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %187, i64 0, i32 0
  %189 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %185, %"class.WTF::String"* dereferenceable(8) %188) #12
  %190 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %183, i64 1
  br i1 %189, label %191, label %182

191:                                              ; preds = %182, %191
  %192 = phi %"class.blink::Member.8"* [ %193, %191 ], [ %181, %182 ]
  %193 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %192, i64 -1
  %194 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %127, align 8
  %195 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %194, i64 0, i32 0
  %196 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %193, i64 0, i32 0, i32 0
  %197 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %196, align 8
  %198 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %197, i64 0, i32 0
  %199 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %195, %"class.WTF::String"* dereferenceable(8) %198) #12
  br i1 %199, label %191, label %200

200:                                              ; preds = %191
  %201 = icmp ult %"class.blink::Member.8"* %183, %193
  br i1 %201, label %202, label %14

202:                                              ; preds = %200
  %203 = bitcast %"class.blink::Member.8"* %183 to i64*
  %204 = load i64, i64* %203, align 8
  %205 = bitcast %"class.blink::Member.8"* %193 to i64*
  %206 = load i64, i64* %205, align 8
  store atomic i64 %206, i64* %203 monotonic, align 8
  store atomic i64 %204, i64* %205 monotonic, align 8
  %207 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %213, label %209

209:                                              ; preds = %202
  %210 = bitcast %"class.blink::Member.8"* %183 to i8**
  %211 = load i8*, i8** %210, align 8
  %212 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %211) #12
  br label %213

213:                                              ; preds = %209, %202
  %214 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %213, %217
  br label %179

217:                                              ; preds = %213
  %218 = bitcast %"class.blink::Member.8"* %193 to i8**
  %219 = load i8*, i8** %218, align 8
  %220 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %219) #12
  br label %216

221:                                              ; preds = %134
  %222 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %136, i64 0, i32 0, i32 0
  %223 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %222, align 8
  %224 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %223, i64 0, i32 0
  %225 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %130, align 8
  %226 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %225, i64 0, i32 0
  %227 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %224, %"class.WTF::String"* dereferenceable(8) %226) #12
  br i1 %227, label %228, label %134

228:                                              ; preds = %221
  %229 = bitcast %"class.blink::Member.8"* %15 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = bitcast %"class.blink::Member.8"* %136 to i64*
  %232 = load i64, i64* %231, align 8
  store atomic i64 %232, i64* %229 monotonic, align 8
  store atomic i64 %230, i64* %231 monotonic, align 8
  %233 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %239, label %235

235:                                              ; preds = %228
  %236 = bitcast %"class.blink::Member.8"* %15 to i8**
  %237 = load i8*, i8** %236, align 8
  %238 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %237) #12
  br label %239

239:                                              ; preds = %235, %228
  %240 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %246, label %242

242:                                              ; preds = %239
  %243 = bitcast %"class.blink::Member.8"* %136 to i8**
  %244 = load i8*, i8** %243, align 8
  %245 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %244) #12
  br label %246

246:                                              ; preds = %239, %242
  %247 = add i32 %126, 1
  br label %248

248:                                              ; preds = %125, %246
  %249 = phi i32 [ %247, %246 ], [ %126, %125 ]
  %250 = phi %"class.blink::Member.8"* [ %136, %246 ], [ %7, %125 ]
  %251 = ptrtoint %"class.blink::Member.8"* %15 to i64
  %252 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %15, i64 1
  %253 = icmp ult %"class.blink::Member.8"* %252, %250
  br i1 %253, label %254, label %302

254:                                              ; preds = %248, %298
  %255 = phi %"class.blink::Member.8"* [ %301, %298 ], [ %117, %248 ]
  %256 = phi i32 [ %299, %298 ], [ %249, %248 ]
  %257 = phi %"class.blink::Member.8"* [ %268, %298 ], [ %252, %248 ]
  %258 = phi %"class.blink::Member.8"* [ %271, %298 ], [ %250, %248 ]
  %259 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %255, i64 0, i32 0, i32 0
  br label %260

260:                                              ; preds = %260, %254
  %261 = phi %"class.blink::Member.8"* [ %257, %254 ], [ %268, %260 ]
  %262 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %261, i64 0, i32 0, i32 0
  %263 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %262, align 8
  %264 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %263, i64 0, i32 0
  %265 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %259, align 8
  %266 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %265, i64 0, i32 0
  %267 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %264, %"class.WTF::String"* dereferenceable(8) %266) #12
  %268 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %261, i64 1
  br i1 %267, label %260, label %269

269:                                              ; preds = %260, %269
  %270 = phi %"class.blink::Member.8"* [ %271, %269 ], [ %258, %260 ]
  %271 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %270, i64 -1
  %272 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %271, i64 0, i32 0, i32 0
  %273 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %272, align 8
  %274 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %273, i64 0, i32 0
  %275 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %259, align 8
  %276 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %275, i64 0, i32 0
  %277 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %274, %"class.WTF::String"* dereferenceable(8) %276) #12
  br i1 %277, label %278, label %269

278:                                              ; preds = %269
  %279 = icmp ugt %"class.blink::Member.8"* %261, %271
  br i1 %279, label %302, label %280

280:                                              ; preds = %278
  %281 = bitcast %"class.blink::Member.8"* %261 to i64*
  %282 = load i64, i64* %281, align 8
  %283 = bitcast %"class.blink::Member.8"* %271 to i64*
  %284 = load i64, i64* %283, align 8
  store atomic i64 %284, i64* %281 monotonic, align 8
  store atomic i64 %282, i64* %283 monotonic, align 8
  %285 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %291, label %287

287:                                              ; preds = %280
  %288 = bitcast %"class.blink::Member.8"* %261 to i8**
  %289 = load i8*, i8** %288, align 8
  %290 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %289) #12
  br label %291

291:                                              ; preds = %287, %280
  %292 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %298, label %294

294:                                              ; preds = %291
  %295 = bitcast %"class.blink::Member.8"* %271 to i8**
  %296 = load i8*, i8** %295, align 8
  %297 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %296) #12
  br label %298

298:                                              ; preds = %291, %294
  %299 = add i32 %256, 1
  %300 = icmp eq %"class.blink::Member.8"* %255, %261
  %301 = select i1 %300, %"class.blink::Member.8"* %271, %"class.blink::Member.8"* %255
  br label %254

302:                                              ; preds = %278, %248
  %303 = phi %"class.blink::Member.8"* [ %117, %248 ], [ %255, %278 ]
  %304 = phi i32 [ %249, %248 ], [ %256, %278 ]
  %305 = phi %"class.blink::Member.8"* [ %252, %248 ], [ %261, %278 ]
  %306 = icmp eq %"class.blink::Member.8"* %305, %303
  br i1 %306, label %335, label %307

307:                                              ; preds = %302
  %308 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %303, i64 0, i32 0, i32 0
  %309 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %308, align 8
  %310 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %309, i64 0, i32 0
  %311 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %305, i64 0, i32 0, i32 0
  %312 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %311, align 8
  %313 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %312, i64 0, i32 0
  %314 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %310, %"class.WTF::String"* dereferenceable(8) %313) #12
  br i1 %314, label %315, label %335

315:                                              ; preds = %307
  %316 = bitcast %"class.blink::Member.8"* %305 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = bitcast %"class.blink::Member.8"* %303 to i64*
  %319 = load i64, i64* %318, align 8
  store atomic i64 %319, i64* %316 monotonic, align 8
  store atomic i64 %317, i64* %318 monotonic, align 8
  %320 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %326, label %322

322:                                              ; preds = %315
  %323 = bitcast %"class.blink::Member.8"* %305 to i8**
  %324 = load i8*, i8** %323, align 8
  %325 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %324) #12
  br label %326

326:                                              ; preds = %322, %315
  %327 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %333, label %329

329:                                              ; preds = %326
  %330 = bitcast %"class.blink::Member.8"* %303 to i8**
  %331 = load i8*, i8** %330, align 8
  %332 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %331) #12
  br label %333

333:                                              ; preds = %326, %329
  %334 = add i32 %304, 1
  br label %335

335:                                              ; preds = %302, %333, %307
  %336 = phi i32 [ %334, %333 ], [ %304, %307 ], [ %304, %302 ]
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %338, label %345

338:                                              ; preds = %335
  %339 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_1PNS1_6MemberINS1_13MimeClassInfoEEEEEbT0_SC_T_"(%"class.blink::Member.8"* %15, %"class.blink::Member.8"* %305)
  %340 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %305, i64 1
  %341 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_1PNS1_6MemberINS1_13MimeClassInfoEEEEEbT0_SC_T_"(%"class.blink::Member.8"* %340, %"class.blink::Member.8"* %4)
  br i1 %341, label %342, label %344

342:                                              ; preds = %338
  br i1 %339, label %356, label %343

343:                                              ; preds = %342, %354
  br label %3

344:                                              ; preds = %338
  br i1 %339, label %352, label %345

345:                                              ; preds = %344, %335
  %346 = ptrtoint %"class.blink::Member.8"* %305 to i64
  %347 = sub i64 %346, %251
  %348 = sub i64 %11, %346
  %349 = icmp slt i64 %347, %348
  br i1 %349, label %350, label %354

350:                                              ; preds = %345
  tail call fastcc void @"_ZNSt3__16__sortIRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_1PNS1_6MemberINS1_13MimeClassInfoEEEEEvT0_SC_T_"(%"class.blink::Member.8"* %15, %"class.blink::Member.8"* %305)
  %351 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %305, i64 1
  br label %352

352:                                              ; preds = %350, %344
  %353 = phi %"class.blink::Member.8"* [ %340, %344 ], [ %351, %350 ]
  br label %12

354:                                              ; preds = %345
  %355 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %305, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_1PNS1_6MemberINS1_13MimeClassInfoEEEEEvT0_SC_T_"(%"class.blink::Member.8"* %355, %"class.blink::Member.8"* %4)
  br label %343

356:                                              ; preds = %342, %176, %14, %14, %145, %173, %111, %63, %42, %39, %19, %46, %50, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort3IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_1PNS1_6MemberINS1_13MimeClassInfoEEEEEjT0_SC_SC_T_"(%"class.blink::Member.8"* nocapture, %"class.blink::Member.8"* nocapture, %"class.blink::Member.8"* nocapture) unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %5, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %8, i64 0, i32 0
  %10 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %6, %"class.WTF::String"* dereferenceable(8) %9) #12
  %11 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %2, i64 0, i32 0, i32 0
  %12 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %12, i64 0, i32 0
  %14 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %4, align 8
  %15 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %14, i64 0, i32 0
  %16 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %13, %"class.WTF::String"* dereferenceable(8) %15) #12
  br i1 %10, label %59, label %17

17:                                               ; preds = %3
  br i1 %16, label %18, label %117

18:                                               ; preds = %17
  %19 = bitcast %"class.blink::Member.8"* %1 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.blink::Member.8"* %2 to i64*
  %22 = load i64, i64* %21, align 8
  store atomic i64 %22, i64* %19 monotonic, align 8
  store atomic i64 %20, i64* %21 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %18
  %26 = bitcast %"class.blink::Member.8"* %1 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #12
  br label %29

29:                                               ; preds = %25, %18
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %29
  %33 = bitcast %"class.blink::Member.8"* %2 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %34) #12
  br label %36

36:                                               ; preds = %29, %32
  %37 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %4, align 8
  %38 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %37, i64 0, i32 0
  %39 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %7, align 8
  %40 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %39, i64 0, i32 0
  %41 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %38, %"class.WTF::String"* dereferenceable(8) %40) #12
  br i1 %41, label %42, label %117

42:                                               ; preds = %36
  %43 = bitcast %"class.blink::Member.8"* %0 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = load i64, i64* %19, align 8
  store atomic i64 %45, i64* %43 monotonic, align 8
  store atomic i64 %44, i64* %19 monotonic, align 8
  %46 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %52, label %48

48:                                               ; preds = %42
  %49 = bitcast %"class.blink::Member.8"* %0 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %50) #12
  br label %52

52:                                               ; preds = %48, %42
  %53 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %117, label %55

55:                                               ; preds = %52
  %56 = bitcast %"class.blink::Member.8"* %1 to i8**
  %57 = load i8*, i8** %56, align 8
  %58 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %57) #12
  br label %117

59:                                               ; preds = %3
  %60 = bitcast %"class.blink::Member.8"* %0 to i64*
  %61 = load i64, i64* %60, align 8
  br i1 %16, label %62, label %78

62:                                               ; preds = %59
  %63 = bitcast %"class.blink::Member.8"* %2 to i64*
  %64 = load i64, i64* %63, align 8
  store atomic i64 %64, i64* %60 monotonic, align 8
  store atomic i64 %61, i64* %63 monotonic, align 8
  %65 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %71, label %67

67:                                               ; preds = %62
  %68 = bitcast %"class.blink::Member.8"* %0 to i8**
  %69 = load i8*, i8** %68, align 8
  %70 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %69) #12
  br label %71

71:                                               ; preds = %67, %62
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %117, label %74

74:                                               ; preds = %71
  %75 = bitcast %"class.blink::Member.8"* %2 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %76) #12
  br label %117

78:                                               ; preds = %59
  %79 = bitcast %"class.blink::Member.8"* %1 to i64*
  %80 = load i64, i64* %79, align 8
  store atomic i64 %80, i64* %60 monotonic, align 8
  store atomic i64 %61, i64* %79 monotonic, align 8
  %81 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %87, label %83

83:                                               ; preds = %78
  %84 = bitcast %"class.blink::Member.8"* %0 to i8**
  %85 = load i8*, i8** %84, align 8
  %86 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %85) #12
  br label %87

87:                                               ; preds = %83, %78
  %88 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %94, label %90

90:                                               ; preds = %87
  %91 = bitcast %"class.blink::Member.8"* %1 to i8**
  %92 = load i8*, i8** %91, align 8
  %93 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %92) #12
  br label %94

94:                                               ; preds = %87, %90
  %95 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %11, align 8
  %96 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %95, i64 0, i32 0
  %97 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %4, align 8
  %98 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %97, i64 0, i32 0
  %99 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %96, %"class.WTF::String"* dereferenceable(8) %98) #12
  br i1 %99, label %100, label %117

100:                                              ; preds = %94
  %101 = load i64, i64* %79, align 8
  %102 = bitcast %"class.blink::Member.8"* %2 to i64*
  %103 = load i64, i64* %102, align 8
  store atomic i64 %103, i64* %79 monotonic, align 8
  store atomic i64 %101, i64* %102 monotonic, align 8
  %104 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %110, label %106

106:                                              ; preds = %100
  %107 = bitcast %"class.blink::Member.8"* %1 to i8**
  %108 = load i8*, i8** %107, align 8
  %109 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %108) #12
  br label %110

110:                                              ; preds = %106, %100
  %111 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %117, label %113

113:                                              ; preds = %110
  %114 = bitcast %"class.blink::Member.8"* %2 to i8**
  %115 = load i8*, i8** %114, align 8
  %116 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %115) #12
  br label %117

117:                                              ; preds = %113, %110, %74, %71, %55, %52, %94, %36, %17
  %118 = phi i32 [ 0, %17 ], [ 1, %36 ], [ 1, %94 ], [ 2, %52 ], [ 2, %55 ], [ 1, %71 ], [ 1, %74 ], [ 2, %110 ], [ 2, %113 ]
  ret i32 %118
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_1PNS1_6MemberINS1_13MimeClassInfoEEEEEjT0_SC_SC_SC_T_"(%"class.blink::Member.8"* nocapture, %"class.blink::Member.8"* nocapture, %"class.blink::Member.8"* nocapture, %"class.blink::Member.8"* nocapture) unnamed_addr #0 {
  %5 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_1PNS1_6MemberINS1_13MimeClassInfoEEEEEjT0_SC_SC_T_"(%"class.blink::Member.8"* %0, %"class.blink::Member.8"* %1, %"class.blink::Member.8"* %2)
  %6 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %2, i64 0, i32 0, i32 0
  %10 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %10, i64 0, i32 0
  %12 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %8, %"class.WTF::String"* dereferenceable(8) %11) #12
  br i1 %12, label %13, label %83

13:                                               ; preds = %4
  %14 = bitcast %"class.blink::Member.8"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.blink::Member.8"* %3 to i64*
  %17 = load i64, i64* %16, align 8
  store atomic i64 %17, i64* %14 monotonic, align 8
  store atomic i64 %15, i64* %16 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.blink::Member.8"* %2 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #12
  br label %24

24:                                               ; preds = %20, %13
  %25 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.8"* %3 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %29) #12
  br label %31

31:                                               ; preds = %24, %27
  %32 = add i32 %5, 1
  %33 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %9, align 8
  %34 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %33, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %1, i64 0, i32 0, i32 0
  %36 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %36, i64 0, i32 0
  %38 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %34, %"class.WTF::String"* dereferenceable(8) %37) #12
  br i1 %38, label %39, label %83

39:                                               ; preds = %31
  %40 = bitcast %"class.blink::Member.8"* %1 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = load i64, i64* %14, align 8
  store atomic i64 %42, i64* %40 monotonic, align 8
  store atomic i64 %41, i64* %14 monotonic, align 8
  %43 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %39
  %46 = bitcast %"class.blink::Member.8"* %1 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #12
  br label %49

49:                                               ; preds = %45, %39
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.blink::Member.8"* %2 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %54) #12
  br label %56

56:                                               ; preds = %49, %52
  %57 = add i32 %5, 2
  %58 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %35, align 8
  %59 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %58, i64 0, i32 0
  %60 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %0, i64 0, i32 0, i32 0
  %61 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %61, i64 0, i32 0
  %63 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %59, %"class.WTF::String"* dereferenceable(8) %62) #12
  br i1 %63, label %64, label %83

64:                                               ; preds = %56
  %65 = bitcast %"class.blink::Member.8"* %0 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = load i64, i64* %40, align 8
  store atomic i64 %67, i64* %65 monotonic, align 8
  store atomic i64 %66, i64* %40 monotonic, align 8
  %68 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %74, label %70

70:                                               ; preds = %64
  %71 = bitcast %"class.blink::Member.8"* %0 to i8**
  %72 = load i8*, i8** %71, align 8
  %73 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %72) #12
  br label %74

74:                                               ; preds = %70, %64
  %75 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %81, label %77

77:                                               ; preds = %74
  %78 = bitcast %"class.blink::Member.8"* %1 to i8**
  %79 = load i8*, i8** %78, align 8
  %80 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %79) #12
  br label %81

81:                                               ; preds = %74, %77
  %82 = add i32 %5, 3
  br label %83

83:                                               ; preds = %31, %81, %56, %4
  %84 = phi i32 [ %82, %81 ], [ %57, %56 ], [ %32, %31 ], [ %5, %4 ]
  ret i32 %84
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort5IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_1PNS1_6MemberINS1_13MimeClassInfoEEEEEjT0_SC_SC_SC_SC_T_"(%"class.blink::Member.8"* nocapture, %"class.blink::Member.8"* nocapture, %"class.blink::Member.8"* nocapture, %"class.blink::Member.8"* nocapture, %"class.blink::Member.8"* nocapture) unnamed_addr #0 {
  %6 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_1PNS1_6MemberINS1_13MimeClassInfoEEEEEjT0_SC_SC_SC_T_"(%"class.blink::Member.8"* %0, %"class.blink::Member.8"* %1, %"class.blink::Member.8"* %2, %"class.blink::Member.8"* %3)
  %7 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %8, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %3, i64 0, i32 0, i32 0
  %11 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %11, i64 0, i32 0
  %13 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %9, %"class.WTF::String"* dereferenceable(8) %12) #12
  br i1 %13, label %14, label %109

14:                                               ; preds = %5
  %15 = bitcast %"class.blink::Member.8"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.blink::Member.8"* %4 to i64*
  %18 = load i64, i64* %17, align 8
  store atomic i64 %18, i64* %15 monotonic, align 8
  store atomic i64 %16, i64* %17 monotonic, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.blink::Member.8"* %3 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %23) #12
  br label %25

25:                                               ; preds = %21, %14
  %26 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %25
  %29 = bitcast %"class.blink::Member.8"* %4 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #12
  br label %32

32:                                               ; preds = %25, %28
  %33 = add i32 %6, 1
  %34 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %10, align 8
  %35 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %34, i64 0, i32 0
  %36 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %2, i64 0, i32 0, i32 0
  %37 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %37, i64 0, i32 0
  %39 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %35, %"class.WTF::String"* dereferenceable(8) %38) #12
  br i1 %39, label %40, label %109

40:                                               ; preds = %32
  %41 = bitcast %"class.blink::Member.8"* %2 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = load i64, i64* %15, align 8
  store atomic i64 %43, i64* %41 monotonic, align 8
  store atomic i64 %42, i64* %15 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::Member.8"* %2 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #12
  br label %50

50:                                               ; preds = %46, %40
  %51 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %50
  %54 = bitcast %"class.blink::Member.8"* %3 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %55) #12
  br label %57

57:                                               ; preds = %50, %53
  %58 = add i32 %6, 2
  %59 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %36, align 8
  %60 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %59, i64 0, i32 0
  %61 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %1, i64 0, i32 0, i32 0
  %62 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %62, i64 0, i32 0
  %64 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %60, %"class.WTF::String"* dereferenceable(8) %63) #12
  br i1 %64, label %65, label %109

65:                                               ; preds = %57
  %66 = bitcast %"class.blink::Member.8"* %1 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = load i64, i64* %41, align 8
  store atomic i64 %68, i64* %66 monotonic, align 8
  store atomic i64 %67, i64* %41 monotonic, align 8
  %69 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %75, label %71

71:                                               ; preds = %65
  %72 = bitcast %"class.blink::Member.8"* %1 to i8**
  %73 = load i8*, i8** %72, align 8
  %74 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %73) #12
  br label %75

75:                                               ; preds = %71, %65
  %76 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %75
  %79 = bitcast %"class.blink::Member.8"* %2 to i8**
  %80 = load i8*, i8** %79, align 8
  %81 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %80) #12
  br label %82

82:                                               ; preds = %75, %78
  %83 = add i32 %6, 3
  %84 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %61, align 8
  %85 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %84, i64 0, i32 0
  %86 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %0, i64 0, i32 0, i32 0
  %87 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %87, i64 0, i32 0
  %89 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %85, %"class.WTF::String"* dereferenceable(8) %88) #12
  br i1 %89, label %90, label %109

90:                                               ; preds = %82
  %91 = bitcast %"class.blink::Member.8"* %0 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = load i64, i64* %66, align 8
  store atomic i64 %93, i64* %91 monotonic, align 8
  store atomic i64 %92, i64* %66 monotonic, align 8
  %94 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %100, label %96

96:                                               ; preds = %90
  %97 = bitcast %"class.blink::Member.8"* %0 to i8**
  %98 = load i8*, i8** %97, align 8
  %99 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %98) #12
  br label %100

100:                                              ; preds = %96, %90
  %101 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %107, label %103

103:                                              ; preds = %100
  %104 = bitcast %"class.blink::Member.8"* %1 to i8**
  %105 = load i8*, i8** %104, align 8
  %106 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %105) #12
  br label %107

107:                                              ; preds = %100, %103
  %108 = add i32 %6, 4
  br label %109

109:                                              ; preds = %32, %82, %107, %57, %5
  %110 = phi i32 [ %108, %107 ], [ %83, %82 ], [ %58, %57 ], [ %33, %32 ], [ %6, %5 ]
  ret i32 %110
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_1PNS1_6MemberINS1_13MimeClassInfoEEEEEbT0_SC_T_"(%"class.blink::Member.8"*, %"class.blink::Member.8"*) unnamed_addr #0 {
  %3 = ptrtoint %"class.blink::Member.8"* %1 to i64
  %4 = ptrtoint %"class.blink::Member.8"* %0 to i64
  %5 = sub i64 %3, %4
  %6 = ashr exact i64 %5, 3
  switch i64 %6, label %49 [
    i64 0, label %108
    i64 1, label %108
    i64 2, label %7
    i64 3, label %34
    i64 4, label %38
    i64 5, label %43
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %1, i64 -1
  %9 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %10, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %0, i64 0, i32 0, i32 0
  %13 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %13, i64 0, i32 0
  %15 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %11, %"class.WTF::String"* dereferenceable(8) %14) #12
  br i1 %15, label %16, label %108

16:                                               ; preds = %7
  %17 = bitcast %"class.blink::Member.8"* %0 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.blink::Member.8"* %8 to i64*
  %20 = load i64, i64* %19, align 8
  store atomic i64 %20, i64* %17 monotonic, align 8
  store atomic i64 %18, i64* %19 monotonic, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.blink::Member.8"* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %25) #12
  br label %27

27:                                               ; preds = %23, %16
  %28 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %108, label %30

30:                                               ; preds = %27
  %31 = bitcast %"class.blink::Member.8"* %8 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %32) #12
  br label %108

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %0, i64 1
  %36 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %1, i64 -1
  %37 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_1PNS1_6MemberINS1_13MimeClassInfoEEEEEjT0_SC_SC_T_"(%"class.blink::Member.8"* %0, %"class.blink::Member.8"* %35, %"class.blink::Member.8"* %36)
  br label %108

38:                                               ; preds = %2
  %39 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %0, i64 1
  %40 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %0, i64 2
  %41 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %1, i64 -1
  %42 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_1PNS1_6MemberINS1_13MimeClassInfoEEEEEjT0_SC_SC_SC_T_"(%"class.blink::Member.8"* %0, %"class.blink::Member.8"* %39, %"class.blink::Member.8"* %40, %"class.blink::Member.8"* %41)
  br label %108

43:                                               ; preds = %2
  %44 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %0, i64 1
  %45 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %0, i64 2
  %46 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %0, i64 3
  %47 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %1, i64 -1
  %48 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_1PNS1_6MemberINS1_13MimeClassInfoEEEEEjT0_SC_SC_SC_SC_T_"(%"class.blink::Member.8"* %0, %"class.blink::Member.8"* %44, %"class.blink::Member.8"* %45, %"class.blink::Member.8"* %46, %"class.blink::Member.8"* %47)
  br label %108

49:                                               ; preds = %2
  %50 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %0, i64 2
  %51 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %0, i64 1
  %52 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink10PluginData16UpdatePluginListEPKNS1_14SecurityOriginEE3$_1PNS1_6MemberINS1_13MimeClassInfoEEEEEjT0_SC_SC_T_"(%"class.blink::Member.8"* %0, %"class.blink::Member.8"* %51, %"class.blink::Member.8"* %50)
  %53 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %0, i64 3
  %54 = icmp eq %"class.blink::Member.8"* %53, %1
  br i1 %54, label %108, label %55

55:                                               ; preds = %49, %101
  %56 = phi %"class.blink::Member.8"* [ %103, %101 ], [ %53, %49 ]
  %57 = phi i32 [ %102, %101 ], [ 0, %49 ]
  %58 = phi %"class.blink::Member.8"* [ %56, %101 ], [ %50, %49 ]
  %59 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %56, i64 0, i32 0, i32 0
  %60 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %60, i64 0, i32 0
  %62 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %58, i64 0, i32 0, i32 0
  %63 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %63, i64 0, i32 0
  %65 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %61, %"class.WTF::String"* dereferenceable(8) %64) #12
  br i1 %65, label %66, label %101

66:                                               ; preds = %55
  %67 = bitcast %"class.blink::Member.8"* %56 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = inttoptr i64 %68 to %"class.blink::MimeClassInfo"*
  %70 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %69, i64 0, i32 0
  br label %71

71:                                               ; preds = %84, %66
  %72 = phi %"class.blink::Member.8"* [ %56, %66 ], [ %73, %84 ]
  %73 = phi %"class.blink::Member.8"* [ %58, %66 ], [ %85, %84 ]
  %74 = bitcast %"class.blink::Member.8"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member.8"* %72 to i64*
  store atomic i64 %75, i64* %76 monotonic, align 8
  %77 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %71
  %80 = inttoptr i64 %75 to i8*
  %81 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %80) #12
  br label %82

82:                                               ; preds = %71, %79
  %83 = icmp eq %"class.blink::Member.8"* %73, %0
  br i1 %83, label %90, label %84

84:                                               ; preds = %82
  %85 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %73, i64 -1
  %86 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %85, i64 0, i32 0, i32 0
  %87 = load %"class.blink::MimeClassInfo"*, %"class.blink::MimeClassInfo"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::MimeClassInfo", %"class.blink::MimeClassInfo"* %87, i64 0, i32 0
  %89 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %70, %"class.WTF::String"* dereferenceable(8) %88) #12
  br i1 %89, label %71, label %90

90:                                               ; preds = %82, %84
  %91 = phi %"class.blink::Member.8"* [ %73, %84 ], [ %0, %82 ]
  %92 = bitcast %"class.blink::Member.8"* %91 to i64*
  store atomic i64 %68, i64* %92 monotonic, align 8
  %93 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %90
  %96 = inttoptr i64 %68 to i8*
  %97 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %96) #12
  br label %98

98:                                               ; preds = %90, %95
  %99 = add i32 %57, 1
  %100 = icmp eq i32 %99, 8
  br i1 %100, label %105, label %101

101:                                              ; preds = %98, %55
  %102 = phi i32 [ %99, %98 ], [ %57, %55 ]
  %103 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %56, i64 1
  %104 = icmp eq %"class.blink::Member.8"* %103, %1
  br i1 %104, label %108, label %55

105:                                              ; preds = %98
  %106 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %56, i64 1
  %107 = icmp eq %"class.blink::Member.8"* %106, %1
  br label %108

108:                                              ; preds = %101, %105, %49, %30, %27, %7, %2, %2, %43, %38, %34
  %109 = phi i1 [ true, %43 ], [ true, %38 ], [ true, %34 ], [ true, %2 ], [ true, %2 ], [ true, %7 ], [ true, %27 ], [ true, %30 ], [ true, %49 ], [ %107, %105 ], [ true, %101 ]
  ret i1 %109
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!5 = distinct !{!5, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!6 = distinct !{!6, !7, !"_ZN4mojo15PendingReceiverIN5blink5mojom5blink14PluginRegistryEE8PassPipeEv: argument 0"}
!7 = distinct !{!7, !"_ZN4mojo15PendingReceiverIN5blink5mojom5blink14PluginRegistryEE8PassPipeEv"}
!8 = !{!"branch_weights", i32 2000, i32 1}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!11 = distinct !{!11, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!12 = distinct !{!12, !13, !"_ZN4mojo15PendingReceiverIN5blink5mojom5blink14PluginRegistryEE8PassPipeEv: argument 0"}
!13 = distinct !{!13, !"_ZN4mojo15PendingReceiverIN5blink5mojom5blink14PluginRegistryEE8PassPipeEv"}
!14 = !{i8 0, i8 2}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!17 = distinct !{!17, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!20 = distinct !{!20, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
