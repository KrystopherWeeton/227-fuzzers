; ModuleID = '../../v8/src/api/api-natives.cc'
source_filename = "../../v8/src/api/api-natives.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.541" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.139", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.19", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.161", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.165", %"class.std::__1::vector.165", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.474", %"class.std::__1::shared_ptr.480", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.503", %"class.std::__1::unique_ptr.529", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.535", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.548", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.330", i8, [7 x i8], %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.580", %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.604", %"class.std::__1::vector.632", i8, %"class.std::__1::unique_ptr.639", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.645", %"class.std::__1::unique_ptr.666", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.676", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.815", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.828", void (i32, %"class.v8::SharedArrayBuffer"*, i64, i64, double, %"class.v8::Isolate::AtomicsWaitWakeHandle"*, i8*)*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.838", void (%"class.v8::Context"*, %"class.v8::Module"*, %"class.v8::Object"*)*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.849", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.924", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.967"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.979", i32, i8, i8, i32, i32, %"class.std::__1::vector.985", %"class.std::__1::vector.985", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.992", i64, %"class.std::__1::unordered_map.993", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.541", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.160", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1049", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1087", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, %"class.v8::Value"* (%"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Array"*)*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1121", %"class.std::__1::vector.1125", %"class.std::__1::vector.1125", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.645" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.139", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.646", %"class.std::__1::unique_ptr.660" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"class.std::__1::unique_ptr.651"*, %"class.std::__1::unique_ptr.651"*, %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.1153" }
%"class.std::__1::__compressed_pair.1153" = type { %"struct.std::__1::__compressed_pair_elem.1154" }
%"struct.std::__1::__compressed_pair_elem.1154" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.std::__1::unique_ptr.651"* }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.669", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.669" = type { %"struct.std::__1::__atomic_base.670" }
%"struct.std::__1::__atomic_base.670" = type { %"struct.std::__1::__cxx_atomic_impl.671" }
%"struct.std::__1::__cxx_atomic_impl.671" = type { %"struct.std::__1::__cxx_atomic_base_impl.672" }
%"struct.std::__1::__cxx_atomic_base_impl.672" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.676" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.677", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.677" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.678", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"class.std::__1::unique_ptr.680"*, %"class.std::__1::unique_ptr.680"*, %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::unique_ptr.680" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::unique_ptr.680"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.686", %"class.std::__1::unique_ptr.692", %"struct.std::__1::atomic.152", %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.704", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"class.std::__1::set.728", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.728" = type { %"class.std::__1::__tree.729" }
%"class.std::__1::__tree.729" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.736" }
%"class.v8::internal::TaggedImpl.736" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.744", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.750", %"class.v8::internal::DetachableVector.751", %"class.v8::internal::DetachableVector.750", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.751" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.750" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.738", %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.484", %"class.std::__1::set.492" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.484" = type { %"class.std::__1::__tree.485" }
%"class.std::__1::__tree.485" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.492" = type { %"class.std::__1::__tree.493" }
%"class.std::__1::__tree.493" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.752", %"class.std::__1::vector.758", %"class.std::__1::unique_ptr.765", %"class.std::__1::vector.772", %"class.std::__1::unique_ptr.779", i64, %"class.std::__1::vector.785", %"class.std::__1::vector.793", %"class.std::__1::vector.801", i8, i8, i32 }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.758" = type { %"class.std::__1::__vector_base.759" }
%"class.std::__1::__vector_base.759" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.760" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::GlobalHandles::NodeSpace.768"* }
%"class.v8::internal::GlobalHandles::NodeSpace.768" = type opaque
%"class.std::__1::vector.772" = type { %"class.std::__1::__vector_base.773" }
%"class.std::__1::__vector_base.773" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.774" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.785" = type { %"class.std::__1::__vector_base.786" }
%"class.std::__1::__vector_base.786" = type { %"struct.std::__1::pair.787"*, %"struct.std::__1::pair.787"*, %"class.std::__1::__compressed_pair.788" }
%"struct.std::__1::pair.787" = type opaque
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"struct.std::__1::pair.787"* }
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"struct.std::__1::pair.795"*, %"struct.std::__1::pair.795"*, %"class.std::__1::__compressed_pair.796" }
%"struct.std::__1::pair.795" = type opaque
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"struct.std::__1::pair.795"* }
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.803" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.808", %"class.std::__1::vector.815" }
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { i64**, i64**, %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.822" }
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { i32*, i32*, %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.828" = type { %"struct.std::__1::__atomic_base.829" }
%"struct.std::__1::__atomic_base.829" = type { %"struct.std::__1::__cxx_atomic_impl.830" }
%"struct.std::__1::__cxx_atomic_impl.830" = type { %"struct.std::__1::__cxx_atomic_base_impl.831" }
%"struct.std::__1::__cxx_atomic_base_impl.831" = type { i32 }
%"class.v8::SharedArrayBuffer" = type { i8 }
%"class.v8::Isolate::AtomicsWaitWakeHandle" = type { i8 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.838" = type { %"struct.std::__1::__atomic_base.839" }
%"struct.std::__1::__atomic_base.839" = type { %"struct.std::__1::__cxx_atomic_impl.840" }
%"struct.std::__1::__cxx_atomic_impl.840" = type { %"struct.std::__1::__cxx_atomic_base_impl.841" }
%"struct.std::__1::__cxx_atomic_base_impl.841" = type { i32 }
%"class.v8::Context" = type { i8 }
%"class.v8::Module" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.845 }
%union.anon.845 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.849" = type { %"class.std::__1::__hash_table.850" }
%"class.std::__1::__hash_table.850" = type <{ %"class.std::__1::unique_ptr.851", %"class.std::__1::__compressed_pair.861", %"class.std::__1::__compressed_pair.866", %"class.std::__1::__compressed_pair.869", [4 x i8] }>
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853", %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"struct.std::__1::__hash_node_base.854"** }
%"struct.std::__1::__hash_node_base.854" = type { %"struct.std::__1::__hash_node_base.854"* }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.std::__1::__bucket_list_deallocator.856" }
%"class.std::__1::__bucket_list_deallocator.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"struct.std::__1::__hash_node_base.854" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.875", %"class.v8::internal::Handle.881", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.882", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.881" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.883", %"class.std::__1::vector.889", %"class.std::__1::unique_ptr.897", %"class.std::__1::unique_ptr.903", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.909", %"class.std::__1::vector.915", %"struct.std::__1::pair.923" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { %"class.std::__1::unique_ptr.891"*, %"class.std::__1::unique_ptr.891"*, %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::unique_ptr.891" = type opaque
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.std::__1::unique_ptr.891"* }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.915" = type { %"class.std::__1::__vector_base.916" }
%"class.std::__1::__vector_base.916" = type { %"struct.std::__1::pair.917"*, %"struct.std::__1::pair.917"*, %"class.std::__1::__compressed_pair.918" }
%"struct.std::__1::pair.917" = type opaque
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"struct.std::__1::pair.917"* }
%"struct.std::__1::pair.923" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.0"*, i16, i8*)*, i8* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.927", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.927" = type { %"class.std::__1::__hash_table.928" }
%"class.std::__1::__hash_table.928" = type <{ %"class.std::__1::unique_ptr.929", %"class.std::__1::__compressed_pair.939", %"class.std::__1::__compressed_pair.944", %"class.std::__1::__compressed_pair.948", [4 x i8] }>
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931", %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.std::__1::__hash_node_base.932"** }
%"struct.std::__1::__hash_node_base.932" = type { %"struct.std::__1::__hash_node_base.932"* }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.std::__1::__bucket_list_deallocator.934" }
%"class.std::__1::__bucket_list_deallocator.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"struct.std::__1::__hash_node_base.932" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.962" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"class.std::__1::__compressed_pair.957" }
%"struct.std::__1::pair.956" = type opaque
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"struct.std::__1::pair.956"** }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.967" = type { %"class.std::__1::__vector_base.968" }
%"class.std::__1::__vector_base.968" = type { %"class.v8::internal::Handle.969"*, %"class.v8::internal::Handle.969"*, %"class.std::__1::__compressed_pair.970" }
%"class.v8::internal::Handle.969" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"class.v8::internal::Handle.969"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type { %"class.v8::MicrotaskQueue", i64, i64, i64, i64*, i64, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"*, i32, i32, i32, i8, %"class.std::__1::vector.975" }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.std::__1::vector.975" = type { %"class.std::__1::__vector_base.976" }
%"class.std::__1::__vector_base.976" = type { %"struct.std::__1::pair.956"*, %"struct.std::__1::pair.956"*, %"class.std::__1::__compressed_pair.977" }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.978" }
%"struct.std::__1::__compressed_pair_elem.978" = type { %"struct.std::__1::pair.956"* }
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.833", i32, %"class.v8::Local.0" }
%"class.v8::Local.833" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.979" = type { %"class.std::__1::__compressed_pair.980" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.981" }
%"struct.std::__1::__compressed_pair_elem.981" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.808", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.985" = type { %"class.std::__1::__vector_base.986" }
%"class.std::__1::__vector_base.986" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.987" }
%"class.std::__1::__compressed_pair.987" = type { %"struct.std::__1::__compressed_pair_elem.988" }
%"struct.std::__1::__compressed_pair_elem.988" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.992" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.993" = type { %"class.std::__1::__hash_table.994" }
%"class.std::__1::__hash_table.994" = type <{ %"class.std::__1::unique_ptr.995", %"class.std::__1::__compressed_pair.1005", %"class.std::__1::__compressed_pair.1010", %"class.std::__1::__compressed_pair.1013", [4 x i8] }>
%"class.std::__1::unique_ptr.995" = type { %"class.std::__1::__compressed_pair.996" }
%"class.std::__1::__compressed_pair.996" = type { %"struct.std::__1::__compressed_pair_elem.997", %"struct.std::__1::__compressed_pair_elem.999" }
%"struct.std::__1::__compressed_pair_elem.997" = type { %"struct.std::__1::__hash_node_base.998"** }
%"struct.std::__1::__hash_node_base.998" = type { %"struct.std::__1::__hash_node_base.998"* }
%"struct.std::__1::__compressed_pair_elem.999" = type { %"class.std::__1::__bucket_list_deallocator.1000" }
%"class.std::__1::__bucket_list_deallocator.1000" = type { %"class.std::__1::__compressed_pair.1001" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.1006" }
%"struct.std::__1::__compressed_pair_elem.1006" = type { %"struct.std::__1::__hash_node_base.998" }
%"class.std::__1::__compressed_pair.1010" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.160" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1017", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1046", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1047", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1017" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1042, %union.anon.1044, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1042 = type { i64 }
%union.anon.1044 = type { i64 }
%"class.std::__1::weak_ptr.1046" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.160" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1047" = type { %"class.v8::PersistentBase.1048" }
%"class.v8::PersistentBase.1048" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1018", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1018" = type { %"class.std::__1::__hash_table.1019" }
%"class.std::__1::__hash_table.1019" = type <{ %"class.std::__1::unique_ptr.1020", %"class.std::__1::__compressed_pair.1030", %"class.std::__1::__compressed_pair.1035", %"class.std::__1::__compressed_pair.1038", [4 x i8] }>
%"class.std::__1::unique_ptr.1020" = type { %"class.std::__1::__compressed_pair.1021" }
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem.1022", %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1022" = type { %"struct.std::__1::__hash_node_base.1023"** }
%"struct.std::__1::__hash_node_base.1023" = type { %"struct.std::__1::__hash_node_base.1023"* }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"class.std::__1::__bucket_list_deallocator.1025" }
%"class.std::__1::__bucket_list_deallocator.1025" = type { %"class.std::__1::__compressed_pair.1026" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.1031" }
%"struct.std::__1::__compressed_pair_elem.1031" = type { %"struct.std::__1::__hash_node_base.1023" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1049" = type { %"class.std::__1::__compressed_pair.1050" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.1051" }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1078", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1054", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1058", %"class.std::__1::unique_ptr.1064", %"class.std::__1::unique_ptr.474", %"class.std::__1::vector.1070", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1054" = type { %"struct.std::__1::__atomic_base.1055" }
%"struct.std::__1::__atomic_base.1055" = type { %"struct.std::__1::__cxx_atomic_impl.1056" }
%"struct.std::__1::__cxx_atomic_impl.1056" = type { %"struct.std::__1::__cxx_atomic_base_impl.1057" }
%"struct.std::__1::__cxx_atomic_base_impl.1057" = type { i32 }
%"class.std::__1::unique_ptr.1058" = type { %"class.std::__1::__compressed_pair.1059" }
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.1060" }
%"struct.std::__1::__compressed_pair_elem.1060" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.808" }
%"class.std::__1::unique_ptr.1064" = type { %"class.std::__1::__compressed_pair.1065" }
%"class.std::__1::__compressed_pair.1065" = type { %"struct.std::__1::__compressed_pair_elem.1066" }
%"struct.std::__1::__compressed_pair_elem.1066" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1070" = type { %"class.std::__1::__vector_base.1071" }
%"class.std::__1::__vector_base.1071" = type { %"struct.std::__1::pair.1072"*, %"struct.std::__1::pair.1072"*, %"class.std::__1::__compressed_pair.1073" }
%"struct.std::__1::pair.1072" = type opaque
%"class.std::__1::__compressed_pair.1073" = type { %"struct.std::__1::__compressed_pair_elem.1074" }
%"struct.std::__1::__compressed_pair_elem.1074" = type { %"struct.std::__1::pair.1072"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.19"*, %"class.std::__1::unique_ptr.97" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.86", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.19"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.68", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i64*, i64*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.19", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1078" = type { %"class.std::__1::__compressed_pair.1079" }
%"class.std::__1::__compressed_pair.1079" = type { %"struct.std::__1::__compressed_pair_elem.1080" }
%"struct.std::__1::__compressed_pair_elem.1080" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1087" = type { %"class.std::__1::__compressed_pair.1088" }
%"class.std::__1::__compressed_pair.1088" = type { %"struct.std::__1::__compressed_pair_elem.1089" }
%"struct.std::__1::__compressed_pair_elem.1089" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.834", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.834" = type { %"class.v8::Context"* }
%"class.v8::Array" = type { i8 }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1095" }
%"class.std::__1::unordered_map.1095" = type { %"class.std::__1::__hash_table.1096" }
%"class.std::__1::__hash_table.1096" = type <{ %"class.std::__1::unique_ptr.1097", %"class.std::__1::__compressed_pair.1107", %"class.std::__1::__compressed_pair.1112", %"class.std::__1::__compressed_pair.1115", [4 x i8] }>
%"class.std::__1::unique_ptr.1097" = type { %"class.std::__1::__compressed_pair.1098" }
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099", %"struct.std::__1::__compressed_pair_elem.1101" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"struct.std::__1::__hash_node_base.1100"** }
%"struct.std::__1::__hash_node_base.1100" = type { %"struct.std::__1::__hash_node_base.1100"* }
%"struct.std::__1::__compressed_pair_elem.1101" = type { %"class.std::__1::__bucket_list_deallocator.1102" }
%"class.std::__1::__bucket_list_deallocator.1102" = type { %"class.std::__1::__compressed_pair.1103" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"struct.std::__1::__hash_node_base.1100" }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.1121" = type { %"struct.std::__1::__atomic_base.1122" }
%"struct.std::__1::__atomic_base.1122" = type { %"struct.std::__1::__cxx_atomic_impl.1123" }
%"struct.std::__1::__cxx_atomic_impl.1123" = type { %"struct.std::__1::__cxx_atomic_base_impl.1124" }
%"struct.std::__1::__cxx_atomic_base_impl.1124" = type { %"class.std::__1::vector.1125"* }
%"class.std::__1::vector.1125" = type { %"class.std::__1::__vector_base.1126" }
%"class.std::__1::__vector_base.1126" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1127" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1127" = type { %"struct.std::__1::__compressed_pair_elem.1128" }
%"struct.std::__1::__compressed_pair_elem.1128" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.103" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type { i32, i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.19", i32, %"struct.std::__1::atomic.19", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.111" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.152", %"struct.std::__1::atomic.156", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.167" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.287", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.181", %"class.std::__1::vector.182", %"class.std::__1::vector.189", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.181" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.184" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::unique_ptr.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::unique_ptr.191"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.197", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.197" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.213", i8, i64 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.229" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.181"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.229" = type { %"class.std::__1::__hash_table.230" }
%"class.std::__1::__hash_table.230" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.234"** }
%"struct.std::__1::__hash_node_base.234" = type { %"struct.std::__1::__hash_node_base.234"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__bucket_list_deallocator.236" }
%"class.std::__1::__bucket_list_deallocator.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.234" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.256" }
%"class.std::__1::unordered_map.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.261" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.std::__1::pair.289"*, %"struct.std::__1::pair.289"*, %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::pair.289" = type opaque
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::pair.289"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.295", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.280"], [3 x %"class.std::__1::vector.280"], i8, %"struct.std::__1::atomic.152", [6 x i8], %"class.std::__1::vector.280", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.305"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.305" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.330", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.323"], %"class.std::__1::unique_ptr.295" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.362", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.366", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.371" }
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__cxx_atomic_impl.368" }
%"struct.std::__1::__cxx_atomic_impl.368" = type { %"struct.std::__1::__cxx_atomic_base_impl.369" }
%"struct.std::__1::__cxx_atomic_base_impl.369" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.371" = type { %"class.std::__1::__hash_table.372" }
%"class.std::__1::__hash_table.372" = type <{ %"class.std::__1::unique_ptr.373", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.391", [4 x i8] }>
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.376"** }
%"struct.std::__1::__hash_node_base.376" = type { %"struct.std::__1::__hash_node_base.376"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator.378" }
%"class.std::__1::__bucket_list_deallocator.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.376" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.295", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.401", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.401" = type { %"class.std::__1::__hash_table.402" }
%"class.std::__1::__hash_table.402" = type <{ %"class.std::__1::unique_ptr.403", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.421", [4 x i8] }>
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.406"** }
%"struct.std::__1::__hash_node_base.406" = type { %"struct.std::__1::__hash_node_base.406"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator.408" }
%"class.std::__1::__bucket_list_deallocator.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.406" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.437" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.480" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.499", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.481", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.499" = type { %"struct.std::__1::__atomic_base.500" }
%"struct.std::__1::__atomic_base.500" = type { %"struct.std::__1::__cxx_atomic_impl.501" }
%"struct.std::__1::__cxx_atomic_impl.501" = type { %"struct.std::__1::__cxx_atomic_base_impl.502" }
%"struct.std::__1::__cxx_atomic_base_impl.502" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.503" = type { %"class.std::__1::__hash_table.504" }
%"class.std::__1::__hash_table.504" = type <{ %"class.std::__1::unique_ptr.505", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.523", [4 x i8] }>
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507", %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.std::__1::__hash_node_base.508"** }
%"struct.std::__1::__hash_node_base.508" = type { %"struct.std::__1::__hash_node_base.508"* }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.std::__1::__bucket_list_deallocator.510" }
%"class.std::__1::__bucket_list_deallocator.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base.508" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.541", %"class.std::__1::vector.541" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.330" = type { %"class.std::__1::__hash_table.331" }
%"class.std::__1::__hash_table.331" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.335"** }
%"struct.std::__1::__hash_node_base.335" = type { %"struct.std::__1::__hash_node_base.335"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator.337" }
%"class.std::__1::__bucket_list_deallocator.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.335" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.580" = type { %"class.std::__1::__hash_table.581" }
%"class.std::__1::__hash_table.581" = type <{ %"class.std::__1::unique_ptr.582", %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.600", [4 x i8] }>
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584", %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::__hash_node_base.585"** }
%"struct.std::__1::__hash_node_base.585" = type { %"struct.std::__1::__hash_node_base.585"* }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.std::__1::__bucket_list_deallocator.587" }
%"class.std::__1::__bucket_list_deallocator.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.585" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.554" = type { %"class.std::__1::__hash_table.555" }
%"class.std::__1::__hash_table.555" = type <{ %"class.std::__1::unique_ptr.556", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558", %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.559"** }
%"struct.std::__1::__hash_node_base.559" = type { %"struct.std::__1::__hash_node_base.559"* }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.std::__1::__bucket_list_deallocator.561" }
%"class.std::__1::__bucket_list_deallocator.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.559" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.604" = type { %"class.std::__1::__hash_table.605" }
%"class.std::__1::__hash_table.605" = type <{ %"class.std::__1::unique_ptr.606", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.626", [4 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608", %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.609"** }
%"struct.std::__1::__hash_node_base.609" = type { %"struct.std::__1::__hash_node_base.609"* }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.std::__1::__bucket_list_deallocator.611" }
%"class.std::__1::__bucket_list_deallocator.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.609" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.632" = type { %"class.std::__1::__vector_base.633" }
%"class.std::__1::__vector_base.633" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.19", i64, %"struct.std::__1::atomic.19" }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.141" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.541" = type { %"class.std::__1::__vector_base.542" }
%"class.std::__1::__vector_base.542" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::Object"* }
%"struct.std::__1::atomic.1187" = type { %"struct.std::__1::__atomic_base.1188" }
%"struct.std::__1::__atomic_base.1188" = type { %"struct.std::__1::__atomic_base.1189" }
%"struct.std::__1::__atomic_base.1189" = type { %"struct.std::__1::__cxx_atomic_impl.1190" }
%"struct.std::__1::__cxx_atomic_impl.1190" = type { %"struct.std::__1::__cxx_atomic_base_impl.1191" }
%"struct.std::__1::__cxx_atomic_base_impl.1191" = type { i32 }
%"class.v8::internal::(anonymous namespace)::InvokeScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::SaveContext" }
%"class.v8::internal::SaveContext" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1135", i64 }
%"class.v8::internal::Handle.1135" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::RuntimeCallTimerScope" = type { %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer" }
%"class.v8::internal::RuntimeCallTimer" = type { %"class.v8::internal::RuntimeCallCounter"*, %"class.v8::base::AtomicValue", %"class.v8::base::TimeTicks", %"class.v8::base::TimeDelta" }
%"class.v8::internal::(anonymous namespace)::AccessCheckDisableScope" = type { %"class.v8::internal::Isolate"*, i8, %"class.v8::internal::Handle" }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.v8::internal::Handle.1144" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Factory::JSFunctionBuilder" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1149", %"class.v8::internal::Handle.1135", %"class.v8::internal::MaybeHandle.1150", %"class.v8::internal::MaybeHandle.1151", i8, [7 x i8] }>
%"class.v8::internal::Handle.1149" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::MaybeHandle.1150" = type { i64* }
%"class.v8::internal::MaybeHandle.1151" = type { i64* }
%"class.v8::internal::LookupIterator" = type { i32, i32, i8, i32, %"class.v8::internal::PropertyDetails", %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1143", %"class.v8::internal::Handle.1144", %"class.v8::internal::Handle.1144", %"class.v8::internal::Handle.1138", %"class.v8::internal::Handle.1144", i64, %"class.v8::internal::InternalIndex" }
%"class.v8::internal::PropertyDetails" = type { i32 }
%"class.v8::internal::Handle.1143" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1138" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::InternalIndex" = type { i64 }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }
%"class.v8::internal::LookupIterator::Key" = type { %"class.v8::internal::Handle.1143", i64 }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }

$_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE = comdat any

@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [52 x i8] c"!obj->GetInstanceCallHandler().IsUndefined(isolate)\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"parent_prototype->IsHeapObject()\00", align 1
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@.str.3 = private unnamed_addr constant [20 x i8] c"DisableAccessChecks\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"EnableAccessChecks\00", align 1
@.str.5 = private unnamed_addr constant [30 x i8] c"ApiNatives::InstantiateObject\00", align 1
@.str.6 = private unnamed_addr constant [39 x i8] c"!constructor_or_back_pointer().IsMap()\00", align 1
@_ZN2v88internal12TracingFlags13runtime_statsE = external local_unnamed_addr global %"struct.std::__1::atomic.1187", align 4

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10ApiNatives19InstantiateFunctionEPNS0_7IsolateENS0_6HandleINS0_13NativeContextEEENS4_INS0_20FunctionTemplateInfoEEENS0_11MaybeHandleINS0_4NameEEE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::(anonymous namespace)::InvokeScope", align 8
  %6 = bitcast %"class.v8::internal::(anonymous namespace)::InvokeScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #4
  %7 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::InvokeScope", %"class.v8::internal::(anonymous namespace)::InvokeScope"* %5, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::InvokeScope", %"class.v8::internal::(anonymous namespace)::InvokeScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal11SaveContextC1EPNS0_7IsolateE(%"class.v8::internal::SaveContext"* %8, %"class.v8::internal::Isolate"* %0) #4
  %9 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119InstantiateFunctionEPNS0_7IsolateENS0_6HandleINS0_13NativeContextEEENS4_INS0_20FunctionTemplateInfoEEENS0_11MaybeHandleINS0_4NameEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i64* %3)
  %10 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 5
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i32
  %16 = trunc i64 %12 to i32
  %17 = icmp eq i32 %15, %16
  br i1 %17, label %19, label %18

18:                                               ; preds = %4
  call void @_ZN2v88internal7Isolate21ReportPendingMessagesEv(%"class.v8::internal::Isolate"* %10) #4
  br label %21

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 9, i32 11, i32 0, i32 0
  store i64 %12, i64* %20, align 8
  br label %21

21:                                               ; preds = %18, %19
  call void @_ZN2v88internal11SaveContextD1Ev(%"class.v8::internal::SaveContext"* %8) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #4
  ret i64* %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_119InstantiateFunctionEPNS0_7IsolateENS0_6HandleINS0_13NativeContextEEENS4_INS0_20FunctionTemplateInfoEEENS0_11MaybeHandleINS0_4NameEEE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*) unnamed_addr #0 {
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::(anonymous namespace)::AccessCheckDisableScope", align 8
  %7 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %8 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 40, i1 false) #4
  %9 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1187", %"struct.std::__1::atomic.1187"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %17, label %11, !prof !2

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 0
  %13 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 1
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 14, i32 0
  %15 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %15, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %16, %"class.v8::internal::RuntimeCallStats"** %12, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %16, %"class.v8::internal::RuntimeCallTimer"* %13, i32 169) #4
  br label %17

17:                                               ; preds = %4, %11
  %18 = load i64, i64* %2, align 8
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = icmp ult i32 %21, -2
  %23 = icmp sgt i32 %21, -3
  %24 = and i1 %22, %23
  br i1 %24, label %25, label %33

25:                                               ; preds = %17
  %26 = lshr i32 %21, 1
  %27 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_124ProbeInstantiationsCacheEPNS0_7IsolateENS0_6HandleINS0_13NativeContextEEEiNS1_11CachingModeE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 %26, i32 1)
  %28 = icmp eq i64* %27, null
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = load i64, i64* %2, align 8
  br label %33

31:                                               ; preds = %25
  %32 = ptrtoint i64* %27 to i64
  br label %1112

33:                                               ; preds = %29, %17
  %34 = phi i64 [ %30, %29 ], [ %18, %17 ]
  %35 = add i64 %34, 43
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 16
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %287

40:                                               ; preds = %33
  %41 = and i64 %34, -4294967296
  %42 = add i64 %34, 35
  %43 = inttoptr i64 %42 to i32*
  %44 = load atomic i32, i32* %43 acquire, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %41, %45
  %47 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %48 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %47, null
  br i1 %48, label %55, label %49

49:                                               ; preds = %40
  %50 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %47, i64 0, i32 0, i32 1
  %51 = load i8, i8* %50, align 8, !range !3
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %47, i64 0, i32 1, i64 0
  br label %63

55:                                               ; preds = %49, %40
  %56 = and i64 %34, -262144
  %57 = or i64 %56, 16
  %58 = inttoptr i64 %57 to i64*
  %59 = load i64, i64* %58, align 16
  %60 = add i64 %59, -41416
  %61 = inttoptr i64 %60 to %"class.v8::internal::Isolate"*
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %61, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %63

63:                                               ; preds = %55, %53
  %64 = phi i64* [ %62, %55 ], [ %54, %53 ]
  %65 = getelementptr inbounds i64, i64* %64, i64 4
  %66 = load i64, i64* %65, align 8
  %67 = trunc i64 %66 to i32
  %68 = icmp eq i32 %44, %67
  br i1 %68, label %75, label %69

69:                                               ; preds = %63
  %70 = add i64 %46, 3
  %71 = inttoptr i64 %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i64
  %74 = or i64 %41, %73
  br label %75

75:                                               ; preds = %63, %69
  %76 = phi i64 [ %74, %69 ], [ %66, %63 ]
  %77 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %78 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %77, align 8
  %79 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %78, null
  br i1 %79, label %83, label %80

80:                                               ; preds = %75
  %81 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %78, i64 %76) #4
  %82 = load i64, i64* %81, align 8
  br label %96

83:                                               ; preds = %75
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %85 = load i64*, i64** %84, align 8
  %86 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %87 = load i64*, i64** %86, align 8
  %88 = icmp eq i64* %85, %87
  br i1 %88, label %89, label %91

89:                                               ; preds = %83
  %90 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %91

91:                                               ; preds = %89, %83
  %92 = phi i64* [ %90, %89 ], [ %85, %83 ]
  %93 = ptrtoint i64* %92 to i64
  %94 = add i64 %93, 8
  %95 = inttoptr i64 %94 to i64*
  store i64* %95, i64** %84, align 8
  store i64 %76, i64* %92, align 8
  br label %96

96:                                               ; preds = %80, %91
  %97 = phi i64 [ %82, %80 ], [ %76, %91 ]
  %98 = phi i64* [ %81, %80 ], [ %92, %91 ]
  %99 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %100 = load i64, i64* %99, align 8
  %101 = trunc i64 %97 to i32
  %102 = trunc i64 %100 to i32
  %103 = icmp eq i32 %101, %102
  br i1 %103, label %104, label %210

104:                                              ; preds = %96
  %105 = load i64, i64* %2, align 8
  %106 = and i64 %105, -4294967296
  %107 = add i64 %105, 35
  %108 = inttoptr i64 %107 to i32*
  %109 = load atomic i32, i32* %108 acquire, align 4
  %110 = zext i32 %109 to i64
  %111 = or i64 %106, %110
  %112 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %113 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %112, null
  br i1 %113, label %120, label %114

114:                                              ; preds = %104
  %115 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %112, i64 0, i32 0, i32 1
  %116 = load i8, i8* %115, align 8, !range !3
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %120, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %112, i64 0, i32 1, i64 0
  br label %128

120:                                              ; preds = %114, %104
  %121 = and i64 %105, -262144
  %122 = or i64 %121, 16
  %123 = inttoptr i64 %122 to i64*
  %124 = load i64, i64* %123, align 16
  %125 = add i64 %124, -41416
  %126 = inttoptr i64 %125 to %"class.v8::internal::Isolate"*
  %127 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %126, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %128

128:                                              ; preds = %120, %118
  %129 = phi i64* [ %127, %120 ], [ %119, %118 ]
  %130 = getelementptr inbounds i64, i64* %129, i64 4
  %131 = load i64, i64* %130, align 8
  %132 = trunc i64 %131 to i32
  %133 = icmp eq i32 %109, %132
  br i1 %133, label %140, label %134

134:                                              ; preds = %128
  %135 = add i64 %111, 7
  %136 = inttoptr i64 %135 to i32*
  %137 = load i32, i32* %136, align 4
  %138 = zext i32 %137 to i64
  %139 = or i64 %106, %138
  br label %140

140:                                              ; preds = %128, %134
  %141 = phi i64 [ %139, %134 ], [ %131, %128 ]
  %142 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %77, align 8
  %143 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %142, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %140
  %145 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %142, i64 %141) #4
  %146 = load i64, i64* %145, align 8
  br label %160

147:                                              ; preds = %140
  %148 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %149 = load i64*, i64** %148, align 8
  %150 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %151 = load i64*, i64** %150, align 8
  %152 = icmp eq i64* %149, %151
  br i1 %152, label %153, label %155

153:                                              ; preds = %147
  %154 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %155

155:                                              ; preds = %153, %147
  %156 = phi i64* [ %154, %153 ], [ %149, %147 ]
  %157 = ptrtoint i64* %156 to i64
  %158 = add i64 %157, 8
  %159 = inttoptr i64 %158 to i64*
  store i64* %159, i64** %148, align 8
  store i64 %141, i64* %156, align 8
  br label %160

160:                                              ; preds = %144, %155
  %161 = phi i64 [ %146, %144 ], [ %141, %155 ]
  %162 = phi i64* [ %145, %144 ], [ %156, %155 ]
  %163 = load i64, i64* %99, align 8
  %164 = trunc i64 %161 to i32
  %165 = trunc i64 %163 to i32
  %166 = icmp eq i32 %164, %165
  br i1 %166, label %167, label %207

167:                                              ; preds = %160
  %168 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %169 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load i64, i64* %169, align 8
  %171 = and i64 %170, -4294967296
  %172 = add i64 %170, -1
  %173 = inttoptr i64 %172 to i32*
  %174 = load atomic i32, i32* %173 monotonic, align 4
  %175 = zext i32 %174 to i64
  %176 = or i64 %171, %175
  %177 = add i64 %176, 19
  %178 = inttoptr i64 %177 to i32*
  %179 = load i32, i32* %178, align 4
  %180 = zext i32 %179 to i64
  %181 = or i64 %171, %180
  %182 = add i64 %181, 571
  %183 = inttoptr i64 %182 to i32*
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = zext i32 %184 to i64
  %186 = or i64 %171, %185
  %187 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %77, align 8
  %188 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %187, null
  br i1 %188, label %191, label %189

189:                                              ; preds = %167
  %190 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %187, i64 %186) #4
  br label %204

191:                                              ; preds = %167
  %192 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %193 = load i64*, i64** %192, align 8
  %194 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %195 = load i64*, i64** %194, align 8
  %196 = icmp eq i64* %193, %195
  br i1 %196, label %197, label %199

197:                                              ; preds = %191
  %198 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %199

199:                                              ; preds = %197, %191
  %200 = phi i64* [ %198, %197 ], [ %193, %191 ]
  %201 = ptrtoint i64* %200 to i64
  %202 = add i64 %201, 8
  %203 = inttoptr i64 %202 to i64*
  store i64* %203, i64** %192, align 8
  store i64 %186, i64* %200, align 8
  br label %204

204:                                              ; preds = %189, %199
  %205 = phi i64* [ %190, %189 ], [ %200, %199 ]
  %206 = call i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %168, i64* %205, i8 zeroext 0) #4
  br label %213

207:                                              ; preds = %160
  %208 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_112_GLOBAL__N_120GetInstancePrototypeEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %162)
  %209 = icmp eq i64* %208, null
  br i1 %209, label %1112, label %213

210:                                              ; preds = %96
  %211 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_117InstantiateObjectEPNS0_7IsolateENS0_6HandleINS0_18ObjectTemplateInfoEEENS4_INS0_10JSReceiverEEEb(%"class.v8::internal::Isolate"* %0, i64* %98, i64* null, i1 zeroext true)
  %212 = icmp eq i64* %211, null
  br i1 %212, label %1112, label %213

213:                                              ; preds = %210, %207, %204
  %214 = phi i64* [ %206, %204 ], [ %208, %207 ], [ %211, %210 ]
  %215 = ptrtoint i64* %214 to i64
  %216 = load i64, i64* %2, align 8
  %217 = and i64 %216, -4294967296
  %218 = add i64 %216, 35
  %219 = inttoptr i64 %218 to i32*
  %220 = load atomic i32, i32* %219 acquire, align 4
  %221 = zext i32 %220 to i64
  %222 = or i64 %217, %221
  %223 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %224 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %223, null
  br i1 %224, label %231, label %225

225:                                              ; preds = %213
  %226 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %223, i64 0, i32 0, i32 1
  %227 = load i8, i8* %226, align 8, !range !3
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %231, label %229

229:                                              ; preds = %225
  %230 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %223, i64 0, i32 1, i64 0
  br label %239

231:                                              ; preds = %225, %213
  %232 = and i64 %216, -262144
  %233 = or i64 %232, 16
  %234 = inttoptr i64 %233 to i64*
  %235 = load i64, i64* %234, align 16
  %236 = add i64 %235, -41416
  %237 = inttoptr i64 %236 to %"class.v8::internal::Isolate"*
  %238 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %237, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %239

239:                                              ; preds = %231, %229
  %240 = phi i64* [ %238, %231 ], [ %230, %229 ]
  %241 = getelementptr inbounds i64, i64* %240, i64 4
  %242 = load i64, i64* %241, align 8
  %243 = trunc i64 %242 to i32
  %244 = icmp eq i32 %220, %243
  br i1 %244, label %251, label %245

245:                                              ; preds = %239
  %246 = add i64 %222, 11
  %247 = inttoptr i64 %246 to i32*
  %248 = load i32, i32* %247, align 4
  %249 = zext i32 %248 to i64
  %250 = or i64 %217, %249
  br label %251

251:                                              ; preds = %239, %245
  %252 = phi i64 [ %250, %245 ], [ %242, %239 ]
  %253 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %77, align 8
  %254 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %253, null
  br i1 %254, label %258, label %255

255:                                              ; preds = %251
  %256 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %253, i64 %252) #4
  %257 = load i64, i64* %256, align 8
  br label %271

258:                                              ; preds = %251
  %259 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %260 = load i64*, i64** %259, align 8
  %261 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %262 = load i64*, i64** %261, align 8
  %263 = icmp eq i64* %260, %262
  br i1 %263, label %264, label %266

264:                                              ; preds = %258
  %265 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %266

266:                                              ; preds = %264, %258
  %267 = phi i64* [ %265, %264 ], [ %260, %258 ]
  %268 = ptrtoint i64* %267 to i64
  %269 = add i64 %268, 8
  %270 = inttoptr i64 %269 to i64*
  store i64* %270, i64** %259, align 8
  store i64 %252, i64* %267, align 8
  br label %271

271:                                              ; preds = %255, %266
  %272 = phi i64 [ %257, %255 ], [ %252, %266 ]
  %273 = phi i64* [ %256, %255 ], [ %267, %266 ]
  %274 = load i64, i64* %99, align 8
  %275 = trunc i64 %272 to i32
  %276 = trunc i64 %274 to i32
  %277 = icmp eq i32 %275, %276
  br i1 %277, label %287, label %278

278:                                              ; preds = %271
  %279 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_112_GLOBAL__N_120GetInstancePrototypeEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %273)
  %280 = icmp eq i64* %279, null
  br i1 %280, label %1112, label %281

281:                                              ; preds = %278
  %282 = load i64, i64* %279, align 8
  %283 = and i64 %282, 1
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %285, label %286, !prof !4

285:                                              ; preds = %281
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

286:                                              ; preds = %281
  call void @_ZN2v88internal8JSObject17ForceSetPrototypeEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_10HeapObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %214, i64* nonnull %279) #4
  br label %287

287:                                              ; preds = %33, %271, %286
  %288 = phi i64 [ 0, %33 ], [ %215, %271 ], [ %215, %286 ]
  %289 = load i64, i64* %2, align 8
  %290 = add i64 %289, 43
  %291 = inttoptr i64 %290 to i32*
  %292 = load i32, i32* %291, align 4
  %293 = and i32 %292, 4
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %374

295:                                              ; preds = %287
  %296 = and i64 %289, -4294967296
  %297 = add i64 %289, 35
  %298 = inttoptr i64 %297 to i32*
  %299 = load atomic i32, i32* %298 acquire, align 4
  %300 = zext i32 %299 to i64
  %301 = or i64 %296, %300
  %302 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %303 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %302, null
  br i1 %303, label %310, label %304

304:                                              ; preds = %295
  %305 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %302, i64 0, i32 0, i32 1
  %306 = load i8, i8* %305, align 8, !range !3
  %307 = icmp eq i8 %306, 0
  br i1 %307, label %310, label %308

308:                                              ; preds = %304
  %309 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %302, i64 0, i32 1, i64 0
  br label %318

310:                                              ; preds = %304, %295
  %311 = and i64 %289, -262144
  %312 = or i64 %311, 16
  %313 = inttoptr i64 %312 to i64*
  %314 = load i64, i64* %313, align 16
  %315 = add i64 %314, -41416
  %316 = inttoptr i64 %315 to %"class.v8::internal::Isolate"*
  %317 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %316, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %318

318:                                              ; preds = %310, %308
  %319 = phi i64* [ %317, %310 ], [ %309, %308 ]
  %320 = getelementptr inbounds i64, i64* %319, i64 4
  %321 = load i64, i64* %320, align 8
  %322 = trunc i64 %321 to i32
  %323 = icmp eq i32 %299, %322
  br i1 %323, label %328, label %324

324:                                              ; preds = %318
  %325 = add i64 %301, 15
  %326 = inttoptr i64 %325 to i32*
  %327 = load i32, i32* %326, align 4
  br label %328

328:                                              ; preds = %318, %324
  %329 = phi i32 [ %322, %318 ], [ %327, %324 ]
  %330 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %331 = load i64, i64* %330, align 8
  %332 = trunc i64 %331 to i32
  %333 = icmp eq i32 %329, %332
  br i1 %333, label %334, label %374

334:                                              ; preds = %328
  %335 = load i64, i64* %2, align 8
  %336 = and i64 %335, -4294967296
  %337 = add i64 %335, 35
  %338 = inttoptr i64 %337 to i32*
  %339 = load atomic i32, i32* %338 acquire, align 4
  %340 = zext i32 %339 to i64
  %341 = or i64 %336, %340
  %342 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %343 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %342, null
  br i1 %343, label %350, label %344

344:                                              ; preds = %334
  %345 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %342, i64 0, i32 0, i32 1
  %346 = load i8, i8* %345, align 8, !range !3
  %347 = icmp eq i8 %346, 0
  br i1 %347, label %350, label %348

348:                                              ; preds = %344
  %349 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %342, i64 0, i32 1, i64 0
  br label %358

350:                                              ; preds = %344, %334
  %351 = and i64 %335, -262144
  %352 = or i64 %351, 16
  %353 = inttoptr i64 %352 to i64*
  %354 = load i64, i64* %353, align 16
  %355 = add i64 %354, -41416
  %356 = inttoptr i64 %355 to %"class.v8::internal::Isolate"*
  %357 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %356, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %358

358:                                              ; preds = %350, %348
  %359 = phi i64* [ %357, %350 ], [ %349, %348 ]
  %360 = getelementptr inbounds i64, i64* %359, i64 4
  %361 = load i64, i64* %360, align 8
  %362 = trunc i64 %361 to i32
  %363 = icmp eq i32 %339, %362
  br i1 %363, label %368, label %364

364:                                              ; preds = %358
  %365 = add i64 %341, 19
  %366 = inttoptr i64 %365 to i32*
  %367 = load i32, i32* %366, align 4
  br label %368

368:                                              ; preds = %358, %364
  %369 = phi i32 [ %362, %358 ], [ %367, %364 ]
  %370 = load i64, i64* %330, align 8
  %371 = trunc i64 %370 to i32
  %372 = icmp eq i32 %369, %371
  %373 = select i1 %372, i16 1056, i16 1040
  br label %374

374:                                              ; preds = %287, %368, %328
  %375 = phi i16 [ 1040, %328 ], [ 1040, %287 ], [ %373, %368 ]
  %376 = inttoptr i64 %288 to i64*
  %377 = call i64* @_ZN2v88internal10ApiNatives17CreateApiFunctionEPNS0_7IsolateENS0_6HandleINS0_13NativeContextEEENS4_INS0_20FunctionTemplateInfoEEENS4_INS0_6ObjectEEENS0_12InstanceTypeENS0_11MaybeHandleINS0_4NameEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i64* %376, i16 zeroext %375, i64* %3)
  br i1 %22, label %378, label %379

378:                                              ; preds = %374
  call fastcc void @_ZN2v88internal12_GLOBAL__N_126CacheTemplateInstantiationEPNS0_7IsolateENS0_6HandleINS0_13NativeContextEEENS4_INS0_12TemplateInfoEEENS1_11CachingModeENS4_INS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i32 1, i64* %377)
  br label %379

379:                                              ; preds = %378, %374
  %380 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %380) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %380, i8 0, i64 40, i1 false) #4
  %381 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1187", %"struct.std::__1::atomic.1187"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %389, label %383, !prof !2

383:                                              ; preds = %379
  %384 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %385 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %386 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 14, i32 0
  %387 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %386, align 8
  %388 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %387, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %388, %"class.v8::internal::RuntimeCallStats"** %384, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %388, %"class.v8::internal::RuntimeCallTimer"* %385, i32 144) #4
  br label %389

389:                                              ; preds = %383, %379
  %390 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31
  %391 = bitcast %"struct.v8::internal::HandleScopeData"* %390 to i64*
  %392 = load i64, i64* %391, align 8
  %393 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %394 = load i64*, i64** %393, align 8
  %395 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 2
  %396 = load i32, i32* %395, align 8
  %397 = add nsw i32 %396, 1
  store i32 %397, i32* %395, align 8
  %398 = bitcast %"class.v8::internal::(anonymous namespace)::AccessCheckDisableScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %398) #4
  call fastcc void @_ZN2v88internal12_GLOBAL__N_123AccessCheckDisableScopeC2EPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::AccessCheckDisableScope"* nonnull %6, %"class.v8::internal::Isolate"* %0, i64* %377) #4
  %399 = load i64, i64* %2, align 8
  %400 = trunc i64 %399 to i32
  %401 = icmp eq i32 %400, 0
  br i1 %401, label %667, label %402

402:                                              ; preds = %389
  %403 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %404 = load i64, i64* %403, align 8
  br label %405

405:                                              ; preds = %402, %458
  %406 = phi i64 [ %404, %402 ], [ %461, %458 ]
  %407 = phi i32 [ 0, %402 ], [ %424, %458 ]
  %408 = phi i64 [ %399, %402 ], [ %464, %458 ]
  %409 = and i64 %408, -4294967296
  %410 = add i64 %408, 19
  %411 = inttoptr i64 %410 to i32*
  %412 = load i32, i32* %411, align 4
  %413 = trunc i64 %406 to i32
  %414 = icmp eq i32 %412, %413
  br i1 %414, label %423, label %415

415:                                              ; preds = %405
  %416 = zext i32 %412 to i64
  %417 = or i64 %409, %416
  %418 = add i64 %417, 7
  %419 = inttoptr i64 %418 to i32*
  %420 = load atomic i32, i32* %419 monotonic, align 4
  %421 = ashr i32 %420, 1
  %422 = add nsw i32 %421, %407
  br label %423

423:                                              ; preds = %415, %405
  %424 = phi i32 [ %407, %405 ], [ %422, %415 ]
  %425 = add i64 %408, 35
  %426 = inttoptr i64 %425 to i32*
  %427 = load atomic i32, i32* %426 acquire, align 4
  %428 = zext i32 %427 to i64
  %429 = or i64 %409, %428
  %430 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %431 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %430, null
  br i1 %431, label %438, label %432

432:                                              ; preds = %423
  %433 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %430, i64 0, i32 0, i32 1
  %434 = load i8, i8* %433, align 8, !range !3
  %435 = icmp eq i8 %434, 0
  br i1 %435, label %438, label %436

436:                                              ; preds = %432
  %437 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %430, i64 0, i32 1, i64 0
  br label %446

438:                                              ; preds = %432, %423
  %439 = and i64 %408, -262144
  %440 = or i64 %439, 16
  %441 = inttoptr i64 %440 to i64*
  %442 = load i64, i64* %441, align 16
  %443 = add i64 %442, -41416
  %444 = inttoptr i64 %443 to %"class.v8::internal::Isolate"*
  %445 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %444, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %446

446:                                              ; preds = %438, %436
  %447 = phi i64* [ %445, %438 ], [ %437, %436 ]
  %448 = getelementptr inbounds i64, i64* %447, i64 4
  %449 = load i64, i64* %448, align 8
  %450 = trunc i64 %449 to i32
  %451 = icmp eq i32 %427, %450
  br i1 %451, label %458, label %452

452:                                              ; preds = %446
  %453 = add i64 %429, 11
  %454 = inttoptr i64 %453 to i32*
  %455 = load i32, i32* %454, align 4
  %456 = zext i32 %455 to i64
  %457 = or i64 %409, %456
  br label %458

458:                                              ; preds = %452, %446
  %459 = phi i32 [ %427, %446 ], [ %455, %452 ]
  %460 = phi i64 [ %449, %446 ], [ %457, %452 ]
  %461 = load i64, i64* %403, align 8
  %462 = trunc i64 %461 to i32
  %463 = icmp eq i32 %459, %462
  %464 = select i1 %463, i64 0, i64 %460
  %465 = trunc i64 %464 to i32
  %466 = icmp eq i32 %465, 0
  br i1 %466, label %467, label %405

467:                                              ; preds = %458
  %468 = icmp sgt i32 %424, 0
  br i1 %468, label %469, label %667

469:                                              ; preds = %467
  %470 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %471 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %470, i32 %424, i8 zeroext 0) #4
  %472 = load i64, i64* %2, align 8
  %473 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %474 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %473, align 8
  %475 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %474, null
  br i1 %475, label %479, label %476

476:                                              ; preds = %469
  %477 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %474, i64 %472) #4
  %478 = load i64, i64* %477, align 8
  br label %491

479:                                              ; preds = %469
  %480 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %481 = load i64*, i64** %480, align 8
  %482 = load i64*, i64** %393, align 8
  %483 = icmp eq i64* %481, %482
  br i1 %483, label %484, label %486

484:                                              ; preds = %479
  %485 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %486

486:                                              ; preds = %484, %479
  %487 = phi i64* [ %485, %484 ], [ %481, %479 ]
  %488 = ptrtoint i64* %487 to i64
  %489 = add i64 %488, 8
  %490 = inttoptr i64 %489 to i64*
  store i64* %490, i64** %480, align 8
  store i64 %472, i64* %487, align 8
  br label %491

491:                                              ; preds = %486, %476
  %492 = phi i64 [ %478, %476 ], [ %472, %486 ]
  %493 = phi i64* [ %477, %476 ], [ %487, %486 ]
  %494 = trunc i64 %492 to i32
  %495 = icmp eq i32 %494, 0
  br i1 %495, label %667, label %496

496:                                              ; preds = %491
  %497 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %498 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  br label %504

499:                                              ; preds = %598
  %500 = icmp sgt i32 %541, 0
  br i1 %500, label %501, label %667

501:                                              ; preds = %499
  %502 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %503 = zext i32 %541 to i64
  br label %603

504:                                              ; preds = %496, %598
  %505 = phi i64 [ %492, %496 ], [ %599, %598 ]
  %506 = phi i32 [ 0, %496 ], [ %541, %598 ]
  %507 = phi i64* [ %493, %496 ], [ %600, %598 ]
  %508 = and i64 %505, -4294967296
  %509 = add i64 %505, 19
  %510 = inttoptr i64 %509 to i32*
  %511 = load i32, i32* %510, align 4
  %512 = zext i32 %511 to i64
  %513 = or i64 %508, %512
  %514 = load i64, i64* %497, align 8
  %515 = trunc i64 %514 to i32
  %516 = icmp eq i32 %511, %515
  br i1 %516, label %538, label %517

517:                                              ; preds = %504
  %518 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %473, align 8
  %519 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %518, null
  br i1 %519, label %522, label %520

520:                                              ; preds = %517
  %521 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %518, i64 %513) #4
  br label %533

522:                                              ; preds = %517
  %523 = load i64*, i64** %498, align 8
  %524 = load i64*, i64** %393, align 8
  %525 = icmp eq i64* %523, %524
  br i1 %525, label %526, label %528

526:                                              ; preds = %522
  %527 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %528

528:                                              ; preds = %526, %522
  %529 = phi i64* [ %527, %526 ], [ %523, %522 ]
  %530 = ptrtoint i64* %529 to i64
  %531 = add i64 %530, 8
  %532 = inttoptr i64 %531 to i64*
  store i64* %532, i64** %498, align 8
  store i64 %513, i64* %529, align 8
  br label %533

533:                                              ; preds = %528, %520
  %534 = phi i64* [ %521, %520 ], [ %529, %528 ]
  %535 = call i32 @_ZN2v88internal12AccessorInfo12AppendUniqueEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_10FixedArrayEEEi(%"class.v8::internal::Isolate"* %0, i64* %534, i64* %471, i32 %506) #4
  %536 = load i64, i64* %507, align 8
  %537 = and i64 %536, -4294967296
  br label %538

538:                                              ; preds = %533, %504
  %539 = phi i64 [ %537, %533 ], [ %508, %504 ]
  %540 = phi i64 [ %536, %533 ], [ %505, %504 ]
  %541 = phi i32 [ %535, %533 ], [ %506, %504 ]
  %542 = add i64 %540, 35
  %543 = inttoptr i64 %542 to i32*
  %544 = load atomic i32, i32* %543 acquire, align 4
  %545 = zext i32 %544 to i64
  %546 = or i64 %539, %545
  %547 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %548 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %547, null
  br i1 %548, label %555, label %549

549:                                              ; preds = %538
  %550 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %547, i64 0, i32 0, i32 1
  %551 = load i8, i8* %550, align 8, !range !3
  %552 = icmp eq i8 %551, 0
  br i1 %552, label %555, label %553

553:                                              ; preds = %549
  %554 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %547, i64 0, i32 1, i64 0
  br label %563

555:                                              ; preds = %549, %538
  %556 = and i64 %540, -262144
  %557 = or i64 %556, 16
  %558 = inttoptr i64 %557 to i64*
  %559 = load i64, i64* %558, align 16
  %560 = add i64 %559, -41416
  %561 = inttoptr i64 %560 to %"class.v8::internal::Isolate"*
  %562 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %561, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %563

563:                                              ; preds = %555, %553
  %564 = phi i64* [ %562, %555 ], [ %554, %553 ]
  %565 = getelementptr inbounds i64, i64* %564, i64 4
  %566 = load i64, i64* %565, align 8
  %567 = trunc i64 %566 to i32
  %568 = icmp eq i32 %544, %567
  br i1 %568, label %575, label %569

569:                                              ; preds = %563
  %570 = add i64 %546, 11
  %571 = inttoptr i64 %570 to i32*
  %572 = load i32, i32* %571, align 4
  %573 = zext i32 %572 to i64
  %574 = or i64 %539, %573
  br label %575

575:                                              ; preds = %569, %563
  %576 = phi i32 [ %544, %563 ], [ %572, %569 ]
  %577 = phi i64 [ %566, %563 ], [ %574, %569 ]
  %578 = load i64, i64* %497, align 8
  %579 = trunc i64 %578 to i32
  %580 = icmp eq i32 %576, %579
  %581 = select i1 %580, i64 0, i64 %577
  %582 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %473, align 8
  %583 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %582, null
  br i1 %583, label %587, label %584

584:                                              ; preds = %575
  %585 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %582, i64 %581) #4
  %586 = load i64, i64* %585, align 8
  br label %598

587:                                              ; preds = %575
  %588 = load i64*, i64** %498, align 8
  %589 = load i64*, i64** %393, align 8
  %590 = icmp eq i64* %588, %589
  br i1 %590, label %591, label %593

591:                                              ; preds = %587
  %592 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %593

593:                                              ; preds = %591, %587
  %594 = phi i64* [ %592, %591 ], [ %588, %587 ]
  %595 = ptrtoint i64* %594 to i64
  %596 = add i64 %595, 8
  %597 = inttoptr i64 %596 to i64*
  store i64* %597, i64** %498, align 8
  store i64 %581, i64* %594, align 8
  br label %598

598:                                              ; preds = %593, %584
  %599 = phi i64 [ %586, %584 ], [ %581, %593 ]
  %600 = phi i64* [ %585, %584 ], [ %594, %593 ]
  %601 = trunc i64 %599 to i32
  %602 = icmp eq i32 %601, 0
  br i1 %602, label %499, label %504

603:                                              ; preds = %656, %501
  %604 = phi i64 [ 0, %501 ], [ %665, %656 ]
  %605 = load i64, i64* %471, align 8
  %606 = and i64 %605, -4294967296
  %607 = trunc i64 %604 to i32
  %608 = shl i32 %607, 2
  %609 = sext i32 %608 to i64
  %610 = add nsw i64 %609, 7
  %611 = add i64 %610, %605
  %612 = inttoptr i64 %611 to i32*
  %613 = load atomic i32, i32* %612 monotonic, align 4
  %614 = zext i32 %613 to i64
  %615 = or i64 %606, %614
  %616 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %473, align 8
  %617 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %616, null
  br i1 %617, label %621, label %618

618:                                              ; preds = %603
  %619 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %616, i64 %615) #4
  %620 = load i64, i64* %619, align 8
  br label %632

621:                                              ; preds = %603
  %622 = load i64*, i64** %502, align 8
  %623 = load i64*, i64** %393, align 8
  %624 = icmp eq i64* %622, %623
  br i1 %624, label %625, label %627

625:                                              ; preds = %621
  %626 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %627

627:                                              ; preds = %625, %621
  %628 = phi i64* [ %626, %625 ], [ %622, %621 ]
  %629 = ptrtoint i64* %628 to i64
  %630 = add i64 %629, 8
  %631 = inttoptr i64 %630 to i64*
  store i64* %631, i64** %502, align 8
  store i64 %615, i64* %628, align 8
  br label %632

632:                                              ; preds = %627, %618
  %633 = phi i64 [ %620, %618 ], [ %615, %627 ]
  %634 = phi i64* [ %619, %618 ], [ %628, %627 ]
  %635 = and i64 %633, -4294967296
  %636 = add i64 %633, 3
  %637 = inttoptr i64 %636 to i32*
  %638 = load i32, i32* %637, align 4
  %639 = zext i32 %638 to i64
  %640 = or i64 %635, %639
  %641 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %473, align 8
  %642 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %641, null
  br i1 %642, label %645, label %643

643:                                              ; preds = %632
  %644 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %641, i64 %640) #4
  br label %656

645:                                              ; preds = %632
  %646 = load i64*, i64** %502, align 8
  %647 = load i64*, i64** %393, align 8
  %648 = icmp eq i64* %646, %647
  br i1 %648, label %649, label %651

649:                                              ; preds = %645
  %650 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %651

651:                                              ; preds = %649, %645
  %652 = phi i64* [ %650, %649 ], [ %646, %645 ]
  %653 = ptrtoint i64* %652 to i64
  %654 = add i64 %653, 8
  %655 = inttoptr i64 %654 to i64*
  store i64* %655, i64** %502, align 8
  store i64 %640, i64* %652, align 8
  br label %656

656:                                              ; preds = %651, %643
  %657 = phi i64* [ %644, %643 ], [ %652, %651 ]
  %658 = load i64, i64* %634, align 8
  %659 = add i64 %658, 7
  %660 = inttoptr i64 %659 to i32*
  %661 = load i32, i32* %660, align 4
  %662 = lshr i32 %661, 10
  %663 = and i32 %662, 7
  %664 = call i64* @_ZN2v88internal8JSObject11SetAccessorENS0_6HandleIS1_EENS2_INS0_4NameEEENS2_INS0_12AccessorInfoEEENS0_18PropertyAttributesE(i64* %377, i64* %657, i64* %634, i32 %663) #4
  %665 = add nuw nsw i64 %604, 1
  %666 = icmp eq i64 %665, %503
  br i1 %666, label %667, label %603

667:                                              ; preds = %656, %491, %389, %499, %467
  %668 = load i64, i64* %2, align 8
  %669 = and i64 %668, -4294967296
  %670 = add i64 %668, 15
  %671 = inttoptr i64 %670 to i32*
  %672 = load i32, i32* %671, align 4
  %673 = zext i32 %672 to i64
  %674 = or i64 %669, %673
  %675 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %676 = load i64, i64* %675, align 8
  %677 = trunc i64 %676 to i32
  %678 = icmp eq i32 %672, %677
  br i1 %678, label %679, label %681

679:                                              ; preds = %667
  %680 = ptrtoint i64* %377 to i64
  br label %889

681:                                              ; preds = %667
  %682 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %683 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %682, align 8
  %684 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %683, null
  br i1 %684, label %688, label %685

685:                                              ; preds = %681
  %686 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %683, i64 %674) #4
  %687 = load i64, i64* %686, align 8
  br label %700

688:                                              ; preds = %681
  %689 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %690 = load i64*, i64** %689, align 8
  %691 = load i64*, i64** %393, align 8
  %692 = icmp eq i64* %690, %691
  br i1 %692, label %693, label %695

693:                                              ; preds = %688
  %694 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %695

695:                                              ; preds = %693, %688
  %696 = phi i64* [ %694, %693 ], [ %690, %688 ]
  %697 = ptrtoint i64* %696 to i64
  %698 = add i64 %697, 8
  %699 = inttoptr i64 %698 to i64*
  store i64* %699, i64** %689, align 8
  store i64 %674, i64* %696, align 8
  br label %700

700:                                              ; preds = %695, %685
  %701 = phi i64 [ %687, %685 ], [ %674, %695 ]
  %702 = phi i64* [ %686, %685 ], [ %696, %695 ]
  %703 = add i64 %701, 7
  %704 = inttoptr i64 %703 to i32*
  %705 = load atomic i32, i32* %704 monotonic, align 4
  %706 = icmp ult i32 %705, 2
  br i1 %706, label %715, label %707

707:                                              ; preds = %700
  %708 = load i64, i64* %2, align 8
  %709 = add i64 %708, 11
  %710 = inttoptr i64 %709 to i32*
  %711 = load i32, i32* %710, align 4
  %712 = icmp sgt i32 %711, 1
  br i1 %712, label %713, label %887

713:                                              ; preds = %707
  %714 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  br label %717

715:                                              ; preds = %700
  %716 = ptrtoint i64* %377 to i64
  br label %889

717:                                              ; preds = %885, %713
  %718 = phi i64 [ %701, %713 ], [ %886, %885 ]
  %719 = phi i32 [ 0, %713 ], [ %877, %885 ]
  %720 = phi i32 [ 0, %713 ], [ %878, %885 ]
  %721 = and i64 %718, -4294967296
  %722 = shl i32 %719, 2
  %723 = add i32 %722, 4
  %724 = sext i32 %723 to i64
  %725 = add nsw i64 %724, 7
  %726 = add i64 %725, %718
  %727 = inttoptr i64 %726 to i32*
  %728 = load atomic i32, i32* %727 monotonic, align 4
  %729 = zext i32 %728 to i64
  %730 = or i64 %721, %729
  %731 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %682, align 8
  %732 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %731, null
  br i1 %732, label %735, label %733

733:                                              ; preds = %717
  %734 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %731, i64 %730) #4
  br label %746

735:                                              ; preds = %717
  %736 = load i64*, i64** %714, align 8
  %737 = load i64*, i64** %393, align 8
  %738 = icmp eq i64* %736, %737
  br i1 %738, label %739, label %741

739:                                              ; preds = %735
  %740 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %741

741:                                              ; preds = %739, %735
  %742 = phi i64* [ %740, %739 ], [ %736, %735 ]
  %743 = ptrtoint i64* %742 to i64
  %744 = add i64 %743, 8
  %745 = inttoptr i64 %744 to i64*
  store i64* %745, i64** %714, align 8
  store i64 %730, i64* %742, align 8
  br label %746

746:                                              ; preds = %741, %733
  %747 = phi i64* [ %734, %733 ], [ %742, %741 ]
  %748 = load i64, i64* %702, align 8
  %749 = add nsw i32 %719, 2
  %750 = add i32 %722, 8
  %751 = sext i32 %750 to i64
  %752 = add i64 %748, 7
  %753 = add i64 %752, %751
  %754 = inttoptr i64 %753 to i32*
  %755 = load atomic i32, i32* %754 monotonic, align 4
  %756 = and i32 %755, 1
  %757 = icmp eq i32 %756, 0
  br i1 %757, label %758, label %840

758:                                              ; preds = %746
  %759 = and i64 %748, -4294967296
  %760 = lshr i32 %755, 4
  %761 = and i32 %760, 7
  %762 = and i32 %755, 2
  %763 = icmp eq i32 %762, 0
  %764 = add nsw i32 %719, 3
  %765 = shl i32 %749, 2
  %766 = add i32 %765, 4
  %767 = sext i32 %766 to i64
  %768 = add i64 %752, %767
  %769 = inttoptr i64 %768 to i32*
  %770 = load atomic i32, i32* %769 monotonic, align 4
  %771 = zext i32 %770 to i64
  %772 = or i64 %759, %771
  %773 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %682, align 8
  %774 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %773, null
  br i1 %763, label %775, label %793

775:                                              ; preds = %758
  br i1 %774, label %778, label %776

776:                                              ; preds = %775
  %777 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %773, i64 %772) #4
  br label %789

778:                                              ; preds = %775
  %779 = load i64*, i64** %714, align 8
  %780 = load i64*, i64** %393, align 8
  %781 = icmp eq i64* %779, %780
  br i1 %781, label %782, label %784

782:                                              ; preds = %778
  %783 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %784

784:                                              ; preds = %782, %778
  %785 = phi i64* [ %783, %782 ], [ %779, %778 ]
  %786 = ptrtoint i64* %785 to i64
  %787 = add i64 %786, 8
  %788 = inttoptr i64 %787 to i64*
  store i64* %788, i64** %714, align 8
  store i64 %772, i64* %785, align 8
  br label %789

789:                                              ; preds = %784, %776
  %790 = phi i64* [ %777, %776 ], [ %785, %784 ]
  %791 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_118DefineDataPropertyEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %0, i64* %377, i64* %747, i64* %790, i32 %761) #4
  %792 = icmp eq i64* %791, null
  br i1 %792, label %889, label %876

793:                                              ; preds = %758
  br i1 %774, label %796, label %794

794:                                              ; preds = %793
  %795 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %773, i64 %772) #4
  br label %807

796:                                              ; preds = %793
  %797 = load i64*, i64** %714, align 8
  %798 = load i64*, i64** %393, align 8
  %799 = icmp eq i64* %797, %798
  br i1 %799, label %800, label %802

800:                                              ; preds = %796
  %801 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %802

802:                                              ; preds = %800, %796
  %803 = phi i64* [ %801, %800 ], [ %797, %796 ]
  %804 = ptrtoint i64* %803 to i64
  %805 = add i64 %804, 8
  %806 = inttoptr i64 %805 to i64*
  store i64* %806, i64** %714, align 8
  store i64 %772, i64* %803, align 8
  br label %807

807:                                              ; preds = %802, %794
  %808 = phi i64* [ %795, %794 ], [ %803, %802 ]
  %809 = load i64, i64* %702, align 8
  %810 = add nsw i32 %719, 4
  %811 = and i64 %809, -4294967296
  %812 = shl i32 %764, 2
  %813 = add i32 %812, 4
  %814 = sext i32 %813 to i64
  %815 = add nsw i64 %814, 7
  %816 = add i64 %815, %809
  %817 = inttoptr i64 %816 to i32*
  %818 = load atomic i32, i32* %817 monotonic, align 4
  %819 = zext i32 %818 to i64
  %820 = or i64 %811, %819
  %821 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %682, align 8
  %822 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %821, null
  br i1 %822, label %825, label %823

823:                                              ; preds = %807
  %824 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %821, i64 %820) #4
  br label %836

825:                                              ; preds = %807
  %826 = load i64*, i64** %714, align 8
  %827 = load i64*, i64** %393, align 8
  %828 = icmp eq i64* %826, %827
  br i1 %828, label %829, label %831

829:                                              ; preds = %825
  %830 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %831

831:                                              ; preds = %829, %825
  %832 = phi i64* [ %830, %829 ], [ %826, %825 ]
  %833 = ptrtoint i64* %832 to i64
  %834 = add i64 %833, 8
  %835 = inttoptr i64 %834 to i64*
  store i64* %835, i64** %714, align 8
  store i64 %820, i64* %832, align 8
  br label %836

836:                                              ; preds = %831, %823
  %837 = phi i64* [ %824, %823 ], [ %832, %831 ]
  %838 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_122DefineAccessorPropertyEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEENS4_INS0_4NameEEENS4_INS0_6ObjectEEESA_NS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %0, i64* %377, i64* %747, i64* %808, i64* %837, i32 %761) #4
  %839 = icmp eq i64* %838, null
  br i1 %839, label %889, label %876

840:                                              ; preds = %746
  %841 = shl i32 %749, 2
  %842 = add i32 %841, 4
  %843 = sext i32 %842 to i64
  %844 = add i64 %752, %843
  %845 = inttoptr i64 %844 to i32*
  %846 = load atomic i32, i32* %845 monotonic, align 4
  %847 = lshr i32 %846, 4
  %848 = and i32 %847, 7
  %849 = add nsw i32 %719, 4
  %850 = add i32 %722, 16
  %851 = sext i32 %850 to i64
  %852 = add i64 %752, %851
  %853 = inttoptr i64 %852 to i32*
  %854 = load atomic i32, i32* %853 monotonic, align 4
  %855 = ashr i32 %854, 1
  %856 = call fastcc i64 @_ZN2v88internal12_GLOBAL__N_112GetIntrinsicEPNS0_7IsolateENS_9IntrinsicE(%"class.v8::internal::Isolate"* %0, i32 %855) #4
  %857 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %682, align 8
  %858 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %857, null
  br i1 %858, label %861, label %859

859:                                              ; preds = %840
  %860 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %857, i64 %856) #4
  br label %872

861:                                              ; preds = %840
  %862 = load i64*, i64** %714, align 8
  %863 = load i64*, i64** %393, align 8
  %864 = icmp eq i64* %862, %863
  br i1 %864, label %865, label %867

865:                                              ; preds = %861
  %866 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %867

867:                                              ; preds = %865, %861
  %868 = phi i64* [ %866, %865 ], [ %862, %861 ]
  %869 = ptrtoint i64* %868 to i64
  %870 = add i64 %869, 8
  %871 = inttoptr i64 %870 to i64*
  store i64* %871, i64** %714, align 8
  store i64 %856, i64* %868, align 8
  br label %872

872:                                              ; preds = %867, %859
  %873 = phi i64* [ %860, %859 ], [ %868, %867 ]
  %874 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_118DefineDataPropertyEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %0, i64* %377, i64* %747, i64* %873, i32 %848) #4
  %875 = icmp eq i64* %874, null
  br i1 %875, label %889, label %876

876:                                              ; preds = %872, %836, %789
  %877 = phi i32 [ %764, %789 ], [ %810, %836 ], [ %849, %872 ]
  %878 = add nuw nsw i32 %720, 1
  %879 = load i64, i64* %2, align 8
  %880 = add i64 %879, 11
  %881 = inttoptr i64 %880 to i32*
  %882 = load i32, i32* %881, align 4
  %883 = ashr i32 %882, 1
  %884 = icmp slt i32 %878, %883
  br i1 %884, label %885, label %887

885:                                              ; preds = %876
  %886 = load i64, i64* %702, align 8
  br label %717

887:                                              ; preds = %876, %707
  %888 = ptrtoint i64* %377 to i64
  br label %889

889:                                              ; preds = %789, %836, %872, %715, %887, %679
  %890 = phi i64 [ %680, %679 ], [ %716, %715 ], [ %888, %887 ], [ 0, %872 ], [ 0, %836 ], [ 0, %789 ]
  %891 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::AccessCheckDisableScope", %"class.v8::internal::(anonymous namespace)::AccessCheckDisableScope"* %6, i64 0, i32 0
  %892 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %891, align 8
  %893 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::AccessCheckDisableScope", %"class.v8::internal::(anonymous namespace)::AccessCheckDisableScope"* %6, i64 0, i32 1
  %894 = load i8, i8* %893, align 8
  %895 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::AccessCheckDisableScope", %"class.v8::internal::(anonymous namespace)::AccessCheckDisableScope"* %6, i64 0, i32 2, i32 0, i32 0
  %896 = load i64*, i64** %895, align 8
  call fastcc void @_ZN2v88internal12_GLOBAL__N_123AccessCheckDisableScopeD2Ev(%"class.v8::internal::Isolate"* %892, i8 %894, i64* %896) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %398) #4
  %897 = icmp eq %"class.v8::internal::Isolate"* %0, null
  br i1 %897, label %911, label %898

898:                                              ; preds = %889
  %899 = inttoptr i64 %392 to i64*
  %900 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %390, i64 0, i32 0
  %901 = load i64*, i64** %900, align 8
  store i64 %392, i64* %391, align 8
  %902 = load i32, i32* %395, align 8
  %903 = add nsw i32 %902, -1
  store i32 %903, i32* %395, align 8
  %904 = load i64*, i64** %393, align 8
  %905 = icmp eq i64* %904, %394
  br i1 %905, label %908, label %906

906:                                              ; preds = %898
  store i64* %394, i64** %393, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %0) #4
  %907 = load i64*, i64** %900, align 8
  br label %908

908:                                              ; preds = %906, %898
  %909 = phi i64* [ %907, %906 ], [ %899, %898 ]
  %910 = phi i64* [ %394, %906 ], [ %901, %898 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %909, i64* %910) #4
  br label %911

911:                                              ; preds = %908, %889
  %912 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %913 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %912, align 8
  %914 = icmp eq %"class.v8::internal::RuntimeCallStats"* %913, null
  br i1 %914, label %917, label %915, !prof !2

915:                                              ; preds = %911
  %916 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %913, %"class.v8::internal::RuntimeCallTimer"* %916) #4
  br label %917

917:                                              ; preds = %911, %915
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %380) #4
  %918 = icmp eq i64 %890, 0
  %919 = load i64, i64* %2, align 8
  br i1 %918, label %920, label %1105

920:                                              ; preds = %917
  %921 = add i64 %919, 7
  %922 = inttoptr i64 %921 to i32*
  %923 = load i32, i32* %922, align 4
  %924 = ashr i32 %923, 1
  %925 = icmp slt i32 %923, 0
  br i1 %925, label %1112, label %926

926:                                              ; preds = %920
  %927 = icmp slt i32 %923, 2048
  %928 = load i64, i64* %1, align 8
  %929 = and i64 %928, -4294967296
  br i1 %927, label %930, label %965

930:                                              ; preds = %926
  %931 = add i64 %928, 283
  %932 = inttoptr i64 %931 to i32*
  %933 = load atomic i32, i32* %932 monotonic, align 4
  %934 = zext i32 %933 to i64
  %935 = or i64 %929, %934
  %936 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %937 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %936, null
  br i1 %937, label %944, label %938

938:                                              ; preds = %930
  %939 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %936, i64 0, i32 0, i32 1
  %940 = load i8, i8* %939, align 8, !range !3
  %941 = icmp eq i8 %940, 0
  br i1 %941, label %944, label %942

942:                                              ; preds = %938
  %943 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %936, i64 0, i32 1, i64 0
  br label %952

944:                                              ; preds = %938, %930
  %945 = and i64 %935, -262144
  %946 = or i64 %945, 16
  %947 = inttoptr i64 %946 to i64*
  %948 = load i64, i64* %947, align 16
  %949 = add i64 %948, -41416
  %950 = inttoptr i64 %949 to %"class.v8::internal::Isolate"*
  %951 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %950, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %952

952:                                              ; preds = %944, %942
  %953 = phi i64* [ %951, %944 ], [ %943, %942 ]
  %954 = getelementptr inbounds i64, i64* %953, i64 4
  %955 = load i64, i64* %954, align 8
  %956 = shl i32 %924, 2
  %957 = sext i32 %956 to i64
  %958 = add nuw nsw i64 %957, 7
  %959 = add i64 %958, %935
  %960 = inttoptr i64 %959 to i32*
  %961 = trunc i64 %955 to i32
  store atomic volatile i32 %961, i32* %960 monotonic, align 4
  %962 = load i64, i64* %2, align 8
  %963 = add i64 %962, 7
  %964 = inttoptr i64 %963 to i32*
  store atomic volatile i32 -4, i32* %964 monotonic, align 4
  br label %1112

965:                                              ; preds = %926
  %966 = add i64 %928, 731
  %967 = inttoptr i64 %966 to i32*
  %968 = load atomic i32, i32* %967 monotonic, align 4
  %969 = zext i32 %968 to i64
  %970 = or i64 %929, %969
  %971 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %972 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %971, align 8
  %973 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %972, null
  br i1 %973, label %977, label %974

974:                                              ; preds = %965
  %975 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %972, i64 %970) #4
  %976 = load i64, i64* %975, align 8
  br label %989

977:                                              ; preds = %965
  %978 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %979 = load i64*, i64** %978, align 8
  %980 = load i64*, i64** %393, align 8
  %981 = icmp eq i64* %979, %980
  br i1 %981, label %982, label %984

982:                                              ; preds = %977
  %983 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %984

984:                                              ; preds = %982, %977
  %985 = phi i64* [ %983, %982 ], [ %979, %977 ]
  %986 = ptrtoint i64* %985 to i64
  %987 = add i64 %986, 8
  %988 = inttoptr i64 %987 to i64*
  store i64* %988, i64** %978, align 8
  store i64 %970, i64* %985, align 8
  br label %989

989:                                              ; preds = %984, %974
  %990 = phi i64 [ %976, %974 ], [ %970, %984 ]
  %991 = phi i64* [ %975, %974 ], [ %985, %984 ]
  %992 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %993 = load i64, i64* %992, align 8
  %994 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 134
  %995 = load i64, i64* %994, align 8
  %996 = add i64 %995, 7
  %997 = inttoptr i64 %996 to i64*
  %998 = load i64, i64* %997, align 1
  %999 = zext i32 %924 to i64
  %1000 = xor i64 %998, %999
  %1001 = xor i64 %1000, -1
  %1002 = shl i64 %1000, 18
  %1003 = add i64 %1002, %1001
  %1004 = lshr i64 %1003, 31
  %1005 = xor i64 %1004, %1003
  %1006 = mul i64 %1005, 21
  %1007 = lshr i64 %1006, 11
  %1008 = xor i64 %1007, %1006
  %1009 = mul i64 %1008, 65
  %1010 = lshr i64 %1009, 22
  %1011 = xor i64 %1010, %1009
  %1012 = trunc i64 %1011 to i32
  %1013 = add i64 %990, 15
  %1014 = inttoptr i64 %1013 to i32*
  %1015 = load atomic i32, i32* %1014 monotonic, align 4
  %1016 = ashr i32 %1015, 1
  %1017 = load i64, i64* %675, align 8
  %1018 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %1019 = load i64, i64* %1018, align 8
  %1020 = add nsw i32 %1016, -1
  %1021 = and i32 %1020, 1073741823
  %1022 = and i32 %1021, %1012
  %1023 = shl i32 %1022, 3
  %1024 = add i32 %1023, 12
  %1025 = sext i32 %1024 to i64
  %1026 = add i64 %990, 7
  %1027 = add i64 %1026, %1025
  %1028 = inttoptr i64 %1027 to i32*
  %1029 = load atomic i32, i32* %1028 monotonic, align 4
  %1030 = trunc i64 %1017 to i32
  %1031 = icmp eq i32 %1029, %1030
  br i1 %1031, label %1068, label %1032

1032:                                             ; preds = %989
  %1033 = trunc i64 %1019 to i32
  br label %1034

1034:                                             ; preds = %1055, %1032
  %1035 = phi i32 [ %1029, %1032 ], [ %1064, %1055 ]
  %1036 = phi i32 [ %1022, %1032 ], [ %1058, %1055 ]
  %1037 = phi i32 [ 1, %1032 ], [ %1056, %1055 ]
  %1038 = zext i32 %1035 to i64
  %1039 = or i64 %993, %1038
  %1040 = icmp eq i32 %1035, %1033
  br i1 %1040, label %1055, label %1041

1041:                                             ; preds = %1034
  %1042 = and i64 %1038, 1
  %1043 = icmp eq i64 %1042, 0
  br i1 %1043, label %1044, label %1047

1044:                                             ; preds = %1041
  %1045 = ashr i32 %1035, 1
  %1046 = sitofp i32 %1045 to double
  br label %1051

1047:                                             ; preds = %1041
  %1048 = add i64 %1039, 3
  %1049 = inttoptr i64 %1048 to double*
  %1050 = load double, double* %1049, align 1
  br label %1051

1051:                                             ; preds = %1047, %1044
  %1052 = phi double [ %1046, %1044 ], [ %1050, %1047 ]
  %1053 = fptoui double %1052 to i32
  %1054 = icmp eq i32 %924, %1053
  br i1 %1054, label %1066, label %1055

1055:                                             ; preds = %1051, %1034
  %1056 = add i32 %1037, 1
  %1057 = add i32 %1037, %1036
  %1058 = and i32 %1057, %1020
  %1059 = shl i32 %1058, 3
  %1060 = add i32 %1059, 12
  %1061 = sext i32 %1060 to i64
  %1062 = add i64 %1026, %1061
  %1063 = inttoptr i64 %1062 to i32*
  %1064 = load atomic i32, i32* %1063 monotonic, align 4
  %1065 = icmp eq i32 %1064, %1030
  br i1 %1065, label %1068, label %1034

1066:                                             ; preds = %1051
  %1067 = zext i32 %1036 to i64
  br label %1068

1068:                                             ; preds = %1055, %1066, %989
  %1069 = phi i64 [ -1, %989 ], [ %1067, %1066 ], [ -1, %1055 ]
  %1070 = call i64* @_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE11DeleteEntryEPNS0_7IsolateENS0_6HandleIS2_EENS0_13InternalIndexE(%"class.v8::internal::Isolate"* %0, i64* %991, i64 %1069) #4
  %1071 = load i64, i64* %1, align 8
  %1072 = load i64, i64* %1070, align 8
  %1073 = add i64 %1071, 731
  %1074 = inttoptr i64 %1073 to i32*
  %1075 = trunc i64 %1072 to i32
  store atomic volatile i32 %1075, i32* %1074 release, align 4
  %1076 = and i64 %1072, 1
  %1077 = icmp eq i64 %1076, 0
  br i1 %1077, label %1101, label %1078

1078:                                             ; preds = %1068
  %1079 = and i64 %1071, -262144
  %1080 = or i64 %1079, 8
  %1081 = inttoptr i64 %1080 to i64*
  %1082 = load i64, i64* %1081, align 8
  %1083 = and i64 %1082, 262144
  %1084 = icmp eq i64 %1083, 0
  br i1 %1084, label %1089, label %1085

1085:                                             ; preds = %1078
  %1086 = or i64 %1079, 16
  %1087 = inttoptr i64 %1086 to %"class.v8::internal::Heap"**
  %1088 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1087, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %1088, i64 %1071, i64 %1073, i64 %1072) #4
  br label %1089

1089:                                             ; preds = %1085, %1078
  %1090 = and i64 %1072, -262144
  %1091 = or i64 %1090, 8
  %1092 = inttoptr i64 %1091 to i64*
  %1093 = load i64, i64* %1092, align 8
  %1094 = and i64 %1093, 24
  %1095 = icmp eq i64 %1094, 0
  br i1 %1095, label %1101, label %1096

1096:                                             ; preds = %1089
  %1097 = load i64, i64* %1081, align 8
  %1098 = and i64 %1097, 24
  %1099 = icmp eq i64 %1098, 0
  br i1 %1099, label %1100, label %1101

1100:                                             ; preds = %1096
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %1071, i64 %1073, i64 %1072) #4
  br label %1101

1101:                                             ; preds = %1100, %1096, %1089, %1068
  %1102 = load i64, i64* %2, align 8
  %1103 = add i64 %1102, 7
  %1104 = inttoptr i64 %1103 to i32*
  store atomic volatile i32 -4, i32* %1104 monotonic, align 4
  br label %1112

1105:                                             ; preds = %917
  %1106 = add i64 %919, 43
  %1107 = inttoptr i64 %1106 to i32*
  %1108 = load i32, i32* %1107, align 4
  %1109 = and i32 %1108, -66
  %1110 = or i32 %1109, 64
  store atomic volatile i32 %1110, i32* %1107 monotonic, align 4
  %1111 = ptrtoint i64* %377 to i64
  br label %1112

1112:                                             ; preds = %278, %210, %207, %1101, %952, %920, %1105, %31
  %1113 = phi i64 [ %32, %31 ], [ %1111, %1105 ], [ 0, %920 ], [ 0, %952 ], [ 0, %1101 ], [ 0, %207 ], [ 0, %210 ], [ 0, %278 ]
  %1114 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 0
  %1115 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %1114, align 8
  %1116 = icmp eq %"class.v8::internal::RuntimeCallStats"* %1115, null
  br i1 %1116, label %1119, label %1117, !prof !2

1117:                                             ; preds = %1112
  %1118 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %1115, %"class.v8::internal::RuntimeCallTimer"* %1118) #4
  br label %1119

1119:                                             ; preds = %1112, %1117
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #4
  %1120 = inttoptr i64 %1113 to i64*
  ret i64* %1120
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10ApiNatives19InstantiateFunctionENS0_6HandleINS0_20FunctionTemplateInfoEEENS0_11MaybeHandleINS0_4NameEEE(i64*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::(anonymous namespace)::InvokeScope", align 8
  %4 = load i64, i64* %0, align 8
  %5 = and i64 %4, -262144
  %6 = or i64 %5, 16
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 16
  %9 = add i64 %8, -41416
  %10 = inttoptr i64 %9 to %"class.v8::internal::Isolate"*
  %11 = bitcast %"class.v8::internal::(anonymous namespace)::InvokeScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #4
  %12 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::InvokeScope", %"class.v8::internal::(anonymous namespace)::InvokeScope"* %3, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %10, %"class.v8::internal::Isolate"** %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::InvokeScope", %"class.v8::internal::(anonymous namespace)::InvokeScope"* %3, i64 0, i32 1
  call void @_ZN2v88internal11SaveContextC1EPNS0_7IsolateE(%"class.v8::internal::SaveContext"* %13, %"class.v8::internal::Isolate"* %10) #4
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, -4294967296
  %17 = add i64 %15, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %16, %20
  %22 = add i64 %21, 19
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %16, %25
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 4
  %28 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %27, align 8
  %29 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %2
  %31 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %28, i64 %26) #4
  br label %45

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 1
  %36 = load i64*, i64** %35, align 8
  %37 = icmp eq i64* %34, %36
  br i1 %37, label %38, label %40

38:                                               ; preds = %32
  %39 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %10) #4
  br label %40

40:                                               ; preds = %38, %32
  %41 = phi i64* [ %39, %38 ], [ %34, %32 ]
  %42 = ptrtoint i64* %41 to i64
  %43 = add i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  store i64* %44, i64** %33, align 8
  store i64 %26, i64* %41, align 8
  br label %45

45:                                               ; preds = %30, %40
  %46 = phi i64* [ %31, %30 ], [ %41, %40 ]
  %47 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119InstantiateFunctionEPNS0_7IsolateENS0_6HandleINS0_13NativeContextEEENS4_INS0_20FunctionTemplateInfoEEENS0_11MaybeHandleINS0_4NameEEE(%"class.v8::internal::Isolate"* %10, i64* %46, i64* %0, i64* %1) #4
  %48 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %12, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 0, i32 7, i32 0, i64 5
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = trunc i64 %52 to i32
  %54 = trunc i64 %50 to i32
  %55 = icmp eq i32 %53, %54
  br i1 %55, label %57, label %56

56:                                               ; preds = %45
  call void @_ZN2v88internal7Isolate21ReportPendingMessagesEv(%"class.v8::internal::Isolate"* %48) #4
  br label %59

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 0, i32 9, i32 11, i32 0, i32 0
  store i64 %50, i64* %58, align 8
  br label %59

59:                                               ; preds = %56, %57
  call void @_ZN2v88internal11SaveContextD1Ev(%"class.v8::internal::SaveContext"* %13) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #4
  ret i64* %47
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10ApiNatives17InstantiateObjectEPNS0_7IsolateENS0_6HandleINS0_18ObjectTemplateInfoEEENS4_INS0_10JSReceiverEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::(anonymous namespace)::InvokeScope", align 8
  %5 = bitcast %"class.v8::internal::(anonymous namespace)::InvokeScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #4
  %6 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::InvokeScope", %"class.v8::internal::(anonymous namespace)::InvokeScope"* %4, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::InvokeScope", %"class.v8::internal::(anonymous namespace)::InvokeScope"* %4, i64 0, i32 1
  call void @_ZN2v88internal11SaveContextC1EPNS0_7IsolateE(%"class.v8::internal::SaveContext"* %7, %"class.v8::internal::Isolate"* %0) #4
  %8 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_117InstantiateObjectEPNS0_7IsolateENS0_6HandleINS0_18ObjectTemplateInfoEEENS4_INS0_10JSReceiverEEEb(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i1 zeroext false)
  %9 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 5
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %13 to i32
  %15 = trunc i64 %11 to i32
  %16 = icmp eq i32 %14, %15
  br i1 %16, label %18, label %17

17:                                               ; preds = %3
  call void @_ZN2v88internal7Isolate21ReportPendingMessagesEv(%"class.v8::internal::Isolate"* %9) #4
  br label %20

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 9, i32 11, i32 0, i32 0
  store i64 %11, i64* %19, align 8
  br label %20

20:                                               ; preds = %17, %18
  call void @_ZN2v88internal11SaveContextD1Ev(%"class.v8::internal::SaveContext"* %7) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #4
  ret i64* %8
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_117InstantiateObjectEPNS0_7IsolateENS0_6HandleINS0_18ObjectTemplateInfoEEENS4_INS0_10JSReceiverEEEb(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) unnamed_addr #0 {
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::(anonymous namespace)::AccessCheckDisableScope", align 8
  %7 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %8 = ptrtoint i64* %2 to i64
  %9 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 40, i1 false) #4
  %10 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1187", %"struct.std::__1::atomic.1187"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %18, label %12, !prof !2

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 1
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 14, i32 0
  %16 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %16, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %17, %"class.v8::internal::RuntimeCallStats"** %13, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %17, %"class.v8::internal::RuntimeCallTimer"* %14, i32 170) #4
  br label %18

18:                                               ; preds = %4, %12
  %19 = load i64, i64* %1, align 8
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = icmp ult i32 %22, -2
  %24 = icmp eq i64* %2, null
  br i1 %24, label %89, label %25

25:                                               ; preds = %18
  %26 = load i64, i64* %2, align 8
  %27 = and i64 %26, -4294967296
  %28 = add i64 %26, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %27, %31
  %33 = add i64 %32, 7
  %34 = inttoptr i64 %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = add i16 %35, -1059
  %37 = icmp ult i16 %36, 15
  br i1 %37, label %38, label %139

38:                                               ; preds = %25
  %39 = add i64 %26, 11
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %27, %42
  %44 = add i64 %43, 3
  %45 = inttoptr i64 %44 to i32*
  %46 = load atomic i32, i32* %45 acquire, align 4
  %47 = add i64 %19, 23
  %48 = inttoptr i64 %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %46, %49
  br i1 %50, label %51, label %139

51:                                               ; preds = %38
  %52 = add i64 %19, 27
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %139

57:                                               ; preds = %51
  %58 = add i64 %26, 15
  %59 = inttoptr i64 %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %27, %61
  %63 = add i64 %62, -1
  %64 = inttoptr i64 %63 to i32*
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %27, %66
  %68 = add i64 %67, 19
  %69 = inttoptr i64 %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = and i64 %72, -4294967296
  %74 = add i64 %72, -1
  %75 = inttoptr i64 %74 to i32*
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = zext i32 %76 to i64
  %78 = or i64 %73, %77
  %79 = add i64 %78, 19
  %80 = inttoptr i64 %79 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %70, %81
  br i1 %82, label %83, label %139

83:                                               ; preds = %57
  br i1 %23, label %84, label %312

84:                                               ; preds = %83
  %85 = load i64, i64* %1, align 8
  %86 = add i64 %85, 7
  %87 = inttoptr i64 %86 to i32*
  %88 = load i32, i32* %87, align 4
  br label %90

89:                                               ; preds = %18
  br i1 %23, label %90, label %139

90:                                               ; preds = %84, %89
  %91 = phi i32 [ %88, %84 ], [ %22, %89 ]
  %92 = icmp sgt i32 %91, -3
  br i1 %92, label %93, label %138

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i64, i64* %94, align 8
  %96 = and i64 %95, -4294967296
  %97 = add i64 %95, -1
  %98 = inttoptr i64 %97 to i32*
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = zext i32 %99 to i64
  %101 = or i64 %96, %100
  %102 = add i64 %101, 19
  %103 = inttoptr i64 %102 to i32*
  %104 = load i32, i32* %103, align 4
  %105 = zext i32 %104 to i64
  %106 = or i64 %96, %105
  %107 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %108 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %107, align 8
  %109 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %108, null
  br i1 %109, label %112, label %110

110:                                              ; preds = %93
  %111 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %108, i64 %106) #4
  br label %125

112:                                              ; preds = %93
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %114 = load i64*, i64** %113, align 8
  %115 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %116 = load i64*, i64** %115, align 8
  %117 = icmp eq i64* %114, %116
  br i1 %117, label %118, label %120

118:                                              ; preds = %112
  %119 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %120

120:                                              ; preds = %118, %112
  %121 = phi i64* [ %119, %118 ], [ %114, %112 ]
  %122 = ptrtoint i64* %121 to i64
  %123 = add i64 %122, 8
  %124 = inttoptr i64 %123 to i64*
  store i64* %124, i64** %113, align 8
  store i64 %106, i64* %121, align 8
  br label %125

125:                                              ; preds = %110, %120
  %126 = phi i64* [ %111, %110 ], [ %121, %120 ]
  %127 = load i64, i64* %1, align 8
  %128 = add i64 %127, 7
  %129 = inttoptr i64 %128 to i32*
  %130 = load i32, i32* %129, align 4
  %131 = ashr i32 %130, 1
  %132 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_124ProbeInstantiationsCacheEPNS0_7IsolateENS0_6HandleINS0_13NativeContextEEEiNS1_11CachingModeE(%"class.v8::internal::Isolate"* %0, i64* %126, i32 %131, i32 0)
  %133 = icmp eq i64* %132, null
  br i1 %133, label %138, label %134

134:                                              ; preds = %125
  %135 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %136 = call i64* @_ZN2v88internal7Factory12CopyJSObjectENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Factory"* %135, i64* nonnull %132) #4
  %137 = ptrtoint i64* %136 to i64
  br label %1014

138:                                              ; preds = %125, %90
  br i1 %24, label %139, label %312

139:                                              ; preds = %51, %38, %25, %57, %89, %138
  %140 = phi i1 [ true, %138 ], [ false, %89 ], [ false, %57 ], [ false, %25 ], [ false, %38 ], [ false, %51 ]
  %141 = load i64, i64* %1, align 8
  %142 = and i64 %141, -4294967296
  %143 = add i64 %141, 23
  %144 = inttoptr i64 %143 to i32*
  %145 = load i32, i32* %144, align 4
  %146 = zext i32 %145 to i64
  %147 = or i64 %142, %146
  %148 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %149 = load i64, i64* %148, align 8
  %150 = trunc i64 %149 to i32
  %151 = icmp eq i32 %145, %150
  br i1 %151, label %152, label %189

152:                                              ; preds = %139
  %153 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load i64, i64* %153, align 8
  %155 = and i64 %154, -4294967296
  %156 = add i64 %154, -1
  %157 = inttoptr i64 %156 to i32*
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = zext i32 %158 to i64
  %160 = or i64 %155, %159
  %161 = add i64 %160, 19
  %162 = inttoptr i64 %161 to i32*
  %163 = load i32, i32* %162, align 4
  %164 = zext i32 %163 to i64
  %165 = or i64 %155, %164
  %166 = add i64 %165, 571
  %167 = inttoptr i64 %166 to i32*
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = zext i32 %168 to i64
  %170 = or i64 %155, %169
  %171 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %172 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %171, align 8
  %173 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %172, null
  br i1 %173, label %176, label %174

174:                                              ; preds = %152
  %175 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %172, i64 %170) #4
  br label %308

176:                                              ; preds = %152
  %177 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %178 = load i64*, i64** %177, align 8
  %179 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %180 = load i64*, i64** %179, align 8
  %181 = icmp eq i64* %178, %180
  br i1 %181, label %182, label %184

182:                                              ; preds = %176
  %183 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %184

184:                                              ; preds = %182, %176
  %185 = phi i64* [ %183, %182 ], [ %178, %176 ]
  %186 = ptrtoint i64* %185 to i64
  %187 = add i64 %186, 8
  %188 = inttoptr i64 %187 to i64*
  store i64* %188, i64** %177, align 8
  store i64 %170, i64* %185, align 8
  br label %308

189:                                              ; preds = %139
  %190 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31
  %191 = bitcast %"struct.v8::internal::HandleScopeData"* %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %194 = bitcast i64** %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 2
  %197 = load i32, i32* %196, align 8
  %198 = add nsw i32 %197, 1
  store i32 %198, i32* %196, align 8
  %199 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %200 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %199, align 8
  %201 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %200, null
  %202 = inttoptr i64 %192 to i64*
  %203 = inttoptr i64 %195 to i64*
  br i1 %201, label %206, label %204

204:                                              ; preds = %189
  %205 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %200, i64 %147) #4
  br label %216

206:                                              ; preds = %189
  %207 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %208 = icmp eq i64* %202, %203
  br i1 %208, label %209, label %211

209:                                              ; preds = %206
  %210 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %211

211:                                              ; preds = %209, %206
  %212 = phi i64* [ %210, %209 ], [ %202, %206 ]
  %213 = ptrtoint i64* %212 to i64
  %214 = add i64 %213, 8
  %215 = inttoptr i64 %214 to i64*
  store i64* %215, i64** %207, align 8
  store i64 %147, i64* %212, align 8
  br label %216

216:                                              ; preds = %204, %211
  %217 = phi i64* [ %205, %204 ], [ %212, %211 ]
  %218 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load i64, i64* %218, align 8
  %220 = and i64 %219, -4294967296
  %221 = add i64 %219, -1
  %222 = inttoptr i64 %221 to i32*
  %223 = load atomic i32, i32* %222 monotonic, align 4
  %224 = zext i32 %223 to i64
  %225 = or i64 %220, %224
  %226 = add i64 %225, 19
  %227 = inttoptr i64 %226 to i32*
  %228 = load i32, i32* %227, align 4
  %229 = zext i32 %228 to i64
  %230 = or i64 %220, %229
  %231 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %199, align 8
  %232 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %231, null
  br i1 %232, label %235, label %233

233:                                              ; preds = %216
  %234 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %231, i64 %230) #4
  br label %247

235:                                              ; preds = %216
  %236 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %237 = load i64*, i64** %236, align 8
  %238 = load i64*, i64** %193, align 8
  %239 = icmp eq i64* %237, %238
  br i1 %239, label %240, label %242

240:                                              ; preds = %235
  %241 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %242

242:                                              ; preds = %240, %235
  %243 = phi i64* [ %241, %240 ], [ %237, %235 ]
  %244 = ptrtoint i64* %243 to i64
  %245 = add i64 %244, 8
  %246 = inttoptr i64 %245 to i64*
  store i64* %246, i64** %236, align 8
  store i64 %230, i64* %243, align 8
  br label %247

247:                                              ; preds = %233, %242
  %248 = phi i64* [ %234, %233 ], [ %243, %242 ]
  %249 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119InstantiateFunctionEPNS0_7IsolateENS0_6HandleINS0_13NativeContextEEENS4_INS0_20FunctionTemplateInfoEEENS0_11MaybeHandleINS0_4NameEEE(%"class.v8::internal::Isolate"* %0, i64* %248, i64* %217, i64* null) #4
  %250 = icmp eq i64* %249, null
  br i1 %250, label %286, label %251

251:                                              ; preds = %247
  %252 = load i64, i64* %249, align 8
  %253 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %190, i64 0, i32 0
  %254 = load i64*, i64** %253, align 8
  store i64 %192, i64* %191, align 8
  %255 = load i32, i32* %196, align 8
  %256 = add nsw i32 %255, -1
  store i32 %256, i32* %196, align 8
  %257 = load i64*, i64** %193, align 8
  %258 = icmp eq i64* %257, %203
  br i1 %258, label %261, label %259

259:                                              ; preds = %251
  store i64* %203, i64** %193, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  %260 = load i64*, i64** %253, align 8
  br label %261

261:                                              ; preds = %259, %251
  %262 = phi i64* [ %260, %259 ], [ %202, %251 ]
  %263 = phi i64* [ %203, %259 ], [ %254, %251 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %262, i64* %263) #4
  %264 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %199, align 8
  %265 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %264, null
  br i1 %265, label %268, label %266

266:                                              ; preds = %261
  %267 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %264, i64 %252) #4
  br label %280

268:                                              ; preds = %261
  %269 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %270 = load i64*, i64** %269, align 8
  %271 = load i64*, i64** %193, align 8
  %272 = icmp eq i64* %270, %271
  br i1 %272, label %273, label %275

273:                                              ; preds = %268
  %274 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %275

275:                                              ; preds = %273, %268
  %276 = phi i64* [ %274, %273 ], [ %270, %268 ]
  %277 = ptrtoint i64* %276 to i64
  %278 = add i64 %277, 8
  %279 = inttoptr i64 %278 to i64*
  store i64* %279, i64** %269, align 8
  store i64 %252, i64* %276, align 8
  br label %280

280:                                              ; preds = %266, %275
  %281 = phi i64* [ %267, %266 ], [ %276, %275 ]
  %282 = load i64, i64* %191, align 8
  %283 = load i64, i64* %194, align 8
  %284 = load i32, i32* %196, align 8
  %285 = add nsw i32 %284, 1
  store i32 %285, i32* %196, align 8
  br label %286

286:                                              ; preds = %247, %280
  %287 = phi i64 [ %282, %280 ], [ %192, %247 ]
  %288 = phi i64 [ %283, %280 ], [ %195, %247 ]
  %289 = phi i64* [ %281, %280 ], [ null, %247 ]
  %290 = phi i32 [ 0, %280 ], [ 1, %247 ]
  %291 = icmp eq %"class.v8::internal::Isolate"* %0, null
  br i1 %291, label %306, label %292

292:                                              ; preds = %286
  %293 = inttoptr i64 %287 to i64*
  %294 = inttoptr i64 %288 to i64*
  %295 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %190, i64 0, i32 0
  %296 = load i64*, i64** %295, align 8
  store i64 %287, i64* %191, align 8
  %297 = load i32, i32* %196, align 8
  %298 = add nsw i32 %297, -1
  store i32 %298, i32* %196, align 8
  %299 = load i64*, i64** %193, align 8
  %300 = icmp eq i64* %299, %294
  br i1 %300, label %303, label %301

301:                                              ; preds = %292
  store i64* %294, i64** %193, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %0) #4
  %302 = load i64*, i64** %295, align 8
  br label %303

303:                                              ; preds = %301, %292
  %304 = phi i64* [ %302, %301 ], [ %293, %292 ]
  %305 = phi i64* [ %294, %301 ], [ %296, %292 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %304, i64* %305) #4
  br label %306

306:                                              ; preds = %286, %303
  %307 = icmp eq i32 %290, 0
  br i1 %307, label %308, label %1014

308:                                              ; preds = %184, %174, %306
  %309 = phi i64* [ %289, %306 ], [ %175, %174 ], [ %185, %184 ]
  %310 = ptrtoint i64* %309 to i64
  %311 = select i1 %24, i64 %310, i64 %8
  br label %312

312:                                              ; preds = %308, %83, %138
  %313 = phi i1 [ true, %138 ], [ false, %83 ], [ %140, %308 ]
  %314 = phi i64* [ %2, %138 ], [ %2, %83 ], [ %309, %308 ]
  %315 = phi i64 [ %8, %138 ], [ %8, %83 ], [ %311, %308 ]
  %316 = inttoptr i64 %315 to i64*
  %317 = call i64* @_ZN2v88internal8JSObject3NewENS0_6HandleINS0_10JSFunctionEEENS2_INS0_10JSReceiverEEENS2_INS0_14AllocationSiteEEE(i64* %314, i64* %316, i64* null) #4
  %318 = icmp eq i64* %317, null
  br i1 %318, label %1014, label %319

319:                                              ; preds = %312
  %320 = ptrtoint i64* %317 to i64
  br i1 %3, label %321, label %322

321:                                              ; preds = %319
  call void @_ZN2v88internal8JSObject19OptimizeAsPrototypeENS0_6HandleIS1_EEb(i64* nonnull %317, i1 zeroext true) #4
  br label %322

322:                                              ; preds = %319, %321
  %323 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %323) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %323, i8 0, i64 40, i1 false) #4
  %324 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1187", %"struct.std::__1::atomic.1187"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %332, label %326, !prof !2

326:                                              ; preds = %322
  %327 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %328 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %329 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 14, i32 0
  %330 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %329, align 8
  %331 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %330, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %331, %"class.v8::internal::RuntimeCallStats"** %327, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %331, %"class.v8::internal::RuntimeCallTimer"* %328, i32 144) #4
  br label %332

332:                                              ; preds = %326, %322
  %333 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31
  %334 = bitcast %"struct.v8::internal::HandleScopeData"* %333 to i64*
  %335 = load i64, i64* %334, align 8
  %336 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %337 = load i64*, i64** %336, align 8
  %338 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 2
  %339 = load i32, i32* %338, align 8
  %340 = add nsw i32 %339, 1
  store i32 %340, i32* %338, align 8
  %341 = bitcast %"class.v8::internal::(anonymous namespace)::AccessCheckDisableScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %341) #4
  call fastcc void @_ZN2v88internal12_GLOBAL__N_123AccessCheckDisableScopeC2EPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::AccessCheckDisableScope"* nonnull %6, %"class.v8::internal::Isolate"* %0, i64* nonnull %317) #4
  %342 = load i64, i64* %1, align 8
  %343 = trunc i64 %342 to i32
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %721, label %345

345:                                              ; preds = %332
  %346 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %347 = load i64, i64* %346, align 8
  br label %348

348:                                              ; preds = %345, %461
  %349 = phi i64 [ %347, %345 ], [ %458, %461 ]
  %350 = phi i32 [ 0, %345 ], [ %367, %461 ]
  %351 = phi i64 [ %342, %345 ], [ %457, %461 ]
  %352 = and i64 %351, -4294967296
  %353 = add i64 %351, 19
  %354 = inttoptr i64 %353 to i32*
  %355 = load i32, i32* %354, align 4
  %356 = trunc i64 %349 to i32
  %357 = icmp eq i32 %355, %356
  br i1 %357, label %366, label %358

358:                                              ; preds = %348
  %359 = zext i32 %355 to i64
  %360 = or i64 %352, %359
  %361 = add i64 %360, 7
  %362 = inttoptr i64 %361 to i32*
  %363 = load atomic i32, i32* %362 monotonic, align 4
  %364 = ashr i32 %363, 1
  %365 = add nsw i32 %364, %350
  br label %366

366:                                              ; preds = %358, %348
  %367 = phi i32 [ %350, %348 ], [ %365, %358 ]
  %368 = add i64 %351, 23
  %369 = inttoptr i64 %368 to i32*
  %370 = load i32, i32* %369, align 4
  %371 = icmp eq i32 %370, %356
  br i1 %371, label %464, label %372

372:                                              ; preds = %366
  %373 = zext i32 %370 to i64
  %374 = or i64 %352, %373
  br label %375

375:                                              ; preds = %455, %372
  %376 = phi i64 [ %417, %455 ], [ %374, %372 ]
  %377 = and i64 %376, -4294967296
  %378 = add i64 %376, 35
  %379 = inttoptr i64 %378 to i32*
  %380 = load atomic i32, i32* %379 acquire, align 4
  %381 = zext i32 %380 to i64
  %382 = or i64 %377, %381
  %383 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %384 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %383, null
  br i1 %384, label %391, label %385

385:                                              ; preds = %375
  %386 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %383, i64 0, i32 0, i32 1
  %387 = load i8, i8* %386, align 8, !range !3
  %388 = icmp eq i8 %387, 0
  br i1 %388, label %391, label %389

389:                                              ; preds = %385
  %390 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %383, i64 0, i32 1, i64 0
  br label %399

391:                                              ; preds = %385, %375
  %392 = and i64 %376, -262144
  %393 = or i64 %392, 16
  %394 = inttoptr i64 %393 to i64*
  %395 = load i64, i64* %394, align 16
  %396 = add i64 %395, -41416
  %397 = inttoptr i64 %396 to %"class.v8::internal::Isolate"*
  %398 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %397, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %399

399:                                              ; preds = %391, %389
  %400 = phi i64* [ %398, %391 ], [ %390, %389 ]
  %401 = getelementptr inbounds i64, i64* %400, i64 4
  %402 = load i64, i64* %401, align 8
  %403 = trunc i64 %402 to i32
  %404 = icmp eq i32 %380, %403
  br i1 %404, label %411, label %405

405:                                              ; preds = %399
  %406 = add i64 %382, 11
  %407 = inttoptr i64 %406 to i32*
  %408 = load i32, i32* %407, align 4
  %409 = zext i32 %408 to i64
  %410 = or i64 %377, %409
  br label %411

411:                                              ; preds = %405, %399
  %412 = phi i32 [ %380, %399 ], [ %408, %405 ]
  %413 = phi i64 [ %402, %399 ], [ %410, %405 ]
  %414 = load i64, i64* %346, align 8
  %415 = trunc i64 %414 to i32
  %416 = icmp eq i32 %412, %415
  %417 = select i1 %416, i64 0, i64 %413
  %418 = trunc i64 %417 to i32
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %464, label %420

420:                                              ; preds = %411
  %421 = and i64 %417, -4294967296
  %422 = add i64 %417, 35
  %423 = inttoptr i64 %422 to i32*
  %424 = load atomic i32, i32* %423 acquire, align 4
  %425 = zext i32 %424 to i64
  %426 = or i64 %421, %425
  %427 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %428 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %427, null
  br i1 %428, label %435, label %429

429:                                              ; preds = %420
  %430 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %427, i64 0, i32 0, i32 1
  %431 = load i8, i8* %430, align 8, !range !3
  %432 = icmp eq i8 %431, 0
  br i1 %432, label %435, label %433

433:                                              ; preds = %429
  %434 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %427, i64 0, i32 1, i64 0
  br label %443

435:                                              ; preds = %429, %420
  %436 = and i64 %417, -262144
  %437 = or i64 %436, 16
  %438 = inttoptr i64 %437 to i64*
  %439 = load i64, i64* %438, align 16
  %440 = add i64 %439, -41416
  %441 = inttoptr i64 %440 to %"class.v8::internal::Isolate"*
  %442 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %441, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %443

443:                                              ; preds = %435, %433
  %444 = phi i64* [ %442, %435 ], [ %434, %433 ]
  %445 = getelementptr inbounds i64, i64* %444, i64 4
  %446 = load i64, i64* %445, align 8
  %447 = trunc i64 %446 to i32
  %448 = icmp eq i32 %424, %447
  br i1 %448, label %455, label %449

449:                                              ; preds = %443
  %450 = add i64 %426, 23
  %451 = inttoptr i64 %450 to i32*
  %452 = load i32, i32* %451, align 4
  %453 = zext i32 %452 to i64
  %454 = or i64 %421, %453
  br label %455

455:                                              ; preds = %449, %443
  %456 = phi i32 [ %424, %443 ], [ %452, %449 ]
  %457 = phi i64 [ %446, %443 ], [ %454, %449 ]
  %458 = load i64, i64* %346, align 8
  %459 = trunc i64 %458 to i32
  %460 = icmp eq i32 %456, %459
  br i1 %460, label %375, label %461

461:                                              ; preds = %455
  %462 = trunc i64 %457 to i32
  %463 = icmp eq i32 %462, 0
  br i1 %463, label %464, label %348

464:                                              ; preds = %366, %461, %411
  %465 = icmp sgt i32 %367, 0
  br i1 %465, label %466, label %721

466:                                              ; preds = %464
  %467 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %468 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %467, i32 %367, i8 zeroext 0) #4
  %469 = load i64, i64* %1, align 8
  %470 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %471 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %470, align 8
  %472 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %471, null
  br i1 %472, label %476, label %473

473:                                              ; preds = %466
  %474 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %471, i64 %469) #4
  %475 = load i64, i64* %474, align 8
  br label %488

476:                                              ; preds = %466
  %477 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %478 = load i64*, i64** %477, align 8
  %479 = load i64*, i64** %336, align 8
  %480 = icmp eq i64* %478, %479
  br i1 %480, label %481, label %483

481:                                              ; preds = %476
  %482 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %483

483:                                              ; preds = %481, %476
  %484 = phi i64* [ %482, %481 ], [ %478, %476 ]
  %485 = ptrtoint i64* %484 to i64
  %486 = add i64 %485, 8
  %487 = inttoptr i64 %486 to i64*
  store i64* %487, i64** %477, align 8
  store i64 %469, i64* %484, align 8
  br label %488

488:                                              ; preds = %483, %473
  %489 = phi i64 [ %475, %473 ], [ %469, %483 ]
  %490 = phi i64* [ %474, %473 ], [ %484, %483 ]
  %491 = trunc i64 %489 to i32
  %492 = icmp eq i32 %491, 0
  br i1 %492, label %721, label %493

493:                                              ; preds = %488
  %494 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %495 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  br label %501

496:                                              ; preds = %652
  %497 = icmp sgt i32 %539, 0
  br i1 %497, label %498, label %721

498:                                              ; preds = %496
  %499 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %500 = zext i32 %539 to i64
  br label %657

501:                                              ; preds = %493, %652
  %502 = phi i64 [ %489, %493 ], [ %653, %652 ]
  %503 = phi i32 [ 0, %493 ], [ %539, %652 ]
  %504 = phi i64* [ %490, %493 ], [ %654, %652 ]
  %505 = and i64 %502, -4294967296
  %506 = add i64 %502, 19
  %507 = inttoptr i64 %506 to i32*
  %508 = load i32, i32* %507, align 4
  %509 = zext i32 %508 to i64
  %510 = or i64 %505, %509
  %511 = load i64, i64* %494, align 8
  %512 = trunc i64 %511 to i32
  %513 = icmp eq i32 %508, %512
  br i1 %513, label %536, label %514

514:                                              ; preds = %501
  %515 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %470, align 8
  %516 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %515, null
  br i1 %516, label %519, label %517

517:                                              ; preds = %514
  %518 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %515, i64 %510) #4
  br label %530

519:                                              ; preds = %514
  %520 = load i64*, i64** %495, align 8
  %521 = load i64*, i64** %336, align 8
  %522 = icmp eq i64* %520, %521
  br i1 %522, label %523, label %525

523:                                              ; preds = %519
  %524 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %525

525:                                              ; preds = %523, %519
  %526 = phi i64* [ %524, %523 ], [ %520, %519 ]
  %527 = ptrtoint i64* %526 to i64
  %528 = add i64 %527, 8
  %529 = inttoptr i64 %528 to i64*
  store i64* %529, i64** %495, align 8
  store i64 %510, i64* %526, align 8
  br label %530

530:                                              ; preds = %525, %517
  %531 = phi i64* [ %518, %517 ], [ %526, %525 ]
  %532 = call i32 @_ZN2v88internal12AccessorInfo12AppendUniqueEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_10FixedArrayEEEi(%"class.v8::internal::Isolate"* %0, i64* %531, i64* %468, i32 %503) #4
  %533 = load i64, i64* %504, align 8
  %534 = load i64, i64* %494, align 8
  %535 = trunc i64 %534 to i32
  br label %536

536:                                              ; preds = %530, %501
  %537 = phi i32 [ %535, %530 ], [ %512, %501 ]
  %538 = phi i64 [ %533, %530 ], [ %502, %501 ]
  %539 = phi i32 [ %532, %530 ], [ %503, %501 ]
  %540 = add i64 %538, 23
  %541 = inttoptr i64 %540 to i32*
  %542 = load i32, i32* %541, align 4
  %543 = icmp eq i32 %542, %537
  br i1 %543, label %634, label %544

544:                                              ; preds = %536
  %545 = and i64 %538, -4294967296
  %546 = zext i32 %542 to i64
  %547 = or i64 %545, %546
  br label %548

548:                                              ; preds = %628, %544
  %549 = phi i64 [ %590, %628 ], [ %547, %544 ]
  %550 = and i64 %549, -4294967296
  %551 = add i64 %549, 35
  %552 = inttoptr i64 %551 to i32*
  %553 = load atomic i32, i32* %552 acquire, align 4
  %554 = zext i32 %553 to i64
  %555 = or i64 %550, %554
  %556 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %557 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %556, null
  br i1 %557, label %564, label %558

558:                                              ; preds = %548
  %559 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %556, i64 0, i32 0, i32 1
  %560 = load i8, i8* %559, align 8, !range !3
  %561 = icmp eq i8 %560, 0
  br i1 %561, label %564, label %562

562:                                              ; preds = %558
  %563 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %556, i64 0, i32 1, i64 0
  br label %572

564:                                              ; preds = %558, %548
  %565 = and i64 %549, -262144
  %566 = or i64 %565, 16
  %567 = inttoptr i64 %566 to i64*
  %568 = load i64, i64* %567, align 16
  %569 = add i64 %568, -41416
  %570 = inttoptr i64 %569 to %"class.v8::internal::Isolate"*
  %571 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %570, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %572

572:                                              ; preds = %564, %562
  %573 = phi i64* [ %571, %564 ], [ %563, %562 ]
  %574 = getelementptr inbounds i64, i64* %573, i64 4
  %575 = load i64, i64* %574, align 8
  %576 = trunc i64 %575 to i32
  %577 = icmp eq i32 %553, %576
  br i1 %577, label %584, label %578

578:                                              ; preds = %572
  %579 = add i64 %555, 11
  %580 = inttoptr i64 %579 to i32*
  %581 = load i32, i32* %580, align 4
  %582 = zext i32 %581 to i64
  %583 = or i64 %550, %582
  br label %584

584:                                              ; preds = %578, %572
  %585 = phi i32 [ %553, %572 ], [ %581, %578 ]
  %586 = phi i64 [ %575, %572 ], [ %583, %578 ]
  %587 = load i64, i64* %494, align 8
  %588 = trunc i64 %587 to i32
  %589 = icmp eq i32 %585, %588
  %590 = select i1 %589, i64 0, i64 %586
  %591 = trunc i64 %590 to i32
  %592 = icmp eq i32 %591, 0
  br i1 %592, label %634, label %593

593:                                              ; preds = %584
  %594 = and i64 %590, -4294967296
  %595 = add i64 %590, 35
  %596 = inttoptr i64 %595 to i32*
  %597 = load atomic i32, i32* %596 acquire, align 4
  %598 = zext i32 %597 to i64
  %599 = or i64 %594, %598
  %600 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %601 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %600, null
  br i1 %601, label %608, label %602

602:                                              ; preds = %593
  %603 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %600, i64 0, i32 0, i32 1
  %604 = load i8, i8* %603, align 8, !range !3
  %605 = icmp eq i8 %604, 0
  br i1 %605, label %608, label %606

606:                                              ; preds = %602
  %607 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %600, i64 0, i32 1, i64 0
  br label %616

608:                                              ; preds = %602, %593
  %609 = and i64 %590, -262144
  %610 = or i64 %609, 16
  %611 = inttoptr i64 %610 to i64*
  %612 = load i64, i64* %611, align 16
  %613 = add i64 %612, -41416
  %614 = inttoptr i64 %613 to %"class.v8::internal::Isolate"*
  %615 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %614, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %616

616:                                              ; preds = %608, %606
  %617 = phi i64* [ %615, %608 ], [ %607, %606 ]
  %618 = getelementptr inbounds i64, i64* %617, i64 4
  %619 = load i64, i64* %618, align 8
  %620 = trunc i64 %619 to i32
  %621 = icmp eq i32 %597, %620
  br i1 %621, label %628, label %622

622:                                              ; preds = %616
  %623 = add i64 %599, 23
  %624 = inttoptr i64 %623 to i32*
  %625 = load i32, i32* %624, align 4
  %626 = zext i32 %625 to i64
  %627 = or i64 %594, %626
  br label %628

628:                                              ; preds = %622, %616
  %629 = phi i32 [ %597, %616 ], [ %625, %622 ]
  %630 = phi i64 [ %619, %616 ], [ %627, %622 ]
  %631 = load i64, i64* %494, align 8
  %632 = trunc i64 %631 to i32
  %633 = icmp eq i32 %629, %632
  br i1 %633, label %548, label %634

634:                                              ; preds = %628, %584, %536
  %635 = phi i64 [ 0, %536 ], [ 0, %584 ], [ %630, %628 ]
  %636 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %470, align 8
  %637 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %636, null
  br i1 %637, label %641, label %638

638:                                              ; preds = %634
  %639 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %636, i64 %635) #4
  %640 = load i64, i64* %639, align 8
  br label %652

641:                                              ; preds = %634
  %642 = load i64*, i64** %495, align 8
  %643 = load i64*, i64** %336, align 8
  %644 = icmp eq i64* %642, %643
  br i1 %644, label %645, label %647

645:                                              ; preds = %641
  %646 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %647

647:                                              ; preds = %645, %641
  %648 = phi i64* [ %646, %645 ], [ %642, %641 ]
  %649 = ptrtoint i64* %648 to i64
  %650 = add i64 %649, 8
  %651 = inttoptr i64 %650 to i64*
  store i64* %651, i64** %495, align 8
  store i64 %635, i64* %648, align 8
  br label %652

652:                                              ; preds = %647, %638
  %653 = phi i64 [ %640, %638 ], [ %635, %647 ]
  %654 = phi i64* [ %639, %638 ], [ %648, %647 ]
  %655 = trunc i64 %653 to i32
  %656 = icmp eq i32 %655, 0
  br i1 %656, label %496, label %501

657:                                              ; preds = %710, %498
  %658 = phi i64 [ 0, %498 ], [ %719, %710 ]
  %659 = load i64, i64* %468, align 8
  %660 = and i64 %659, -4294967296
  %661 = trunc i64 %658 to i32
  %662 = shl i32 %661, 2
  %663 = sext i32 %662 to i64
  %664 = add nsw i64 %663, 7
  %665 = add i64 %664, %659
  %666 = inttoptr i64 %665 to i32*
  %667 = load atomic i32, i32* %666 monotonic, align 4
  %668 = zext i32 %667 to i64
  %669 = or i64 %660, %668
  %670 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %470, align 8
  %671 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %670, null
  br i1 %671, label %675, label %672

672:                                              ; preds = %657
  %673 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %670, i64 %669) #4
  %674 = load i64, i64* %673, align 8
  br label %686

675:                                              ; preds = %657
  %676 = load i64*, i64** %499, align 8
  %677 = load i64*, i64** %336, align 8
  %678 = icmp eq i64* %676, %677
  br i1 %678, label %679, label %681

679:                                              ; preds = %675
  %680 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %681

681:                                              ; preds = %679, %675
  %682 = phi i64* [ %680, %679 ], [ %676, %675 ]
  %683 = ptrtoint i64* %682 to i64
  %684 = add i64 %683, 8
  %685 = inttoptr i64 %684 to i64*
  store i64* %685, i64** %499, align 8
  store i64 %669, i64* %682, align 8
  br label %686

686:                                              ; preds = %681, %672
  %687 = phi i64 [ %674, %672 ], [ %669, %681 ]
  %688 = phi i64* [ %673, %672 ], [ %682, %681 ]
  %689 = and i64 %687, -4294967296
  %690 = add i64 %687, 3
  %691 = inttoptr i64 %690 to i32*
  %692 = load i32, i32* %691, align 4
  %693 = zext i32 %692 to i64
  %694 = or i64 %689, %693
  %695 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %470, align 8
  %696 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %695, null
  br i1 %696, label %699, label %697

697:                                              ; preds = %686
  %698 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %695, i64 %694) #4
  br label %710

699:                                              ; preds = %686
  %700 = load i64*, i64** %499, align 8
  %701 = load i64*, i64** %336, align 8
  %702 = icmp eq i64* %700, %701
  br i1 %702, label %703, label %705

703:                                              ; preds = %699
  %704 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %705

705:                                              ; preds = %703, %699
  %706 = phi i64* [ %704, %703 ], [ %700, %699 ]
  %707 = ptrtoint i64* %706 to i64
  %708 = add i64 %707, 8
  %709 = inttoptr i64 %708 to i64*
  store i64* %709, i64** %499, align 8
  store i64 %694, i64* %706, align 8
  br label %710

710:                                              ; preds = %705, %697
  %711 = phi i64* [ %698, %697 ], [ %706, %705 ]
  %712 = load i64, i64* %688, align 8
  %713 = add i64 %712, 7
  %714 = inttoptr i64 %713 to i32*
  %715 = load i32, i32* %714, align 4
  %716 = lshr i32 %715, 10
  %717 = and i32 %716, 7
  %718 = call i64* @_ZN2v88internal8JSObject11SetAccessorENS0_6HandleIS1_EENS2_INS0_4NameEEENS2_INS0_12AccessorInfoEEENS0_18PropertyAttributesE(i64* nonnull %317, i64* %711, i64* %688, i32 %717) #4
  %719 = add nuw nsw i64 %658, 1
  %720 = icmp eq i64 %719, %500
  br i1 %720, label %721, label %657

721:                                              ; preds = %710, %488, %332, %496, %464
  %722 = load i64, i64* %1, align 8
  %723 = and i64 %722, -4294967296
  %724 = add i64 %722, 15
  %725 = inttoptr i64 %724 to i32*
  %726 = load i32, i32* %725, align 4
  %727 = zext i32 %726 to i64
  %728 = or i64 %723, %727
  %729 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %730 = load i64, i64* %729, align 8
  %731 = trunc i64 %730 to i32
  %732 = icmp eq i32 %726, %731
  br i1 %732, label %937, label %733

733:                                              ; preds = %721
  %734 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %735 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %734, align 8
  %736 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %735, null
  br i1 %736, label %740, label %737

737:                                              ; preds = %733
  %738 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %735, i64 %728) #4
  %739 = load i64, i64* %738, align 8
  br label %752

740:                                              ; preds = %733
  %741 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %742 = load i64*, i64** %741, align 8
  %743 = load i64*, i64** %336, align 8
  %744 = icmp eq i64* %742, %743
  br i1 %744, label %745, label %747

745:                                              ; preds = %740
  %746 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %747

747:                                              ; preds = %745, %740
  %748 = phi i64* [ %746, %745 ], [ %742, %740 ]
  %749 = ptrtoint i64* %748 to i64
  %750 = add i64 %749, 8
  %751 = inttoptr i64 %750 to i64*
  store i64* %751, i64** %741, align 8
  store i64 %728, i64* %748, align 8
  br label %752

752:                                              ; preds = %747, %737
  %753 = phi i64 [ %739, %737 ], [ %728, %747 ]
  %754 = phi i64* [ %738, %737 ], [ %748, %747 ]
  %755 = add i64 %753, 7
  %756 = inttoptr i64 %755 to i32*
  %757 = load atomic i32, i32* %756 monotonic, align 4
  %758 = icmp ult i32 %757, 2
  br i1 %758, label %937, label %759

759:                                              ; preds = %752
  %760 = load i64, i64* %1, align 8
  %761 = add i64 %760, 11
  %762 = inttoptr i64 %761 to i32*
  %763 = load i32, i32* %762, align 4
  %764 = icmp sgt i32 %763, 1
  br i1 %764, label %765, label %937

765:                                              ; preds = %759
  %766 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  br label %767

767:                                              ; preds = %935, %765
  %768 = phi i64 [ %753, %765 ], [ %936, %935 ]
  %769 = phi i32 [ 0, %765 ], [ %927, %935 ]
  %770 = phi i32 [ 0, %765 ], [ %928, %935 ]
  %771 = and i64 %768, -4294967296
  %772 = shl i32 %769, 2
  %773 = add i32 %772, 4
  %774 = sext i32 %773 to i64
  %775 = add nsw i64 %774, 7
  %776 = add i64 %775, %768
  %777 = inttoptr i64 %776 to i32*
  %778 = load atomic i32, i32* %777 monotonic, align 4
  %779 = zext i32 %778 to i64
  %780 = or i64 %771, %779
  %781 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %734, align 8
  %782 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %781, null
  br i1 %782, label %785, label %783

783:                                              ; preds = %767
  %784 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %781, i64 %780) #4
  br label %796

785:                                              ; preds = %767
  %786 = load i64*, i64** %766, align 8
  %787 = load i64*, i64** %336, align 8
  %788 = icmp eq i64* %786, %787
  br i1 %788, label %789, label %791

789:                                              ; preds = %785
  %790 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %791

791:                                              ; preds = %789, %785
  %792 = phi i64* [ %790, %789 ], [ %786, %785 ]
  %793 = ptrtoint i64* %792 to i64
  %794 = add i64 %793, 8
  %795 = inttoptr i64 %794 to i64*
  store i64* %795, i64** %766, align 8
  store i64 %780, i64* %792, align 8
  br label %796

796:                                              ; preds = %791, %783
  %797 = phi i64* [ %784, %783 ], [ %792, %791 ]
  %798 = load i64, i64* %754, align 8
  %799 = add nsw i32 %769, 2
  %800 = add i32 %772, 8
  %801 = sext i32 %800 to i64
  %802 = add i64 %798, 7
  %803 = add i64 %802, %801
  %804 = inttoptr i64 %803 to i32*
  %805 = load atomic i32, i32* %804 monotonic, align 4
  %806 = and i32 %805, 1
  %807 = icmp eq i32 %806, 0
  br i1 %807, label %808, label %890

808:                                              ; preds = %796
  %809 = and i64 %798, -4294967296
  %810 = lshr i32 %805, 4
  %811 = and i32 %810, 7
  %812 = and i32 %805, 2
  %813 = icmp eq i32 %812, 0
  %814 = add nsw i32 %769, 3
  %815 = shl i32 %799, 2
  %816 = add i32 %815, 4
  %817 = sext i32 %816 to i64
  %818 = add i64 %802, %817
  %819 = inttoptr i64 %818 to i32*
  %820 = load atomic i32, i32* %819 monotonic, align 4
  %821 = zext i32 %820 to i64
  %822 = or i64 %809, %821
  %823 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %734, align 8
  %824 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %823, null
  br i1 %813, label %825, label %843

825:                                              ; preds = %808
  br i1 %824, label %828, label %826

826:                                              ; preds = %825
  %827 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %823, i64 %822) #4
  br label %839

828:                                              ; preds = %825
  %829 = load i64*, i64** %766, align 8
  %830 = load i64*, i64** %336, align 8
  %831 = icmp eq i64* %829, %830
  br i1 %831, label %832, label %834

832:                                              ; preds = %828
  %833 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %834

834:                                              ; preds = %832, %828
  %835 = phi i64* [ %833, %832 ], [ %829, %828 ]
  %836 = ptrtoint i64* %835 to i64
  %837 = add i64 %836, 8
  %838 = inttoptr i64 %837 to i64*
  store i64* %838, i64** %766, align 8
  store i64 %822, i64* %835, align 8
  br label %839

839:                                              ; preds = %834, %826
  %840 = phi i64* [ %827, %826 ], [ %835, %834 ]
  %841 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_118DefineDataPropertyEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %0, i64* nonnull %317, i64* %797, i64* %840, i32 %811) #4
  %842 = icmp eq i64* %841, null
  br i1 %842, label %937, label %926

843:                                              ; preds = %808
  br i1 %824, label %846, label %844

844:                                              ; preds = %843
  %845 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %823, i64 %822) #4
  br label %857

846:                                              ; preds = %843
  %847 = load i64*, i64** %766, align 8
  %848 = load i64*, i64** %336, align 8
  %849 = icmp eq i64* %847, %848
  br i1 %849, label %850, label %852

850:                                              ; preds = %846
  %851 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %852

852:                                              ; preds = %850, %846
  %853 = phi i64* [ %851, %850 ], [ %847, %846 ]
  %854 = ptrtoint i64* %853 to i64
  %855 = add i64 %854, 8
  %856 = inttoptr i64 %855 to i64*
  store i64* %856, i64** %766, align 8
  store i64 %822, i64* %853, align 8
  br label %857

857:                                              ; preds = %852, %844
  %858 = phi i64* [ %845, %844 ], [ %853, %852 ]
  %859 = load i64, i64* %754, align 8
  %860 = add nsw i32 %769, 4
  %861 = and i64 %859, -4294967296
  %862 = shl i32 %814, 2
  %863 = add i32 %862, 4
  %864 = sext i32 %863 to i64
  %865 = add nsw i64 %864, 7
  %866 = add i64 %865, %859
  %867 = inttoptr i64 %866 to i32*
  %868 = load atomic i32, i32* %867 monotonic, align 4
  %869 = zext i32 %868 to i64
  %870 = or i64 %861, %869
  %871 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %734, align 8
  %872 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %871, null
  br i1 %872, label %875, label %873

873:                                              ; preds = %857
  %874 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %871, i64 %870) #4
  br label %886

875:                                              ; preds = %857
  %876 = load i64*, i64** %766, align 8
  %877 = load i64*, i64** %336, align 8
  %878 = icmp eq i64* %876, %877
  br i1 %878, label %879, label %881

879:                                              ; preds = %875
  %880 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %881

881:                                              ; preds = %879, %875
  %882 = phi i64* [ %880, %879 ], [ %876, %875 ]
  %883 = ptrtoint i64* %882 to i64
  %884 = add i64 %883, 8
  %885 = inttoptr i64 %884 to i64*
  store i64* %885, i64** %766, align 8
  store i64 %870, i64* %882, align 8
  br label %886

886:                                              ; preds = %881, %873
  %887 = phi i64* [ %874, %873 ], [ %882, %881 ]
  %888 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_122DefineAccessorPropertyEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEENS4_INS0_4NameEEENS4_INS0_6ObjectEEESA_NS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %0, i64* nonnull %317, i64* %797, i64* %858, i64* %887, i32 %811) #4
  %889 = icmp eq i64* %888, null
  br i1 %889, label %937, label %926

890:                                              ; preds = %796
  %891 = shl i32 %799, 2
  %892 = add i32 %891, 4
  %893 = sext i32 %892 to i64
  %894 = add i64 %802, %893
  %895 = inttoptr i64 %894 to i32*
  %896 = load atomic i32, i32* %895 monotonic, align 4
  %897 = lshr i32 %896, 4
  %898 = and i32 %897, 7
  %899 = add nsw i32 %769, 4
  %900 = add i32 %772, 16
  %901 = sext i32 %900 to i64
  %902 = add i64 %802, %901
  %903 = inttoptr i64 %902 to i32*
  %904 = load atomic i32, i32* %903 monotonic, align 4
  %905 = ashr i32 %904, 1
  %906 = call fastcc i64 @_ZN2v88internal12_GLOBAL__N_112GetIntrinsicEPNS0_7IsolateENS_9IntrinsicE(%"class.v8::internal::Isolate"* %0, i32 %905) #4
  %907 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %734, align 8
  %908 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %907, null
  br i1 %908, label %911, label %909

909:                                              ; preds = %890
  %910 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %907, i64 %906) #4
  br label %922

911:                                              ; preds = %890
  %912 = load i64*, i64** %766, align 8
  %913 = load i64*, i64** %336, align 8
  %914 = icmp eq i64* %912, %913
  br i1 %914, label %915, label %917

915:                                              ; preds = %911
  %916 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %917

917:                                              ; preds = %915, %911
  %918 = phi i64* [ %916, %915 ], [ %912, %911 ]
  %919 = ptrtoint i64* %918 to i64
  %920 = add i64 %919, 8
  %921 = inttoptr i64 %920 to i64*
  store i64* %921, i64** %766, align 8
  store i64 %906, i64* %918, align 8
  br label %922

922:                                              ; preds = %917, %909
  %923 = phi i64* [ %910, %909 ], [ %918, %917 ]
  %924 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_118DefineDataPropertyEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %0, i64* nonnull %317, i64* %797, i64* %923, i32 %898) #4
  %925 = icmp eq i64* %924, null
  br i1 %925, label %937, label %926

926:                                              ; preds = %922, %886, %839
  %927 = phi i32 [ %814, %839 ], [ %860, %886 ], [ %899, %922 ]
  %928 = add nuw nsw i32 %770, 1
  %929 = load i64, i64* %1, align 8
  %930 = add i64 %929, 11
  %931 = inttoptr i64 %930 to i32*
  %932 = load i32, i32* %931, align 4
  %933 = ashr i32 %932, 1
  %934 = icmp slt i32 %928, %933
  br i1 %934, label %935, label %937

935:                                              ; preds = %926
  %936 = load i64, i64* %754, align 8
  br label %767

937:                                              ; preds = %926, %922, %886, %839, %759, %752, %721
  %938 = phi i64 [ %320, %721 ], [ %320, %752 ], [ %320, %759 ], [ %320, %926 ], [ 0, %922 ], [ 0, %886 ], [ 0, %839 ]
  %939 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::AccessCheckDisableScope", %"class.v8::internal::(anonymous namespace)::AccessCheckDisableScope"* %6, i64 0, i32 0
  %940 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %939, align 8
  %941 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::AccessCheckDisableScope", %"class.v8::internal::(anonymous namespace)::AccessCheckDisableScope"* %6, i64 0, i32 1
  %942 = load i8, i8* %941, align 8
  %943 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::AccessCheckDisableScope", %"class.v8::internal::(anonymous namespace)::AccessCheckDisableScope"* %6, i64 0, i32 2, i32 0, i32 0
  %944 = load i64*, i64** %943, align 8
  call fastcc void @_ZN2v88internal12_GLOBAL__N_123AccessCheckDisableScopeD2Ev(%"class.v8::internal::Isolate"* %940, i8 %942, i64* %944) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %341) #4
  %945 = icmp eq %"class.v8::internal::Isolate"* %0, null
  br i1 %945, label %959, label %946

946:                                              ; preds = %937
  %947 = inttoptr i64 %335 to i64*
  %948 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %333, i64 0, i32 0
  %949 = load i64*, i64** %948, align 8
  store i64 %335, i64* %334, align 8
  %950 = load i32, i32* %338, align 8
  %951 = add nsw i32 %950, -1
  store i32 %951, i32* %338, align 8
  %952 = load i64*, i64** %336, align 8
  %953 = icmp eq i64* %952, %337
  br i1 %953, label %956, label %954

954:                                              ; preds = %946
  store i64* %337, i64** %336, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %0) #4
  %955 = load i64*, i64** %948, align 8
  br label %956

956:                                              ; preds = %954, %946
  %957 = phi i64* [ %955, %954 ], [ %947, %946 ]
  %958 = phi i64* [ %337, %954 ], [ %949, %946 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %957, i64* %958) #4
  br label %959

959:                                              ; preds = %956, %937
  %960 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %961 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %960, align 8
  %962 = icmp eq %"class.v8::internal::RuntimeCallStats"* %961, null
  br i1 %962, label %965, label %963, !prof !2

963:                                              ; preds = %959
  %964 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %961, %"class.v8::internal::RuntimeCallTimer"* %964) #4
  br label %965

965:                                              ; preds = %959, %963
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %323) #4
  %966 = icmp eq i64 %938, 0
  br i1 %966, label %1014, label %967

967:                                              ; preds = %965
  %968 = load i64, i64* %1, align 8
  %969 = add i64 %968, 27
  %970 = inttoptr i64 %969 to i32*
  %971 = load i32, i32* %970, align 4
  %972 = and i32 %971, 2
  %973 = icmp eq i32 %972, 0
  br i1 %973, label %975, label %974

974:                                              ; preds = %967
  call void @_ZN2v88internal8JSObject17SetImmutableProtoENS0_6HandleIS1_EE(i64* nonnull %317) #4
  br label %975

975:                                              ; preds = %967, %974
  br i1 %3, label %1014, label %976

976:                                              ; preds = %975
  %977 = inttoptr i64 %938 to i64*
  call void @_ZN2v88internal8JSObject17MigrateSlowToFastENS0_6HandleIS1_EEiPKc(i64* %977, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5, i64 0, i64 0)) #4
  br i1 %313, label %978, label %1014

978:                                              ; preds = %976
  %979 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %980 = load i64, i64* %979, align 8
  %981 = and i64 %980, -4294967296
  %982 = add i64 %980, -1
  %983 = inttoptr i64 %982 to i32*
  %984 = load atomic i32, i32* %983 monotonic, align 4
  %985 = zext i32 %984 to i64
  %986 = or i64 %981, %985
  %987 = add i64 %986, 19
  %988 = inttoptr i64 %987 to i32*
  %989 = load i32, i32* %988, align 4
  %990 = zext i32 %989 to i64
  %991 = or i64 %981, %990
  %992 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %993 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %992, align 8
  %994 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %993, null
  br i1 %994, label %997, label %995

995:                                              ; preds = %978
  %996 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %993, i64 %991) #4
  br label %1009

997:                                              ; preds = %978
  %998 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %999 = load i64*, i64** %998, align 8
  %1000 = load i64*, i64** %336, align 8
  %1001 = icmp eq i64* %999, %1000
  br i1 %1001, label %1002, label %1004

1002:                                             ; preds = %997
  %1003 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %1004

1004:                                             ; preds = %1002, %997
  %1005 = phi i64* [ %1003, %1002 ], [ %999, %997 ]
  %1006 = ptrtoint i64* %1005 to i64
  %1007 = add i64 %1006, 8
  %1008 = inttoptr i64 %1007 to i64*
  store i64* %1008, i64** %998, align 8
  store i64 %991, i64* %1005, align 8
  br label %1009

1009:                                             ; preds = %995, %1004
  %1010 = phi i64* [ %996, %995 ], [ %1005, %1004 ]
  call fastcc void @_ZN2v88internal12_GLOBAL__N_126CacheTemplateInstantiationEPNS0_7IsolateENS0_6HandleINS0_13NativeContextEEENS4_INS0_12TemplateInfoEEENS1_11CachingModeENS4_INS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %1010, i64* %1, i32 0, i64* %977)
  %1011 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %1012 = call i64* @_ZN2v88internal7Factory12CopyJSObjectENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Factory"* %1011, i64* %977) #4
  %1013 = ptrtoint i64* %1012 to i64
  br label %1014

1014:                                             ; preds = %975, %1009, %976, %312, %965, %306, %134
  %1015 = phi i64 [ %137, %134 ], [ 0, %306 ], [ 0, %312 ], [ 0, %965 ], [ %938, %975 ], [ %1013, %1009 ], [ %938, %976 ]
  %1016 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 0
  %1017 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %1016, align 8
  %1018 = icmp eq %"class.v8::internal::RuntimeCallStats"* %1017, null
  br i1 %1018, label %1021, label %1019, !prof !2

1019:                                             ; preds = %1014
  %1020 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %1017, %"class.v8::internal::RuntimeCallTimer"* %1020) #4
  br label %1021

1021:                                             ; preds = %1014, %1019
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #4
  %1022 = inttoptr i64 %1015 to i64*
  ret i64* %1022
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10ApiNatives23InstantiateRemoteObjectENS0_6HandleINS0_18ObjectTemplateInfoEEE(i64*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::(anonymous namespace)::InvokeScope", align 8
  %3 = load i64, i64* %0, align 8
  %4 = and i64 %3, -262144
  %5 = or i64 %4, 16
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6, align 16
  %8 = add i64 %7, -41416
  %9 = inttoptr i64 %8 to %"class.v8::internal::Isolate"*
  %10 = bitcast %"class.v8::internal::(anonymous namespace)::InvokeScope"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::InvokeScope", %"class.v8::internal::(anonymous namespace)::InvokeScope"* %2, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %9, %"class.v8::internal::Isolate"** %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::InvokeScope", %"class.v8::internal::(anonymous namespace)::InvokeScope"* %2, i64 0, i32 1
  call void @_ZN2v88internal11SaveContextC1EPNS0_7IsolateE(%"class.v8::internal::SaveContext"* %12, %"class.v8::internal::Isolate"* %9) #4
  %13 = load i64, i64* %0, align 8
  %14 = and i64 %13, -4294967296
  %15 = add i64 %13, 23
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %14, %18
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 4
  %21 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %20, align 8
  %22 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %1
  %24 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %21, i64 %19) #4
  br label %38

25:                                               ; preds = %1
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %29 = load i64*, i64** %28, align 8
  %30 = icmp eq i64* %27, %29
  br i1 %30, label %31, label %33

31:                                               ; preds = %25
  %32 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #4
  br label %33

33:                                               ; preds = %31, %25
  %34 = phi i64* [ %32, %31 ], [ %27, %25 ]
  %35 = ptrtoint i64* %34 to i64
  %36 = add i64 %35, 8
  %37 = inttoptr i64 %36 to i64*
  store i64* %37, i64** %26, align 8
  store i64 %19, i64* %34, align 8
  br label %38

38:                                               ; preds = %23, %33
  %39 = phi i64* [ %24, %23 ], [ %34, %33 ]
  %40 = inttoptr i64 %8 to %"class.v8::internal::Factory"*
  %41 = load i64, i64* %0, align 8
  %42 = add i64 %41, 27
  %43 = inttoptr i64 %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = and i32 %44, 2147483640
  %46 = add nuw nsw i32 %45, 12
  %47 = call i64* @_ZN2v88internal7Factory6NewMapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %40, i16 zeroext 1040, i32 %46, i8 zeroext 3, i32 0) #4
  %48 = load i64, i64* %47, align 8
  %49 = load i64, i64* %39, align 8
  %50 = and i64 %48, -4294967296
  %51 = add i64 %48, 19
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i64
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %38
  %58 = or i64 %50, %54
  %59 = add i64 %58, -1
  %60 = inttoptr i64 %59 to i32*
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = zext i32 %61 to i64
  %63 = or i64 %50, %62
  %64 = add i64 %63, 7
  %65 = inttoptr i64 %64 to i16*
  %66 = load atomic i16, i16* %65 monotonic, align 2
  %67 = icmp eq i16 %66, 172
  br i1 %67, label %68, label %69, !prof !4

68:                                               ; preds = %57
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i64 0, i64 0)) #7
  unreachable

69:                                               ; preds = %38, %57
  %70 = trunc i64 %49 to i32
  store atomic volatile i32 %70, i32* %52 monotonic, align 4
  %71 = and i64 %49, 1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %96, label %73

73:                                               ; preds = %69
  %74 = and i64 %48, -262144
  %75 = or i64 %74, 8
  %76 = inttoptr i64 %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = and i64 %77, 262144
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %84, label %80

80:                                               ; preds = %73
  %81 = or i64 %74, 16
  %82 = inttoptr i64 %81 to %"class.v8::internal::Heap"**
  %83 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %82, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %83, i64 %48, i64 %51, i64 %49) #4
  br label %84

84:                                               ; preds = %80, %73
  %85 = and i64 %49, -262144
  %86 = or i64 %85, 8
  %87 = inttoptr i64 %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = and i64 %88, 24
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %96, label %91

91:                                               ; preds = %84
  %92 = load i64, i64* %76, align 8
  %93 = and i64 %92, 24
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %91
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %48, i64 %51, i64 %49) #4
  br label %96

96:                                               ; preds = %69, %84, %91, %95
  %97 = load i64, i64* %47, align 8
  %98 = add i64 %97, 9
  %99 = inttoptr i64 %98 to i8*
  %100 = load i8, i8* %99, align 1
  %101 = or i8 %100, 32
  store atomic volatile i8 %101, i8* %99 monotonic, align 1
  %102 = load i64, i64* %47, align 8
  %103 = add i64 %102, 11
  %104 = inttoptr i64 %103 to i32*
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = or i32 %105, 268435456
  store atomic volatile i32 %106, i32* %104 monotonic, align 4
  %107 = call i64* @_ZN2v88internal7Factory18NewJSObjectFromMapENS0_6HandleINS0_3MapEEENS0_14AllocationTypeENS2_INS0_14AllocationSiteEEE(%"class.v8::internal::Factory"* %40, i64* %47, i8 zeroext 0, i64* null) #4
  %108 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %40, i64 176
  %109 = bitcast %"class.v8::internal::Factory"* %108 to i64*
  call void @_ZN2v88internal8JSObject17ForceSetPrototypeEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_10HeapObjectEEE(%"class.v8::internal::Isolate"* %9, i64* %107, i64* %109) #4
  %110 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %111 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %110, i64 0, i32 0, i32 7, i32 0, i64 5
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %110, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = trunc i64 %114 to i32
  %116 = trunc i64 %112 to i32
  %117 = icmp eq i32 %115, %116
  br i1 %117, label %119, label %118

118:                                              ; preds = %96
  call void @_ZN2v88internal7Isolate21ReportPendingMessagesEv(%"class.v8::internal::Isolate"* %110) #4
  br label %121

119:                                              ; preds = %96
  %120 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %110, i64 0, i32 0, i32 9, i32 11, i32 0, i32 0
  store i64 %112, i64* %120, align 8
  br label %121

121:                                              ; preds = %118, %119
  call void @_ZN2v88internal11SaveContextD1Ev(%"class.v8::internal::SaveContext"* %12) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  ret i64* %107
}

declare i64* @_ZN2v88internal7Factory6NewMapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"*, i16 zeroext, i32, i8 zeroext, i32) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory18NewJSObjectFromMapENS0_6HandleINS0_3MapEEENS0_14AllocationTypeENS2_INS0_14AllocationSiteEEE(%"class.v8::internal::Factory"*, i64*, i8 zeroext, i64*) local_unnamed_addr #2

declare void @_ZN2v88internal8JSObject17ForceSetPrototypeEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_10HeapObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10ApiNatives15AddDataPropertyEPNS0_7IsolateENS0_6HandleINS0_12TemplateInfoEEENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca [3 x %"class.v8::internal::Handle.1144"], align 16
  %7 = shl i32 %4, 4
  %8 = ashr exact i32 %7, 1
  %9 = sext i32 %8 to i64
  %10 = shl nsw i64 %9, 1
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %12 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %11, align 8
  %13 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %5
  %15 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %12, i64 %10) #4
  br label %29

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = icmp eq i64* %18, %20
  br i1 %21, label %22, label %24

22:                                               ; preds = %16
  %23 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %24

24:                                               ; preds = %22, %16
  %25 = phi i64* [ %23, %22 ], [ %18, %16 ]
  %26 = ptrtoint i64* %25 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to i64*
  store i64* %28, i64** %17, align 8
  store i64 %10, i64* %25, align 8
  br label %29

29:                                               ; preds = %14, %24
  %30 = phi i64* [ %15, %14 ], [ %25, %24 ]
  %31 = bitcast [3 x %"class.v8::internal::Handle.1144"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #4
  %32 = getelementptr inbounds [3 x %"class.v8::internal::Handle.1144"], [3 x %"class.v8::internal::Handle.1144"]* %6, i64 0, i64 0
  %33 = getelementptr inbounds [3 x %"class.v8::internal::Handle.1144"], [3 x %"class.v8::internal::Handle.1144"]* %6, i64 0, i64 0, i32 0, i32 0
  store i64* %2, i64** %33, align 16
  %34 = getelementptr inbounds [3 x %"class.v8::internal::Handle.1144"], [3 x %"class.v8::internal::Handle.1144"]* %6, i64 0, i64 1, i32 0, i32 0
  store i64* %30, i64** %34, align 8
  %35 = getelementptr inbounds [3 x %"class.v8::internal::Handle.1144"], [3 x %"class.v8::internal::Handle.1144"]* %6, i64 0, i64 2, i32 0, i32 0
  store i64* %3, i64** %35, align 16
  call fastcc void @_ZN2v88internal12_GLOBAL__N_125AddPropertyToPropertyListEPNS0_7IsolateENS0_6HandleINS0_12TemplateInfoEEEiPNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 3, %"class.v8::internal::Handle.1144"* nonnull %32)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal12_GLOBAL__N_125AddPropertyToPropertyListEPNS0_7IsolateENS0_6HandleINS0_12TemplateInfoEEEiPNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i32, %"class.v8::internal::Handle.1144"* nocapture readonly) unnamed_addr #0 {
  %5 = load i64, i64* %1, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %13 to i32
  %15 = icmp eq i32 %9, %14
  br i1 %15, label %16, label %18

16:                                               ; preds = %4
  %17 = tail call i64* @_ZN2v88internal12TemplateList3NewEPNS0_7IsolateEi(%"class.v8::internal::Isolate"* %0, i32 %2) #4
  br label %37

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %20 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %19, align 8
  %21 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %20, i64 %11) #4
  br label %37

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %28 = load i64*, i64** %27, align 8
  %29 = icmp eq i64* %26, %28
  br i1 %29, label %30, label %32

30:                                               ; preds = %24
  %31 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %32

32:                                               ; preds = %30, %24
  %33 = phi i64* [ %31, %30 ], [ %26, %24 ]
  %34 = ptrtoint i64* %33 to i64
  %35 = add i64 %34, 8
  %36 = inttoptr i64 %35 to i64*
  store i64* %36, i64** %25, align 8
  store i64 %11, i64* %33, align 8
  br label %37

37:                                               ; preds = %32, %22, %16
  %38 = phi i64* [ %17, %16 ], [ %23, %22 ], [ %33, %32 ]
  %39 = load i64, i64* %1, align 8
  %40 = add i64 %39, 11
  %41 = inttoptr i64 %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = add i32 %42, 2
  %44 = and i32 %43, -2
  store atomic volatile i32 %44, i32* %41 monotonic, align 4
  %45 = icmp sgt i32 %2, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %37
  %47 = zext i32 %2 to i64
  br label %84

48:                                               ; preds = %84, %37
  %49 = phi i64* [ %38, %37 ], [ %91, %84 ]
  %50 = load i64, i64* %1, align 8
  %51 = load i64, i64* %49, align 8
  %52 = add i64 %50, 15
  %53 = inttoptr i64 %52 to i32*
  %54 = trunc i64 %51 to i32
  store atomic volatile i32 %54, i32* %53 monotonic, align 4
  %55 = and i64 %51, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %68, label %57

57:                                               ; preds = %48
  %58 = and i64 %50, -262144
  %59 = or i64 %58, 8
  %60 = inttoptr i64 %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = and i64 %61, 262144
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %68, label %64

64:                                               ; preds = %57
  %65 = or i64 %58, 16
  %66 = inttoptr i64 %65 to %"class.v8::internal::Heap"**
  %67 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %66, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %67, i64 %50, i64 %52, i64 %51) #4
  br label %68

68:                                               ; preds = %64, %57, %48
  %69 = and i64 %51, -262144
  %70 = or i64 %69, 8
  %71 = inttoptr i64 %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = and i64 %72, 24
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %83, label %75

75:                                               ; preds = %68
  %76 = and i64 %50, -262144
  %77 = or i64 %76, 8
  %78 = inttoptr i64 %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = and i64 %79, 24
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %75
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %50, i64 %52, i64 %51) #4
  br label %83

83:                                               ; preds = %68, %75, %82
  ret void

84:                                               ; preds = %84, %46
  %85 = phi i64 [ 0, %46 ], [ %92, %84 ]
  %86 = phi i64* [ %38, %46 ], [ %91, %84 ]
  %87 = getelementptr inbounds %"class.v8::internal::Handle.1144", %"class.v8::internal::Handle.1144"* %3, i64 %85, i32 0, i32 0
  %88 = load i64*, i64** %87, align 8
  %89 = icmp eq i64* %88, null
  %90 = select i1 %89, i64* %12, i64* %88
  %91 = tail call i64* @_ZN2v88internal12TemplateList3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %86, i64* %90) #4
  %92 = add nuw nsw i64 %85, 1
  %93 = icmp eq i64 %92, %47
  br i1 %93, label %48, label %84
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10ApiNatives15AddDataPropertyEPNS0_7IsolateENS0_6HandleINS0_12TemplateInfoEEENS4_INS0_4NameEEENS_9IntrinsicENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"*, i64*, i64*, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca [4 x %"class.v8::internal::Handle.1144"], align 16
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 1
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %10 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %9, align 8
  %11 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %5
  %13 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %10, i64 %8) #4
  br label %27

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %18 = load i64*, i64** %17, align 8
  %19 = icmp eq i64* %16, %18
  br i1 %19, label %20, label %22

20:                                               ; preds = %14
  %21 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %22

22:                                               ; preds = %20, %14
  %23 = phi i64* [ %21, %20 ], [ %16, %14 ]
  %24 = ptrtoint i64* %23 to i64
  %25 = add i64 %24, 8
  %26 = inttoptr i64 %25 to i64*
  store i64* %26, i64** %15, align 8
  store i64 %8, i64* %23, align 8
  br label %27

27:                                               ; preds = %12, %22
  %28 = phi i64* [ %13, %12 ], [ %23, %22 ]
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 7
  %30 = shl i32 %4, 4
  %31 = ashr exact i32 %30, 1
  %32 = sext i32 %31 to i64
  %33 = shl nsw i64 %32, 1
  %34 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %9, align 8
  %35 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %27
  %37 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %34, i64 %33) #4
  br label %51

38:                                               ; preds = %27
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %42 = load i64*, i64** %41, align 8
  %43 = icmp eq i64* %40, %42
  br i1 %43, label %44, label %46

44:                                               ; preds = %38
  %45 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %46

46:                                               ; preds = %44, %38
  %47 = phi i64* [ %45, %44 ], [ %40, %38 ]
  %48 = ptrtoint i64* %47 to i64
  %49 = add i64 %48, 8
  %50 = inttoptr i64 %49 to i64*
  store i64* %50, i64** %39, align 8
  store i64 %33, i64* %47, align 8
  br label %51

51:                                               ; preds = %36, %46
  %52 = phi i64* [ %37, %36 ], [ %47, %46 ]
  %53 = bitcast [4 x %"class.v8::internal::Handle.1144"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %53) #4
  %54 = getelementptr inbounds [4 x %"class.v8::internal::Handle.1144"], [4 x %"class.v8::internal::Handle.1144"]* %6, i64 0, i64 0
  %55 = getelementptr inbounds [4 x %"class.v8::internal::Handle.1144"], [4 x %"class.v8::internal::Handle.1144"]* %6, i64 0, i64 0, i32 0, i32 0
  store i64* %2, i64** %55, align 16
  %56 = getelementptr inbounds [4 x %"class.v8::internal::Handle.1144"], [4 x %"class.v8::internal::Handle.1144"]* %6, i64 0, i64 1, i32 0, i32 0
  store i64* %29, i64** %56, align 8
  %57 = getelementptr inbounds [4 x %"class.v8::internal::Handle.1144"], [4 x %"class.v8::internal::Handle.1144"]* %6, i64 0, i64 2, i32 0, i32 0
  store i64* %52, i64** %57, align 16
  %58 = getelementptr inbounds [4 x %"class.v8::internal::Handle.1144"], [4 x %"class.v8::internal::Handle.1144"]* %6, i64 0, i64 3, i32 0, i32 0
  store i64* %28, i64** %58, align 8
  call fastcc void @_ZN2v88internal12_GLOBAL__N_125AddPropertyToPropertyListEPNS0_7IsolateENS0_6HandleINS0_12TemplateInfoEEEiPNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 4, %"class.v8::internal::Handle.1144"* nonnull %54)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %53) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10ApiNatives19AddAccessorPropertyEPNS0_7IsolateENS0_6HandleINS0_12TemplateInfoEEENS4_INS0_4NameEEENS4_INS0_20FunctionTemplateInfoEEESA_NS0_18PropertyAttributesE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca [4 x %"class.v8::internal::Handle.1144"], align 16
  %8 = icmp eq i64* %3, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %6
  %10 = load i64, i64* %3, align 8
  %11 = add i64 %10, 43
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, -66
  %15 = or i32 %14, 64
  store atomic volatile i32 %15, i32* %12 monotonic, align 4
  br label %16

16:                                               ; preds = %9, %6
  %17 = icmp eq i64* %4, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %16
  %19 = load i64, i64* %4, align 8
  %20 = add i64 %19, 43
  %21 = inttoptr i64 %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %22, -66
  %24 = or i32 %23, 64
  store atomic volatile i32 %24, i32* %21 monotonic, align 4
  br label %25

25:                                               ; preds = %18, %16
  %26 = shl i32 %5, 4
  %27 = ashr exact i32 %26, 1
  %28 = or i32 %27, 1
  %29 = sext i32 %28 to i64
  %30 = shl nsw i64 %29, 1
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %32 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %31, align 8
  %33 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %25
  %35 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %32, i64 %30) #4
  br label %49

36:                                               ; preds = %25
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %38 = load i64*, i64** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %40 = load i64*, i64** %39, align 8
  %41 = icmp eq i64* %38, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  %43 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %44

44:                                               ; preds = %42, %36
  %45 = phi i64* [ %43, %42 ], [ %38, %36 ]
  %46 = ptrtoint i64* %45 to i64
  %47 = add i64 %46, 8
  %48 = inttoptr i64 %47 to i64*
  store i64* %48, i64** %37, align 8
  store i64 %30, i64* %45, align 8
  br label %49

49:                                               ; preds = %34, %44
  %50 = phi i64* [ %35, %34 ], [ %45, %44 ]
  %51 = bitcast [4 x %"class.v8::internal::Handle.1144"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #4
  %52 = getelementptr inbounds [4 x %"class.v8::internal::Handle.1144"], [4 x %"class.v8::internal::Handle.1144"]* %7, i64 0, i64 0
  %53 = getelementptr inbounds [4 x %"class.v8::internal::Handle.1144"], [4 x %"class.v8::internal::Handle.1144"]* %7, i64 0, i64 0, i32 0, i32 0
  store i64* %2, i64** %53, align 16
  %54 = getelementptr inbounds [4 x %"class.v8::internal::Handle.1144"], [4 x %"class.v8::internal::Handle.1144"]* %7, i64 0, i64 1, i32 0, i32 0
  store i64* %50, i64** %54, align 8
  %55 = getelementptr inbounds [4 x %"class.v8::internal::Handle.1144"], [4 x %"class.v8::internal::Handle.1144"]* %7, i64 0, i64 2, i32 0, i32 0
  store i64* %3, i64** %55, align 16
  %56 = getelementptr inbounds [4 x %"class.v8::internal::Handle.1144"], [4 x %"class.v8::internal::Handle.1144"]* %7, i64 0, i64 3, i32 0, i32 0
  store i64* %4, i64** %56, align 8
  call fastcc void @_ZN2v88internal12_GLOBAL__N_125AddPropertyToPropertyListEPNS0_7IsolateENS0_6HandleINS0_12TemplateInfoEEEiPNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 4, %"class.v8::internal::Handle.1144"* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10ApiNatives21AddNativeDataPropertyEPNS0_7IsolateENS0_6HandleINS0_12TemplateInfoEEENS4_INS0_12AccessorInfoEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 19
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %12 = load i64, i64* %11, align 8
  %13 = trunc i64 %12 to i32
  %14 = icmp eq i32 %8, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %3
  %16 = tail call i64* @_ZN2v88internal12TemplateList3NewEPNS0_7IsolateEi(%"class.v8::internal::Isolate"* %0, i32 1) #4
  br label %36

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %19 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %18, align 8
  %20 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  %22 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %19, i64 %10) #4
  br label %36

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %27 = load i64*, i64** %26, align 8
  %28 = icmp eq i64* %25, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %23
  %30 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %31

31:                                               ; preds = %29, %23
  %32 = phi i64* [ %30, %29 ], [ %25, %23 ]
  %33 = ptrtoint i64* %32 to i64
  %34 = add i64 %33, 8
  %35 = inttoptr i64 %34 to i64*
  store i64* %35, i64** %24, align 8
  store i64 %10, i64* %32, align 8
  br label %36

36:                                               ; preds = %31, %21, %15
  %37 = phi i64* [ %16, %15 ], [ %22, %21 ], [ %32, %31 ]
  %38 = tail call i64* @_ZN2v88internal12TemplateList3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %37, i64* %2) #4
  %39 = load i64, i64* %1, align 8
  %40 = load i64, i64* %38, align 8
  %41 = add i64 %39, 19
  %42 = inttoptr i64 %41 to i32*
  %43 = trunc i64 %40 to i32
  store atomic volatile i32 %43, i32* %42 monotonic, align 4
  %44 = and i64 %40, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %57, label %46

46:                                               ; preds = %36
  %47 = and i64 %39, -262144
  %48 = or i64 %47, 8
  %49 = inttoptr i64 %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, 262144
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  %54 = or i64 %47, 16
  %55 = inttoptr i64 %54 to %"class.v8::internal::Heap"**
  %56 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %55, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %56, i64 %39, i64 %41, i64 %40) #4
  br label %57

57:                                               ; preds = %53, %46, %36
  %58 = and i64 %40, -262144
  %59 = or i64 %58, 8
  %60 = inttoptr i64 %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = and i64 %61, 24
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %72, label %64

64:                                               ; preds = %57
  %65 = and i64 %39, -262144
  %66 = or i64 %65, 8
  %67 = inttoptr i64 %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = and i64 %68, 24
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %64
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %39, i64 %41, i64 %40) #4
  br label %72

72:                                               ; preds = %57, %64, %71
  ret void
}

declare i64* @_ZN2v88internal12TemplateList3NewEPNS0_7IsolateEi(%"class.v8::internal::Isolate"*, i32) local_unnamed_addr #2

declare i64* @_ZN2v88internal12TemplateList3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10ApiNatives17CreateApiFunctionEPNS0_7IsolateENS0_6HandleINS0_13NativeContextEEENS4_INS0_20FunctionTemplateInfoEEENS4_INS0_6ObjectEEENS0_12InstanceTypeENS0_11MaybeHandleINS0_4NameEEE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i16 zeroext, i64*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %8 = alloca %"class.v8::internal::Factory::JSFunctionBuilder", align 8
  %9 = ptrtoint i64* %3 to i64
  %10 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 40, i1 false) #4
  %11 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1187", %"struct.std::__1::atomic.1187"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %19, label %13, !prof !2

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 0
  %15 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 1
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 14, i32 0
  %17 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %17, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %18, %"class.v8::internal::RuntimeCallStats"** %14, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %18, %"class.v8::internal::RuntimeCallTimer"* %15, i32 145) #4
  br label %19

19:                                               ; preds = %6, %13
  %20 = call i64* @_ZN2v88internal20FunctionTemplateInfo29GetOrCreateSharedFunctionInfoEPNS0_7IsolateENS0_6HandleIS1_EENS0_11MaybeHandleINS0_4NameEEE(%"class.v8::internal::Isolate"* %0, i64* %2, i64* %5) #4
  %21 = bitcast %"class.v8::internal::Factory::JSFunctionBuilder"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %21) #4
  call void @_ZN2v88internal7Factory17JSFunctionBuilderC1EPNS0_7IsolateENS0_6HandleINS0_18SharedFunctionInfoEEENS5_INS0_7ContextEEE(%"class.v8::internal::Factory::JSFunctionBuilder"* nonnull %8, %"class.v8::internal::Isolate"* %0, i64* %20, i64* %1) #4
  %22 = call i64* @_ZN2v88internal7Factory17JSFunctionBuilder5BuildEv(%"class.v8::internal::Factory::JSFunctionBuilder"* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %21) #4
  %23 = load i64, i64* %2, align 8
  %24 = add i64 %23, 43
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i32 %26, 16
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %492

29:                                               ; preds = %19
  %30 = and i32 %26, 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %91, label %32

32:                                               ; preds = %29
  %33 = load i64, i64* %22, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = and i64 %35, -4294967296
  %37 = add i64 %35, -1
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = zext i32 %39 to i64
  %41 = or i64 %36, %40
  %42 = add i64 %41, 19
  %43 = inttoptr i64 %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %36, %45
  %47 = add i64 %46, 759
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = zext i32 %49 to i64
  %51 = or i64 %36, %50
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %53 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %52, align 8
  %54 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %53, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %32
  %56 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %53, i64 %51) #4
  %57 = load i64, i64* %56, align 8
  br label %71

58:                                               ; preds = %32
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %62 = load i64*, i64** %61, align 8
  %63 = icmp eq i64* %60, %62
  br i1 %63, label %64, label %66

64:                                               ; preds = %58
  %65 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %66

66:                                               ; preds = %64, %58
  %67 = phi i64* [ %65, %64 ], [ %60, %58 ]
  %68 = ptrtoint i64* %67 to i64
  %69 = add i64 %68, 8
  %70 = inttoptr i64 %69 to i64*
  store i64* %70, i64** %59, align 8
  store i64 %51, i64* %67, align 8
  br label %71

71:                                               ; preds = %55, %66
  %72 = phi i64 [ %57, %55 ], [ %51, %66 ]
  %73 = add i64 %33, -1
  %74 = inttoptr i64 %73 to i32*
  %75 = trunc i64 %72 to i32
  store atomic volatile i32 %75, i32* %74 monotonic, align 4
  %76 = icmp eq i32 %75, 0
  %77 = and i64 %72, 1
  %78 = icmp eq i64 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %91, label %80

80:                                               ; preds = %71
  %81 = and i64 %33, -262144
  %82 = or i64 %81, 8
  %83 = inttoptr i64 %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = and i64 %84, 262144
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %91, label %87

87:                                               ; preds = %80
  %88 = or i64 %81, 16
  %89 = inttoptr i64 %88 to %"class.v8::internal::Heap"**
  %90 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %89, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %90, i64 %33, i64 0, i64 %72) #4
  br label %91

91:                                               ; preds = %29, %87, %80, %71
  %92 = load i64, i64* %3, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %94 = load i64, i64* %93, align 8
  %95 = trunc i64 %92 to i32
  %96 = trunc i64 %94 to i32
  %97 = icmp eq i32 %95, %96
  br i1 %97, label %98, label %102

98:                                               ; preds = %91
  %99 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %100 = call i64* @_ZN2v88internal7Factory20NewFunctionPrototypeENS0_6HandleINS0_10JSFunctionEEE(%"class.v8::internal::Factory"* %99, i64* %22) #4
  %101 = ptrtoint i64* %100 to i64
  br label %144

102:                                              ; preds = %91
  %103 = load i64, i64* %2, align 8
  %104 = and i64 %103, -4294967296
  %105 = add i64 %103, 35
  %106 = inttoptr i64 %105 to i32*
  %107 = load atomic i32, i32* %106 acquire, align 4
  %108 = zext i32 %107 to i64
  %109 = or i64 %104, %108
  %110 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %111 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %110, null
  br i1 %111, label %118, label %112

112:                                              ; preds = %102
  %113 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %110, i64 0, i32 0, i32 1
  %114 = load i8, i8* %113, align 8, !range !3
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %118, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %110, i64 0, i32 1, i64 0
  br label %126

118:                                              ; preds = %112, %102
  %119 = and i64 %103, -262144
  %120 = or i64 %119, 16
  %121 = inttoptr i64 %120 to i64*
  %122 = load i64, i64* %121, align 16
  %123 = add i64 %122, -41416
  %124 = inttoptr i64 %123 to %"class.v8::internal::Isolate"*
  %125 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %124, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %126

126:                                              ; preds = %118, %116
  %127 = phi i64* [ %125, %118 ], [ %117, %116 ]
  %128 = getelementptr inbounds i64, i64* %127, i64 4
  %129 = load i64, i64* %128, align 8
  %130 = trunc i64 %129 to i32
  %131 = icmp eq i32 %107, %130
  br i1 %131, label %136, label %132

132:                                              ; preds = %126
  %133 = add i64 %109, 7
  %134 = inttoptr i64 %133 to i32*
  %135 = load i32, i32* %134, align 4
  br label %136

136:                                              ; preds = %126, %132
  %137 = phi i32 [ %130, %126 ], [ %135, %132 ]
  %138 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %139 = load i64, i64* %138, align 8
  %140 = trunc i64 %139 to i32
  %141 = icmp eq i32 %137, %140
  br i1 %141, label %142, label %144

142:                                              ; preds = %136
  %143 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 297
  call void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %0, i64* %3, i64* %143, i64* %22, i32 2) #4
  br label %144

144:                                              ; preds = %136, %142, %98
  %145 = phi i64 [ %101, %98 ], [ %9, %142 ], [ %9, %136 ]
  %146 = load i64, i64* %2, align 8
  %147 = and i64 %146, -4294967296
  %148 = add i64 %146, 35
  %149 = inttoptr i64 %148 to i32*
  %150 = load atomic i32, i32* %149 acquire, align 4
  %151 = zext i32 %150 to i64
  %152 = or i64 %147, %151
  %153 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %154 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %153, null
  br i1 %154, label %161, label %155

155:                                              ; preds = %144
  %156 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %153, i64 0, i32 0, i32 1
  %157 = load i8, i8* %156, align 8, !range !3
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %153, i64 0, i32 1, i64 0
  br label %169

161:                                              ; preds = %155, %144
  %162 = and i64 %146, -262144
  %163 = or i64 %162, 16
  %164 = inttoptr i64 %163 to i64*
  %165 = load i64, i64* %164, align 16
  %166 = add i64 %165, -41416
  %167 = inttoptr i64 %166 to %"class.v8::internal::Isolate"*
  %168 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %167, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %169

169:                                              ; preds = %161, %159
  %170 = phi i64* [ %168, %161 ], [ %160, %159 ]
  %171 = getelementptr inbounds i64, i64* %170, i64 4
  %172 = load i64, i64* %171, align 8
  %173 = trunc i64 %172 to i32
  %174 = icmp eq i32 %150, %173
  br i1 %174, label %179, label %175

175:                                              ; preds = %169
  %176 = add i64 %152, 23
  %177 = inttoptr i64 %176 to i32*
  %178 = load i32, i32* %177, align 4
  br label %179

179:                                              ; preds = %169, %175
  %180 = phi i32 [ %173, %169 ], [ %178, %175 ]
  %181 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %182 = load i64, i64* %181, align 8
  %183 = trunc i64 %182 to i32
  %184 = icmp eq i32 %180, %183
  br i1 %184, label %250, label %185

185:                                              ; preds = %179
  %186 = load i64, i64* %2, align 8
  %187 = and i64 %186, -4294967296
  %188 = add i64 %186, 35
  %189 = inttoptr i64 %188 to i32*
  %190 = load atomic i32, i32* %189 acquire, align 4
  %191 = zext i32 %190 to i64
  %192 = or i64 %187, %191
  %193 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %194 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %193, null
  br i1 %194, label %201, label %195

195:                                              ; preds = %185
  %196 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %193, i64 0, i32 0, i32 1
  %197 = load i8, i8* %196, align 8, !range !3
  %198 = icmp eq i8 %197, 0
  br i1 %198, label %201, label %199

199:                                              ; preds = %195
  %200 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %193, i64 0, i32 1, i64 0
  br label %209

201:                                              ; preds = %195, %185
  %202 = and i64 %186, -262144
  %203 = or i64 %202, 16
  %204 = inttoptr i64 %203 to i64*
  %205 = load i64, i64* %204, align 16
  %206 = add i64 %205, -41416
  %207 = inttoptr i64 %206 to %"class.v8::internal::Isolate"*
  %208 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %207, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %209

209:                                              ; preds = %201, %199
  %210 = phi i64* [ %208, %201 ], [ %200, %199 ]
  %211 = getelementptr inbounds i64, i64* %210, i64 4
  %212 = load i64, i64* %211, align 8
  %213 = trunc i64 %212 to i32
  %214 = icmp eq i32 %190, %213
  br i1 %214, label %221, label %215

215:                                              ; preds = %209
  %216 = add i64 %192, 23
  %217 = inttoptr i64 %216 to i32*
  %218 = load i32, i32* %217, align 4
  %219 = zext i32 %218 to i64
  %220 = or i64 %187, %219
  br label %221

221:                                              ; preds = %209, %215
  %222 = phi i64 [ %220, %215 ], [ %212, %209 ]
  %223 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %224 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %223, align 8
  %225 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %221
  %227 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %224, i64 %222) #4
  %228 = load i64, i64* %227, align 8
  br label %242

229:                                              ; preds = %221
  %230 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %231 = load i64*, i64** %230, align 8
  %232 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %233 = load i64*, i64** %232, align 8
  %234 = icmp eq i64* %231, %233
  br i1 %234, label %235, label %237

235:                                              ; preds = %229
  %236 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %237

237:                                              ; preds = %235, %229
  %238 = phi i64* [ %236, %235 ], [ %231, %229 ]
  %239 = ptrtoint i64* %238 to i64
  %240 = add i64 %239, 8
  %241 = inttoptr i64 %240 to i64*
  store i64* %241, i64** %230, align 8
  store i64 %222, i64* %238, align 8
  br label %242

242:                                              ; preds = %226, %237
  %243 = phi i64 [ %228, %226 ], [ %222, %237 ]
  %244 = add i64 %243, 27
  %245 = inttoptr i64 %244 to i32*
  %246 = load i32, i32* %245, align 4
  %247 = and i32 %246, 2147483640
  %248 = and i32 %246, 2
  %249 = icmp ne i32 %248, 0
  br label %250

250:                                              ; preds = %179, %242
  %251 = phi i1 [ %249, %242 ], [ false, %179 ]
  %252 = phi i32 [ %247, %242 ], [ 0, %179 ]
  %253 = call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %4, i1 zeroext false) #4
  %254 = add nsw i32 %253, %252
  %255 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %256 = call i64* @_ZN2v88internal7Factory6NewMapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %255, i16 zeroext %4, i32 %254, i8 zeroext 3, i32 0) #4
  %257 = load i64, i64* %2, align 8
  %258 = add i64 %257, 43
  %259 = inttoptr i64 %258 to i32*
  %260 = load i32, i32* %259, align 4
  %261 = and i32 %260, 2
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %311, label %263

263:                                              ; preds = %250
  %264 = and i64 %257, -4294967296
  %265 = add i64 %257, 35
  %266 = inttoptr i64 %265 to i32*
  %267 = load atomic i32, i32* %266 acquire, align 4
  %268 = zext i32 %267 to i64
  %269 = or i64 %264, %268
  %270 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %271 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %270, null
  br i1 %271, label %278, label %272

272:                                              ; preds = %263
  %273 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %270, i64 0, i32 0, i32 1
  %274 = load i8, i8* %273, align 8, !range !3
  %275 = icmp eq i8 %274, 0
  br i1 %275, label %278, label %276

276:                                              ; preds = %272
  %277 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %270, i64 0, i32 1, i64 0
  br label %286

278:                                              ; preds = %272, %263
  %279 = and i64 %257, -262144
  %280 = or i64 %279, 16
  %281 = inttoptr i64 %280 to i64*
  %282 = load i64, i64* %281, align 16
  %283 = add i64 %282, -41416
  %284 = inttoptr i64 %283 to %"class.v8::internal::Isolate"*
  %285 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %284, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %286

286:                                              ; preds = %278, %276
  %287 = phi i64* [ %285, %278 ], [ %277, %276 ]
  %288 = getelementptr inbounds i64, i64* %287, i64 4
  %289 = load i64, i64* %288, align 8
  %290 = trunc i64 %289 to i32
  %291 = icmp eq i32 %267, %290
  br i1 %291, label %296, label %292

292:                                              ; preds = %286
  %293 = add i64 %269, 27
  %294 = inttoptr i64 %293 to i32*
  %295 = load i32, i32* %294, align 4
  br label %296

296:                                              ; preds = %286, %292
  %297 = phi i32 [ %290, %286 ], [ %295, %292 ]
  %298 = load i64, i64* %181, align 8
  %299 = trunc i64 %298 to i32
  %300 = icmp eq i32 %297, %299
  br i1 %300, label %301, label %302, !prof !4

301:                                              ; preds = %296
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i64 0, i64 0)) #7
  unreachable

302:                                              ; preds = %296
  %303 = load i64, i64* %256, align 8
  %304 = add i64 %303, 9
  %305 = inttoptr i64 %304 to i8*
  %306 = load i8, i8* %305, align 1
  %307 = or i8 %306, 16
  store atomic volatile i8 %307, i8* %305 monotonic, align 1
  %308 = load i64, i64* %2, align 8
  %309 = add i64 %308, 43
  %310 = inttoptr i64 %309 to i32*
  br label %311

311:                                              ; preds = %250, %302
  %312 = phi i32* [ %259, %250 ], [ %310, %302 ]
  %313 = phi i64 [ %257, %250 ], [ %308, %302 ]
  %314 = load i32, i32* %312, align 4
  %315 = and i32 %314, 4
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %329, label %317

317:                                              ; preds = %311
  %318 = load i64, i64* %256, align 8
  %319 = add i64 %318, 9
  %320 = inttoptr i64 %319 to i8*
  %321 = load i8, i8* %320, align 1
  %322 = or i8 %321, 32
  store atomic volatile i8 %322, i8* %320 monotonic, align 1
  %323 = load i64, i64* %256, align 8
  %324 = add i64 %323, 11
  %325 = inttoptr i64 %324 to i32*
  %326 = load atomic i32, i32* %325 monotonic, align 4
  %327 = or i32 %326, 268435456
  store atomic volatile i32 %327, i32* %325 monotonic, align 4
  %328 = load i64, i64* %2, align 8
  br label %329

329:                                              ; preds = %311, %317
  %330 = phi i64 [ %313, %311 ], [ %328, %317 ]
  %331 = and i64 %330, -4294967296
  %332 = add i64 %330, 35
  %333 = inttoptr i64 %332 to i32*
  %334 = load atomic i32, i32* %333 acquire, align 4
  %335 = zext i32 %334 to i64
  %336 = or i64 %331, %335
  %337 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %338 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %337, null
  br i1 %338, label %345, label %339

339:                                              ; preds = %329
  %340 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %337, i64 0, i32 0, i32 1
  %341 = load i8, i8* %340, align 8, !range !3
  %342 = icmp eq i8 %341, 0
  br i1 %342, label %345, label %343

343:                                              ; preds = %339
  %344 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %337, i64 0, i32 1, i64 0
  br label %353

345:                                              ; preds = %339, %329
  %346 = and i64 %330, -262144
  %347 = or i64 %346, 16
  %348 = inttoptr i64 %347 to i64*
  %349 = load i64, i64* %348, align 16
  %350 = add i64 %349, -41416
  %351 = inttoptr i64 %350 to %"class.v8::internal::Isolate"*
  %352 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %351, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %353

353:                                              ; preds = %345, %343
  %354 = phi i64* [ %352, %345 ], [ %344, %343 ]
  %355 = getelementptr inbounds i64, i64* %354, i64 4
  %356 = load i64, i64* %355, align 8
  %357 = trunc i64 %356 to i32
  %358 = icmp eq i32 %334, %357
  br i1 %358, label %363, label %359

359:                                              ; preds = %353
  %360 = add i64 %336, 15
  %361 = inttoptr i64 %360 to i32*
  %362 = load i32, i32* %361, align 4
  br label %363

363:                                              ; preds = %353, %359
  %364 = phi i32 [ %357, %353 ], [ %362, %359 ]
  %365 = load i64, i64* %181, align 8
  %366 = trunc i64 %365 to i32
  %367 = icmp eq i32 %364, %366
  br i1 %367, label %379, label %368

368:                                              ; preds = %363
  %369 = load i64, i64* %256, align 8
  %370 = add i64 %369, 9
  %371 = inttoptr i64 %370 to i8*
  %372 = load i8, i8* %371, align 1
  %373 = or i8 %372, 4
  store atomic volatile i8 %373, i8* %371 monotonic, align 1
  %374 = load i64, i64* %256, align 8
  %375 = add i64 %374, 11
  %376 = inttoptr i64 %375 to i32*
  %377 = load atomic i32, i32* %376 monotonic, align 4
  %378 = or i32 %377, 268435456
  store atomic volatile i32 %378, i32* %376 monotonic, align 4
  br label %379

379:                                              ; preds = %363, %368
  %380 = load i64, i64* %2, align 8
  %381 = and i64 %380, -4294967296
  %382 = add i64 %380, 35
  %383 = inttoptr i64 %382 to i32*
  %384 = load atomic i32, i32* %383 acquire, align 4
  %385 = zext i32 %384 to i64
  %386 = or i64 %381, %385
  %387 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %388 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %387, null
  br i1 %388, label %395, label %389

389:                                              ; preds = %379
  %390 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %387, i64 0, i32 0, i32 1
  %391 = load i8, i8* %390, align 8, !range !3
  %392 = icmp eq i8 %391, 0
  br i1 %392, label %395, label %393

393:                                              ; preds = %389
  %394 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %387, i64 0, i32 1, i64 0
  br label %403

395:                                              ; preds = %389, %379
  %396 = and i64 %380, -262144
  %397 = or i64 %396, 16
  %398 = inttoptr i64 %397 to i64*
  %399 = load i64, i64* %398, align 16
  %400 = add i64 %399, -41416
  %401 = inttoptr i64 %400 to %"class.v8::internal::Isolate"*
  %402 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %401, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %403

403:                                              ; preds = %395, %393
  %404 = phi i64* [ %402, %395 ], [ %394, %393 ]
  %405 = getelementptr inbounds i64, i64* %404, i64 4
  %406 = load i64, i64* %405, align 8
  %407 = trunc i64 %406 to i32
  %408 = icmp eq i32 %384, %407
  br i1 %408, label %413, label %409

409:                                              ; preds = %403
  %410 = add i64 %386, 19
  %411 = inttoptr i64 %410 to i32*
  %412 = load i32, i32* %411, align 4
  br label %413

413:                                              ; preds = %403, %409
  %414 = phi i32 [ %407, %403 ], [ %412, %409 ]
  %415 = load i64, i64* %181, align 8
  %416 = trunc i64 %415 to i32
  %417 = icmp eq i32 %414, %416
  br i1 %417, label %424, label %418

418:                                              ; preds = %413
  %419 = load i64, i64* %256, align 8
  %420 = add i64 %419, 9
  %421 = inttoptr i64 %420 to i8*
  %422 = load i8, i8* %421, align 1
  %423 = or i8 %422, 8
  store atomic volatile i8 %423, i8* %421 monotonic, align 1
  br label %424

424:                                              ; preds = %413, %418
  %425 = load i64, i64* %2, align 8
  %426 = and i64 %425, -4294967296
  %427 = add i64 %425, 35
  %428 = inttoptr i64 %427 to i32*
  %429 = load atomic i32, i32* %428 acquire, align 4
  %430 = zext i32 %429 to i64
  %431 = or i64 %426, %430
  %432 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %433 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %432, null
  br i1 %433, label %440, label %434

434:                                              ; preds = %424
  %435 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %432, i64 0, i32 0, i32 1
  %436 = load i8, i8* %435, align 8, !range !3
  %437 = icmp eq i8 %436, 0
  br i1 %437, label %440, label %438

438:                                              ; preds = %434
  %439 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %432, i64 0, i32 1, i64 0
  br label %448

440:                                              ; preds = %434, %424
  %441 = and i64 %425, -262144
  %442 = or i64 %441, 16
  %443 = inttoptr i64 %442 to i64*
  %444 = load i64, i64* %443, align 16
  %445 = add i64 %444, -41416
  %446 = inttoptr i64 %445 to %"class.v8::internal::Isolate"*
  %447 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %446, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %448

448:                                              ; preds = %440, %438
  %449 = phi i64* [ %447, %440 ], [ %439, %438 ]
  %450 = getelementptr inbounds i64, i64* %449, i64 4
  %451 = load i64, i64* %450, align 8
  %452 = trunc i64 %451 to i32
  %453 = icmp eq i32 %429, %452
  br i1 %453, label %458, label %454

454:                                              ; preds = %448
  %455 = add i64 %431, 27
  %456 = inttoptr i64 %455 to i32*
  %457 = load i32, i32* %456, align 4
  br label %458

458:                                              ; preds = %448, %454
  %459 = phi i32 [ %452, %448 ], [ %457, %454 ]
  %460 = load i64, i64* %181, align 8
  %461 = trunc i64 %460 to i32
  %462 = icmp eq i32 %459, %461
  br i1 %462, label %483, label %463

463:                                              ; preds = %458
  %464 = load i64, i64* %256, align 8
  %465 = add i64 %464, 9
  %466 = inttoptr i64 %465 to i8*
  %467 = load i8, i8* %466, align 1
  %468 = or i8 %467, 2
  store atomic volatile i8 %468, i8* %466 monotonic, align 1
  %469 = load i64, i64* %256, align 8
  %470 = load i64, i64* %2, align 8
  %471 = add i64 %470, 43
  %472 = inttoptr i64 %471 to i32*
  %473 = load i32, i32* %472, align 4
  %474 = add i64 %469, 9
  %475 = inttoptr i64 %474 to i8*
  %476 = load i8, i8* %475, align 1
  %477 = and i8 %476, -65
  %478 = trunc i32 %473 to i8
  %479 = shl i8 %478, 5
  %480 = and i8 %479, 64
  %481 = or i8 %480, %477
  %482 = xor i8 %481, 64
  store atomic volatile i8 %482, i8* %475 monotonic, align 1
  br label %483

483:                                              ; preds = %458, %463
  br i1 %251, label %484, label %490

484:                                              ; preds = %483
  %485 = load i64, i64* %256, align 8
  %486 = add i64 %485, 10
  %487 = inttoptr i64 %486 to i8*
  %488 = load i8, i8* %487, align 1
  %489 = or i8 %488, 2
  store i8 %489, i8* %487, align 1
  br label %490

490:                                              ; preds = %484, %483
  %491 = inttoptr i64 %145 to i64*
  call void @_ZN2v88internal10JSFunction13SetInitialMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_3MapEEENS4_INS0_10HeapObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %22, i64* %256, i64* %491) #4
  br label %492

492:                                              ; preds = %19, %490
  %493 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 0
  %494 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %493, align 8
  %495 = icmp eq %"class.v8::internal::RuntimeCallStats"* %494, null
  br i1 %495, label %498, label %496, !prof !2

496:                                              ; preds = %492
  %497 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %494, %"class.v8::internal::RuntimeCallTimer"* %497) #4
  br label %498

498:                                              ; preds = %492, %496
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #4
  ret i64* %22
}

declare i64* @_ZN2v88internal20FunctionTemplateInfo29GetOrCreateSharedFunctionInfoEPNS0_7IsolateENS0_6HandleIS1_EENS0_11MaybeHandleINS0_4NameEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #2

declare void @_ZN2v88internal7Factory17JSFunctionBuilderC1EPNS0_7IsolateENS0_6HandleINS0_18SharedFunctionInfoEEENS5_INS0_7ContextEEE(%"class.v8::internal::Factory::JSFunctionBuilder"*, %"class.v8::internal::Isolate"*, i64*, i64*) unnamed_addr #2

declare i64* @_ZN2v88internal7Factory17JSFunctionBuilder5BuildEv(%"class.v8::internal::Factory::JSFunctionBuilder"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory20NewFunctionPrototypeENS0_6HandleINS0_10JSFunctionEEE(%"class.v8::internal::Factory"*, i64*) local_unnamed_addr #2

declare void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32) local_unnamed_addr #2

declare i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext, i1 zeroext) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

declare void @_ZN2v88internal10JSFunction13SetInitialMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_3MapEEENS4_INS0_10HeapObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*) local_unnamed_addr #2

declare void @_ZN2v88internal11SaveContextC1EPNS0_7IsolateE(%"class.v8::internal::SaveContext"*, %"class.v8::internal::Isolate"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_124ProbeInstantiationsCacheEPNS0_7IsolateENS0_6HandleINS0_13NativeContextEEEiNS1_11CachingModeE(%"class.v8::internal::Isolate"*, i64*, i32, i32) unnamed_addr #0 {
  %5 = icmp eq i32 %2, -2
  br i1 %5, label %169, label %6

6:                                                ; preds = %4
  %7 = icmp slt i32 %2, 1024
  br i1 %7, label %8, label %53

8:                                                ; preds = %6
  %9 = load i64, i64* %1, align 8
  %10 = and i64 %9, -4294967296
  %11 = add i64 %9, 283
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %10, %14
  %16 = shl i32 %2, 2
  %17 = sext i32 %16 to i64
  %18 = add nsw i64 %17, 7
  %19 = add i64 %18, %15
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %10, %22
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %25 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %24, align 8
  %26 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %8
  %28 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %25, i64 %23) #4
  %29 = load i64, i64* %28, align 8
  %30 = ptrtoint i64* %28 to i64
  br label %44

31:                                               ; preds = %8
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %35 = load i64*, i64** %34, align 8
  %36 = icmp eq i64* %33, %35
  br i1 %36, label %37, label %39

37:                                               ; preds = %31
  %38 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %39

39:                                               ; preds = %37, %31
  %40 = phi i64* [ %38, %37 ], [ %33, %31 ]
  %41 = ptrtoint i64* %40 to i64
  %42 = add i64 %41, 8
  %43 = inttoptr i64 %42 to i64*
  store i64* %43, i64** %32, align 8
  store i64 %23, i64* %40, align 8
  br label %44

44:                                               ; preds = %27, %39
  %45 = phi i64 [ %30, %27 ], [ %41, %39 ]
  %46 = phi i64 [ %29, %27 ], [ %23, %39 ]
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %48 = load i64, i64* %47, align 8
  %49 = trunc i64 %46 to i32
  %50 = trunc i64 %48 to i32
  %51 = icmp eq i32 %49, %50
  %52 = select i1 %51, i64 0, i64 %45
  br label %169

53:                                               ; preds = %6
  %54 = icmp eq i32 %3, 1
  %55 = icmp slt i32 %2, 1048576
  %56 = or i1 %55, %54
  br i1 %56, label %57, label %169

57:                                               ; preds = %53
  %58 = load i64, i64* %1, align 8
  %59 = and i64 %58, -4294967296
  %60 = add i64 %58, 731
  %61 = inttoptr i64 %60 to i32*
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = zext i32 %62 to i64
  %64 = or i64 %59, %63
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 134
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 7
  %70 = inttoptr i64 %69 to i64*
  %71 = load i64, i64* %70, align 1
  %72 = zext i32 %2 to i64
  %73 = xor i64 %71, %72
  %74 = xor i64 %73, -1
  %75 = shl i64 %73, 18
  %76 = add i64 %75, %74
  %77 = lshr i64 %76, 31
  %78 = xor i64 %77, %76
  %79 = mul i64 %78, 21
  %80 = lshr i64 %79, 11
  %81 = xor i64 %80, %79
  %82 = mul i64 %81, 65
  %83 = lshr i64 %82, 22
  %84 = xor i64 %83, %82
  %85 = trunc i64 %84 to i32
  %86 = add i64 %64, 15
  %87 = inttoptr i64 %86 to i32*
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = ashr i32 %88, 1
  %90 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i32 %89, -1
  %95 = and i32 %94, 1073741823
  %96 = and i32 %95, %85
  %97 = shl i32 %96, 3
  %98 = add i32 %97, 12
  %99 = sext i32 %98 to i64
  %100 = add i64 %64, 7
  %101 = add i64 %100, %99
  %102 = inttoptr i64 %101 to i32*
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = trunc i64 %91 to i32
  %105 = icmp eq i32 %103, %104
  br i1 %105, label %169, label %106

106:                                              ; preds = %57
  %107 = trunc i64 %93 to i32
  br label %108

108:                                              ; preds = %129, %106
  %109 = phi i32 [ %103, %106 ], [ %138, %129 ]
  %110 = phi i32 [ %96, %106 ], [ %132, %129 ]
  %111 = phi i32 [ 1, %106 ], [ %130, %129 ]
  %112 = zext i32 %109 to i64
  %113 = or i64 %66, %112
  %114 = icmp eq i32 %109, %107
  br i1 %114, label %129, label %115

115:                                              ; preds = %108
  %116 = and i64 %112, 1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %121

118:                                              ; preds = %115
  %119 = ashr i32 %109, 1
  %120 = sitofp i32 %119 to double
  br label %125

121:                                              ; preds = %115
  %122 = add i64 %113, 3
  %123 = inttoptr i64 %122 to double*
  %124 = load double, double* %123, align 1
  br label %125

125:                                              ; preds = %121, %118
  %126 = phi double [ %120, %118 ], [ %124, %121 ]
  %127 = fptoui double %126 to i32
  %128 = icmp eq i32 %127, %2
  br i1 %128, label %140, label %129

129:                                              ; preds = %125, %108
  %130 = add i32 %111, 1
  %131 = add i32 %111, %110
  %132 = and i32 %131, %94
  %133 = shl i32 %132, 3
  %134 = add i32 %133, 12
  %135 = sext i32 %134 to i64
  %136 = add i64 %100, %135
  %137 = inttoptr i64 %136 to i32*
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = icmp eq i32 %138, %104
  br i1 %139, label %169, label %108

140:                                              ; preds = %125
  %141 = shl i32 %110, 3
  %142 = add i32 %141, 16
  %143 = or i32 %142, 7
  %144 = sext i32 %143 to i64
  %145 = add i64 %64, %144
  %146 = inttoptr i64 %145 to i32*
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = zext i32 %147 to i64
  %149 = or i64 %59, %148
  %150 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %151 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %150, align 8
  %152 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %151, null
  br i1 %152, label %156, label %153

153:                                              ; preds = %140
  %154 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %151, i64 %149) #4
  %155 = ptrtoint i64* %154 to i64
  br label %169

156:                                              ; preds = %140
  %157 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %158 = load i64*, i64** %157, align 8
  %159 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %160 = load i64*, i64** %159, align 8
  %161 = icmp eq i64* %158, %160
  br i1 %161, label %162, label %164

162:                                              ; preds = %156
  %163 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %164

164:                                              ; preds = %162, %156
  %165 = phi i64* [ %163, %162 ], [ %158, %156 ]
  %166 = ptrtoint i64* %165 to i64
  %167 = add i64 %166, 8
  %168 = inttoptr i64 %167 to i64*
  store i64* %168, i64** %157, align 8
  store i64 %149, i64* %165, align 8
  br label %169

169:                                              ; preds = %129, %164, %153, %44, %57, %53, %4
  %170 = phi i64 [ 0, %4 ], [ 0, %53 ], [ 0, %57 ], [ %52, %44 ], [ %155, %153 ], [ %166, %164 ], [ 0, %129 ]
  %171 = inttoptr i64 %170 to i64*
  ret i64* %171
}

declare i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i64*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_112_GLOBAL__N_120GetInstancePrototypeEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*) unnamed_addr #0 {
  %3 = alloca %"class.v8::internal::LookupIterator", align 8
  %4 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31
  %5 = bitcast %"struct.v8::internal::HandleScopeData"* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %8 = bitcast i64** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %10, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, -4294967296
  %16 = add i64 %14, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %15, %19
  %21 = add i64 %20, 19
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %15, %24
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %27 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %26, align 8
  %28 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %27, null
  %29 = inttoptr i64 %6 to i64*
  %30 = inttoptr i64 %9 to i64*
  br i1 %28, label %33, label %31

31:                                               ; preds = %2
  %32 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %27, i64 %25) #4
  br label %43

33:                                               ; preds = %2
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %35 = icmp eq i64* %29, %30
  br i1 %35, label %36, label %38

36:                                               ; preds = %33
  %37 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %38

38:                                               ; preds = %36, %33
  %39 = phi i64* [ %37, %36 ], [ %29, %33 ]
  %40 = ptrtoint i64* %39 to i64
  %41 = add i64 %40, 8
  %42 = inttoptr i64 %41 to i64*
  store i64* %42, i64** %34, align 8
  store i64 %25, i64* %39, align 8
  br label %43

43:                                               ; preds = %31, %38
  %44 = phi i64* [ %32, %31 ], [ %39, %38 ]
  %45 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119InstantiateFunctionEPNS0_7IsolateENS0_6HandleINS0_13NativeContextEEENS4_INS0_20FunctionTemplateInfoEEENS0_11MaybeHandleINS0_4NameEEE(%"class.v8::internal::Isolate"* %0, i64* %44, i64* %1, i64* null) #4
  %46 = icmp eq i64* %45, null
  br i1 %46, label %160, label %47

47:                                               ; preds = %43
  %48 = ptrtoint i64* %45 to i64
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 408
  %50 = bitcast %"class.v8::internal::LookupIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %50) #4
  %51 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 0
  %52 = icmp eq i64* %49, null
  br i1 %52, label %53, label %57

53:                                               ; preds = %47
  %54 = load i64, i64* null, align 536870912
  %55 = add i64 %54, -1
  %56 = inttoptr i64 %55 to i32*
  br label %78

57:                                               ; preds = %47
  %58 = load i64, i64* %49, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %58, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i64 %60, 4294967295
  %65 = icmp eq i64 %64, 0
  tail call void @llvm.assume(i1 %65) #4
  %66 = zext i32 %63 to i64
  %67 = or i64 %60, %66
  %68 = add i64 %67, 7
  %69 = inttoptr i64 %68 to i16*
  %70 = load atomic i16, i16* %69 monotonic, align 2
  %71 = icmp eq i16 %70, 64
  br i1 %71, label %72, label %78

72:                                               ; preds = %57
  %73 = add i64 %58, 7
  %74 = inttoptr i64 %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = and i32 %75, 1
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %53, %72, %57
  %79 = phi i32* [ %56, %53 ], [ %62, %72 ], [ %62, %57 ]
  %80 = phi i64 [ %54, %53 ], [ %58, %72 ], [ %58, %57 ]
  br label %81

81:                                               ; preds = %78, %72
  %82 = phi i32* [ %79, %78 ], [ %62, %72 ]
  %83 = phi i64 [ %80, %78 ], [ %58, %72 ]
  %84 = phi i32 [ 3, %78 ], [ 0, %72 ]
  store i32 %84, i32* %51, align 8
  %85 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 1
  store i32 4, i32* %85, align 4
  %86 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 2
  store i8 0, i8* %86, align 8
  %87 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 3
  store i32 0, i32* %87, align 4
  %88 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 4, i32 0
  store i32 0, i32* %88, align 8
  %89 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %89, align 8
  %90 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 6, i32 0, i32 0
  store i64* %49, i64** %90, align 8
  %91 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %91, align 8
  %92 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 8, i32 0, i32 0
  store i64* %45, i64** %92, align 8
  %93 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %93, align 8
  %94 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 10
  %95 = bitcast %"class.v8::internal::Handle.1144"* %94 to i64*
  store i64 %48, i64* %95, align 8
  %96 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 11
  %97 = bitcast i64* %96 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 -1, i64 16, i1 false) #4
  %98 = and i64 %83, -4294967296
  %99 = load atomic i32, i32* %82 monotonic, align 4
  %100 = zext i32 %99 to i64
  %101 = or i64 %98, %100
  %102 = add i64 %101, 7
  %103 = inttoptr i64 %102 to i16*
  %104 = load atomic i16, i16* %103 monotonic, align 2
  %105 = and i16 %104, -32
  %106 = icmp eq i16 %105, 32
  br i1 %106, label %107, label %111

107:                                              ; preds = %81
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %109 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %108, align 8
  %110 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %109, %"class.v8::internal::Isolate"* %0, i64* %49) #4
  br label %111

111:                                              ; preds = %81, %107
  %112 = phi i64* [ %110, %107 ], [ %49, %81 ]
  store i64* %112, i64** %90, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %3) #4
  %113 = load i32, i32* %85, align 4
  %114 = icmp eq i32 %113, 4
  br i1 %114, label %115, label %120

115:                                              ; preds = %111
  %116 = bitcast %"class.v8::internal::Isolate"** %89 to %"class.v8::internal::Factory"**
  %117 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %116, align 8
  %118 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %117, i64 160
  %119 = bitcast %"class.v8::internal::Factory"* %118 to i64*
  br label %122

120:                                              ; preds = %111
  %121 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %3, i1 zeroext false) #4
  br label %122

122:                                              ; preds = %115, %120
  %123 = phi i64* [ %121, %120 ], [ %119, %115 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %50) #4
  %124 = icmp eq i64* %123, null
  br i1 %124, label %160, label %125

125:                                              ; preds = %122
  %126 = load i64, i64* %123, align 8
  %127 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %4, i64 0, i32 0
  %128 = load i64*, i64** %127, align 8
  store i64 %6, i64* %5, align 8
  %129 = load i32, i32* %10, align 8
  %130 = add nsw i32 %129, -1
  store i32 %130, i32* %10, align 8
  %131 = load i64*, i64** %7, align 8
  %132 = icmp eq i64* %131, %30
  br i1 %132, label %135, label %133

133:                                              ; preds = %125
  store i64* %30, i64** %7, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  %134 = load i64*, i64** %127, align 8
  br label %135

135:                                              ; preds = %133, %125
  %136 = phi i64* [ %134, %133 ], [ %29, %125 ]
  %137 = phi i64* [ %30, %133 ], [ %128, %125 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %136, i64* %137) #4
  %138 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %26, align 8
  %139 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %138, null
  br i1 %139, label %142, label %140

140:                                              ; preds = %135
  %141 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %138, i64 %126) #4
  br label %154

142:                                              ; preds = %135
  %143 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %144 = load i64*, i64** %143, align 8
  %145 = load i64*, i64** %7, align 8
  %146 = icmp eq i64* %144, %145
  br i1 %146, label %147, label %149

147:                                              ; preds = %142
  %148 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %149

149:                                              ; preds = %147, %142
  %150 = phi i64* [ %148, %147 ], [ %144, %142 ]
  %151 = ptrtoint i64* %150 to i64
  %152 = add i64 %151, 8
  %153 = inttoptr i64 %152 to i64*
  store i64* %153, i64** %143, align 8
  store i64 %126, i64* %150, align 8
  br label %154

154:                                              ; preds = %140, %149
  %155 = phi i64* [ %141, %140 ], [ %150, %149 ]
  %156 = load i64, i64* %5, align 8
  %157 = load i64, i64* %8, align 8
  %158 = load i32, i32* %10, align 8
  %159 = add nsw i32 %158, 1
  store i32 %159, i32* %10, align 8
  br label %160

160:                                              ; preds = %154, %122, %43
  %161 = phi i64 [ %6, %43 ], [ %156, %154 ], [ %6, %122 ]
  %162 = phi i64 [ %9, %43 ], [ %157, %154 ], [ %9, %122 ]
  %163 = phi i64* [ null, %43 ], [ %155, %154 ], [ null, %122 ]
  %164 = icmp eq %"class.v8::internal::Isolate"* %0, null
  br i1 %164, label %179, label %165

165:                                              ; preds = %160
  %166 = inttoptr i64 %161 to i64*
  %167 = inttoptr i64 %162 to i64*
  %168 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %4, i64 0, i32 0
  %169 = load i64*, i64** %168, align 8
  store i64 %161, i64* %5, align 8
  %170 = load i32, i32* %10, align 8
  %171 = add nsw i32 %170, -1
  store i32 %171, i32* %10, align 8
  %172 = load i64*, i64** %7, align 8
  %173 = icmp eq i64* %172, %167
  br i1 %173, label %176, label %174

174:                                              ; preds = %165
  store i64* %167, i64** %7, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %0) #4
  %175 = load i64*, i64** %168, align 8
  br label %176

176:                                              ; preds = %174, %165
  %177 = phi i64* [ %175, %174 ], [ %166, %165 ]
  %178 = phi i64* [ %167, %174 ], [ %169, %165 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %177, i64* %178) #4
  br label %179

179:                                              ; preds = %160, %176
  ret i64* %163
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal12_GLOBAL__N_126CacheTemplateInstantiationEPNS0_7IsolateENS0_6HandleINS0_13NativeContextEEENS4_INS0_12TemplateInfoEEENS1_11CachingModeENS4_INS0_8JSObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*, i32, i64*) unnamed_addr #0 {
  %6 = load i64, i64* %2, align 8
  %7 = add i64 %6, 7
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = ashr i32 %9, 1
  %11 = icmp eq i32 %10, -2
  br i1 %11, label %12, label %24

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  %14 = ptrtoint %"class.v8::internal::Heap"* %13 to i64
  %15 = add i64 %14, -41416
  %16 = inttoptr i64 %15 to %"class.v8::internal::Isolate"*
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 0, i32 7, i32 0, i64 665
  %18 = load i64, i64* %17, align 8
  %19 = trunc i64 %18 to i32
  %20 = ashr i32 %19, 1
  %21 = add nsw i32 %20, 1
  %22 = sext i32 %21 to i64
  %23 = shl nsw i64 %22, 1
  store i64 %23, i64* %17, align 8
  br label %24

24:                                               ; preds = %12, %5
  %25 = phi i32 [ %20, %12 ], [ %10, %5 ]
  %26 = icmp slt i32 %25, 1024
  br i1 %26, label %27, label %92

27:                                               ; preds = %24
  %28 = load i64, i64* %1, align 8
  %29 = and i64 %28, -4294967296
  %30 = add i64 %28, 283
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %29, %33
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %36 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %35, align 8
  %37 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %27
  %39 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %36, i64 %34) #4
  br label %53

40:                                               ; preds = %27
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %44 = load i64*, i64** %43, align 8
  %45 = icmp eq i64* %42, %44
  br i1 %45, label %46, label %48

46:                                               ; preds = %40
  %47 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %48

48:                                               ; preds = %46, %40
  %49 = phi i64* [ %47, %46 ], [ %42, %40 ]
  %50 = ptrtoint i64* %49 to i64
  %51 = add i64 %50, 8
  %52 = inttoptr i64 %51 to i64*
  store i64* %52, i64** %41, align 8
  store i64 %34, i64* %49, align 8
  br label %53

53:                                               ; preds = %38, %48
  %54 = phi i64* [ %39, %38 ], [ %49, %48 ]
  %55 = tail call i64* @_ZN2v88internal10FixedArray10SetAndGrowEPNS0_7IsolateENS0_6HandleIS1_EEiNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %54, i32 %25, i64* %4) #4
  %56 = load i64, i64* %55, align 8
  %57 = load i64, i64* %54, align 8
  %58 = trunc i64 %56 to i32
  %59 = trunc i64 %57 to i32
  %60 = icmp eq i32 %58, %59
  br i1 %60, label %90, label %61

61:                                               ; preds = %53
  %62 = load i64, i64* %1, align 8
  %63 = add i64 %62, 283
  %64 = inttoptr i64 %63 to i32*
  store atomic volatile i32 %58, i32* %64 release, align 4
  %65 = and i64 %56, 1
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %90, label %67

67:                                               ; preds = %61
  %68 = and i64 %62, -262144
  %69 = or i64 %68, 8
  %70 = inttoptr i64 %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = and i64 %71, 262144
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %67
  %75 = or i64 %68, 16
  %76 = inttoptr i64 %75 to %"class.v8::internal::Heap"**
  %77 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %76, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %77, i64 %62, i64 %63, i64 %56) #4
  br label %78

78:                                               ; preds = %74, %67
  %79 = and i64 %56, -262144
  %80 = or i64 %79, 8
  %81 = inttoptr i64 %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = and i64 %82, 24
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %78
  %86 = load i64, i64* %70, align 8
  %87 = and i64 %86, 24
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %85
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %62, i64 %63, i64 %56) #4
  br label %90

90:                                               ; preds = %53, %89, %85, %78, %61
  %91 = shl nsw i32 %25, 1
  br label %161

92:                                               ; preds = %24
  %93 = icmp eq i32 %3, 1
  %94 = icmp slt i32 %25, 1048576
  %95 = or i1 %93, %94
  br i1 %95, label %96, label %161

96:                                               ; preds = %92
  %97 = load i64, i64* %1, align 8
  %98 = and i64 %97, -4294967296
  %99 = add i64 %97, 731
  %100 = inttoptr i64 %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = zext i32 %101 to i64
  %103 = or i64 %98, %102
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %105 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %104, align 8
  %106 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %105, null
  br i1 %106, label %109, label %107

107:                                              ; preds = %96
  %108 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %105, i64 %103) #4
  br label %122

109:                                              ; preds = %96
  %110 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %111 = load i64*, i64** %110, align 8
  %112 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %113 = load i64*, i64** %112, align 8
  %114 = icmp eq i64* %111, %113
  br i1 %114, label %115, label %117

115:                                              ; preds = %109
  %116 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %117

117:                                              ; preds = %115, %109
  %118 = phi i64* [ %116, %115 ], [ %111, %109 ]
  %119 = ptrtoint i64* %118 to i64
  %120 = add i64 %119, 8
  %121 = inttoptr i64 %120 to i64*
  store i64* %121, i64** %110, align 8
  store i64 %103, i64* %118, align 8
  br label %122

122:                                              ; preds = %107, %117
  %123 = phi i64* [ %108, %107 ], [ %118, %117 ]
  %124 = tail call i64* @_ZN2v88internal22SimpleNumberDictionary3SetEPNS0_7IsolateENS0_6HandleIS1_EEjNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %123, i32 %25, i64* %4) #4
  %125 = load i64, i64* %124, align 8
  %126 = load i64, i64* %123, align 8
  %127 = trunc i64 %125 to i32
  %128 = trunc i64 %126 to i32
  %129 = icmp eq i32 %127, %128
  br i1 %129, label %159, label %130

130:                                              ; preds = %122
  %131 = load i64, i64* %1, align 8
  %132 = add i64 %131, 731
  %133 = inttoptr i64 %132 to i32*
  store atomic volatile i32 %127, i32* %133 release, align 4
  %134 = and i64 %125, 1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %159, label %136

136:                                              ; preds = %130
  %137 = and i64 %131, -262144
  %138 = or i64 %137, 8
  %139 = inttoptr i64 %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = and i64 %140, 262144
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %147, label %143

143:                                              ; preds = %136
  %144 = or i64 %137, 16
  %145 = inttoptr i64 %144 to %"class.v8::internal::Heap"**
  %146 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %145, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %146, i64 %131, i64 %132, i64 %125) #4
  br label %147

147:                                              ; preds = %143, %136
  %148 = and i64 %125, -262144
  %149 = or i64 %148, 8
  %150 = inttoptr i64 %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = and i64 %151, 24
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %159, label %154

154:                                              ; preds = %147
  %155 = load i64, i64* %139, align 8
  %156 = and i64 %155, 24
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %154
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %131, i64 %132, i64 %125) #4
  br label %159

159:                                              ; preds = %122, %158, %154, %147, %130
  %160 = shl nsw i32 %25, 1
  br label %161

161:                                              ; preds = %92, %159, %90
  %162 = phi i32 [ %160, %159 ], [ %91, %90 ], [ -2, %92 ]
  %163 = load i64, i64* %2, align 8
  %164 = add i64 %163, 7
  %165 = inttoptr i64 %164 to i32*
  store atomic volatile i32 %162, i32* %165 monotonic, align 4
  ret void
}

; Function Attrs: nounwind
declare void @llvm.assume(i1) #4

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64*, i32) unnamed_addr #5 comdat align 2 {
  %8 = ptrtoint i64* %5 to i64
  %9 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 0
  %10 = icmp eq i64* %3, null
  br i1 %10, label %32, label %11

11:                                               ; preds = %7
  %12 = load i64, i64* %3, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %12, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i64 %14, 4294967295
  %19 = icmp eq i64 %18, 0
  tail call void @llvm.assume(i1 %19) #4
  %20 = zext i32 %17 to i64
  %21 = or i64 %14, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = icmp eq i16 %24, 64
  br i1 %25, label %26, label %32

26:                                               ; preds = %11
  %27 = add i64 %12, 7
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %26, %11, %7
  br label %33

33:                                               ; preds = %26, %32
  %34 = phi i32 [ %6, %32 ], [ 0, %26 ]
  store i32 %34, i32* %9, align 8
  %35 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 4, i32* %35, align 4
  %36 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 2
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 3
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  store i64* %3, i64** %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  store i64* %2, i64** %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 10
  %45 = bitcast %"class.v8::internal::Handle.1144"* %44 to i64*
  store i64 %8, i64* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  store i64 %4, i64* %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 -1, i64* %47, align 8
  %48 = icmp eq i64 %4, -1
  br i1 %48, label %115, label %49

49:                                               ; preds = %33
  %50 = icmp ugt i64 %4, 4294967294
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %10, label %114, label %99

53:                                               ; preds = %49
  %54 = load i64, i64* %5, align 8
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %10, label %72, label %78

59:                                               ; preds = %53
  %60 = and i64 %54, -4294967296
  %61 = add i64 %54, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %60, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = icmp eq i16 %68, 1080
  %70 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %69, label %98, label %71

71:                                               ; preds = %59
  br i1 %10, label %72, label %78

72:                                               ; preds = %57, %71
  %73 = phi %"class.v8::internal::Handle.1143"* [ %58, %57 ], [ %70, %71 ]
  %74 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::Factory"*
  %75 = tail call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %74, i64 %4, i1 zeroext true) #4
  %76 = ptrtoint i64* %75 to i64
  %77 = bitcast %"class.v8::internal::Handle.1143"* %73 to i64*
  store i64 %76, i64* %77, align 8
  br label %78

78:                                               ; preds = %57, %72, %71
  %79 = phi i64* [ %3, %57 ], [ %75, %72 ], [ %3, %71 ]
  %80 = load i64, i64* %79, align 8
  %81 = and i64 %80, -4294967296
  %82 = add i64 %80, -1
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %81, %85
  %87 = add i64 %86, 7
  %88 = inttoptr i64 %87 to i16*
  %89 = load atomic i16, i16* %88 monotonic, align 2
  %90 = and i16 %89, -32
  %91 = icmp eq i16 %90, 32
  br i1 %91, label %92, label %96

92:                                               ; preds = %78
  %93 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %94 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %93, align 8
  %95 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %94, %"class.v8::internal::Isolate"* %1, i64* %79) #4
  br label %96

96:                                               ; preds = %78, %92
  %97 = phi i64* [ %95, %92 ], [ %79, %78 ]
  store i64* %97, i64** %40, align 8
  br label %114

98:                                               ; preds = %59
  br i1 %10, label %114, label %99

99:                                               ; preds = %51, %98
  %100 = phi %"class.v8::internal::Handle.1143"* [ %52, %51 ], [ %70, %98 ]
  %101 = load i64, i64* %3, align 8
  %102 = and i64 %101, -4294967296
  %103 = add i64 %101, -1
  %104 = inttoptr i64 %103 to i32*
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = zext i32 %105 to i64
  %107 = or i64 %102, %106
  %108 = add i64 %107, 7
  %109 = inttoptr i64 %108 to i16*
  %110 = load atomic i16, i16* %109 monotonic, align 2
  %111 = icmp ult i16 %110, 32
  br i1 %111, label %114, label %112

112:                                              ; preds = %99
  %113 = bitcast %"class.v8::internal::Handle.1143"* %100 to i64*
  store i64 0, i64* %113, align 8
  br label %114

114:                                              ; preds = %98, %51, %99, %112, %96
  tail call void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"* %0) #4
  br label %134

115:                                              ; preds = %33
  %116 = load i64, i64* %3, align 8
  %117 = and i64 %116, -4294967296
  %118 = add i64 %116, -1
  %119 = inttoptr i64 %118 to i32*
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = zext i32 %120 to i64
  %122 = or i64 %117, %121
  %123 = add i64 %122, 7
  %124 = inttoptr i64 %123 to i16*
  %125 = load atomic i16, i16* %124 monotonic, align 2
  %126 = and i16 %125, -32
  %127 = icmp eq i16 %126, 32
  br i1 %127, label %128, label %132

128:                                              ; preds = %115
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %130 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %129, align 8
  %131 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %130, %"class.v8::internal::Isolate"* %1, i64* %3) #4
  br label %132

132:                                              ; preds = %115, %128
  %133 = phi i64* [ %131, %128 ], [ %3, %115 ]
  store i64* %133, i64** %40, align 8
  tail call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* %0) #4
  br label %134

134:                                              ; preds = %132, %114
  ret void
}

declare i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"*, i64, i1 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #2

declare void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal10FixedArray10SetAndGrowEPNS0_7IsolateENS0_6HandleIS1_EEiNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i32, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal22SimpleNumberDictionary3SetEPNS0_7IsolateENS0_6HandleIS1_EEjNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i32, i64*) local_unnamed_addr #2

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #2

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal12_GLOBAL__N_123AccessCheckDisableScopeC2EPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::AccessCheckDisableScope"* nocapture, %"class.v8::internal::Isolate"*, i64*) unnamed_addr #0 align 2 {
  %4 = ptrtoint i64* %2 to i64
  %5 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::AccessCheckDisableScope", %"class.v8::internal::(anonymous namespace)::AccessCheckDisableScope"* %0, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::AccessCheckDisableScope", %"class.v8::internal::(anonymous namespace)::AccessCheckDisableScope"* %0, i64 0, i32 1
  %7 = load i64, i64* %2, align 8
  %8 = and i64 %7, -4294967296
  %9 = add i64 %7, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = add i64 %13, 9
  %15 = inttoptr i64 %14 to i8*
  %16 = load atomic i8, i8* %15 monotonic, align 1
  %17 = and i8 %16, 32
  %18 = icmp eq i8 %17, 0
  %19 = lshr exact i8 %17, 5
  store i8 %19, i8* %6, align 8
  %20 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::AccessCheckDisableScope", %"class.v8::internal::(anonymous namespace)::AccessCheckDisableScope"* %0, i64 0, i32 2
  %21 = bitcast %"class.v8::internal::Handle"* %20 to i64*
  store i64 %4, i64* %21, align 8
  br i1 %18, label %56, label %22

22:                                               ; preds = %3
  %23 = load i64, i64* %2, align 8
  %24 = and i64 %23, -4294967296
  %25 = add i64 %23, -1
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %24, %28
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %31 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %30, align 8
  %32 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %22
  %34 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %31, i64 %29) #4
  br label %48

35:                                               ; preds = %22
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %39 = load i64*, i64** %38, align 8
  %40 = icmp eq i64* %37, %39
  br i1 %40, label %41, label %43

41:                                               ; preds = %35
  %42 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #4
  br label %43

43:                                               ; preds = %41, %35
  %44 = phi i64* [ %42, %41 ], [ %37, %35 ]
  %45 = ptrtoint i64* %44 to i64
  %46 = add i64 %45, 8
  %47 = inttoptr i64 %46 to i64*
  store i64* %47, i64** %36, align 8
  store i64 %29, i64* %44, align 8
  br label %48

48:                                               ; preds = %33, %43
  %49 = phi i64* [ %34, %33 ], [ %44, %43 ]
  %50 = tail call i64* @_ZN2v88internal3Map4CopyEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"* %1, i64* %49, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0)) #4
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %51, 9
  %53 = inttoptr i64 %52 to i8*
  %54 = load i8, i8* %53, align 1
  %55 = and i8 %54, -33
  store atomic volatile i8 %55, i8* %53 monotonic, align 1
  tail call void @_ZN2v88internal8JSObject12MigrateToMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_3MapEEEi(%"class.v8::internal::Isolate"* %1, i64* %2, i64* %50, i32 0) #4
  br label %56

56:                                               ; preds = %3, %48
  ret void
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #2

declare i32 @_ZN2v88internal12AccessorInfo12AppendUniqueEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_10FixedArrayEEEi(%"class.v8::internal::Isolate"*, i64*, i64*, i32) local_unnamed_addr #2

declare i64* @_ZN2v88internal8JSObject11SetAccessorENS0_6HandleIS1_EENS2_INS0_4NameEEENS2_INS0_12AccessorInfoEEENS0_18PropertyAttributesE(i64*, i64*, i64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_118DefineDataPropertyEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32) unnamed_addr #0 {
  %6 = alloca %"class.v8::internal::String", align 8
  %7 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %8 = alloca %"class.v8::internal::LookupIterator", align 8
  %9 = load i64, i64* %3, align 8
  %10 = and i64 %9, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %68, label %12

12:                                               ; preds = %5
  %13 = and i64 %9, -4294967296
  %14 = add i64 %9, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %13, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = icmp eq i16 %21, 83
  br i1 %22, label %23, label %58

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = and i64 %25, -4294967296
  %27 = add i64 %25, -1
  %28 = inttoptr i64 %27 to i32*
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %26, %30
  %32 = add i64 %31, 19
  %33 = inttoptr i64 %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %26, %35
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %38 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %37, align 8
  %39 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %23
  %41 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %38, i64 %36) #4
  br label %55

42:                                               ; preds = %23
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %46 = load i64*, i64** %45, align 8
  %47 = icmp eq i64* %44, %46
  br i1 %47, label %48, label %50

48:                                               ; preds = %42
  %49 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %50

50:                                               ; preds = %48, %42
  %51 = phi i64* [ %49, %48 ], [ %44, %42 ]
  %52 = ptrtoint i64* %51 to i64
  %53 = add i64 %52, 8
  %54 = inttoptr i64 %53 to i64*
  store i64* %54, i64** %43, align 8
  store i64 %36, i64* %51, align 8
  br label %55

55:                                               ; preds = %40, %50
  %56 = phi i64* [ %41, %40 ], [ %51, %50 ]
  %57 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119InstantiateFunctionEPNS0_7IsolateENS0_6HandleINS0_13NativeContextEEENS4_INS0_20FunctionTemplateInfoEEENS0_11MaybeHandleINS0_4NameEEE(%"class.v8::internal::Isolate"* %0, i64* %56, i64* %3, i64* %2) #4
  br label %68

58:                                               ; preds = %12
  %59 = load atomic i32, i32* %15 monotonic, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %13, %60
  %62 = add i64 %61, 7
  %63 = inttoptr i64 %62 to i16*
  %64 = load atomic i16, i16* %63 monotonic, align 2
  %65 = icmp eq i16 %64, 84
  br i1 %65, label %66, label %68

66:                                               ; preds = %58
  %67 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_117InstantiateObjectEPNS0_7IsolateENS0_6HandleINS0_18ObjectTemplateInfoEEENS4_INS0_10JSReceiverEEEb(%"class.v8::internal::Isolate"* %0, i64* %3, i64* null, i1 zeroext false) #4
  br label %68

68:                                               ; preds = %5, %58, %55, %66
  %69 = phi i64* [ %57, %55 ], [ %67, %66 ], [ %3, %58 ], [ %3, %5 ]
  %70 = icmp eq i64* %69, null
  br i1 %70, label %137, label %71

71:                                               ; preds = %68
  %72 = bitcast %"class.v8::internal::LookupIterator::Key"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #4
  %73 = ptrtoint i64* %2 to i64
  %74 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %7, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %74, align 8
  %75 = load i64, i64* %2, align 8
  %76 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %7, i64 0, i32 1
  %77 = and i64 %75, -4294967296
  %78 = add i64 %75, -1
  %79 = inttoptr i64 %78 to i32*
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = zext i32 %80 to i64
  %82 = or i64 %77, %81
  %83 = add i64 %82, 7
  %84 = inttoptr i64 %83 to i16*
  %85 = load atomic i16, i16* %84 monotonic, align 2
  %86 = icmp ult i16 %85, 64
  %87 = bitcast %"class.v8::internal::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #4
  br i1 %86, label %88, label %102

88:                                               ; preds = %71
  %89 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %75, i64* %89, align 8
  %90 = add i64 %75, 3
  %91 = inttoptr i64 %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = and i32 %92, -536870910
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %99

95:                                               ; preds = %88
  %96 = lshr i32 %92, 2
  %97 = and i32 %96, 16777215
  %98 = zext i32 %97 to i64
  store i64 %98, i64* %76, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #4
  br label %110

99:                                               ; preds = %88
  %100 = and i32 %92, 3
  %101 = icmp eq i32 %100, 2
  br i1 %101, label %102, label %103

102:                                              ; preds = %99, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #4
  br label %112

103:                                              ; preds = %99
  %104 = call zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"* nonnull %6, i64* %76) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #4
  br i1 %104, label %110, label %105

105:                                              ; preds = %103
  %106 = load i64, i64* %2, align 8
  %107 = and i64 %106, -4294967296
  %108 = add i64 %106, -1
  %109 = inttoptr i64 %108 to i32*
  br label %112

110:                                              ; preds = %103, %95
  %111 = bitcast %"class.v8::internal::LookupIterator::Key"* %7 to i64*
  store i64 %73, i64* %111, align 8
  br label %129

112:                                              ; preds = %105, %102
  %113 = phi i32* [ %109, %105 ], [ %79, %102 ]
  %114 = phi i64 [ %107, %105 ], [ %77, %102 ]
  store i64 -1, i64* %76, align 8
  %115 = load atomic i32, i32* %113 monotonic, align 4
  %116 = zext i32 %115 to i64
  %117 = or i64 %114, %116
  %118 = add i64 %117, 7
  %119 = inttoptr i64 %118 to i16*
  %120 = load atomic i16, i16* %119 monotonic, align 2
  %121 = and i16 %120, -32
  %122 = icmp eq i16 %121, 32
  br i1 %122, label %123, label %127

123:                                              ; preds = %112
  %124 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %125 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %124, align 8
  %126 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %125, %"class.v8::internal::Isolate"* %0, i64* %2) #4
  br label %127

127:                                              ; preds = %123, %112
  %128 = phi i64* [ %126, %123 ], [ %2, %112 ]
  store i64* %128, i64** %74, align 8
  br label %129

129:                                              ; preds = %110, %127
  %130 = phi i64* [ %2, %110 ], [ %128, %127 ]
  %131 = bitcast %"class.v8::internal::LookupIterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %131) #4
  %132 = load i64, i64* %76, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %8, %"class.v8::internal::Isolate"* %0, i64* %1, i64* %130, i64 %132, i64* %1, i32 0) #4
  %133 = call i16 @_ZN2v88internal6Object15AddDataPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EENS0_18PropertyAttributesENS_5MaybeINS0_11ShouldThrowEEENS0_11StoreOriginE(%"class.v8::internal::LookupIterator"* nonnull %8, i64* nonnull %69, i32 %4, i64 1, i32 1) #4
  %134 = trunc i16 %133 to i8
  %135 = icmp eq i8 %134, 0
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %131) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #4
  %136 = select i1 %135, i64* null, i64* %69
  br label %137

137:                                              ; preds = %68, %129
  %138 = phi i64* [ %136, %129 ], [ null, %68 ]
  ret i64* %138
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_122DefineAccessorPropertyEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEENS4_INS0_4NameEEENS4_INS0_6ObjectEEESA_NS0_18PropertyAttributesE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i64*, i32) unnamed_addr #0 {
  %7 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %8 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %9 = ptrtoint i64* %3 to i64
  %10 = ptrtoint i64* %4 to i64
  %11 = load i64, i64* %3, align 8
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %85, label %14

14:                                               ; preds = %6
  %15 = and i64 %11, -4294967296
  %16 = add i64 %11, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %15, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = icmp eq i16 %23, 83
  br i1 %24, label %25, label %85

25:                                               ; preds = %14
  %26 = add i64 %11, 39
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %15, %29
  %31 = and i64 %29, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %85, label %33

33:                                               ; preds = %25
  %34 = add i64 %30, -1
  %35 = inttoptr i64 %34 to i32*
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %15, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i16*
  %41 = load atomic i16, i16* %40 monotonic, align 2
  %42 = icmp eq i16 %41, 179
  br i1 %42, label %43, label %85

43:                                               ; preds = %33
  %44 = bitcast %"class.v8::internal::SharedFunctionInfo"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #4
  %45 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %30, i64* %45, align 8
  %46 = call zeroext i1 @_ZNK2v88internal18SharedFunctionInfo12BreakAtEntryEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #4
  br i1 %46, label %47, label %85

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = and i64 %49, -4294967296
  %51 = add i64 %49, -1
  %52 = inttoptr i64 %51 to i32*
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = zext i32 %53 to i64
  %55 = or i64 %50, %54
  %56 = add i64 %55, 19
  %57 = inttoptr i64 %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %50, %59
  %61 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %62 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %61, align 8
  %63 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %47
  %65 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %62, i64 %60) #4
  br label %79

66:                                               ; preds = %47
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %68 = load i64*, i64** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %70 = load i64*, i64** %69, align 8
  %71 = icmp eq i64* %68, %70
  br i1 %71, label %72, label %74

72:                                               ; preds = %66
  %73 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %74

74:                                               ; preds = %72, %66
  %75 = phi i64* [ %73, %72 ], [ %68, %66 ]
  %76 = ptrtoint i64* %75 to i64
  %77 = add i64 %76, 8
  %78 = inttoptr i64 %77 to i64*
  store i64* %78, i64** %67, align 8
  store i64 %60, i64* %75, align 8
  br label %79

79:                                               ; preds = %64, %74
  %80 = phi i64* [ %65, %64 ], [ %75, %74 ]
  %81 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119InstantiateFunctionEPNS0_7IsolateENS0_6HandleINS0_13NativeContextEEENS4_INS0_20FunctionTemplateInfoEEENS0_11MaybeHandleINS0_4NameEEE(%"class.v8::internal::Isolate"* %0, i64* %80, i64* %3, i64* null) #4
  %82 = icmp eq i64* %81, null
  br i1 %82, label %168, label %83

83:                                               ; preds = %79
  %84 = ptrtoint i64* %81 to i64
  br label %85

85:                                               ; preds = %25, %33, %6, %14, %83, %43
  %86 = phi i64 [ %9, %43 ], [ %84, %83 ], [ %9, %14 ], [ %9, %6 ], [ %9, %33 ], [ %9, %25 ]
  %87 = load i64, i64* %4, align 8
  %88 = and i64 %87, 1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %161, label %90

90:                                               ; preds = %85
  %91 = and i64 %87, -4294967296
  %92 = add i64 %87, -1
  %93 = inttoptr i64 %92 to i32*
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = zext i32 %94 to i64
  %96 = or i64 %91, %95
  %97 = add i64 %96, 7
  %98 = inttoptr i64 %97 to i16*
  %99 = load atomic i16, i16* %98 monotonic, align 2
  %100 = icmp eq i16 %99, 83
  br i1 %100, label %101, label %161

101:                                              ; preds = %90
  %102 = add i64 %87, 39
  %103 = inttoptr i64 %102 to i32*
  %104 = load i32, i32* %103, align 4
  %105 = zext i32 %104 to i64
  %106 = or i64 %91, %105
  %107 = and i64 %105, 1
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %161, label %109

109:                                              ; preds = %101
  %110 = add i64 %106, -1
  %111 = inttoptr i64 %110 to i32*
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = zext i32 %112 to i64
  %114 = or i64 %91, %113
  %115 = add i64 %114, 7
  %116 = inttoptr i64 %115 to i16*
  %117 = load atomic i16, i16* %116 monotonic, align 2
  %118 = icmp eq i16 %117, 179
  br i1 %118, label %119, label %161

119:                                              ; preds = %109
  %120 = bitcast %"class.v8::internal::SharedFunctionInfo"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #4
  %121 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %106, i64* %121, align 8
  %122 = call zeroext i1 @_ZNK2v88internal18SharedFunctionInfo12BreakAtEntryEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %7) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #4
  br i1 %122, label %123, label %161

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i64, i64* %124, align 8
  %126 = and i64 %125, -4294967296
  %127 = add i64 %125, -1
  %128 = inttoptr i64 %127 to i32*
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = zext i32 %129 to i64
  %131 = or i64 %126, %130
  %132 = add i64 %131, 19
  %133 = inttoptr i64 %132 to i32*
  %134 = load i32, i32* %133, align 4
  %135 = zext i32 %134 to i64
  %136 = or i64 %126, %135
  %137 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %138 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %137, align 8
  %139 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %138, null
  br i1 %139, label %142, label %140

140:                                              ; preds = %123
  %141 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %138, i64 %136) #4
  br label %155

142:                                              ; preds = %123
  %143 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %144 = load i64*, i64** %143, align 8
  %145 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %146 = load i64*, i64** %145, align 8
  %147 = icmp eq i64* %144, %146
  br i1 %147, label %148, label %150

148:                                              ; preds = %142
  %149 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %150

150:                                              ; preds = %148, %142
  %151 = phi i64* [ %149, %148 ], [ %144, %142 ]
  %152 = ptrtoint i64* %151 to i64
  %153 = add i64 %152, 8
  %154 = inttoptr i64 %153 to i64*
  store i64* %154, i64** %143, align 8
  store i64 %136, i64* %151, align 8
  br label %155

155:                                              ; preds = %140, %150
  %156 = phi i64* [ %141, %140 ], [ %151, %150 ]
  %157 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119InstantiateFunctionEPNS0_7IsolateENS0_6HandleINS0_13NativeContextEEENS4_INS0_20FunctionTemplateInfoEEENS0_11MaybeHandleINS0_4NameEEE(%"class.v8::internal::Isolate"* %0, i64* %156, i64* %4, i64* null) #4
  %158 = icmp eq i64* %157, null
  br i1 %158, label %168, label %159

159:                                              ; preds = %155
  %160 = ptrtoint i64* %157 to i64
  br label %161

161:                                              ; preds = %101, %109, %85, %90, %159, %119
  %162 = phi i64 [ %10, %119 ], [ %160, %159 ], [ %10, %90 ], [ %10, %85 ], [ %10, %109 ], [ %10, %101 ]
  %163 = inttoptr i64 %86 to i64*
  %164 = inttoptr i64 %162 to i64*
  %165 = call i64* @_ZN2v88internal8JSObject14DefineAccessorENS0_6HandleIS1_EENS2_INS0_4NameEEENS2_INS0_6ObjectEEES7_NS0_18PropertyAttributesE(i64* %1, i64* %2, i64* %163, i64* %164, i32 %5) #4
  %166 = icmp eq i64* %165, null
  %167 = select i1 %166, i64* null, i64* %1
  br label %168

168:                                              ; preds = %161, %155, %79
  %169 = phi i64* [ null, %79 ], [ null, %155 ], [ %167, %161 ]
  ret i64* %169
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internal12_GLOBAL__N_112GetIntrinsicEPNS0_7IsolateENS_9IntrinsicE(%"class.v8::internal::Isolate"*, i32) unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 19
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %5, %14
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %17 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %16, align 8
  %18 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  %20 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %17, i64 %15) #4
  br label %34

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %25 = load i64*, i64** %24, align 8
  %26 = icmp eq i64* %23, %25
  br i1 %26, label %27, label %29

27:                                               ; preds = %21
  %28 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %29

29:                                               ; preds = %27, %21
  %30 = phi i64* [ %28, %27 ], [ %23, %21 ]
  %31 = ptrtoint i64* %30 to i64
  %32 = add i64 %31, 8
  %33 = inttoptr i64 %32 to i64*
  store i64* %33, i64** %22, align 8
  store i64 %15, i64* %30, align 8
  br label %34

34:                                               ; preds = %19, %29
  %35 = phi i64* [ %20, %19 ], [ %30, %29 ]
  switch i32 %1, label %68 [
    i32 0, label %36
    i32 1, label %39
    i32 2, label %42
    i32 3, label %45
    i32 4, label %48
    i32 5, label %51
    i32 6, label %54
    i32 7, label %57
  ]

36:                                               ; preds = %34
  %37 = load i64, i64* %35, align 8
  %38 = add i64 %37, 863
  br label %60

39:                                               ; preds = %34
  %40 = load i64, i64* %35, align 8
  %41 = add i64 %40, 867
  br label %60

42:                                               ; preds = %34
  %43 = load i64, i64* %35, align 8
  %44 = add i64 %43, 871
  br label %60

45:                                               ; preds = %34
  %46 = load i64, i64* %35, align 8
  %47 = add i64 %46, 875
  br label %60

48:                                               ; preds = %34
  %49 = load i64, i64* %35, align 8
  %50 = add i64 %49, 327
  br label %60

51:                                               ; preds = %34
  %52 = load i64, i64* %35, align 8
  %53 = add i64 %52, 319
  br label %60

54:                                               ; preds = %34
  %55 = load i64, i64* %35, align 8
  %56 = add i64 %55, 335
  br label %60

57:                                               ; preds = %34
  %58 = load i64, i64* %35, align 8
  %59 = add i64 %58, 935
  br label %60

60:                                               ; preds = %36, %39, %42, %45, %48, %51, %54, %57
  %61 = phi i64 [ %59, %57 ], [ %56, %54 ], [ %53, %51 ], [ %50, %48 ], [ %47, %45 ], [ %44, %42 ], [ %41, %39 ], [ %38, %36 ]
  %62 = phi i64 [ %58, %57 ], [ %55, %54 ], [ %52, %51 ], [ %49, %48 ], [ %46, %45 ], [ %43, %42 ], [ %40, %39 ], [ %37, %36 ]
  %63 = and i64 %62, -4294967296
  %64 = inttoptr i64 %61 to i32*
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %63, %66
  br label %68

68:                                               ; preds = %60, %34
  %69 = phi i64 [ 0, %34 ], [ %67, %60 ]
  ret i64 %69
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal12_GLOBAL__N_123AccessCheckDisableScopeD2Ev(%"class.v8::internal::Isolate"*, i8, i64*) unnamed_addr #0 align 2 {
  %4 = icmp eq i8 %1, 0
  br i1 %4, label %44, label %5

5:                                                ; preds = %3
  %6 = load i64, i64* %2, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %14 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %13, align 8
  %15 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %5
  %17 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %14, i64 %12) #4
  br label %31

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %22 = load i64*, i64** %21, align 8
  %23 = icmp eq i64* %20, %22
  br i1 %23, label %24, label %26

24:                                               ; preds = %18
  %25 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %26

26:                                               ; preds = %24, %18
  %27 = phi i64* [ %25, %24 ], [ %20, %18 ]
  %28 = ptrtoint i64* %27 to i64
  %29 = add i64 %28, 8
  %30 = inttoptr i64 %29 to i64*
  store i64* %30, i64** %19, align 8
  store i64 %12, i64* %27, align 8
  br label %31

31:                                               ; preds = %16, %26
  %32 = phi i64* [ %17, %16 ], [ %27, %26 ]
  %33 = tail call i64* @_ZN2v88internal3Map4CopyEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"* %0, i64* %32, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0)) #4
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, 9
  %36 = inttoptr i64 %35 to i8*
  %37 = load i8, i8* %36, align 1
  %38 = or i8 %37, 32
  store atomic volatile i8 %38, i8* %36 monotonic, align 1
  %39 = load i64, i64* %33, align 8
  %40 = add i64 %39, 11
  %41 = inttoptr i64 %40 to i32*
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = or i32 %42, 268435456
  store atomic volatile i32 %43, i32* %41 monotonic, align 4
  tail call void @_ZN2v88internal8JSObject12MigrateToMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_3MapEEEi(%"class.v8::internal::Isolate"* %0, i64* %2, i64* %33, i32 0) #4
  br label %44

44:                                               ; preds = %3, %31
  ret void
}

declare i64* @_ZN2v88internal3Map4CopyEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"*, i64*, i8*) local_unnamed_addr #2

declare void @_ZN2v88internal8JSObject12MigrateToMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_3MapEEEi(%"class.v8::internal::Isolate"*, i64*, i64*, i32) local_unnamed_addr #2

declare i16 @_ZN2v88internal6Object15AddDataPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EENS0_18PropertyAttributesENS_5MaybeINS0_11ShouldThrowEEENS0_11StoreOriginE(%"class.v8::internal::LookupIterator"*, i64*, i32, i64, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal8JSObject14DefineAccessorENS0_6HandleIS1_EENS2_INS0_4NameEEENS2_INS0_6ObjectEEES7_NS0_18PropertyAttributesE(i64*, i64*, i64*, i64*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal18SharedFunctionInfo12BreakAtEntryEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE11DeleteEntryEPNS0_7IsolateENS0_6HandleIS2_EENS0_13InternalIndexE(%"class.v8::internal::Isolate"*, i64*, i64) local_unnamed_addr #2

declare void @_ZN2v88internal7Isolate21ReportPendingMessagesEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88internal11SaveContextD1Ev(%"class.v8::internal::SaveContext"*) unnamed_addr #6

declare i64* @_ZN2v88internal7Factory12CopyJSObjectENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Factory"*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal8JSObject3NewENS0_6HandleINS0_10JSFunctionEEENS2_INS0_10JSReceiverEEENS2_INS0_14AllocationSiteEEE(i64*, i64*, i64*) local_unnamed_addr #2

declare void @_ZN2v88internal8JSObject19OptimizeAsPrototypeENS0_6HandleIS1_EEb(i64*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal8JSObject17SetImmutableProtoENS0_6HandleIS1_EE(i64*) local_unnamed_addr #2

declare void @_ZN2v88internal8JSObject17MigrateSlowToFastENS0_6HandleIS1_EEiPKc(i64*, i32, i8*) local_unnamed_addr #2

declare void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
