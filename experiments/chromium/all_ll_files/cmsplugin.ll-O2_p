; ModuleID = '../../third_party/pdfium/third_party/lcms/src/cmsplugin.c'
source_filename = "../../third_party/pdfium/third_party/lcms/src/cmsplugin.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._cmsContext_struct = type { %struct._cmsContext_struct*, %struct._cmsSubAllocator*, [15 x i8*], %struct._cmsMemPluginChunkType }
%struct._cmsSubAllocator = type { %struct._cmsContext_struct*, %struct._cmsSubAllocator_chunk_st* }
%struct._cmsSubAllocator_chunk_st = type { i8*, i32, i32, %struct._cmsSubAllocator_chunk_st* }
%struct._cmsMemPluginChunkType = type { i8* (%struct._cmsContext_struct*, i32)*, i8* (%struct._cmsContext_struct*, i32)*, void (%struct._cmsContext_struct*, i8*)*, i8* (%struct._cmsContext_struct*, i8*, i32)*, i8* (%struct._cmsContext_struct*, i32, i32)*, i8* (%struct._cmsContext_struct*, i8*, i32)* }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct._cmsLogErrorChunkType = type { void (%struct._cmsContext_struct*, i32, i8*)* }
%struct._cmsAlarmCodesChunkType = type { [16 x i16] }
%struct._cmsAdaptationStateChunkType = type { double }
%struct._cmsInterpPluginChunkType = type { void (i16*, i16*, %struct._cms_interp_struc*)* (i32, i32, i32)* }
%struct._cms_interp_struc = type { %struct._cmsContext_struct*, i32, i32, i32, [8 x i32], [8 x i32], [8 x i32], i8*, %union.cmsInterpFunction }
%union.cmsInterpFunction = type { void (i16*, i16*, %struct._cms_interp_struc*)* }
%struct._cmsCurvesPluginChunkType = type { %struct._cmsParametricCurvesCollection_st* }
%struct._cmsParametricCurvesCollection_st = type opaque
%struct._cmsFormattersPluginChunkType = type { %struct._cms_formatters_factory_list* }
%struct._cms_formatters_factory_list = type opaque
%struct._cmsTagTypePluginChunkType = type { %struct._cmsTagTypeLinkedList_st* }
%struct._cmsTagTypeLinkedList_st = type opaque
%struct._cmsTagPluginChunkType = type { %struct._cmsTagLinkedList_st* }
%struct._cmsTagLinkedList_st = type opaque
%struct._cmsIntentsPluginChunkType = type { %struct._cms_intents_list* }
%struct._cms_intents_list = type opaque
%struct._cmsOptimizationPluginChunkType = type { %struct._cmsOptimizationCollection_st* }
%struct._cmsOptimizationCollection_st = type opaque
%struct._cmsTransformPluginChunkType = type { %struct._cmsTransformCollection_st* }
%struct._cmsTransformCollection_st = type opaque
%struct._cmsMutexPluginChunkType = type { i8* (%struct._cmsContext_struct*)*, void (%struct._cmsContext_struct*, i8*)*, i32 (%struct._cmsContext_struct*, i8*)*, void (%struct._cmsContext_struct*, i8*)* }
%struct._cms_io_handler = type { i8*, %struct._cmsContext_struct*, i32, i32, [256 x i8], i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*, i32, i8*)* }
%struct.cmsCIEXYZ = type { double, double, double }
%struct.cmsEncodedXYZNumber = type { i32, i32, i32 }
%struct.cmsDateTimeNumber = type { i16, i16, i16, i16, i16, i16 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct._cmsTagBase = type { i32, [4 x i8] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct._cmsPluginBaseStruct = type { i32, i32, i32, %struct._cmsPluginBaseStruct* }
%struct.cmsPluginMemHandler = type { %struct._cmsPluginBaseStruct, i8* (%struct._cmsContext_struct*, i32)*, void (%struct._cmsContext_struct*, i8*)*, i8* (%struct._cmsContext_struct*, i8*, i32)*, i8* (%struct._cmsContext_struct*, i32)*, i8* (%struct._cmsContext_struct*, i32, i32)*, i8* (%struct._cmsContext_struct*, i8*, i32)* }

@.str = private unnamed_addr constant [28 x i8] c"NULL memory pool on context\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"Unrecognized plugin\00", align 1
@.str.2 = private unnamed_addr constant [50 x i8] c"plugin needs Little CMS %d, current version is %d\00", align 1
@.str.3 = private unnamed_addr constant [30 x i8] c"Unrecognized plugin type '%X'\00", align 1
@globalContext = internal global %struct._cmsContext_struct { %struct._cmsContext_struct* null, %struct._cmsSubAllocator* null, [15 x i8*] [i8* null, i8* bitcast (%struct._cmsLogErrorChunkType* @_cmsLogErrorChunk to i8*), i8* bitcast (%struct._cmsAlarmCodesChunkType* @_cmsAlarmCodesChunk to i8*), i8* bitcast (%struct._cmsAdaptationStateChunkType* @_cmsAdaptationStateChunk to i8*), i8* bitcast (%struct._cmsMemPluginChunkType* @_cmsMemPluginChunk to i8*), i8* bitcast (%struct._cmsInterpPluginChunkType* @_cmsInterpPluginChunk to i8*), i8* bitcast (%struct._cmsCurvesPluginChunkType* @_cmsCurvesPluginChunk to i8*), i8* bitcast (%struct._cmsFormattersPluginChunkType* @_cmsFormattersPluginChunk to i8*), i8* bitcast (%struct._cmsTagTypePluginChunkType* @_cmsTagTypePluginChunk to i8*), i8* bitcast (%struct._cmsTagPluginChunkType* @_cmsTagPluginChunk to i8*), i8* bitcast (%struct._cmsIntentsPluginChunkType* @_cmsIntentsPluginChunk to i8*), i8* bitcast (%struct._cmsTagTypePluginChunkType* @_cmsMPETypePluginChunk to i8*), i8* bitcast (%struct._cmsOptimizationPluginChunkType* @_cmsOptimizationPluginChunk to i8*), i8* bitcast (%struct._cmsTransformPluginChunkType* @_cmsTransformPluginChunk to i8*), i8* bitcast (%struct._cmsMutexPluginChunkType* @_cmsMutexPluginChunk to i8*)], %struct._cmsMemPluginChunkType zeroinitializer }, align 8
@_cmsContextPoolHeadMutex = internal global %union.pthread_mutex_t zeroinitializer, align 8
@_cmsContextPoolHead = internal unnamed_addr global %struct._cmsContext_struct* null, align 8
@.str.4 = private unnamed_addr constant [42 x i8] c"Bad context client -- possible corruption\00", align 1
@_cmsLogErrorChunk = external global %struct._cmsLogErrorChunkType, align 8
@_cmsAlarmCodesChunk = external global %struct._cmsAlarmCodesChunkType, align 2
@_cmsAdaptationStateChunk = external global %struct._cmsAdaptationStateChunkType, align 8
@_cmsMemPluginChunk = external global %struct._cmsMemPluginChunkType, align 8
@_cmsInterpPluginChunk = external global %struct._cmsInterpPluginChunkType, align 8
@_cmsCurvesPluginChunk = external global %struct._cmsCurvesPluginChunkType, align 8
@_cmsFormattersPluginChunk = external global %struct._cmsFormattersPluginChunkType, align 8
@_cmsTagTypePluginChunk = external global %struct._cmsTagTypePluginChunkType, align 8
@_cmsTagPluginChunk = external global %struct._cmsTagPluginChunkType, align 8
@_cmsIntentsPluginChunk = external global %struct._cmsIntentsPluginChunkType, align 8
@_cmsMPETypePluginChunk = external global %struct._cmsTagTypePluginChunkType, align 8
@_cmsOptimizationPluginChunk = external global %struct._cmsOptimizationPluginChunkType, align 8
@_cmsTransformPluginChunk = external global %struct._cmsTransformPluginChunkType, align 8
@_cmsMutexPluginChunk = external global %struct._cmsMutexPluginChunkType, align 8

; Function Attrs: nounwind readnone ssp uwtable
define hidden zeroext i16 @_cmsAdjustEndianess16(i16 zeroext) local_unnamed_addr #0 {
  %2 = tail call i16 @llvm.bswap.i16(i16 %0)
  ret i16 %2
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readnone ssp uwtable
define hidden i32 @_cmsAdjustEndianess32(i32) local_unnamed_addr #0 {
  %2 = tail call i32 @llvm.bswap.i32(i32 %0)
  ret i32 %2
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_cmsAdjustEndianess64(i64* nocapture, i64* nocapture readonly) local_unnamed_addr #2 {
  %3 = bitcast i64* %1 to i8*
  %4 = bitcast i64* %0 to i8*
  %5 = load i8, i8* %3, align 1
  %6 = getelementptr inbounds i8, i8* %4, i64 7
  store i8 %5, i8* %6, align 1
  %7 = getelementptr inbounds i8, i8* %3, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = getelementptr inbounds i8, i8* %4, i64 6
  store i8 %8, i8* %9, align 1
  %10 = getelementptr inbounds i8, i8* %3, i64 2
  %11 = load i8, i8* %10, align 1
  %12 = getelementptr inbounds i8, i8* %4, i64 5
  store i8 %11, i8* %12, align 1
  %13 = getelementptr inbounds i8, i8* %3, i64 3
  %14 = load i8, i8* %13, align 1
  %15 = getelementptr inbounds i8, i8* %4, i64 4
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds i8, i8* %3, i64 4
  %17 = load i8, i8* %16, align 1
  %18 = getelementptr inbounds i8, i8* %4, i64 3
  store i8 %17, i8* %18, align 1
  %19 = getelementptr inbounds i8, i8* %3, i64 5
  %20 = load i8, i8* %19, align 1
  %21 = getelementptr inbounds i8, i8* %4, i64 2
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds i8, i8* %3, i64 6
  %23 = load i8, i8* %22, align 1
  %24 = getelementptr inbounds i8, i8* %4, i64 1
  store i8 %23, i8* %24, align 1
  %25 = getelementptr inbounds i8, i8* %3, i64 7
  %26 = load i8, i8* %25, align 1
  store i8 %26, i8* %4, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsReadUInt8Number(%struct._cms_io_handler*, i8*) local_unnamed_addr #3 {
  %3 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #7
  store i8 -86, i8* %3, align 1
  %4 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %0, i64 0, i32 5
  %5 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %4, align 8
  %6 = call i32 %5(%struct._cms_io_handler* %0, i8* nonnull %3, i32 1, i32 1) #7
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = icmp eq i8* %1, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %8
  %11 = load i8, i8* %3, align 1
  store i8 %11, i8* %1, align 1
  br label %12

12:                                               ; preds = %10, %8, %2
  %13 = phi i32 [ 0, %2 ], [ 1, %8 ], [ 1, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #7
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsReadUInt16Number(%struct._cms_io_handler*, i16*) local_unnamed_addr #3 {
  %3 = alloca i16, align 2
  %4 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %4) #7
  store i16 -21846, i16* %3, align 2
  %5 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %0, i64 0, i32 5
  %6 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %5, align 8
  %7 = call i32 %6(%struct._cms_io_handler* %0, i8* nonnull %4, i32 2, i32 1) #7
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = icmp eq i16* %1, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %9
  %12 = load i16, i16* %3, align 2
  %13 = call i16 @llvm.bswap.i16(i16 %12) #7
  store i16 %13, i16* %1, align 2
  br label %14

14:                                               ; preds = %11, %9, %2
  %15 = phi i32 [ 0, %2 ], [ 1, %9 ], [ 1, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %4) #7
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsReadUInt16Array(%struct._cms_io_handler*, i32, i16*) local_unnamed_addr #3 {
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %6 = icmp eq i32 %1, 0
  br i1 %6, label %34, label %7

7:                                                ; preds = %3
  %8 = icmp eq i16* %2, null
  %9 = bitcast i16* %5 to i8*
  %10 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %0, i64 0, i32 5
  %11 = bitcast i16* %4 to i8*
  %12 = zext i32 %1 to i64
  br label %13

13:                                               ; preds = %31, %7
  %14 = phi i64 [ 0, %7 ], [ %32, %31 ]
  br i1 %8, label %27, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds i16, i16* %2, i64 %14
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %9) #7
  store i16 -21846, i16* %5, align 2
  %17 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %10, align 8
  %18 = call i32 %17(%struct._cms_io_handler* %0, i8* nonnull %9, i32 2, i32 1) #7
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %26

20:                                               ; preds = %15
  %21 = icmp eq i16* %16, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %20
  %23 = load i16, i16* %5, align 2
  %24 = call i16 @llvm.bswap.i16(i16 %23) #7
  store i16 %24, i16* %16, align 2
  br label %25

25:                                               ; preds = %20, %22
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %9) #7
  br label %31

26:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %9) #7
  br label %34

27:                                               ; preds = %13
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %11) #7
  store i16 -21846, i16* %4, align 2
  %28 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %10, align 8
  %29 = call i32 %28(%struct._cms_io_handler* %0, i8* nonnull %11, i32 2, i32 1) #7
  %30 = icmp eq i32 %29, 1
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %11) #7
  br i1 %30, label %31, label %34

31:                                               ; preds = %27, %25
  %32 = add nuw nsw i64 %14, 1
  %33 = icmp eq i64 %32, %12
  br i1 %33, label %34, label %13

34:                                               ; preds = %27, %31, %3, %26
  %35 = phi i32 [ 0, %26 ], [ 1, %3 ], [ 1, %31 ], [ 0, %27 ]
  ret i32 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsReadUInt32Number(%struct._cms_io_handler*, i32*) local_unnamed_addr #3 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #7
  store i32 -1431655766, i32* %3, align 4
  %5 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %0, i64 0, i32 5
  %6 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %5, align 8
  %7 = call i32 %6(%struct._cms_io_handler* %0, i8* nonnull %4, i32 4, i32 1) #7
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = icmp eq i32* %1, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %9
  %12 = load i32, i32* %3, align 4
  %13 = call i32 @llvm.bswap.i32(i32 %12) #7
  store i32 %13, i32* %1, align 4
  br label %14

14:                                               ; preds = %11, %9, %2
  %15 = phi i32 [ 0, %2 ], [ 1, %9 ], [ 1, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #7
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsReadFloat32Number(%struct._cms_io_handler*, float*) local_unnamed_addr #3 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #7
  store i32 -1431655766, i32* %3, align 4
  %5 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %0, i64 0, i32 5
  %6 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %5, align 8
  %7 = call i32 %6(%struct._cms_io_handler* %0, i8* nonnull %4, i32 4, i32 1) #7
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %30

9:                                                ; preds = %2
  %10 = icmp eq float* %1, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %9
  %12 = load i32, i32* %3, align 4
  %13 = call i32 @llvm.bswap.i32(i32 %12) #7
  store i32 %13, i32* %3, align 4
  %14 = bitcast i32 %13 to float
  %15 = bitcast float* %1 to i32*
  store i32 %13, i32* %15, align 4
  %16 = fpext float %14 to double
  %17 = fcmp ogt double %16, 1.000000e+20
  %18 = fcmp olt double %16, -1.000000e+20
  %19 = or i1 %17, %18
  br i1 %19, label %30, label %20

20:                                               ; preds = %11
  %21 = fcmp oeq float %14, 0.000000e+00
  br i1 %21, label %30, label %22

22:                                               ; preds = %20
  %23 = fcmp ueq float %14, 0.000000e+00
  br i1 %23, label %30, label %24

24:                                               ; preds = %22
  %25 = call float @llvm.fabs.f32(float %14) #11
  %26 = fcmp oeq float %25, 0x7FF0000000000000
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = fcmp uge float %25, 0x3810000000000000
  %29 = zext i1 %28 to i32
  br label %30

30:                                               ; preds = %27, %24, %22, %20, %9, %11, %2
  %31 = phi i32 [ 0, %2 ], [ 0, %11 ], [ 1, %9 ], [ 0, %22 ], [ 0, %24 ], [ %29, %27 ], [ 1, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #7
  ret i32 %31
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsReadUInt64Number(%struct._cms_io_handler*, i64*) local_unnamed_addr #3 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7
  store i64 -6148914691236517206, i64* %3, align 8
  %5 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %0, i64 0, i32 5
  %6 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %5, align 8
  %7 = call i32 %6(%struct._cms_io_handler* %0, i8* nonnull %4, i32 8, i32 1) #7
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %35

9:                                                ; preds = %2
  %10 = icmp eq i64* %1, null
  br i1 %10, label %35, label %11

11:                                               ; preds = %9
  %12 = bitcast i64* %1 to i8*
  %13 = load i8, i8* %4, align 8
  %14 = getelementptr inbounds i8, i8* %12, i64 7
  store i8 %13, i8* %14, align 1
  %15 = getelementptr inbounds i8, i8* %4, i64 1
  %16 = load i8, i8* %15, align 1
  %17 = getelementptr inbounds i8, i8* %12, i64 6
  store i8 %16, i8* %17, align 1
  %18 = getelementptr inbounds i8, i8* %4, i64 2
  %19 = load i8, i8* %18, align 2
  %20 = getelementptr inbounds i8, i8* %12, i64 5
  store i8 %19, i8* %20, align 1
  %21 = getelementptr inbounds i8, i8* %4, i64 3
  %22 = load i8, i8* %21, align 1
  %23 = getelementptr inbounds i8, i8* %12, i64 4
  store i8 %22, i8* %23, align 1
  %24 = getelementptr inbounds i8, i8* %4, i64 4
  %25 = load i8, i8* %24, align 4
  %26 = getelementptr inbounds i8, i8* %12, i64 3
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds i8, i8* %4, i64 5
  %28 = load i8, i8* %27, align 1
  %29 = getelementptr inbounds i8, i8* %12, i64 2
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds i8, i8* %4, i64 6
  %31 = load i8, i8* %30, align 2
  %32 = getelementptr inbounds i8, i8* %12, i64 1
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds i8, i8* %4, i64 7
  %34 = load i8, i8* %33, align 1
  store i8 %34, i8* %12, align 1
  br label %35

35:                                               ; preds = %11, %9, %2
  %36 = phi i32 [ 0, %2 ], [ 1, %9 ], [ 1, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler*, double*) local_unnamed_addr #3 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #7
  store i32 -1431655766, i32* %3, align 4
  %5 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %0, i64 0, i32 5
  %6 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %5, align 8
  %7 = call i32 %6(%struct._cms_io_handler* %0, i8* nonnull %4, i32 4, i32 1) #7
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %26

9:                                                ; preds = %2
  %10 = icmp eq double* %1, null
  br i1 %10, label %26, label %11

11:                                               ; preds = %9
  %12 = load i32, i32* %3, align 4
  %13 = call i32 @llvm.bswap.i32(i32 %12) #7
  %14 = icmp slt i32 %13, 0
  %15 = select i1 %14, i32 -1, i32 1
  %16 = sitofp i32 %15 to double
  %17 = sub nsw i32 0, %13
  %18 = select i1 %14, i32 %17, i32 %13
  %19 = lshr i32 %18, 16
  %20 = and i32 %18, 65535
  %21 = sitofp i32 %20 to double
  %22 = fmul double %21, 0x3EF0000000000000
  %23 = sitofp i32 %19 to double
  %24 = fadd double %22, %23
  %25 = fmul double %24, %16
  store double %25, double* %1, align 8
  br label %26

26:                                               ; preds = %11, %9, %2
  %27 = phi i32 [ 0, %2 ], [ 1, %9 ], [ 1, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #7
  ret i32 %27
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden double @_cms15Fixed16toDouble(i32) local_unnamed_addr #5 {
  %2 = icmp slt i32 %0, 0
  %3 = select i1 %2, i32 -1, i32 1
  %4 = sitofp i32 %3 to double
  %5 = sub nsw i32 0, %0
  %6 = select i1 %2, i32 %5, i32 %0
  %7 = lshr i32 %6, 16
  %8 = and i32 %6, 65535
  %9 = sitofp i32 %8 to double
  %10 = fmul double %9, 0x3EF0000000000000
  %11 = sitofp i32 %7 to double
  %12 = fadd double %10, %11
  %13 = fmul double %12, %4
  ret double %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsReadXYZNumber(%struct._cms_io_handler*, %struct.cmsCIEXYZ*) local_unnamed_addr #3 {
  %3 = alloca %struct.cmsEncodedXYZNumber, align 4
  %4 = bitcast %struct.cmsEncodedXYZNumber* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #7
  %5 = getelementptr inbounds %struct.cmsEncodedXYZNumber, %struct.cmsEncodedXYZNumber* %3, i64 0, i32 0
  store i32 -1431655766, i32* %5, align 4
  %6 = getelementptr inbounds %struct.cmsEncodedXYZNumber, %struct.cmsEncodedXYZNumber* %3, i64 0, i32 1
  store i32 -1431655766, i32* %6, align 4
  %7 = getelementptr inbounds %struct.cmsEncodedXYZNumber, %struct.cmsEncodedXYZNumber* %3, i64 0, i32 2
  store i32 -1431655766, i32* %7, align 4
  %8 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %0, i64 0, i32 5
  %9 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %8, align 8
  %10 = call i32 %9(%struct._cms_io_handler* %0, i8* nonnull %4, i32 12, i32 1) #7
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %60

12:                                               ; preds = %2
  %13 = icmp eq %struct.cmsCIEXYZ* %1, null
  br i1 %13, label %60, label %14

14:                                               ; preds = %12
  %15 = load i32, i32* %5, align 4
  %16 = call i32 @llvm.bswap.i32(i32 %15) #7
  %17 = icmp slt i32 %16, 0
  %18 = select i1 %17, i32 -1, i32 1
  %19 = sitofp i32 %18 to double
  %20 = sub nsw i32 0, %16
  %21 = select i1 %17, i32 %20, i32 %16
  %22 = lshr i32 %21, 16
  %23 = and i32 %21, 65535
  %24 = sitofp i32 %23 to double
  %25 = fmul double %24, 0x3EF0000000000000
  %26 = sitofp i32 %22 to double
  %27 = fadd double %25, %26
  %28 = fmul double %27, %19
  %29 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %1, i64 0, i32 0
  store double %28, double* %29, align 8
  %30 = load i32, i32* %6, align 4
  %31 = call i32 @llvm.bswap.i32(i32 %30) #7
  %32 = icmp slt i32 %31, 0
  %33 = select i1 %32, i32 -1, i32 1
  %34 = sitofp i32 %33 to double
  %35 = sub nsw i32 0, %31
  %36 = select i1 %32, i32 %35, i32 %31
  %37 = lshr i32 %36, 16
  %38 = and i32 %36, 65535
  %39 = sitofp i32 %38 to double
  %40 = fmul double %39, 0x3EF0000000000000
  %41 = sitofp i32 %37 to double
  %42 = fadd double %40, %41
  %43 = fmul double %42, %34
  %44 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %1, i64 0, i32 1
  store double %43, double* %44, align 8
  %45 = load i32, i32* %7, align 4
  %46 = call i32 @llvm.bswap.i32(i32 %45) #7
  %47 = icmp slt i32 %46, 0
  %48 = select i1 %47, i32 -1, i32 1
  %49 = sitofp i32 %48 to double
  %50 = sub nsw i32 0, %46
  %51 = select i1 %47, i32 %50, i32 %46
  %52 = lshr i32 %51, 16
  %53 = and i32 %51, 65535
  %54 = sitofp i32 %53 to double
  %55 = fmul double %54, 0x3EF0000000000000
  %56 = sitofp i32 %52 to double
  %57 = fadd double %55, %56
  %58 = fmul double %57, %49
  %59 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %1, i64 0, i32 2
  store double %58, double* %59, align 8
  br label %60

60:                                               ; preds = %14, %12, %2
  %61 = phi i32 [ 0, %2 ], [ 1, %12 ], [ 1, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #7
  ret i32 %61
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsWriteUInt8Number(%struct._cms_io_handler*, i8 zeroext) local_unnamed_addr #3 {
  %3 = alloca i8, align 1
  store i8 %1, i8* %3, align 1
  %4 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %0, i64 0, i32 9
  %5 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %4, align 8
  %6 = call i32 %5(%struct._cms_io_handler* %0, i32 1, i8* nonnull %3) #7
  %7 = icmp eq i32 %6, 1
  %8 = zext i1 %7 to i32
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsWriteUInt16Number(%struct._cms_io_handler*, i16 zeroext) local_unnamed_addr #3 {
  %3 = alloca i16, align 2
  %4 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %4) #7
  %5 = tail call i16 @llvm.bswap.i16(i16 %1) #7
  store i16 %5, i16* %3, align 2
  %6 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %0, i64 0, i32 9
  %7 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %6, align 8
  %8 = call i32 %7(%struct._cms_io_handler* %0, i32 2, i8* nonnull %4) #7
  %9 = icmp eq i32 %8, 1
  %10 = zext i1 %9 to i32
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %4) #7
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsWriteUInt16Array(%struct._cms_io_handler*, i32, i16* nocapture readonly) local_unnamed_addr #3 {
  %4 = alloca i16, align 2
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %21, label %6

6:                                                ; preds = %3
  %7 = bitcast i16* %4 to i8*
  %8 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %0, i64 0, i32 9
  %9 = zext i32 %1 to i64
  br label %12

10:                                               ; preds = %12
  %11 = icmp eq i64 %20, %9
  br i1 %11, label %21, label %12

12:                                               ; preds = %10, %6
  %13 = phi i64 [ 0, %6 ], [ %20, %10 ]
  %14 = getelementptr inbounds i16, i16* %2, i64 %13
  %15 = load i16, i16* %14, align 2
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %7) #7
  %16 = call i16 @llvm.bswap.i16(i16 %15) #7
  store i16 %16, i16* %4, align 2
  %17 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %8, align 8
  %18 = call i32 %17(%struct._cms_io_handler* %0, i32 2, i8* nonnull %7) #7
  %19 = icmp eq i32 %18, 1
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %7) #7
  %20 = add nuw nsw i64 %13, 1
  br i1 %19, label %10, label %21

21:                                               ; preds = %12, %10, %3
  %22 = phi i32 [ 1, %3 ], [ 0, %12 ], [ 1, %10 ]
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsWriteUInt32Number(%struct._cms_io_handler*, i32) local_unnamed_addr #3 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #7
  %5 = tail call i32 @llvm.bswap.i32(i32 %1) #7
  store i32 %5, i32* %3, align 4
  %6 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %0, i64 0, i32 9
  %7 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %6, align 8
  %8 = call i32 %7(%struct._cms_io_handler* %0, i32 4, i8* nonnull %4) #7
  %9 = icmp eq i32 %8, 1
  %10 = zext i1 %9 to i32
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #7
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsWriteFloat32Number(%struct._cms_io_handler*, float) local_unnamed_addr #3 {
  %3 = alloca i32, align 4
  %4 = bitcast float %1 to i32
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #7
  %6 = tail call i32 @llvm.bswap.i32(i32 %4) #7
  store i32 %6, i32* %3, align 4
  %7 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %0, i64 0, i32 9
  %8 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %7, align 8
  %9 = call i32 %8(%struct._cms_io_handler* %0, i32 4, i8* nonnull %5) #7
  %10 = icmp eq i32 %9, 1
  %11 = zext i1 %10 to i32
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #7
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsWriteUInt64Number(%struct._cms_io_handler*, i64* nocapture readonly) local_unnamed_addr #3 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7
  %5 = bitcast i64* %1 to i8*
  %6 = load i8, i8* %5, align 1
  %7 = getelementptr inbounds i8, i8* %4, i64 7
  store i8 %6, i8* %7, align 1
  %8 = getelementptr inbounds i8, i8* %5, i64 1
  %9 = load i8, i8* %8, align 1
  %10 = getelementptr inbounds i8, i8* %4, i64 6
  store i8 %9, i8* %10, align 2
  %11 = getelementptr inbounds i8, i8* %5, i64 2
  %12 = load i8, i8* %11, align 1
  %13 = getelementptr inbounds i8, i8* %4, i64 5
  store i8 %12, i8* %13, align 1
  %14 = getelementptr inbounds i8, i8* %5, i64 3
  %15 = load i8, i8* %14, align 1
  %16 = getelementptr inbounds i8, i8* %4, i64 4
  store i8 %15, i8* %16, align 4
  %17 = getelementptr inbounds i8, i8* %5, i64 4
  %18 = load i8, i8* %17, align 1
  %19 = getelementptr inbounds i8, i8* %4, i64 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds i8, i8* %5, i64 5
  %21 = load i8, i8* %20, align 1
  %22 = getelementptr inbounds i8, i8* %4, i64 2
  store i8 %21, i8* %22, align 2
  %23 = getelementptr inbounds i8, i8* %5, i64 6
  %24 = load i8, i8* %23, align 1
  %25 = getelementptr inbounds i8, i8* %4, i64 1
  store i8 %24, i8* %25, align 1
  %26 = getelementptr inbounds i8, i8* %5, i64 7
  %27 = load i8, i8* %26, align 1
  store i8 %27, i8* %4, align 8
  %28 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %0, i64 0, i32 9
  %29 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %28, align 8
  %30 = call i32 %29(%struct._cms_io_handler* %0, i32 8, i8* nonnull %4) #7
  %31 = icmp eq i32 %30, 1
  %32 = zext i1 %31 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler*, double) local_unnamed_addr #3 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #7
  %5 = fmul double %1, 6.553600e+04
  %6 = fadd double %5, 5.000000e-01
  %7 = tail call double @llvm.floor.f64(double %6) #7
  %8 = fptosi double %7 to i32
  %9 = tail call i32 @llvm.bswap.i32(i32 %8) #7
  store i32 %9, i32* %3, align 4
  %10 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %0, i64 0, i32 9
  %11 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %10, align 8
  %12 = call i32 %11(%struct._cms_io_handler* %0, i32 4, i8* nonnull %4) #7
  %13 = icmp eq i32 %12, 1
  %14 = zext i1 %13 to i32
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #7
  ret i32 %14
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden i32 @_cmsDoubleTo15Fixed16(double) local_unnamed_addr #0 {
  %2 = fmul double %0, 6.553600e+04
  %3 = fadd double %2, 5.000000e-01
  %4 = tail call double @llvm.floor.f64(double %3)
  %5 = fptosi double %4 to i32
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsWriteXYZNumber(%struct._cms_io_handler*, %struct.cmsCIEXYZ* nocapture readonly) local_unnamed_addr #3 {
  %3 = alloca %struct.cmsEncodedXYZNumber, align 4
  %4 = bitcast %struct.cmsEncodedXYZNumber* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #7
  %5 = getelementptr inbounds %struct.cmsEncodedXYZNumber, %struct.cmsEncodedXYZNumber* %3, i64 0, i32 0
  %6 = getelementptr inbounds %struct.cmsEncodedXYZNumber, %struct.cmsEncodedXYZNumber* %3, i64 0, i32 1
  %7 = getelementptr inbounds %struct.cmsEncodedXYZNumber, %struct.cmsEncodedXYZNumber* %3, i64 0, i32 2
  %8 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %1, i64 0, i32 0
  %9 = load double, double* %8, align 8
  %10 = fmul double %9, 6.553600e+04
  %11 = fadd double %10, 5.000000e-01
  %12 = tail call double @llvm.floor.f64(double %11) #7
  %13 = fptosi double %12 to i32
  %14 = tail call i32 @llvm.bswap.i32(i32 %13) #7
  store i32 %14, i32* %5, align 4
  %15 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %1, i64 0, i32 1
  %16 = load double, double* %15, align 8
  %17 = fmul double %16, 6.553600e+04
  %18 = fadd double %17, 5.000000e-01
  %19 = tail call double @llvm.floor.f64(double %18) #7
  %20 = fptosi double %19 to i32
  %21 = tail call i32 @llvm.bswap.i32(i32 %20) #7
  store i32 %21, i32* %6, align 4
  %22 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %1, i64 0, i32 2
  %23 = load double, double* %22, align 8
  %24 = fmul double %23, 6.553600e+04
  %25 = fadd double %24, 5.000000e-01
  %26 = tail call double @llvm.floor.f64(double %25) #7
  %27 = fptosi double %26 to i32
  %28 = tail call i32 @llvm.bswap.i32(i32 %27) #7
  store i32 %28, i32* %7, align 4
  %29 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %0, i64 0, i32 9
  %30 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %29, align 8
  %31 = call i32 %30(%struct._cms_io_handler* %0, i32 12, i8* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #7
  ret i32 %31
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden double @_cms8Fixed8toDouble(i16 zeroext) local_unnamed_addr #5 {
  %2 = trunc i16 %0 to i8
  %3 = lshr i16 %0, 8
  %4 = trunc i16 %3 to i8
  %5 = uitofp i8 %4 to double
  %6 = uitofp i8 %2 to double
  %7 = fmul double %6, 3.906250e-03
  %8 = fadd double %7, %5
  ret double %8
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden zeroext i16 @_cmsDoubleTo8Fixed8(double) local_unnamed_addr #0 {
  %2 = fmul double %0, 6.553600e+04
  %3 = fadd double %2, 5.000000e-01
  %4 = tail call double @llvm.floor.f64(double %3) #7
  %5 = fptosi double %4 to i32
  %6 = lshr i32 %5, 8
  %7 = trunc i32 %6 to i16
  ret i16 %7
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #4

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_cmsDecodeDateTimeNumber(%struct.cmsDateTimeNumber* nocapture readonly, %struct.tm* nocapture) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.cmsDateTimeNumber, %struct.cmsDateTimeNumber* %0, i64 0, i32 5
  %4 = load i16, i16* %3, align 2
  %5 = tail call i16 @llvm.bswap.i16(i16 %4) #7
  %6 = zext i16 %5 to i32
  %7 = getelementptr inbounds %struct.tm, %struct.tm* %1, i64 0, i32 0
  store i32 %6, i32* %7, align 8
  %8 = getelementptr inbounds %struct.cmsDateTimeNumber, %struct.cmsDateTimeNumber* %0, i64 0, i32 4
  %9 = load i16, i16* %8, align 2
  %10 = tail call i16 @llvm.bswap.i16(i16 %9) #7
  %11 = zext i16 %10 to i32
  %12 = getelementptr inbounds %struct.tm, %struct.tm* %1, i64 0, i32 1
  store i32 %11, i32* %12, align 4
  %13 = getelementptr inbounds %struct.cmsDateTimeNumber, %struct.cmsDateTimeNumber* %0, i64 0, i32 3
  %14 = load i16, i16* %13, align 2
  %15 = tail call i16 @llvm.bswap.i16(i16 %14) #7
  %16 = zext i16 %15 to i32
  %17 = getelementptr inbounds %struct.tm, %struct.tm* %1, i64 0, i32 2
  store i32 %16, i32* %17, align 8
  %18 = getelementptr inbounds %struct.cmsDateTimeNumber, %struct.cmsDateTimeNumber* %0, i64 0, i32 2
  %19 = load i16, i16* %18, align 2
  %20 = tail call i16 @llvm.bswap.i16(i16 %19) #7
  %21 = zext i16 %20 to i32
  %22 = getelementptr inbounds %struct.tm, %struct.tm* %1, i64 0, i32 3
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds %struct.cmsDateTimeNumber, %struct.cmsDateTimeNumber* %0, i64 0, i32 1
  %24 = load i16, i16* %23, align 2
  %25 = tail call i16 @llvm.bswap.i16(i16 %24) #7
  %26 = zext i16 %25 to i32
  %27 = add nsw i32 %26, -1
  %28 = getelementptr inbounds %struct.tm, %struct.tm* %1, i64 0, i32 4
  store i32 %27, i32* %28, align 8
  %29 = getelementptr inbounds %struct.cmsDateTimeNumber, %struct.cmsDateTimeNumber* %0, i64 0, i32 0
  %30 = load i16, i16* %29, align 2
  %31 = tail call i16 @llvm.bswap.i16(i16 %30) #7
  %32 = zext i16 %31 to i32
  %33 = add nsw i32 %32, -1900
  %34 = getelementptr inbounds %struct.tm, %struct.tm* %1, i64 0, i32 5
  store i32 %33, i32* %34, align 4
  %35 = getelementptr inbounds %struct.tm, %struct.tm* %1, i64 0, i32 6
  store i32 -1, i32* %35, align 8
  %36 = getelementptr inbounds %struct.tm, %struct.tm* %1, i64 0, i32 7
  store i32 -1, i32* %36, align 4
  %37 = getelementptr inbounds %struct.tm, %struct.tm* %1, i64 0, i32 8
  store i32 0, i32* %37, align 8
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_cmsEncodeDateTimeNumber(%struct.cmsDateTimeNumber* nocapture, %struct.tm* nocapture readonly) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.tm, %struct.tm* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = trunc i32 %4 to i16
  %6 = tail call i16 @llvm.bswap.i16(i16 %5) #7
  %7 = getelementptr inbounds %struct.cmsDateTimeNumber, %struct.cmsDateTimeNumber* %0, i64 0, i32 5
  store i16 %6, i16* %7, align 2
  %8 = getelementptr inbounds %struct.tm, %struct.tm* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = trunc i32 %9 to i16
  %11 = tail call i16 @llvm.bswap.i16(i16 %10) #7
  %12 = getelementptr inbounds %struct.cmsDateTimeNumber, %struct.cmsDateTimeNumber* %0, i64 0, i32 4
  store i16 %11, i16* %12, align 2
  %13 = getelementptr inbounds %struct.tm, %struct.tm* %1, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = trunc i32 %14 to i16
  %16 = tail call i16 @llvm.bswap.i16(i16 %15) #7
  %17 = getelementptr inbounds %struct.cmsDateTimeNumber, %struct.cmsDateTimeNumber* %0, i64 0, i32 3
  store i16 %16, i16* %17, align 2
  %18 = getelementptr inbounds %struct.tm, %struct.tm* %1, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = trunc i32 %19 to i16
  %21 = tail call i16 @llvm.bswap.i16(i16 %20) #7
  %22 = getelementptr inbounds %struct.cmsDateTimeNumber, %struct.cmsDateTimeNumber* %0, i64 0, i32 2
  store i16 %21, i16* %22, align 2
  %23 = getelementptr inbounds %struct.tm, %struct.tm* %1, i64 0, i32 4
  %24 = load i32, i32* %23, align 8
  %25 = trunc i32 %24 to i16
  %26 = add i16 %25, 1
  %27 = tail call i16 @llvm.bswap.i16(i16 %26) #7
  %28 = getelementptr inbounds %struct.cmsDateTimeNumber, %struct.cmsDateTimeNumber* %0, i64 0, i32 1
  store i16 %27, i16* %28, align 2
  %29 = getelementptr inbounds %struct.tm, %struct.tm* %1, i64 0, i32 5
  %30 = load i32, i32* %29, align 4
  %31 = trunc i32 %30 to i16
  %32 = add i16 %31, 1900
  %33 = tail call i16 @llvm.bswap.i16(i16 %32) #7
  %34 = getelementptr inbounds %struct.cmsDateTimeNumber, %struct.cmsDateTimeNumber* %0, i64 0, i32 0
  store i16 %33, i16* %34, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsReadTypeBase(%struct._cms_io_handler*) local_unnamed_addr #3 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7
  %4 = bitcast i64* %2 to i32*
  %5 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %0, i64 0, i32 5
  store i64 -6148914691236517206, i64* %2, align 8
  %6 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %5, align 8
  %7 = call i32 %6(%struct._cms_io_handler* %0, i8* nonnull %3, i32 8, i32 1) #7
  %8 = icmp eq i32 %7, 1
  %9 = load i32, i32* %4, align 8
  %10 = call i32 @llvm.bswap.i32(i32 %9) #7
  %11 = select i1 %8, i32 %10, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsWriteTypeBase(%struct._cms_io_handler*, i32) local_unnamed_addr #3 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %struct._cmsTagBase*
  %5 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = bitcast i64* %3 to i32*
  %7 = getelementptr inbounds %struct._cmsTagBase, %struct._cmsTagBase* %4, i64 0, i32 1
  %8 = tail call i32 @llvm.bswap.i32(i32 %1) #7
  store i32 %8, i32* %6, align 8
  %9 = bitcast [4 x i8]* %7 to i32*
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %0, i64 0, i32 9
  %11 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %10, align 8
  %12 = call i32 %11(%struct._cms_io_handler* %0, i32 8, i8* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  ret i32 %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsReadAlignment(%struct._cms_io_handler*) local_unnamed_addr #3 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #7
  %4 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %0, i64 0, i32 8
  store i32 -1431655766, i32* %2, align 4
  %5 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %4, align 8
  %6 = tail call i32 %5(%struct._cms_io_handler* %0) #7
  %7 = add i32 %6, 3
  %8 = and i32 %7, -4
  %9 = sub i32 %8, %6
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %19, label %11

11:                                               ; preds = %1
  %12 = icmp ugt i32 %9, 4
  br i1 %12, label %19, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %0, i64 0, i32 5
  %15 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %14, align 8
  %16 = call i32 %15(%struct._cms_io_handler* %0, i8* nonnull %3, i32 %9, i32 1) #7
  %17 = icmp eq i32 %16, 1
  %18 = zext i1 %17 to i32
  br label %19

19:                                               ; preds = %11, %1, %13
  %20 = phi i32 [ %18, %13 ], [ 1, %1 ], [ 0, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #7
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsWriteAlignment(%struct._cms_io_handler*) local_unnamed_addr #3 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #7
  %4 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %0, i64 0, i32 8
  store i32 -1431655766, i32* %2, align 4
  %5 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %4, align 8
  %6 = tail call i32 %5(%struct._cms_io_handler* %0) #7
  %7 = add i32 %6, 3
  %8 = and i32 %7, -4
  %9 = sub i32 %8, %6
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %1
  %12 = icmp ugt i32 %9, 4
  br i1 %12, label %18, label %13

13:                                               ; preds = %11
  %14 = zext i32 %9 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %3, i8 0, i64 %14, i1 false)
  %15 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %0, i64 0, i32 9
  %16 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %15, align 8
  %17 = call i32 %16(%struct._cms_io_handler* %0, i32 %9, i8* nonnull %3) #7
  br label %18

18:                                               ; preds = %11, %1, %13
  %19 = phi i32 [ %17, %13 ], [ 1, %1 ], [ 0, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #7
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsIOPrintf(%struct._cms_io_handler*, i8* nocapture readonly, ...) local_unnamed_addr #3 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = alloca [2048 x i8], align 16
  %5 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #7
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %7 = getelementptr inbounds [2048 x i8], [2048 x i8]* %4, i64 0, i64 0
  %8 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %7) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 2048, i1 false)
  call void @llvm.va_start(i8* nonnull %5)
  %9 = call i32 @vsnprintf(i8* nonnull %7, i64 2047, i8* %1, %struct.__va_list_tag* nonnull %6) #7
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %0, i64 0, i32 9
  %13 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %12, align 8
  %14 = call i32 %13(%struct._cms_io_handler* %0, i32 %9, i8* nonnull %7) #7
  br label %15

15:                                               ; preds = %2, %11
  %16 = phi i32 [ %14, %11 ], [ 0, %2 ]
  call void @llvm.va_end(i8* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #7
  ret i32 %16
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nounwind
declare i32 @vsnprintf(i8* nocapture, i64, i8* nocapture readonly, %struct.__va_list_tag*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #7

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_cmsPluginMalloc(%struct._cmsContext_struct*, i32) local_unnamed_addr #3 {
  %3 = icmp eq %struct._cmsContext_struct* %0, null
  br i1 %3, label %18, label %4

4:                                                ; preds = %2
  %5 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull @_cmsContextPoolHeadMutex) #7
  %6 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** @_cmsContextPoolHead, align 8
  %7 = icmp eq %struct._cmsContext_struct* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %4, %11
  %9 = phi %struct._cmsContext_struct* [ %13, %11 ], [ %6, %4 ]
  %10 = icmp eq %struct._cmsContext_struct* %9, %0
  br i1 %10, label %15, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %9, i64 0, i32 0
  %13 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %12, align 8
  %14 = icmp eq %struct._cmsContext_struct* %13, null
  br i1 %14, label %15, label %8

15:                                               ; preds = %11, %8, %4
  %16 = phi %struct._cmsContext_struct* [ @globalContext, %4 ], [ @globalContext, %11 ], [ %0, %8 ]
  %17 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull @_cmsContextPoolHeadMutex) #7
  br label %18

18:                                               ; preds = %15, %2
  %19 = phi %struct._cmsContext_struct* [ @globalContext, %2 ], [ %16, %15 ]
  %20 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %19, i64 0, i32 1
  %21 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %20, align 8
  %22 = icmp eq %struct._cmsSubAllocator* %21, null
  br i1 %22, label %23, label %28

23:                                               ; preds = %18
  br i1 %3, label %24, label %27

24:                                               ; preds = %23
  %25 = tail call %struct._cmsSubAllocator* @_cmsCreateSubAlloc(%struct._cmsContext_struct* null, i32 2048) #7
  store %struct._cmsSubAllocator* %25, %struct._cmsSubAllocator** %20, align 8
  %26 = icmp eq %struct._cmsSubAllocator* %25, null
  br i1 %26, label %31, label %28

27:                                               ; preds = %23
  tail call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* nonnull %0, i32 12, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0)) #7
  br label %31

28:                                               ; preds = %24, %18
  %29 = phi %struct._cmsSubAllocator* [ %25, %24 ], [ %21, %18 ]
  %30 = tail call i8* @_cmsSubAlloc(%struct._cmsSubAllocator* nonnull %29, i32 %1) #7
  br label %31

31:                                               ; preds = %24, %28, %27
  %32 = phi i8* [ %30, %28 ], [ null, %27 ], [ null, %24 ]
  ret i8* %32
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsContext_struct* @_cmsGetContext(%struct._cmsContext_struct* readnone) local_unnamed_addr #3 {
  %2 = icmp eq %struct._cmsContext_struct* %0, null
  br i1 %2, label %17, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull @_cmsContextPoolHeadMutex) #7
  %5 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** @_cmsContextPoolHead, align 8
  %6 = icmp eq %struct._cmsContext_struct* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %3, %10
  %8 = phi %struct._cmsContext_struct* [ %12, %10 ], [ %5, %3 ]
  %9 = icmp eq %struct._cmsContext_struct* %8, %0
  br i1 %9, label %14, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %8, i64 0, i32 0
  %12 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %11, align 8
  %13 = icmp eq %struct._cmsContext_struct* %12, null
  br i1 %13, label %14, label %7

14:                                               ; preds = %10, %7, %3
  %15 = phi %struct._cmsContext_struct* [ @globalContext, %3 ], [ @globalContext, %10 ], [ %0, %7 ]
  %16 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull @_cmsContextPoolHeadMutex) #7
  br label %17

17:                                               ; preds = %14, %1
  %18 = phi %struct._cmsContext_struct* [ @globalContext, %1 ], [ %15, %14 ]
  ret %struct._cmsContext_struct* %18
}

declare %struct._cmsSubAllocator* @_cmsCreateSubAlloc(%struct._cmsContext_struct*, i32) local_unnamed_addr #9

declare void @cmsSignalError(%struct._cmsContext_struct*, i32, i8*, ...) local_unnamed_addr #9

declare i8* @_cmsSubAlloc(%struct._cmsSubAllocator*, i32) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cmsPlugin(i8*) local_unnamed_addr #3 {
  %2 = tail call i32 @cmsPluginTHR(%struct._cmsContext_struct* null, i8* %0)
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cmsPluginTHR(%struct._cmsContext_struct*, i8*) local_unnamed_addr #3 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %58, label %4

4:                                                ; preds = %2
  %5 = bitcast i8* %1 to %struct._cmsPluginBaseStruct*
  br label %6

6:                                                ; preds = %4, %54
  %7 = phi %struct._cmsPluginBaseStruct* [ %56, %54 ], [ %5, %4 ]
  %8 = getelementptr inbounds %struct._cmsPluginBaseStruct, %struct._cmsPluginBaseStruct* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 1633906800
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  tail call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %0, i32 8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0)) #7
  br label %58

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct._cmsPluginBaseStruct, %struct._cmsPluginBaseStruct* %7, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp ugt i32 %14, 2100
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %0, i32 8, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i64 0, i64 0), i32 %14, i32 2100) #7
  br label %58

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct._cmsPluginBaseStruct, %struct._cmsPluginBaseStruct* %7, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  switch i32 %19, label %53 [
    i32 1835363656, label %20
    i32 1768845384, label %23
    i32 1954115656, label %26
    i32 1952540488, label %29
    i32 1718775112, label %32
    i32 1768846408, label %35
    i32 1885434440, label %38
    i32 1836082504, label %41
    i32 1869640776, label %44
    i32 2053533000, label %47
    i32 1836350024, label %50
  ]

20:                                               ; preds = %17
  %21 = tail call i32 @_cmsRegisterMemHandlerPlugin(%struct._cmsContext_struct* %0, %struct._cmsPluginBaseStruct* nonnull %7) #7
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %58, label %54

23:                                               ; preds = %17
  %24 = tail call i32 @_cmsRegisterInterpPlugin(%struct._cmsContext_struct* %0, %struct._cmsPluginBaseStruct* nonnull %7) #7
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %58, label %54

26:                                               ; preds = %17
  %27 = tail call i32 @_cmsRegisterTagTypePlugin(%struct._cmsContext_struct* %0, %struct._cmsPluginBaseStruct* nonnull %7) #7
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %58, label %54

29:                                               ; preds = %17
  %30 = tail call i32 @_cmsRegisterTagPlugin(%struct._cmsContext_struct* %0, %struct._cmsPluginBaseStruct* nonnull %7) #7
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %58, label %54

32:                                               ; preds = %17
  %33 = tail call i32 @_cmsRegisterFormattersPlugin(%struct._cmsContext_struct* %0, %struct._cmsPluginBaseStruct* nonnull %7) #7
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %58, label %54

35:                                               ; preds = %17
  %36 = tail call i32 @_cmsRegisterRenderingIntentPlugin(%struct._cmsContext_struct* %0, %struct._cmsPluginBaseStruct* nonnull %7) #7
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %58, label %54

38:                                               ; preds = %17
  %39 = tail call i32 @_cmsRegisterParametricCurvesPlugin(%struct._cmsContext_struct* %0, %struct._cmsPluginBaseStruct* nonnull %7) #7
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %58, label %54

41:                                               ; preds = %17
  %42 = tail call i32 @_cmsRegisterMultiProcessElementPlugin(%struct._cmsContext_struct* %0, %struct._cmsPluginBaseStruct* nonnull %7) #7
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %58, label %54

44:                                               ; preds = %17
  %45 = tail call i32 @_cmsRegisterOptimizationPlugin(%struct._cmsContext_struct* %0, %struct._cmsPluginBaseStruct* nonnull %7) #7
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %58, label %54

47:                                               ; preds = %17
  %48 = tail call i32 @_cmsRegisterTransformPlugin(%struct._cmsContext_struct* %0, %struct._cmsPluginBaseStruct* nonnull %7) #7
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %58, label %54

50:                                               ; preds = %17
  %51 = tail call i32 @_cmsRegisterMutexPlugin(%struct._cmsContext_struct* %0, %struct._cmsPluginBaseStruct* nonnull %7) #7
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %58, label %54

53:                                               ; preds = %17
  tail call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %0, i32 8, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3, i64 0, i64 0), i32 %19) #7
  br label %58

54:                                               ; preds = %20, %23, %26, %29, %32, %35, %38, %41, %44, %47, %50
  %55 = getelementptr inbounds %struct._cmsPluginBaseStruct, %struct._cmsPluginBaseStruct* %7, i64 0, i32 3
  %56 = load %struct._cmsPluginBaseStruct*, %struct._cmsPluginBaseStruct** %55, align 8
  %57 = icmp eq %struct._cmsPluginBaseStruct* %56, null
  br i1 %57, label %58, label %6

58:                                               ; preds = %20, %23, %26, %29, %32, %35, %38, %41, %44, %47, %50, %54, %2, %53, %16, %11
  %59 = phi i32 [ 0, %11 ], [ 0, %16 ], [ 0, %53 ], [ 1, %2 ], [ 0, %20 ], [ 0, %23 ], [ 0, %26 ], [ 0, %29 ], [ 0, %32 ], [ 0, %35 ], [ 0, %38 ], [ 0, %41 ], [ 0, %44 ], [ 0, %47 ], [ 0, %50 ], [ 1, %54 ]
  ret i32 %59
}

declare i32 @_cmsRegisterMemHandlerPlugin(%struct._cmsContext_struct*, %struct._cmsPluginBaseStruct*) local_unnamed_addr #9

declare i32 @_cmsRegisterInterpPlugin(%struct._cmsContext_struct*, %struct._cmsPluginBaseStruct*) local_unnamed_addr #9

declare i32 @_cmsRegisterTagTypePlugin(%struct._cmsContext_struct*, %struct._cmsPluginBaseStruct*) local_unnamed_addr #9

declare i32 @_cmsRegisterTagPlugin(%struct._cmsContext_struct*, %struct._cmsPluginBaseStruct*) local_unnamed_addr #9

declare i32 @_cmsRegisterFormattersPlugin(%struct._cmsContext_struct*, %struct._cmsPluginBaseStruct*) local_unnamed_addr #9

declare i32 @_cmsRegisterRenderingIntentPlugin(%struct._cmsContext_struct*, %struct._cmsPluginBaseStruct*) local_unnamed_addr #9

declare i32 @_cmsRegisterParametricCurvesPlugin(%struct._cmsContext_struct*, %struct._cmsPluginBaseStruct*) local_unnamed_addr #9

declare i32 @_cmsRegisterMultiProcessElementPlugin(%struct._cmsContext_struct*, %struct._cmsPluginBaseStruct*) local_unnamed_addr #9

declare i32 @_cmsRegisterOptimizationPlugin(%struct._cmsContext_struct*, %struct._cmsPluginBaseStruct*) local_unnamed_addr #9

declare i32 @_cmsRegisterTransformPlugin(%struct._cmsContext_struct*, %struct._cmsPluginBaseStruct*) local_unnamed_addr #9

declare i32 @_cmsRegisterMutexPlugin(%struct._cmsContext_struct*, %struct._cmsPluginBaseStruct*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden void @cmsUnregisterPlugins() local_unnamed_addr #3 {
  tail call void @cmsUnregisterPluginsTHR(%struct._cmsContext_struct* null)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cmsUnregisterPluginsTHR(%struct._cmsContext_struct*) local_unnamed_addr #3 {
  %2 = tail call i32 @_cmsRegisterMemHandlerPlugin(%struct._cmsContext_struct* %0, %struct._cmsPluginBaseStruct* null) #7
  %3 = tail call i32 @_cmsRegisterInterpPlugin(%struct._cmsContext_struct* %0, %struct._cmsPluginBaseStruct* null) #7
  %4 = tail call i32 @_cmsRegisterTagTypePlugin(%struct._cmsContext_struct* %0, %struct._cmsPluginBaseStruct* null) #7
  %5 = tail call i32 @_cmsRegisterTagPlugin(%struct._cmsContext_struct* %0, %struct._cmsPluginBaseStruct* null) #7
  %6 = tail call i32 @_cmsRegisterFormattersPlugin(%struct._cmsContext_struct* %0, %struct._cmsPluginBaseStruct* null) #7
  %7 = tail call i32 @_cmsRegisterRenderingIntentPlugin(%struct._cmsContext_struct* %0, %struct._cmsPluginBaseStruct* null) #7
  %8 = tail call i32 @_cmsRegisterParametricCurvesPlugin(%struct._cmsContext_struct* %0, %struct._cmsPluginBaseStruct* null) #7
  %9 = tail call i32 @_cmsRegisterMultiProcessElementPlugin(%struct._cmsContext_struct* %0, %struct._cmsPluginBaseStruct* null) #7
  %10 = tail call i32 @_cmsRegisterOptimizationPlugin(%struct._cmsContext_struct* %0, %struct._cmsPluginBaseStruct* null) #7
  %11 = tail call i32 @_cmsRegisterTransformPlugin(%struct._cmsContext_struct* %0, %struct._cmsPluginBaseStruct* null) #7
  %12 = tail call i32 @_cmsRegisterMutexPlugin(%struct._cmsContext_struct* %0, %struct._cmsPluginBaseStruct* null) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct*, i32) local_unnamed_addr #3 {
  %3 = icmp ugt i32 %1, 14
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %0, i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4, i64 0, i64 0)) #7
  br label %29

5:                                                ; preds = %2
  %6 = icmp eq %struct._cmsContext_struct* %0, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %5
  %8 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull @_cmsContextPoolHeadMutex) #7
  %9 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** @_cmsContextPoolHead, align 8
  %10 = icmp eq %struct._cmsContext_struct* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %7, %14
  %12 = phi %struct._cmsContext_struct* [ %16, %14 ], [ %9, %7 ]
  %13 = icmp eq %struct._cmsContext_struct* %12, %0
  br i1 %13, label %18, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %12, i64 0, i32 0
  %16 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %15, align 8
  %17 = icmp eq %struct._cmsContext_struct* %16, null
  br i1 %17, label %18, label %11

18:                                               ; preds = %14, %11, %7
  %19 = phi %struct._cmsContext_struct* [ @globalContext, %7 ], [ @globalContext, %14 ], [ %0, %11 ]
  %20 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull @_cmsContextPoolHeadMutex) #7
  br label %21

21:                                               ; preds = %18, %5
  %22 = phi %struct._cmsContext_struct* [ @globalContext, %5 ], [ %19, %18 ]
  %23 = zext i32 %1 to i64
  %24 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %22, i64 0, i32 2, i64 %23
  %25 = load i8*, i8** %24, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %27, label %32

27:                                               ; preds = %21
  %28 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* @globalContext, i64 0, i32 2, i64 %23
  br label %29

29:                                               ; preds = %4, %27
  %30 = phi i8** [ %28, %27 ], [ getelementptr inbounds (%struct._cmsContext_struct, %struct._cmsContext_struct* @globalContext, i64 0, i32 2, i64 0), %4 ]
  %31 = load i8*, i8** %30, align 8
  br label %32

32:                                               ; preds = %29, %21
  %33 = phi i8* [ %25, %21 ], [ %31, %29 ]
  ret i8* %33
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsContext_struct* @cmsCreateContext(i8*, i8*) local_unnamed_addr #3 {
  %3 = alloca %struct._cmsContext_struct, align 8
  %4 = bitcast %struct._cmsContext_struct* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %4) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 184, i1 false)
  %5 = icmp eq i8* %0, null
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  %7 = bitcast i8* %0 to %struct._cmsPluginBaseStruct*
  br label %8

8:                                                ; preds = %23, %6
  %9 = phi %struct._cmsPluginBaseStruct* [ %25, %23 ], [ %7, %6 ]
  %10 = getelementptr inbounds %struct._cmsPluginBaseStruct, %struct._cmsPluginBaseStruct* %9, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 1633906800
  br i1 %12, label %13, label %23

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct._cmsPluginBaseStruct, %struct._cmsPluginBaseStruct* %9, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp ult i32 %15, 2101
  br i1 %16, label %17, label %23

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct._cmsPluginBaseStruct, %struct._cmsPluginBaseStruct* %9, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 1835363656
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = bitcast %struct._cmsPluginBaseStruct* %9 to %struct.cmsPluginMemHandler*
  br label %27

23:                                               ; preds = %17, %13, %8
  %24 = getelementptr inbounds %struct._cmsPluginBaseStruct, %struct._cmsPluginBaseStruct* %9, i64 0, i32 3
  %25 = load %struct._cmsPluginBaseStruct*, %struct._cmsPluginBaseStruct** %24, align 8
  %26 = icmp eq %struct._cmsPluginBaseStruct* %25, null
  br i1 %26, label %27, label %8

27:                                               ; preds = %23, %2, %21
  %28 = phi %struct.cmsPluginMemHandler* [ %22, %21 ], [ null, %2 ], [ null, %23 ]
  %29 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %3, i64 0, i32 3
  call void @_cmsInstallAllocFunctions(%struct.cmsPluginMemHandler* %28, %struct._cmsMemPluginChunkType* %29) #7
  %30 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %3, i64 0, i32 2, i64 0
  store i8* %1, i8** %30, align 8
  %31 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %3, i64 0, i32 2, i64 4
  %32 = bitcast i8** %31 to %struct._cmsMemPluginChunkType**
  store %struct._cmsMemPluginChunkType* %29, %struct._cmsMemPluginChunkType** %32, align 8
  %33 = call i8* @_cmsMalloc(%struct._cmsContext_struct* nonnull %3, i32 184) #7
  %34 = bitcast i8* %33 to %struct._cmsContext_struct*
  %35 = icmp eq i8* %33, null
  br i1 %35, label %56, label %36

36:                                               ; preds = %27
  %37 = bitcast %struct._cmsMemPluginChunkType* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 184, i1 false)
  %38 = getelementptr inbounds i8, i8* %33, i64 136
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %37, i64 48, i1 false)
  %39 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull @_cmsContextPoolHeadMutex) #7
  %40 = load i64, i64* bitcast (%struct._cmsContext_struct** @_cmsContextPoolHead to i64*), align 8
  %41 = bitcast i8* %33 to i64*
  store i64 %40, i64* %41, align 8
  store i8* %33, i8** bitcast (%struct._cmsContext_struct** @_cmsContextPoolHead to i8**), align 8
  %42 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull @_cmsContextPoolHeadMutex) #7
  %43 = getelementptr inbounds i8, i8* %33, i64 16
  %44 = bitcast i8* %43 to i8**
  store i8* %1, i8** %44, align 8
  %45 = getelementptr inbounds i8, i8* %33, i64 48
  %46 = bitcast i8* %45 to i8**
  store i8* %38, i8** %46, align 8
  %47 = call %struct._cmsSubAllocator* @_cmsCreateSubAlloc(%struct._cmsContext_struct* nonnull %34, i32 176) #7
  %48 = getelementptr inbounds i8, i8* %33, i64 8
  %49 = bitcast i8* %48 to %struct._cmsSubAllocator**
  store %struct._cmsSubAllocator* %47, %struct._cmsSubAllocator** %49, align 8
  %50 = icmp eq %struct._cmsSubAllocator* %47, null
  br i1 %50, label %51, label %52

51:                                               ; preds = %36
  call void @cmsDeleteContext(%struct._cmsContext_struct* nonnull %34)
  br label %56

52:                                               ; preds = %36
  call void @_cmsAllocLogErrorChunk(%struct._cmsContext_struct* nonnull %34, %struct._cmsContext_struct* null) #7
  call void @_cmsAllocAlarmCodesChunk(%struct._cmsContext_struct* nonnull %34, %struct._cmsContext_struct* null) #7
  call void @_cmsAllocAdaptationStateChunk(%struct._cmsContext_struct* nonnull %34, %struct._cmsContext_struct* null) #7
  call void @_cmsAllocMemPluginChunk(%struct._cmsContext_struct* nonnull %34, %struct._cmsContext_struct* null) #7
  call void @_cmsAllocInterpPluginChunk(%struct._cmsContext_struct* nonnull %34, %struct._cmsContext_struct* null) #7
  call void @_cmsAllocCurvesPluginChunk(%struct._cmsContext_struct* nonnull %34, %struct._cmsContext_struct* null) #7
  call void @_cmsAllocFormattersPluginChunk(%struct._cmsContext_struct* nonnull %34, %struct._cmsContext_struct* null) #7
  call void @_cmsAllocTagTypePluginChunk(%struct._cmsContext_struct* nonnull %34, %struct._cmsContext_struct* null) #7
  call void @_cmsAllocMPETypePluginChunk(%struct._cmsContext_struct* nonnull %34, %struct._cmsContext_struct* null) #7
  call void @_cmsAllocTagPluginChunk(%struct._cmsContext_struct* nonnull %34, %struct._cmsContext_struct* null) #7
  call void @_cmsAllocIntentsPluginChunk(%struct._cmsContext_struct* nonnull %34, %struct._cmsContext_struct* null) #7
  call void @_cmsAllocOptimizationPluginChunk(%struct._cmsContext_struct* nonnull %34, %struct._cmsContext_struct* null) #7
  call void @_cmsAllocTransformPluginChunk(%struct._cmsContext_struct* nonnull %34, %struct._cmsContext_struct* null) #7
  call void @_cmsAllocMutexPluginChunk(%struct._cmsContext_struct* nonnull %34, %struct._cmsContext_struct* null) #7
  %53 = call i32 @cmsPluginTHR(%struct._cmsContext_struct* nonnull %34, i8* %0)
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @cmsDeleteContext(%struct._cmsContext_struct* nonnull %34)
  br label %56

56:                                               ; preds = %52, %27, %55, %51
  %57 = phi %struct._cmsContext_struct* [ null, %51 ], [ null, %55 ], [ null, %27 ], [ %34, %52 ]
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %4) #7
  ret %struct._cmsContext_struct* %57
}

declare void @_cmsInstallAllocFunctions(%struct.cmsPluginMemHandler*, %struct._cmsMemPluginChunkType*) local_unnamed_addr #9

declare i8* @_cmsMalloc(%struct._cmsContext_struct*, i32) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @cmsDeleteContext(%struct._cmsContext_struct*) local_unnamed_addr #3 {
  %2 = alloca %struct._cmsContext_struct, align 8
  %3 = icmp eq %struct._cmsContext_struct* %0, null
  br i1 %3, label %42, label %4

4:                                                ; preds = %1
  %5 = bitcast %struct._cmsContext_struct* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %5) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 136, i1 false)
  %6 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %2, i64 0, i32 3
  %7 = bitcast %struct._cmsMemPluginChunkType* %6 to i8*
  %8 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 3
  %9 = bitcast %struct._cmsMemPluginChunkType* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %9, i64 48, i1 false)
  %10 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 2, i64 0
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %2, i64 0, i32 2
  %14 = bitcast [15 x i8*]* %13 to i64*
  store i64 %12, i64* %14, align 8
  %15 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %2, i64 0, i32 2, i64 4
  %16 = bitcast i8** %15 to %struct._cmsMemPluginChunkType**
  store %struct._cmsMemPluginChunkType* %6, %struct._cmsMemPluginChunkType** %16, align 8
  call void @cmsUnregisterPluginsTHR(%struct._cmsContext_struct* nonnull %0)
  %17 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 1
  %18 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %17, align 8
  %19 = icmp eq %struct._cmsSubAllocator* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %4
  call void @_cmsSubAllocDestroy(%struct._cmsSubAllocator* nonnull %18) #7
  br label %21

21:                                               ; preds = %4, %20
  store %struct._cmsSubAllocator* null, %struct._cmsSubAllocator** %17, align 8
  %22 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull @_cmsContextPoolHeadMutex) #7
  %23 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** @_cmsContextPoolHead, align 8
  %24 = icmp eq %struct._cmsContext_struct* %23, %0
  br i1 %24, label %25, label %28

25:                                               ; preds = %21
  %26 = bitcast %struct._cmsContext_struct* %0 to i64*
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* bitcast (%struct._cmsContext_struct** @_cmsContextPoolHead to i64*), align 8
  br label %39

28:                                               ; preds = %21, %31
  %29 = phi %struct._cmsContext_struct* [ %33, %31 ], [ %23, %21 ]
  %30 = icmp eq %struct._cmsContext_struct* %29, null
  br i1 %30, label %39, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %29, i64 0, i32 0
  %33 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %32, align 8
  %34 = icmp eq %struct._cmsContext_struct* %33, %0
  br i1 %34, label %35, label %28

35:                                               ; preds = %31
  %36 = bitcast %struct._cmsContext_struct* %0 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %struct._cmsContext_struct* %29 to i64*
  store i64 %37, i64* %38, align 8
  br label %39

39:                                               ; preds = %28, %35, %25
  %40 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull @_cmsContextPoolHeadMutex) #7
  %41 = bitcast %struct._cmsContext_struct* %0 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* nonnull %2, i8* nonnull %41) #7
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %5) #7
  br label %42

42:                                               ; preds = %1, %39
  ret void
}

declare void @_cmsAllocLogErrorChunk(%struct._cmsContext_struct*, %struct._cmsContext_struct*) local_unnamed_addr #9

declare void @_cmsAllocAlarmCodesChunk(%struct._cmsContext_struct*, %struct._cmsContext_struct*) local_unnamed_addr #9

declare void @_cmsAllocAdaptationStateChunk(%struct._cmsContext_struct*, %struct._cmsContext_struct*) local_unnamed_addr #9

declare void @_cmsAllocMemPluginChunk(%struct._cmsContext_struct*, %struct._cmsContext_struct*) local_unnamed_addr #9

declare void @_cmsAllocInterpPluginChunk(%struct._cmsContext_struct*, %struct._cmsContext_struct*) local_unnamed_addr #9

declare void @_cmsAllocCurvesPluginChunk(%struct._cmsContext_struct*, %struct._cmsContext_struct*) local_unnamed_addr #9

declare void @_cmsAllocFormattersPluginChunk(%struct._cmsContext_struct*, %struct._cmsContext_struct*) local_unnamed_addr #9

declare void @_cmsAllocTagTypePluginChunk(%struct._cmsContext_struct*, %struct._cmsContext_struct*) local_unnamed_addr #9

declare void @_cmsAllocMPETypePluginChunk(%struct._cmsContext_struct*, %struct._cmsContext_struct*) local_unnamed_addr #9

declare void @_cmsAllocTagPluginChunk(%struct._cmsContext_struct*, %struct._cmsContext_struct*) local_unnamed_addr #9

declare void @_cmsAllocIntentsPluginChunk(%struct._cmsContext_struct*, %struct._cmsContext_struct*) local_unnamed_addr #9

declare void @_cmsAllocOptimizationPluginChunk(%struct._cmsContext_struct*, %struct._cmsContext_struct*) local_unnamed_addr #9

declare void @_cmsAllocTransformPluginChunk(%struct._cmsContext_struct*, %struct._cmsContext_struct*) local_unnamed_addr #9

declare void @_cmsAllocMutexPluginChunk(%struct._cmsContext_struct*, %struct._cmsContext_struct*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsContext_struct* @cmsDupContext(%struct._cmsContext_struct*, i8*) local_unnamed_addr #3 {
  %3 = icmp eq %struct._cmsContext_struct* %0, null
  br i1 %3, label %18, label %4

4:                                                ; preds = %2
  %5 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull @_cmsContextPoolHeadMutex) #7
  %6 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** @_cmsContextPoolHead, align 8
  %7 = icmp eq %struct._cmsContext_struct* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %4, %11
  %9 = phi %struct._cmsContext_struct* [ %13, %11 ], [ %6, %4 ]
  %10 = icmp eq %struct._cmsContext_struct* %9, %0
  br i1 %10, label %15, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %9, i64 0, i32 0
  %13 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %12, align 8
  %14 = icmp eq %struct._cmsContext_struct* %13, null
  br i1 %14, label %15, label %8

15:                                               ; preds = %11, %8, %4
  %16 = phi %struct._cmsContext_struct* [ @globalContext, %4 ], [ @globalContext, %11 ], [ %0, %8 ]
  %17 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull @_cmsContextPoolHeadMutex) #7
  br label %18

18:                                               ; preds = %15, %2
  %19 = phi %struct._cmsContext_struct* [ @globalContext, %2 ], [ %16, %15 ]
  %20 = icmp eq i8* %1, null
  br i1 %20, label %21, label %24

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %19, i64 0, i32 2, i64 0
  %23 = load i8*, i8** %22, align 8
  br label %24

24:                                               ; preds = %18, %21
  %25 = phi i8* [ %23, %21 ], [ %1, %18 ]
  %26 = tail call i8* @_cmsMalloc(%struct._cmsContext_struct* %0, i32 184) #7
  %27 = bitcast i8* %26 to %struct._cmsContext_struct*
  %28 = icmp eq i8* %26, null
  br i1 %28, label %55, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds i8, i8* %26, i64 136
  %31 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %19, i64 0, i32 3
  %32 = bitcast %struct._cmsMemPluginChunkType* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %32, i64 48, i1 false)
  %33 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull @_cmsContextPoolHeadMutex) #7
  %34 = load i64, i64* bitcast (%struct._cmsContext_struct** @_cmsContextPoolHead to i64*), align 8
  %35 = bitcast i8* %26 to i64*
  store i64 %34, i64* %35, align 8
  store i8* %26, i8** bitcast (%struct._cmsContext_struct** @_cmsContextPoolHead to i8**), align 8
  %36 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull @_cmsContextPoolHeadMutex) #7
  %37 = getelementptr inbounds i8, i8* %26, i64 16
  %38 = bitcast i8* %37 to i8**
  store i8* %25, i8** %38, align 8
  %39 = getelementptr inbounds i8, i8* %26, i64 48
  %40 = bitcast i8* %39 to i8**
  store i8* %30, i8** %40, align 8
  %41 = tail call %struct._cmsSubAllocator* @_cmsCreateSubAlloc(%struct._cmsContext_struct* nonnull %27, i32 176) #7
  %42 = getelementptr inbounds i8, i8* %26, i64 8
  %43 = bitcast i8* %42 to %struct._cmsSubAllocator**
  store %struct._cmsSubAllocator* %41, %struct._cmsSubAllocator** %43, align 8
  %44 = icmp eq %struct._cmsSubAllocator* %41, null
  br i1 %44, label %45, label %46

45:                                               ; preds = %29
  tail call void @cmsDeleteContext(%struct._cmsContext_struct* nonnull %27)
  br label %55

46:                                               ; preds = %29
  tail call void @_cmsAllocLogErrorChunk(%struct._cmsContext_struct* nonnull %27, %struct._cmsContext_struct* %19) #7
  tail call void @_cmsAllocAlarmCodesChunk(%struct._cmsContext_struct* nonnull %27, %struct._cmsContext_struct* %19) #7
  tail call void @_cmsAllocAdaptationStateChunk(%struct._cmsContext_struct* nonnull %27, %struct._cmsContext_struct* %19) #7
  tail call void @_cmsAllocMemPluginChunk(%struct._cmsContext_struct* nonnull %27, %struct._cmsContext_struct* %19) #7
  tail call void @_cmsAllocInterpPluginChunk(%struct._cmsContext_struct* nonnull %27, %struct._cmsContext_struct* %19) #7
  tail call void @_cmsAllocCurvesPluginChunk(%struct._cmsContext_struct* nonnull %27, %struct._cmsContext_struct* %19) #7
  tail call void @_cmsAllocFormattersPluginChunk(%struct._cmsContext_struct* nonnull %27, %struct._cmsContext_struct* %19) #7
  tail call void @_cmsAllocTagTypePluginChunk(%struct._cmsContext_struct* nonnull %27, %struct._cmsContext_struct* %19) #7
  tail call void @_cmsAllocMPETypePluginChunk(%struct._cmsContext_struct* nonnull %27, %struct._cmsContext_struct* %19) #7
  tail call void @_cmsAllocTagPluginChunk(%struct._cmsContext_struct* nonnull %27, %struct._cmsContext_struct* %19) #7
  tail call void @_cmsAllocIntentsPluginChunk(%struct._cmsContext_struct* nonnull %27, %struct._cmsContext_struct* %19) #7
  tail call void @_cmsAllocOptimizationPluginChunk(%struct._cmsContext_struct* nonnull %27, %struct._cmsContext_struct* %19) #7
  tail call void @_cmsAllocTransformPluginChunk(%struct._cmsContext_struct* nonnull %27, %struct._cmsContext_struct* %19) #7
  tail call void @_cmsAllocMutexPluginChunk(%struct._cmsContext_struct* nonnull %27, %struct._cmsContext_struct* %19) #7
  %47 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %19, i64 0, i32 2, i64 1
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %54, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %19, i64 0, i32 2, i64 2
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %57

54:                                               ; preds = %101, %97, %93, %89, %85, %81, %77, %73, %69, %65, %61, %57, %50, %46
  tail call void @cmsDeleteContext(%struct._cmsContext_struct* nonnull %27)
  br label %55

55:                                               ; preds = %101, %24, %54, %45
  %56 = phi %struct._cmsContext_struct* [ null, %45 ], [ null, %54 ], [ null, %24 ], [ %27, %101 ]
  ret %struct._cmsContext_struct* %56

57:                                               ; preds = %50
  %58 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %19, i64 0, i32 2, i64 3
  %59 = load i8*, i8** %58, align 8
  %60 = icmp eq i8* %59, null
  br i1 %60, label %54, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %19, i64 0, i32 2, i64 4
  %63 = load i8*, i8** %62, align 8
  %64 = icmp eq i8* %63, null
  br i1 %64, label %54, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %19, i64 0, i32 2, i64 5
  %67 = load i8*, i8** %66, align 8
  %68 = icmp eq i8* %67, null
  br i1 %68, label %54, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %19, i64 0, i32 2, i64 6
  %71 = load i8*, i8** %70, align 8
  %72 = icmp eq i8* %71, null
  br i1 %72, label %54, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %19, i64 0, i32 2, i64 7
  %75 = load i8*, i8** %74, align 8
  %76 = icmp eq i8* %75, null
  br i1 %76, label %54, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %19, i64 0, i32 2, i64 8
  %79 = load i8*, i8** %78, align 8
  %80 = icmp eq i8* %79, null
  br i1 %80, label %54, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %19, i64 0, i32 2, i64 9
  %83 = load i8*, i8** %82, align 8
  %84 = icmp eq i8* %83, null
  br i1 %84, label %54, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %19, i64 0, i32 2, i64 10
  %87 = load i8*, i8** %86, align 8
  %88 = icmp eq i8* %87, null
  br i1 %88, label %54, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %19, i64 0, i32 2, i64 11
  %91 = load i8*, i8** %90, align 8
  %92 = icmp eq i8* %91, null
  br i1 %92, label %54, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %19, i64 0, i32 2, i64 12
  %95 = load i8*, i8** %94, align 8
  %96 = icmp eq i8* %95, null
  br i1 %96, label %54, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %19, i64 0, i32 2, i64 13
  %99 = load i8*, i8** %98, align 8
  %100 = icmp eq i8* %99, null
  br i1 %100, label %54, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %19, i64 0, i32 2, i64 14
  %103 = load i8*, i8** %102, align 8
  %104 = icmp eq i8* %103, null
  br i1 %104, label %54, label %55
}

declare void @_cmsSubAllocDestroy(%struct._cmsSubAllocator*) local_unnamed_addr #9

declare void @_cmsFree(%struct._cmsContext_struct*, i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden i8* @cmsGetContextUserData(%struct._cmsContext_struct* readonly) local_unnamed_addr #3 {
  %2 = icmp eq %struct._cmsContext_struct* %0, null
  br i1 %2, label %17, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull @_cmsContextPoolHeadMutex) #7
  %5 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** @_cmsContextPoolHead, align 8
  %6 = icmp eq %struct._cmsContext_struct* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %3, %10
  %8 = phi %struct._cmsContext_struct* [ %12, %10 ], [ %5, %3 ]
  %9 = icmp eq %struct._cmsContext_struct* %8, %0
  br i1 %9, label %14, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %8, i64 0, i32 0
  %12 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %11, align 8
  %13 = icmp eq %struct._cmsContext_struct* %12, null
  br i1 %13, label %14, label %7

14:                                               ; preds = %10, %7, %3
  %15 = phi %struct._cmsContext_struct* [ @globalContext, %3 ], [ @globalContext, %10 ], [ %0, %7 ]
  %16 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull @_cmsContextPoolHeadMutex) #7
  br label %17

17:                                               ; preds = %14, %1
  %18 = phi %struct._cmsContext_struct* [ @globalContext, %1 ], [ %15, %14 ]
  %19 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %18, i64 0, i32 2, i64 0
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, null
  %22 = load i8*, i8** getelementptr inbounds (%struct._cmsContext_struct, %struct._cmsContext_struct* @globalContext, i64 0, i32 2, i64 0), align 8
  %23 = select i1 %21, i8* %22, i8* %20
  ret i8* %23
}

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #10

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #4

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #4

attributes #0 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
