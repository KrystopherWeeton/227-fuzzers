; ModuleID = '../../third_party/pdfium/fxbarcode/oned/BC_OnedEANWriter.cpp'
source_filename = "../../third_party/pdfium/fxbarcode/oned/BC_OnedEANWriter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CBC_OneDimEANWriter = type { %class.CBC_OneDimWriter.base, [4 x i8] }
%class.CBC_OneDimWriter.base = type <{ %class.CBC_Writer.base, i8, i8, i8, i8, [6 x i8], %"class.fxcrt::UnownedPtr", float, i32, i32, i8, [3 x i8], i32, [4 x i8], i64, %"class.std::__1::vector", i32, i32, float }>
%class.CBC_Writer.base = type <{ i32 (...)**, i32, i32, i32, i32, i32, i16 }>
%"class.fxcrt::UnownedPtr" = type { %class.CFX_Font* }
%class.CFX_Font = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.CFX_PathData*, %class.CFX_PathData*, %"class.std::__1::__compressed_pair" }
%class.CFX_PathData = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFX_PathData* }
%class.CBC_OneDimWriter = type <{ %class.CBC_Writer.base, i8, i8, i8, i8, [6 x i8], %"class.fxcrt::UnownedPtr", float, i32, i32, i8, [3 x i8], i32, [4 x i8], i64, %"class.std::__1::vector", i32, i32, float, [4 x i8] }>
%class.CBC_Writer = type <{ i32 (...)**, i32, i32, i32, i32, i32, i16, [2 x i8] }>
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.1", i64 }
%"class.fxcrt::UnownedPtr.1" = type { i32* }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%class.CFX_RenderDevice = type opaque
%class.CFX_Matrix = type { float, float, float, float, float, float }

@_ZTV19CBC_OneDimEANWriter = hidden unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CBC_OneDimEANWriter*)* @_ZN19CBC_OneDimEANWriterD2Ev to i8*), i8* bitcast (void (%class.CBC_OneDimEANWriter*)* @_ZN19CBC_OneDimEANWriterD0Ev to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer15SetCharEncodingEi to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer15SetModuleHeightEi to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer14SetModuleWidthEi to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer9SetHeightEi to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer8SetWidthEi to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i8)* @_ZN10CBC_Writer15SetTextLocationE11BC_TEXT_LOC to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i8)* @_ZN10CBC_Writer18SetWideNarrowRatioEa to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i8)* @_ZN10CBC_Writer12SetStartCharEc to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i8)* @_ZN10CBC_Writer10SetEndCharEc to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer23SetErrorCorrectionLevelEi to i8*), i8* bitcast (i1 (%class.CBC_OneDimWriter*, %"class.fxcrt::StringViewTemplate"*, i8*, i32)* @_ZN16CBC_OneDimWriter12RenderResultEN5fxcrt18StringViewTemplateIwEEPhi to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.CBC_OneDimWriter*, i1)* @_ZN16CBC_OneDimWriter16SetPrintChecksumEb to i8*), i8* bitcast (void (%class.CBC_OneDimWriter*, i32)* @_ZN16CBC_OneDimWriter13SetDataLengthEi to i8*), i8* bitcast (void (%class.CBC_OneDimWriter*, i1)* @_ZN16CBC_OneDimWriter15SetCalcChecksumEb to i8*), i8* bitcast (void (%class.CBC_OneDimWriter*, float)* @_ZN16CBC_OneDimWriter11SetFontSizeEf to i8*), i8* bitcast (void (%class.CBC_OneDimWriter*, i32)* @_ZN16CBC_OneDimWriter12SetFontStyleEi to i8*), i8* bitcast (void (%class.CBC_OneDimWriter*, i32)* @_ZN16CBC_OneDimWriter12SetFontColorEj to i8*), i8* bitcast (i8* (%class.CBC_OneDimWriter*, %"class.fxcrt::ByteString"*, i32, i32*, i32*, i32)* @_ZN16CBC_OneDimWriter14EncodeWithHintERKN5fxcrt10ByteStringE8BCFORMATRiS5_i to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%class.CBC_OneDimWriter*, %"class.fxcrt::StringViewTemplate"*, %class.CFX_RenderDevice*, %class.CFX_Matrix*, i32, i32)* @_ZN16CBC_OneDimWriter9ShowCharsEN5fxcrt18StringViewTemplateIwEEP16CFX_RenderDeviceRK10CFX_Matrixii to i8*), i8* bitcast (void (%class.CBC_OneDimEANWriter*)* @_ZN19CBC_OneDimEANWriter13InitEANWriterEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN19CBC_OneDimEANWriterD1Ev = hidden unnamed_addr alias void (%class.CBC_OneDimEANWriter*), void (%class.CBC_OneDimEANWriter*)* @_ZN19CBC_OneDimEANWriterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CBC_OneDimEANWriterC2Ev(%class.CBC_OneDimEANWriter*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CBC_OneDimEANWriter* %0 to %class.CBC_OneDimWriter*
  tail call void @_ZN16CBC_OneDimWriterC2Ev(%class.CBC_OneDimWriter* %2) #6
  %3 = getelementptr inbounds %class.CBC_OneDimEANWriter, %class.CBC_OneDimEANWriter* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTV19CBC_OneDimEANWriter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN16CBC_OneDimWriterC2Ev(%class.CBC_OneDimWriter*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN16CBC_OneDimWriterD2Ev(%class.CBC_OneDimWriter*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CBC_OneDimEANWriterD2Ev(%class.CBC_OneDimEANWriter*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CBC_OneDimEANWriter* %0 to %class.CBC_OneDimWriter*
  tail call void @_ZN16CBC_OneDimWriterD2Ev(%class.CBC_OneDimWriter* %2) #6
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN19CBC_OneDimEANWriterD0Ev(%class.CBC_OneDimEANWriter* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN19CBC_OneDimEANWriter13InitEANWriterEv(%class.CBC_OneDimEANWriter* nocapture) unnamed_addr #5 align 2 {
  ret void
}

declare zeroext i1 @_ZN10CBC_Writer15SetCharEncodingEi(%class.CBC_Writer*, i32) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer15SetModuleHeightEi(%class.CBC_Writer*, i32) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer14SetModuleWidthEi(%class.CBC_Writer*, i32) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer9SetHeightEi(%class.CBC_Writer*, i32) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer8SetWidthEi(%class.CBC_Writer*, i32) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer15SetTextLocationE11BC_TEXT_LOC(%class.CBC_Writer*, i8 zeroext) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer18SetWideNarrowRatioEa(%class.CBC_Writer*, i8 signext) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer12SetStartCharEc(%class.CBC_Writer*, i8 signext) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer10SetEndCharEc(%class.CBC_Writer*, i8 signext) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer23SetErrorCorrectionLevelEi(%class.CBC_Writer*, i32) unnamed_addr #1

declare zeroext i1 @_ZN16CBC_OneDimWriter12RenderResultEN5fxcrt18StringViewTemplateIwEEPhi(%class.CBC_OneDimWriter*, %"class.fxcrt::StringViewTemplate"*, i8*, i32) unnamed_addr #1

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN16CBC_OneDimWriter16SetPrintChecksumEb(%class.CBC_OneDimWriter*, i1 zeroext) unnamed_addr #1

declare void @_ZN16CBC_OneDimWriter13SetDataLengthEi(%class.CBC_OneDimWriter*, i32) unnamed_addr #1

declare void @_ZN16CBC_OneDimWriter15SetCalcChecksumEb(%class.CBC_OneDimWriter*, i1 zeroext) unnamed_addr #1

declare void @_ZN16CBC_OneDimWriter11SetFontSizeEf(%class.CBC_OneDimWriter*, float) unnamed_addr #1

declare void @_ZN16CBC_OneDimWriter12SetFontStyleEi(%class.CBC_OneDimWriter*, i32) unnamed_addr #1

declare void @_ZN16CBC_OneDimWriter12SetFontColorEj(%class.CBC_OneDimWriter*, i32) unnamed_addr #1

declare i8* @_ZN16CBC_OneDimWriter14EncodeWithHintERKN5fxcrt10ByteStringE8BCFORMATRiS5_i(%class.CBC_OneDimWriter*, %"class.fxcrt::ByteString"* dereferenceable(8), i32, i32* dereferenceable(4), i32* dereferenceable(4), i32) unnamed_addr #1

declare zeroext i1 @_ZN16CBC_OneDimWriter9ShowCharsEN5fxcrt18StringViewTemplateIwEEP16CFX_RenderDeviceRK10CFX_Matrixii(%class.CBC_OneDimWriter*, %"class.fxcrt::StringViewTemplate"*, %class.CFX_RenderDevice*, %class.CFX_Matrix* dereferenceable(24), i32, i32) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
