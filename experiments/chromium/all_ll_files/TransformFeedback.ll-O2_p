; ModuleID = '../../third_party/angle/src/libANGLE/TransformFeedback.cpp'
source_filename = "../../third_party/angle/src/libANGLE/TransformFeedback.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gl::TransformFeedbackState" = type { %"class.std::__1::basic_string", i8, i8, i8, i64, i64, %"class.gl::Program"*, %"class.std::__1::vector.440" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.gl::Program" = type { %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::HasAttachedShaders", %"class.rx::Serial", %"class.gl::ProgramState", %"class.rx::ProgramImpl"*, i8, %"class.gl::ProgramBindings", %"class.gl::ProgramAliasedBindings", %"class.gl::ProgramAliasedBindings", i8, %"class.std::__1::unique_ptr.235", i8, i32, %"class.gl::ShaderProgramManager"*, %"struct.gl::ShaderProgramID", %"class.angle::BitSetT.201" }
%"class.gl::LabeledObject" = type { i32 (...)** }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"class.gl::HasAttachedShaders" = type { i32 (...)** }
%"class.rx::Serial" = type { i64 }
%"class.gl::ProgramState" = type { %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", %"class.angle::PackedEnumMap.123", i32, %"class.std::__1::vector.125", %"class.std::__1::vector.132", %"class.std::__1::vector.139", %"class.gl::Range", %"class.angle::BitSetT.147", %"class.std::__1::vector", %"class.angle::BitSetT.148", i8, i8, i8, i8, %"class.angle::BitSetT", i32, i32, i32, i32, i32, i32, %"class.gl::ProgramAliasedBindings", %"class.std::__1::shared_ptr" }
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.angle::PackedEnumMap.123" = type { %"struct.std::__1::array.124" }
%"struct.std::__1::array.124" = type { [6 x %"class.gl::Shader"*] }
%"class.gl::Shader" = type { %"class.gl::LabeledObject", %"class.gl::ShaderState", %"class.std::__1::unique_ptr.85", %"struct.gl::Limitations", %"struct.gl::ShaderProgramID", i8, i32, i8, %"class.std::__1::basic_string", %"class.gl::BindingPointer", %"class.std::__1::unique_ptr.107", %"class.std::__1::basic_string", %"class.gl::ShaderProgramManager"*, i32, i32 }
%"class.gl::ShaderState" = type <{ %"class.std::__1::basic_string", i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", [4 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.77", %"class.std::__1::vector.77", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", i8, [3 x i8], %"class.angle::BitSetT", i32, %struct.Optional, %struct.Optional, %struct.Optional.84, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.79" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.70" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.sh::InterfaceBlock"* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.72" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", i8, i8, %"class.std::__1::vector.70", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.sh::ShaderVariable"* }
%struct.Optional = type { i8, i8 }
%struct.Optional.84 = type { i8, i32 }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.rx::ShaderImpl"* }
%"class.rx::ShaderImpl" = type opaque
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.gl::BindingPointer" = type { %"class.angle::BindingPointer.91" }
%"class.angle::BindingPointer.91" = type { i32 (...)**, %"class.gl::Compiler"* }
%"class.gl::Compiler" = type { %"class.angle::RefCountObject", %"class.std::__1::unique_ptr.92", i32, i32, %struct.ShBuiltInResources, %"class.angle::PackedEnumMap.98" }
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.rx::CompilerImpl"* }
%"class.rx::CompilerImpl" = type opaque
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array.32" = type { [3 x i32] }
%"class.angle::PackedEnumMap.98" = type { %"struct.std::__1::array.99" }
%"struct.std::__1::array.99" = type { [6 x %"class.std::__1::vector.100"] }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"class.gl::ShCompilerInstance"*, %"class.gl::ShCompilerInstance"*, %"class.std::__1::__compressed_pair.102" }
%"class.gl::ShCompilerInstance" = type <{ i8*, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.gl::ShCompilerInstance"* }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.gl::Shader::CompilingState"* }
%"struct.gl::Shader::CompilingState" = type opaque
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"*, %"class.std::__1::__compressed_pair.134" }
%"struct.gl::VariableLocation" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.gl::VariableLocation"* }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"struct.gl::BufferVariable"*, %"struct.gl::BufferVariable"*, %"class.std::__1::__compressed_pair.142" }
%"struct.gl::BufferVariable" = type <{ %"struct.gl::ActiveVariable.base", [7 x i8], %"struct.sh::ShaderVariable", i32, %"struct.sh::BlockMemberInfo", i32, [4 x i8] }>
%"struct.gl::ActiveVariable.base" = type <{ i32 (...)**, %"class.angle::BitSetT.141" }>
%"class.angle::BitSetT.141" = type { i8 }
%"struct.sh::BlockMemberInfo" = type { i32, i32, i32, i8, i32 }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.gl::BufferVariable"* }
%"class.gl::Range" = type { i32, i32 }
%"class.angle::BitSetT.147" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i32* }
%"class.angle::BitSetT.148" = type { i64 }
%"class.angle::BitSetT" = type { i32 }
%"class.std::__1::shared_ptr" = type { %"class.gl::ProgramExecutable"*, %"class.std::__1::__shared_weak_count"* }
%"class.gl::ProgramExecutable" = type <{ %"class.angle::Subject", %"class.gl::InfoLog", %"class.angle::BitSetT.141", %"class.angle::BitSetT.141", [6 x i8], %"class.angle::BitSetT.166", i32, [4 x i8], %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"struct.std::__1::array.169", %"struct.std::__1::array.170", %"class.angle::BitSetArray", %"struct.std::__1::array.171", %"struct.std::__1::array.172", %"class.angle::BitSetArray", %"struct.std::__1::array.172", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.132", %"class.std::__1::vector.132", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.173", %"class.std::__1::vector.180", i32, [4 x i8], %"class.std::__1::vector.187", %"class.gl::Range", %"class.gl::Range", %"class.std::__1::vector.194", %"class.angle::BitSetT.201", %"class.std::__1::vector.202", %"class.gl::Range", %"class.std::__1::vector.194", %"class.std::__1::vector.194", %"class.gl::Range", %"class.std::__1::vector.209", %"class.std::__1::vector.216", %"class.std::__1::vector.216", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap", i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, %struct.Optional.225, [6 x i8] }>
%"class.gl::InfoLog" = type { %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.angle::BitSetT.166" = type { i64 }
%"struct.std::__1::array.169" = type { [96 x i32] }
%"struct.std::__1::array.170" = type { [96 x i8] }
%"struct.std::__1::array.171" = type { [96 x i8] }
%"class.angle::BitSetArray" = type { %"struct.std::__1::array.167" }
%"struct.std::__1::array.167" = type { [2 x %"class.angle::BitSetT.168"] }
%"class.angle::BitSetT.168" = type { i64 }
%"struct.std::__1::array.172" = type { [96 x %"class.angle::BitSetT.141"] }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"*, %"class.std::__1::__compressed_pair.175" }
%"struct.gl::TransformFeedbackVarying" = type <{ %"struct.sh::ShaderVariable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.gl::TransformFeedbackVarying"* }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { i32*, i32*, %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { i32* }
%"class.std::__1::vector.187" = type { %"class.std::__1::__vector_base.188" }
%"class.std::__1::__vector_base.188" = type { %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"*, %"class.std::__1::__compressed_pair.189" }
%"struct.gl::LinkedUniform" = type { %"struct.gl::ActiveVariable.base", %"struct.sh::ShaderVariable", %"struct.gl::UniformTypeInfo"*, i32, %"struct.sh::BlockMemberInfo", %"class.std::__1::vector" }
%"struct.gl::UniformTypeInfo" = type <{ i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, [4 x i8], i64, i64, i64, i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.gl::LinkedUniform"* }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"*, %"class.std::__1::__compressed_pair.204" }
%"struct.gl::ShaderVariableBuffer" = type { %"struct.gl::ActiveVariable.base", i32, i32, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.gl::ShaderVariableBuffer"* }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"*, %"class.std::__1::__compressed_pair.196" }
%"struct.gl::InterfaceBlock" = type <{ %"struct.gl::ShaderVariableBuffer", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.gl::InterfaceBlock"* }
%"class.std::__1::vector.209" = type { %"class.std::__1::__vector_base.210" }
%"class.std::__1::__vector_base.210" = type { %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"*, %"class.std::__1::__compressed_pair.211" }
%"struct.gl::SamplerBinding" = type { i8, i32, i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.gl::SamplerBinding"* }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"*, %"class.std::__1::__compressed_pair.218" }
%"struct.gl::ImageBinding" = type { i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.gl::ImageBinding"* }
%"class.angle::PackedEnumMap.223" = type { %"struct.std::__1::array.224" }
%"struct.std::__1::array.224" = type { [6 x %"class.std::__1::vector.70"] }
%"class.angle::PackedEnumMap" = type { %"struct.std::__1::array.29" }
%"struct.std::__1::array.29" = type { [6 x i32] }
%struct.Optional.225 = type { i8, i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.rx::ProgramImpl" = type opaque
%"class.gl::ProgramBindings" = type { %"class.absl::flat_hash_map.226" }
%"class.absl::flat_hash_map.226" = type { %"class.absl::container_internal::raw_hash_map.227" }
%"class.absl::container_internal::raw_hash_map.227" = type { %"class.absl::container_internal::raw_hash_set.228" }
%"class.absl::container_internal::raw_hash_set.228" = type { i8*, %"union.absl::container_internal::map_slot_type.229"*, i64, i64, %"class.absl::container_internal::CompressedTuple.230" }
%"union.absl::container_internal::map_slot_type.229" = type opaque
%"class.absl::container_internal::CompressedTuple.230" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.gl::ProgramAliasedBindings" = type { %"class.absl::flat_hash_map.149" }
%"class.absl::flat_hash_map.149" = type { %"class.absl::container_internal::raw_hash_map.150" }
%"class.absl::container_internal::raw_hash_map.150" = type { %"class.absl::container_internal::raw_hash_set.151" }
%"class.absl::container_internal::raw_hash_set.151" = type { i8*, %"union.absl::container_internal::map_slot_type.152"*, i64, i64, %"class.absl::container_internal::CompressedTuple.153" }
%"union.absl::container_internal::map_slot_type.152" = type opaque
%"class.absl::container_internal::CompressedTuple.153" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.gl::Program::LinkingState"* }
%"struct.gl::Program::LinkingState" = type opaque
%"class.gl::ShaderProgramManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.122" }
%"class.gl::ResourceManagerBase" = type { i32 (...)**, %"class.gl::HandleAllocator", i64 }
%"class.gl::HandleAllocator" = type <{ i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.45", %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"*, %"class.std::__1::__compressed_pair.47" }
%"struct.gl::HandleAllocator::HandleRange" = type { i32, i32 }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.gl::HandleAllocator::HandleRange"* }
%"class.gl::ResourceMap.69" = type { i64, %"class.gl::Shader"**, %"class.absl::flat_hash_map.113" }
%"class.absl::flat_hash_map.113" = type { %"class.absl::container_internal::raw_hash_map.114" }
%"class.absl::container_internal::raw_hash_map.114" = type { %"class.absl::container_internal::raw_hash_set.115" }
%"class.absl::container_internal::raw_hash_set.115" = type { i8*, %"union.absl::container_internal::map_slot_type.116"*, i64, i64, %"class.absl::container_internal::CompressedTuple.117" }
%"union.absl::container_internal::map_slot_type.116" = type opaque
%"class.absl::container_internal::CompressedTuple.117" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.122" = type { i64, %"class.gl::Program"**, %"class.absl::flat_hash_map.241" }
%"class.absl::flat_hash_map.241" = type { %"class.absl::container_internal::raw_hash_map.242" }
%"class.absl::container_internal::raw_hash_map.242" = type { %"class.absl::container_internal::raw_hash_set.243" }
%"class.absl::container_internal::raw_hash_set.243" = type { i8*, %"union.absl::container_internal::map_slot_type.244"*, i64, i64, %"class.absl::container_internal::CompressedTuple.245" }
%"union.absl::container_internal::map_slot_type.244" = type { %"struct.std::__1::pair.627" }
%"struct.std::__1::pair.627" = type { i32, %"class.gl::Program"* }
%"class.absl::container_internal::CompressedTuple.245" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.gl::ShaderProgramID" = type { i32 }
%"class.angle::BitSetT.201" = type { i64 }
%"class.std::__1::vector.440" = type { %"class.std::__1::__vector_base.441" }
%"class.std::__1::__vector_base.441" = type { %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"*, %"class.std::__1::__compressed_pair.442" }
%"class.gl::OffsetBindingPointer" = type { %"class.gl::BindingPointer.264", i64, i64 }
%"class.gl::BindingPointer.264" = type { %"class.angle::BindingPointer.265" }
%"class.angle::BindingPointer.265" = type { i32 (...)**, %"class.gl::Buffer"* }
%"class.gl::Buffer" = type { %"class.gl::RefCountObject.base.53", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.angle::Subject", %"class.gl::BufferState", %"class.rx::BufferImpl"*, %"class.angle::ObserverBinding", %"class.gl::IndexRangeCache" }
%"class.gl::RefCountObject.base.53" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::BufferID" }>
%"struct.gl::BufferID" = type { i32 }
%"class.gl::BufferState" = type <{ %"class.std::__1::basic_string", i8, [7 x i8], i64, i32, i32, i8, [7 x i8], i8*, i64, i64, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.rx::BufferImpl" = type opaque
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.gl::IndexRangeCache" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.54" }
%"class.std::__1::__tree.54" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.gl::OffsetBindingPointer"* }
%"class.gl::TransformFeedback" = type { %"class.gl::RefCountObject.base.452", %"class.gl::LabeledObject", %"class.gl::TransformFeedbackState", %"class.rx::TransformFeedbackImpl"* }
%"class.gl::RefCountObject.base.452" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TransformFeedbackID" }>
%"struct.gl::TransformFeedbackID" = type { i32 }
%"class.rx::TransformFeedbackImpl" = type { i32 (...)**, %"class.gl::TransformFeedbackState"* }
%"class.rx::GLImplFactory" = type { i32 (...)**, %"class.rx::SerialFactoryBase" }
%"class.rx::SerialFactoryBase" = type { i64 }
%"struct.gl::Caps" = type <{ float, float, i32, [4 x i8], i64, i32, i32, i32, i32, float, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap.30", i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, [4 x i8] }>
%"struct.gl::TypePrecision" = type { %"struct.std::__1::array.28", i32 }
%"struct.std::__1::array.28" = type { [2 x i32] }
%"class.angle::PackedEnumMap.30" = type { %"struct.std::__1::array.31" }
%"struct.std::__1::array.31" = type { [6 x i64] }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.gl::Context" = type <{ %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::State", i8, i8, i8, i8, [4 x i8], %"class.gl::ErrorSet", %"class.angle::BitSetT.537", [4 x i8], %"class.std::__1::unique_ptr.538", i8*, %"struct.gl::Extensions", [4 x i8], %"class.gl::BindingPointer", %"struct.egl::Config"*, %"class.angle::PackedEnumMap.544", %"class.gl::ResourceMap.546", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.556", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.566", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.576", %"class.gl::HandleAllocator", i8*, i8*, i8*, i8*, %"class.std::__1::vector.586", i8*, %"class.std::__1::vector.586", %"class.std::__1::unique_ptr.593", i8, i8, i8, i8, i32, i8, i8, i8, [5 x i8], %"class.egl::Surface"*, %"class.egl::Surface"*, %"class.egl::Display"*, i8, i8, i8, [5 x i8], %"class.gl::MemoryProgramCache"*, %"class.angle::BitSetT.536", %"class.gl::StateCache", %"class.angle::BitSetT.168", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %struct.Optional.607, %struct.Optional.607, %"class.std::__1::shared_ptr.608", %"class.std::__1::unique_ptr.609", %"class.std::__1::basic_string", i64, %"class.gl::MockOverlay", i8, i8, i8, [4 x i8] }>
%"class.egl::LabeledObject" = type { i32 (...)** }
%"class.gl::State" = type <{ %"struct.gl::ContextID", i32, i32, %"struct.gl::Version", [4 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"class.egl::ShareGroup"*, %"class.gl::BufferManager"*, %"class.gl::ShaderProgramManager"*, %"class.gl::TextureManager"*, %"class.gl::RenderbufferManager"*, %"class.gl::SamplerManager"*, %"class.gl::SyncManager"*, %"class.gl::FramebufferManager"*, %"class.gl::ProgramPipelineManager"*, %"class.gl::MemoryObjectManager"*, %"class.gl::SemaphoreManager"*, i32, i32, %"struct.angle::Color", float, i32, %"struct.gl::RasterizerState", i8, [3 x i8], %"struct.gl::Rectangle", %"struct.gl::BlendState", [4 x i8], %"class.gl::BlendStateExt", %"struct.angle::Color", i8, i8, [2 x i8], float, i8, i8, [2 x i8], i32, %"struct.std::__1::array.373", i8, [3 x i8], float, %"struct.gl::DepthStencilState", i32, i32, float, i32, i32, i32, i8, i8, [2 x i8], %"struct.gl::Rectangle", float, float, i32, i32, %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"*, %"class.gl::BindingPointer.374", %"class.gl::Program"*, %"class.gl::BindingPointer.376", %"class.gl::ProgramExecutable"*, i8, [7 x i8], %"class.std::__1::vector.378", %"class.gl::VertexArray"*, %"class.angle::BitSetT.148", i64, %"class.angle::PackedEnumMap.406", %"class.gl::ActiveTexturesCache", %"class.std::__1::vector.337", %"class.angle::BitSetArray", %"class.std::__1::vector.418", %"class.std::__1::vector.427", %"class.angle::PackedEnumMap.434", %"class.angle::PackedEnumMap.438", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.angle::BitSetArray.447", %"class.angle::BitSetT.448", %"class.angle::BitSetT.168", %"class.gl::BindingPointer.449", %"struct.gl::PixelUnpackState", %"struct.gl::PixelPackState", i8, [3 x i8], %"class.gl::Debug", i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, %"class.angle::BitSetT.476", i32, %"class.gl::GLES1State", %"class.angle::BitSetT.168", %"class.angle::BitSetT.535", [4 x i8], %"class.angle::BitSetT.536", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.gl::MockOverlay"*, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i8, [5 x i8] }>
%"struct.gl::ContextID" = type { i32 }
%"struct.gl::Version" = type { i32, i32 }
%"class.gl::TextureCapsMap" = type { %"class.angle::PackedEnumMap.33" }
%"class.angle::PackedEnumMap.33" = type { %"struct.std::__1::array.34" }
%"struct.std::__1::array.34" = type { [227 x %"struct.gl::TextureCaps"] }
%"struct.gl::TextureCaps" = type { i8, i8, i8, i8, i8, %"class.std::__1::set.35" }
%"class.std::__1::set.35" = type { %"class.std::__1::__tree.36" }
%"class.std::__1::__tree.36" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.egl::ShareGroup" = type opaque
%"class.gl::BufferManager" = type { %"class.gl::TypedResourceManager" }
%"class.gl::TypedResourceManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap" }
%"class.gl::ResourceMap" = type { i64, %"class.gl::Buffer"**, %"class.absl::flat_hash_map" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %"class.gl::Buffer"* }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::TextureManager" = type { %"class.gl::TypedResourceManager.250" }
%"class.gl::TypedResourceManager.250" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.251" }
%"class.gl::ResourceMap.251" = type { i64, %"class.gl::Texture"**, %"class.absl::flat_hash_map.270" }
%"class.gl::Texture" = type <{ %"class.gl::RefCountObject.base.253", [4 x i8], %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::TextureState", %"class.angle::BitSetT.266", %"class.rx::TextureImpl"*, %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::basic_string", %"class.egl::Surface"*, %"class.egl::Stream"*, %"class.angle::FastVector.268", %"struct.gl::Texture::SamplerCompletenessCache", [4 x i8] }>
%"class.gl::RefCountObject.base.253" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TextureID" }>
%"struct.gl::TextureID" = type { i32 }
%"class.egl::ImageSibling" = type { %"class.gl::FramebufferAttachmentObject", %"class.std::__1::set", %"class.angle::BindingPointer" }
%"class.gl::FramebufferAttachmentObject" = type { %"class.angle::Subject", %"class.angle::ObserverInterface" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::BindingPointer" = type { i32 (...)**, %"class.egl::Image"* }
%"class.egl::Image" = type <{ %"class.angle::RefCountObject.4", %"class.egl::LabeledObject", %"struct.egl::ImageState", %"class.rx::ImageImpl"*, i8, [7 x i8] }>
%"class.angle::RefCountObject.4" = type { i32 (...)**, i64 }
%"struct.egl::ImageState" = type { i8*, i32, %"class.gl::ImageIndex", %"class.egl::ImageSibling"*, %"class.std::__1::set.5", %"struct.gl::Format", i8, %"struct.gl::Extents", i64, i32, i32 }
%"class.gl::ImageIndex" = type { i8, i32, i32, i32 }
%"class.std::__1::set.5" = type { %"class.std::__1::__tree.6" }
%"class.std::__1::__tree.6" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Format" = type { %"struct.gl::InternalFormat"* }
%"struct.gl::InternalFormat" = type { i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)* }
%"struct.gl::Extents" = type { i32, i32, i32 }
%"class.rx::ImageImpl" = type opaque
%"class.gl::TextureState" = type <{ i8, [3 x i8], %"struct.gl::SwizzleState", %"class.gl::SamplerState", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.std::__1::vector.257", %"struct.gl::Rectangle", i32, [4 x i8], %"class.gl::OffsetBindingPointer", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"struct.gl::SwizzleState" = type { i32, i32, i32, i32 }
%"class.gl::SamplerState" = type { i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, %"struct.angle::ColorGeneric", %"union.gl::SamplerState::Completeness" }
%"struct.angle::ColorGeneric" = type <{ %union.anon.254, i8, [3 x i8] }>
%union.anon.254 = type { %"struct.angle::Color" }
%"union.gl::SamplerState::Completeness" = type { i32 }
%"class.std::__1::vector.257" = type { %"class.std::__1::__vector_base.258" }
%"class.std::__1::__vector_base.258" = type { %"struct.gl::ImageDesc"*, %"struct.gl::ImageDesc"*, %"class.std::__1::__compressed_pair.259" }
%"struct.gl::ImageDesc" = type <{ %"struct.gl::Extents", [4 x i8], %"struct.gl::Format", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.gl::ImageDesc"* }
%"class.angle::BitSetT.266" = type { i64 }
%"class.rx::TextureImpl" = type opaque
%"class.egl::Stream" = type { %"class.egl::LabeledObject", i8*, %"class.egl::Display"*, %"class.rx::StreamProducerImpl"*, %"class.gl::Context"*, i32, i64, i64, i32, i32, i32, %"struct.std::__1::array.267", i32, i32 }
%"class.rx::StreamProducerImpl" = type opaque
%"struct.std::__1::array.267" = type { [3 x %"struct.egl::Stream::PlaneTexture"] }
%"struct.egl::Stream::PlaneTexture" = type { i32, %"class.gl::Texture"* }
%"class.angle::FastVector.268" = type { %"struct.std::__1::array.269", %"class.rx::Serial"*, i64, i64 }
%"struct.std::__1::array.269" = type { [8 x %"class.rx::Serial"] }
%"struct.gl::Texture::SamplerCompletenessCache" = type <{ %"struct.gl::ContextID", %"class.gl::SamplerState", i8, [3 x i8] }>
%"class.absl::flat_hash_map.270" = type { %"class.absl::container_internal::raw_hash_map.271" }
%"class.absl::container_internal::raw_hash_map.271" = type { %"class.absl::container_internal::raw_hash_set.272" }
%"class.absl::container_internal::raw_hash_set.272" = type { i8*, %"union.absl::container_internal::map_slot_type.273"*, i64, i64, %"class.absl::container_internal::CompressedTuple.274" }
%"union.absl::container_internal::map_slot_type.273" = type { %"struct.std::__1::pair.629" }
%"struct.std::__1::pair.629" = type { i32, %"class.gl::Texture"* }
%"class.absl::container_internal::CompressedTuple.274" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::RenderbufferManager" = type { %"class.gl::TypedResourceManager.279" }
%"class.gl::TypedResourceManager.279" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.280" }
%"class.gl::ResourceMap.280" = type { i64, %"class.gl::Renderbuffer"**, %"class.absl::flat_hash_map.281" }
%"class.gl::Renderbuffer" = type { %"class.gl::RefCountObject.base", %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::RenderbufferState", %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::RenderbufferID" }>
%"struct.gl::RenderbufferID" = type { i32 }
%"class.gl::RenderbufferState" = type <{ i32, i32, %"struct.gl::Format", i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.rx::RenderbufferImpl"* }
%"class.rx::RenderbufferImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"class.gl::RenderbufferState"* }
%"class.rx::FramebufferAttachmentObjectImpl" = type { %"class.angle::Subject" }
%"class.absl::flat_hash_map.281" = type { %"class.absl::container_internal::raw_hash_map.282" }
%"class.absl::container_internal::raw_hash_map.282" = type { %"class.absl::container_internal::raw_hash_set.283" }
%"class.absl::container_internal::raw_hash_set.283" = type { i8*, %"union.absl::container_internal::map_slot_type.284"*, i64, i64, %"class.absl::container_internal::CompressedTuple.285" }
%"union.absl::container_internal::map_slot_type.284" = type { %"struct.std::__1::pair.631" }
%"struct.std::__1::pair.631" = type { i32, %"class.gl::Renderbuffer"* }
%"class.absl::container_internal::CompressedTuple.285" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SamplerManager" = type { %"class.gl::TypedResourceManager.290" }
%"class.gl::TypedResourceManager.290" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.291" }
%"class.gl::ResourceMap.291" = type { i64, %"class.gl::Sampler"**, %"class.absl::flat_hash_map.294" }
%"class.gl::Sampler" = type { %"class.gl::RefCountObject.base.293", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::SamplerState", i8, %"class.rx::SamplerImpl"*, %"class.std::__1::basic_string" }
%"class.gl::RefCountObject.base.293" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::SamplerID" }>
%"struct.gl::SamplerID" = type { i32 }
%"class.rx::SamplerImpl" = type opaque
%"class.absl::flat_hash_map.294" = type { %"class.absl::container_internal::raw_hash_map.295" }
%"class.absl::container_internal::raw_hash_map.295" = type { %"class.absl::container_internal::raw_hash_set.296" }
%"class.absl::container_internal::raw_hash_set.296" = type { i8*, %"union.absl::container_internal::map_slot_type.297"*, i64, i64, %"class.absl::container_internal::CompressedTuple.298" }
%"union.absl::container_internal::map_slot_type.297" = type { %"struct.std::__1::pair.633" }
%"struct.std::__1::pair.633" = type { i32, %"class.gl::Sampler"* }
%"class.absl::container_internal::CompressedTuple.298" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SyncManager" = type { %"class.gl::TypedResourceManager.303" }
%"class.gl::TypedResourceManager.303" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.304" }
%"class.gl::ResourceMap.304" = type { i64, %"class.gl::Sync"**, %"class.absl::flat_hash_map.305" }
%"class.gl::Sync" = type opaque
%"class.absl::flat_hash_map.305" = type { %"class.absl::container_internal::raw_hash_map.306" }
%"class.absl::container_internal::raw_hash_map.306" = type { %"class.absl::container_internal::raw_hash_set.307" }
%"class.absl::container_internal::raw_hash_set.307" = type { i8*, %"union.absl::container_internal::map_slot_type.308"*, i64, i64, %"class.absl::container_internal::CompressedTuple.309" }
%"union.absl::container_internal::map_slot_type.308" = type opaque
%"class.absl::container_internal::CompressedTuple.309" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::FramebufferManager" = type { %"class.gl::TypedResourceManager.314" }
%"class.gl::TypedResourceManager.314" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.315" }
%"class.gl::ResourceMap.315" = type { i64, %"class.gl::Framebuffer"**, %"class.absl::flat_hash_map.316" }
%"class.absl::flat_hash_map.316" = type { %"class.absl::container_internal::raw_hash_map.317" }
%"class.absl::container_internal::raw_hash_map.317" = type { %"class.absl::container_internal::raw_hash_set.318" }
%"class.absl::container_internal::raw_hash_set.318" = type { i8*, %"union.absl::container_internal::map_slot_type.319"*, i64, i64, %"class.absl::container_internal::CompressedTuple.320" }
%"union.absl::container_internal::map_slot_type.319" = type { %"struct.std::__1::pair.635" }
%"struct.std::__1::pair.635" = type { i32, %"class.gl::Framebuffer"* }
%"class.absl::container_internal::CompressedTuple.320" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramPipelineManager" = type { %"class.gl::TypedResourceManager.325" }
%"class.gl::TypedResourceManager.325" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.326" }
%"class.gl::ResourceMap.326" = type { i64, %"class.gl::ProgramPipeline"**, %"class.absl::flat_hash_map.344" }
%"class.gl::ProgramPipeline" = type { %"class.gl::RefCountObject.base.328", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::HasAttachedShaders", %"class.std::__1::unique_ptr.329", %"class.gl::ProgramPipelineState", %"class.std::__1::vector.337", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base.328" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::ProgramPipelineID" }>
%"struct.gl::ProgramPipelineID" = type { i32 }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.rx::ProgramPipelineImpl"* }
%"class.rx::ProgramPipelineImpl" = type opaque
%"class.gl::ProgramPipelineState" = type <{ %"class.std::__1::basic_string", %"class.gl::Program"*, %"class.angle::PackedEnumMap.335", i8, [7 x i8], %"class.gl::ProgramExecutable"*, i8, [7 x i8] }>
%"class.angle::PackedEnumMap.335" = type { %"struct.std::__1::array.336" }
%"struct.std::__1::array.336" = type { [6 x %"class.gl::Program"*] }
%"class.absl::flat_hash_map.344" = type { %"class.absl::container_internal::raw_hash_map.345" }
%"class.absl::container_internal::raw_hash_map.345" = type { %"class.absl::container_internal::raw_hash_set.346" }
%"class.absl::container_internal::raw_hash_set.346" = type { i8*, %"union.absl::container_internal::map_slot_type.347"*, i64, i64, %"class.absl::container_internal::CompressedTuple.348" }
%"union.absl::container_internal::map_slot_type.347" = type { %"struct.std::__1::pair.637" }
%"struct.std::__1::pair.637" = type { i32, %"class.gl::ProgramPipeline"* }
%"class.absl::container_internal::CompressedTuple.348" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::MemoryObjectManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.353" }
%"class.gl::ResourceMap.353" = type { i64, %"class.gl::MemoryObject"**, %"class.absl::flat_hash_map.354" }
%"class.gl::MemoryObject" = type opaque
%"class.absl::flat_hash_map.354" = type { %"class.absl::container_internal::raw_hash_map.355" }
%"class.absl::container_internal::raw_hash_map.355" = type { %"class.absl::container_internal::raw_hash_set.356" }
%"class.absl::container_internal::raw_hash_set.356" = type { i8*, %"union.absl::container_internal::map_slot_type.357"*, i64, i64, %"class.absl::container_internal::CompressedTuple.358" }
%"union.absl::container_internal::map_slot_type.357" = type opaque
%"class.absl::container_internal::CompressedTuple.358" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SemaphoreManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.363" }
%"class.gl::ResourceMap.363" = type { i64, %"class.gl::Semaphore"**, %"class.absl::flat_hash_map.364" }
%"class.gl::Semaphore" = type opaque
%"class.absl::flat_hash_map.364" = type { %"class.absl::container_internal::raw_hash_map.365" }
%"class.absl::container_internal::raw_hash_map.365" = type { %"class.absl::container_internal::raw_hash_set.366" }
%"class.absl::container_internal::raw_hash_set.366" = type { i8*, %"union.absl::container_internal::map_slot_type.367"*, i64, i64, %"class.absl::container_internal::CompressedTuple.368" }
%"union.absl::container_internal::map_slot_type.367" = type opaque
%"class.absl::container_internal::CompressedTuple.368" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.gl::RasterizerState" = type { i8, i8, i32, i8, float, float, i8, i8, i8, i8 }
%"struct.gl::BlendState" = type { i8, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%"class.gl::BlendStateExt" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i64 }
%"struct.angle::Color" = type { float, float, float, float }
%"struct.std::__1::array.373" = type { [2 x i32] }
%"struct.gl::DepthStencilState" = type { i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.gl::Rectangle" = type { i32, i32, i32, i32 }
%"class.gl::Framebuffer" = type { %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::FramebufferState", %"class.rx::FramebufferImpl"*, %struct.Optional.622, %"class.std::__1::vector.337", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::BitSetT.623", %"class.angle::BitSetT.147", %struct.Optional.624 }
%"class.gl::FramebufferState" = type { %"struct.gl::FramebufferID", %"class.rx::Serial", %"class.std::__1::basic_string", %"class.std::__1::vector.615", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.angle::BitSetT.147", %"class.std::__1::vector", i32, %"class.angle::BitSetT.147", %"class.angle::BitSetT.148", i32, i32, i32, i8, i32, %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", i8, %"class.angle::BitSetT.536", i8, %"class.gl::FramebufferAttachment", i32, %"struct.gl::Offset" }
%"struct.gl::FramebufferID" = type { i32 }
%"class.std::__1::vector.615" = type { %"class.std::__1::__vector_base.616" }
%"class.std::__1::__vector_base.616" = type { %"class.gl::FramebufferAttachment"*, %"class.gl::FramebufferAttachment"*, %"class.std::__1::__compressed_pair.617" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"class.gl::FramebufferAttachment"* }
%"class.gl::FramebufferAttachment" = type { i32, %"class.gl::FramebufferAttachment::Target", %"class.gl::FramebufferAttachmentObject"*, i32, i8, i32, i32 }
%"class.gl::FramebufferAttachment::Target" = type { i32, %"class.gl::ImageIndex" }
%"struct.gl::Offset" = type { i32, i32, i32 }
%"class.rx::FramebufferImpl" = type opaque
%struct.Optional.622 = type { i8, %"struct.gl::FramebufferStatus" }
%"struct.gl::FramebufferStatus" = type { i32, i8* }
%"class.angle::BitSetT.623" = type { i64 }
%struct.Optional.624 = type { i8, %"class.angle::BitSetT.623" }
%"class.gl::BindingPointer.374" = type { %"class.angle::BindingPointer.375" }
%"class.angle::BindingPointer.375" = type { i32 (...)**, %"class.gl::Renderbuffer"* }
%"class.gl::BindingPointer.376" = type { %"class.angle::BindingPointer.377" }
%"class.angle::BindingPointer.377" = type { i32 (...)**, %"class.gl::ProgramPipeline"* }
%"class.std::__1::vector.378" = type { %"class.std::__1::__vector_base.379" }
%"class.std::__1::__vector_base.379" = type { %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"*, %"class.std::__1::__compressed_pair.381" }
%"struct.gl::VertexAttribCurrentValueData" = type { %union.anon.380, i32 }
%union.anon.380 = type { [4 x float] }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.gl::VertexAttribCurrentValueData"* }
%"class.gl::VertexArray" = type <{ %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"struct.gl::VertexArrayID", [4 x i8], %"class.gl::VertexArrayState", %"class.angle::BitSetT.400", %"struct.std::__1::array.401", %"struct.std::__1::array.403", %struct.Optional.405, %"class.rx::VertexArrayImpl"*, %"class.std::__1::vector.337", %"class.angle::BitSetT.166", %"class.gl::VertexArray::IndexRangeCache", i8, [7 x i8] }>
%"struct.gl::VertexArrayID" = type { i32 }
%"class.gl::VertexArrayState" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.386", %"class.gl::SubjectBindingPointer", %"class.std::__1::vector.393", %"class.angle::BitSetT.166", %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166" }
%"class.std::__1::vector.386" = type { %"class.std::__1::__vector_base.387" }
%"class.std::__1::__vector_base.387" = type { %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"*, %"class.std::__1::__compressed_pair.388" }
%"struct.gl::VertexAttribute" = type { i8, %"struct.angle::Format"*, i8*, i32, i32, i32, i64 }
%"struct.angle::Format" = type { i32, i32, i32, void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, void (i8*, i8*)*, void (i8*, i8*)*, %"class.rx::FastCopyFunctionMap"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32 }
%"class.rx::FastCopyFunctionMap" = type { i64, %"struct.rx::FastCopyFunctionMap::Entry"* }
%"struct.rx::FastCopyFunctionMap::Entry" = type { i32, void (i8*, i8*)* }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"struct.gl::VertexAttribute"* }
%"class.gl::SubjectBindingPointer" = type { %"class.gl::BindingPointer.264", %"class.angle::ObserverBindingBase" }
%"class.std::__1::vector.393" = type { %"class.std::__1::__vector_base.394" }
%"class.std::__1::__vector_base.394" = type { %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"*, %"class.std::__1::__compressed_pair.395" }
%"class.gl::VertexBinding" = type { i32, i32, i64, %"class.gl::BindingPointer.264", %"class.angle::BitSetT.166" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.gl::VertexBinding"* }
%"class.angle::BitSetT.400" = type { i64 }
%"struct.std::__1::array.401" = type { [16 x %"class.angle::BitSetT.402"] }
%"class.angle::BitSetT.402" = type { i64 }
%"struct.std::__1::array.403" = type { [16 x %"class.angle::BitSetT.404"] }
%"class.angle::BitSetT.404" = type { i64 }
%struct.Optional.405 = type { i8, %"class.angle::BitSetT.400" }
%"class.rx::VertexArrayImpl" = type opaque
%"class.gl::VertexArray::IndexRangeCache" = type { i64, i32, i64, %"struct.gl::IndexRange" }
%"struct.gl::IndexRange" = type { i64, i64, i64 }
%"class.angle::PackedEnumMap.406" = type { %"struct.std::__1::array.407" }
%"struct.std::__1::array.407" = type { [11 x %"class.std::__1::vector.408"] }
%"class.std::__1::vector.408" = type { %"class.std::__1::__vector_base.409" }
%"class.std::__1::__vector_base.409" = type { %"class.gl::BindingPointer.410"*, %"class.gl::BindingPointer.410"*, %"class.std::__1::__compressed_pair.412" }
%"class.gl::BindingPointer.410" = type { %"class.angle::BindingPointer.411" }
%"class.angle::BindingPointer.411" = type { i32 (...)**, %"class.gl::Texture"* }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.gl::BindingPointer.410"* }
%"class.gl::ActiveTexturesCache" = type { %"struct.std::__1::array.417" }
%"struct.std::__1::array.417" = type { [96 x %"class.gl::Texture"*] }
%"class.std::__1::vector.418" = type { %"class.std::__1::__vector_base.419" }
%"class.std::__1::__vector_base.419" = type { %"class.gl::BindingPointer.420"*, %"class.gl::BindingPointer.420"*, %"class.std::__1::__compressed_pair.422" }
%"class.gl::BindingPointer.420" = type { %"class.angle::BindingPointer.421" }
%"class.angle::BindingPointer.421" = type { i32 (...)**, %"class.gl::Sampler"* }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.gl::BindingPointer.420"* }
%"class.std::__1::vector.427" = type { %"class.std::__1::__vector_base.428" }
%"class.std::__1::__vector_base.428" = type { %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"*, %"class.std::__1::__compressed_pair.429" }
%"struct.gl::ImageUnit" = type <{ %"class.gl::BindingPointer.410", i32, i8, [3 x i8], i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"struct.gl::ImageUnit"* }
%"class.angle::PackedEnumMap.434" = type { %"struct.std::__1::array.435" }
%"struct.std::__1::array.435" = type { [7 x %"class.gl::BindingPointer.436"] }
%"class.gl::BindingPointer.436" = type { %"class.angle::BindingPointer.437" }
%"class.angle::BindingPointer.437" = type { i32 (...)**, %"class.gl::Query"* }
%"class.gl::Query" = type opaque
%"class.angle::PackedEnumMap.438" = type { %"struct.std::__1::array.439" }
%"struct.std::__1::array.439" = type { [13 x %"class.gl::BindingPointer.264"] }
%"class.angle::BitSetArray.447" = type { %"struct.std::__1::array.167" }
%"class.angle::BitSetT.448" = type { i64 }
%"class.gl::BindingPointer.449" = type { %"class.angle::BindingPointer.450" }
%"class.angle::BindingPointer.450" = type { i32 (...)**, %"class.gl::TransformFeedback"* }
%"struct.gl::PixelUnpackState" = type { %"struct.gl::PixelStoreStateBase" }
%"struct.gl::PixelStoreStateBase" = type { i32, i32, i32, i32, i32, i32 }
%"struct.gl::PixelPackState" = type <{ %"struct.gl::PixelStoreStateBase", i8, [3 x i8] }>
%"class.gl::Debug" = type { i8, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*, %"class.std::__1::deque", i32, i8, %"class.std::__1::vector.462" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.458" }
%"struct.std::__1::__split_buffer" = type { %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"class.std::__1::__compressed_pair.453" }
%"struct.gl::Debug::Message" = type { i32, i32, i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"struct.gl::Debug::Message"** }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.462" = type { %"class.std::__1::__vector_base.463" }
%"class.std::__1::__vector_base.463" = type { %"struct.gl::Debug::Group"*, %"struct.gl::Debug::Group"*, %"class.std::__1::__compressed_pair.471" }
%"struct.gl::Debug::Group" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.464" }
%"class.std::__1::vector.464" = type { %"class.std::__1::__vector_base.465" }
%"class.std::__1::__vector_base.465" = type { %"struct.gl::Debug::Control"*, %"struct.gl::Debug::Control"*, %"class.std::__1::__compressed_pair.466" }
%"struct.gl::Debug::Control" = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"struct.gl::Debug::Control"* }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"struct.gl::Debug::Group"* }
%"class.angle::BitSetT.476" = type { i32 }
%"class.gl::GLES1State" = type <{ %"class.gl::State"*, %"class.angle::BitSetT.166", %"class.std::__1::vector.477", i8, i8, i8, i8, [4 x i8], %"class.std::__1::vector.485", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", %"class.angle::Vector", %"class.std::__1::vector.490", i32, i8, [3 x i8], %"class.angle::FixedVector", %"class.angle::FixedVector", %"class.std::__1::vector.505", %"class.std::__1::vector.512", %"struct.gl::MaterialParameters", %"struct.gl::LightModelParameters", %"class.std::__1::vector.519", %"struct.gl::FogParameters", i8, [3 x i8], %"struct.gl::PointParameters", i8, [3 x i8], float, i8, [7 x i8], %"class.std::__1::vector.528", i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::vector.477" = type { %"class.std::__1::__vector_base.478" }
%"class.std::__1::__vector_base.478" = type { %"class.angle::BitSetT.479"*, %"class.angle::BitSetT.479"*, %"class.std::__1::__compressed_pair.480" }
%"class.angle::BitSetT.479" = type opaque
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.angle::BitSetT.479"* }
%"class.std::__1::vector.485" = type { i64*, i64, %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::Vector" = type { %"class.angle::VectorBase" }
%"class.angle::VectorBase" = type { [3 x float] }
%"class.std::__1::vector.490" = type { %"class.std::__1::__vector_base.491" }
%"class.std::__1::__vector_base.491" = type { %"struct.gl::TextureCoordF"*, %"struct.gl::TextureCoordF"*, %"class.std::__1::__compressed_pair.492" }
%"struct.gl::TextureCoordF" = type { float, float, float, float }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"struct.gl::TextureCoordF"* }
%"class.angle::FixedVector" = type { %"struct.std::__1::array.497", i64 }
%"struct.std::__1::array.497" = type { [16 x %"class.angle::Mat4"] }
%"class.angle::Mat4" = type { %"class.angle::Matrix" }
%"class.angle::Matrix" = type { %"class.std::__1::vector.498", i32, i32 }
%"class.std::__1::vector.498" = type { %"class.std::__1::__vector_base.499" }
%"class.std::__1::__vector_base.499" = type { float*, float*, %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { float* }
%"class.std::__1::vector.505" = type { %"class.std::__1::__vector_base.506" }
%"class.std::__1::__vector_base.506" = type { %"class.angle::FixedVector"*, %"class.angle::FixedVector"*, %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.angle::FixedVector"* }
%"class.std::__1::vector.512" = type { %"class.std::__1::__vector_base.513" }
%"class.std::__1::__vector_base.513" = type { %"struct.gl::TextureEnvironmentParameters"*, %"struct.gl::TextureEnvironmentParameters"*, %"class.std::__1::__compressed_pair.514" }
%"struct.gl::TextureEnvironmentParameters" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", float, float, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"struct.gl::TextureEnvironmentParameters"* }
%"struct.gl::MaterialParameters" = type { %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", float }
%"struct.gl::LightModelParameters" = type <{ %"struct.angle::Color", i8, [3 x i8] }>
%"class.std::__1::vector.519" = type { %"class.std::__1::__vector_base.520" }
%"class.std::__1::__vector_base.520" = type { %"struct.gl::LightParameters"*, %"struct.gl::LightParameters"*, %"class.std::__1::__compressed_pair.523" }
%"struct.gl::LightParameters" = type { i8, %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"class.angle::Vector.521", %"class.angle::Vector", float, float, float, float, float }
%"class.angle::Vector.521" = type { %"class.angle::VectorBase.522" }
%"class.angle::VectorBase.522" = type { [4 x float] }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"struct.gl::LightParameters"* }
%"struct.gl::FogParameters" = type { i8, float, float, float, %"struct.angle::Color" }
%"struct.gl::PointParameters" = type { float, float, float, %"class.angle::Vector", float }
%"class.std::__1::vector.528" = type { %"class.std::__1::__vector_base.529" }
%"class.std::__1::__vector_base.529" = type { %"struct.gl::ClipPlaneParameters"*, %"struct.gl::ClipPlaneParameters"*, %"class.std::__1::__compressed_pair.530" }
%"struct.gl::ClipPlaneParameters" = type { i8, %"class.angle::Vector.521" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"struct.gl::ClipPlaneParameters"* }
%"class.angle::BitSetT.535" = type { i32 }
%"class.gl::ErrorSet" = type { %"class.gl::Context"*, %"class.std::__1::set.35" }
%"class.angle::BitSetT.537" = type { i32 }
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.rx::ContextImpl"* }
%"class.rx::ContextImpl" = type opaque
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.egl::Config" = type opaque
%"class.angle::PackedEnumMap.544" = type { %"struct.std::__1::array.545" }
%"struct.std::__1::array.545" = type { [11 x %"class.gl::BindingPointer.410"] }
%"class.gl::ResourceMap.546" = type { i64, %"class.gl::FenceNV"**, %"class.absl::flat_hash_map.547" }
%"class.gl::FenceNV" = type opaque
%"class.absl::flat_hash_map.547" = type { %"class.absl::container_internal::raw_hash_map.548" }
%"class.absl::container_internal::raw_hash_map.548" = type { %"class.absl::container_internal::raw_hash_set.549" }
%"class.absl::container_internal::raw_hash_set.549" = type { i8*, %"union.absl::container_internal::map_slot_type.550"*, i64, i64, %"class.absl::container_internal::CompressedTuple.551" }
%"union.absl::container_internal::map_slot_type.550" = type opaque
%"class.absl::container_internal::CompressedTuple.551" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.556" = type { i64, %"class.gl::Query"**, %"class.absl::flat_hash_map.557" }
%"class.absl::flat_hash_map.557" = type { %"class.absl::container_internal::raw_hash_map.558" }
%"class.absl::container_internal::raw_hash_map.558" = type { %"class.absl::container_internal::raw_hash_set.559" }
%"class.absl::container_internal::raw_hash_set.559" = type { i8*, %"union.absl::container_internal::map_slot_type.560"*, i64, i64, %"class.absl::container_internal::CompressedTuple.561" }
%"union.absl::container_internal::map_slot_type.560" = type opaque
%"class.absl::container_internal::CompressedTuple.561" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.566" = type { i64, %"class.gl::VertexArray"**, %"class.absl::flat_hash_map.567" }
%"class.absl::flat_hash_map.567" = type { %"class.absl::container_internal::raw_hash_map.568" }
%"class.absl::container_internal::raw_hash_map.568" = type { %"class.absl::container_internal::raw_hash_set.569" }
%"class.absl::container_internal::raw_hash_set.569" = type { i8*, %"union.absl::container_internal::map_slot_type.570"*, i64, i64, %"class.absl::container_internal::CompressedTuple.571" }
%"union.absl::container_internal::map_slot_type.570" = type opaque
%"class.absl::container_internal::CompressedTuple.571" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.576" = type { i64, %"class.gl::TransformFeedback"**, %"class.absl::flat_hash_map.577" }
%"class.absl::flat_hash_map.577" = type { %"class.absl::container_internal::raw_hash_map.578" }
%"class.absl::container_internal::raw_hash_map.578" = type { %"class.absl::container_internal::raw_hash_set.579" }
%"class.absl::container_internal::raw_hash_set.579" = type { i8*, %"union.absl::container_internal::map_slot_type.580"*, i64, i64, %"class.absl::container_internal::CompressedTuple.581" }
%"union.absl::container_internal::map_slot_type.580" = type opaque
%"class.absl::container_internal::CompressedTuple.581" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::vector.586" = type { %"class.std::__1::__vector_base.587" }
%"class.std::__1::__vector_base.587" = type { i8**, i8**, %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { i8** }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.gl::GLES1Renderer"* }
%"class.gl::GLES1Renderer" = type opaque
%"class.egl::Surface" = type opaque
%"class.egl::Display" = type opaque
%"class.gl::MemoryProgramCache" = type opaque
%"class.gl::StateCache" = type <{ %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", i8, [7 x i8], i64, i64, i64, i64, i8, [7 x i8], %"class.angle::BitSetT.168", %"class.angle::BitSetArray", %"class.angle::PackedEnumMap.599", %"class.angle::PackedEnumMap.601", %"class.angle::PackedEnumMap.603", %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605", i8, [7 x i8] }>
%"class.angle::PackedEnumMap.599" = type { %"struct.std::__1::array.600" }
%"struct.std::__1::array.600" = type { [16 x i8] }
%"class.angle::PackedEnumMap.601" = type { %"struct.std::__1::array.602" }
%"struct.std::__1::array.602" = type { [12 x i8] }
%"class.angle::PackedEnumMap.603" = type { %"struct.std::__1::array.604" }
%"struct.std::__1::array.604" = type { [4 x i8] }
%"class.angle::PackedEnumMap.605" = type { %"struct.std::__1::array.606" }
%"struct.std::__1::array.606" = type { [19 x i32] }
%"class.angle::BitSetT.536" = type { i64 }
%"class.std::__1::vector.337" = type { %"class.std::__1::__vector_base.338" }
%"class.std::__1::__vector_base.338" = type { %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"*, %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.angle::ObserverBinding"* }
%struct.Optional.607 = type { i8, %"class.angle::ScratchBuffer" }
%"class.angle::ScratchBuffer" = type { i32, i32, %"class.angle::MemoryBuffer" }
%"class.angle::MemoryBuffer" = type { i64, i8* }
%"class.std::__1::shared_ptr.608" = type { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WorkerThreadPool" = type { i32 (...)** }
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.angle::FrameCapture"* }
%"class.angle::FrameCapture" = type opaque
%"class.gl::MockOverlay" = type { %"class.gl::overlay::Mock" }
%"class.gl::overlay::Mock" = type { i8 }

$_ZN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEED2Ev = comdat any

$_ZN2gl20OffsetBindingPointerINS_6BufferEED0Ev = comdat any

$_ZN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEED0Ev = comdat any

$_ZN5angle14RefCountObjectIN2gl7ContextENS_6ResultEE9onDestroyEPKS2_ = comdat any

$_ZN5angle14RefCountObjectIN2gl7ContextENS_6ResultEED2Ev = comdat any

$_ZN5angle14RefCountObjectIN2gl7ContextENS_6ResultEED0Ev = comdat any

$_ZTVN2gl20OffsetBindingPointerINS_6BufferEEE = comdat any

$_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE = comdat any

$_ZTVN5angle14RefCountObjectIN2gl7ContextENS_6ResultEEE = comdat any

@_ZTVN2gl17TransformFeedbackE = hidden unnamed_addr constant { [7 x i8*], [6 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::TransformFeedback"*, %"class.gl::Context"*)* @_ZN2gl17TransformFeedback9onDestroyEPKNS_7ContextE to i8*), i8* bitcast (void (%"class.gl::TransformFeedback"*)* @_ZN2gl17TransformFeedbackD2Ev to i8*), i8* bitcast (void (%"class.gl::TransformFeedback"*)* @_ZN2gl17TransformFeedbackD0Ev to i8*), i8* bitcast (void (%"class.gl::TransformFeedback"*, %"class.gl::Context"*, %"class.std::__1::basic_string"*)* @_ZN2gl17TransformFeedback8setLabelEPKNS_7ContextERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE to i8*), i8* bitcast (%"class.std::__1::basic_string"* (%"class.gl::TransformFeedback"*)* @_ZNK2gl17TransformFeedback8getLabelEv to i8*)], [6 x i8*] [i8* inttoptr (i64 -32 to i8*), i8* null, i8* bitcast (void (%"class.gl::TransformFeedback"*)* @_ZThn32_N2gl17TransformFeedbackD1Ev to i8*), i8* bitcast (void (%"class.gl::TransformFeedback"*)* @_ZThn32_N2gl17TransformFeedbackD0Ev to i8*), i8* bitcast (void (%"class.gl::TransformFeedback"*, %"class.gl::Context"*, %"class.std::__1::basic_string"*)* @_ZThn32_N2gl17TransformFeedback8setLabelEPKNS_7ContextERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE to i8*), i8* bitcast (%"class.std::__1::basic_string"* (%"class.gl::TransformFeedback"*)* @_ZThn32_NK2gl17TransformFeedback8getLabelEv to i8*)] }, align 8
@_ZTVN2gl20OffsetBindingPointerINS_6BufferEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.angle::BindingPointer.265"*)* @_ZN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEED2Ev to i8*), i8* bitcast (void (%"class.gl::OffsetBindingPointer"*)* @_ZN2gl20OffsetBindingPointerINS_6BufferEED0Ev to i8*)] }, comdat, align 8
@_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.angle::BindingPointer.265"*)* @_ZN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEED2Ev to i8*), i8* bitcast (void (%"class.angle::BindingPointer.265"*)* @_ZN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEED0Ev to i8*)] }, comdat, align 8
@_ZTVN5angle14RefCountObjectIN2gl7ContextENS_6ResultEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)* @_ZN5angle14RefCountObjectIN2gl7ContextENS_6ResultEE9onDestroyEPKS2_ to i8*), i8* bitcast (void (%"class.angle::RefCountObject"*)* @_ZN5angle14RefCountObjectIN2gl7ContextENS_6ResultEED2Ev to i8*), i8* bitcast (void (%"class.angle::RefCountObject"*)* @_ZN5angle14RefCountObjectIN2gl7ContextENS_6ResultEED0Ev to i8*)] }, comdat, align 8

@_ZN2gl22TransformFeedbackStateC1Em = hidden unnamed_addr alias void (%"class.gl::TransformFeedbackState"*, i64), void (%"class.gl::TransformFeedbackState"*, i64)* @_ZN2gl22TransformFeedbackStateC2Em
@_ZN2gl22TransformFeedbackStateD1Ev = hidden unnamed_addr alias void (%"class.gl::TransformFeedbackState"*), void (%"class.gl::TransformFeedbackState"*)* @_ZN2gl22TransformFeedbackStateD2Ev
@_ZN2gl17TransformFeedbackC1EPN2rx13GLImplFactoryENS_19TransformFeedbackIDERKNS_4CapsE = hidden unnamed_addr alias void (%"class.gl::TransformFeedback"*, %"class.rx::GLImplFactory"*, i32, %"struct.gl::Caps"*), void (%"class.gl::TransformFeedback"*, %"class.rx::GLImplFactory"*, i32, %"struct.gl::Caps"*)* @_ZN2gl17TransformFeedbackC2EPN2rx13GLImplFactoryENS_19TransformFeedbackIDERKNS_4CapsE
@_ZN2gl17TransformFeedbackD1Ev = hidden unnamed_addr alias void (%"class.gl::TransformFeedback"*), void (%"class.gl::TransformFeedback"*)* @_ZN2gl17TransformFeedbackD2Ev

; Function Attrs: nounwind readnone ssp uwtable
define hidden { i64, i8 } @_ZN2gl24GetVerticesNeededForDrawENS_13PrimitiveModeEii(i8 zeroext, i32, i32) local_unnamed_addr #0 {
  %4 = or i32 %2, %1
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %147, label %6

6:                                                ; preds = %3
  %7 = sext i32 %1 to i64
  %8 = sext i32 %2 to i64
  switch i8 %0, label %119 [
    i8 4, label %9
    i8 1, label %50
    i8 0, label %91
  ]

9:                                                ; preds = %6
  %10 = srem i64 %7, 3
  %11 = sub nsw i64 %7, %10
  %12 = xor i64 %11, %7
  %13 = xor i64 %10, %7
  %14 = and i64 %12, %13
  %15 = icmp sgt i64 %14, -1
  %16 = icmp slt i64 %11, 0
  %17 = select i1 %16, i8 2, i8 1
  %18 = select i1 %15, i8 0, i8 %17
  %19 = icmp ne i32 %2, 0
  %20 = icmp ne i64 %11, 0
  %21 = and i1 %19, %20
  br i1 %21, label %22, label %46

22:                                               ; preds = %9
  %23 = icmp sgt i32 %2, 0
  %24 = icmp sgt i64 %11, 0
  br i1 %23, label %25, label %34

25:                                               ; preds = %22
  br i1 %24, label %26, label %30

26:                                               ; preds = %25
  %27 = udiv i64 9223372036854775807, %11
  %28 = icmp slt i64 %27, %8
  %29 = select i1 %28, i8 2, i8 0
  br label %43

30:                                               ; preds = %25
  %31 = sdiv i64 -9223372036854775808, %8
  %32 = icmp sgt i64 %31, %11
  %33 = zext i1 %32 to i8
  br label %43

34:                                               ; preds = %22
  br i1 %24, label %35, label %39

35:                                               ; preds = %34
  %36 = sdiv i64 -9223372036854775808, %11
  %37 = icmp sgt i64 %36, %8
  %38 = zext i1 %37 to i8
  br label %43

39:                                               ; preds = %34
  %40 = sdiv i64 9223372036854775807, %8
  %41 = icmp sgt i64 %40, %11
  %42 = select i1 %41, i8 2, i8 0
  br label %43

43:                                               ; preds = %39, %35, %30, %26
  %44 = phi i8 [ %29, %26 ], [ %33, %30 ], [ %38, %35 ], [ %42, %39 ]
  %45 = mul nsw i64 %11, %8
  br label %46

46:                                               ; preds = %9, %43
  %47 = phi i8 [ %44, %43 ], [ 0, %9 ]
  %48 = phi i64 [ %45, %43 ], [ 0, %9 ]
  %49 = or i8 %47, %18
  br label %147

50:                                               ; preds = %6
  %51 = srem i64 %7, 2
  %52 = sub nsw i64 %7, %51
  %53 = xor i64 %52, %7
  %54 = xor i64 %51, %7
  %55 = and i64 %53, %54
  %56 = icmp sgt i64 %55, -1
  %57 = icmp slt i64 %52, 0
  %58 = select i1 %57, i8 2, i8 1
  %59 = select i1 %56, i8 0, i8 %58
  %60 = icmp ne i32 %2, 0
  %61 = icmp ne i64 %52, 0
  %62 = and i1 %60, %61
  br i1 %62, label %63, label %87

63:                                               ; preds = %50
  %64 = icmp sgt i32 %2, 0
  %65 = icmp sgt i64 %52, 0
  br i1 %64, label %66, label %75

66:                                               ; preds = %63
  br i1 %65, label %67, label %71

67:                                               ; preds = %66
  %68 = udiv i64 9223372036854775807, %52
  %69 = icmp slt i64 %68, %8
  %70 = select i1 %69, i8 2, i8 0
  br label %84

71:                                               ; preds = %66
  %72 = sdiv i64 -9223372036854775808, %8
  %73 = icmp sgt i64 %72, %52
  %74 = zext i1 %73 to i8
  br label %84

75:                                               ; preds = %63
  br i1 %65, label %76, label %80

76:                                               ; preds = %75
  %77 = sdiv i64 -9223372036854775808, %52
  %78 = icmp sgt i64 %77, %8
  %79 = zext i1 %78 to i8
  br label %84

80:                                               ; preds = %75
  %81 = sdiv i64 9223372036854775807, %8
  %82 = icmp sgt i64 %81, %52
  %83 = select i1 %82, i8 2, i8 0
  br label %84

84:                                               ; preds = %80, %76, %71, %67
  %85 = phi i8 [ %70, %67 ], [ %74, %71 ], [ %79, %76 ], [ %83, %80 ]
  %86 = mul nsw i64 %52, %8
  br label %87

87:                                               ; preds = %50, %84
  %88 = phi i8 [ %85, %84 ], [ 0, %50 ]
  %89 = phi i64 [ %86, %84 ], [ 0, %50 ]
  %90 = or i8 %88, %59
  br label %147

91:                                               ; preds = %6
  %92 = icmp ne i32 %2, 0
  %93 = icmp ne i32 %1, 0
  %94 = and i1 %93, %92
  br i1 %94, label %95, label %147

95:                                               ; preds = %91
  %96 = icmp sgt i32 %2, 0
  %97 = icmp sgt i32 %1, 0
  br i1 %96, label %98, label %107

98:                                               ; preds = %95
  br i1 %97, label %99, label %103

99:                                               ; preds = %98
  %100 = udiv i64 9223372036854775807, %7
  %101 = icmp slt i64 %100, %8
  %102 = select i1 %101, i8 2, i8 0
  br label %116

103:                                              ; preds = %98
  %104 = sdiv i64 -9223372036854775808, %8
  %105 = icmp sgt i64 %104, %7
  %106 = zext i1 %105 to i8
  br label %116

107:                                              ; preds = %95
  br i1 %97, label %108, label %112

108:                                              ; preds = %107
  %109 = sdiv i64 -9223372036854775808, %7
  %110 = icmp sgt i64 %109, %8
  %111 = zext i1 %110 to i8
  br label %116

112:                                              ; preds = %107
  %113 = sdiv i64 9223372036854775807, %8
  %114 = icmp sgt i64 %113, %7
  %115 = select i1 %114, i8 2, i8 0
  br label %116

116:                                              ; preds = %112, %108, %103, %99
  %117 = phi i8 [ %102, %99 ], [ %106, %103 ], [ %111, %108 ], [ %115, %112 ]
  %118 = mul nsw i64 %8, %7
  br label %147

119:                                              ; preds = %6
  %120 = icmp ne i32 %2, 0
  %121 = icmp ne i32 %1, 0
  %122 = and i1 %121, %120
  br i1 %122, label %123, label %147

123:                                              ; preds = %119
  %124 = icmp sgt i32 %2, 0
  %125 = icmp sgt i32 %1, 0
  br i1 %124, label %126, label %135

126:                                              ; preds = %123
  br i1 %125, label %127, label %131

127:                                              ; preds = %126
  %128 = udiv i64 9223372036854775807, %7
  %129 = icmp slt i64 %128, %8
  %130 = select i1 %129, i8 2, i8 0
  br label %144

131:                                              ; preds = %126
  %132 = sdiv i64 -9223372036854775808, %8
  %133 = icmp sgt i64 %132, %7
  %134 = zext i1 %133 to i8
  br label %144

135:                                              ; preds = %123
  br i1 %125, label %136, label %140

136:                                              ; preds = %135
  %137 = sdiv i64 -9223372036854775808, %7
  %138 = icmp sgt i64 %137, %8
  %139 = zext i1 %138 to i8
  br label %144

140:                                              ; preds = %135
  %141 = sdiv i64 9223372036854775807, %8
  %142 = icmp sgt i64 %141, %7
  %143 = select i1 %142, i8 2, i8 0
  br label %144

144:                                              ; preds = %140, %136, %131, %127
  %145 = phi i8 [ %130, %127 ], [ %134, %131 ], [ %139, %136 ], [ %143, %140 ]
  %146 = mul nsw i64 %8, %7
  br label %147

147:                                              ; preds = %144, %119, %116, %91, %46, %87, %3
  %148 = phi i64 [ 0, %3 ], [ %89, %87 ], [ %48, %46 ], [ %118, %116 ], [ 0, %91 ], [ %146, %144 ], [ 0, %119 ]
  %149 = phi i8 [ 0, %3 ], [ %90, %87 ], [ %49, %46 ], [ %117, %116 ], [ 0, %91 ], [ %145, %144 ], [ 0, %119 ]
  %150 = insertvalue { i64, i8 } undef, i64 %148, 0
  %151 = insertvalue { i64, i8 } %150, i8 %149, 1
  ret { i64, i8 } %151
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl22TransformFeedbackStateC2Em(%"class.gl::TransformFeedbackState"*, i64) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.gl::TransformFeedbackState", %"class.gl::TransformFeedbackState"* %0, i64 0, i32 2
  %4 = bitcast %"class.gl::TransformFeedbackState"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 25, i1 false)
  store i8 15, i8* %3, align 1
  %5 = getelementptr inbounds %"class.gl::TransformFeedbackState", %"class.gl::TransformFeedbackState"* %0, i64 0, i32 3
  store i8 0, i8* %5, align 2
  %6 = getelementptr inbounds %"class.gl::TransformFeedbackState", %"class.gl::TransformFeedbackState"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.gl::TransformFeedbackState", %"class.gl::TransformFeedbackState"* %0, i64 0, i32 7
  %8 = icmp eq i64 %1, 0
  %9 = bitcast i64* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 48, i1 false)
  br i1 %8, label %81, label %10

10:                                               ; preds = %2
  %11 = icmp ugt i64 %1, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %10
  %13 = bitcast %"class.std::__1::vector.440"* %7 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %10
  %15 = shl i64 %1, 5
  %16 = tail call i8* @_Znwm(i64 %15) #12
  %17 = bitcast i8* %16 to %"class.gl::OffsetBindingPointer"*
  %18 = getelementptr inbounds %"class.gl::TransformFeedbackState", %"class.gl::TransformFeedbackState"* %0, i64 0, i32 7, i32 0, i32 1
  %19 = bitcast %"class.gl::OffsetBindingPointer"** %18 to i8**
  store i8* %16, i8** %19, align 8
  %20 = bitcast %"class.std::__1::vector.440"* %7 to i8**
  store i8* %16, i8** %20, align 8
  %21 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %17, i64 %1
  %22 = getelementptr inbounds %"class.gl::TransformFeedbackState", %"class.gl::TransformFeedbackState"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  store %"class.gl::OffsetBindingPointer"* %21, %"class.gl::OffsetBindingPointer"** %22, align 8
  %23 = shl nsw i64 %1, 5
  %24 = add i64 %23, -32
  %25 = lshr exact i64 %24, 5
  %26 = add nuw nsw i64 %25, 1
  %27 = and i64 %26, 7
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %39, label %29

29:                                               ; preds = %14, %29
  %30 = phi %"class.gl::OffsetBindingPointer"* [ %36, %29 ], [ %17, %14 ]
  %31 = phi i64 [ %37, %29 ], [ %27, %14 ]
  %32 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %30, i64 0, i32 0, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %32, align 8
  %33 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %30, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl20OffsetBindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %34 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %30, i64 0, i32 1
  %35 = bitcast i64* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false) #13
  %36 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %30, i64 1
  %37 = add i64 %31, -1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %29, !llvm.loop !2

39:                                               ; preds = %29, %14
  %40 = phi %"class.gl::OffsetBindingPointer"* [ %17, %14 ], [ %36, %29 ]
  %41 = icmp ult i64 %24, 224
  br i1 %41, label %78, label %42

42:                                               ; preds = %39, %42
  %43 = phi %"class.gl::OffsetBindingPointer"* [ %76, %42 ], [ %40, %39 ]
  %44 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %43, i64 0, i32 0, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %44, align 8
  %45 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %43, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl20OffsetBindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %43, i64 0, i32 1
  %47 = bitcast i64* %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 16, i1 false) #13
  %48 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %43, i64 1, i32 0, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %48, align 8
  %49 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %43, i64 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl20OffsetBindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  %50 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %43, i64 1, i32 1
  %51 = bitcast i64* %50 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #13
  %52 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %43, i64 2, i32 0, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %52, align 8
  %53 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %43, i64 2, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl20OffsetBindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %54 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %43, i64 2, i32 1
  %55 = bitcast i64* %54 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false) #13
  %56 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %43, i64 3, i32 0, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %56, align 8
  %57 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %43, i64 3, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl20OffsetBindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %58 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %43, i64 3, i32 1
  %59 = bitcast i64* %58 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 16, i1 false) #13
  %60 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %43, i64 4, i32 0, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %60, align 8
  %61 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %43, i64 4, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl20OffsetBindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %61, align 8
  %62 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %43, i64 4, i32 1
  %63 = bitcast i64* %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #13
  %64 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %43, i64 5, i32 0, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %64, align 8
  %65 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %43, i64 5, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl20OffsetBindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %65, align 8
  %66 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %43, i64 5, i32 1
  %67 = bitcast i64* %66 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false) #13
  %68 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %43, i64 6, i32 0, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %68, align 8
  %69 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %43, i64 6, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl20OffsetBindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  %70 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %43, i64 6, i32 1
  %71 = bitcast i64* %70 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 16, i1 false) #13
  %72 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %43, i64 7, i32 0, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %72, align 8
  %73 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %43, i64 7, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl20OffsetBindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %73, align 8
  %74 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %43, i64 7, i32 1
  %75 = bitcast i64* %74 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 16, i1 false) #13
  %76 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %43, i64 8
  %77 = icmp eq %"class.gl::OffsetBindingPointer"* %76, %21
  br i1 %77, label %78, label %42

78:                                               ; preds = %42, %39
  %79 = bitcast %"class.gl::OffsetBindingPointer"** %18 to i64*
  %80 = ptrtoint %"class.gl::OffsetBindingPointer"* %21 to i64
  store i64 %80, i64* %79, align 8
  br label %81

81:                                               ; preds = %2, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl22TransformFeedbackStateD2Ev(%"class.gl::TransformFeedbackState"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gl::TransformFeedbackState", %"class.gl::TransformFeedbackState"* %0, i64 0, i32 7
  %3 = getelementptr inbounds %"class.std::__1::vector.440", %"class.std::__1::vector.440"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"** %3, align 8
  %5 = icmp eq %"class.gl::OffsetBindingPointer"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::OffsetBindingPointer"* %4 to i8*
  %8 = getelementptr inbounds %"class.gl::TransformFeedbackState", %"class.gl::TransformFeedbackState"* %0, i64 0, i32 7, i32 0, i32 1
  %9 = load %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"** %8, align 8
  %10 = icmp eq %"class.gl::OffsetBindingPointer"* %9, %4
  br i1 %10, label %21, label %11

11:                                               ; preds = %6, %11
  %12 = phi %"class.gl::OffsetBindingPointer"* [ %13, %11 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %12, i64 -1
  %14 = bitcast %"class.gl::OffsetBindingPointer"* %13 to void (%"class.gl::OffsetBindingPointer"*)***
  %15 = load void (%"class.gl::OffsetBindingPointer"*)**, void (%"class.gl::OffsetBindingPointer"*)*** %14, align 8
  %16 = load void (%"class.gl::OffsetBindingPointer"*)*, void (%"class.gl::OffsetBindingPointer"*)** %15, align 8
  tail call void %16(%"class.gl::OffsetBindingPointer"* %13) #13
  %17 = icmp eq %"class.gl::OffsetBindingPointer"* %13, %4
  br i1 %17, label %18, label %11

18:                                               ; preds = %11
  %19 = bitcast %"class.std::__1::vector.440"* %2 to i8**
  %20 = load i8*, i8** %19, align 8
  br label %21

21:                                               ; preds = %18, %6
  %22 = phi i8* [ %20, %18 ], [ %7, %6 ]
  store %"class.gl::OffsetBindingPointer"* %4, %"class.gl::OffsetBindingPointer"** %8, align 8
  tail call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %1, %21
  %24 = bitcast %"class.gl::TransformFeedbackState"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.gl::TransformFeedbackState", %"class.gl::TransformFeedbackState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZdlPv(i8* %30) #12
  br label %31

31:                                               ; preds = %23, %28
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(32) %"class.gl::OffsetBindingPointer"* @_ZNK2gl22TransformFeedbackState16getIndexedBufferEm(%"class.gl::TransformFeedbackState"* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gl::TransformFeedbackState", %"class.gl::TransformFeedbackState"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"** %3, align 8
  %5 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %4, i64 %1
  ret %"class.gl::OffsetBindingPointer"* %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector.440"* @_ZNK2gl22TransformFeedbackState17getIndexedBuffersEv(%"class.gl::TransformFeedbackState"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.gl::TransformFeedbackState", %"class.gl::TransformFeedbackState"* %0, i64 0, i32 7
  ret %"class.std::__1::vector.440"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2gl22TransformFeedbackState18getPrimitivesDrawnEv(%"class.gl::TransformFeedbackState"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.gl::TransformFeedbackState", %"class.gl::TransformFeedbackState"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 1
  switch i8 %3, label %15 [
    i8 0, label %4
    i8 1, label %7
    i8 4, label %11
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.gl::TransformFeedbackState", %"class.gl::TransformFeedbackState"* %0, i64 0, i32 4
  %6 = load i64, i64* %5, align 8
  br label %15

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gl::TransformFeedbackState", %"class.gl::TransformFeedbackState"* %0, i64 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = sdiv i64 %9, 2
  br label %15

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.gl::TransformFeedbackState", %"class.gl::TransformFeedbackState"* %0, i64 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = sdiv i64 %13, 3
  br label %15

15:                                               ; preds = %1, %11, %7, %4
  %16 = phi i64 [ %14, %11 ], [ %10, %7 ], [ %6, %4 ], [ 0, %1 ]
  ret i64 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl17TransformFeedbackC2EPN2rx13GLImplFactoryENS_19TransformFeedbackIDERKNS_4CapsE(%"class.gl::TransformFeedback"*, %"class.rx::GLImplFactory"*, i32, %"struct.gl::Caps"* nocapture readonly dereferenceable(872)) unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.rx::GLImplFactory", %"class.rx::GLImplFactory"* %1, i64 0, i32 1, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 1
  store i64 %7, i64* %5, align 8
  %8 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 0, i32 1, i32 0
  store i64 %6, i64* %10, align 8
  %11 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 0, i32 2, i32 0
  store i32 %2, i32* %11, align 8
  %12 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN2gl17TransformFeedbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN2gl17TransformFeedbackE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"struct.gl::Caps", %"struct.gl::Caps"* %3, i64 0, i32 90
  %15 = load i32, i32* %14, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 2
  %18 = bitcast %"class.gl::TransformFeedbackState"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 25, i1 false) #13
  store i8 15, i8* %17, align 1
  %19 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %19, align 2
  %20 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 4
  %21 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 7
  %22 = icmp eq i32 %15, 0
  %23 = bitcast i64* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 48, i1 false) #13
  br i1 %22, label %95, label %24

24:                                               ; preds = %4
  %25 = icmp slt i32 %15, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::vector.440"* %21 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %27) #11
  unreachable

28:                                               ; preds = %24
  %29 = shl nsw i64 %16, 5
  %30 = tail call i8* @_Znwm(i64 %29) #12
  %31 = bitcast i8* %30 to %"class.gl::OffsetBindingPointer"*
  %32 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 7, i32 0, i32 1
  %33 = bitcast %"class.gl::OffsetBindingPointer"** %32 to i8**
  store i8* %30, i8** %33, align 8
  %34 = bitcast %"class.std::__1::vector.440"* %21 to i8**
  store i8* %30, i8** %34, align 8
  %35 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %31, i64 %16
  %36 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 7, i32 0, i32 2, i32 0, i32 0
  store %"class.gl::OffsetBindingPointer"* %35, %"class.gl::OffsetBindingPointer"** %36, align 8
  %37 = shl nsw i64 %16, 5
  %38 = add nsw i64 %37, -32
  %39 = lshr exact i64 %38, 5
  %40 = add nuw nsw i64 %39, 1
  %41 = and i64 %40, 7
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %53, label %43

43:                                               ; preds = %28, %43
  %44 = phi %"class.gl::OffsetBindingPointer"* [ %50, %43 ], [ %31, %28 ]
  %45 = phi i64 [ %51, %43 ], [ %41, %28 ]
  %46 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %44, i64 0, i32 0, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %46, align 8
  %47 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %44, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl20OffsetBindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %47, align 8
  %48 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %44, i64 0, i32 1
  %49 = bitcast i64* %48 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #13
  %50 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %44, i64 1
  %51 = add i64 %45, -1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %43, !llvm.loop !4

53:                                               ; preds = %43, %28
  %54 = phi %"class.gl::OffsetBindingPointer"* [ %31, %28 ], [ %50, %43 ]
  %55 = icmp ult i64 %38, 224
  br i1 %55, label %92, label %56

56:                                               ; preds = %53, %56
  %57 = phi %"class.gl::OffsetBindingPointer"* [ %90, %56 ], [ %54, %53 ]
  %58 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %57, i64 0, i32 0, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %58, align 8
  %59 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %57, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl20OffsetBindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  %60 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %57, i64 0, i32 1
  %61 = bitcast i64* %60 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false) #13
  %62 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %57, i64 1, i32 0, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %62, align 8
  %63 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %57, i64 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl20OffsetBindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %63, align 8
  %64 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %57, i64 1, i32 1
  %65 = bitcast i64* %64 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 16, i1 false) #13
  %66 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %57, i64 2, i32 0, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %66, align 8
  %67 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %57, i64 2, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl20OffsetBindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %57, i64 2, i32 1
  %69 = bitcast i64* %68 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false) #13
  %70 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %57, i64 3, i32 0, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %70, align 8
  %71 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %57, i64 3, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl20OffsetBindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8
  %72 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %57, i64 3, i32 1
  %73 = bitcast i64* %72 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 16, i1 false) #13
  %74 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %57, i64 4, i32 0, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %74, align 8
  %75 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %57, i64 4, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl20OffsetBindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %75, align 8
  %76 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %57, i64 4, i32 1
  %77 = bitcast i64* %76 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 16, i1 false) #13
  %78 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %57, i64 5, i32 0, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %78, align 8
  %79 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %57, i64 5, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl20OffsetBindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %79, align 8
  %80 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %57, i64 5, i32 1
  %81 = bitcast i64* %80 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 16, i1 false) #13
  %82 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %57, i64 6, i32 0, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %82, align 8
  %83 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %57, i64 6, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl20OffsetBindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %83, align 8
  %84 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %57, i64 6, i32 1
  %85 = bitcast i64* %84 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 16, i1 false) #13
  %86 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %57, i64 7, i32 0, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %86, align 8
  %87 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %57, i64 7, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl20OffsetBindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %87, align 8
  %88 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %57, i64 7, i32 1
  %89 = bitcast i64* %88 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 16, i1 false) #13
  %90 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %57, i64 8
  %91 = icmp eq %"class.gl::OffsetBindingPointer"* %90, %35
  br i1 %91, label %92, label %56

92:                                               ; preds = %56, %53
  %93 = bitcast %"class.gl::OffsetBindingPointer"** %32 to i64*
  %94 = ptrtoint %"class.gl::OffsetBindingPointer"* %35 to i64
  store i64 %94, i64* %93, align 8
  br label %95

95:                                               ; preds = %4, %92
  %96 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 3
  %97 = bitcast %"class.rx::GLImplFactory"* %1 to %"class.rx::TransformFeedbackImpl"* (%"class.rx::GLImplFactory"*, %"class.gl::TransformFeedbackState"*)***
  %98 = load %"class.rx::TransformFeedbackImpl"* (%"class.rx::GLImplFactory"*, %"class.gl::TransformFeedbackState"*)**, %"class.rx::TransformFeedbackImpl"* (%"class.rx::GLImplFactory"*, %"class.gl::TransformFeedbackState"*)*** %97, align 8
  %99 = getelementptr inbounds %"class.rx::TransformFeedbackImpl"* (%"class.rx::GLImplFactory"*, %"class.gl::TransformFeedbackState"*)*, %"class.rx::TransformFeedbackImpl"* (%"class.rx::GLImplFactory"*, %"class.gl::TransformFeedbackState"*)** %98, i64 13
  %100 = load %"class.rx::TransformFeedbackImpl"* (%"class.rx::GLImplFactory"*, %"class.gl::TransformFeedbackState"*)*, %"class.rx::TransformFeedbackImpl"* (%"class.rx::GLImplFactory"*, %"class.gl::TransformFeedbackState"*)** %99, align 8
  %101 = tail call %"class.rx::TransformFeedbackImpl"* %100(%"class.rx::GLImplFactory"* %1, %"class.gl::TransformFeedbackState"* dereferenceable(80) %13) #13
  store %"class.rx::TransformFeedbackImpl"* %101, %"class.rx::TransformFeedbackImpl"** %96, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl17TransformFeedback9onDestroyEPKNS_7ContextE(%"class.gl::TransformFeedback"* nocapture, %"class.gl::Context"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 6
  %4 = load %"class.gl::Program"*, %"class.gl::Program"** %3, align 8
  %5 = icmp eq %"class.gl::Program"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %4, i64 0, i32 13
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, -1
  store i32 %9, i32* %7, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %4, i64 0, i32 12
  %13 = load i8, i8* %12, align 8, !range !5
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZN2gl7Program10deleteSelfEPKNS_7ContextE(%"class.gl::Program"* nonnull %4, %"class.gl::Context"* %1) #13
  br label %16

16:                                               ; preds = %6, %11, %15
  store %"class.gl::Program"* null, %"class.gl::Program"** %3, align 8
  br label %17

17:                                               ; preds = %2, %16
  %18 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 7
  %19 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 7, i32 0, i32 1
  %20 = bitcast %"class.gl::OffsetBindingPointer"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector.440"* %18 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %21, %23
  br i1 %24, label %25, label %29

25:                                               ; preds = %50, %17
  %26 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 3
  %27 = load %"class.rx::TransformFeedbackImpl"*, %"class.rx::TransformFeedbackImpl"** %26, align 8
  %28 = icmp eq %"class.rx::TransformFeedbackImpl"* %27, null
  br i1 %28, label %64, label %59

29:                                               ; preds = %17, %50
  %30 = phi i64 [ %55, %50 ], [ %23, %17 ]
  %31 = phi i64 [ %52, %50 ], [ 0, %17 ]
  %32 = inttoptr i64 %30 to %"class.gl::OffsetBindingPointer"*
  %33 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %32, i64 %31, i32 0, i32 0, i32 1
  %34 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %33, align 8
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %33, align 8
  %35 = icmp eq %"class.gl::Buffer"* %34, null
  br i1 %35, label %50, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %34, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %34, i64 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, -1
  store i64 %40, i64* %38, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %50

42:                                               ; preds = %36
  %43 = bitcast %"class.gl::Buffer"* %34 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %44 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %43, align 8
  %45 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %44, align 8
  tail call void %45(%"class.angle::RefCountObject"* %37, %"class.gl::Context"* %1) #13
  %46 = bitcast %"class.gl::Buffer"* %34 to void (%"class.angle::RefCountObject"*)***
  %47 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %47, i64 2
  %49 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %48, align 8
  tail call void %49(%"class.angle::RefCountObject"* nonnull %37) #13
  br label %50

50:                                               ; preds = %29, %36, %42
  %51 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %32, i64 %31, i32 1
  %52 = add nuw i64 %31, 1
  %53 = bitcast i64* %51 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false)
  %54 = load i64, i64* %20, align 8
  %55 = load i64, i64* %22, align 8
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 5
  %58 = icmp ult i64 %52, %57
  br i1 %58, label %29, label %25

59:                                               ; preds = %25
  %60 = bitcast %"class.rx::TransformFeedbackImpl"* %27 to void (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*)***
  %61 = load void (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*)**, void (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*)*, void (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*)** %61, i64 2
  %63 = load void (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*)*, void (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*)** %62, align 8
  tail call void %63(%"class.rx::TransformFeedbackImpl"* nonnull %27, %"class.gl::Context"* %1) #13
  br label %64

64:                                               ; preds = %25, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl17TransformFeedbackD2Ev(%"class.gl::TransformFeedback"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN2gl17TransformFeedbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN2gl17TransformFeedbackE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 3
  %5 = load %"class.rx::TransformFeedbackImpl"*, %"class.rx::TransformFeedbackImpl"** %4, align 8
  %6 = icmp eq %"class.rx::TransformFeedbackImpl"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.rx::TransformFeedbackImpl"* %5 to void (%"class.rx::TransformFeedbackImpl"*)***
  %9 = load void (%"class.rx::TransformFeedbackImpl"*)**, void (%"class.rx::TransformFeedbackImpl"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.rx::TransformFeedbackImpl"*)*, void (%"class.rx::TransformFeedbackImpl"*)** %9, i64 1
  %11 = load void (%"class.rx::TransformFeedbackImpl"*)*, void (%"class.rx::TransformFeedbackImpl"*)** %10, align 8
  tail call void %11(%"class.rx::TransformFeedbackImpl"* nonnull %5) #13
  br label %12

12:                                               ; preds = %1, %7
  store %"class.rx::TransformFeedbackImpl"* null, %"class.rx::TransformFeedbackImpl"** %4, align 8
  %13 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 7
  %15 = getelementptr inbounds %"class.std::__1::vector.440", %"class.std::__1::vector.440"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"** %15, align 8
  %17 = icmp eq %"class.gl::OffsetBindingPointer"* %16, null
  br i1 %17, label %35, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.gl::OffsetBindingPointer"* %16 to i8*
  %20 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 7, i32 0, i32 1
  %21 = load %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"** %20, align 8
  %22 = icmp eq %"class.gl::OffsetBindingPointer"* %21, %16
  br i1 %22, label %33, label %23

23:                                               ; preds = %18, %23
  %24 = phi %"class.gl::OffsetBindingPointer"* [ %25, %23 ], [ %21, %18 ]
  %25 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %24, i64 -1
  %26 = bitcast %"class.gl::OffsetBindingPointer"* %25 to void (%"class.gl::OffsetBindingPointer"*)***
  %27 = load void (%"class.gl::OffsetBindingPointer"*)**, void (%"class.gl::OffsetBindingPointer"*)*** %26, align 8
  %28 = load void (%"class.gl::OffsetBindingPointer"*)*, void (%"class.gl::OffsetBindingPointer"*)** %27, align 8
  tail call void %28(%"class.gl::OffsetBindingPointer"* %25) #13
  %29 = icmp eq %"class.gl::OffsetBindingPointer"* %25, %16
  br i1 %29, label %30, label %23

30:                                               ; preds = %23
  %31 = bitcast %"class.std::__1::vector.440"* %14 to i8**
  %32 = load i8*, i8** %31, align 8
  br label %33

33:                                               ; preds = %30, %18
  %34 = phi i8* [ %32, %30 ], [ %19, %18 ]
  store %"class.gl::OffsetBindingPointer"* %16, %"class.gl::OffsetBindingPointer"** %20, align 8
  tail call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %33, %12
  %36 = bitcast %"class.gl::TransformFeedbackState"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.gl::TransformFeedbackState", %"class.gl::TransformFeedbackState"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  tail call void @_ZdlPv(i8* %42) #12
  br label %43

43:                                               ; preds = %35, %40
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5angle14RefCountObjectIN2gl7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N2gl17TransformFeedbackD1Ev(%"class.gl::TransformFeedback"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 -1, i32 2, i32 7
  %3 = bitcast %"class.std::__1::vector.440"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN2gl17TransformFeedbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.440", %"class.std::__1::vector.440"* %2, i64 1, i32 0, i32 1
  %5 = bitcast %"class.gl::OffsetBindingPointer"** %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN2gl17TransformFeedbackE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.440", %"class.std::__1::vector.440"* %2, i64 5
  %7 = bitcast %"class.std::__1::vector.440"* %6 to %"class.rx::TransformFeedbackImpl"**
  %8 = load %"class.rx::TransformFeedbackImpl"*, %"class.rx::TransformFeedbackImpl"** %7, align 8
  %9 = icmp eq %"class.rx::TransformFeedbackImpl"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.rx::TransformFeedbackImpl"* %8 to void (%"class.rx::TransformFeedbackImpl"*)***
  %12 = load void (%"class.rx::TransformFeedbackImpl"*)**, void (%"class.rx::TransformFeedbackImpl"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.rx::TransformFeedbackImpl"*)*, void (%"class.rx::TransformFeedbackImpl"*)** %12, i64 1
  %14 = load void (%"class.rx::TransformFeedbackImpl"*)*, void (%"class.rx::TransformFeedbackImpl"*)** %13, align 8
  tail call void %14(%"class.rx::TransformFeedbackImpl"* nonnull %8) #13
  br label %15

15:                                               ; preds = %10, %1
  store %"class.rx::TransformFeedbackImpl"* null, %"class.rx::TransformFeedbackImpl"** %7, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.440", %"class.std::__1::vector.440"* %2, i64 1, i32 0, i32 2
  %17 = getelementptr inbounds %"class.std::__1::vector.440", %"class.std::__1::vector.440"* %2, i64 4
  %18 = getelementptr inbounds %"class.std::__1::vector.440", %"class.std::__1::vector.440"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"** %18, align 8
  %20 = icmp eq %"class.gl::OffsetBindingPointer"* %19, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.gl::OffsetBindingPointer"* %19 to i8*
  %23 = getelementptr inbounds %"class.std::__1::vector.440", %"class.std::__1::vector.440"* %2, i64 4, i32 0, i32 1
  %24 = load %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"** %23, align 8
  %25 = icmp eq %"class.gl::OffsetBindingPointer"* %24, %19
  br i1 %25, label %36, label %26

26:                                               ; preds = %21, %26
  %27 = phi %"class.gl::OffsetBindingPointer"* [ %28, %26 ], [ %24, %21 ]
  %28 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %27, i64 -1
  %29 = bitcast %"class.gl::OffsetBindingPointer"* %28 to void (%"class.gl::OffsetBindingPointer"*)***
  %30 = load void (%"class.gl::OffsetBindingPointer"*)**, void (%"class.gl::OffsetBindingPointer"*)*** %29, align 8
  %31 = load void (%"class.gl::OffsetBindingPointer"*)*, void (%"class.gl::OffsetBindingPointer"*)** %30, align 8
  tail call void %31(%"class.gl::OffsetBindingPointer"* %28) #13
  %32 = icmp eq %"class.gl::OffsetBindingPointer"* %28, %19
  br i1 %32, label %33, label %26

33:                                               ; preds = %26
  %34 = bitcast %"class.std::__1::vector.440"* %17 to i8**
  %35 = load i8*, i8** %34, align 8
  br label %36

36:                                               ; preds = %33, %21
  %37 = phi i8* [ %35, %33 ], [ %22, %21 ]
  store %"class.gl::OffsetBindingPointer"* %19, %"class.gl::OffsetBindingPointer"** %23, align 8
  tail call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %36, %15
  %39 = bitcast %"class.std::__1::__compressed_pair.442"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %38
  %44 = bitcast %"class.std::__1::__compressed_pair.442"* %16 to i8**
  %45 = load i8*, i8** %44, align 8
  tail call void @_ZdlPv(i8* %45) #12
  br label %46

46:                                               ; preds = %38, %43
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5angle14RefCountObjectIN2gl7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl17TransformFeedbackD0Ev(%"class.gl::TransformFeedback"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN2gl17TransformFeedbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN2gl17TransformFeedbackE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 3
  %5 = load %"class.rx::TransformFeedbackImpl"*, %"class.rx::TransformFeedbackImpl"** %4, align 8
  %6 = icmp eq %"class.rx::TransformFeedbackImpl"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.rx::TransformFeedbackImpl"* %5 to void (%"class.rx::TransformFeedbackImpl"*)***
  %9 = load void (%"class.rx::TransformFeedbackImpl"*)**, void (%"class.rx::TransformFeedbackImpl"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.rx::TransformFeedbackImpl"*)*, void (%"class.rx::TransformFeedbackImpl"*)** %9, i64 1
  %11 = load void (%"class.rx::TransformFeedbackImpl"*)*, void (%"class.rx::TransformFeedbackImpl"*)** %10, align 8
  tail call void %11(%"class.rx::TransformFeedbackImpl"* nonnull %5) #13
  br label %12

12:                                               ; preds = %7, %1
  store %"class.rx::TransformFeedbackImpl"* null, %"class.rx::TransformFeedbackImpl"** %4, align 8
  %13 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 7
  %15 = getelementptr inbounds %"class.std::__1::vector.440", %"class.std::__1::vector.440"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"** %15, align 8
  %17 = icmp eq %"class.gl::OffsetBindingPointer"* %16, null
  br i1 %17, label %35, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.gl::OffsetBindingPointer"* %16 to i8*
  %20 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 7, i32 0, i32 1
  %21 = load %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"** %20, align 8
  %22 = icmp eq %"class.gl::OffsetBindingPointer"* %21, %16
  br i1 %22, label %33, label %23

23:                                               ; preds = %18, %23
  %24 = phi %"class.gl::OffsetBindingPointer"* [ %25, %23 ], [ %21, %18 ]
  %25 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %24, i64 -1
  %26 = bitcast %"class.gl::OffsetBindingPointer"* %25 to void (%"class.gl::OffsetBindingPointer"*)***
  %27 = load void (%"class.gl::OffsetBindingPointer"*)**, void (%"class.gl::OffsetBindingPointer"*)*** %26, align 8
  %28 = load void (%"class.gl::OffsetBindingPointer"*)*, void (%"class.gl::OffsetBindingPointer"*)** %27, align 8
  tail call void %28(%"class.gl::OffsetBindingPointer"* %25) #13
  %29 = icmp eq %"class.gl::OffsetBindingPointer"* %25, %16
  br i1 %29, label %30, label %23

30:                                               ; preds = %23
  %31 = bitcast %"class.std::__1::vector.440"* %14 to i8**
  %32 = load i8*, i8** %31, align 8
  br label %33

33:                                               ; preds = %30, %18
  %34 = phi i8* [ %32, %30 ], [ %19, %18 ]
  store %"class.gl::OffsetBindingPointer"* %16, %"class.gl::OffsetBindingPointer"** %20, align 8
  tail call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %33, %12
  %36 = bitcast %"class.gl::TransformFeedbackState"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.gl::TransformFeedbackState", %"class.gl::TransformFeedbackState"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  tail call void @_ZdlPv(i8* %42) #12
  br label %43

43:                                               ; preds = %35, %40
  %44 = bitcast %"class.gl::TransformFeedback"* %0 to i8*
  tail call void @_ZdlPv(i8* %44) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N2gl17TransformFeedbackD0Ev(%"class.gl::TransformFeedback"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 -1, i32 2, i32 7
  %3 = bitcast %"class.std::__1::vector.440"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN2gl17TransformFeedbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.440", %"class.std::__1::vector.440"* %2, i64 1, i32 0, i32 1
  %5 = bitcast %"class.gl::OffsetBindingPointer"** %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN2gl17TransformFeedbackE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.440", %"class.std::__1::vector.440"* %2, i64 5
  %7 = bitcast %"class.std::__1::vector.440"* %6 to %"class.rx::TransformFeedbackImpl"**
  %8 = load %"class.rx::TransformFeedbackImpl"*, %"class.rx::TransformFeedbackImpl"** %7, align 8
  %9 = icmp eq %"class.rx::TransformFeedbackImpl"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.rx::TransformFeedbackImpl"* %8 to void (%"class.rx::TransformFeedbackImpl"*)***
  %12 = load void (%"class.rx::TransformFeedbackImpl"*)**, void (%"class.rx::TransformFeedbackImpl"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.rx::TransformFeedbackImpl"*)*, void (%"class.rx::TransformFeedbackImpl"*)** %12, i64 1
  %14 = load void (%"class.rx::TransformFeedbackImpl"*)*, void (%"class.rx::TransformFeedbackImpl"*)** %13, align 8
  tail call void %14(%"class.rx::TransformFeedbackImpl"* nonnull %8) #13
  br label %15

15:                                               ; preds = %10, %1
  store %"class.rx::TransformFeedbackImpl"* null, %"class.rx::TransformFeedbackImpl"** %7, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.440", %"class.std::__1::vector.440"* %2, i64 1, i32 0, i32 2
  %17 = getelementptr inbounds %"class.std::__1::vector.440", %"class.std::__1::vector.440"* %2, i64 4
  %18 = getelementptr inbounds %"class.std::__1::vector.440", %"class.std::__1::vector.440"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"** %18, align 8
  %20 = icmp eq %"class.gl::OffsetBindingPointer"* %19, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.gl::OffsetBindingPointer"* %19 to i8*
  %23 = getelementptr inbounds %"class.std::__1::vector.440", %"class.std::__1::vector.440"* %2, i64 4, i32 0, i32 1
  %24 = load %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"** %23, align 8
  %25 = icmp eq %"class.gl::OffsetBindingPointer"* %24, %19
  br i1 %25, label %36, label %26

26:                                               ; preds = %21, %26
  %27 = phi %"class.gl::OffsetBindingPointer"* [ %28, %26 ], [ %24, %21 ]
  %28 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %27, i64 -1
  %29 = bitcast %"class.gl::OffsetBindingPointer"* %28 to void (%"class.gl::OffsetBindingPointer"*)***
  %30 = load void (%"class.gl::OffsetBindingPointer"*)**, void (%"class.gl::OffsetBindingPointer"*)*** %29, align 8
  %31 = load void (%"class.gl::OffsetBindingPointer"*)*, void (%"class.gl::OffsetBindingPointer"*)** %30, align 8
  tail call void %31(%"class.gl::OffsetBindingPointer"* %28) #13
  %32 = icmp eq %"class.gl::OffsetBindingPointer"* %28, %19
  br i1 %32, label %33, label %26

33:                                               ; preds = %26
  %34 = bitcast %"class.std::__1::vector.440"* %17 to i8**
  %35 = load i8*, i8** %34, align 8
  br label %36

36:                                               ; preds = %33, %21
  %37 = phi i8* [ %35, %33 ], [ %22, %21 ]
  store %"class.gl::OffsetBindingPointer"* %19, %"class.gl::OffsetBindingPointer"** %23, align 8
  tail call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %36, %15
  %39 = bitcast %"class.std::__1::__compressed_pair.442"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %38
  %44 = bitcast %"class.std::__1::__compressed_pair.442"* %16 to i8**
  %45 = load i8*, i8** %44, align 8
  tail call void @_ZdlPv(i8* %45) #12
  br label %46

46:                                               ; preds = %38, %43
  %47 = bitcast %"class.std::__1::vector.440"* %2 to i8*
  tail call void @_ZdlPv(i8* %47) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl17TransformFeedback8setLabelEPKNS_7ContextERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.gl::TransformFeedback"*, %"class.gl::Context"* nocapture readnone, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 0
  %5 = icmp eq %"class.std::__1::basic_string"* %4, %2
  br i1 %5, label %35, label %6

6:                                                ; preds = %3
  %7 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %10, label %25, label %15

15:                                               ; preds = %6
  br i1 %14, label %19, label %16

16:                                               ; preds = %15
  %17 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %18 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false) #13
  br label %35

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %4, i8* %21, i64 %23) #13
  br label %35

25:                                               ; preds = %6
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %31 = zext i8 %13 to i64
  %32 = select i1 %14, i8* %27, i8* %30
  %33 = select i1 %14, i64 %29, i64 %31
  %34 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %4, i8* %32, i64 %33) #13
  br label %35

35:                                               ; preds = %3, %16, %19, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N2gl17TransformFeedback8setLabelEPKNS_7ContextERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.gl::TransformFeedback"*, %"class.gl::Context"* nocapture readnone, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 -1, i32 2, i32 7
  %5 = getelementptr inbounds %"class.std::__1::vector.440", %"class.std::__1::vector.440"* %4, i64 1, i32 0, i32 2
  %6 = bitcast %"class.std::__1::__compressed_pair.442"* %5 to %"class.std::__1::basic_string"*
  %7 = icmp eq %"class.std::__1::basic_string"* %6, %2
  br i1 %7, label %37, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.std::__1::__compressed_pair.442"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %12, label %27, label %17

17:                                               ; preds = %8
  br i1 %16, label %21, label %18

18:                                               ; preds = %17
  %19 = bitcast %"class.std::__1::__compressed_pair.442"* %5 to i8*
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false) #13
  br label %37

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %6, i8* %23, i64 %25) #13
  br label %37

27:                                               ; preds = %8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %33 = zext i8 %15 to i64
  %34 = select i1 %16, i8* %29, i8* %32
  %35 = select i1 %16, i64 %31, i64 %33
  %36 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %6, i8* %34, i64 %35) #13
  br label %37

37:                                               ; preds = %3, %18, %21, %27
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK2gl17TransformFeedback8getLabelEv(%"class.gl::TransformFeedback"* readnone) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 0
  ret %"class.std::__1::basic_string"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZThn32_NK2gl17TransformFeedback8getLabelEv(%"class.gl::TransformFeedback"* readnone) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 -1, i32 2, i32 7
  %3 = getelementptr inbounds %"class.std::__1::vector.440", %"class.std::__1::vector.440"* %2, i64 1, i32 0, i32 2
  %4 = bitcast %"class.std::__1::__compressed_pair.442"* %3 to %"class.std::__1::basic_string"*
  ret %"class.std::__1::basic_string"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl17TransformFeedback5beginEPKNS_7ContextENS_13PrimitiveModeEPNS_7ProgramE(%"class.gl::TransformFeedback"* nocapture, %"class.gl::Context"*, i8 zeroext, %"class.gl::Program"*) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.std::__1::vector.180", align 8
  %6 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 3
  %7 = load %"class.rx::TransformFeedbackImpl"*, %"class.rx::TransformFeedbackImpl"** %6, align 8
  %8 = bitcast %"class.rx::TransformFeedbackImpl"* %7 to i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*, i8)***
  %9 = load i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*, i8)**, i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*, i8)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*, i8)*, i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*, i8)** %9, i64 3
  %11 = load i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*, i8)*, i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*, i8)** %10, align 8
  %12 = tail call i32 %11(%"class.rx::TransformFeedbackImpl"* %7, %"class.gl::Context"* %1, i8 zeroext %2) #13
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %119, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 1
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 2
  store i8 %2, i8* %16, align 1
  %17 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %17, align 2
  %18 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 4
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 6
  %20 = load %"class.gl::Program"*, %"class.gl::Program"** %19, align 8
  %21 = icmp eq %"class.gl::Program"* %20, %3
  br i1 %21, label %40, label %22

22:                                               ; preds = %14
  %23 = icmp eq %"class.gl::Program"* %20, null
  br i1 %23, label %34, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %20, i64 0, i32 13
  %26 = load i32, i32* %25, align 4
  %27 = add i32 %26, -1
  store i32 %27, i32* %25, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %20, i64 0, i32 12
  %31 = load i8, i8* %30, align 8, !range !5
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %29
  tail call void @_ZN2gl7Program10deleteSelfEPKNS_7ContextE(%"class.gl::Program"* nonnull %20, %"class.gl::Context"* %1) #13
  br label %34

34:                                               ; preds = %33, %29, %24, %22
  store %"class.gl::Program"* %3, %"class.gl::Program"** %19, align 8
  %35 = icmp eq %"class.gl::Program"* %3, null
  br i1 %35, label %40, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %3, i64 0, i32 13
  %38 = load i32, i32* %37, align 4
  %39 = add i32 %38, 1
  store i32 %39, i32* %37, align 4
  br label %40

40:                                               ; preds = %14, %34, %36
  %41 = icmp eq %"class.gl::Context"* %1, null
  br i1 %41, label %117, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 65
  %44 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %43, align 8
  %45 = icmp eq %"class.gl::ProgramExecutable"* %44, null
  br i1 %45, label %117, label %46

46:                                               ; preds = %42
  %47 = bitcast %"class.std::__1::vector.180"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #13
  %48 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %5, i64 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %50 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %44, i64 0, i32 27
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 24, i1 false) #13
  %51 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %44, i64 0, i32 27, i32 0, i32 1
  %52 = bitcast i32** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.std::__1::vector.180"* %50 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %53, %55
  %57 = ashr exact i64 %56, 2
  %58 = icmp eq i64 %56, 0
  br i1 %58, label %96, label %59

59:                                               ; preds = %46
  %60 = icmp ugt i64 %57, 4611686018427387903
  br i1 %60, label %61, label %63

61:                                               ; preds = %59
  %62 = bitcast %"class.std::__1::vector.180"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %62) #11
  unreachable

63:                                               ; preds = %59
  %64 = tail call i8* @_Znwm(i64 %56) #12
  %65 = bitcast i8* %64 to i32*
  %66 = bitcast i32** %48 to i8**
  store i8* %64, i8** %66, align 8
  %67 = bitcast %"class.std::__1::vector.180"* %5 to i8**
  store i8* %64, i8** %67, align 8
  %68 = getelementptr inbounds i32, i32* %65, i64 %57
  store i32* %68, i32** %49, align 8
  %69 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %50, i64 0, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8
  %71 = load i64, i64* %52, align 8
  %72 = bitcast i32** %48 to i64*
  %73 = ptrtoint i8* %64 to i64
  %74 = ptrtoint i32* %70 to i64
  %75 = sub i64 %71, %74
  %76 = icmp sgt i64 %75, 0
  br i1 %76, label %78, label %77

77:                                               ; preds = %63
  store i64 %73, i64* %72, align 8
  br label %98

78:                                               ; preds = %63
  %79 = lshr exact i64 %75, 2
  %80 = bitcast i32* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %64, i8* align 4 %80, i64 %75, i1 false) #13
  %81 = getelementptr inbounds i32, i32* %65, i64 %79
  %82 = ptrtoint i32* %81 to i64
  store i64 %82, i64* %72, align 8
  %83 = bitcast i8* %64 to i32*
  %84 = icmp eq i32* %81, %83
  br i1 %84, label %98, label %85

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 7, i32 0, i32 0
  %87 = sub i64 %82, %73
  %88 = ashr exact i64 %87, 2
  %89 = bitcast i8* %64 to i32*
  %90 = load %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"** %86, align 8
  %91 = tail call i64 @_ZN2gl27GetBoundBufferAvailableSizeERKNS_20OffsetBindingPointerINS_6BufferEEE(%"class.gl::OffsetBindingPointer"* dereferenceable(32) %90) #13
  %92 = load i32, i32* %65, align 4
  %93 = sext i32 %92 to i64
  %94 = sdiv i64 %91, %93
  %95 = icmp ugt i64 %88, 1
  br i1 %95, label %103, label %98

96:                                               ; preds = %46
  %97 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 5
  store i64 9223372036854775807, i64* %97, align 8
  br label %102

98:                                               ; preds = %85, %103, %78, %77
  %99 = phi i64 [ 9223372036854775807, %77 ], [ 9223372036854775807, %78 ], [ %94, %85 ], [ %114, %103 ]
  %100 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 5
  store i64 %99, i64* %100, align 8
  %101 = ptrtoint i8* %64 to i64
  store i64 %101, i64* %72, align 8
  tail call void @_ZdlPv(i8* nonnull %64) #12
  br label %102

102:                                              ; preds = %96, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #13
  br label %119

103:                                              ; preds = %85, %103
  %104 = phi i64 [ %115, %103 ], [ 1, %85 ]
  %105 = phi i64 [ %114, %103 ], [ %94, %85 ]
  %106 = load %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"** %86, align 8
  %107 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %106, i64 %104
  %108 = tail call i64 @_ZN2gl27GetBoundBufferAvailableSizeERKNS_20OffsetBindingPointerINS_6BufferEEE(%"class.gl::OffsetBindingPointer"* dereferenceable(32) %107) #13
  %109 = getelementptr inbounds i32, i32* %89, i64 %104
  %110 = load i32, i32* %109, align 4
  %111 = sext i32 %110 to i64
  %112 = sdiv i64 %108, %111
  %113 = icmp slt i64 %112, %105
  %114 = select i1 %113, i64 %112, i64 %105
  %115 = add nuw i64 %104, 1
  %116 = icmp ult i64 %115, %88
  br i1 %116, label %103, label %98, !llvm.loop !6

117:                                              ; preds = %40, %42
  %118 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 5
  store i64 0, i64* %118, align 8
  br label %119

119:                                              ; preds = %4, %102, %117
  %120 = phi i32 [ 1, %4 ], [ 0, %117 ], [ 0, %102 ]
  ret i32 %120
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl17TransformFeedback11bindProgramEPKNS_7ContextEPNS_7ProgramE(%"class.gl::TransformFeedback"* nocapture, %"class.gl::Context"*, %"class.gl::Program"*) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 6
  %5 = load %"class.gl::Program"*, %"class.gl::Program"** %4, align 8
  %6 = icmp eq %"class.gl::Program"* %5, %2
  br i1 %6, label %25, label %7

7:                                                ; preds = %3
  %8 = icmp eq %"class.gl::Program"* %5, null
  br i1 %8, label %19, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %5, i64 0, i32 13
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, -1
  store i32 %12, i32* %10, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %19

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %5, i64 0, i32 12
  %16 = load i8, i8* %15, align 8, !range !5
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %14
  tail call void @_ZN2gl7Program10deleteSelfEPKNS_7ContextE(%"class.gl::Program"* nonnull %5, %"class.gl::Context"* %1) #13
  br label %19

19:                                               ; preds = %18, %14, %9, %7
  store %"class.gl::Program"* %2, %"class.gl::Program"** %4, align 8
  %20 = icmp eq %"class.gl::Program"* %2, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %2, i64 0, i32 13
  %23 = load i32, i32* %22, align 4
  %24 = add i32 %23, 1
  store i32 %24, i32* %22, align 4
  br label %25

25:                                               ; preds = %19, %3, %21
  ret void
}

declare i64 @_ZN2gl27GetBoundBufferAvailableSizeERKNS_20OffsetBindingPointerINS_6BufferEEE(%"class.gl::OffsetBindingPointer"* dereferenceable(32)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl17TransformFeedback3endEPKNS_7ContextE(%"class.gl::TransformFeedback"* nocapture, %"class.gl::Context"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 3
  %4 = load %"class.rx::TransformFeedbackImpl"*, %"class.rx::TransformFeedbackImpl"** %3, align 8
  %5 = bitcast %"class.rx::TransformFeedbackImpl"* %4 to i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*)***
  %6 = load i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*)**, i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*)*, i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*)** %6, i64 4
  %8 = load i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*)*, i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*)** %7, align 8
  %9 = tail call i32 %8(%"class.rx::TransformFeedbackImpl"* %4, %"class.gl::Context"* %1) #13
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %31, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 2
  store i8 15, i8* %13, align 1
  %14 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %14, align 2
  %15 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 4
  %16 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 6
  %17 = bitcast i64* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false)
  %18 = load %"class.gl::Program"*, %"class.gl::Program"** %16, align 8
  %19 = icmp eq %"class.gl::Program"* %18, null
  br i1 %19, label %31, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %18, i64 0, i32 13
  %22 = load i32, i32* %21, align 4
  %23 = add i32 %22, -1
  store i32 %23, i32* %21, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %18, i64 0, i32 12
  %27 = load i8, i8* %26, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %30, label %29

29:                                               ; preds = %25
  tail call void @_ZN2gl7Program10deleteSelfEPKNS_7ContextE(%"class.gl::Program"* nonnull %18, %"class.gl::Context"* %1) #13
  br label %30

30:                                               ; preds = %20, %25, %29
  store %"class.gl::Program"* null, %"class.gl::Program"** %16, align 8
  br label %31

31:                                               ; preds = %2, %30, %11
  %32 = phi i32 [ 1, %2 ], [ 0, %11 ], [ 0, %30 ]
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl17TransformFeedback5pauseEPKNS_7ContextE(%"class.gl::TransformFeedback"* nocapture, %"class.gl::Context"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 3
  %4 = load %"class.rx::TransformFeedbackImpl"*, %"class.rx::TransformFeedbackImpl"** %3, align 8
  %5 = bitcast %"class.rx::TransformFeedbackImpl"* %4 to i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*)***
  %6 = load i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*)**, i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*)*, i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*)** %6, i64 5
  %8 = load i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*)*, i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*)** %7, align 8
  %9 = tail call i32 %8(%"class.rx::TransformFeedbackImpl"* %4, %"class.gl::Context"* %1) #13
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 3
  store i8 1, i8* %12, align 2
  br label %13

13:                                               ; preds = %2, %11
  %14 = phi i32 [ 0, %11 ], [ 1, %2 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl17TransformFeedback6resumeEPKNS_7ContextE(%"class.gl::TransformFeedback"* nocapture, %"class.gl::Context"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 3
  %4 = load %"class.rx::TransformFeedbackImpl"*, %"class.rx::TransformFeedbackImpl"** %3, align 8
  %5 = bitcast %"class.rx::TransformFeedbackImpl"* %4 to i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*)***
  %6 = load i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*)**, i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*)*, i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*)** %6, i64 6
  %8 = load i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*)*, i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*)** %7, align 8
  %9 = tail call i32 %8(%"class.rx::TransformFeedbackImpl"* %4, %"class.gl::Context"* %1) #13
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %12, align 2
  br label %13

13:                                               ; preds = %2, %11
  %14 = phi i32 [ 0, %11 ], [ 1, %2 ]
  ret i32 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl17TransformFeedback8isPausedEv(%"class.gl::TransformFeedback"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 3
  %3 = load i8, i8* %2, align 2, !range !5
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZNK2gl17TransformFeedback16getPrimitiveModeEv(%"class.gl::TransformFeedback"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 2
  %3 = load i8, i8* %2, align 1
  ret i8 %3
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl17TransformFeedback23checkBufferSpaceForDrawEii(%"class.gl::TransformFeedback"* nocapture readonly, i32, i32) local_unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 4
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 2
  %7 = load i8, i8* %6, align 1
  %8 = tail call { i64, i8 } @_ZN2gl24GetVerticesNeededForDrawENS_13PrimitiveModeEii(i8 zeroext %7, i32 %1, i32 %2)
  %9 = extractvalue { i64, i8 } %8, 0
  %10 = extractvalue { i64, i8 } %8, 1
  %11 = add i64 %9, %5
  %12 = xor i64 %11, %5
  %13 = xor i64 %11, %9
  %14 = and i64 %12, %13
  %15 = icmp sgt i64 %14, -1
  %16 = icmp slt i64 %11, 0
  %17 = select i1 %16, i8 2, i8 1
  %18 = select i1 %15, i8 0, i8 %17
  %19 = or i8 %18, %10
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 5
  %23 = load i64, i64* %22, align 8
  %24 = icmp sle i64 %11, %23
  br label %25

25:                                               ; preds = %21, %3
  %26 = phi i1 [ false, %3 ], [ %24, %21 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl17TransformFeedback15onVerticesDrawnEPKNS_7ContextEii(%"class.gl::TransformFeedback"* nocapture, %"class.gl::Context"* nocapture readnone, i32, i32) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 2
  %8 = load i8, i8* %7, align 1
  %9 = tail call { i64, i8 } @_ZN2gl24GetVerticesNeededForDrawENS_13PrimitiveModeEii(i8 zeroext %8, i32 %2, i32 %3)
  %10 = extractvalue { i64, i8 } %9, 0
  %11 = add i64 %10, %6
  store i64 %11, i64* %5, align 8
  %12 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 7, i32 0, i32 0
  %13 = load %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"** %12, align 8
  %14 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 7, i32 0, i32 1
  %15 = load %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"** %14, align 8
  %16 = icmp eq %"class.gl::OffsetBindingPointer"* %13, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %24, %4
  ret void

18:                                               ; preds = %4, %24
  %19 = phi %"class.gl::OffsetBindingPointer"* [ %25, %24 ], [ %13, %4 ]
  %20 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %19, i64 0, i32 0, i32 0, i32 1
  %21 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %20, align 8
  %22 = icmp eq %"class.gl::Buffer"* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %18
  tail call void @_ZN2gl6Buffer13onDataChangedEv(%"class.gl::Buffer"* nonnull %21) #13
  br label %24

24:                                               ; preds = %18, %23
  %25 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %19, i64 1
  %26 = icmp eq %"class.gl::OffsetBindingPointer"* %25, %15
  br i1 %26, label %17, label %18
}

declare void @_ZN2gl6Buffer13onDataChangedEv(%"class.gl::Buffer"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2gl17TransformFeedback15hasBoundProgramENS_15ShaderProgramIDE(%"class.gl::TransformFeedback"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 6
  %4 = load %"class.gl::Program"*, %"class.gl::Program"** %3, align 8
  %5 = icmp eq %"class.gl::Program"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = tail call i32 @_ZNK2gl7Program2idEv(%"class.gl::Program"* nonnull %4) #13
  %8 = icmp eq i32 %7, %1
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i1 [ false, %2 ], [ %8, %6 ]
  ret i1 %10
}

declare i32 @_ZNK2gl7Program2idEv(%"class.gl::Program"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl17TransformFeedback12detachBufferEPKNS_7ContextENS_8BufferIDE(%"class.gl::TransformFeedback"*, %"class.gl::Context"*, i32) local_unnamed_addr #2 align 2 {
  %4 = tail call zeroext i1 @_ZNK2gl7Context26isCurrentTransformFeedbackEPKNS_17TransformFeedbackE(%"class.gl::Context"* %1, %"class.gl::TransformFeedback"* %0) #13
  %5 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 7
  %6 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 7, i32 0, i32 1
  %7 = bitcast %"class.gl::OffsetBindingPointer"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.440"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %8, %10
  br i1 %11, label %73, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.std::__1::vector.440", %"class.std::__1::vector.440"* %5, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 3
  br label %15

15:                                               ; preds = %12, %66
  %16 = phi i64 [ %10, %12 ], [ %67, %66 ]
  %17 = phi i64 [ %8, %12 ], [ %68, %66 ]
  %18 = phi i64 [ 0, %12 ], [ %69, %66 ]
  %19 = inttoptr i64 %16 to %"class.gl::OffsetBindingPointer"*
  %20 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %19, i64 %18, i32 0, i32 0, i32 1
  %21 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %20, align 8
  %22 = icmp eq %"class.gl::Buffer"* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %21, i64 0, i32 0, i32 2, i32 0
  %25 = load i32, i32* %24, align 8
  br label %26

26:                                               ; preds = %15, %23
  %27 = phi i32 [ %25, %23 ], [ 0, %15 ]
  %28 = icmp eq i32 %27, %2
  br i1 %28, label %29, label %66

29:                                               ; preds = %26
  br i1 %4, label %30, label %32

30:                                               ; preds = %29
  tail call void @_ZN2gl6Buffer18onTFBindingChangedEPKNS_7ContextEbb(%"class.gl::Buffer"* %21, %"class.gl::Context"* %1, i1 zeroext false, i1 zeroext true) #13
  %31 = load %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"** %13, align 8
  br label %32

32:                                               ; preds = %30, %29
  %33 = phi %"class.gl::OffsetBindingPointer"* [ %31, %30 ], [ %19, %29 ]
  %34 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %33, i64 %18, i32 0, i32 0, i32 1
  %35 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %34, align 8
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %34, align 8
  %36 = icmp eq %"class.gl::Buffer"* %35, null
  br i1 %36, label %51, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %35, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %35, i64 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %51

43:                                               ; preds = %37
  %44 = bitcast %"class.gl::Buffer"* %35 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %45 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %44, align 8
  %46 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %45, align 8
  tail call void %46(%"class.angle::RefCountObject"* %38, %"class.gl::Context"* %1) #13
  %47 = bitcast %"class.gl::Buffer"* %35 to void (%"class.angle::RefCountObject"*)***
  %48 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %48, i64 2
  %50 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %49, align 8
  tail call void %50(%"class.angle::RefCountObject"* nonnull %38) #13
  br label %51

51:                                               ; preds = %32, %37, %43
  %52 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %33, i64 %18, i32 1
  %53 = bitcast i64* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false)
  %54 = load %"class.rx::TransformFeedbackImpl"*, %"class.rx::TransformFeedbackImpl"** %14, align 8
  %55 = load %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"** %13, align 8
  %56 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %55, i64 %18
  %57 = bitcast %"class.rx::TransformFeedbackImpl"* %54 to i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*, i64, %"class.gl::OffsetBindingPointer"*)***
  %58 = load i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*, i64, %"class.gl::OffsetBindingPointer"*)**, i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*, i64, %"class.gl::OffsetBindingPointer"*)*** %57, align 8
  %59 = getelementptr inbounds i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*, i64, %"class.gl::OffsetBindingPointer"*)*, i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*, i64, %"class.gl::OffsetBindingPointer"*)** %58, i64 7
  %60 = load i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*, i64, %"class.gl::OffsetBindingPointer"*)*, i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*, i64, %"class.gl::OffsetBindingPointer"*)** %59, align 8
  %61 = tail call i32 %60(%"class.rx::TransformFeedbackImpl"* %54, %"class.gl::Context"* %1, i64 %18, %"class.gl::OffsetBindingPointer"* dereferenceable(32) %56) #13
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %73, label %63

63:                                               ; preds = %51
  %64 = load i64, i64* %7, align 8
  %65 = load i64, i64* %9, align 8
  br label %66

66:                                               ; preds = %63, %26
  %67 = phi i64 [ %65, %63 ], [ %16, %26 ]
  %68 = phi i64 [ %64, %63 ], [ %17, %26 ]
  %69 = add nuw i64 %18, 1
  %70 = sub i64 %68, %67
  %71 = ashr exact i64 %70, 5
  %72 = icmp ult i64 %69, %71
  br i1 %72, label %15, label %73

73:                                               ; preds = %66, %51, %3
  %74 = phi i32 [ 0, %3 ], [ 1, %51 ], [ 0, %66 ]
  ret i32 %74
}

declare zeroext i1 @_ZNK2gl7Context26isCurrentTransformFeedbackEPKNS_17TransformFeedbackE(%"class.gl::Context"*, %"class.gl::TransformFeedback"*) local_unnamed_addr #6

declare void @_ZN2gl6Buffer18onTFBindingChangedEPKNS_7ContextEbb(%"class.gl::Buffer"*, %"class.gl::Context"*, i1 zeroext, i1 zeroext) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl17TransformFeedback17bindIndexedBufferEPKNS_7ContextEmPNS_6BufferEmm(%"class.gl::TransformFeedback"*, %"class.gl::Context"*, i64, %"class.gl::Buffer"*, i64, i64) local_unnamed_addr #2 align 2 {
  %7 = icmp eq %"class.gl::Context"* %1, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %6
  %9 = tail call zeroext i1 @_ZNK2gl7Context26isCurrentTransformFeedbackEPKNS_17TransformFeedbackE(%"class.gl::Context"* nonnull %1, %"class.gl::TransformFeedback"* %0) #13
  br i1 %9, label %10, label %17

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 7, i32 0, i32 0
  %12 = load %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"** %11, align 8
  %13 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %12, i64 %2, i32 0, i32 0, i32 1
  %14 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %13, align 8
  %15 = icmp eq %"class.gl::Buffer"* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %10
  tail call void @_ZN2gl6Buffer18onTFBindingChangedEPKNS_7ContextEbb(%"class.gl::Buffer"* nonnull %14, %"class.gl::Context"* nonnull %1, i1 zeroext false, i1 zeroext true) #13
  br label %17

17:                                               ; preds = %6, %10, %16, %8
  %18 = phi i1 [ true, %10 ], [ true, %16 ], [ false, %8 ], [ false, %6 ]
  %19 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 7, i32 0, i32 0
  %20 = load %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"** %19, align 8
  %21 = icmp eq %"class.gl::Buffer"* %3, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %3, i64 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, 1
  store i64 %25, i64* %23, align 8
  br label %26

26:                                               ; preds = %22, %17
  %27 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %20, i64 %2, i32 0, i32 0, i32 1
  %28 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %27, align 8
  store %"class.gl::Buffer"* %3, %"class.gl::Buffer"** %27, align 8
  %29 = icmp eq %"class.gl::Buffer"* %28, null
  br i1 %29, label %44, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %28, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %28, i64 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, -1
  store i64 %34, i64* %32, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %44

36:                                               ; preds = %30
  %37 = bitcast %"class.gl::Buffer"* %28 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %38 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %37, align 8
  %39 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %38, align 8
  tail call void %39(%"class.angle::RefCountObject"* %31, %"class.gl::Context"* %1) #13
  %40 = bitcast %"class.gl::Buffer"* %28 to void (%"class.angle::RefCountObject"*)***
  %41 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %41, i64 2
  %43 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %42, align 8
  tail call void %43(%"class.angle::RefCountObject"* nonnull %31) #13
  br label %44

44:                                               ; preds = %26, %30, %36
  %45 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %20, i64 %2, i32 1
  store i64 %4, i64* %45, align 8
  %46 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %20, i64 %2, i32 2
  store i64 %5, i64* %46, align 8
  %47 = icmp ne %"class.gl::Buffer"* %3, null
  %48 = and i1 %47, %18
  br i1 %48, label %49, label %50

49:                                               ; preds = %44
  tail call void @_ZN2gl6Buffer18onTFBindingChangedEPKNS_7ContextEbb(%"class.gl::Buffer"* nonnull %3, %"class.gl::Context"* %1, i1 zeroext true, i1 zeroext true) #13
  br label %50

50:                                               ; preds = %49, %44
  %51 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 3
  %52 = load %"class.rx::TransformFeedbackImpl"*, %"class.rx::TransformFeedbackImpl"** %51, align 8
  %53 = load %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"** %19, align 8
  %54 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %53, i64 %2
  %55 = bitcast %"class.rx::TransformFeedbackImpl"* %52 to i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*, i64, %"class.gl::OffsetBindingPointer"*)***
  %56 = load i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*, i64, %"class.gl::OffsetBindingPointer"*)**, i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*, i64, %"class.gl::OffsetBindingPointer"*)*** %55, align 8
  %57 = getelementptr inbounds i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*, i64, %"class.gl::OffsetBindingPointer"*)*, i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*, i64, %"class.gl::OffsetBindingPointer"*)** %56, i64 7
  %58 = load i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*, i64, %"class.gl::OffsetBindingPointer"*)*, i32 (%"class.rx::TransformFeedbackImpl"*, %"class.gl::Context"*, i64, %"class.gl::OffsetBindingPointer"*)** %57, align 8
  %59 = tail call i32 %58(%"class.rx::TransformFeedbackImpl"* %52, %"class.gl::Context"* %1, i64 %2, %"class.gl::OffsetBindingPointer"* dereferenceable(32) %54) #13
  ret i32 %59
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(32) %"class.gl::OffsetBindingPointer"* @_ZNK2gl17TransformFeedback16getIndexedBufferEm(%"class.gl::TransformFeedback"* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 7, i32 0, i32 0
  %4 = load %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"** %3, align 8
  %5 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %4, i64 %1
  ret %"class.gl::OffsetBindingPointer"* %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2gl17TransformFeedback21getIndexedBufferCountEv(%"class.gl::TransformFeedback"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 7
  %3 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 7, i32 0, i32 1
  %4 = bitcast %"class.gl::OffsetBindingPointer"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.440"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  ret i64 %9
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl17TransformFeedback23buffersBoundForOtherUseEv(%"class.gl::TransformFeedback"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 7, i32 0, i32 0
  %3 = load %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"** %2, align 8
  %4 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 7, i32 0, i32 1
  %5 = load %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"** %4, align 8
  %6 = icmp eq %"class.gl::OffsetBindingPointer"* %3, %5
  br i1 %6, label %26, label %7

7:                                                ; preds = %1, %23
  %8 = phi %"class.gl::OffsetBindingPointer"* [ %24, %23 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %8, i64 0, i32 0, i32 0, i32 1
  %10 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %9, align 8
  %11 = icmp eq %"class.gl::Buffer"* %10, null
  br i1 %11, label %23, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %10, i64 0, i32 4, i32 12
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %10, i64 0, i32 4, i32 11
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %10, i64 0, i32 4, i32 13
  %20 = load i32, i32* %19, align 8
  %21 = sub nsw i32 %18, %20
  %22 = icmp eq i32 %14, %21
  br i1 %22, label %23, label %26

23:                                               ; preds = %16, %12, %7
  %24 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %8, i64 1
  %25 = icmp eq %"class.gl::OffsetBindingPointer"* %24, %5
  br i1 %25, label %26, label %7

26:                                               ; preds = %23, %16, %1
  %27 = phi i1 [ false, %1 ], [ true, %16 ], [ false, %23 ]
  ret i1 %27
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.rx::TransformFeedbackImpl"* @_ZNK2gl17TransformFeedback17getImplementationEv(%"class.gl::TransformFeedback"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 3
  %3 = load %"class.rx::TransformFeedbackImpl"*, %"class.rx::TransformFeedbackImpl"** %2, align 8
  ret %"class.rx::TransformFeedbackImpl"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl17TransformFeedback16onBindingChangedEPKNS_7ContextEb(%"class.gl::TransformFeedback"* nocapture readonly, %"class.gl::Context"*, i1 zeroext) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 7, i32 0, i32 0
  %5 = load %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 7, i32 0, i32 1
  %7 = load %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"** %6, align 8
  %8 = icmp eq %"class.gl::OffsetBindingPointer"* %5, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %16, %3
  ret void

10:                                               ; preds = %3, %16
  %11 = phi %"class.gl::OffsetBindingPointer"* [ %17, %16 ], [ %5, %3 ]
  %12 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %11, i64 0, i32 0, i32 0, i32 1
  %13 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %12, align 8
  %14 = icmp eq %"class.gl::Buffer"* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %10
  tail call void @_ZN2gl6Buffer18onTFBindingChangedEPKNS_7ContextEbb(%"class.gl::Buffer"* nonnull %13, %"class.gl::Context"* %1, i1 zeroext %2, i1 zeroext true) #13
  br label %16

16:                                               ; preds = %10, %15
  %17 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %11, i64 1
  %18 = icmp eq %"class.gl::OffsetBindingPointer"* %17, %7
  br i1 %18, label %9, label %10
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector.440"* @_ZNK2gl17TransformFeedback17getIndexedBuffersEv(%"class.gl::TransformFeedback"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %0, i64 0, i32 2, i32 7
  ret %"class.std::__1::vector.440"* %2
}

declare void @_ZN2gl7Program10deleteSelfEPKNS_7ContextE(%"class.gl::Program"*, %"class.gl::Context"*) local_unnamed_addr #6

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #6

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEED2Ev(%"class.angle::BindingPointer.265"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.angle::BindingPointer.265", %"class.angle::BindingPointer.265"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl20OffsetBindingPointerINS_6BufferEED0Ev(%"class.gl::OffsetBindingPointer"*) unnamed_addr #10 comdat align 2 {
  %2 = bitcast %"class.gl::OffsetBindingPointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEED0Ev(%"class.angle::BindingPointer.265"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.angle::BindingPointer.265"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5angle14RefCountObjectIN2gl7ContextENS_6ResultEE9onDestroyEPKS2_(%"class.angle::RefCountObject"*, %"class.gl::Context"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5angle14RefCountObjectIN2gl7ContextENS_6ResultEED2Ev(%"class.angle::RefCountObject"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.angle::RefCountObject", %"class.angle::RefCountObject"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5angle14RefCountObjectIN2gl7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5angle14RefCountObjectIN2gl7ContextENS_6ResultEED0Ev(%"class.angle::RefCountObject"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.angle::RefCountObject"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = !{i8 0, i8 2}
!6 = distinct !{!6, !3}
