; ModuleID = '../../third_party/blink/renderer/core/inspector/inspector_highlight.cc'
source_filename = "../../third_party/blink/renderer/core/inspector/inspector_highlight.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::Color" = type { i32 }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1683", i64 }
%"class.std::__1::vector.1683" = type { %"class.std::__1::__vector_base.1684" }
%"class.std::__1::__vector_base.1684" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1685" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1685" = type { %"struct.std::__1::__compressed_pair_elem.1686" }
%"struct.std::__1::__compressed_pair_elem.1686" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"struct.cc::ElementId" = type { i64 }
%"struct.blink::InspectorHighlightConfig" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8, i8, %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2379", %"class.std::__1::unique_ptr.2395" }
%"class.std::__1::unique_ptr.2373" = type { %"class.std::__1::__compressed_pair.2374" }
%"class.std::__1::__compressed_pair.2374" = type { %"struct.std::__1::__compressed_pair_elem.2375" }
%"struct.std::__1::__compressed_pair_elem.2375" = type { %"struct.blink::InspectorGridHighlightConfig"* }
%"struct.blink::InspectorGridHighlightConfig" = type <{ %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2379" = type { %"class.std::__1::__compressed_pair.2380" }
%"class.std::__1::__compressed_pair.2380" = type { %"struct.std::__1::__compressed_pair_elem.2381" }
%"struct.std::__1::__compressed_pair_elem.2381" = type { %"struct.blink::InspectorFlexContainerHighlightConfig"* }
%"struct.blink::InspectorFlexContainerHighlightConfig" = type { %"class.absl::optional.2382", %"class.absl::optional.2382", %"class.absl::optional.2382", %"class.absl::optional.2387", %"class.absl::optional.2387", %"class.absl::optional.2387", %"class.absl::optional.2387", %"class.absl::optional.2382" }
%"class.absl::optional.2387" = type { %"class.absl::optional_internal::optional_data.2388" }
%"class.absl::optional_internal::optional_data.2388" = type { %"class.absl::optional_internal::optional_data_base.2389" }
%"class.absl::optional_internal::optional_data_base.2389" = type { %"class.absl::optional_internal::optional_data_dtor_base.2390" }
%"class.absl::optional_internal::optional_data_dtor_base.2390" = type { i8, %union.anon.2391 }
%union.anon.2391 = type { %"struct.blink::BoxStyle" }
%"struct.blink::BoxStyle" = type { %"class.blink::Color", %"class.blink::Color" }
%"class.absl::optional.2382" = type { %"class.absl::optional_internal::optional_data.2383" }
%"class.absl::optional_internal::optional_data.2383" = type { %"class.absl::optional_internal::optional_data_base.2384" }
%"class.absl::optional_internal::optional_data_base.2384" = type { %"class.absl::optional_internal::optional_data_dtor_base.2385" }
%"class.absl::optional_internal::optional_data_dtor_base.2385" = type { i8, %union.anon.2386 }
%union.anon.2386 = type { %"struct.blink::LineStyle" }
%"struct.blink::LineStyle" = type { %"class.blink::Color", %"class.WTF::String" }
%"class.std::__1::unique_ptr.2395" = type { %"class.std::__1::__compressed_pair.2396" }
%"class.std::__1::__compressed_pair.2396" = type { %"struct.std::__1::__compressed_pair_elem.2397" }
%"struct.std::__1::__compressed_pair_elem.2397" = type { %"struct.blink::InspectorFlexItemHighlightConfig"* }
%"struct.blink::InspectorFlexItemHighlightConfig" = type { %"class.absl::optional.2387", %"class.absl::optional.2382", %"class.absl::optional.2382" }
%"class.blink::InspectorHighlight" = type { %"class.blink::InspectorHighlightBase.base", %"class.std::__1::unique_ptr.2420", %"class.std::__1::unique_ptr.2440", %"class.std::__1::unique_ptr.2477", %"class.std::__1::unique_ptr.2440", %"class.std::__1::unique_ptr.2440", %"class.std::__1::unique_ptr.2401", %"class.std::__1::unique_ptr.2401", %"class.std::__1::unique_ptr.2401", i8, i8, i8, i32 }
%"class.blink::InspectorHighlightBase.base" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.2401", float }>
%"class.std::__1::unique_ptr.2420" = type { %"class.std::__1::__compressed_pair.2421" }
%"class.std::__1::__compressed_pair.2421" = type { %"struct.std::__1::__compressed_pair_elem.2422" }
%"struct.std::__1::__compressed_pair_elem.2422" = type { %"class.std::__1::vector.2423"* }
%"class.std::__1::vector.2423" = type { %"class.std::__1::__vector_base.2424" }
%"class.std::__1::__vector_base.2424" = type { %"class.std::__1::unique_ptr.2425"*, %"class.std::__1::unique_ptr.2425"*, %"class.std::__1::__compressed_pair.2432" }
%"class.std::__1::unique_ptr.2425" = type { %"class.std::__1::__compressed_pair.2426" }
%"class.std::__1::__compressed_pair.2426" = type { %"struct.std::__1::__compressed_pair_elem.2427" }
%"struct.std::__1::__compressed_pair_elem.2427" = type { %"class.std::__1::vector.2428"* }
%"class.std::__1::vector.2428" = type { %"class.std::__1::__vector_base.2572" }
%"class.std::__1::__vector_base.2572" = type { double*, double*, %"class.std::__1::__compressed_pair.2573" }
%"class.std::__1::__compressed_pair.2573" = type { %"struct.std::__1::__compressed_pair_elem.2574" }
%"struct.std::__1::__compressed_pair_elem.2574" = type { double* }
%"class.std::__1::__compressed_pair.2432" = type { %"struct.std::__1::__compressed_pair_elem.2433" }
%"struct.std::__1::__compressed_pair_elem.2433" = type { %"class.std::__1::unique_ptr.2425"* }
%"class.std::__1::unique_ptr.2477" = type { %"class.std::__1::__compressed_pair.2478" }
%"class.std::__1::__compressed_pair.2478" = type { %"struct.std::__1::__compressed_pair_elem.2479" }
%"struct.std::__1::__compressed_pair_elem.2479" = type { %"class.blink::protocol::DOM::BoxModel"* }
%"class.blink::protocol::DOM::BoxModel" = type { %"class.crdtp::ProtocolObject", %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425", i32, i32, %"class.crdtp::detail::PtrMaybe" }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.2480" }
%"class.std::__1::unique_ptr.2480" = type { %"class.std::__1::__compressed_pair.2481" }
%"class.std::__1::__compressed_pair.2481" = type { %"struct.std::__1::__compressed_pair_elem.2482" }
%"struct.std::__1::__compressed_pair_elem.2482" = type { %"class.blink::protocol::DOM::ShapeOutsideInfo"* }
%"class.blink::protocol::DOM::ShapeOutsideInfo" = type { %"class.crdtp::ProtocolObject.2483", %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2486", %"class.std::__1::unique_ptr.2486" }
%"class.crdtp::ProtocolObject.2483" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.2486" = type { %"class.std::__1::__compressed_pair.2487" }
%"class.std::__1::__compressed_pair.2487" = type { %"struct.std::__1::__compressed_pair_elem.2488" }
%"struct.std::__1::__compressed_pair_elem.2488" = type { %"class.std::__1::vector.2404"* }
%"class.std::__1::vector.2404" = type { %"class.std::__1::__vector_base.2405" }
%"class.std::__1::__vector_base.2405" = type { %"class.std::__1::unique_ptr.2406"*, %"class.std::__1::unique_ptr.2406"*, %"class.std::__1::__compressed_pair.2412" }
%"class.std::__1::unique_ptr.2406" = type { %"class.std::__1::__compressed_pair.2407" }
%"class.std::__1::__compressed_pair.2407" = type { %"struct.std::__1::__compressed_pair_elem.2408" }
%"struct.std::__1::__compressed_pair_elem.2408" = type { %"class.blink::protocol::Value"* }
%"class.blink::protocol::Value" = type <{ %"class.crdtp::Serializable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2412" = type { %"struct.std::__1::__compressed_pair_elem.2413" }
%"struct.std::__1::__compressed_pair_elem.2413" = type { %"class.std::__1::unique_ptr.2406"* }
%"class.std::__1::unique_ptr.2440" = type { %"class.std::__1::__compressed_pair.2441" }
%"class.std::__1::__compressed_pair.2441" = type { %"struct.std::__1::__compressed_pair_elem.2442" }
%"struct.std::__1::__compressed_pair_elem.2442" = type { %"class.blink::protocol::DictionaryValue"* }
%"class.blink::protocol::DictionaryValue" = type { %"class.blink::protocol::Value.base", [4 x i8], %"class.std::__1::unordered_map", %"class.std::__1::vector.2467" }
%"class.blink::protocol::Value.base" = type <{ %"class.crdtp::Serializable", i32 }>
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.2443" }
%"class.std::__1::__hash_table.2443" = type <{ %"class.std::__1::unique_ptr.2444", %"class.std::__1::__compressed_pair.2454", %"class.std::__1::__compressed_pair.2459", %"class.std::__1::__compressed_pair.2462", [4 x i8] }>
%"class.std::__1::unique_ptr.2444" = type { %"class.std::__1::__compressed_pair.2445" }
%"class.std::__1::__compressed_pair.2445" = type { %"struct.std::__1::__compressed_pair_elem.2446", %"struct.std::__1::__compressed_pair_elem.2448" }
%"struct.std::__1::__compressed_pair_elem.2446" = type { %"struct.std::__1::__hash_node_base.2447"** }
%"struct.std::__1::__hash_node_base.2447" = type { %"struct.std::__1::__hash_node_base.2447"* }
%"struct.std::__1::__compressed_pair_elem.2448" = type { %"class.std::__1::__bucket_list_deallocator.2449" }
%"class.std::__1::__bucket_list_deallocator.2449" = type { %"class.std::__1::__compressed_pair.2450" }
%"class.std::__1::__compressed_pair.2450" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.2454" = type { %"struct.std::__1::__compressed_pair_elem.2455" }
%"struct.std::__1::__compressed_pair_elem.2455" = type { %"struct.std::__1::__hash_node_base.2447" }
%"class.std::__1::__compressed_pair.2459" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.2462" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"class.std::__1::vector.2467" = type { %"class.std::__1::__vector_base.2468" }
%"class.std::__1::__vector_base.2468" = type { %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::__compressed_pair.2469" }
%"class.std::__1::__compressed_pair.2469" = type { %"struct.std::__1::__compressed_pair_elem.2470" }
%"struct.std::__1::__compressed_pair_elem.2470" = type { %"class.WTF::String"* }
%"class.std::__1::unique_ptr.2401" = type { %"class.std::__1::__compressed_pair.2402" }
%"class.std::__1::__compressed_pair.2402" = type { %"struct.std::__1::__compressed_pair_elem.2403" }
%"struct.std::__1::__compressed_pair_elem.2403" = type { %"class.blink::protocol::ListValue"* }
%"class.blink::protocol::ListValue" = type { %"class.blink::protocol::Value.base", %"class.std::__1::vector.2404" }
%"struct.blink::InspectorSourceOrderConfig" = type { %"class.blink::Color", %"class.blink::Color" }
%"class.blink::InspectorSourceOrderHighlight" = type { %"class.blink::InspectorHighlightBase.base", i32 }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.771", %"class.WTF::Vector.771", i8, i32, %"class.blink::Member.1004", %"class.blink::Member.1006", %"class.blink::Member.1008", %"class.blink::Member.1010", %"class.blink::Member.1012", %"class.blink::Member.1014", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1022", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1028", %"class.blink::Member.1030", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1033", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.1056", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.1065", double, double, i64, i64, %"class.blink::HeapHashSet.1067", %"class.blink::HeapHashSet.1074", i16, i8, %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::TextLinkColors", %"class.blink::Member.1411", i8, [7 x i8], %"class.blink::HeapHashMap.1413", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1420", %"class.blink::Member.1425", %"class.blink::Member.1427", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1429", %"class.blink::HeapVector.1431", %"class.std::__1::unique_ptr.1439", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1445", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1458", %"class.WTF::Vector.1460", i8, i8, %"class.std::__1::unique_ptr.1465", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1471", i32, i8, %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::DocumentTiming", %"class.blink::Member.1479", i8, i32, %"class.blink::Member.1481", %"class.blink::Member.1483", %"class.blink::Member.1485", %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::Member.1487", %"class.WTF::HashMap.1489", %"class.blink::Member.1494", %"class.blink::Member.1496", %"class.blink::Member.1498", %"class.blink::Member.1500", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::HeapHashSet.1502", i8, i32, %"class.blink::Member.1509", %"class.blink::Member.1511", i32, %"class.blink::Member.1513", %"class.blink::Member.1515", %"class.blink::Member.1517", %"class.std::__1::unique_ptr.1519", i64, %"class.std::__1::unique_ptr.1525", i32, i32, %"class.blink::Member.1536", %"class.blink::Member.1538", %"class.blink::Member.1540", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1542", %"class.WTF::Vector.1544", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1549", %"class.blink::Member.1556", %"class.std::__1::unique_ptr.1558", %"class.blink::Member.1564", i8, i8, %"class.WTF::String", %"class.blink::Member.1566", i8, [7 x i8], %"class.blink::HeapHashMap.1568", %"class.blink::HeapObserverSet", %"class.blink::Member.1582", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1584", i32, i8, i8, %"class.blink::WeakMember.1586", %"class.blink::Member.1587" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.997" }
%"class.blink::HeapHashMap.997" = type { %"class.WTF::HashMap.1000" }
%"class.WTF::HashMap.1000" = type { %"class.WTF::HashTable.1001" }
%"class.WTF::HashTable.1001" = type <{ %"struct.WTF::KeyValuePair.1003"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1003" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.771" = type { %"class.WTF::VectorBuffer.772" }
%"class.WTF::VectorBuffer.772" = type { %"class.WTF::VectorBufferBase.773" }
%"class.WTF::VectorBufferBase.773" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.774 }
%class.scoped_refptr.774 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.775", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.775" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"class.blink::Member.1004" = type { %"class.blink::MemberBase.1005" }
%"class.blink::MemberBase.1005" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1006" = type { %"class.blink::MemberBase.1007" }
%"class.blink::MemberBase.1007" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1611", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1652", i32, i8, [3 x i8], %"class.blink::HeapVector.1654", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1662", %"class.blink::Member.1664", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1673", %"class.blink::Member.1679", %"class.blink::Member.1681", i8, [7 x i8] }>
%"class.blink::Supplementable.1611" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1612" }
%"class.blink::HeapHashMap.1612" = type { %"class.WTF::HashMap.1615" }
%"class.WTF::HashMap.1615" = type { %"class.WTF::HashTable.1616" }
%"class.WTF::HashTable.1616" = type <{ %"struct.WTF::KeyValuePair.1618"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1618" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1627" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1619" }
%"class.blink::HeapObserverSet.1619" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1620" }
%"class.blink::HeapHashSet.1620" = type { %"class.WTF::HashSet.1623" }
%"class.WTF::HashSet.1623" = type { %"class.WTF::HashTable.1624" }
%"class.WTF::HashTable.1624" = type <{ %"class.blink::WeakMember.1626"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1626" = type opaque
%"class.blink::Supplementable.1627" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1628" }
%"class.blink::HeapHashMap.1628" = type { %"class.WTF::HashMap.1631" }
%"class.WTF::HashMap.1631" = type { %"class.WTF::HashTable.1632" }
%"class.WTF::HashTable.1632" = type <{ %"struct.WTF::KeyValuePair.1634"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1634" = type { i8*, %"class.blink::Member.2578" }
%"class.blink::Member.2578" = type { %"class.blink::MemberBase.2579" }
%"class.blink::MemberBase.2579" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2580" }
%"class.blink::Member.2580" = type { %"class.blink::MemberBase.2581" }
%"class.blink::MemberBase.2581" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1635, %"class.std::__1::unique_ptr.1636", %"class.std::__1::unique_ptr.1636", %"class.std::__1::unique_ptr.1642", %"class.std::__1::unique_ptr.1642", %"class.blink::Member.1006", i32, [4 x i8], %"class.WTF::HashSet.1648", i32, i32 }
%class.scoped_refptr.1635 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.2045", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.2047", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.2052 }
%"class.WTF::RefCounted.2045" = type { %"class.base::RefCounted.2046" }
%"class.base::RefCounted.2046" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.2047" = type { %"class.absl::optional_internal::optional_data.2048" }
%"class.absl::optional_internal::optional_data.2048" = type { %"class.absl::optional_internal::optional_data_base.2049" }
%"class.absl::optional_internal::optional_data_base.2049" = type { %"class.absl::optional_internal::optional_data_dtor_base.2050" }
%"class.absl::optional_internal::optional_data_dtor_base.2050" = type { i8, %union.anon.2051 }
%union.anon.2051 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.2052 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1636" = type { %"class.std::__1::__compressed_pair.1637" }
%"class.std::__1::__compressed_pair.1637" = type { %"struct.std::__1::__compressed_pair_elem.1638" }
%"struct.std::__1::__compressed_pair_elem.1638" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1642" = type { %"class.std::__1::__compressed_pair.1643" }
%"class.std::__1::__compressed_pair.1643" = type { %"struct.std::__1::__compressed_pair_elem.1644" }
%"struct.std::__1::__compressed_pair_elem.1644" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1648" = type { %"class.WTF::HashTable.1649" }
%"class.WTF::HashTable.1649" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1652" = type { %"class.blink::MemberBase.1653" }
%"class.blink::MemberBase.1653" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1654" = type { %"class.WTF::Vector.1657" }
%"class.WTF::Vector.1657" = type { %"class.WTF::VectorBuffer.1658" }
%"class.WTF::VectorBuffer.1658" = type { %"class.WTF::VectorBufferBase.1659" }
%"class.WTF::VectorBufferBase.1659" = type { %"class.blink::Member.1660"*, i32, i32 }
%"class.blink::Member.1660" = type opaque
%"class.blink::Member.1662" = type { %"class.blink::MemberBase.1663" }
%"class.blink::MemberBase.1663" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1664" = type { %"class.blink::MemberBase.1665" }
%"class.blink::MemberBase.1665" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1666", i32, i32 }
%"class.blink::HeapHashMap.1666" = type { %"class.WTF::HashMap.1669" }
%"class.WTF::HashMap.1669" = type { %"class.WTF::HashTable.1670" }
%"class.WTF::HashTable.1670" = type <{ %"struct.WTF::KeyValuePair.1672"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1672" = type opaque
%"class.std::__1::unique_ptr.1673" = type { %"class.std::__1::__compressed_pair.1674" }
%"class.std::__1::__compressed_pair.1674" = type { %"struct.std::__1::__compressed_pair_elem.1675" }
%"struct.std::__1::__compressed_pair_elem.1675" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.2257" }
%"class.std::__1::unique_ptr.2257" = type { %"class.std::__1::__compressed_pair.2258" }
%"class.std::__1::__compressed_pair.2258" = type { %"struct.std::__1::__compressed_pair_elem.2259" }
%"struct.std::__1::__compressed_pair_elem.2259" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.2260" }
%"class.WTF::Vector.2260" = type { %"class.WTF::VectorBuffer.2261" }
%"class.WTF::VectorBuffer.2261" = type { %"class.WTF::VectorBufferBase.2262" }
%"class.WTF::VectorBufferBase.2262" = type { %"class.mojo::StructPtr.2263"*, i32, i32 }
%"class.mojo::StructPtr.2263" = type { %"class.std::__1::unique_ptr.2264" }
%"class.std::__1::unique_ptr.2264" = type { %"class.std::__1::__compressed_pair.2265" }
%"class.std::__1::__compressed_pair.2265" = type { %"struct.std::__1::__compressed_pair_elem.2266" }
%"struct.std::__1::__compressed_pair_elem.2266" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.2267", %"class.WTF::HashMap.2274", %"class.WTF::HashMap.2279", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.630", i32, %"class.mojo::StructPtr.2284", %"class.WTF::Vector.630" }
%"class.mojo::StructPtr.2267" = type { %"class.std::__1::unique_ptr.2268" }
%"class.std::__1::unique_ptr.2268" = type { %"class.std::__1::__compressed_pair.2269" }
%"class.std::__1::__compressed_pair.2269" = type { %"struct.std::__1::__compressed_pair_elem.2270" }
%"struct.std::__1::__compressed_pair_elem.2270" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.2274" = type { %"class.WTF::HashTable.2275" }
%"class.WTF::HashTable.2275" = type <{ %"struct.WTF::KeyValuePair.2278"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2278" = type opaque
%"class.WTF::HashMap.2279" = type { %"class.WTF::HashTable.2280" }
%"class.WTF::HashTable.2280" = type <{ %"struct.WTF::KeyValuePair.2283"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2283" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.2284" = type { %"class.std::__1::unique_ptr.2285" }
%"class.std::__1::unique_ptr.2285" = type { %"class.std::__1::__compressed_pair.2286" }
%"class.std::__1::__compressed_pair.2286" = type { %"struct.std::__1::__compressed_pair_elem.2287" }
%"struct.std::__1::__compressed_pair_elem.2287" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.630", i8, i8, [6 x i8] }>
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2361" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.2299", i32 }>
%"class.std::__1::unique_ptr.2299" = type { %"class.std::__1::__compressed_pair.2300" }
%"class.std::__1::__compressed_pair.2300" = type { %"struct.std::__1::__compressed_pair_elem.2301" }
%"struct.std::__1::__compressed_pair_elem.2301" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.2302", %"class.absl::optional.2303", %"class.absl::optional.2308", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.2317", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map", %"class.std::__1::map.2347", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.2356", i8, %class.scoped_refptr.2313, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.2357" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.2302" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.2303" = type { %"class.absl::optional_internal::optional_data.2304" }
%"class.absl::optional_internal::optional_data.2304" = type { %"class.absl::optional_internal::optional_data_base.2305" }
%"class.absl::optional_internal::optional_data_base.2305" = type { %"class.absl::optional_internal::optional_data_dtor_base.2306" }
%"class.absl::optional_internal::optional_data_dtor_base.2306" = type { i8, %union.anon.2307 }
%union.anon.2307 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.2308" = type { %"class.absl::optional_internal::optional_data.2309" }
%"class.absl::optional_internal::optional_data.2309" = type { %"class.absl::optional_internal::optional_data_base.2310" }
%"class.absl::optional_internal::optional_data_base.2310" = type { %"class.absl::optional_internal::optional_data_dtor_base.2311" }
%"class.absl::optional_internal::optional_data_dtor_base.2311" = type { i8, %union.anon.2312 }
%union.anon.2312 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.2313, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.2314" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.2314" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.993 }
%class.scoped_refptr.993 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.2315 }
%class.scoped_refptr.2315 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2367", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.2313, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2367" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.2316 }
%class.scoped_refptr.2316 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.2317" = type { %"class.std::__1::__compressed_pair.2318" }
%"class.std::__1::__compressed_pair.2318" = type { %"struct.std::__1::__compressed_pair_elem.2319" }
%"struct.std::__1::__compressed_pair_elem.2319" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.2320", %class.scoped_refptr.2321 }
%"class.base::RepeatingCallback.2320" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2321 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2322", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2322" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.2326", %"class.std::__1::unique_ptr.2332", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.2338" }
%"class.std::__1::unique_ptr.2326" = type { %"class.std::__1::__compressed_pair.2327" }
%"class.std::__1::__compressed_pair.2327" = type { %"struct.std::__1::__compressed_pair_elem.2328" }
%"struct.std::__1::__compressed_pair_elem.2328" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.2332" = type { %"class.std::__1::__compressed_pair.2333" }
%"class.std::__1::__compressed_pair.2333" = type { %"struct.std::__1::__compressed_pair_elem.2334" }
%"struct.std::__1::__compressed_pair_elem.2334" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.2338" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2339", %"class.std::__1::__compressed_pair.2344" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2339" = type { %"struct.std::__1::__compressed_pair_elem.2340" }
%"struct.std::__1::__compressed_pair_elem.2340" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.2344" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.2347" = type { %"class.std::__1::__tree.2348" }
%"class.std::__1::__tree.2348" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2349", %"class.std::__1::__compressed_pair.2353" }
%"class.std::__1::__compressed_pair.2349" = type { %"struct.std::__1::__compressed_pair_elem.2340" }
%"class.std::__1::__compressed_pair.2353" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::OnceCallback.2356" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.2313 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.779" }>
%"class.base::RefCountedThreadSafe.779" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.2357" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.2361" = type { %"class.std::__1::__compressed_pair.2362" }
%"class.std::__1::__compressed_pair.2362" = type { %"struct.std::__1::__compressed_pair_elem.2363" }
%"struct.std::__1::__compressed_pair_elem.2363" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1679" = type { %"class.blink::MemberBase.1680" }
%"class.blink::MemberBase.1680" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1681" = type { %"class.blink::MemberBase.1682" }
%"class.blink::MemberBase.1682" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.1008" = type { %"class.blink::MemberBase.1009" }
%"class.blink::MemberBase.1009" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1010" = type { %"class.blink::MemberBase.1011" }
%"class.blink::MemberBase.1011" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1012" = type { %"class.blink::MemberBase.1013" }
%"class.blink::MemberBase.1013" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1014" = type { %"class.blink::MemberBase.1015" }
%"class.blink::MemberBase.1015" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1022" = type { %"class.std::__1::__compressed_pair.1023" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1016" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1016" = type { %"class.std::__1::__compressed_pair.1017" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.1018" }
%"struct.std::__1::__compressed_pair_elem.1018" = type { %"class.blink::KURL"* }
%"class.blink::Member.1028" = type { %"class.blink::MemberBase.1029" }
%"class.blink::MemberBase.1029" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1030" = type { %"class.blink::MemberBase.1031" }
%"class.blink::MemberBase.1031" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1032 }
%class.scoped_refptr.1032 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1033" = type { %"class.WTF::VectorBuffer.1034" }
%"class.WTF::VectorBuffer.1034" = type { %"class.WTF::VectorBufferBase.1035" }
%"class.WTF::VectorBufferBase.1035" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1036 }
%class.scoped_refptr.1036 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1037", i32, i32, %"class.blink::Persistent.1039" }
%"class.WTF::RefCounted.1037" = type { %"class.base::RefCounted.1038" }
%"class.base::RefCounted.1038" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1039" = type { %"class.blink::PersistentBase.1040" }
%"class.blink::PersistentBase.1040" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1043" }
%"class.blink::HeapHashMap.1043" = type { %"class.WTF::HashMap.1046" }
%"class.WTF::HashMap.1046" = type { %"class.WTF::HashTable.1047" }
%"class.WTF::HashTable.1047" = type <{ %"struct.WTF::KeyValuePair.1049"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1049" = type { %"class.blink::WeakMember.1050", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.1056" = type { %"class.blink::MemberBase.1057" }
%"class.blink::MemberBase.1057" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1058" }
%"class.blink::HeapHashMap.1058" = type { %"class.WTF::HashMap.1061" }
%"class.WTF::HashMap.1061" = type { %"class.WTF::HashTable.1062" }
%"class.WTF::HashTable.1062" = type <{ %"struct.WTF::KeyValuePair.1064"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1064" = type opaque
%"class.blink::Member.1065" = type { %"class.blink::MemberBase.1066" }
%"class.blink::MemberBase.1066" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1067" = type { %"class.WTF::HashSet.1070" }
%"class.WTF::HashSet.1070" = type { %"class.WTF::HashTable.1071" }
%"class.WTF::HashTable.1071" = type <{ %"class.blink::WeakMember.1073"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1073" = type opaque
%"class.blink::HeapHashSet.1074" = type { %"class.WTF::HashSet.1077" }
%"class.WTF::HashSet.1077" = type { %"class.WTF::HashTable.1078" }
%"class.WTF::HashTable.1078" = type <{ %"class.blink::WeakMember.1080"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1080" = type opaque
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.1087", %"class.blink::Member.1114", %"class.blink::HeapHashMap.1116", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1123", %"class.blink::HeapHashSet.1123", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1129", %"class.blink::Member.1141", %"class.blink::Member.1170", %"class.blink::Member.1172", %"class.blink::Member.1178", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1340", %"class.blink::Member.1346", %"class.blink::HeapHashMap.1348", %"class.blink::HeapHashMap.1355", %"class.std::__1::unique_ptr.1362", i32, %"class.blink::HeapVector.1368", %"class.blink::HeapVector.1368", %"class.blink::HeapVector.1099", %"class.blink::HeapHashSet.1376", %"class.blink::HeapHashMap.1383", %"class.blink::Member.1390", %"class.blink::HeapHashMap.1392", %class.scoped_refptr.1399, %class.scoped_refptr.259, %"class.blink::Member.1304", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1400", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1091", %"class.blink::HeapVector.1099", i8 }>
%"class.blink::HeapVector.1091" = type { %"class.WTF::Vector.1094" }
%"class.WTF::Vector.1094" = type { %"class.WTF::VectorBuffer.1095" }
%"class.WTF::VectorBuffer.1095" = type { %"class.WTF::VectorBufferBase.1096" }
%"class.WTF::VectorBufferBase.1096" = type { %"class.blink::Member.1097"*, i32, i32 }
%"class.blink::Member.1097" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1110", %"class.blink::Member.1112", %"class.blink::Member.1112", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1110" = type <{ %"class.blink::Member.1112"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1112" = type { %"class.blink::MemberBase.1113" }
%"class.blink::MemberBase.1113" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1112", %"class.blink::Member.1112" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1114" = type { %"class.blink::MemberBase.1115" }
%"class.blink::MemberBase.1115" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1116" = type { %"class.WTF::HashMap.1119" }
%"class.WTF::HashMap.1119" = type { %"class.WTF::HashTable.1120" }
%"class.WTF::HashTable.1120" = type <{ %"struct.WTF::KeyValuePair.1122"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1122" = type opaque
%"class.blink::HeapHashSet.1123" = type { %"class.WTF::HashSet.1126" }
%"class.WTF::HashSet.1126" = type { %"class.WTF::HashTable.1127" }
%"class.WTF::HashTable.1127" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1129" = type { %"class.blink::MemberBase.1130" }
%"class.blink::MemberBase.1130" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1131", %"class.blink::Member.1133" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1131" = type { %"class.blink::MemberBase.1132" }
%"class.blink::MemberBase.1132" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1133" = type { %"class.blink::MemberBase.1134" }
%"class.blink::MemberBase.1134" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1137", %"class.blink::Member.1139" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1137" = type { %"class.blink::MemberBase.1138" }
%"class.blink::MemberBase.1138" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1139" = type { %"class.blink::MemberBase.1140" }
%"class.blink::MemberBase.1140" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1602", %"class.blink::Member.1133", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.911] }
%"class.blink::HeapVector.1602" = type { %"class.WTF::Vector.1605" }
%"class.WTF::Vector.1605" = type { %"class.WTF::VectorBuffer.1606" }
%"class.WTF::VectorBuffer.1606" = type { %"class.WTF::VectorBufferBase.1607" }
%"class.WTF::VectorBufferBase.1607" = type { %"class.blink::Member.1139"*, i32, i32 }
%class.sk_sp.911 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.912, i32, %"class.absl::optional.913", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.sk_sp.912 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.913" = type { %"class.absl::optional_internal::optional_data.914" }
%"class.absl::optional_internal::optional_data.914" = type { %"class.absl::optional_internal::optional_data_base.915" }
%"class.absl::optional_internal::optional_data_base.915" = type { %"class.absl::optional_internal::optional_data_dtor_base.916" }
%"class.absl::optional_internal::optional_data_dtor_base.916" = type { i8, %union.anon.917 }
%union.anon.917 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1141" = type { %"class.blink::MemberBase.1142" }
%"class.blink::MemberBase.1142" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1114", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1145" }
%"class.blink::HeapHashMap.1145" = type { %"class.WTF::HashMap.1148" }
%"class.WTF::HashMap.1148" = type { %"class.WTF::HashTable.1149" }
%"class.WTF::HashTable.1149" = type <{ %"struct.WTF::KeyValuePair.1151"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1151" = type opaque
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1690", [4 x i8] }>
%"class.WTF::RefCounted.1690" = type { %"class.base::RefCounted.1691" }
%"class.base::RefCounted.1691" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2368" }
%"class.WTF::Vector.2368" = type { %"class.WTF::VectorBuffer.2369" }
%"class.WTF::VectorBuffer.2369" = type { %"class.WTF::VectorBufferBase.2370" }
%"class.WTF::VectorBufferBase.2370" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2072", %"class.absl::optional.2072", %"class.absl::optional.2072" }
%"class.absl::optional.2072" = type { %"class.absl::optional_internal::optional_data.2073" }
%"class.absl::optional_internal::optional_data.2073" = type { %"class.absl::optional_internal::optional_data_base.2074" }
%"class.absl::optional_internal::optional_data_base.2074" = type { %"class.absl::optional_internal::optional_data_dtor_base.2075" }
%"class.absl::optional_internal::optional_data_dtor_base.2075" = type { i8, %union.anon.2076 }
%union.anon.2076 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2582 }
%class.scoped_refptr.2582 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2583", %"class.WTF::Vector.630", %"class.WTF::Vector.2585", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2583" = type { %"class.base::RefCounted.2584" }
%"class.base::RefCounted.2584" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2585" = type { %"class.WTF::VectorBuffer.2586" }
%"class.WTF::VectorBuffer.2586" = type { %"class.WTF::VectorBufferBase.2587" }
%"class.WTF::VectorBufferBase.2587" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2588 }
%union.anon.2588 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.995", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.995" = type { %"class.base::RefCounted.996" }
%"class.base::RefCounted.996" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2592" }
%"class.WTF::VectorBuffer.2592" = type { %"class.WTF::VectorBufferBase.2593", [32 x i8] }
%"class.WTF::VectorBufferBase.2593" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1152", %"class.std::__1::unique_ptr.1164" }
%"class.blink::HeapVector.1152" = type { %"class.WTF::Vector.1155" }
%"class.WTF::Vector.1155" = type { %"class.WTF::VectorBuffer.1156" }
%"class.WTF::VectorBuffer.1156" = type { %"class.WTF::VectorBufferBase.1157" }
%"class.WTF::VectorBufferBase.1157" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1158" }
%"class.WTF::Vector.1158" = type { %"class.WTF::VectorBuffer.1159" }
%"class.WTF::VectorBuffer.1159" = type { %"class.WTF::VectorBufferBase.1160", [16 x i8] }
%"class.WTF::VectorBufferBase.1160" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1164" = type { %"class.std::__1::__compressed_pair.1165" }
%"class.std::__1::__compressed_pair.1165" = type { %"struct.std::__1::__compressed_pair_elem.1166" }
%"struct.std::__1::__compressed_pair_elem.1166" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1170" = type { %"class.blink::MemberBase.1171" }
%"class.blink::MemberBase.1171" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1173" }
%"class.blink::MemberBase.1173" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1176", i8, [7 x i8] }>
%"class.blink::Member.1176" = type { %"class.blink::MemberBase.1177" }
%"class.blink::MemberBase.1177" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1178" = type { %"class.blink::MemberBase.1179" }
%"class.blink::MemberBase.1179" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1200", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1182", %"class.WTF::HashMap.1182", %"class.WTF::HashMap.1182", %"class.WTF::HashMap.1187", %class.scoped_refptr.1192, %class.scoped_refptr.1199, %class.scoped_refptr.1198, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1182" = type { %"class.WTF::HashTable.1183" }
%"class.WTF::HashTable.1183" = type <{ %"struct.WTF::KeyValuePair.1186"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1186" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2596 }
%class.scoped_refptr.2596 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1193", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1195", %"union.blink::InvalidationSet::Backing.1196", %"union.blink::InvalidationSet::Backing.1197", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1193" = type { %"class.base::RefCounted.1194" }
%"class.base::RefCounted.1194" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1195" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1196" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1197" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1187" = type { %"class.WTF::HashTable.1188" }
%"class.WTF::HashTable.1188" = type <{ %"struct.WTF::KeyValuePair.1191"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1191" = type opaque
%class.scoped_refptr.1192 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1198, %class.scoped_refptr.1198 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1193", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1195", %"union.blink::InvalidationSet::Backing.1196", %"union.blink::InvalidationSet::Backing.1197", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1199 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1198 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1204", %"class.blink::HeapHashMap.1204", %"class.blink::HeapHashMap.1204", %"class.blink::HeapHashMap.1204", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1247", %"class.blink::HeapVector.1255", %"class.blink::HeapVector.1263", %"class.blink::HeapVector.1280", %"class.blink::HeapVector.1288", %"class.blink::HeapVector.1296", %"class.blink::HeapVector.1309", %"class.WTF::Vector.1316", i32, %"class.blink::Member.1322" }
%"class.blink::HeapHashMap.1204" = type { %"class.WTF::HashMap.1207" }
%"class.WTF::HashMap.1207" = type { %"class.WTF::HashTable.1208" }
%"class.WTF::HashTable.1208" = type <{ %"struct.WTF::KeyValuePair.1210"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1210" = type { %"class.WTF::AtomicString", %"class.blink::Member.2606" }
%"class.blink::Member.2606" = type { %"class.blink::MemberBase.2607" }
%"class.blink::MemberBase.2607" = type { %"class.blink::HeapVector.1211"* }
%"class.blink::HeapVector.1211" = type { %"class.WTF::Vector.1214" }
%"class.WTF::Vector.1214" = type { %"class.WTF::VectorBuffer.1215" }
%"class.WTF::VectorBuffer.1215" = type { %"class.WTF::VectorBufferBase.1216" }
%"class.WTF::VectorBufferBase.1216" = type { %"class.blink::Member.1217"*, i32, i32 }
%"class.blink::Member.1217" = type { %"class.blink::MemberBase.1218" }
%"class.blink::MemberBase.1218" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1221", i64, [4 x i32] }
%"class.blink::Member.1221" = type { %"class.blink::MemberBase.1222" }
%"class.blink::MemberBase.1222" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1242" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1242" = type { %"class.blink::MemberBase.1243" }
%"class.blink::MemberBase.1243" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1247" = type { %"class.WTF::Vector.1250" }
%"class.WTF::Vector.1250" = type { %"class.WTF::VectorBuffer.1251" }
%"class.WTF::VectorBuffer.1251" = type { %"class.WTF::VectorBufferBase.1252" }
%"class.WTF::VectorBufferBase.1252" = type { %"class.blink::Member.1253"*, i32, i32 }
%"class.blink::Member.1253" = type { %"class.blink::MemberBase.2602" }
%"class.blink::MemberBase.2602" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1255" = type { %"class.WTF::Vector.1258" }
%"class.WTF::Vector.1258" = type { %"class.WTF::VectorBuffer.1259" }
%"class.WTF::VectorBuffer.1259" = type { %"class.WTF::VectorBufferBase.1260" }
%"class.WTF::VectorBufferBase.1260" = type { %"class.blink::Member.1261"*, i32, i32 }
%"class.blink::Member.1261" = type { %"class.blink::MemberBase.2603" }
%"class.blink::MemberBase.2603" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1263" = type { %"class.WTF::Vector.1266" }
%"class.WTF::Vector.1266" = type { %"class.WTF::VectorBuffer.1267" }
%"class.WTF::VectorBuffer.1267" = type { %"class.WTF::VectorBufferBase.1268" }
%"class.WTF::VectorBufferBase.1268" = type { %"class.blink::Member.1269"*, i32, i32 }
%"class.blink::Member.1269" = type { %"class.blink::MemberBase.1270" }
%"class.blink::MemberBase.1270" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1271", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1271" = type { %"class.WTF::Vector.1274" }
%"class.WTF::Vector.1274" = type { %"class.WTF::VectorBuffer.1275" }
%"class.WTF::VectorBuffer.1275" = type { %"class.WTF::VectorBufferBase.1276" }
%"class.WTF::VectorBufferBase.1276" = type { %"class.blink::Member.1277"*, i32, i32 }
%"class.blink::Member.1277" = type opaque
%"class.blink::HeapVector.1280" = type { %"class.WTF::Vector.1283" }
%"class.WTF::Vector.1283" = type { %"class.WTF::VectorBuffer.1284" }
%"class.WTF::VectorBuffer.1284" = type { %"class.WTF::VectorBufferBase.1285" }
%"class.WTF::VectorBufferBase.1285" = type { %"class.blink::Member.1286"*, i32, i32 }
%"class.blink::Member.1286" = type { %"class.blink::MemberBase.2604" }
%"class.blink::MemberBase.2604" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1288" = type { %"class.WTF::Vector.1291" }
%"class.WTF::Vector.1291" = type { %"class.WTF::VectorBuffer.1292" }
%"class.WTF::VectorBuffer.1292" = type { %"class.WTF::VectorBufferBase.1293" }
%"class.WTF::VectorBufferBase.1293" = type { %"class.blink::Member.1294"*, i32, i32 }
%"class.blink::Member.1294" = type { %"class.blink::MemberBase.2605" }
%"class.blink::MemberBase.2605" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", i32, [4 x i8] }>
%"class.blink::HeapVector.1296" = type { %"class.WTF::Vector.1299" }
%"class.WTF::Vector.1299" = type { %"class.WTF::VectorBuffer.1300" }
%"class.WTF::VectorBuffer.1300" = type { %"class.WTF::VectorBufferBase.1301" }
%"class.WTF::VectorBufferBase.1301" = type { %"class.blink::Member.1302"*, i32, i32 }
%"class.blink::Member.1302" = type { %"class.blink::MemberBase.1303" }
%"class.blink::MemberBase.1303" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304" }
%"class.blink::HeapVector.1309" = type { %"class.WTF::Vector.1312" }
%"class.WTF::Vector.1312" = type { %"class.WTF::VectorBuffer.1313" }
%"class.WTF::VectorBuffer.1313" = type { %"class.WTF::VectorBufferBase.1314" }
%"class.WTF::VectorBufferBase.1314" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1221", i32, i32 }
%"class.WTF::Vector.1316" = type { %"class.WTF::VectorBuffer.1317" }
%"class.WTF::VectorBuffer.1317" = type { %"class.WTF::VectorBufferBase.1318" }
%"class.WTF::VectorBufferBase.1318" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1319, i8, [7 x i8] }>
%class.scoped_refptr.1319 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1326", %"class.blink::HeapHashMap.1326", %"class.blink::HeapHashMap.1326", %"class.blink::HeapHashMap.1326" }
%"class.blink::HeapHashMap.1326" = type { %"class.WTF::HashMap.1329" }
%"class.WTF::HashMap.1329" = type { %"class.WTF::HashTable.1330" }
%"class.WTF::HashTable.1330" = type <{ %"struct.WTF::KeyValuePair.1332"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1332" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1333" }
%"class.blink::HeapHashMap.1333" = type { %"class.WTF::HashMap.1336" }
%"class.WTF::HashMap.1336" = type { %"class.WTF::HashTable.1337" }
%"class.WTF::HashTable.1337" = type <{ %"struct.WTF::KeyValuePair.1339"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1339" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2597", %"class.WTF::Vector.2597" }
%"class.WTF::Vector.2597" = type { %"class.WTF::VectorBuffer.2598" }
%"class.WTF::VectorBuffer.2598" = type { %"class.WTF::VectorBufferBase.2599" }
%"class.WTF::VectorBufferBase.2599" = type { %class.scoped_refptr.2596*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1340" = type { %"class.WTF::HashSet.1343" }
%"class.WTF::HashSet.1343" = type { %"class.WTF::HashTable.1344" }
%"class.WTF::HashTable.1344" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1346" = type { %"class.blink::MemberBase.1347" }
%"class.blink::MemberBase.1347" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1348" = type { %"class.WTF::HashMap.1351" }
%"class.WTF::HashMap.1351" = type { %"class.WTF::HashTable.1352" }
%"class.WTF::HashTable.1352" = type <{ %"struct.WTF::KeyValuePair.1354"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1354" = type opaque
%"class.blink::HeapHashMap.1355" = type { %"class.WTF::HashMap.1358" }
%"class.WTF::HashMap.1358" = type { %"class.WTF::HashTable.1359" }
%"class.WTF::HashTable.1359" = type <{ %"struct.WTF::KeyValuePair.1361"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1361" = type opaque
%"class.std::__1::unique_ptr.1362" = type { %"class.std::__1::__compressed_pair.1363" }
%"class.std::__1::__compressed_pair.1363" = type { %"struct.std::__1::__compressed_pair_elem.1364" }
%"struct.std::__1::__compressed_pair_elem.1364" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1368" = type { %"class.WTF::Vector.1371" }
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.std::__1::pair.1374"*, i32, i32 }
%"struct.std::__1::pair.1374" = type opaque
%"class.blink::HeapVector.1099" = type { %"class.WTF::Vector.1102" }
%"class.WTF::Vector.1102" = type { %"class.WTF::VectorBuffer.1103" }
%"class.WTF::VectorBuffer.1103" = type { %"class.WTF::VectorBufferBase.1104" }
%"class.WTF::VectorBufferBase.1104" = type { %"struct.std::__1::pair.1105"*, i32, i32 }
%"struct.std::__1::pair.1105" = type opaque
%"class.blink::HeapHashSet.1376" = type { %"class.WTF::HashSet.1379" }
%"class.WTF::HashSet.1379" = type { %"class.WTF::HashTable.1380" }
%"class.WTF::HashTable.1380" = type <{ %"class.blink::WeakMember.1382"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1382" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1383" = type { %"class.WTF::HashMap.1386" }
%"class.WTF::HashMap.1386" = type { %"class.WTF::HashTable.1387" }
%"class.WTF::HashTable.1387" = type <{ %"struct.WTF::KeyValuePair.1389"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1389" = type { %"class.WTF::AtomicString", %"class.blink::Member.1269" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1392" = type { %"class.WTF::HashMap.1395" }
%"class.WTF::HashMap.1395" = type { %"class.WTF::HashTable.1396" }
%"class.WTF::HashTable.1396" = type <{ %"struct.WTF::KeyValuePair.1398"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1398" = type opaque
%class.scoped_refptr.1399 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.1304" = type { %"class.blink::MemberBase.1305" }
%"class.blink::MemberBase.1305" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1400" = type { %"class.WTF::HashSet.1403" }
%"class.WTF::HashSet.1403" = type { %"class.WTF::HashTable.1404" }
%"class.WTF::HashTable.1404" = type <{ %"class.blink::Member.1406"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1406" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1413" = type { %"class.WTF::HashMap.1416" }
%"class.WTF::HashMap.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"struct.WTF::KeyValuePair.1419"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1419" = type opaque
%"class.WTF::Vector.1420" = type { %"class.WTF::VectorBuffer.1421" }
%"class.WTF::VectorBuffer.1421" = type { %"class.WTF::VectorBufferBase.1422" }
%"class.WTF::VectorBufferBase.1422" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1425" = type { %"class.blink::MemberBase.1426" }
%"class.blink::MemberBase.1426" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1427" = type { %"class.blink::MemberBase.1428" }
%"class.blink::MemberBase.1428" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1429" = type { %"class.blink::MemberBase.1430" }
%"class.blink::MemberBase.1430" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1431" = type { %"class.WTF::Vector.1434" }
%"class.WTF::Vector.1434" = type { %"class.WTF::VectorBuffer.1435" }
%"class.WTF::VectorBuffer.1435" = type { %"class.WTF::VectorBufferBase.1436" }
%"class.WTF::VectorBufferBase.1436" = type { %"class.blink::Member.1437"*, i32, i32 }
%"class.blink::Member.1437" = type opaque
%"class.std::__1::unique_ptr.1439" = type { %"class.std::__1::__compressed_pair.1440" }
%"class.std::__1::__compressed_pair.1440" = type { %"struct.std::__1::__compressed_pair_elem.1441" }
%"struct.std::__1::__compressed_pair_elem.1441" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1445" = type { %"class.WTF::HashSet.1448" }
%"class.WTF::HashSet.1448" = type { %"class.WTF::HashTable.1449" }
%"class.WTF::HashTable.1449" = type <{ %"class.blink::WeakMember.1451"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1451" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1452", i32, [4 x i8] }>
%"class.WTF::Vector.1452" = type { %"class.WTF::VectorBuffer.1453" }
%"class.WTF::VectorBuffer.1453" = type { %"class.WTF::VectorBufferBase.1454" }
%"class.WTF::VectorBufferBase.1454" = type { %"struct.std::__1::pair.1455"*, i32, i32 }
%"struct.std::__1::pair.1455" = type opaque
%"class.blink::Member.1458" = type { %"class.blink::MemberBase.1459" }
%"class.blink::MemberBase.1459" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1460" = type { %"class.WTF::VectorBuffer.1461" }
%"class.WTF::VectorBuffer.1461" = type { %"class.WTF::VectorBufferBase.1462" }
%"class.WTF::VectorBufferBase.1462" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1465" = type { %"class.std::__1::__compressed_pair.1466" }
%"class.std::__1::__compressed_pair.1466" = type { %"struct.std::__1::__compressed_pair_elem.1467" }
%"struct.std::__1::__compressed_pair_elem.1467" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type { %"class.blink::LayoutBlockFlow", %"class.blink::UntracedMember.1797", %"class.blink::LayoutUnit", %"class.blink::LayoutState"*, %"class.std::__1::unique_ptr.2010", %"class.std::__1::unique_ptr.2016", %"class.std::__1::unique_ptr.2022", %class.scoped_refptr.1793, %"class.blink::LayoutQuote"*, i32, i32, i8, i32, i32, %"class.blink::Persistent.2028", i32, i32, %"struct.blink::PhysicalRect" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1756", %"class.std::__1::unique_ptr.1766" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1712, %"class.WTF::Vector.1713", %"class.std::__1::unique_ptr.1718", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1739, %"class.blink::Persistent.1740" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.860", %"class.std::__1::unique_ptr.971", i8, %"class.absl::optional.977", %class.scoped_refptr.953, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.982" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.753", %"class.blink::Persistent.759", %"class.std::__1::unique_ptr.819", %"class.blink::CullRect", %"class.std::__1::unique_ptr.835" }
%"class.std::__1::unique_ptr.753" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.759" = type { %"class.blink::PersistentBase.760" }
%"class.blink::PersistentBase.760" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.786", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.814" }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.763", %"class.blink::Member.765", %"class.blink::Member.767", %"class.blink::Member.769", %"class.WTF::Vector.771", i16, %class.scoped_refptr.778 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.763" = type { %"class.blink::MemberBase.764" }
%"class.blink::MemberBase.764" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.765" = type { %"class.blink::MemberBase.766" }
%"class.blink::MemberBase.766" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.767" = type { %"class.blink::MemberBase.768" }
%"class.blink::MemberBase.768" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.769" = type { %"class.blink::MemberBase.770" }
%"class.blink::MemberBase.770" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%class.scoped_refptr.778 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.780", %"class.blink::Member.782", %"class.blink::Member.782", i8, [7 x i8] }>
%"class.blink::Member.780" = type { %"class.blink::MemberBase.781" }
%"class.blink::MemberBase.781" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::Member.782" = type { %"class.blink::MemberBase.783" }
%"class.blink::MemberBase.783" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.784", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.784" = type { %"class.blink::MemberBase.785" }
%"class.blink::MemberBase.785" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.994", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.778, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.994" = type { %"class.blink::MemberBase.783" }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.784", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.786" = type { %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.789", %"class.absl::optional.794", i8, i8, %"class.WTF::Vector.804" }
%"class.WTF::HashMap.789" = type { %"class.WTF::HashTable.790" }
%"class.WTF::HashTable.790" = type <{ %"struct.WTF::KeyValuePair.793"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.793" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.absl::optional.794" = type { %"class.absl::optional_internal::optional_data.795" }
%"class.absl::optional_internal::optional_data.795" = type { %"class.absl::optional_internal::optional_data_base.796" }
%"class.absl::optional_internal::optional_data_base.796" = type { %"class.absl::optional_internal::optional_data_dtor_base.797" }
%"class.absl::optional_internal::optional_data_dtor_base.797" = type { i8, %union.anon.798 }
%union.anon.798 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.799" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.800" }
%"struct.std::__1::__compressed_pair_elem.800" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.WTF::Vector.804" = type { %"class.WTF::VectorBuffer.805" }
%"class.WTF::VectorBuffer.805" = type { %"class.WTF::VectorBufferBase.806" }
%"class.WTF::VectorBufferBase.806" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.812" }
%"class.blink::Member.812" = type { %"class.blink::MemberBase.813" }
%"class.blink::MemberBase.813" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.812" }
%"class.absl::optional.814" = type { %"class.absl::optional_internal::optional_data.815" }
%"class.absl::optional_internal::optional_data.815" = type { %"class.absl::optional_internal::optional_data_base.816" }
%"class.absl::optional_internal::optional_data_base.816" = type { %"class.absl::optional_internal::optional_data_dtor_base.817" }
%"class.absl::optional_internal::optional_data_dtor_base.817" = type { i8, %union.anon.818 }
%union.anon.818 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.std::__1::unique_ptr.819" = type { %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.822", %"class.WTF::Vector.822", %"class.WTF::HashMap.827", %"class.WTF::Vector.822", i8, [7 x i8] }>
%"class.WTF::HashMap.827" = type { %"class.WTF::HashTable.828" }
%"class.WTF::HashTable.828" = type <{ %"struct.WTF::KeyValuePair.831"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.831" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.822" }
%"class.WTF::Vector.822" = type { %"class.WTF::VectorBuffer.823" }
%"class.WTF::VectorBuffer.823" = type { %"class.WTF::VectorBufferBase.824" }
%"class.WTF::VectorBufferBase.824" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.std::__1::unique_ptr.835" = type { %"class.std::__1::__compressed_pair.836" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.837" }
%"struct.std::__1::__compressed_pair_elem.837" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.838", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.844", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.850", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.838" = type { %"class.std::__1::__compressed_pair.839" }
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"class.blink::TransformationMatrix"* }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.std::__1::unique_ptr.844" = type { %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type opaque
%"class.blink::Persistent.850" = type { %"class.blink::PersistentBase.851" }
%"class.blink::PersistentBase.851" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.860" = type { %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.898, %class.scoped_refptr.902, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.943, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.967 }
%class.scoped_refptr.863 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.880" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.864", i8, i8, %class.scoped_refptr.866, i32, i32 }
%"class.WTF::RefCounted.864" = type { %"class.base::RefCounted.865" }
%"class.base::RefCounted.865" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.866 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.873, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.874", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.867" }
%"class.std::__1::unique_ptr.867" = type { %"class.std::__1::__compressed_pair.868" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.869" }
%"struct.std::__1::__compressed_pair_elem.869" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.899", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.899" = type { %"class.WTF::RefCounted.900", i8, i8, %class.scoped_refptr.873, i32, i32 }
%"class.WTF::RefCounted.900" = type { %"class.base::RefCounted.901" }
%"class.base::RefCounted.901" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.794" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.874" = type { %"class.std::__1::__compressed_pair.875" }
%"class.std::__1::__compressed_pair.875" = type { %"struct.std::__1::__compressed_pair_elem.876" }
%"struct.std::__1::__compressed_pair_elem.876" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::unique_ptr.880" = type { %"class.std::__1::__compressed_pair.881" }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.883", %"class.std::__1::unique_ptr.889", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.889" = type { %"class.std::__1::__compressed_pair.890" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.891" }
%"struct.std::__1::__compressed_pair_elem.891" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.898 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.902 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.903 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.904" }
%"class.blink::PaintPropertyNode.904" = type { %"class.WTF::RefCounted.905", i8, i8, %class.scoped_refptr.907, i32, i32 }
%"class.WTF::RefCounted.905" = type { %"class.base::RefCounted.906" }
%"class.base::RefCounted.906" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.907 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.866, %class.scoped_refptr.908, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.930", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.908 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.945" }
%"class.blink::PaintPropertyNode.945" = type { %"class.WTF::RefCounted.946", i8, i8, %class.scoped_refptr.908, i32, i32 }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.909" }
%"class.std::__1::vector.909" = type { %"class.std::__1::__vector_base.910" }
%"class.std::__1::__vector_base.910" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.925" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.911, [20 x float], i32, [4 x i8], %"class.std::__1::vector.918", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.918" = type { %"class.std::__1::__vector_base.919" }
%"class.std::__1::__vector_base.919" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.920" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921" }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.936" }
%"class.std::__1::vector.936" = type { %"class.std::__1::__vector_base.937" }
%"class.std::__1::__vector_base.937" = type { i32*, i32*, %"class.std::__1::__compressed_pair.938" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.939" }
%"struct.std::__1::__compressed_pair_elem.939" = type { i32* }
%class.scoped_refptr.943 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.944 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.956" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.866, %"class.absl::optional.948", %class.scoped_refptr.953, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.948" = type { %"class.absl::optional_internal::optional_data.949" }
%"class.absl::optional_internal::optional_data.949" = type { %"class.absl::optional_internal::optional_data_base.950" }
%"class.absl::optional_internal::optional_data_base.950" = type { %"class.absl::optional_internal::optional_data_dtor_base.951" }
%"class.absl::optional_internal::optional_data_dtor_base.951" = type { i8, [3 x i8], %union.anon.952 }
%union.anon.952 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.956" = type { %"class.std::__1::__compressed_pair.957" }
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.959", i32, [4 x i8] }>
%"class.WTF::Vector.959" = type { %"class.WTF::VectorBuffer.960" }
%"class.WTF::VectorBuffer.960" = type { %"class.WTF::VectorBufferBase.961" }
%"class.WTF::VectorBufferBase.961" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.967 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.971" = type { %"class.std::__1::__compressed_pair.972" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.866, %class.scoped_refptr.908, %class.scoped_refptr.907 }
%"class.absl::optional.977" = type { %"class.absl::optional_internal::optional_data.978" }
%"class.absl::optional_internal::optional_data.978" = type { %"class.absl::optional_internal::optional_data_base.979" }
%"class.absl::optional_internal::optional_data_base.979" = type { %"class.absl::optional_internal::optional_data_dtor_base.980" }
%"class.absl::optional_internal::optional_data_dtor_base.980" = type { i8, %union.anon.981 }
%union.anon.981 = type { %"class.blink::IntRect" }
%class.scoped_refptr.953 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.954", [4 x i8] }
%"class.WTF::RefCounted.954" = type { %"class.base::RefCounted.955" }
%"class.base::RefCounted.955" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.982" = type { %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1712 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.2063", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.2210, %union.anon.2228, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.2063" = type { %"class.base::RefCounted.2064" }
%"class.base::RefCounted.2064" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.2065, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.2065 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.2066 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.2066 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.2100 }
%class.scoped_refptr.2100 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.2101", [4 x i8], %"class.std::__1::unique_ptr.2103", i64, %"class.WTF::Vector.2107", %"class.WTF::Vector.2112", %"class.WTF::Vector.2118", %"class.WTF::Vector.2136", %class.scoped_refptr.1635, %"class.WTF::HashMap.2142", %"class.WTF::Vector.2147", %"class.WTF::Vector.2107", %"class.WTF::Vector.2152", %"class.WTF::HashMap.2157", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.2101" = type { %"class.base::RefCountedThreadSafe.2102" }
%"class.base::RefCountedThreadSafe.2102" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.2103" = type { %"class.std::__1::__compressed_pair.2104" }
%"class.std::__1::__compressed_pair.2104" = type { %"struct.std::__1::__compressed_pair_elem.2105" }
%"struct.std::__1::__compressed_pair_elem.2105" = type { i8* }
%"class.WTF::Vector.2112" = type { %"class.WTF::VectorBuffer.2113" }
%"class.WTF::VectorBuffer.2113" = type { %"class.WTF::VectorBufferBase.2114", [8 x i8] }
%"class.WTF::VectorBufferBase.2114" = type { %class.scoped_refptr.2115*, i32, i32 }
%class.scoped_refptr.2115 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.2118" = type { %"class.WTF::VectorBuffer.2119" }
%"class.WTF::VectorBuffer.2119" = type { %"class.WTF::VectorBufferBase.2120" }
%"class.WTF::VectorBufferBase.2120" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.2122", %"class.std::__1::unique_ptr.2128" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.2121 }
%class.scoped_refptr.2121 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.2122" = type { %"class.std::__1::__compressed_pair.2123" }
%"class.std::__1::__compressed_pair.2123" = type { %"struct.std::__1::__compressed_pair_elem.2124" }
%"struct.std::__1::__compressed_pair_elem.2124" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2128" = type { %"class.std::__1::__compressed_pair.2129" }
%"class.std::__1::__compressed_pair.2129" = type { %"struct.std::__1::__compressed_pair_elem.2130" }
%"struct.std::__1::__compressed_pair_elem.2130" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.2136" = type { %"class.WTF::VectorBuffer.2137" }
%"class.WTF::VectorBuffer.2137" = type { %"class.WTF::VectorBufferBase.2138" }
%"class.WTF::VectorBufferBase.2138" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.2139", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.2139" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.2142" = type { %"class.WTF::HashTable.2143" }
%"class.WTF::HashTable.2143" = type <{ %"struct.WTF::KeyValuePair.2146"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2146" = type opaque
%"class.WTF::Vector.2147" = type { %"class.WTF::VectorBuffer.2148" }
%"class.WTF::VectorBuffer.2148" = type { %"class.WTF::VectorBufferBase.2149" }
%"class.WTF::VectorBufferBase.2149" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.2107" = type { %"class.WTF::VectorBuffer.2108" }
%"class.WTF::VectorBuffer.2108" = type { %"class.WTF::VectorBufferBase.2109", [16 x i8] }
%"class.WTF::VectorBufferBase.2109" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.2152" = type { %"class.WTF::VectorBuffer.2153" }
%"class.WTF::VectorBuffer.2153" = type { %"class.WTF::VectorBufferBase.2154" }
%"class.WTF::VectorBufferBase.2154" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.2157" = type { %"class.WTF::HashTable.2158" }
%"class.WTF::HashTable.2158" = type <{ %"struct.WTF::KeyValuePair.2161"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2161" = type { i8**, %"class.std::__1::unique_ptr.2608" }
%"class.std::__1::unique_ptr.2608" = type { %"class.std::__1::__compressed_pair.2609" }
%"class.std::__1::__compressed_pair.2609" = type { %"struct.std::__1::__compressed_pair_elem.2610" }
%"struct.std::__1::__compressed_pair_elem.2610" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.2162" }
%"class.std::__1::unique_ptr.2162" = type { %"class.std::__1::__compressed_pair.2163" }
%"class.std::__1::__compressed_pair.2163" = type { %"struct.std::__1::__compressed_pair_elem.2164" }
%"struct.std::__1::__compressed_pair_elem.2164" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.2165, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.2182" }
%class.scoped_refptr.2165 = type { %"class.base::RefCountedData.2166"* }
%"class.base::RefCountedData.2166" = type { %"class.base::RefCountedThreadSafe.2167", %"class.WTF::Vector.2168" }
%"class.base::RefCountedThreadSafe.2167" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.2168" = type { %"class.WTF::VectorBuffer.2169" }
%"class.WTF::VectorBuffer.2169" = type { %"class.WTF::VectorBufferBase.2170" }
%"class.WTF::VectorBufferBase.2170" = type { %class.scoped_refptr.2171*, i32, i32 }
%class.scoped_refptr.2171 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.2172", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.2174" }
%"class.WTF::RefCounted.2172" = type { %"class.base::RefCounted.2173" }
%"class.base::RefCounted.2173" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.2174" = type { %"class.std::__1::__compressed_pair.2175" }
%"class.std::__1::__compressed_pair.2175" = type { %"struct.std::__1::__compressed_pair_elem.2176" }
%"struct.std::__1::__compressed_pair_elem.2176" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.2182" = type { %"class.std::__1::__compressed_pair.2183" }
%"class.std::__1::__compressed_pair.2183" = type { %"struct.std::__1::__compressed_pair_elem.2184" }
%"struct.std::__1::__compressed_pair_elem.2184" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.2185", %"class.WTF::Vector.2198", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.2185" = type { %"class.WTF::VectorBuffer.2186" }
%"class.WTF::VectorBuffer.2186" = type { %"class.WTF::VectorBufferBase.2187", [320 x i8] }
%"class.WTF::VectorBufferBase.2187" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.2188", %"class.WTF::Vector.2188", %class.scoped_refptr.2193, i8, [7 x i8] }>
%"class.WTF::Vector.2188" = type { %"class.WTF::VectorBuffer.2189" }
%"class.WTF::VectorBuffer.2189" = type { %"class.WTF::VectorBufferBase.2190", [8 x i8] }
%"class.WTF::VectorBufferBase.2190" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.2193 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.2194", %"class.WTF::Vector.2168", %"class.WTF::Vector.2168" }
%"class.WTF::RefCounted.2194" = type { %"class.base::RefCounted.2195" }
%"class.base::RefCounted.2195" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2198" = type { %"class.WTF::VectorBuffer.2199" }
%"class.WTF::VectorBuffer.2199" = type { %"class.WTF::VectorBufferBase.2200", [288 x i8] }
%"class.WTF::VectorBufferBase.2200" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.2188", %"class.WTF::Vector.2188" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.2201 }
%class.scoped_refptr.2201 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%class.scoped_refptr.2210 = type { %"class.blink::NGPhysicalFragment"* }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.2211", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.2213, %"class.std::__1::unique_ptr.2216" }
%"class.WTF::RefCounted.2211" = type { %"class.base::RefCounted.2212" }
%"class.base::RefCounted.2212" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2213 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.2214", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.2214" = type { %"class.base::RefCounted.2215" }
%"class.base::RefCounted.2215" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2216" = type { %"class.std::__1::__compressed_pair.2217" }
%"class.std::__1::__compressed_pair.2217" = type { %"struct.std::__1::__compressed_pair_elem.2218" }
%"struct.std::__1::__compressed_pair_elem.2218" = type { %"class.WTF::Vector.2219"* }
%"class.WTF::Vector.2219" = type { %"class.WTF::VectorBuffer.2220" }
%"class.WTF::VectorBuffer.2220" = type { %"class.WTF::VectorBufferBase.2221" }
%"class.WTF::VectorBufferBase.2221" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.2222 }
%union.anon.2222 = type { %"class.blink::LineBoxList" }
%union.anon.2228 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.2067", %class.scoped_refptr.2229, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.2230, %"class.blink::NGExclusionSpace", %class.scoped_refptr.2100, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.2231", %"class.absl::optional.2247" }
%"class.absl::optional.2067" = type { %"class.absl::optional_internal::optional_data.2068" }
%"class.absl::optional_internal::optional_data.2068" = type { %"class.absl::optional_internal::optional_data_base.2069" }
%"class.absl::optional_internal::optional_data_base.2069" = type { %"class.absl::optional_internal::optional_data_dtor_base.2070" }
%"class.absl::optional_internal::optional_data_dtor_base.2070" = type { i8, %union.anon.2071 }
%union.anon.2071 = type { %"class.blink::LayoutUnit" }
%class.scoped_refptr.2229 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.2252", [4 x i8], %union.anon.2254, %class.scoped_refptr.2229, i32, [4 x i8] }>
%"class.WTF::RefCounted.2252" = type { %"class.base::RefCounted.2253" }
%"class.base::RefCounted.2253" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.2254 = type { %"class.blink::LayoutBox"* }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%union.anon.2230 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.2231" = type { %"class.std::__1::__compressed_pair.2232" }
%"class.std::__1::__compressed_pair.2232" = type { %"struct.std::__1::__compressed_pair_elem.2233" }
%"struct.std::__1::__compressed_pair_elem.2233" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.2234", %"class.WTF::Vector.2239", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.2234" = type { %"class.WTF::VectorBuffer.2235" }
%"class.WTF::VectorBuffer.2235" = type { %"class.WTF::VectorBufferBase.2236" }
%"class.WTF::VectorBufferBase.2236" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.2239" = type { %"class.WTF::VectorBuffer.2240" }
%"class.WTF::VectorBuffer.2240" = type { %"class.WTF::VectorBufferBase.2241" }
%"class.WTF::VectorBufferBase.2241" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.2247" = type { %"class.absl::optional_internal::optional_data.2248" }
%"class.absl::optional_internal::optional_data.2248" = type { %"class.absl::optional_internal::optional_data_base.2249" }
%"class.absl::optional_internal::optional_data_base.2249" = type { %"class.absl::optional_internal::optional_data_dtor_base.2250" }
%"class.absl::optional_internal::optional_data_dtor_base.2250" = type { i8, %union.anon.2251 }
%union.anon.2251 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.WTF::Vector.1713" = type { %"class.WTF::VectorBuffer.1714" }
%"class.WTF::VectorBuffer.1714" = type { %"class.WTF::VectorBufferBase.1715", [8 x i8] }
%"class.WTF::VectorBufferBase.1715" = type { %class.scoped_refptr.1712*, i32, i32 }
%"class.std::__1::unique_ptr.1718" = type { %"class.std::__1::__compressed_pair.1719" }
%"class.std::__1::__compressed_pair.1719" = type { %"struct.std::__1::__compressed_pair_elem.1720" }
%"struct.std::__1::__compressed_pair_elem.1720" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1721", %"class.absl::optional.1726", %"class.absl::optional.1731" }
%"class.absl::optional.1721" = type { %"class.absl::optional_internal::optional_data.1722" }
%"class.absl::optional_internal::optional_data.1722" = type { %"class.absl::optional_internal::optional_data_base.1723" }
%"class.absl::optional_internal::optional_data_base.1723" = type { %"class.absl::optional_internal::optional_data_dtor_base.1724" }
%"class.absl::optional_internal::optional_data_dtor_base.1724" = type { i8, %union.anon.1725 }
%union.anon.1725 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1726" = type { %"class.absl::optional_internal::optional_data.1727" }
%"class.absl::optional_internal::optional_data.1727" = type { %"class.absl::optional_internal::optional_data_base.1728" }
%"class.absl::optional_internal::optional_data_base.1728" = type { %"class.absl::optional_internal::optional_data_dtor_base.1729" }
%"class.absl::optional_internal::optional_data_dtor_base.1729" = type { i8, [3 x i8], %union.anon.1730 }
%union.anon.1730 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1731" = type { %"class.absl::optional_internal::optional_data.1732" }
%"class.absl::optional_internal::optional_data.1732" = type { %"class.absl::optional_internal::optional_data_base.1733" }
%"class.absl::optional_internal::optional_data_base.1733" = type { %"class.absl::optional_internal::optional_data_dtor_base.1734" }
%"class.absl::optional_internal::optional_data_dtor_base.1734" = type { i8, %union.anon.1735 }
%union.anon.1735 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1739 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1692", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1692" = type { %"class.std::__1::__compressed_pair.1693" }
%"class.std::__1::__compressed_pair.1693" = type { %"struct.std::__1::__compressed_pair_elem.1694" }
%"struct.std::__1::__compressed_pair_elem.1694" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1695", %"class.absl::optional.1704" }
%"class.absl::optional.1695" = type { %"class.absl::optional_internal::optional_data.1696" }
%"class.absl::optional_internal::optional_data.1696" = type { %"class.absl::optional_internal::optional_data_base.1697" }
%"class.absl::optional_internal::optional_data_base.1697" = type { %"class.absl::optional_internal::optional_data_dtor_base.1698" }
%"class.absl::optional_internal::optional_data_dtor_base.1698" = type { i8, %union.anon.1699 }
%union.anon.1699 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1704" = type { %"class.absl::optional_internal::optional_data.1705" }
%"class.absl::optional_internal::optional_data.1705" = type { %"class.absl::optional_internal::optional_data_base.1706" }
%"class.absl::optional_internal::optional_data_base.1706" = type { %"class.absl::optional_internal::optional_data_dtor_base.1707" }
%"class.absl::optional_internal::optional_data_dtor_base.1707" = type { i8, %union.anon.1708 }
%union.anon.1708 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1740" = type { %"class.blink::PersistentBase.1741" }
%"class.blink::PersistentBase.1741" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1744", %"struct.blink::PhysicalRect", %"class.blink::Member.1754" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1744" = type { %"class.std::__1::__compressed_pair.1745" }
%"class.std::__1::__compressed_pair.1745" = type { %"struct.std::__1::__compressed_pair_elem.1746" }
%"struct.std::__1::__compressed_pair_elem.1746" = type { %"class.WTF::HashSet.1747"* }
%"class.WTF::HashSet.1747" = type { %"class.WTF::HashTable.1748" }
%"class.WTF::HashTable.1748" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1754" = type { %"class.blink::MemberBase.1755" }
%"class.blink::MemberBase.1755" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1756" = type { %"class.blink::PersistentBase.1757" }
%"class.blink::PersistentBase.1757" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1760", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1760" = type { %"class.std::__1::__compressed_pair.1761" }
%"class.std::__1::__compressed_pair.1761" = type { %"struct.std::__1::__compressed_pair_elem.1762" }
%"struct.std::__1::__compressed_pair_elem.1762" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type { %"class.WTF::Vector.2053", %"class.WTF::HashMap.2058", %"class.WTF::String" }
%"class.WTF::Vector.2053" = type { %"class.WTF::VectorBuffer.2054" }
%"class.WTF::VectorBuffer.2054" = type { %"class.WTF::VectorBufferBase.2055" }
%"class.WTF::VectorBufferBase.2055" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.WTF::HashMap.2058" = type { %"class.WTF::HashTable.2059" }
%"class.WTF::HashTable.2059" = type <{ %"struct.WTF::KeyValuePair.2062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2062" = type opaque
%"class.std::__1::unique_ptr.1766" = type { %"class.std::__1::__compressed_pair.1767" }
%"class.std::__1::__compressed_pair.1767" = type { %"struct.std::__1::__compressed_pair_elem.1768" }
%"struct.std::__1::__compressed_pair_elem.1768" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1769", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1769" = type { %"class.WTF::HashTable.1772", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1772" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1775", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1775" = type { %"class.std::__1::__compressed_pair.1776" }
%"class.std::__1::__compressed_pair.1776" = type { %"struct.std::__1::__compressed_pair_elem.1777" }
%"struct.std::__1::__compressed_pair_elem.1777" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1778, %"class.std::__1::unique_ptr.1779", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1692", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1778 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.2043", i16, %class.scoped_refptr.1778 }
%"class.WTF::ThreadSafeRefCounted.2043" = type { %"class.base::RefCountedThreadSafe.2044" }
%"class.base::RefCountedThreadSafe.2044" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1779" = type { %"class.std::__1::__compressed_pair.1780" }
%"class.std::__1::__compressed_pair.1780" = type { %"struct.std::__1::__compressed_pair_elem.1781" }
%"struct.std::__1::__compressed_pair_elem.1781" = type { %"class.WTF::Vector.1782"* }
%"class.WTF::Vector.1782" = type { %"class.WTF::VectorBuffer.1783" }
%"class.WTF::VectorBuffer.1783" = type { %"class.WTF::VectorBufferBase.1784" }
%"class.WTF::VectorBufferBase.1784" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1793, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::UntracedMember.1797" = type { %"class.blink::MemberBase.1798" }
%"class.blink::MemberBase.1798" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1801", %"class.blink::Member.1806", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1808", i8, i32, %"class.blink::Color", %"class.absl::optional.1811", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1816", %"class.blink::Member.1818", %"class.blink::Member.1818", %"class.std::__1::unique_ptr.1821", i32, [4 x i8], %"class.WTF::HashSet.1824", %"class.blink::Member.1831", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1833", %"class.blink::HeapHashSet.1840", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1846", i8, %"class.blink::Member.1852", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1864", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1878", i8, %"class.std::__1::unique_ptr.1884", %"class.std::__1::unique_ptr.1960", %"class.WTF::Vector.1966", i32, %class.scoped_refptr.1971, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1972", %"class.blink::Member.1974", %"class.blink::Member.1976", %"class.blink::HeapHashSet.1978", %"class.blink::HeapHashSet.1985", %"class.std::__1::unique_ptr.1992", %"class.std::__1::unique_ptr.1999", %"class.WTF::Vector.771" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.WTF::HashSet.1801" = type { %"class.WTF::HashTable.1802" }
%"class.WTF::HashTable.1802" = type <{ %class.scoped_refptr.1805*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1805 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1806" = type { %"class.blink::MemberBase.1807" }
%"class.blink::MemberBase.1807" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1808" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1809", { i64, i64 } }
%"class.blink::WeakMember.1809" = type { %"class.blink::MemberBase.1810" }
%"class.blink::MemberBase.1810" = type { %"class.blink::LocalFrameView"* }
%"class.absl::optional.1811" = type { %"class.absl::optional_internal::optional_data.1812" }
%"class.absl::optional_internal::optional_data.1812" = type { %"class.absl::optional_internal::optional_data_base.1813" }
%"class.absl::optional_internal::optional_data_base.1813" = type { %"class.absl::optional_internal::optional_data_dtor_base.1814" }
%"class.absl::optional_internal::optional_data_dtor_base.1814" = type { i8, %union.anon.1815 }
%union.anon.1815 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1816" = type { %"class.blink::MemberBase.1817" }
%"class.blink::MemberBase.1817" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1818" = type { %"class.blink::MemberBase.1819" }
%"class.blink::MemberBase.1819" = type { %"class.blink::HeapHashSet.1820"* }
%"class.blink::HeapHashSet.1820" = type opaque
%"class.std::__1::unique_ptr.1821" = type { %"class.std::__1::__compressed_pair.1822" }
%"class.std::__1::__compressed_pair.1822" = type { %"struct.std::__1::__compressed_pair_elem.1823" }
%"struct.std::__1::__compressed_pair_elem.1823" = type { %"class.WTF::HashSet.1824"* }
%"class.WTF::HashSet.1824" = type { %"class.WTF::HashTable.1825" }
%"class.WTF::HashTable.1825" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1831" = type { %"class.blink::MemberBase.1832" }
%"class.blink::MemberBase.1832" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1833" = type { %"class.WTF::HashSet.1836" }
%"class.WTF::HashSet.1836" = type { %"class.WTF::HashTable.1837" }
%"class.WTF::HashTable.1837" = type <{ %"class.blink::Member.1839"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1839" = type opaque
%"class.blink::HeapHashSet.1840" = type { %"class.WTF::HashSet.1843" }
%"class.WTF::HashSet.1843" = type { %"class.WTF::HashTable.1844" }
%"class.WTF::HashTable.1844" = type <{ %"class.blink::Member.782"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1846" = type { %"class.std::__1::__compressed_pair.1847" }
%"class.std::__1::__compressed_pair.1847" = type { %"struct.std::__1::__compressed_pair_elem.1848" }
%"struct.std::__1::__compressed_pair_elem.1848" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1852" = type { %"class.blink::MemberBase.1853" }
%"class.blink::MemberBase.1853" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1856", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1856" = type { %"class.WTF::HashTable.1857" }
%"class.WTF::HashTable.1857" = type <{ %"struct.WTF::KeyValuePair.1859"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1859" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1860", i32, i32 }
%"class.WTF::Vector.1860" = type { %"class.WTF::VectorBuffer.1861" }
%"class.WTF::VectorBuffer.1861" = type { %"class.WTF::VectorBufferBase.1862" }
%"class.WTF::VectorBufferBase.1862" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1864" = type { %"class.WTF::LinkedHashSet.1867" }
%"class.WTF::LinkedHashSet.1867" = type { %"class.WTF::HashMap.1868", %"class.WTF::VectorBackedLinkedList.1872" }
%"class.WTF::HashMap.1868" = type { %"class.WTF::HashTable.1869" }
%"class.WTF::HashTable.1869" = type <{ %"struct.WTF::KeyValuePair.1871"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1871" = type opaque
%"class.WTF::VectorBackedLinkedList.1872" = type { %"class.WTF::Vector.1873", i32, i32 }
%"class.WTF::Vector.1873" = type { %"class.WTF::VectorBuffer.1874" }
%"class.WTF::VectorBuffer.1874" = type { %"class.WTF::VectorBufferBase.1875" }
%"class.WTF::VectorBufferBase.1875" = type { %"class.WTF::VectorBackedLinkedListNode.1876"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1876" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1878" = type { %"class.std::__1::__compressed_pair.1879" }
%"class.std::__1::__compressed_pair.1879" = type { %"struct.std::__1::__compressed_pair_elem.1880" }
%"struct.std::__1::__compressed_pair_elem.1880" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1884" = type { %"class.std::__1::__compressed_pair.1885" }
%"class.std::__1::__compressed_pair.1885" = type { %"struct.std::__1::__compressed_pair_elem.1886" }
%"struct.std::__1::__compressed_pair_elem.1886" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1887, %class.scoped_refptr.1887, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1937", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1942", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1887 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1888", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1895" }
%"class.WTF::RefCounted.1888" = type { %"class.base::RefCounted.1889" }
%"class.base::RefCounted.1889" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1890", i32, [4 x i8] }>
%"class.WTF::Vector.1890" = type { %"class.WTF::VectorBuffer.1891" }
%"class.WTF::VectorBuffer.1891" = type { %"class.WTF::VectorBufferBase.1892" }
%"class.WTF::VectorBufferBase.1892" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1895" = type { %"class.WTF::VectorBuffer.1896" }
%"class.WTF::VectorBuffer.1896" = type { %"class.WTF::VectorBufferBase.1897" }
%"class.WTF::VectorBufferBase.1897" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1898", %"class.std::__1::unique_ptr.1909", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1898" = type { %"class.std::__1::__compressed_pair.1899" }
%"class.std::__1::__compressed_pair.1899" = type { %"struct.std::__1::__compressed_pair_elem.1900" }
%"struct.std::__1::__compressed_pair_elem.1900" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1901", %"class.WTF::Vector.804", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1901" = type { %"class.WTF::VectorBuffer.1902" }
%"class.WTF::VectorBuffer.1902" = type { %"class.WTF::VectorBufferBase.1903" }
%"class.WTF::VectorBufferBase.1903" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.std::__1::unique_ptr.1909" = type { %"class.std::__1::__compressed_pair.1910" }
%"class.std::__1::__compressed_pair.1910" = type { %"struct.std::__1::__compressed_pair_elem.1911" }
%"struct.std::__1::__compressed_pair_elem.1911" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1912", %"class.absl::optional.1912" }
%"class.absl::optional.1912" = type { %"class.absl::optional_internal::optional_data.1913" }
%"class.absl::optional_internal::optional_data.1913" = type { %"class.absl::optional_internal::optional_data_base.1914" }
%"class.absl::optional_internal::optional_data_base.1914" = type { %"class.absl::optional_internal::optional_data_dtor_base.1915" }
%"class.absl::optional_internal::optional_data_dtor_base.1915" = type { i8, [3 x i8], %union.anon.1916 }
%union.anon.1916 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1895"*, %"class.absl::optional.1922", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1922" = type { %"class.absl::optional_internal::optional_data.1923" }
%"class.absl::optional_internal::optional_data.1923" = type { %"class.absl::optional_internal::optional_data_base.1924" }
%"class.absl::optional_internal::optional_data_base.1924" = type { %"class.absl::optional_internal::optional_data_dtor_base.1925" }
%"class.absl::optional_internal::optional_data_dtor_base.1925" = type { i8, %union.anon.1926 }
%union.anon.1926 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1927", %"class.WTF::Vector.1932" }
%"class.WTF::Vector.1927" = type { %"class.WTF::VectorBuffer.1928" }
%"class.WTF::VectorBuffer.1928" = type { %"class.WTF::VectorBufferBase.1929", [128 x i8] }
%"class.WTF::VectorBufferBase.1929" = type { i32*, i32, i32 }
%"class.WTF::Vector.1932" = type { %"class.WTF::VectorBuffer.1933" }
%"class.WTF::VectorBuffer.1933" = type { %"class.WTF::VectorBufferBase.1934", [128 x i8] }
%"class.WTF::VectorBufferBase.1934" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1937" = type { %"class.WTF::VectorBuffer.1938" }
%"class.WTF::VectorBuffer.1938" = type { %"class.WTF::VectorBufferBase.1939" }
%"class.WTF::VectorBufferBase.1939" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1942" = type { %"class.WTF::HashTable.1943" }
%"class.WTF::HashTable.1943" = type <{ %"struct.WTF::KeyValuePair.1946"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1946" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1947", %"class.WTF::Vector.1952" }
%"class.WTF::HashMap.1947" = type { %"class.WTF::HashTable.1948" }
%"class.WTF::HashTable.1948" = type <{ %"struct.WTF::KeyValuePair.1951"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1951" = type opaque
%"class.WTF::Vector.1952" = type { %"class.WTF::VectorBuffer.1953" }
%"class.WTF::VectorBuffer.1953" = type { %"class.WTF::VectorBufferBase.1954" }
%"class.WTF::VectorBufferBase.1954" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1960" = type { %"class.std::__1::__compressed_pair.1961" }
%"class.std::__1::__compressed_pair.1961" = type { %"struct.std::__1::__compressed_pair_elem.1962" }
%"struct.std::__1::__compressed_pair_elem.1962" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1966" = type { %"class.WTF::VectorBuffer.1967" }
%"class.WTF::VectorBuffer.1967" = type { %"class.WTF::VectorBufferBase.1968" }
%"class.WTF::VectorBufferBase.1968" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1971 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1972" = type { %"class.blink::MemberBase.1973" }
%"class.blink::MemberBase.1973" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1974" = type { %"class.blink::MemberBase.1975" }
%"class.blink::MemberBase.1975" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1976" = type { %"class.blink::MemberBase.1977" }
%"class.blink::MemberBase.1977" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1978" = type { %"class.WTF::HashSet.1981" }
%"class.WTF::HashSet.1981" = type { %"class.WTF::HashTable.1982" }
%"class.WTF::HashTable.1982" = type <{ %"class.blink::WeakMember.1984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1984" = type opaque
%"class.blink::HeapHashSet.1985" = type { %"class.WTF::HashSet.1988" }
%"class.WTF::HashSet.1988" = type { %"class.WTF::HashTable.1989" }
%"class.WTF::HashTable.1989" = type <{ %"class.blink::WeakMember.1991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1991" = type opaque
%"class.std::__1::unique_ptr.1992" = type { %"class.std::__1::__compressed_pair.1993" }
%"class.std::__1::__compressed_pair.1993" = type { %"struct.std::__1::__compressed_pair_elem.1994" }
%"struct.std::__1::__compressed_pair_elem.1994" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1995" }
%"class.base::time_internal::TimeBase.1995" = type { i64 }
%"class.std::__1::unique_ptr.1999" = type { %"class.std::__1::__compressed_pair.2000" }
%"class.std::__1::__compressed_pair.2000" = type { %"struct.std::__1::__compressed_pair_elem.2001" }
%"struct.std::__1::__compressed_pair_elem.2001" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2002", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2002" = type { %"class.absl::optional_internal::optional_data.2003" }
%"class.absl::optional_internal::optional_data.2003" = type { %"class.absl::optional_internal::optional_data_base.2004" }
%"class.absl::optional_internal::optional_data_base.2004" = type { %"class.absl::optional_internal::optional_data_dtor_base.2005" }
%"class.absl::optional_internal::optional_data_dtor_base.2005" = type { i8, %union.anon.2006 }
%union.anon.2006 = type { %"class.base::Time" }
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type opaque
%"class.std::__1::unique_ptr.2010" = type { %"class.std::__1::__compressed_pair.2011" }
%"class.std::__1::__compressed_pair.2011" = type { %"struct.std::__1::__compressed_pair_elem.2012" }
%"struct.std::__1::__compressed_pair_elem.2012" = type { %"class.blink::ViewFragmentationContext"* }
%"class.blink::ViewFragmentationContext" = type opaque
%"class.std::__1::unique_ptr.2016" = type { %"class.std::__1::__compressed_pair.2017" }
%"class.std::__1::__compressed_pair.2017" = type { %"struct.std::__1::__compressed_pair_elem.2018" }
%"struct.std::__1::__compressed_pair_elem.2018" = type { %"class.blink::NamedPagesMapper"* }
%"class.blink::NamedPagesMapper" = type opaque
%"class.std::__1::unique_ptr.2022" = type { %"class.std::__1::__compressed_pair.2023" }
%"class.std::__1::__compressed_pair.2023" = type { %"struct.std::__1::__compressed_pair_elem.2024" }
%"struct.std::__1::__compressed_pair_elem.2024" = type { %"class.blink::PaintLayerCompositor"* }
%"class.blink::PaintLayerCompositor" = type opaque
%class.scoped_refptr.1793 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.blink::LayoutQuote" = type opaque
%"class.blink::Persistent.2028" = type { %"class.blink::PersistentBase.2029" }
%"class.blink::PersistentBase.2029" = type { %"class.blink::HitTestCache"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HitTestCache" = type { i32, %"class.blink::HeapVector.2032", i64 }
%"class.blink::HeapVector.2032" = type { %"class.WTF::Vector.2035" }
%"class.WTF::Vector.2035" = type { %"class.WTF::VectorBuffer.2036" }
%"class.WTF::VectorBuffer.2036" = type { %"class.WTF::VectorBufferBase.2037", [368 x i8] }
%"class.WTF::VectorBufferBase.2037" = type { %"struct.blink::HitTestCacheEntry"*, i32, i32 }
%"struct.blink::HitTestCacheEntry" = type { %"class.blink::HitTestLocation", %"class.blink::HitTestResult" }
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.782", i8, %"class.blink::Member.2038", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.2038" = type { %"class.blink::MemberBase.2039" }
%"class.blink::MemberBase.2039" = type { %"class.blink::HeapLinkedHashSet.2040"* }
%"class.blink::HeapLinkedHashSet.2040" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1471" = type { %"class.WTF::Vector.1474" }
%"class.WTF::Vector.1474" = type { %"class.WTF::VectorBuffer.1475" }
%"class.WTF::VectorBuffer.1475" = type { %"class.WTF::VectorBufferBase.1476" }
%"class.WTF::VectorBufferBase.1476" = type { %"class.blink::Member.1477"*, i32, i32 }
%"class.blink::Member.1477" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1479" = type { %"class.blink::MemberBase.1480" }
%"class.blink::MemberBase.1480" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1481" = type { %"class.blink::MemberBase.1482" }
%"class.blink::MemberBase.1482" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1483" = type { %"class.blink::MemberBase.1484" }
%"class.blink::MemberBase.1484" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1485" = type { %"class.blink::MemberBase.1486" }
%"class.blink::MemberBase.1486" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1487" = type { %"class.blink::MemberBase.1488" }
%"class.blink::MemberBase.1488" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"struct.WTF::KeyValuePair.1493"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1493" = type opaque
%"class.blink::Member.1494" = type { %"class.blink::MemberBase.1495" }
%"class.blink::MemberBase.1495" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1496" = type { %"class.blink::MemberBase.1497" }
%"class.blink::MemberBase.1497" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1500" = type { %"class.blink::MemberBase.1501" }
%"class.blink::MemberBase.1501" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1054" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1055", { i64, i64 } }
%"class.blink::WeakMember.1055" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::Member.1509" = type { %"class.blink::MemberBase.1510" }
%"class.blink::MemberBase.1510" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1511" = type { %"class.blink::MemberBase.1512" }
%"class.blink::MemberBase.1512" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1513" = type { %"class.blink::MemberBase.1514" }
%"class.blink::MemberBase.1514" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1515" = type { %"class.blink::MemberBase.1516" }
%"class.blink::MemberBase.1516" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1517" = type { %"class.blink::MemberBase.1518" }
%"class.blink::MemberBase.1518" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1519" = type { %"class.std::__1::__compressed_pair.1520" }
%"class.std::__1::__compressed_pair.1520" = type { %"struct.std::__1::__compressed_pair_elem.1521" }
%"struct.std::__1::__compressed_pair_elem.1521" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1525" = type { %"class.std::__1::__compressed_pair.1526" }
%"class.std::__1::__compressed_pair.1526" = type { %"struct.std::__1::__compressed_pair_elem.1527" }
%"struct.std::__1::__compressed_pair_elem.1527" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1528", %"class.WTF::HashMap.1528", %"class.WTF::HashMap.1528", %"class.WTF::HashMap.1528", %"class.WTF::HashMap.1528", %"class.WTF::HashMap.1528", %"class.WTF::HashMap.1528", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1528" = type { %"class.WTF::HashTable.1529" }
%"class.WTF::HashTable.1529" = type <{ %"struct.WTF::KeyValuePair.1532"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1532" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1536" = type { %"class.blink::MemberBase.1537" }
%"class.blink::MemberBase.1537" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1538" = type { %"class.blink::MemberBase.1539" }
%"class.blink::MemberBase.1539" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1540" = type { %"class.blink::MemberBase.1541" }
%"class.blink::MemberBase.1541" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1542" = type { %"class.blink::MemberBase.1543" }
%"class.blink::MemberBase.1543" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1544" = type { %"class.WTF::VectorBuffer.1545" }
%"class.WTF::VectorBuffer.1545" = type { %"class.WTF::VectorBufferBase.1546" }
%"class.WTF::VectorBufferBase.1546" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1549" = type { %"class.WTF::HashMap.1552" }
%"class.WTF::HashMap.1552" = type { %"class.WTF::HashTable.1553" }
%"class.WTF::HashTable.1553" = type <{ %"struct.WTF::KeyValuePair.1555"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1555" = type opaque
%"class.blink::Member.1556" = type { %"class.blink::MemberBase.1557" }
%"class.blink::MemberBase.1557" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1558" = type { %"class.std::__1::__compressed_pair.1559" }
%"class.std::__1::__compressed_pair.1559" = type { %"struct.std::__1::__compressed_pair_elem.1560" }
%"struct.std::__1::__compressed_pair_elem.1560" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1564" = type { %"class.blink::MemberBase.1565" }
%"class.blink::MemberBase.1565" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1566" = type { %"class.blink::MemberBase.1567" }
%"class.blink::MemberBase.1567" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1568" = type { %"class.WTF::HashMap.1571" }
%"class.WTF::HashMap.1571" = type { %"class.WTF::HashTable.1572" }
%"class.WTF::HashTable.1572" = type <{ %"struct.WTF::KeyValuePair.1574"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1574" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1575" }
%"class.blink::HeapHashSet.1575" = type { %"class.WTF::HashSet.1578" }
%"class.WTF::HashSet.1578" = type { %"class.WTF::HashTable.1579" }
%"class.WTF::HashTable.1579" = type <{ %"class.blink::WeakMember.1581"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1581" = type opaque
%"class.blink::Member.1582" = type { %"class.blink::MemberBase.1583" }
%"class.blink::MemberBase.1583" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1584" = type { %"class.blink::MemberBase.1585" }
%"class.blink::MemberBase.1585" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1591", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1598", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1591" = type { %"class.WTF::HashSet.1594" }
%"class.WTF::HashSet.1594" = type { %"class.WTF::HashTable.1595" }
%"class.WTF::HashTable.1595" = type <{ %"class.blink::Member.1597"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1597" = type opaque
%"class.blink::HeapTaskRunnerTimer.1598" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1599", { i64, i64 } }
%"class.blink::WeakMember.1599" = type { %"class.blink::MemberBase.1585" }
%"class.blink::WeakMember.1586" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.1587" = type { %"class.blink::MemberBase.1588" }
%"class.blink::MemberBase.1588" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"struct.blink::InspectorHighlightContrastInfo" = type <{ %"class.blink::Color", [4 x i8], %"class.WTF::String", %"class.WTF::String", float, [4 x i8] }>
%"class.blink::InspectorHighlightBase" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.2401", float, [4 x i8] }>
%"class.blink::ChromeClient" = type { i32 (...)**, %"class.blink::WeakMember.1586", %"struct.blink::PhysicalOffset", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.2616", %"class.blink::Member.2618", %"class.blink::Member.2620", %"class.blink::Member.2639", %"class.blink::Member.2641" }
%"class.blink::Member.2616" = type { %"class.blink::MemberBase.2617" }
%"class.blink::MemberBase.2617" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.2618" = type { %"class.blink::MemberBase.2619" }
%"class.blink::MemberBase.2619" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.2620" = type { %"class.blink::MemberBase.2621" }
%"class.blink::MemberBase.2621" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.2624", %"class.blink::HeapHashSet.2633" }
%"class.blink::HeapVector.2624" = type { %"class.WTF::Vector.2627" }
%"class.WTF::Vector.2627" = type { %"class.WTF::VectorBuffer.2628" }
%"class.WTF::VectorBuffer.2628" = type { %"class.WTF::VectorBufferBase.2629" }
%"class.WTF::VectorBufferBase.2629" = type { %"class.blink::Member.2630"*, i32, i32 }
%"class.blink::Member.2630" = type { %"class.blink::MemberBase.2631" }
%"class.blink::MemberBase.2631" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.2633" = type { %"class.WTF::HashSet.2636" }
%"class.WTF::HashSet.2636" = type { %"class.WTF::HashTable.2637" }
%"class.WTF::HashTable.2637" = type <{ %"class.blink::Member.2630"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2639" = type { %"class.blink::MemberBase.2640" }
%"class.blink::MemberBase.2640" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.2641" = type { %"class.blink::MemberBase.2642" }
%"class.blink::MemberBase.2642" = type { %"class.blink::HeapHashSet.2643"* }
%"class.blink::HeapHashSet.2643" = type opaque
%"class.blink::LayoutText" = type { %"class.blink::LayoutObject", i16, i32, float, float, float, float, %"class.WTF::String", %"struct.blink::LogicalOffset", %union.anon.2498 }
%union.anon.2498 = type { %"class.blink::InlineTextBoxList" }
%"class.blink::InlineTextBoxList" = type { %"class.blink::InlineBoxList.2499" }
%"class.blink::InlineBoxList.2499" = type { %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"* }
%"class.blink::InlineTextBox" = type opaque
%"class.blink::Page" = type { %"class.blink::Supplementable.2646", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.2660", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.2662", %"class.blink::Member.2668", %"class.blink::Member.2670", %"class.blink::Member.2672", %"class.blink::Member.2674", %"class.blink::Member.2676", %"class.blink::Member.2678", %"class.blink::Member.2680", %"class.blink::HeapObserverSet.2682", %"class.blink::Member.2690", %"class.blink::Member.2692", %"class.blink::Member.2694", %"class.blink::Member.2696", %"class.blink::Member.2698", %"class.blink::Member.2700", %"class.blink::Member.2706", %"class.blink::Member.2708", %"class.blink::Member.2710", %"class.blink::Member.2712", %"class.blink::Member.2714", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.2739", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.2746", %"class.blink::Member.2666", %"class.blink::Member.2666", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.2754", %"class.std::__1::unique_ptr.2760", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.2646" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2647" }
%"class.blink::HeapHashMap.2647" = type { %"class.WTF::HashMap.2650" }
%"class.WTF::HashMap.2650" = type { %"class.WTF::HashTable.2651" }
%"class.WTF::HashTable.2651" = type <{ %"struct.WTF::KeyValuePair.2653"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2653" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.2654" }
%"class.std::__1::unique_ptr.2654" = type { %"class.std::__1::__compressed_pair.2655" }
%"class.std::__1::__compressed_pair.2655" = type { %"struct.std::__1::__compressed_pair_elem.2656" }
%"struct.std::__1::__compressed_pair_elem.2656" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Member.2660" = type { %"class.blink::MemberBase.2661" }
%"class.blink::MemberBase.2661" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.2666", %"class.blink::Member.2768", %"class.blink::Member.2770", i8, i32, i8, i32, %"class.blink::Member.2904", %"class.blink::Member.2793", %"class.blink::FrameLifecycle", %"class.blink::Member.2660", %"class.blink::Member.2660", %"class.blink::Member.2660", %"class.blink::Member.2660", %"class.blink::Member.2660", %"class.blink::Member.2660", %"class.blink::Member.1806", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.2915", i8, %"class.base::UnguessableToken", %"class.absl::optional.2917", %"class.absl::optional.2922", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.2660", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.2768" = type { %"class.blink::MemberBase.2769" }
%"class.blink::MemberBase.2769" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.2770" = type { %"class.blink::MemberBase.2771" }
%"class.blink::MemberBase.2771" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.2660", %"class.blink::Member.2793", %"class.blink::Member.2795", %"class.blink::Member.2797", i8, %"class.WTF::Vector.2799" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.2786" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.2774" }
%"class.blink::HeapVector.2774" = type { %"class.WTF::Vector.2777" }
%"class.WTF::Vector.2777" = type { %"class.WTF::VectorBuffer.2778" }
%"class.WTF::VectorBuffer.2778" = type { %"class.WTF::VectorBufferBase.2779", [32 x i8] }
%"class.WTF::VectorBufferBase.2779" = type { %"struct.std::__1::pair.2780"*, i32, i32 }
%"struct.std::__1::pair.2780" = type { %"class.WTF::AtomicString", %"class.blink::Member.2781" }
%"class.blink::Member.2781" = type { %"class.blink::MemberBase.2782" }
%"class.blink::MemberBase.2782" = type { %"class.blink::HeapVector.2783"* }
%"class.blink::HeapVector.2783" = type opaque
%"class.std::__1::unique_ptr.2786" = type { %"class.std::__1::__compressed_pair.2787" }
%"class.std::__1::__compressed_pair.2787" = type { %"struct.std::__1::__compressed_pair_elem.2788" }
%"struct.std::__1::__compressed_pair_elem.2788" = type { %"class.WTF::Vector.2789"* }
%"class.WTF::Vector.2789" = type opaque
%"class.blink::Member.2795" = type { %"class.blink::MemberBase.2796" }
%"class.blink::MemberBase.2796" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.2797" = type { %"class.blink::MemberBase.2798" }
%"class.blink::MemberBase.2798" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.2799" = type { %"class.WTF::VectorBuffer.2800" }
%"class.WTF::VectorBuffer.2800" = type { %"class.WTF::VectorBufferBase.2801" }
%"class.WTF::VectorBufferBase.2801" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2896" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.2802, %"class.std::__1::unique_ptr.2299", %"class.mojo::ScopedHandleBase.2803", [4 x i8], %class.scoped_refptr.2313, i32 }>
%class.scoped_refptr.2802 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.2313, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase.2803", [4 x i8], %"class.absl::optional.2862", %"class.absl::optional.2867", %"class.absl::optional.2820", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2887", i8, [7 x i8], %class.scoped_refptr.2313, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2322" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase.2803", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.2313, %"class.std::__1::unique_ptr.2804", %"class.absl::optional.2814", %"struct.std::__1::atomic.238", i8, i8, i8, i8, i32, i32, %"class.absl::optional.2820", %"class.std::__1::unique_ptr.2825", i8, i64, %class.scoped_refptr.2859, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.2860", %"class.base::WeakPtrFactory.2861" }
%"class.std::__1::unique_ptr.2804" = type { %"class.std::__1::__compressed_pair.2805" }
%"class.std::__1::__compressed_pair.2805" = type { %"struct.std::__1::__compressed_pair_elem.2806" }
%"struct.std::__1::__compressed_pair_elem.2806" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.2313, i8, %"class.mojo::ScopedHandleBase.2807", %class.scoped_refptr.2808, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2809", i8*, %"class.base::WeakPtrFactory.2810" }
%"class.mojo::ScopedHandleBase.2807" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2808 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.2809" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.2810" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2814" = type { %"class.absl::optional_internal::optional_data.2815" }
%"class.absl::optional_internal::optional_data.2815" = type { %"class.absl::optional_internal::optional_data_base.2816" }
%"class.absl::optional_internal::optional_data_base.2816" = type { %"class.absl::optional_internal::optional_data_dtor_base.2817" }
%"class.absl::optional_internal::optional_data_dtor_base.2817" = type { i8, %union.anon.2818 }
%union.anon.2818 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.2819", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.2819" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.2825" = type { %"class.std::__1::__compressed_pair.2826" }
%"class.std::__1::__compressed_pair.2826" = type { %"struct.std::__1::__compressed_pair_elem.2827" }
%"struct.std::__1::__compressed_pair_elem.2827" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2828", i8, i64, %class.scoped_refptr.2829, %class.scoped_refptr.2854 }
%"class.base::RepeatingCallback.2828" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2829 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.2830", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.2832", %"class.std::__1::map.2843", i8, [7 x i8] }>
%"class.base::RefCounted.2830" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.2831 }
%class.scoped_refptr.2831 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.2832" = type { %"class.std::__1::__tree.2833" }
%"class.std::__1::__tree.2833" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2834", %"class.std::__1::__compressed_pair.2838" }
%"class.std::__1::__compressed_pair.2834" = type { %"struct.std::__1::__compressed_pair_elem.2340" }
%"class.std::__1::__compressed_pair.2838" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.2843" = type { %"class.std::__1::__tree.2844" }
%"class.std::__1::__tree.2844" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2845", %"class.std::__1::__compressed_pair.2849" }
%"class.std::__1::__compressed_pair.2845" = type { %"struct.std::__1::__compressed_pair_elem.2340" }
%"class.std::__1::__compressed_pair.2849" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%class.scoped_refptr.2854 = type { %"class.base::RefCountedData.2855"* }
%"class.base::RefCountedData.2855" = type opaque
%class.scoped_refptr.2859 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.2860" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.2861" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2862" = type { %"class.absl::optional_internal::optional_data.2863" }
%"class.absl::optional_internal::optional_data.2863" = type { %"class.absl::optional_internal::optional_data_base.2864" }
%"class.absl::optional_internal::optional_data_base.2864" = type { %"class.absl::optional_internal::optional_data_dtor_base.2865" }
%"class.absl::optional_internal::optional_data_dtor_base.2865" = type { i8, %union.anon.2866 }
%union.anon.2866 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2867" = type { %"class.absl::optional_internal::optional_data.2868" }
%"class.absl::optional_internal::optional_data.2868" = type { %"class.absl::optional_internal::optional_data_base.2869" }
%"class.absl::optional_internal::optional_data_base.2869" = type { %"class.absl::optional_internal::optional_data_dtor_base.2870" }
%"class.absl::optional_internal::optional_data_dtor_base.2870" = type { i8, [7 x i8], %union.anon.2871 }
%union.anon.2871 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.2820" = type { %"class.absl::optional_internal::optional_data.2821" }
%"class.absl::optional_internal::optional_data.2821" = type { %"class.absl::optional_internal::optional_data_base.2822" }
%"class.absl::optional_internal::optional_data_base.2822" = type { %"class.absl::optional_internal::optional_data_dtor_base.2823" }
%"class.absl::optional_internal::optional_data_dtor_base.2823" = type { i8, %union.anon.2824 }
%union.anon.2824 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2872 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2872 = type { %"class.std::__1::map.2875" }
%"class.std::__1::map.2875" = type { %"class.std::__1::__tree.2876" }
%"class.std::__1::__tree.2876" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2877", %"class.std::__1::__compressed_pair.2881" }
%"class.std::__1::__compressed_pair.2877" = type { %"struct.std::__1::__compressed_pair_elem.2340" }
%"class.std::__1::__compressed_pair.2881" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2886"*, i64 }
%"class.std::__1::unique_ptr.2886" = type opaque
%"class.std::__1::map.2887" = type { %"class.std::__1::__tree.2888" }
%"class.std::__1::__tree.2888" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2889", %"class.std::__1::__compressed_pair.2893" }
%"class.std::__1::__compressed_pair.2889" = type { %"struct.std::__1::__compressed_pair_elem.2340" }
%"class.std::__1::__compressed_pair.2893" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.mojo::ScopedHandleBase.2803" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2896" = type { %"class.std::__1::__compressed_pair.2897" }
%"class.std::__1::__compressed_pair.2897" = type { %"struct.std::__1::__compressed_pair_elem.2898" }
%"struct.std::__1::__compressed_pair_elem.2898" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.2904" = type { %"class.blink::MemberBase.2905" }
%"class.blink::MemberBase.2905" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.2793" = type { %"class.blink::MemberBase.2794" }
%"class.blink::MemberBase.2794" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.2660", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.2906" }
%"class.base::internal::flat_tree.2906" = type { %"class.std::__1::vector.2907" }
%"class.std::__1::vector.2907" = type { %"class.std::__1::__vector_base.2908" }
%"class.std::__1::__vector_base.2908" = type { %"struct.std::__1::pair.2909"*, %"struct.std::__1::pair.2909"*, %"class.std::__1::__compressed_pair.2910" }
%"struct.std::__1::pair.2909" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2910" = type { %"struct.std::__1::__compressed_pair_elem.2911" }
%"struct.std::__1::__compressed_pair_elem.2911" = type { %"struct.std::__1::pair.2909"* }
%"class.blink::Member.2915" = type { %"class.blink::MemberBase.2916" }
%"class.blink::MemberBase.2916" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.2917" = type { %"class.absl::optional_internal::optional_data.2918" }
%"class.absl::optional_internal::optional_data.2918" = type { %"class.absl::optional_internal::optional_data_base.2919" }
%"class.absl::optional_internal::optional_data_base.2919" = type { %"class.absl::optional_internal::optional_data_dtor_base.2920" }
%"class.absl::optional_internal::optional_data_dtor_base.2920" = type { i8, %union.anon.2921 }
%union.anon.2921 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.2922" = type { %"class.absl::optional_internal::optional_data.2923" }
%"class.absl::optional_internal::optional_data.2923" = type { %"class.absl::optional_internal::optional_data_base.2924" }
%"class.absl::optional_internal::optional_data_base.2924" = type { %"class.absl::optional_internal::optional_data_dtor_base.2925" }
%"class.absl::optional_internal::optional_data_dtor_base.2925" = type { i8, %union.anon.2926 }
%union.anon.2926 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2927" }
%"class.blink::HeapHashSet.2927" = type { %"class.WTF::HashSet.2930" }
%"class.WTF::HashSet.2930" = type { %"class.WTF::HashTable.2931" }
%"class.WTF::HashTable.2931" = type <{ %"class.blink::WeakMember.2933"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2933" = type opaque
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.2662" = type { %"class.blink::MemberBase.2663" }
%"class.blink::MemberBase.2663" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.2666", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.2668" = type { %"class.blink::MemberBase.2669" }
%"class.blink::MemberBase.2669" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.2670" = type { %"class.blink::MemberBase.2671" }
%"class.blink::MemberBase.2671" = type { %"class.blink::ChromeClient"* }
%"class.blink::Member.2672" = type { %"class.blink::MemberBase.2673" }
%"class.blink::MemberBase.2673" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.2674" = type { %"class.blink::MemberBase.2675" }
%"class.blink::MemberBase.2675" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.2676" = type { %"class.blink::MemberBase.2677" }
%"class.blink::MemberBase.2677" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.2678" = type { %"class.blink::MemberBase.2679" }
%"class.blink::MemberBase.2679" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.2680" = type { %"class.blink::MemberBase.2681" }
%"class.blink::MemberBase.2681" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.2682" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2683" }
%"class.blink::HeapHashSet.2683" = type { %"class.WTF::HashSet.2686" }
%"class.WTF::HashSet.2686" = type { %"class.WTF::HashTable.2687" }
%"class.WTF::HashTable.2687" = type <{ %"class.blink::WeakMember.2689"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2689" = type opaque
%"class.blink::Member.2690" = type { %"class.blink::MemberBase.2691" }
%"class.blink::MemberBase.2691" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.2692" = type { %"class.blink::MemberBase.2693" }
%"class.blink::MemberBase.2693" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.2694" = type { %"class.blink::MemberBase.2695" }
%"class.blink::MemberBase.2695" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.2696" = type { %"class.blink::MemberBase.2697" }
%"class.blink::MemberBase.2697" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.2698" = type { %"class.blink::MemberBase.2699" }
%"class.blink::MemberBase.2699" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.2700" = type { %"class.blink::MemberBase.2701" }
%"class.blink::MemberBase.2701" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type <{ %"class.blink::ScrollableArea", %"class.blink::Member.2666", %class.scoped_refptr.2704, %class.scoped_refptr.2705, %class.scoped_refptr.2705, %"class.blink::PropertyTreeStateOrAlias", %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.898, %class.scoped_refptr.903, %class.scoped_refptr.903, %"class.blink::FloatSize", float, i8, [3 x i8], %"class.blink::IntSize", float, float, i8, [7 x i8], %"struct.cc::ElementId", %"struct.cc::ElementId", i8, [7 x i8] }>
%class.scoped_refptr.2704 = type { %"class.cc::Layer"* }
%"class.cc::Layer" = type opaque
%class.scoped_refptr.2705 = type { %"class.cc::ScrollbarLayerBase"* }
%"class.cc::ScrollbarLayerBase" = type opaque
%"class.blink::Member.2706" = type { %"class.blink::MemberBase.2707" }
%"class.blink::MemberBase.2707" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.2708" = type { %"class.blink::MemberBase.2709" }
%"class.blink::MemberBase.2709" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.2710" = type { %"class.blink::MemberBase.2711" }
%"class.blink::MemberBase.2711" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.2712" = type { %"class.blink::MemberBase.2713" }
%"class.blink::MemberBase.2713" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.2714" = type { %"class.blink::MemberBase.2715" }
%"class.blink::MemberBase.2715" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.2716" }
%"class.WTF::Deque.2716" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2719" }
%"class.WTF::VectorBuffer.2719" = type { %"class.WTF::VectorBufferBase.2720" }
%"class.WTF::VectorBufferBase.2720" = type { %"class.std::__1::unique_ptr.2721"*, i32, i32 }
%"class.std::__1::unique_ptr.2721" = type { %"class.std::__1::__compressed_pair.2722" }
%"class.std::__1::__compressed_pair.2722" = type { %"struct.std::__1::__compressed_pair_elem.2723" }
%"struct.std::__1::__compressed_pair_elem.2723" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.2727", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2727" = type { %"class.std::__1::__bitset.2728" }
%"class.std::__1::__bitset.2728" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.2729" }
%"class.absl::optional.2729" = type { %"class.absl::optional_internal::optional_data.2730" }
%"class.absl::optional_internal::optional_data.2730" = type { %"class.absl::optional_internal::optional_data_base.2731" }
%"class.absl::optional_internal::optional_data_base.2731" = type { %"class.absl::optional_internal::optional_data_dtor_base.2732" }
%"class.absl::optional_internal::optional_data_dtor_base.2732" = type { i8, %union.anon.2733 }
%union.anon.2733 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.2734", i64, %"class.absl::optional.2303", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.2734" = type { %"class.absl::optional_internal::optional_data.2735" }
%"class.absl::optional_internal::optional_data.2735" = type { %"class.absl::optional_internal::optional_data_base.2736" }
%"class.absl::optional_internal::optional_data_base.2736" = type { %"class.absl::optional_internal::optional_data_dtor_base.2737" }
%"class.absl::optional_internal::optional_data_dtor_base.2737" = type { i8, %union.anon.2738 }
%union.anon.2738 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.2739" = type { %"class.std::__1::unique_ptr.2740" }
%"class.std::__1::unique_ptr.2740" = type { %"class.std::__1::__compressed_pair.2741" }
%"class.std::__1::__compressed_pair.2741" = type { %"struct.std::__1::__compressed_pair_elem.2742" }
%"struct.std::__1::__compressed_pair_elem.2742" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.2746" = type { %"class.WTF::HashSet.2749" }
%"class.WTF::HashSet.2749" = type { %"class.WTF::HashTable.2750" }
%"class.WTF::HashTable.2750" = type <{ %"class.blink::WeakMember.2752"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2752" = type opaque
%"class.blink::Member.2666" = type { %"class.blink::MemberBase.2667" }
%"class.blink::MemberBase.2667" = type { %"class.blink::Page"* }
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.2753" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.2753" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.2754" = type { %"class.std::__1::__compressed_pair.2755" }
%"class.std::__1::__compressed_pair.2755" = type { %"struct.std::__1::__compressed_pair_elem.2756" }
%"struct.std::__1::__compressed_pair_elem.2756" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2760" = type { %"class.std::__1::__compressed_pair.2761" }
%"class.std::__1::__compressed_pair.2761" = type { %"struct.std::__1::__compressed_pair_elem.2762" }
%"struct.std::__1::__compressed_pair_elem.2762" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.blink::(anonymous namespace)::PathBuilder" = type { i32 (...)**, %"class.std::__1::unique_ptr.2401" }
%"class.blink::CSSPropertyName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.2947, i32, i8, i8, [2 x i8] }>
%union.anon.2947 = type { %"class.WTF::Vector.2948" }
%"class.WTF::Vector.2948" = type { %"class.WTF::VectorBuffer.2949" }
%"class.WTF::VectorBuffer.2949" = type { %"class.WTF::VectorBufferBase.2511", [16 x i8] }
%"class.WTF::VectorBufferBase.2511" = type { i8*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::Text" = type { %"class.blink::CharacterData" }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.blink::ParkableString" = type { %class.scoped_refptr.2500 }
%class.scoped_refptr.2500 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.2501", %"class.WTF::String", %"class.std::__1::unique_ptr.2503" }
%"class.WTF::RefCounted.2501" = type { %"class.base::RefCounted.2502" }
%"class.base::RefCounted.2502" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2503" = type { %"class.std::__1::__compressed_pair.2504" }
%"class.std::__1::__compressed_pair.2504" = type { %"struct.std::__1::__compressed_pair_elem.2505" }
%"struct.std::__1::__compressed_pair_elem.2505" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.2506", %"class.std::__1::unique_ptr.2517", %"class.WTF::Vector.2523", i8, i32 }
%"class.std::__1::unique_ptr.2506" = type { %"class.std::__1::__compressed_pair.2507" }
%"class.std::__1::__compressed_pair.2507" = type { %"struct.std::__1::__compressed_pair_elem.2508" }
%"struct.std::__1::__compressed_pair_elem.2508" = type { %"class.WTF::Vector.2509"* }
%"class.WTF::Vector.2509" = type { %"class.WTF::VectorBuffer.2510" }
%"class.WTF::VectorBuffer.2510" = type { %"class.WTF::VectorBufferBase.2511" }
%"class.std::__1::unique_ptr.2517" = type { %"class.std::__1::__compressed_pair.2518" }
%"class.std::__1::__compressed_pair.2518" = type { %"struct.std::__1::__compressed_pair_elem.2519" }
%"struct.std::__1::__compressed_pair_elem.2519" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.2523" = type { %"class.WTF::VectorBuffer.2524" }
%"class.WTF::VectorBuffer.2524" = type { %"class.WTF::VectorBufferBase.2511", [32 x i8] }
%"class.blink::PseudoElement" = type <{ %"class.blink::Element", i8, [7 x i8] }>
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.354", %"class.WTF::Vector.2958" }
%"class.WTF::Vector.2958" = type { %"class.WTF::VectorBuffer.2959" }
%"class.WTF::VectorBuffer.2959" = type { %"class.WTF::VectorBufferBase.2960", [64 x i8] }
%"class.WTF::VectorBufferBase.2960" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::CSSComputedStyleDeclaration" = type <{ %"class.blink::CSSStyleDeclaration", %"class.blink::Member.318", i8, [7 x i8], %"class.WTF::AtomicString", i8, [7 x i8] }>
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2530" }
%"class.blink::WeakMember.2530" = type { %"class.blink::MemberBase.1007" }
%"class.blink::(anonymous namespace)::ShapePathBuilder" = type { %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::LocalFrameView"*, %"class.blink::LayoutObject"*, %"class.blink::ShapeOutsideInfo"* }
%"class.blink::ShapeOutsideInfo" = type <{ %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.2536", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::ShapeOutsideDeltas", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2536" = type { %"class.std::__1::__compressed_pair.2537" }
%"class.std::__1::__compressed_pair.2537" = type { %"struct.std::__1::__compressed_pair_elem.2538" }
%"struct.std::__1::__compressed_pair_elem.2538" = type { %"class.blink::Shape"* }
%"class.blink::Shape" = type { i32 (...)**, i8, float }
%"class.blink::ShapeOutsideDeltas" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"struct.blink::Shape::DisplayPaths" = type { %"class.blink::Path", %"class.blink::Path" }
%"class.WTF::Vector.2542" = type { %"class.WTF::VectorBuffer.2543" }
%"class.WTF::VectorBuffer.2543" = type { %"class.WTF::VectorBufferBase.2544" }
%"class.WTF::VectorBufferBase.2544" = type { %"class.blink::FloatQuad"*, i32, i32 }
%"class.blink::DisplayLockContext" = type <{ %"class.blink::LocalFrameView::LifecycleNotificationObserver", %"class.blink::WeakMember.2549", %"class.blink::WeakMember.1055", i32, [4 x i8], %"class.blink::HeapHashSet.1340", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i8, i8, i8, i8, i8, i8, [6 x i8], i8, i32, i8, i8, [2 x i8], %"class.absl::optional.2550", [4 x i8] }>
%"class.blink::LocalFrameView::LifecycleNotificationObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WeakMember.2549" = type { %"class.blink::MemberBase.344" }
%"class.absl::optional.2550" = type { %"class.absl::optional_internal::optional_data.2551" }
%"class.absl::optional_internal::optional_data.2551" = type { %"class.absl::optional_internal::optional_data_base.2552" }
%"class.absl::optional_internal::optional_data_base.2552" = type { %"class.absl::optional_internal::optional_data_dtor_base.2553" }
%"class.absl::optional_internal::optional_data_dtor_base.2553" = type { i8, %union.anon.2554 }
%union.anon.2554 = type { %"class.blink::FloatSize" }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.crdtp::ErrorSupport" = type { %"class.std::__1::vector.2561", %"class.std::__1::basic_string" }
%"class.std::__1::vector.2561" = type { %"class.std::__1::__vector_base.2562" }
%"class.std::__1::__vector_base.2562" = type { %"struct.crdtp::ErrorSupport::Segment"*, %"struct.crdtp::ErrorSupport::Segment"*, %"class.std::__1::__compressed_pair.2564" }
%"struct.crdtp::ErrorSupport::Segment" = type { i32, %union.anon.2563 }
%union.anon.2563 = type { i8* }
%"class.std::__1::__compressed_pair.2564" = type { %"struct.std::__1::__compressed_pair_elem.2565" }
%"struct.std::__1::__compressed_pair_elem.2565" = type { %"struct.crdtp::ErrorSupport::Segment"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.WTF::Vector.2531" = type { %"class.WTF::VectorBuffer.2532" }
%"class.WTF::VectorBuffer.2532" = type { %"class.WTF::VectorBufferBase.2533" }
%"class.WTF::VectorBufferBase.2533" = type { %"struct.blink::LayoutText::TextBoxInfo"*, i32, i32 }
%"struct.blink::LayoutText::TextBoxInfo" = type { %"class.blink::LayoutRect", i32, i32 }
%"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator" = type { %class.scoped_refptr.1712* }
%"class.base::CheckedContiguousIterator" = type { %"struct.blink::NGLink"*, %"struct.blink::NGLink"*, %"struct.blink::NGLink"* }
%"struct.blink::NGLink" = type { %"class.blink::NGPhysicalFragment"*, %"struct.blink::PhysicalOffset" }
%"struct.std::__1::pair.2991" = type { %"struct.blink::PhysicalRect", float }
%"class.WTF::Vector.2985" = type { %"class.WTF::VectorBuffer.2986" }
%"class.WTF::VectorBuffer.2986" = type { %"class.WTF::VectorBufferBase.2987" }
%"class.WTF::VectorBufferBase.2987" = type { %"class.WTF::Vector.2988"*, i32, i32 }
%"class.WTF::Vector.2988" = type { %"class.WTF::VectorBuffer.2989" }
%"class.WTF::VectorBuffer.2989" = type { %"class.WTF::VectorBufferBase.2990" }
%"class.WTF::VectorBufferBase.2990" = type { %"struct.std::__1::pair.2991"*, i32, i32 }
%"class.blink::NGPhysicalBoxFragment" = type { %"class.blink::NGPhysicalFragment", i24, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGInkOverflow", [0 x %"struct.blink::NGLink"] }
%"class.blink::NGInkOverflow" = type { %union.anon.2996 }
%union.anon.2996 = type { %"struct.blink::NGSingleInkOverflow"* }
%"struct.blink::NGSingleInkOverflow" = type { %"struct.blink::PhysicalRect" }
%"class.WTF::Vector.3011" = type { %"class.WTF::VectorBuffer.3012" }
%"class.WTF::VectorBuffer.3012" = type { %"class.WTF::VectorBufferBase.3013" }
%"class.WTF::VectorBufferBase.3013" = type { %"class.blink::LayoutUnit"*, i32, i32 }
%"class.blink::HeapHashMap.3016" = type { %"class.WTF::HashMap.3019" }
%"class.WTF::HashMap.3019" = type { %"class.WTF::HashTable.3020" }
%"class.WTF::HashTable.3020" = type <{ %"struct.WTF::KeyValuePair.3022"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3022" = type { %"class.blink::CSSPropertyName", %"class.blink::Member.1304" }
%"class.blink::LayoutNGGridInterface" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.blink::InspectorScrollSnapContainerHighlightConfig" = type { %"class.absl::optional.2382", %"class.absl::optional.2382", %"class.blink::Color", %"class.blink::Color" }
%"struct.blink::PathElement" = type { i32, %"class.blink::FloatPoint"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::Vector.2952" = type { %"class.WTF::VectorBuffer.2953" }
%"class.WTF::VectorBuffer.2953" = type { %"class.WTF::VectorBufferBase.2954", [16 x i8] }
%"class.WTF::VectorBufferBase.2954" = type { i16*, i32, i32 }
%"class.blink::LayoutGrid" = type <{ %"class.blink::LayoutBlock.base", [6 x i8], %"class.blink::LayoutNGGridInterface", %"class.std::__1::unique_ptr.3035", %"class.blink::GridTrackSizingAlgorithm", %"class.WTF::Vector.3011", %"class.WTF::Vector.3011", %"struct.blink::ContentAlignmentData", %"struct.blink::ContentAlignmentData", %"class.WTF::HashMap.3121", %"class.WTF::HashMap.3121", i8, i8, %"class.absl::optional.3126", [4 x i8] }>
%"class.std::__1::unique_ptr.3035" = type { %"class.std::__1::__compressed_pair.3036" }
%"class.std::__1::__compressed_pair.3036" = type { %"struct.std::__1::__compressed_pair_elem.3037" }
%"struct.std::__1::__compressed_pair_elem.3037" = type { %"class.blink::Grid"* }
%"class.blink::Grid" = type { i32 (...)**, %"class.blink::OrderIterator", i64, i64, i64, i64, i8, [7 x i8], %"class.WTF::HashMap.3047", %"class.WTF::HashMap.3052", %"class.std::__1::unique_ptr.3057", %"class.std::__1::unique_ptr.3057" }
%"class.blink::OrderIterator" = type <{ %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*, %"class.std::__1::set", %"class.std::__1::__tree_const_iterator", i8, [7 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree.3038" }
%"class.std::__1::__tree.3038" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3039", %"class.std::__1::__compressed_pair.3043" }
%"class.std::__1::__compressed_pair.3039" = type { %"struct.std::__1::__compressed_pair_elem.2340" }
%"class.std::__1::__compressed_pair.3043" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__tree_const_iterator" = type { %"class.std::__1::__tree_end_node"* }
%"class.WTF::HashMap.3047" = type { %"class.WTF::HashTable.3048" }
%"class.WTF::HashTable.3048" = type <{ %"struct.WTF::KeyValuePair.3051"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3051" = type { %"class.blink::LayoutBox"*, %"struct.blink::GridArea" }
%"class.WTF::HashMap.3052" = type { %"class.WTF::HashTable.3053" }
%"class.WTF::HashTable.3053" = type <{ %"struct.WTF::KeyValuePair.3056"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3056" = type { %"class.blink::LayoutBox"*, i64 }
%"class.std::__1::unique_ptr.3057" = type { %"class.std::__1::__compressed_pair.3058" }
%"class.std::__1::__compressed_pair.3058" = type { %"struct.std::__1::__compressed_pair_elem.3059" }
%"struct.std::__1::__compressed_pair_elem.3059" = type { %"class.WTF::LinkedHashSet.3060"* }
%"class.WTF::LinkedHashSet.3060" = type { %"class.WTF::HashMap.3061", %"class.WTF::VectorBackedLinkedList.3066" }
%"class.WTF::HashMap.3061" = type { %"class.WTF::HashTable.3062" }
%"class.WTF::HashTable.3062" = type <{ %"struct.WTF::KeyValuePair.3065"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3065" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::VectorBackedLinkedList.3066" = type { %"class.WTF::Vector.3067", i32, i32 }
%"class.WTF::Vector.3067" = type { %"class.WTF::VectorBuffer.3068" }
%"class.WTF::VectorBuffer.3068" = type { %"class.WTF::VectorBufferBase.3069" }
%"class.WTF::VectorBufferBase.3069" = type { %"class.WTF::VectorBackedLinkedListNode.3070"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.3070" = type { i32, i32, i64 }
%"class.blink::GridTrackSizingAlgorithm" = type { i8, i8, %"class.absl::optional.2067", %"class.absl::optional.2067", %"class.absl::optional.2067", %"class.absl::optional.2067", %"class.WTF::Vector.3079", %"class.WTF::Vector.3079", %"class.WTF::Vector.2368", %"class.WTF::Vector.2368", %"class.WTF::Vector.2368", i32, %"class.blink::Grid"*, %"class.blink::LayoutGrid"*, %"class.std::__1::unique_ptr.3089", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, [4 x i8], %"class.blink::GridBaselineAlignment", %"class.WTF::HashMap.3115", %"class.WTF::HashMap.3115" }
%"class.WTF::Vector.3079" = type { %"class.WTF::VectorBuffer.3080" }
%"class.WTF::VectorBuffer.3080" = type { %"class.WTF::VectorBufferBase.3081" }
%"class.WTF::VectorBufferBase.3081" = type { %"class.blink::GridTrack"*, i32, i32 }
%"class.blink::GridTrack" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.absl::optional.2067", i8, [7 x i8], %"class.absl::optional.3082" }
%"class.absl::optional.3082" = type { %"class.absl::optional_internal::optional_data.3083" }
%"class.absl::optional_internal::optional_data.3083" = type { %"class.absl::optional_internal::optional_data_base.3084" }
%"class.absl::optional_internal::optional_data_base.3084" = type { %"class.absl::optional_internal::optional_data_dtor_base.3085" }
%"class.absl::optional_internal::optional_data_dtor_base.3085" = type { i8, [7 x i8], %union.anon.3086 }
%union.anon.3086 = type { %"class.blink::GridTrackSize" }
%"class.std::__1::unique_ptr.3089" = type { %"class.std::__1::__compressed_pair.3090" }
%"class.std::__1::__compressed_pair.3090" = type { %"struct.std::__1::__compressed_pair_elem.3091" }
%"struct.std::__1::__compressed_pair_elem.3091" = type { %"class.blink::GridTrackSizingAlgorithmStrategy"* }
%"class.blink::GridTrackSizingAlgorithmStrategy" = type { i32 (...)**, %"class.blink::GridTrackSizingAlgorithm"* }
%"class.blink::GridBaselineAlignment" = type { i8, [7 x i8], %"class.WTF::HashMap.3095", %"class.WTF::HashMap.3095" }
%"class.WTF::HashMap.3095" = type { %"class.WTF::HashTable.3096" }
%"class.WTF::HashTable.3096" = type <{ %"struct.WTF::KeyValuePair.3099"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3099" = type { i32, %"class.std::__1::unique_ptr.3100" }
%"class.std::__1::unique_ptr.3100" = type { %"class.std::__1::__compressed_pair.3101" }
%"class.std::__1::__compressed_pair.3101" = type { %"struct.std::__1::__compressed_pair_elem.3102" }
%"struct.std::__1::__compressed_pair_elem.3102" = type { %"class.blink::BaselineContext"* }
%"class.blink::BaselineContext" = type { %"class.WTF::Vector.3103" }
%"class.WTF::Vector.3103" = type { %"class.WTF::VectorBuffer.3104" }
%"class.WTF::VectorBuffer.3104" = type { %"class.WTF::VectorBufferBase.3105" }
%"class.WTF::VectorBufferBase.3105" = type { %"class.blink::BaselineGroup"*, i32, i32 }
%"class.blink::BaselineGroup" = type { i8, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::HashSet.3106" }
%"class.WTF::HashSet.3106" = type { %"class.WTF::HashTable.3107" }
%"class.WTF::HashTable.3107" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.3115" = type { %"class.WTF::HashTable.3116" }
%"class.WTF::HashTable.3116" = type <{ %"struct.WTF::KeyValuePair.3119"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3119" = type <{ %"class.blink::LayoutBox"*, i8, [7 x i8] }>
%"struct.blink::ContentAlignmentData" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashMap.3121" = type { %"class.WTF::HashTable.3122" }
%"class.WTF::HashTable.3122" = type <{ %"struct.WTF::KeyValuePair.3125"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3125" = type opaque
%"class.absl::optional.3126" = type { %"class.absl::optional_internal::optional_data.3127" }
%"class.absl::optional_internal::optional_data.3127" = type { %"class.absl::optional_internal::optional_data_base.3128" }
%"class.absl::optional_internal::optional_data_base.3128" = type { %"class.absl::optional_internal::optional_data_dtor_base.3129" }
%"class.absl::optional_internal::optional_data_dtor_base.3129" = type { i8, %union.anon.3130 }
%union.anon.3130 = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZNK5blink9LayoutBox22PhysicalContentBoxRectEv = comdat any

$_ZN5blink8protocol16ValueConversionsINSt3__16vectorINS2_10unique_ptrINS3_IdNS2_9allocatorIdEEEENS2_14default_deleteIS7_EEEENS5_ISA_EEEEE7toValueEPSC_ = comdat any

$_ZN5blink8protocol16ValueConversionsINSt3__16vectorINS2_10unique_ptrINS0_5ValueENS2_14default_deleteIS5_EEEENS2_9allocatorIS8_EEEEE9fromValueEPS5_PN5crdtp12ErrorSupportE = comdat any

$_ZN5blink37InspectorFlexContainerHighlightConfigD2Ev = comdat any

$_ZNK5blink9LayoutBox10ClientLeftEv = comdat any

$_ZNK5blink9LayoutBox9ClientTopEv = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13CSSPropertyIDEEEmm = comdat any

$_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK4base25CheckedContiguousIteratorIKN5blink6NGLinkEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKN5blink6NGLinkEEppEv = comdat any

$_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKN5blink6NGLinkEEC2EPS3_S5_S5_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKN5blink6NGLinkEE15CheckComparableERKS4_ = comdat any

$_ZN3WTF6VectorINS0_INSt3__14pairIN5blink12PhysicalRectEfEELj0ENS_18PartitionAllocatorEEELj0ES6_E16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorINSt3__14pairIN5blink12PhysicalRectEfEELj0ES0_EEEEmm = comdat any

$_ZN3WTF6VectorINS0_INSt3__14pairIN5blink12PhysicalRectEfEELj0ENS_18PartitionAllocatorEEELj0ES6_E2atEj = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink12PhysicalRectEfEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS5_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink12PhysicalRectEfEEEEmm = comdat any

$_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6AppendIS1_EEvPKT_j = comdat any

$_ZNK3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EERKS2_EEPKS8_RKT0_ = comdat any

$_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8GridAreaEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8GridAreaEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8GridAreaEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8GridAreaEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_SC_SD_EERKS1_RKS5_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8GridAreaEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZNSt3__16vectorINS_10unique_ptrINS0_IdNS_9allocatorIdEEEENS_14default_deleteIS4_EEEENS2_IS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_ = comdat any

$_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE7reserveEm = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_ = comdat any

$_ZTVN5blink22InspectorHighlightBaseE = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink18InspectorHighlightE = hidden unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* null, i8* bitcast (%"class.blink::protocol::DictionaryValue"* (%"class.blink::InspectorHighlight"*)* @_ZNK5blink18InspectorHighlight15AsProtocolValueEv to i8*)] }, align 8
@_ZTVN5blink22InspectorHighlightBaseE = linkonce_odr hidden unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [5 x i8] c"path\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"fillColor\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"outlineColor\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@_ZTVN5blink29InspectorSourceOrderHighlightE = hidden unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* null, i8* bitcast (%"class.blink::protocol::DictionaryValue"* (%"class.blink::InspectorSourceOrderHighlight"*)* @_ZNK5blink29InspectorSourceOrderHighlight15AsProtocolValueEv to i8*)] }, align 8
@.ref.tmp.4 = private constant %"class.blink::Color" zeroinitializer, align 4
@.str.5 = private unnamed_addr constant [7 x i8] c"border\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"paths\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"sourceOrder\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"isLocked\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"isLockedAncestor\00", align 1
@.str.10 = private unnamed_addr constant [22 x i8] c"showAccessibilityInfo\00", align 1
@.ref.tmp.12 = private constant %"class.blink::Color" zeroinitializer, align 4
@.ref.tmp.13 = private constant %"class.blink::Color" zeroinitializer, align 4
@.ref.tmp.14 = private constant %"class.blink::Color" zeroinitializer, align 4
@.ref.tmp.15 = private constant %"class.blink::Color" zeroinitializer, align 4
@.str.16 = private unnamed_addr constant [8 x i8] c"content\00", align 1
@.ref.tmp.17 = private constant %"class.blink::Color" zeroinitializer, align 4
@.str.18 = private unnamed_addr constant [8 x i8] c"padding\00", align 1
@.ref.tmp.19 = private constant %"class.blink::Color" zeroinitializer, align 4
@.ref.tmp.20 = private constant %"class.blink::Color" zeroinitializer, align 4
@.str.21 = private unnamed_addr constant [7 x i8] c"margin\00", align 1
@.str.23 = private unnamed_addr constant [11 x i8] c"showRulers\00", align 1
@.str.24 = private unnamed_addr constant [19 x i8] c"showExtensionLines\00", align 1
@.str.25 = private unnamed_addr constant [12 x i8] c"colorFormat\00", align 1
@.str.26 = private unnamed_addr constant [4 x i8] c"rgb\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"hsl\00", align 1
@.str.28 = private unnamed_addr constant [4 x i8] c"hex\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"boxes\00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"style\00", align 1
@.str.31 = private unnamed_addr constant [13 x i8] c"distanceInfo\00", align 1
@.str.32 = private unnamed_addr constant [12 x i8] c"elementInfo\00", align 1
@.str.33 = private unnamed_addr constant [9 x i8] c"gridInfo\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"flexInfo\00", align 1
@.str.35 = private unnamed_addr constant [13 x i8] c"flexItemInfo\00", align 1
@.str.36 = private unnamed_addr constant [9 x i8] c"snapport\00", align 1
@.str.37 = private unnamed_addr constant [11 x i8] c"paddingBox\00", align 1
@.str.38 = private unnamed_addr constant [10 x i8] c"borderBox\00", align 1
@.str.39 = private unnamed_addr constant [10 x i8] c"snapAreas\00", align 1
@.str.40 = private unnamed_addr constant [15 x i8] c"snapportBorder\00", align 1
@.str.41 = private unnamed_addr constant [15 x i8] c"snapAreaBorder\00", align 1
@.str.42 = private unnamed_addr constant [18 x i8] c"scrollMarginColor\00", align 1
@.str.43 = private unnamed_addr constant [19 x i8] c"scrollPaddingColor\00", align 1
@.str.44 = private unnamed_addr constant [6 x i8] c"solid\00", align 1
@_ZTVN5blink12_GLOBAL__N_111PathBuilderE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::PathBuilder"*)* @_ZN5blink12_GLOBAL__N_111PathBuilderD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::PathBuilder"*)* @_ZN5blink12_GLOBAL__N_111PathBuilderD0Ev to i8*), i8* bitcast (<2 x float> (%"class.blink::(anonymous namespace)::PathBuilder"*, %"class.blink::FloatPoint"*)* @_ZN5blink12_GLOBAL__N_111PathBuilder14TranslatePointERKNS_10FloatPointE to i8*)] }, align 8
@.str.45 = private unnamed_addr constant [2 x i8] c"M\00", align 1
@.str.46 = private unnamed_addr constant [2 x i8] c"L\00", align 1
@.str.47 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.48 = private unnamed_addr constant [2 x i8] c"Q\00", align 1
@.str.49 = private unnamed_addr constant [2 x i8] c"Z\00", align 1
@_ZTVN5blink8protocol11StringValueE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZTVN5blink8protocol16FundamentalValueE = external unnamed_addr constant { [11 x i8*] }, align 8
@.str.50 = private unnamed_addr constant [8 x i8] c"tagName\00", align 1
@.str.51 = private unnamed_addr constant [8 x i8] c"idValue\00", align 1
@.str.52 = private unnamed_addr constant [9 x i8] c"::before\00", align 1
@.str.53 = private unnamed_addr constant [8 x i8] c"::after\00", align 1
@.str.54 = private unnamed_addr constant [9 x i8] c"::marker\00", align 1
@.str.55 = private unnamed_addr constant [10 x i8] c"className\00", align 1
@.str.56 = private unnamed_addr constant [10 x i8] c"nodeWidth\00", align 1
@.str.57 = private unnamed_addr constant [11 x i8] c"nodeHeight\00", align 1
@.str.58 = private unnamed_addr constant [20 x i8] c"isKeyboardFocusable\00", align 1
@.str.59 = private unnamed_addr constant [15 x i8] c"accessibleName\00", align 1
@.str.60 = private unnamed_addr constant [15 x i8] c"accessibleRole\00", align 1
@.str.61 = private unnamed_addr constant [17 x i8] c"layoutObjectName\00", align 1
@_ZN5blink10html_names7kIdAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.62 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.63 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.64 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.65 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::AtomicString]\00", align 1
@.str.66 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.68 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.69 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.70 = private unnamed_addr constant [6 x i8] c"#text\00", align 1
@.str.71 = private unnamed_addr constant [9 x i8] c"fontSize\00", align 1
@.str.72 = private unnamed_addr constant [11 x i8] c"fontWeight\00", align 1
@.str.73 = private unnamed_addr constant [16 x i8] c"backgroundColor\00", align 1
@.str.74 = private unnamed_addr constant [18 x i8] c"contrastAlgorithm\00", align 1
@.str.75 = private unnamed_addr constant [12 x i8] c"textOpacity\00", align 1
@.str.76 = private unnamed_addr constant [9 x i8] c"contrast\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13CSSPropertyIDEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSPropertyID]\00", align 1
@_ZN5blink8protocol7Overlay21ContrastAlgorithmEnum2AaE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Overlay21ContrastAlgorithmEnum3AaaE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Overlay21ContrastAlgorithmEnum4ApcaE = external constant [0 x i8], align 1
@.str.77 = private unnamed_addr constant [18 x i8] c"#%02X%02X%02X%02X\00", align 1
@_ZTVN5blink12_GLOBAL__N_116ShapePathBuilderE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::PathBuilder"*)* @_ZN5blink12_GLOBAL__N_111PathBuilderD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::ShapePathBuilder"*)* @_ZN5blink12_GLOBAL__N_116ShapePathBuilderD0Ev to i8*), i8* bitcast (<2 x float> (%"class.blink::(anonymous namespace)::ShapePathBuilder"*, %"class.blink::FloatPoint"*)* @_ZN5blink12_GLOBAL__N_116ShapePathBuilder14TranslatePointERKNS_10FloatPointE to i8*)] }, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E = external local_unnamed_addr global i8, align 1
@.str.80 = private unnamed_addr constant [11 x i8] c"itemBorder\00", align 1
@.str.81 = private unnamed_addr constant [9 x i8] c"baseline\00", align 1
@.str.82 = private unnamed_addr constant [16 x i8] c"containerBorder\00", align 1
@.str.83 = private unnamed_addr constant [6 x i8] c"lines\00", align 1
@.str.84 = private unnamed_addr constant [17 x i8] c"isHorizontalFlow\00", align 1
@.str.85 = private unnamed_addr constant [10 x i8] c"isReverse\00", align 1
@.str.86 = private unnamed_addr constant [16 x i8] c"alignItemsStyle\00", align 1
@.str.87 = private unnamed_addr constant [8 x i8] c"mainGap\00", align 1
@.str.88 = private unnamed_addr constant [9 x i8] c"crossGap\00", align 1
@.str.89 = private unnamed_addr constant [29 x i8] c"flexContainerHighlightConfig\00", align 1
@.str.90 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.91 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.92 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.93 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.94 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@.str.95 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINSt3__14pairIN5blink12PhysicalRectEfEELj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [131 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<std::__1::pair<blink::PhysicalRect, float>, 0, WTF::PartitionAllocator>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIN5blink12PhysicalRectEfEEEEPKcv = private unnamed_addr constant [90 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<blink::PhysicalRect, float>]\00", align 1
@.str.96 = private unnamed_addr constant [14 x i8] c"lineSeparator\00", align 1
@.str.97 = private unnamed_addr constant [14 x i8] c"itemSeparator\00", align 1
@.str.98 = private unnamed_addr constant [21 x i8] c"mainDistributedSpace\00", align 1
@.str.99 = private unnamed_addr constant [22 x i8] c"crossDistributedSpace\00", align 1
@.str.100 = private unnamed_addr constant [12 x i8] c"rowGapSpace\00", align 1
@.str.101 = private unnamed_addr constant [15 x i8] c"columnGapSpace\00", align 1
@.str.102 = private unnamed_addr constant [15 x i8] c"crossAlignment\00", align 1
@.str.103 = private unnamed_addr constant [11 x i8] c"hatchColor\00", align 1
@.str.106 = private unnamed_addr constant [9 x i8] c"baseSize\00", align 1
@.str.107 = private unnamed_addr constant [10 x i8] c"boxSizing\00", align 1
@.str.108 = private unnamed_addr constant [24 x i8] c"flexItemHighlightConfig\00", align 1
@.str.109 = private unnamed_addr constant [12 x i8] c"baseSizeBox\00", align 1
@.str.110 = private unnamed_addr constant [15 x i8] c"baseSizeBorder\00", align 1
@.str.111 = private unnamed_addr constant [17 x i8] c"flexibilityArrow\00", align 1
@_ZTVN5blink8protocol3DOM8BoxModelE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol3DOM16ShapeOutsideInfoE = external unnamed_addr constant { [5 x i8*] }, align 8
@.str.112 = private unnamed_addr constant [14 x i8] c"rotationAngle\00", align 1
@.str.113 = private unnamed_addr constant [12 x i8] c"writingMode\00", align 1
@.str.114 = private unnamed_addr constant [17 x i8] c"columnTrackSizes\00", align 1
@.str.115 = private unnamed_addr constant [14 x i8] c"rowTrackSizes\00", align 1
@.str.116 = private unnamed_addr constant [5 x i8] c"rows\00", align 1
@.str.117 = private unnamed_addr constant [8 x i8] c"rowGaps\00", align 1
@.str.118 = private unnamed_addr constant [8 x i8] c"columns\00", align 1
@.str.119 = private unnamed_addr constant [11 x i8] c"columnGaps\00", align 1
@.str.120 = private unnamed_addr constant [31 x i8] c"positiveRowLineNumberPositions\00", align 1
@.str.121 = private unnamed_addr constant [34 x i8] c"positiveColumnLineNumberPositions\00", align 1
@.str.122 = private unnamed_addr constant [31 x i8] c"negativeRowLineNumberPositions\00", align 1
@.str.123 = private unnamed_addr constant [34 x i8] c"negativeColumnLineNumberPositions\00", align 1
@.str.124 = private unnamed_addr constant [10 x i8] c"areaNames\00", align 1
@.str.125 = private unnamed_addr constant [19 x i8] c"rowLineNameOffsets\00", align 1
@.str.126 = private unnamed_addr constant [22 x i8] c"columnLineNameOffsets\00", align 1
@.str.127 = private unnamed_addr constant [11 x i8] c"gridBorder\00", align 1
@.str.128 = private unnamed_addr constant [20 x i8] c"gridHighlightConfig\00", align 1
@.str.129 = private unnamed_addr constant [14 x i8] c"isPrimaryGrid\00", align 1
@.str.130 = private unnamed_addr constant [12 x i8] c"vertical-lr\00", align 1
@.str.131 = private unnamed_addr constant [12 x i8] c"vertical-rl\00", align 1
@.str.132 = private unnamed_addr constant [14 x i8] c"horizontal-tb\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.133 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@.str.134 = private unnamed_addr constant [13 x i8] c"computedSize\00", align 1
@.str.135 = private unnamed_addr constant [13 x i8] c"authoredSize\00", align 1
@.str.136 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.137 = private unnamed_addr constant [2 x i8] c"y\00", align 1
@.str.138 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEN5blink8GridAreaEEEEEPKcv = private unnamed_addr constant [95 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, blink::GridArea>]\00", align 1
@.str.139 = private unnamed_addr constant [15 x i8] c"gridBorderDash\00", align 1
@.str.140 = private unnamed_addr constant [12 x i8] c"rowLineDash\00", align 1
@.str.141 = private unnamed_addr constant [15 x i8] c"columnLineDash\00", align 1
@.str.142 = private unnamed_addr constant [23 x i8] c"showGridExtensionLines\00", align 1
@.str.143 = private unnamed_addr constant [24 x i8] c"showPositiveLineNumbers\00", align 1
@.str.144 = private unnamed_addr constant [24 x i8] c"showNegativeLineNumbers\00", align 1
@.str.145 = private unnamed_addr constant [14 x i8] c"showAreaNames\00", align 1
@.str.146 = private unnamed_addr constant [14 x i8] c"showLineNames\00", align 1
@.str.148 = private unnamed_addr constant [16 x i8] c"gridBorderColor\00", align 1
@.str.150 = private unnamed_addr constant [13 x i8] c"rowLineColor\00", align 1
@.str.152 = private unnamed_addr constant [16 x i8] c"columnLineColor\00", align 1
@.str.154 = private unnamed_addr constant [12 x i8] c"rowGapColor\00", align 1
@.str.156 = private unnamed_addr constant [15 x i8] c"columnGapColor\00", align 1
@.str.158 = private unnamed_addr constant [14 x i8] c"rowHatchColor\00", align 1
@.str.160 = private unnamed_addr constant [17 x i8] c"columnHatchColor\00", align 1
@.str.162 = private unnamed_addr constant [16 x i8] c"areaBorderColor\00", align 1
@.str.164 = private unnamed_addr constant [20 x i8] c"gridBackgroundColor\00", align 1
@.str.165 = private unnamed_addr constant [11 x i8] c"alignBlock\00", align 1
@.str.166 = private unnamed_addr constant [12 x i8] c"alignInline\00", align 1
@.str.167 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.168 = private unnamed_addr constant [6 x i8] c"start\00", align 1
@.str.169 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@.str.170 = private unnamed_addr constant [7 x i8] c"center\00", align 1
@.str.171 = private unnamed_addr constant [6 x i8] c"color\00", align 1
@.str.172 = private unnamed_addr constant [8 x i8] c"pattern\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.174 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.175 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.176 = private unnamed_addr constant [15 x i8] c"array expected\00", align 1
@.str.177 = private unnamed_addr constant [15 x i8] c"value expected\00", align 1
@"__const._ZNSt3__127__insertion_sort_incompleteIRZN5blink22BuildSnapContainerInfoEPNS1_4NodeEE3$_0PN2cc12SnapAreaDataEEEbT0_S9_T_.__t" = private unnamed_addr constant { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, [7 x i8], %"struct.cc::ElementId" } { %"struct.cc::ScrollSnapAlign" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::RectF" { %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::SizeF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.cc::ElementId" { i64 -6148914691236517206 } }, align 8

@_ZN5blink24InspectorHighlightConfigC1Ev = hidden unnamed_addr alias void (%"struct.blink::InspectorHighlightConfig"*), void (%"struct.blink::InspectorHighlightConfig"*)* @_ZN5blink24InspectorHighlightConfigC2Ev
@_ZN5blink18InspectorHighlightC1Ef = hidden unnamed_addr alias void (%"class.blink::InspectorHighlight"*, float), void (%"class.blink::InspectorHighlight"*, float)* @_ZN5blink18InspectorHighlightC2Ef
@_ZN5blink26InspectorSourceOrderConfigC1Ev = hidden unnamed_addr alias void (%"struct.blink::InspectorSourceOrderConfig"*), void (%"struct.blink::InspectorSourceOrderConfig"*)* @_ZN5blink26InspectorSourceOrderConfigC2Ev
@_ZN5blink9LineStyleC1Ev = hidden unnamed_addr alias void (%"struct.blink::LineStyle"*), void (%"struct.blink::LineStyle"*)* @_ZN5blink9LineStyleC2Ev
@_ZN5blink8BoxStyleC1Ev = hidden unnamed_addr alias void (%"struct.blink::BoxStyle"*), void (%"struct.blink::BoxStyle"*)* @_ZN5blink8BoxStyleC2Ev
@_ZN5blink28InspectorGridHighlightConfigC1Ev = hidden unnamed_addr alias void (%"struct.blink::InspectorGridHighlightConfig"*), void (%"struct.blink::InspectorGridHighlightConfig"*)* @_ZN5blink28InspectorGridHighlightConfigC2Ev
@_ZN5blink37InspectorFlexContainerHighlightConfigC1Ev = hidden unnamed_addr alias void (%"struct.blink::InspectorFlexContainerHighlightConfig"*), void (%"struct.blink::InspectorFlexContainerHighlightConfig"*)* @_ZN5blink37InspectorFlexContainerHighlightConfigC2Ev
@_ZN5blink32InspectorFlexItemHighlightConfigC1Ev = hidden unnamed_addr alias void (%"struct.blink::InspectorFlexItemHighlightConfig"*), void (%"struct.blink::InspectorFlexItemHighlightConfig"*)* @_ZN5blink32InspectorFlexItemHighlightConfigC2Ev
@_ZN5blink29InspectorSourceOrderHighlightC1EPNS_4NodeENS_5ColorEi = hidden unnamed_addr alias void (%"class.blink::InspectorSourceOrderHighlight"*, %"class.blink::Node"*, i32, i32), void (%"class.blink::InspectorSourceOrderHighlight"*, %"class.blink::Node"*, i32, i32)* @_ZN5blink29InspectorSourceOrderHighlightC2EPNS_4NodeENS_5ColorEi
@_ZN5blink18InspectorHighlightC1EPNS_4NodeERKNS_24InspectorHighlightConfigERKNS_30InspectorHighlightContrastInfoEbb26NodeContentVisibilityState = hidden unnamed_addr alias void (%"class.blink::InspectorHighlight"*, %"class.blink::Node"*, %"struct.blink::InspectorHighlightConfig"*, %"struct.blink::InspectorHighlightContrastInfo"*, i1, i1, i32), void (%"class.blink::InspectorHighlight"*, %"class.blink::Node"*, %"struct.blink::InspectorHighlightConfig"*, %"struct.blink::InspectorHighlightContrastInfo"*, i1, i1, i32)* @_ZN5blink18InspectorHighlightC2EPNS_4NodeERKNS_24InspectorHighlightConfigERKNS_30InspectorHighlightContrastInfoEbb26NodeContentVisibilityState
@_ZN5blink18InspectorHighlightD1Ev = hidden unnamed_addr alias void (%"class.blink::InspectorHighlight"*), void (%"class.blink::InspectorHighlight"*)* @_ZN5blink18InspectorHighlightD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink24InspectorHighlightConfigC2Ev(%"struct.blink::InspectorHighlightConfig"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %0, i64 0, i32 13
  %3 = bitcast %"struct.blink::InspectorHighlightConfig"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 40, i1 false)
  store i8 1, i8* %2, align 8
  %4 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %0, i64 0, i32 14, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %4, align 8
  %5 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %0, i64 0, i32 15
  store i32 1, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %0, i64 0, i32 16
  %7 = bitcast i32* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 28, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorHighlightC2Ef(%"class.blink::InspectorHighlight"* nocapture, float) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink22InspectorHighlightBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = tail call i8* @_Znwm(i64 40) #18
  %5 = bitcast i8* %4 to %"class.blink::protocol::ListValue"*
  tail call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %5) #19
  %6 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = bitcast %"class.blink::protocol::ListValue"** %6 to i8**
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 0, i32 2
  store float %1, float* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink18InspectorHighlightE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %9 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 11
  %11 = bitcast %"class.std::__1::unique_ptr.2420"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 66, i1 false)
  store i8 1, i8* %10, align 2
  %12 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 12
  store i32 1, i32* %12, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22InspectorHighlightBaseC2Ef(%"class.blink::InspectorHighlightBase"* nocapture, float) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorHighlightBase", %"class.blink::InspectorHighlightBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink22InspectorHighlightBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = tail call i8* @_Znwm(i64 40) #18
  %5 = bitcast i8* %4 to %"class.blink::protocol::ListValue"*
  tail call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %5) #19
  %6 = getelementptr inbounds %"class.blink::InspectorHighlightBase", %"class.blink::InspectorHighlightBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = bitcast %"class.blink::protocol::ListValue"** %6 to i8**
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds %"class.blink::InspectorHighlightBase", %"class.blink::InspectorHighlightBase"* %0, i64 0, i32 2
  store float %1, float* %8, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink26InspectorSourceOrderConfigC2Ev(%"struct.blink::InspectorSourceOrderConfig"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::InspectorSourceOrderConfig", %"struct.blink::InspectorSourceOrderConfig"* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"struct.blink::InspectorSourceOrderConfig", %"struct.blink::InspectorSourceOrderConfig"* %0, i64 0, i32 1, i32 0
  store i32 0, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink9LineStyleC2Ev(%"struct.blink::LineStyle"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::LineStyle", %"struct.blink::LineStyle"* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"struct.blink::LineStyle", %"struct.blink::LineStyle"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink8BoxStyleC2Ev(%"struct.blink::BoxStyle"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::BoxStyle", %"struct.blink::BoxStyle"* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"struct.blink::BoxStyle", %"struct.blink::BoxStyle"* %0, i64 0, i32 1, i32 0
  store i32 0, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink28InspectorGridHighlightConfigC2Ev(%"struct.blink::InspectorGridHighlightConfig"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.blink::InspectorGridHighlightConfig"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 45, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink37InspectorFlexContainerHighlightConfigC2Ev(%"struct.blink::InspectorFlexContainerHighlightConfig"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 4
  %7 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %8, align 4
  %9 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink32InspectorFlexItemHighlightConfigC2Ev(%"struct.blink::InspectorFlexItemHighlightConfig"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::InspectorFlexItemHighlightConfig", %"struct.blink::InspectorFlexItemHighlightConfig"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 4
  %3 = getelementptr inbounds %"struct.blink::InspectorFlexItemHighlightConfig", %"struct.blink::InspectorFlexItemHighlightConfig"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"struct.blink::InspectorFlexItemHighlightConfig", %"struct.blink::InspectorFlexItemHighlightConfig"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22InspectorHighlightBaseC2EPNS_4NodeE(%"class.blink::InspectorHighlightBase"* nocapture, %"class.blink::Node"* nocapture readonly) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorHighlightBase", %"class.blink::InspectorHighlightBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink22InspectorHighlightBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = tail call i8* @_Znwm(i64 40) #18
  %5 = bitcast i8* %4 to %"class.blink::protocol::ListValue"*
  tail call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %5) #19
  %6 = getelementptr inbounds %"class.blink::InspectorHighlightBase", %"class.blink::InspectorHighlightBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = bitcast %"class.blink::protocol::ListValue"** %6 to i8**
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds %"class.blink::InspectorHighlightBase", %"class.blink::InspectorHighlightBase"* %0, i64 0, i32 2
  store float 1.000000e+00, float* %8, align 8
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::Document"*, %"class.blink::Document"** %11, align 8
  %13 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %12) #19
  %14 = icmp eq %"class.blink::LocalFrameView"* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %2
  %16 = tail call %"class.blink::ChromeClient"* @_ZNK5blink14LocalFrameView15GetChromeClientEv(%"class.blink::LocalFrameView"* nonnull %13) #19
  %17 = getelementptr inbounds %"class.blink::LocalFrameView", %"class.blink::LocalFrameView"* %13, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %17, align 8
  %19 = bitcast %"class.blink::ChromeClient"* %16 to float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)***
  %20 = load float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)**, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*** %19, align 8
  %21 = getelementptr inbounds float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)** %20, i64 3
  %22 = load float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)** %21, align 8
  %23 = tail call float %22(%"class.blink::ChromeClient"* %16, %"class.blink::LocalFrame"* %18, float 1.000000e+00) #19
  %24 = fdiv float 1.000000e+00, %23
  store float %24, float* %8, align 8
  br label %25

25:                                               ; preds = %2, %15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink22InspectorHighlightBase14BuildNodeQuadsEPNS_4NodeEPNS_9FloatQuadES4_S4_S4_(%"class.blink::Node"* nocapture readonly, %"class.blink::FloatQuad"* nocapture, %"class.blink::FloatQuad"* nocapture, %"class.blink::FloatQuad"* nocapture, %"class.blink::FloatQuad"* nocapture) local_unnamed_addr #4 align 2 {
  %6 = alloca <2 x float>, align 8
  %7 = alloca <2 x float>, align 8
  %8 = alloca %"class.blink::FloatQuad", align 8
  %9 = alloca %"class.blink::FloatQuad", align 8
  %10 = alloca %"class.blink::FloatQuad", align 8
  %11 = alloca %"class.blink::FloatQuad", align 8
  %12 = alloca <2 x float>, align 8
  %13 = alloca <2 x float>, align 8
  %14 = alloca <2 x float>, align 8
  %15 = alloca <2 x float>, align 8
  %16 = alloca <2 x float>, align 8
  %17 = alloca <2 x float>, align 8
  %18 = alloca <2 x float>, align 8
  %19 = alloca <2 x float>, align 8
  %20 = alloca <2 x float>, align 8
  %21 = alloca <2 x float>, align 8
  %22 = alloca <2 x float>, align 8
  %23 = alloca <2 x float>, align 8
  %24 = alloca <2 x float>, align 8
  %25 = alloca <2 x float>, align 8
  %26 = alloca <2 x float>, align 8
  %27 = alloca <2 x float>, align 8
  %28 = alloca <2 x float>, align 8
  %29 = alloca <2 x float>, align 8
  %30 = alloca <2 x float>, align 8
  %31 = alloca <2 x float>, align 8
  %32 = alloca <2 x float>, align 8
  %33 = alloca <2 x float>, align 8
  %34 = alloca <2 x float>, align 8
  %35 = alloca <2 x float>, align 8
  %36 = alloca <2 x float>, align 8
  %37 = alloca <2 x float>, align 8
  %38 = alloca <2 x float>, align 8
  %39 = alloca <2 x float>, align 8
  %40 = alloca <2 x float>, align 8
  %41 = alloca <2 x float>, align 8
  %42 = alloca %"class.blink::FloatQuad", align 4
  %43 = alloca %"class.blink::FloatQuad", align 4
  %44 = alloca %"class.blink::FloatQuad", align 4
  %45 = alloca %"class.blink::FloatQuad", align 4
  %46 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = and i32 %47, 1
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %49, label %55, label %51

51:                                               ; preds = %5
  %52 = bitcast %"class.blink::NodeData"** %50 to %"class.blink::NodeRareData"**
  %53 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %53, i64 0, i32 1, i32 0, i32 0
  br label %57

55:                                               ; preds = %5
  %56 = bitcast %"class.blink::NodeData"** %50 to %"class.blink::NodeRenderingData"**
  br label %57

57:                                               ; preds = %51, %55
  %58 = phi %"class.blink::NodeRenderingData"** [ %54, %51 ], [ %56, %55 ]
  %59 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %59, i64 0, i32 1
  %61 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %60, align 8
  %62 = icmp eq %"class.blink::LayoutObject"* %61, null
  br i1 %62, label %783, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %61, i64 0, i32 6, i32 0, i32 0
  %65 = load %"class.blink::Node"*, %"class.blink::Node"** %64, align 8
  %66 = icmp eq %"class.blink::Node"* %65, null
  br i1 %66, label %67, label %74

67:                                               ; preds = %63, %67
  %68 = phi %"class.blink::LayoutObject"* [ %70, %67 ], [ %61, %63 ]
  %69 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %68, i64 0, i32 7
  %70 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %70, i64 0, i32 6, i32 0, i32 0
  %72 = load %"class.blink::Node"*, %"class.blink::Node"** %71, align 8
  %73 = icmp eq %"class.blink::Node"* %72, null
  br i1 %73, label %67, label %74

74:                                               ; preds = %67, %63
  %75 = phi %"class.blink::Node"* [ %65, %63 ], [ %72, %67 ]
  %76 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %75, i64 0, i32 3, i32 0, i32 0
  %77 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %77, i64 0, i32 2, i32 0, i32 0
  %79 = load %"class.blink::Document"*, %"class.blink::Document"** %78, align 8
  %80 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %79) #19
  %81 = icmp eq %"class.blink::LocalFrameView"* %80, null
  br i1 %81, label %783, label %82

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %61, i64 0, i32 4
  %84 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %83 to i96*
  %85 = load i96, i96* %84, align 4
  %86 = and i96 %85, 67108864
  %87 = icmp eq i96 %86, 0
  br i1 %87, label %88, label %99

88:                                               ; preds = %82
  %89 = bitcast %"class.blink::LayoutObject"* %61 to i1 (%"class.blink::LayoutObject"*)***
  %90 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %89, align 8
  %91 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %90, i64 26
  %92 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %91, align 8
  %93 = tail call zeroext i1 %92(%"class.blink::LayoutObject"* nonnull %61) #19
  %94 = load i96, i96* %84, align 4
  %95 = xor i1 %93, true
  %96 = and i96 %94, 33554432
  %97 = icmp eq i96 %96, 0
  %98 = and i1 %97, %95
  br i1 %98, label %783, label %99

99:                                               ; preds = %88, %82
  %100 = phi i96 [ %85, %82 ], [ %94, %88 ]
  %101 = and i96 %100, 33554432
  %102 = icmp eq i96 %101, 0
  br i1 %102, label %114, label %103

103:                                              ; preds = %99
  %104 = bitcast %"class.blink::LayoutObject"* %61 to %"class.blink::LayoutText"*
  %105 = tail call { i64, i64 } @_ZNK5blink10LayoutText26PhysicalVisualOverflowRectEv(%"class.blink::LayoutText"* nonnull %104) #19
  %106 = extractvalue { i64, i64 } %105, 0
  %107 = extractvalue { i64, i64 } %105, 1
  %108 = trunc i64 %106 to i32
  %109 = lshr i64 %106, 32
  %110 = trunc i64 %109 to i32
  %111 = trunc i64 %107 to i32
  %112 = lshr i64 %107, 32
  %113 = trunc i64 %112 to i32
  br label %468

114:                                              ; preds = %99
  %115 = and i96 %100, 67108864
  %116 = icmp eq i96 %115, 0
  br i1 %116, label %297, label %117

117:                                              ; preds = %114
  %118 = bitcast %"class.blink::LayoutObject"* %61 to %"class.blink::LayoutBox"*
  %119 = tail call { i64, i64 } @_ZNK5blink9LayoutBox22PhysicalContentBoxRectEv(%"class.blink::LayoutBox"* nonnull %118)
  %120 = extractvalue { i64, i64 } %119, 0
  %121 = extractvalue { i64, i64 } %119, 1
  %122 = trunc i64 %120 to i32
  %123 = lshr i64 %120, 32
  %124 = trunc i64 %123 to i32
  %125 = tail call i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"* nonnull %118) #19
  %126 = tail call i32 @_ZNK5blink9LayoutBox9ClientTopEv(%"class.blink::LayoutBox"* nonnull %118) #19
  %127 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* nonnull %118) #19
  %128 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* nonnull %118) #19
  %129 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %61, i64 0, i32 5, i32 0
  %130 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %130, i64 0, i32 0, i32 9
  %132 = bitcast [20 x i8]* %131 to i160*
  %133 = load i160, i160* %132, align 8
  %134 = and i160 %133, 1190036353683150593851392
  %135 = icmp eq i160 %134, 340010386766614455386112
  br i1 %135, label %164, label %136

136:                                              ; preds = %117
  %137 = load i96, i96* %84, align 4
  %138 = and i96 %137, 8589934592
  %139 = icmp eq i96 %138, 0
  br i1 %139, label %164, label %140

140:                                              ; preds = %136
  %141 = bitcast %"class.blink::LayoutObject"* %61 to %"class.blink::LayoutBoxModelObject"*
  %142 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* nonnull %141) #19
  %143 = icmp eq %"class.blink::PaintLayerScrollableArea"* %142, null
  br i1 %143, label %171, label %144

144:                                              ; preds = %140
  %145 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* nonnull %141) #19
  %146 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %145, i64 0, i32 6, i32 3
  %147 = load i8, i8* %146, align 8
  %148 = and i8 %147, 1
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %154, label %150

150:                                              ; preds = %144
  %151 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %145, i64 0, i32 6, i32 1, i32 0, i32 0
  %152 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %151, align 8
  %153 = icmp eq %"class.blink::Scrollbar"* %152, null
  br i1 %153, label %154, label %171

154:                                              ; preds = %150, %144
  %155 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* nonnull %141) #19
  %156 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %155, i64 0, i32 6, i32 3
  %157 = load i8, i8* %156, align 8
  %158 = and i8 %157, 2
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %164, label %160

160:                                              ; preds = %154
  %161 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %155, i64 0, i32 6, i32 2, i32 0, i32 0
  %162 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %161, align 8
  %163 = icmp eq %"class.blink::Scrollbar"* %162, null
  br i1 %163, label %164, label %171

164:                                              ; preds = %160, %154, %136, %117
  %165 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %129, align 8
  %166 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %165, i64 0, i32 0, i32 9
  %167 = bitcast [20 x i8]* %166 to i160*
  %168 = load i160, i160* %167, align 8
  %169 = and i160 %168, 270215977642229760
  %170 = icmp eq i160 %169, 0
  br i1 %170, label %175, label %171

171:                                              ; preds = %164, %160, %150, %140
  %172 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* nonnull %118, i32 0, i32 0, i32 1) #19
  %173 = extractvalue { i64, i64 } %172, 0
  %174 = extractvalue { i64, i64 } %172, 1
  br label %175

175:                                              ; preds = %164, %171
  %176 = phi i64 [ %173, %171 ], [ 0, %164 ]
  %177 = phi i64 [ %174, %171 ], [ 0, %164 ]
  %178 = trunc i64 %176 to i32
  %179 = lshr i64 %176, 32
  %180 = trunc i64 %179 to i32
  %181 = lshr i64 %177, 32
  %182 = trunc i64 %181 to i32
  %183 = icmp sgt i32 %182, -1
  %184 = select i1 %183, i32 -2147483648, i32 2147483647
  %185 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %125, i32 %182) #19
  %186 = extractvalue { i32, i1 } %185, 1
  %187 = extractvalue { i32, i1 } %185, 0
  %188 = select i1 %186, i32 %184, i32 %187, !prof !2
  %189 = icmp sgt i32 %178, -1
  %190 = select i1 %189, i32 -2147483648, i32 2147483647
  %191 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %126, i32 %178) #19
  %192 = extractvalue { i32, i1 } %191, 1
  %193 = extractvalue { i32, i1 } %191, 0
  %194 = select i1 %192, i32 %190, i32 %193, !prof !2
  %195 = icmp slt i32 %180, 0
  %196 = select i1 %195, i32 -2147483648, i32 2147483647
  %197 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %182, i32 %180) #19
  %198 = extractvalue { i32, i1 } %197, 1
  %199 = extractvalue { i32, i1 } %197, 0
  %200 = select i1 %198, i32 %196, i32 %199, !prof !2
  %201 = icmp slt i32 %200, 0
  %202 = select i1 %201, i32 -2147483648, i32 2147483647
  %203 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %127, i32 %200) #19
  %204 = extractvalue { i32, i1 } %203, 1
  %205 = extractvalue { i32, i1 } %203, 0
  %206 = select i1 %204, i32 %202, i32 %205, !prof !2
  %207 = zext i32 %206 to i64
  %208 = trunc i64 %177 to i32
  %209 = icmp slt i32 %208, 0
  %210 = select i1 %209, i32 -2147483648, i32 2147483647
  %211 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %178, i32 %208) #19
  %212 = extractvalue { i32, i1 } %211, 1
  %213 = extractvalue { i32, i1 } %211, 0
  %214 = select i1 %212, i32 %210, i32 %213, !prof !2
  %215 = icmp slt i32 %214, 0
  %216 = select i1 %215, i32 -2147483648, i32 2147483647
  %217 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %128, i32 %214) #19
  %218 = extractvalue { i32, i1 } %217, 1
  %219 = extractvalue { i32, i1 } %217, 0
  %220 = select i1 %218, i32 %216, i32 %219, !prof !2
  %221 = zext i32 %220 to i64
  %222 = shl nuw i64 %221, 32
  %223 = or i64 %222, %207
  %224 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %61, i64 1, i32 4, i32 0, i64 4
  %225 = bitcast i8* %224 to i64*
  %226 = load i64, i64* %225, align 4
  %227 = bitcast %"class.blink::LayoutObject"* %61 to i32 (%"class.blink::LayoutBox"*)***
  %228 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %227, align 8
  %229 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %228, i64 129
  %230 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %229, align 8
  %231 = tail call i32 %230(%"class.blink::LayoutBox"* nonnull %118) #19
  %232 = icmp sgt i32 %231, -1
  %233 = select i1 %232, i32 -2147483648, i32 2147483647
  %234 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %231) #19
  %235 = extractvalue { i32, i1 } %234, 1
  %236 = extractvalue { i32, i1 } %234, 0
  %237 = select i1 %235, i32 %233, i32 %236, !prof !2
  %238 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %227, align 8
  %239 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %238, i64 127
  %240 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %239, align 8
  %241 = tail call i32 %240(%"class.blink::LayoutBox"* nonnull %118) #19
  %242 = icmp sgt i32 %241, -1
  %243 = select i1 %242, i32 -2147483648, i32 2147483647
  %244 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %241) #19
  %245 = extractvalue { i32, i1 } %244, 1
  %246 = extractvalue { i32, i1 } %244, 0
  %247 = select i1 %245, i32 %243, i32 %246, !prof !2
  %248 = trunc i64 %226 to i32
  %249 = bitcast %"class.blink::LayoutObject"* %61 to %"class.blink::LayoutBoxModelObject"*
  %250 = bitcast %"class.blink::LayoutObject"* %61 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %251 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %250, align 8
  %252 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %251, i64 129
  %253 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %252, align 8
  %254 = tail call i32 %253(%"class.blink::LayoutBoxModelObject"* nonnull %249) #19
  %255 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %250, align 8
  %256 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %255, i64 130
  %257 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %256, align 8
  %258 = tail call i32 %257(%"class.blink::LayoutBoxModelObject"* nonnull %249) #19
  %259 = icmp slt i32 %258, 0
  %260 = select i1 %259, i32 -2147483648, i32 2147483647
  %261 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %254, i32 %258) #19
  %262 = extractvalue { i32, i1 } %261, 1
  %263 = extractvalue { i32, i1 } %261, 0
  %264 = select i1 %262, i32 %260, i32 %263, !prof !2
  %265 = icmp slt i32 %264, 0
  %266 = select i1 %265, i32 -2147483648, i32 2147483647
  %267 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %248, i32 %264) #19
  %268 = extractvalue { i32, i1 } %267, 1
  %269 = extractvalue { i32, i1 } %267, 0
  %270 = select i1 %268, i32 %266, i32 %269, !prof !2
  %271 = lshr i64 %226, 32
  %272 = trunc i64 %271 to i32
  %273 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %250, align 8
  %274 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %273, i64 127
  %275 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %274, align 8
  %276 = tail call i32 %275(%"class.blink::LayoutBoxModelObject"* nonnull %249) #19
  %277 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %250, align 8
  %278 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %277, i64 128
  %279 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %278, align 8
  %280 = tail call i32 %279(%"class.blink::LayoutBoxModelObject"* nonnull %249) #19
  %281 = icmp slt i32 %280, 0
  %282 = select i1 %281, i32 -2147483648, i32 2147483647
  %283 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %276, i32 %280) #19
  %284 = extractvalue { i32, i1 } %283, 1
  %285 = extractvalue { i32, i1 } %283, 0
  %286 = select i1 %284, i32 %282, i32 %285, !prof !2
  %287 = icmp slt i32 %286, 0
  %288 = select i1 %287, i32 -2147483648, i32 2147483647
  %289 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %272, i32 %286) #19
  %290 = extractvalue { i32, i1 } %289, 1
  %291 = extractvalue { i32, i1 } %289, 0
  %292 = select i1 %290, i32 %288, i32 %291, !prof !2
  %293 = zext i32 %270 to i64
  %294 = zext i32 %292 to i64
  %295 = shl nuw i64 %294, 32
  %296 = or i64 %295, %293
  br label %468

297:                                              ; preds = %114
  %298 = bitcast %"class.blink::LayoutObject"* %61 to %"class.blink::LayoutInline"*
  %299 = tail call { i64, i64 } @_ZNK5blink12LayoutInline24PhysicalLinesBoundingBoxEv(%"class.blink::LayoutInline"* nonnull %298) #19
  %300 = extractvalue { i64, i64 } %299, 0
  %301 = extractvalue { i64, i64 } %299, 1
  %302 = trunc i64 %300 to i32
  %303 = lshr i64 %300, 32
  %304 = trunc i64 %303 to i32
  %305 = bitcast %"class.blink::LayoutObject"* %61 to %"class.blink::LayoutBoxModelObject"*
  %306 = bitcast %"class.blink::LayoutObject"* %61 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %307 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %306, align 8
  %308 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %307, i64 124
  %309 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %308, align 8
  %310 = tail call i32 %309(%"class.blink::LayoutBoxModelObject"* nonnull %305) #19
  %311 = icmp slt i32 %310, 0
  %312 = select i1 %311, i32 -2147483648, i32 2147483647
  %313 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %302, i32 %310) #19
  %314 = extractvalue { i32, i1 } %313, 1
  %315 = extractvalue { i32, i1 } %313, 0
  %316 = select i1 %314, i32 %312, i32 %315, !prof !2
  %317 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %306, align 8
  %318 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %317, i64 122
  %319 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %318, align 8
  %320 = tail call i32 %319(%"class.blink::LayoutBoxModelObject"* nonnull %305) #19
  %321 = icmp slt i32 %320, 0
  %322 = select i1 %321, i32 -2147483648, i32 2147483647
  %323 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %304, i32 %320) #19
  %324 = extractvalue { i32, i1 } %323, 1
  %325 = extractvalue { i32, i1 } %323, 0
  %326 = select i1 %324, i32 %322, i32 %325, !prof !2
  %327 = trunc i64 %301 to i32
  %328 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %306, align 8
  %329 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %328, i64 124
  %330 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %329, align 8
  %331 = tail call i32 %330(%"class.blink::LayoutBoxModelObject"* nonnull %305) #19
  %332 = icmp sgt i32 %331, -1
  %333 = select i1 %332, i32 -2147483648, i32 2147483647
  %334 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %327, i32 %331) #19
  %335 = extractvalue { i32, i1 } %334, 1
  %336 = extractvalue { i32, i1 } %334, 0
  %337 = select i1 %335, i32 %333, i32 %336, !prof !2
  %338 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %306, align 8
  %339 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %338, i64 125
  %340 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %339, align 8
  %341 = tail call i32 %340(%"class.blink::LayoutBoxModelObject"* nonnull %305) #19
  %342 = icmp sgt i32 %341, -1
  %343 = select i1 %342, i32 -2147483648, i32 2147483647
  %344 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %337, i32 %341) #19
  %345 = extractvalue { i32, i1 } %344, 1
  %346 = extractvalue { i32, i1 } %344, 0
  %347 = select i1 %345, i32 %343, i32 %346, !prof !2
  %348 = lshr i64 %301, 32
  %349 = trunc i64 %348 to i32
  %350 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %306, align 8
  %351 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %350, i64 122
  %352 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %351, align 8
  %353 = tail call i32 %352(%"class.blink::LayoutBoxModelObject"* nonnull %305) #19
  %354 = icmp sgt i32 %353, -1
  %355 = select i1 %354, i32 -2147483648, i32 2147483647
  %356 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %349, i32 %353) #19
  %357 = extractvalue { i32, i1 } %356, 1
  %358 = extractvalue { i32, i1 } %356, 0
  %359 = select i1 %357, i32 %355, i32 %358, !prof !2
  %360 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %306, align 8
  %361 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %360, i64 123
  %362 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %361, align 8
  %363 = tail call i32 %362(%"class.blink::LayoutBoxModelObject"* nonnull %305) #19
  %364 = icmp sgt i32 %363, -1
  %365 = select i1 %364, i32 -2147483648, i32 2147483647
  %366 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %359, i32 %363) #19
  %367 = extractvalue { i32, i1 } %366, 1
  %368 = extractvalue { i32, i1 } %366, 0
  %369 = select i1 %367, i32 %365, i32 %368, !prof !2
  %370 = zext i32 %347 to i64
  %371 = zext i32 %369 to i64
  %372 = shl nuw i64 %371, 32
  %373 = or i64 %372, %370
  %374 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %306, align 8
  %375 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %374, i64 120
  %376 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %375, align 8
  %377 = tail call i32 %376(%"class.blink::LayoutBoxModelObject"* nonnull %305) #19
  %378 = icmp slt i32 %377, 0
  %379 = select i1 %378, i32 -2147483648, i32 2147483647
  %380 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %316, i32 %377) #19
  %381 = extractvalue { i32, i1 } %380, 1
  %382 = extractvalue { i32, i1 } %380, 0
  %383 = select i1 %381, i32 %379, i32 %382, !prof !2
  %384 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %306, align 8
  %385 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %384, i64 118
  %386 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %385, align 8
  %387 = tail call i32 %386(%"class.blink::LayoutBoxModelObject"* nonnull %305) #19
  %388 = icmp slt i32 %387, 0
  %389 = select i1 %388, i32 -2147483648, i32 2147483647
  %390 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %326, i32 %387) #19
  %391 = extractvalue { i32, i1 } %390, 1
  %392 = extractvalue { i32, i1 } %390, 0
  %393 = select i1 %391, i32 %389, i32 %392, !prof !2
  %394 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %306, align 8
  %395 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %394, i64 120
  %396 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %395, align 8
  %397 = tail call i32 %396(%"class.blink::LayoutBoxModelObject"* nonnull %305) #19
  %398 = icmp sgt i32 %397, -1
  %399 = select i1 %398, i32 -2147483648, i32 2147483647
  %400 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %347, i32 %397) #19
  %401 = extractvalue { i32, i1 } %400, 1
  %402 = extractvalue { i32, i1 } %400, 0
  %403 = select i1 %401, i32 %399, i32 %402, !prof !2
  %404 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %306, align 8
  %405 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %404, i64 121
  %406 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %405, align 8
  %407 = tail call i32 %406(%"class.blink::LayoutBoxModelObject"* nonnull %305) #19
  %408 = icmp sgt i32 %407, -1
  %409 = select i1 %408, i32 -2147483648, i32 2147483647
  %410 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %403, i32 %407) #19
  %411 = extractvalue { i32, i1 } %410, 1
  %412 = extractvalue { i32, i1 } %410, 0
  %413 = select i1 %411, i32 %409, i32 %412, !prof !2
  %414 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %306, align 8
  %415 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %414, i64 118
  %416 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %415, align 8
  %417 = tail call i32 %416(%"class.blink::LayoutBoxModelObject"* nonnull %305) #19
  %418 = icmp sgt i32 %417, -1
  %419 = select i1 %418, i32 -2147483648, i32 2147483647
  %420 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %369, i32 %417) #19
  %421 = extractvalue { i32, i1 } %420, 1
  %422 = extractvalue { i32, i1 } %420, 0
  %423 = select i1 %421, i32 %419, i32 %422, !prof !2
  %424 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %306, align 8
  %425 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %424, i64 119
  %426 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %425, align 8
  %427 = tail call i32 %426(%"class.blink::LayoutBoxModelObject"* nonnull %305) #19
  %428 = icmp sgt i32 %427, -1
  %429 = select i1 %428, i32 -2147483648, i32 2147483647
  %430 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %423, i32 %427) #19
  %431 = extractvalue { i32, i1 } %430, 1
  %432 = extractvalue { i32, i1 } %430, 0
  %433 = select i1 %431, i32 %429, i32 %432, !prof !2
  %434 = zext i32 %413 to i64
  %435 = zext i32 %433 to i64
  %436 = shl nuw i64 %435, 32
  %437 = or i64 %436, %434
  %438 = tail call i32 @_ZNK5blink12LayoutInline10MarginLeftEv(%"class.blink::LayoutInline"* nonnull %298) #19
  %439 = icmp sgt i32 %438, -1
  %440 = select i1 %439, i32 -2147483648, i32 2147483647
  %441 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %302, i32 %438) #19
  %442 = extractvalue { i32, i1 } %441, 1
  %443 = extractvalue { i32, i1 } %441, 0
  %444 = select i1 %442, i32 %440, i32 %443, !prof !2
  %445 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %306, align 8
  %446 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %445, i64 129
  %447 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %446, align 8
  %448 = tail call i32 %447(%"class.blink::LayoutBoxModelObject"* nonnull %305) #19
  %449 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %306, align 8
  %450 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %449, i64 130
  %451 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %450, align 8
  %452 = tail call i32 %451(%"class.blink::LayoutBoxModelObject"* nonnull %305) #19
  %453 = icmp slt i32 %452, 0
  %454 = select i1 %453, i32 -2147483648, i32 2147483647
  %455 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %448, i32 %452) #19
  %456 = extractvalue { i32, i1 } %455, 1
  %457 = extractvalue { i32, i1 } %455, 0
  %458 = select i1 %456, i32 %454, i32 %457, !prof !2
  %459 = icmp slt i32 %458, 0
  %460 = select i1 %459, i32 -2147483648, i32 2147483647
  %461 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %327, i32 %458) #19
  %462 = extractvalue { i32, i1 } %461, 1
  %463 = extractvalue { i32, i1 } %461, 0
  %464 = select i1 %462, i32 %460, i32 %463, !prof !2
  %465 = zext i32 %464 to i64
  %466 = and i64 %301, -4294967296
  %467 = or i64 %466, %465
  br label %468

468:                                              ; preds = %175, %297, %103
  %469 = phi i32 [ %272, %175 ], [ %349, %297 ], [ %113, %103 ]
  %470 = phi i32 [ %248, %175 ], [ %327, %297 ], [ %111, %103 ]
  %471 = phi i64 [ %296, %175 ], [ %467, %297 ], [ %107, %103 ]
  %472 = phi i32 [ %247, %175 ], [ %304, %297 ], [ %110, %103 ]
  %473 = phi i32 [ %237, %175 ], [ %444, %297 ], [ %108, %103 ]
  %474 = phi i32 [ 0, %175 ], [ %304, %297 ], [ %110, %103 ]
  %475 = phi i32 [ 0, %175 ], [ %302, %297 ], [ %108, %103 ]
  %476 = phi i64 [ %223, %175 ], [ %373, %297 ], [ %107, %103 ]
  %477 = phi i32 [ %194, %175 ], [ %326, %297 ], [ %110, %103 ]
  %478 = phi i32 [ %188, %175 ], [ %316, %297 ], [ %108, %103 ]
  %479 = phi i64 [ %121, %175 ], [ %437, %297 ], [ %107, %103 ]
  %480 = phi i32 [ %124, %175 ], [ %393, %297 ], [ %110, %103 ]
  %481 = phi i32 [ %122, %175 ], [ %383, %297 ], [ %108, %103 ]
  %482 = bitcast %"class.blink::FloatQuad"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %482) #19
  %483 = bitcast %"class.blink::FloatQuad"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %483) #19, !noalias !3
  %484 = sitofp i32 %481 to float
  %485 = fmul float %484, 1.562500e-02
  %486 = sitofp i32 %480 to float
  %487 = fmul float %486, 1.562500e-02
  %488 = trunc i64 %479 to i32
  %489 = sitofp i32 %488 to float
  %490 = fmul float %489, 1.562500e-02
  %491 = lshr i64 %479, 32
  %492 = trunc i64 %491 to i32
  %493 = sitofp i32 %492 to float
  %494 = fmul float %493, 1.562500e-02
  %495 = insertelement <2 x float> undef, float %485, i32 0
  %496 = insertelement <2 x float> %495, float %487, i32 1
  %497 = bitcast %"class.blink::FloatQuad"* %11 to <2 x float>*
  store <2 x float> %496, <2 x float>* %497, align 8, !noalias !3
  %498 = fadd float %490, %485
  %499 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %11, i64 0, i32 1, i32 0
  store float %498, float* %499, align 8, !noalias !3
  %500 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %11, i64 0, i32 1, i32 1
  store float %487, float* %500, align 4, !noalias !3
  %501 = fadd float %487, %494
  %502 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %11, i64 0, i32 2, i32 0
  store float %498, float* %502, align 8, !noalias !3
  %503 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %11, i64 0, i32 2, i32 1
  store float %501, float* %503, align 4, !noalias !3
  %504 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %11, i64 0, i32 3, i32 0
  store float %485, float* %504, align 8, !noalias !3
  %505 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %11, i64 0, i32 3, i32 1
  store float %501, float* %505, align 4, !noalias !3
  call void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* nonnull sret %42, %"class.blink::LayoutObject"* nonnull %61, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %11, %"class.blink::LayoutBoxModelObject"* null, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %483) #19, !noalias !3
  %506 = bitcast %"class.blink::FloatQuad"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %506, i8* nonnull align 4 %482, i64 32, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %482) #19
  %507 = bitcast %"class.blink::FloatQuad"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %507) #19
  %508 = bitcast %"class.blink::FloatQuad"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %508) #19, !noalias !8
  %509 = sitofp i32 %478 to float
  %510 = fmul float %509, 1.562500e-02
  %511 = sitofp i32 %477 to float
  %512 = fmul float %511, 1.562500e-02
  %513 = trunc i64 %476 to i32
  %514 = sitofp i32 %513 to float
  %515 = fmul float %514, 1.562500e-02
  %516 = lshr i64 %476, 32
  %517 = trunc i64 %516 to i32
  %518 = sitofp i32 %517 to float
  %519 = fmul float %518, 1.562500e-02
  %520 = insertelement <2 x float> undef, float %510, i32 0
  %521 = insertelement <2 x float> %520, float %512, i32 1
  %522 = bitcast %"class.blink::FloatQuad"* %10 to <2 x float>*
  store <2 x float> %521, <2 x float>* %522, align 8, !noalias !8
  %523 = fadd float %515, %510
  %524 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %10, i64 0, i32 1, i32 0
  store float %523, float* %524, align 8, !noalias !8
  %525 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %10, i64 0, i32 1, i32 1
  store float %512, float* %525, align 4, !noalias !8
  %526 = fadd float %512, %519
  %527 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %10, i64 0, i32 2, i32 0
  store float %523, float* %527, align 8, !noalias !8
  %528 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %10, i64 0, i32 2, i32 1
  store float %526, float* %528, align 4, !noalias !8
  %529 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %10, i64 0, i32 3, i32 0
  store float %510, float* %529, align 8, !noalias !8
  %530 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %10, i64 0, i32 3, i32 1
  store float %526, float* %530, align 4, !noalias !8
  call void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* nonnull sret %43, %"class.blink::LayoutObject"* nonnull %61, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %10, %"class.blink::LayoutBoxModelObject"* null, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %508) #19, !noalias !8
  %531 = bitcast %"class.blink::FloatQuad"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %531, i8* nonnull align 4 %507, i64 32, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %507) #19
  %532 = bitcast %"class.blink::FloatQuad"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %532) #19
  %533 = bitcast %"class.blink::FloatQuad"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %533) #19, !noalias !13
  %534 = sitofp i32 %475 to float
  %535 = fmul float %534, 1.562500e-02
  %536 = sitofp i32 %474 to float
  %537 = fmul float %536, 1.562500e-02
  %538 = sitofp i32 %470 to float
  %539 = fmul float %538, 1.562500e-02
  %540 = sitofp i32 %469 to float
  %541 = fmul float %540, 1.562500e-02
  %542 = insertelement <2 x float> undef, float %535, i32 0
  %543 = insertelement <2 x float> %542, float %537, i32 1
  %544 = bitcast %"class.blink::FloatQuad"* %9 to <2 x float>*
  store <2 x float> %543, <2 x float>* %544, align 8, !noalias !13
  %545 = fadd float %539, %535
  %546 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %9, i64 0, i32 1, i32 0
  store float %545, float* %546, align 8, !noalias !13
  %547 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %9, i64 0, i32 1, i32 1
  store float %537, float* %547, align 4, !noalias !13
  %548 = fadd float %537, %541
  %549 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %9, i64 0, i32 2, i32 0
  store float %545, float* %549, align 8, !noalias !13
  %550 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %9, i64 0, i32 2, i32 1
  store float %548, float* %550, align 4, !noalias !13
  %551 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %9, i64 0, i32 3, i32 0
  store float %535, float* %551, align 8, !noalias !13
  %552 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %9, i64 0, i32 3, i32 1
  store float %548, float* %552, align 4, !noalias !13
  call void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* nonnull sret %44, %"class.blink::LayoutObject"* nonnull %61, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %9, %"class.blink::LayoutBoxModelObject"* null, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %533) #19, !noalias !13
  %553 = bitcast %"class.blink::FloatQuad"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %553, i8* nonnull align 4 %532, i64 32, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %532) #19
  %554 = bitcast %"class.blink::FloatQuad"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %554) #19
  %555 = bitcast %"class.blink::FloatQuad"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %555) #19, !noalias !18
  %556 = sitofp i32 %473 to float
  %557 = fmul float %556, 1.562500e-02
  %558 = sitofp i32 %472 to float
  %559 = fmul float %558, 1.562500e-02
  %560 = trunc i64 %471 to i32
  %561 = sitofp i32 %560 to float
  %562 = fmul float %561, 1.562500e-02
  %563 = lshr i64 %471, 32
  %564 = trunc i64 %563 to i32
  %565 = sitofp i32 %564 to float
  %566 = fmul float %565, 1.562500e-02
  %567 = insertelement <2 x float> undef, float %557, i32 0
  %568 = insertelement <2 x float> %567, float %559, i32 1
  %569 = bitcast %"class.blink::FloatQuad"* %8 to <2 x float>*
  store <2 x float> %568, <2 x float>* %569, align 8, !noalias !18
  %570 = fadd float %562, %557
  %571 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %8, i64 0, i32 1, i32 0
  store float %570, float* %571, align 8, !noalias !18
  %572 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %8, i64 0, i32 1, i32 1
  store float %559, float* %572, align 4, !noalias !18
  %573 = fadd float %559, %566
  %574 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %8, i64 0, i32 2, i32 0
  store float %570, float* %574, align 8, !noalias !18
  %575 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %8, i64 0, i32 2, i32 1
  store float %573, float* %575, align 4, !noalias !18
  %576 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %8, i64 0, i32 3, i32 0
  store float %557, float* %576, align 8, !noalias !18
  %577 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %8, i64 0, i32 3, i32 1
  store float %573, float* %577, align 4, !noalias !18
  call void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* nonnull sret %45, %"class.blink::LayoutObject"* nonnull %61, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %8, %"class.blink::LayoutBoxModelObject"* null, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %555) #19, !noalias !18
  %578 = bitcast %"class.blink::FloatQuad"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %578, i8* nonnull align 4 %554, i64 32, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %554) #19
  %579 = bitcast %"class.blink::FloatQuad"* %1 to <2 x float>*
  %580 = bitcast %"class.blink::FloatQuad"* %1 to i64*
  %581 = load i64, i64* %580, align 4
  %582 = bitcast <2 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %582)
  %583 = bitcast <2 x float>* %6 to %"class.blink::FloatPoint"*
  %584 = bitcast <2 x float>* %7 to %"class.blink::FloatPoint"*
  %585 = bitcast <2 x float>* %6 to i64*
  store i64 %581, i64* %585, align 8
  %586 = bitcast <2 x float>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %586) #19
  %587 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* nonnull %80, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %583) #19
  store <2 x float> %587, <2 x float>* %7, align 8
  %588 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* nonnull %80) #19
  %589 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %588) #19
  %590 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %589, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %584) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %586) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %582)
  store <2 x float> %590, <2 x float>* %579, align 4
  %591 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %1, i64 0, i32 1
  %592 = bitcast %"class.blink::FloatPoint"* %591 to <2 x float>*
  %593 = bitcast %"class.blink::FloatPoint"* %591 to i64*
  %594 = load i64, i64* %593, align 4
  %595 = bitcast <2 x float>* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %595)
  %596 = bitcast <2 x float>* %12 to %"class.blink::FloatPoint"*
  %597 = bitcast <2 x float>* %13 to %"class.blink::FloatPoint"*
  %598 = bitcast <2 x float>* %12 to i64*
  store i64 %594, i64* %598, align 8
  %599 = bitcast <2 x float>* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %599) #19
  %600 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* nonnull %80, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %596) #19
  store <2 x float> %600, <2 x float>* %13, align 8
  %601 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* nonnull %80) #19
  %602 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %601) #19
  %603 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %602, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %597) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %599) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %595)
  store <2 x float> %603, <2 x float>* %592, align 4
  %604 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %1, i64 0, i32 2
  %605 = bitcast %"class.blink::FloatPoint"* %604 to i64*
  %606 = load i64, i64* %605, align 4
  %607 = bitcast <2 x float>* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %607) #19
  %608 = bitcast <2 x float>* %16 to %"class.blink::FloatPoint"*
  %609 = bitcast <2 x float>* %17 to %"class.blink::FloatPoint"*
  %610 = bitcast <2 x float>* %16 to i64*
  store i64 %606, i64* %610, align 8
  %611 = bitcast <2 x float>* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %611) #19
  %612 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* nonnull %80, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %608) #19
  store <2 x float> %612, <2 x float>* %17, align 8
  %613 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* nonnull %80) #19
  %614 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %613) #19
  %615 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %614, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %609) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %611) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %607) #19
  %616 = bitcast %"class.blink::FloatPoint"* %604 to <2 x float>*
  store <2 x float> %615, <2 x float>* %616, align 4
  %617 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %1, i64 0, i32 3
  %618 = bitcast %"class.blink::FloatPoint"* %617 to i64*
  %619 = load i64, i64* %618, align 4
  %620 = bitcast <2 x float>* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %620) #19
  %621 = bitcast <2 x float>* %14 to %"class.blink::FloatPoint"*
  %622 = bitcast <2 x float>* %15 to %"class.blink::FloatPoint"*
  %623 = bitcast <2 x float>* %14 to i64*
  store i64 %619, i64* %623, align 8
  %624 = bitcast <2 x float>* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %624) #19
  %625 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* nonnull %80, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %621) #19
  store <2 x float> %625, <2 x float>* %15, align 8
  %626 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* nonnull %80) #19
  %627 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %626) #19
  %628 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %627, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %622) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %624) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %620) #19
  %629 = bitcast %"class.blink::FloatPoint"* %617 to <2 x float>*
  store <2 x float> %628, <2 x float>* %629, align 4
  %630 = bitcast %"class.blink::FloatQuad"* %2 to <2 x float>*
  %631 = bitcast %"class.blink::FloatQuad"* %2 to i64*
  %632 = load i64, i64* %631, align 4
  %633 = bitcast <2 x float>* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %633)
  %634 = bitcast <2 x float>* %18 to %"class.blink::FloatPoint"*
  %635 = bitcast <2 x float>* %19 to %"class.blink::FloatPoint"*
  %636 = bitcast <2 x float>* %18 to i64*
  store i64 %632, i64* %636, align 8
  %637 = bitcast <2 x float>* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %637) #19
  %638 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* nonnull %80, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %634) #19
  store <2 x float> %638, <2 x float>* %19, align 8
  %639 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* nonnull %80) #19
  %640 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %639) #19
  %641 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %640, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %635) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %637) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %633)
  store <2 x float> %641, <2 x float>* %630, align 4
  %642 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %2, i64 0, i32 1
  %643 = bitcast %"class.blink::FloatPoint"* %642 to <2 x float>*
  %644 = bitcast %"class.blink::FloatPoint"* %642 to i64*
  %645 = load i64, i64* %644, align 4
  %646 = bitcast <2 x float>* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %646)
  %647 = bitcast <2 x float>* %20 to %"class.blink::FloatPoint"*
  %648 = bitcast <2 x float>* %21 to %"class.blink::FloatPoint"*
  %649 = bitcast <2 x float>* %20 to i64*
  store i64 %645, i64* %649, align 8
  %650 = bitcast <2 x float>* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %650) #19
  %651 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* nonnull %80, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %647) #19
  store <2 x float> %651, <2 x float>* %21, align 8
  %652 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* nonnull %80) #19
  %653 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %652) #19
  %654 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %653, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %648) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %650) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %646)
  store <2 x float> %654, <2 x float>* %643, align 4
  %655 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %2, i64 0, i32 2
  %656 = bitcast %"class.blink::FloatPoint"* %655 to i64*
  %657 = load i64, i64* %656, align 4
  %658 = bitcast <2 x float>* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %658) #19
  %659 = bitcast <2 x float>* %24 to %"class.blink::FloatPoint"*
  %660 = bitcast <2 x float>* %25 to %"class.blink::FloatPoint"*
  %661 = bitcast <2 x float>* %24 to i64*
  store i64 %657, i64* %661, align 8
  %662 = bitcast <2 x float>* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %662) #19
  %663 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* nonnull %80, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %659) #19
  store <2 x float> %663, <2 x float>* %25, align 8
  %664 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* nonnull %80) #19
  %665 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %664) #19
  %666 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %665, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %660) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %662) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %658) #19
  %667 = bitcast %"class.blink::FloatPoint"* %655 to <2 x float>*
  store <2 x float> %666, <2 x float>* %667, align 4
  %668 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %2, i64 0, i32 3
  %669 = bitcast %"class.blink::FloatPoint"* %668 to i64*
  %670 = load i64, i64* %669, align 4
  %671 = bitcast <2 x float>* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %671) #19
  %672 = bitcast <2 x float>* %22 to %"class.blink::FloatPoint"*
  %673 = bitcast <2 x float>* %23 to %"class.blink::FloatPoint"*
  %674 = bitcast <2 x float>* %22 to i64*
  store i64 %670, i64* %674, align 8
  %675 = bitcast <2 x float>* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %675) #19
  %676 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* nonnull %80, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %672) #19
  store <2 x float> %676, <2 x float>* %23, align 8
  %677 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* nonnull %80) #19
  %678 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %677) #19
  %679 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %678, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %673) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %675) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %671) #19
  %680 = bitcast %"class.blink::FloatPoint"* %668 to <2 x float>*
  store <2 x float> %679, <2 x float>* %680, align 4
  %681 = bitcast %"class.blink::FloatQuad"* %3 to <2 x float>*
  %682 = bitcast %"class.blink::FloatQuad"* %3 to i64*
  %683 = load i64, i64* %682, align 4
  %684 = bitcast <2 x float>* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %684)
  %685 = bitcast <2 x float>* %26 to %"class.blink::FloatPoint"*
  %686 = bitcast <2 x float>* %27 to %"class.blink::FloatPoint"*
  %687 = bitcast <2 x float>* %26 to i64*
  store i64 %683, i64* %687, align 8
  %688 = bitcast <2 x float>* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %688) #19
  %689 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* nonnull %80, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %685) #19
  store <2 x float> %689, <2 x float>* %27, align 8
  %690 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* nonnull %80) #19
  %691 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %690) #19
  %692 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %691, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %686) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %688) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %684)
  store <2 x float> %692, <2 x float>* %681, align 4
  %693 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %3, i64 0, i32 1
  %694 = bitcast %"class.blink::FloatPoint"* %693 to <2 x float>*
  %695 = bitcast %"class.blink::FloatPoint"* %693 to i64*
  %696 = load i64, i64* %695, align 4
  %697 = bitcast <2 x float>* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %697)
  %698 = bitcast <2 x float>* %28 to %"class.blink::FloatPoint"*
  %699 = bitcast <2 x float>* %29 to %"class.blink::FloatPoint"*
  %700 = bitcast <2 x float>* %28 to i64*
  store i64 %696, i64* %700, align 8
  %701 = bitcast <2 x float>* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %701) #19
  %702 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* nonnull %80, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %698) #19
  store <2 x float> %702, <2 x float>* %29, align 8
  %703 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* nonnull %80) #19
  %704 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %703) #19
  %705 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %704, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %699) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %701) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %697)
  store <2 x float> %705, <2 x float>* %694, align 4
  %706 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %3, i64 0, i32 2
  %707 = bitcast %"class.blink::FloatPoint"* %706 to i64*
  %708 = load i64, i64* %707, align 4
  %709 = bitcast <2 x float>* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %709) #19
  %710 = bitcast <2 x float>* %32 to %"class.blink::FloatPoint"*
  %711 = bitcast <2 x float>* %33 to %"class.blink::FloatPoint"*
  %712 = bitcast <2 x float>* %32 to i64*
  store i64 %708, i64* %712, align 8
  %713 = bitcast <2 x float>* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %713) #19
  %714 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* nonnull %80, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %710) #19
  store <2 x float> %714, <2 x float>* %33, align 8
  %715 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* nonnull %80) #19
  %716 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %715) #19
  %717 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %716, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %711) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %713) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %709) #19
  %718 = bitcast %"class.blink::FloatPoint"* %706 to <2 x float>*
  store <2 x float> %717, <2 x float>* %718, align 4
  %719 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %3, i64 0, i32 3
  %720 = bitcast %"class.blink::FloatPoint"* %719 to i64*
  %721 = load i64, i64* %720, align 4
  %722 = bitcast <2 x float>* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %722) #19
  %723 = bitcast <2 x float>* %30 to %"class.blink::FloatPoint"*
  %724 = bitcast <2 x float>* %31 to %"class.blink::FloatPoint"*
  %725 = bitcast <2 x float>* %30 to i64*
  store i64 %721, i64* %725, align 8
  %726 = bitcast <2 x float>* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %726) #19
  %727 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* nonnull %80, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %723) #19
  store <2 x float> %727, <2 x float>* %31, align 8
  %728 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* nonnull %80) #19
  %729 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %728) #19
  %730 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %729, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %724) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %726) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %722) #19
  %731 = bitcast %"class.blink::FloatPoint"* %719 to <2 x float>*
  store <2 x float> %730, <2 x float>* %731, align 4
  %732 = bitcast %"class.blink::FloatQuad"* %4 to <2 x float>*
  %733 = bitcast %"class.blink::FloatQuad"* %4 to i64*
  %734 = load i64, i64* %733, align 4
  %735 = bitcast <2 x float>* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %735)
  %736 = bitcast <2 x float>* %34 to %"class.blink::FloatPoint"*
  %737 = bitcast <2 x float>* %35 to %"class.blink::FloatPoint"*
  %738 = bitcast <2 x float>* %34 to i64*
  store i64 %734, i64* %738, align 8
  %739 = bitcast <2 x float>* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %739) #19
  %740 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* nonnull %80, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %736) #19
  store <2 x float> %740, <2 x float>* %35, align 8
  %741 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* nonnull %80) #19
  %742 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %741) #19
  %743 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %742, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %737) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %739) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %735)
  store <2 x float> %743, <2 x float>* %732, align 4
  %744 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %4, i64 0, i32 1
  %745 = bitcast %"class.blink::FloatPoint"* %744 to <2 x float>*
  %746 = bitcast %"class.blink::FloatPoint"* %744 to i64*
  %747 = load i64, i64* %746, align 4
  %748 = bitcast <2 x float>* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %748)
  %749 = bitcast <2 x float>* %36 to %"class.blink::FloatPoint"*
  %750 = bitcast <2 x float>* %37 to %"class.blink::FloatPoint"*
  %751 = bitcast <2 x float>* %36 to i64*
  store i64 %747, i64* %751, align 8
  %752 = bitcast <2 x float>* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %752) #19
  %753 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* nonnull %80, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %749) #19
  store <2 x float> %753, <2 x float>* %37, align 8
  %754 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* nonnull %80) #19
  %755 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %754) #19
  %756 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %755, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %750) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %752) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %748)
  store <2 x float> %756, <2 x float>* %745, align 4
  %757 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %4, i64 0, i32 2
  %758 = bitcast %"class.blink::FloatPoint"* %757 to i64*
  %759 = load i64, i64* %758, align 4
  %760 = bitcast <2 x float>* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %760) #19
  %761 = bitcast <2 x float>* %40 to %"class.blink::FloatPoint"*
  %762 = bitcast <2 x float>* %41 to %"class.blink::FloatPoint"*
  %763 = bitcast <2 x float>* %40 to i64*
  store i64 %759, i64* %763, align 8
  %764 = bitcast <2 x float>* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %764) #19
  %765 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* nonnull %80, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %761) #19
  store <2 x float> %765, <2 x float>* %41, align 8
  %766 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* nonnull %80) #19
  %767 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %766) #19
  %768 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %767, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %762) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %764) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %760) #19
  %769 = bitcast %"class.blink::FloatPoint"* %757 to <2 x float>*
  store <2 x float> %768, <2 x float>* %769, align 4
  %770 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %4, i64 0, i32 3
  %771 = bitcast %"class.blink::FloatPoint"* %770 to i64*
  %772 = load i64, i64* %771, align 4
  %773 = bitcast <2 x float>* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %773) #19
  %774 = bitcast <2 x float>* %38 to %"class.blink::FloatPoint"*
  %775 = bitcast <2 x float>* %39 to %"class.blink::FloatPoint"*
  %776 = bitcast <2 x float>* %38 to i64*
  store i64 %772, i64* %776, align 8
  %777 = bitcast <2 x float>* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %777) #19
  %778 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* nonnull %80, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %774) #19
  store <2 x float> %778, <2 x float>* %39, align 8
  %779 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* nonnull %80) #19
  %780 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %779) #19
  %781 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %780, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %775) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %777) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %773) #19
  %782 = bitcast %"class.blink::FloatPoint"* %770 to <2 x float>*
  store <2 x float> %781, <2 x float>* %782, align 4
  br label %783

783:                                              ; preds = %88, %468, %74, %57
  %784 = phi i1 [ false, %57 ], [ true, %468 ], [ false, %74 ], [ false, %88 ]
  ret i1 %784
}

declare { i64, i64 } @_ZNK5blink10LayoutText26PhysicalVisualOverflowRectEv(%"class.blink::LayoutText"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox22PhysicalContentBoxRectEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1 comdat align 2 {
  %2 = tail call i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"* %0) #19
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %4 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %5 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %5, i64 120
  %7 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %6, align 8
  %8 = tail call i32 %7(%"class.blink::LayoutBoxModelObject"* %3) #19
  %9 = icmp slt i32 %8, 0
  %10 = select i1 %9, i32 -2147483648, i32 2147483647
  %11 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %2, i32 %8) #19
  %12 = extractvalue { i32, i1 } %11, 1
  %13 = extractvalue { i32, i1 } %11, 0
  %14 = select i1 %12, i32 %10, i32 %13, !prof !2
  %15 = tail call i32 @_ZNK5blink9LayoutBox9ClientTopEv(%"class.blink::LayoutBox"* %0) #19
  %16 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %4, align 8
  %17 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %16, i64 118
  %18 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %17, align 8
  %19 = tail call i32 %18(%"class.blink::LayoutBoxModelObject"* %3) #19
  %20 = icmp slt i32 %19, 0
  %21 = select i1 %20, i32 -2147483648, i32 2147483647
  %22 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %15, i32 %19) #19
  %23 = extractvalue { i32, i1 } %22, 1
  %24 = extractvalue { i32, i1 } %22, 0
  %25 = select i1 %23, i32 %21, i32 %24, !prof !2
  %26 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #19
  %27 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %4, align 8
  %28 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %27, i64 120
  %29 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %28, align 8
  %30 = tail call i32 %29(%"class.blink::LayoutBoxModelObject"* %3) #19
  %31 = icmp sgt i32 %30, -1
  %32 = select i1 %31, i32 -2147483648, i32 2147483647
  %33 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %26, i32 %30) #19
  %34 = extractvalue { i32, i1 } %33, 1
  %35 = extractvalue { i32, i1 } %33, 0
  %36 = select i1 %34, i32 %32, i32 %35, !prof !2
  %37 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %4, align 8
  %38 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %37, i64 121
  %39 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %38, align 8
  %40 = tail call i32 %39(%"class.blink::LayoutBoxModelObject"* %3) #19
  %41 = icmp sgt i32 %40, -1
  %42 = select i1 %41, i32 -2147483648, i32 2147483647
  %43 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %36, i32 %40) #19
  %44 = extractvalue { i32, i1 } %43, 1
  %45 = extractvalue { i32, i1 } %43, 0
  %46 = select i1 %44, i32 %42, i32 %45, !prof !2
  %47 = icmp sgt i32 %46, 0
  %48 = select i1 %47, i32 %46, i32 0
  %49 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #19
  %50 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %4, align 8
  %51 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %50, i64 118
  %52 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %51, align 8
  %53 = tail call i32 %52(%"class.blink::LayoutBoxModelObject"* %3) #19
  %54 = icmp sgt i32 %53, -1
  %55 = select i1 %54, i32 -2147483648, i32 2147483647
  %56 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %49, i32 %53) #19
  %57 = extractvalue { i32, i1 } %56, 1
  %58 = extractvalue { i32, i1 } %56, 0
  %59 = select i1 %57, i32 %55, i32 %58, !prof !2
  %60 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %4, align 8
  %61 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %60, i64 119
  %62 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %61, align 8
  %63 = tail call i32 %62(%"class.blink::LayoutBoxModelObject"* %3) #19
  %64 = icmp sgt i32 %63, -1
  %65 = select i1 %64, i32 -2147483648, i32 2147483647
  %66 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %59, i32 %63) #19
  %67 = extractvalue { i32, i1 } %66, 1
  %68 = extractvalue { i32, i1 } %66, 0
  %69 = select i1 %67, i32 %65, i32 %68, !prof !2
  %70 = icmp sgt i32 %69, 0
  %71 = select i1 %70, i32 %69, i32 0
  %72 = zext i32 %25 to i64
  %73 = shl nuw i64 %72, 32
  %74 = zext i32 %14 to i64
  %75 = or i64 %73, %74
  %76 = insertvalue { i64, i64 } undef, i64 %75, 0
  %77 = zext i32 %71 to i64
  %78 = shl nuw nsw i64 %77, 32
  %79 = zext i32 %48 to i64
  %80 = or i64 %78, %79
  %81 = insertvalue { i64, i64 } %76, i64 %80, 1
  ret { i64, i64 } %81
}

declare { i64, i64 } @_ZNK5blink12LayoutInline24PhysicalLinesBoundingBoxEv(%"class.blink::LayoutInline"*) local_unnamed_addr #3

declare i32 @_ZNK5blink12LayoutInline10MarginLeftEv(%"class.blink::LayoutInline"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22InspectorHighlightBase10AppendQuadERKNS_9FloatQuadERKNS_5ColorES6_RKN3WTF6StringE(%"class.blink::InspectorHighlightBase"* nocapture readonly, %"class.blink::FloatQuad"* nocapture readonly dereferenceable(32), %"class.blink::Color"* dereferenceable(4), %"class.blink::Color"* dereferenceable(4), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %6 = alloca %"class.blink::Path", align 8
  %7 = alloca %"class.blink::AffineTransform", align 8
  %8 = alloca <2 x float>, align 8
  %9 = alloca <2 x float>, align 8
  %10 = alloca <2 x float>, align 8
  %11 = alloca <2 x float>, align 8
  %12 = alloca %"class.blink::Path", align 8
  %13 = alloca %"class.blink::(anonymous namespace)::PathBuilder", align 8
  %14 = bitcast %"class.blink::Path"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #19
  %15 = bitcast <2 x float>* %8 to %"class.blink::FloatPoint"*
  %16 = bitcast <2 x float>* %9 to %"class.blink::FloatPoint"*
  %17 = bitcast <2 x float>* %10 to %"class.blink::FloatPoint"*
  %18 = bitcast <2 x float>* %11 to %"class.blink::FloatPoint"*
  %19 = bitcast %"class.blink::Path"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false)
  call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* nonnull %12) #19
  %20 = bitcast <2 x float>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #19, !noalias !23
  %21 = bitcast %"class.blink::FloatQuad"* %1 to i64*
  %22 = load i64, i64* %21, align 4, !noalias !23
  %23 = bitcast <2 x float>* %8 to i64*
  store i64 %22, i64* %23, align 8, !noalias !23
  call void @_ZN5blink4Path6MoveToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %12, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %15) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #19, !noalias !23
  %24 = bitcast <2 x float>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #19, !noalias !23
  %25 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %1, i64 0, i32 1
  %26 = bitcast %"class.blink::FloatPoint"* %25 to i64*
  %27 = load i64, i64* %26, align 4, !noalias !23
  %28 = bitcast <2 x float>* %9 to i64*
  store i64 %27, i64* %28, align 8, !noalias !23
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %12, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %16) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #19, !noalias !23
  %29 = bitcast <2 x float>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #19, !noalias !23
  %30 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %1, i64 0, i32 2
  %31 = bitcast %"class.blink::FloatPoint"* %30 to i64*
  %32 = load i64, i64* %31, align 4, !noalias !23
  %33 = bitcast <2 x float>* %10 to i64*
  store i64 %32, i64* %33, align 8, !noalias !23
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %12, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %17) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #19, !noalias !23
  %34 = bitcast <2 x float>* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #19, !noalias !23
  %35 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %1, i64 0, i32 3
  %36 = bitcast %"class.blink::FloatPoint"* %35 to i64*
  %37 = load i64, i64* %36, align 4, !noalias !23
  %38 = bitcast <2 x float>* %11 to i64*
  store i64 %37, i64* %38, align 8, !noalias !23
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %12, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %18) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #19, !noalias !23
  call void @_ZN5blink4Path12CloseSubpathEv(%"class.blink::Path"* nonnull %12) #19
  %39 = bitcast %"class.blink::(anonymous namespace)::PathBuilder"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #19
  %40 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %13, i64 0, i32 0
  %41 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %13, i64 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_111PathBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %42 = call i8* @_Znwm(i64 40) #18
  %43 = bitcast i8* %42 to %"class.blink::protocol::ListValue"*
  call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %43) #19
  %44 = bitcast %"class.blink::protocol::ListValue"** %41 to i8**
  store i8* %42, i8** %44, align 8
  %45 = getelementptr inbounds %"class.blink::InspectorHighlightBase", %"class.blink::InspectorHighlightBase"* %0, i64 0, i32 2
  %46 = load float, float* %45, align 8
  %47 = bitcast %"class.blink::Path"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 16, i1 false) #19
  call void @_ZN5blink4PathC1ERKS0_(%"class.blink::Path"* nonnull %6, %"class.blink::Path"* nonnull dereferenceable(16) %12) #19
  %48 = bitcast %"class.blink::AffineTransform"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %48) #19
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %7) #19
  %49 = fpext float %46 to double
  %50 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEd(%"class.blink::AffineTransform"* nonnull %7, double %49) #19
  call void @_ZN5blink4Path9TransformERKNS_15AffineTransformE(%"class.blink::Path"* nonnull %6, %"class.blink::AffineTransform"* dereferenceable(48) %50) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %48) #19
  call void @_ZNK5blink4Path5ApplyEPvPFvS1_PKNS_11PathElementEE(%"class.blink::Path"* nonnull %6, i8* nonnull %39, void (i8*, %"struct.blink::PathElement"*)* nonnull @_ZN5blink12_GLOBAL__N_111PathBuilder17AppendPathElementEPvPKNS_11PathElementE) #19
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #19
  %51 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %41, align 8
  store %"class.blink::protocol::ListValue"* null, %"class.blink::protocol::ListValue"** %41, align 8
  call void @_ZN5blink22InspectorHighlightBase10AppendPathENSt3__110unique_ptrINS_8protocol9ListValueENS1_14default_deleteIS4_EEEERKNS_5ColorESA_RKN3WTF6StringE(%"class.blink::InspectorHighlightBase"* %0, %"class.blink::protocol::ListValue"* %51, %"class.blink::Color"* dereferenceable(4) %2, %"class.blink::Color"* dereferenceable(4) %3, %"class.WTF::String"* dereferenceable(8) %4)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_111PathBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %52 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %41, align 8
  store %"class.blink::protocol::ListValue"* null, %"class.blink::protocol::ListValue"** %41, align 8
  %53 = icmp eq %"class.blink::protocol::ListValue"* %52, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %5
  %55 = bitcast %"class.blink::protocol::ListValue"* %52 to void (%"class.blink::protocol::ListValue"*)***
  %56 = load void (%"class.blink::protocol::ListValue"*)**, void (%"class.blink::protocol::ListValue"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %56, i64 2
  %58 = load void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %57, align 8
  call void %58(%"class.blink::protocol::ListValue"* nonnull %52) #19
  br label %59

59:                                               ; preds = %5, %54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #19
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %12) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22InspectorHighlightBase10AppendPathENSt3__110unique_ptrINS_8protocol9ListValueENS1_14default_deleteIS4_EEEERKNS_5ColorESA_RKN3WTF6StringE(%"class.blink::InspectorHighlightBase"* nocapture readonly, %"class.blink::protocol::ListValue"*, %"class.blink::Color"* dereferenceable(4), %"class.blink::Color"* dereferenceable(4), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = tail call i8* @_Znwm(i64 80) #18
  %13 = bitcast i8* %12 to %"class.blink::protocol::DictionaryValue"*
  tail call void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"* nonnull %13) #19
  %14 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #19
  %15 = bitcast %"class.blink::protocol::ListValue"* %1 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %13, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.blink::protocol::Value"* %15) #19
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #19
  br label %32

32:                                               ; preds = %5, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #19
  %33 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i64 9) #19
  %34 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #19
  %35 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color10SerializedEv(%"class.blink::Color"* %2) #19
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %13, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::String"* nonnull dereferenceable(8) %8) #19
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #19
  br label %52

52:                                               ; preds = %32, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #19
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #19
  br label %69

69:                                               ; preds = %52, %65, %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #19
  %70 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %3, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %111, label %73

73:                                               ; preds = %69
  %74 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i64 12) #19
  %75 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #19
  %76 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color10SerializedEv(%"class.blink::Color"* %3) #19
  %77 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"** %77, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %13, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.WTF::String"* nonnull dereferenceable(8) %10) #19
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #19
  br label %93

93:                                               ; preds = %73, %89, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #19
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #19
  br label %110

110:                                              ; preds = %93, %106, %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #19
  br label %111

111:                                              ; preds = %69, %110
  %112 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %138, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %138, label %119

119:                                              ; preds = %115
  %120 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i64 4) #19
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %13, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.WTF::String"* dereferenceable(8) %4) #19
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %137, label %124

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  br i1 %128, label %131, label %133

131:                                              ; preds = %124
  %132 = add i32 %130, -1
  store i32 %132, i32* %129, align 4
  br label %133

133:                                              ; preds = %131, %124
  %134 = phi i32 [ %132, %131 ], [ %130, %124 ]
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %133
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #19
  br label %137

137:                                              ; preds = %119, %133, %136
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #19
  br label %138

138:                                              ; preds = %111, %137, %115
  %139 = getelementptr inbounds %"class.blink::InspectorHighlightBase", %"class.blink::InspectorHighlightBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %140 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %139, align 8
  %141 = bitcast i8* %12 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol9ListValue9pushValueENSt3__110unique_ptrINS0_5ValueENS2_14default_deleteIS4_EEEE(%"class.blink::protocol::ListValue"* %140, %"class.blink::protocol::Value"* nonnull %141) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_111PathBuilderD2Ev(%"class.blink::(anonymous namespace)::PathBuilder"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_111PathBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %3, align 8
  store %"class.blink::protocol::ListValue"* null, %"class.blink::protocol::ListValue"** %3, align 8
  %5 = icmp eq %"class.blink::protocol::ListValue"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::protocol::ListValue"* %4 to void (%"class.blink::protocol::ListValue"*)***
  %8 = load void (%"class.blink::protocol::ListValue"*)**, void (%"class.blink::protocol::ListValue"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %8, i64 2
  %10 = load void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %9, align 8
  tail call void %10(%"class.blink::protocol::ListValue"* nonnull %4) #19
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4PathD1Ev(%"class.blink::Path"*) unnamed_addr #5

declare void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::Value"*) local_unnamed_addr #3

declare void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink5Color10SerializedEv(%"class.blink::Color"*) local_unnamed_addr #3

declare void @_ZN5blink8protocol9ListValue9pushValueENSt3__110unique_ptrINS0_5ValueENS2_14default_deleteIS4_EEEE(%"class.blink::protocol::ListValue"*, %"class.blink::protocol::Value"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29InspectorSourceOrderHighlightC2EPNS_4NodeENS_5ColorEi(%"class.blink::InspectorSourceOrderHighlight"* nocapture, %"class.blink::Node"* nocapture readonly, i32, i32) unnamed_addr #1 align 2 {
  %5 = alloca %"class.blink::Color", align 4
  %6 = alloca %"class.blink::FloatQuad", align 4
  %7 = alloca %"class.blink::FloatQuad", align 4
  %8 = alloca %"class.blink::FloatQuad", align 4
  %9 = alloca %"class.blink::FloatQuad", align 4
  %10 = alloca %"class.WTF::String", align 8
  %11 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %5, i64 0, i32 0
  store i32 %2, i32* %11, align 4
  %12 = bitcast %"class.blink::InspectorSourceOrderHighlight"* %0 to %"class.blink::InspectorHighlightBase"*
  %13 = getelementptr inbounds %"class.blink::InspectorSourceOrderHighlight", %"class.blink::InspectorSourceOrderHighlight"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink22InspectorHighlightBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = tail call i8* @_Znwm(i64 40) #18
  %15 = bitcast i8* %14 to %"class.blink::protocol::ListValue"*
  tail call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %15) #19
  %16 = getelementptr inbounds %"class.blink::InspectorSourceOrderHighlight", %"class.blink::InspectorSourceOrderHighlight"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = bitcast %"class.blink::protocol::ListValue"** %16 to i8**
  store i8* %14, i8** %17, align 8
  %18 = getelementptr inbounds %"class.blink::InspectorSourceOrderHighlight", %"class.blink::InspectorSourceOrderHighlight"* %0, i64 0, i32 0, i32 2
  store float 1.000000e+00, float* %18, align 8
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %20, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::Document"*, %"class.blink::Document"** %21, align 8
  %23 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %22) #19
  %24 = icmp eq %"class.blink::LocalFrameView"* %23, null
  br i1 %24, label %35, label %25

25:                                               ; preds = %4
  %26 = tail call %"class.blink::ChromeClient"* @_ZNK5blink14LocalFrameView15GetChromeClientEv(%"class.blink::LocalFrameView"* nonnull %23) #19
  %27 = getelementptr inbounds %"class.blink::LocalFrameView", %"class.blink::LocalFrameView"* %23, i64 0, i32 3, i32 0, i32 0
  %28 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %27, align 8
  %29 = bitcast %"class.blink::ChromeClient"* %26 to float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)***
  %30 = load float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)**, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*** %29, align 8
  %31 = getelementptr inbounds float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)** %30, i64 3
  %32 = load float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)** %31, align 8
  %33 = tail call float %32(%"class.blink::ChromeClient"* %26, %"class.blink::LocalFrame"* %28, float 1.000000e+00) #19
  %34 = fdiv float 1.000000e+00, %33
  store float %34, float* %18, align 8
  br label %35

35:                                               ; preds = %4, %25
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink29InspectorSourceOrderHighlightE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %36 = getelementptr inbounds %"class.blink::InspectorSourceOrderHighlight", %"class.blink::InspectorSourceOrderHighlight"* %0, i64 0, i32 1
  store i32 %3, i32* %36, align 4
  %37 = bitcast %"class.blink::FloatQuad"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %37, i8 0, i64 32, i1 false) #19
  %38 = bitcast %"class.blink::FloatQuad"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %38, i8 0, i64 32, i1 false) #19
  %39 = bitcast %"class.blink::FloatQuad"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %39, i8 0, i64 32, i1 false) #19
  %40 = bitcast %"class.blink::FloatQuad"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %40, i8 0, i64 32, i1 false) #19
  %41 = call zeroext i1 @_ZN5blink22InspectorHighlightBase14BuildNodeQuadsEPNS_4NodeEPNS_9FloatQuadES4_S4_S4_(%"class.blink::Node"* %1, %"class.blink::FloatQuad"* nonnull %6, %"class.blink::FloatQuad"* nonnull %7, %"class.blink::FloatQuad"* nonnull %8, %"class.blink::FloatQuad"* nonnull %9)
  br i1 %41, label %42, label %61

42:                                               ; preds = %35
  %43 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i64 6) #19
  call void @_ZN5blink22InspectorHighlightBase10AppendQuadERKNS_9FloatQuadERKNS_5ColorES6_RKN3WTF6StringE(%"class.blink::InspectorHighlightBase"* %12, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %8, %"class.blink::Color"* nonnull dereferenceable(4) @.ref.tmp.4, %"class.blink::Color"* nonnull dereferenceable(4) %5, %"class.WTF::String"* nonnull dereferenceable(8) %10)
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #19
  br label %60

60:                                               ; preds = %42, %56, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #19
  br label %61

61:                                               ; preds = %35, %60
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::protocol::DictionaryValue"* @_ZNK5blink29InspectorSourceOrderHighlight15AsProtocolValueEv(%"class.blink::InspectorSourceOrderHighlight"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = tail call i8* @_Znwm(i64 80) #18
  %5 = bitcast i8* %4 to %"class.blink::protocol::DictionaryValue"*
  tail call void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"* nonnull %5) #19
  %6 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i64 5) #19
  %7 = getelementptr inbounds %"class.blink::InspectorSourceOrderHighlight", %"class.blink::InspectorSourceOrderHighlight"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %7, align 8
  %9 = bitcast %"class.blink::protocol::ListValue"* %8 to %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)***
  %10 = load %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)**, %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)*, %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)** %10, i64 8
  %12 = load %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)*, %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)** %11, align 8
  %13 = call %"class.blink::protocol::Value"* %12(%"class.blink::protocol::ListValue"* %8) #19
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.blink::protocol::Value"* %13) #19
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #19
  br label %30

30:                                               ; preds = %1, %26, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  %31 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0), i64 11) #19
  %32 = getelementptr inbounds %"class.blink::InspectorSourceOrderHighlight", %"class.blink::InspectorSourceOrderHighlight"* %0, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  call void @_ZN5blink8protocol15DictionaryValue10setIntegerERKN3WTF6StringEi(%"class.blink::protocol::DictionaryValue"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %3, i32 %33) #19
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #19
  br label %50

50:                                               ; preds = %30, %46, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #19
  ret %"class.blink::protocol::DictionaryValue"* %5
}

declare void @_ZN5blink8protocol15DictionaryValue10setIntegerERKN3WTF6StringEi(%"class.blink::protocol::DictionaryValue"*, %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink29InspectorSourceOrderHighlight13DefaultConfigEv() local_unnamed_addr #1 align 2 {
  %1 = tail call i32 @_ZN5blink8MakeRGBAEiiii(i32 224, i32 90, i32 183, i32 1) #19
  %2 = tail call i32 @_ZN5blink8MakeRGBAEiiii(i32 0, i32 120, i32 212, i32 1) #19
  %3 = zext i32 %2 to i64
  %4 = shl nuw i64 %3, 32
  %5 = zext i32 %1 to i64
  %6 = or i64 %4, %5
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorHighlightC2EPNS_4NodeERKNS_24InspectorHighlightConfigERKNS_30InspectorHighlightContrastInfoEbb26NodeContentVisibilityState(%"class.blink::InspectorHighlight"*, %"class.blink::Node"*, %"struct.blink::InspectorHighlightConfig"* dereferenceable(88), %"struct.blink::InspectorHighlightContrastInfo"* dereferenceable(32), i1 zeroext, i1 zeroext, i32) unnamed_addr #1 align 2 {
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::Vector.529", align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %"class.WTF::AtomicString", align 8
  %19 = alloca %"class.blink::CSSPropertyName", align 8
  %20 = alloca %"class.WTF::String", align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = alloca %"class.WTF::String", align 8
  %23 = alloca %"class.WTF::String", align 8
  %24 = alloca %"class.WTF::String", align 8
  %25 = alloca %"class.WTF::String", align 8
  %26 = alloca %"class.WTF::String", align 8
  %27 = alloca %"class.WTF::String", align 8
  %28 = alloca %"class.WTF::String", align 8
  %29 = alloca %"class.WTF::String", align 8
  %30 = alloca %"class.WTF::String", align 8
  %31 = alloca %"class.WTF::String", align 8
  %32 = alloca %"class.WTF::String", align 8
  %33 = alloca %"class.blink::LayoutUnit", align 4
  %34 = alloca %"class.WTF::String", align 8
  %35 = alloca %"class.WTF::String", align 8
  %36 = alloca %"class.blink::LayoutUnit", align 4
  %37 = alloca %"class.WTF::String", align 8
  %38 = alloca %"class.WTF::String", align 8
  %39 = alloca %"class.WTF::String", align 8
  %40 = alloca %"class.WTF::String", align 8
  %41 = alloca %"class.WTF::String", align 8
  %42 = alloca %"class.WTF::String", align 8
  %43 = alloca %"class.WTF::String", align 8
  %44 = alloca %"class.WTF::StringBuilder", align 8
  %45 = alloca %"class.WTF::HashSet.425", align 8
  %46 = alloca %"class.WTF::StringView", align 8
  %47 = alloca %"class.WTF::StringView", align 8
  %48 = alloca %"class.WTF::StringView", align 8
  %49 = alloca %"class.WTF::StringView", align 8
  %50 = alloca %"class.WTF::String", align 8
  %51 = alloca %"class.WTF::String", align 8
  %52 = alloca %"class.WTF::String", align 8
  %53 = alloca %"class.WTF::String", align 8
  %54 = alloca %"class.WTF::String", align 8
  %55 = alloca %"class.WTF::String", align 8
  %56 = alloca %"class.WTF::String", align 8
  %57 = alloca %"class.WTF::String", align 8
  %58 = alloca %"class.WTF::String", align 8
  %59 = alloca %"class.WTF::String", align 8
  %60 = alloca %"class.WTF::String", align 8
  %61 = alloca %"class.WTF::String", align 8
  %62 = alloca %"class.WTF::String", align 8
  %63 = alloca %"class.WTF::String", align 8
  %64 = alloca %"class.WTF::String", align 8
  %65 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink22InspectorHighlightBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %65, align 8
  %66 = tail call i8* @_Znwm(i64 40) #18
  %67 = bitcast i8* %66 to %"class.blink::protocol::ListValue"*
  tail call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %67) #19
  %68 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %69 = bitcast %"class.blink::protocol::ListValue"** %68 to i8**
  store i8* %66, i8** %69, align 8
  %70 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 0, i32 2
  store float 1.000000e+00, float* %70, align 8
  %71 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %72 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %72, i64 0, i32 2, i32 0, i32 0
  %74 = load %"class.blink::Document"*, %"class.blink::Document"** %73, align 8
  %75 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %74) #19
  %76 = icmp eq %"class.blink::LocalFrameView"* %75, null
  br i1 %76, label %87, label %77

77:                                               ; preds = %7
  %78 = tail call %"class.blink::ChromeClient"* @_ZNK5blink14LocalFrameView15GetChromeClientEv(%"class.blink::LocalFrameView"* nonnull %75) #19
  %79 = getelementptr inbounds %"class.blink::LocalFrameView", %"class.blink::LocalFrameView"* %75, i64 0, i32 3, i32 0, i32 0
  %80 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %79, align 8
  %81 = bitcast %"class.blink::ChromeClient"* %78 to float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)***
  %82 = load float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)**, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*** %81, align 8
  %83 = getelementptr inbounds float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)** %82, i64 3
  %84 = load float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)** %83, align 8
  %85 = tail call float %84(%"class.blink::ChromeClient"* %78, %"class.blink::LocalFrame"* %80, float 1.000000e+00) #19
  %86 = fdiv float 1.000000e+00, %85
  store float %86, float* %70, align 8
  br label %87

87:                                               ; preds = %7, %77
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink18InspectorHighlightE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %65, align 8
  %88 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 1
  %89 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 5
  %90 = bitcast %"class.std::__1::unique_ptr.2440"* %89 to i64*
  %91 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 9
  %92 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %2, i64 0, i32 11
  %93 = bitcast %"class.std::__1::unique_ptr.2420"* %88 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 64, i1 false)
  %94 = load i8, i8* %92, align 2, !range !26
  store i8 %94, i8* %91, align 8
  %95 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 10
  %96 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %2, i64 0, i32 12
  %97 = load i8, i8* %96, align 1, !range !26
  store i8 %97, i8* %95, align 1
  %98 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 11
  %99 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %2, i64 0, i32 13
  %100 = load i8, i8* %99, align 8, !range !26
  store i8 %100, i8* %98, align 2
  %101 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 12
  %102 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %2, i64 0, i32 15
  %103 = load i32, i32* %102, align 8
  store i32 %103, i32* %101, align 4
  tail call void @_ZN5blink18InspectorHighlight26AppendPathsForShapeOutsideEPNS_4NodeERKNS_24InspectorHighlightConfigE(%"class.blink::InspectorHighlight"* %0, %"class.blink::Node"* %1, %"struct.blink::InspectorHighlightConfig"* dereferenceable(88) %2)
  tail call void @_ZN5blink18InspectorHighlight19AppendNodeHighlightEPNS_4NodeERKNS_24InspectorHighlightConfigE(%"class.blink::InspectorHighlight"* %0, %"class.blink::Node"* %1, %"struct.blink::InspectorHighlightConfig"* dereferenceable(88) %2)
  %104 = icmp eq %"class.blink::Node"* %1, null
  br i1 %104, label %917, label %105

105:                                              ; preds = %87
  %106 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %107 = load i32, i32* %106, align 8
  %108 = and i32 %107, 12
  %109 = icmp eq i32 %108, 4
  %110 = bitcast %"class.blink::Node"* %1 to %"class.blink::Text"*
  %111 = select i1 %109, %"class.blink::Text"* %110, %"class.blink::Text"* null
  %112 = icmp eq i32 %108, 0
  %113 = bitcast %"class.blink::Node"* %1 to %"class.blink::Element"*
  %114 = select i1 %112, %"class.blink::Element"* %113, %"class.blink::Element"* null
  %115 = and i1 %112, %4
  br i1 %115, label %116, label %740

116:                                              ; preds = %105
  %117 = tail call i8* @_Znwm(i64 80) #18
  %118 = bitcast i8* %117 to %"class.blink::protocol::DictionaryValue"*
  tail call void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"* nonnull %118) #19
  %119 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %114, i64 0, i32 0, i32 0
  %120 = bitcast %"class.blink::Element"* %114 to i8 (%"class.blink::Node"*)***
  %121 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %120, align 8
  %122 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %121, i64 34
  %123 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %122, align 8
  %124 = tail call zeroext i8 %123(%"class.blink::Node"* %119) #19
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %129, label %126

126:                                              ; preds = %116
  %127 = bitcast %"class.blink::Element"* %114 to %"class.blink::PseudoElement"*
  %128 = tail call %"class.blink::Element"* @_ZNK5blink4Node25ParentOrShadowHostElementEv(%"class.blink::Node"* %119) #19
  br label %129

129:                                              ; preds = %126, %116
  %130 = phi i1 [ true, %126 ], [ false, %116 ]
  %131 = phi %"class.blink::PseudoElement"* [ %127, %126 ], [ null, %116 ]
  %132 = phi %"class.blink::Element"* [ %128, %126 ], [ %113, %116 ]
  %133 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %132, i64 0, i32 0, i32 0
  %134 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %132, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %135 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %134, align 8
  %136 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %135, i64 0, i32 2, i32 0, i32 0
  %137 = load %"class.blink::Document"*, %"class.blink::Document"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %137, i64 0, i32 107
  %139 = load i8, i8* %138, align 8
  %140 = and i8 %139, 2
  %141 = icmp eq i8 %140, 0
  %142 = bitcast %"class.WTF::String"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %40, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50, i64 0, i64 0), i64 7) #19
  %143 = bitcast %"class.WTF::String"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143) #19
  br i1 %141, label %166, label %144

144:                                              ; preds = %129
  %145 = bitcast %"class.blink::Element"* %132 to %"class.WTF::StringImpl"* (%"class.blink::Element"*)***
  %146 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)**, %"class.WTF::StringImpl"* (%"class.blink::Element"*)*** %145, align 8
  %147 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %146, i64 27
  %148 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %147, align 8
  %149 = call %"class.WTF::StringImpl"* %148(%"class.blink::Element"* %132) #19
  %150 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %41, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %149, %"class.WTF::StringImpl"** %150, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %118, %"class.WTF::String"* nonnull dereferenceable(8) %40, %"class.WTF::String"* nonnull dereferenceable(8) %41) #19
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %152, label %208, label %153

153:                                              ; preds = %144
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = and i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 0
  %159 = load i32, i32* %158, align 4
  br i1 %157, label %160, label %162

160:                                              ; preds = %153
  %161 = add i32 %159, -1
  store i32 %161, i32* %158, align 4
  br label %162

162:                                              ; preds = %160, %153
  %163 = phi i32 [ %161, %160 ], [ %159, %153 ]
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %208

165:                                              ; preds = %162
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %151) #19
  br label %208

166:                                              ; preds = %129
  %167 = bitcast %"class.WTF::String"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %167) #19
  %168 = bitcast %"class.blink::Element"* %132 to %"class.WTF::StringImpl"* (%"class.blink::Element"*)***
  %169 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)**, %"class.WTF::StringImpl"* (%"class.blink::Element"*)*** %168, align 8
  %170 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %169, i64 27
  %171 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %170, align 8
  %172 = call %"class.WTF::StringImpl"* %171(%"class.blink::Element"* %132) #19
  %173 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %42, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %172, %"class.WTF::StringImpl"** %173, align 8
  %174 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15DeprecatedLowerEv(%"class.WTF::String"* nonnull %42) #19
  %175 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %41, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %174, %"class.WTF::StringImpl"** %175, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %118, %"class.WTF::String"* nonnull dereferenceable(8) %40, %"class.WTF::String"* nonnull dereferenceable(8) %41) #19
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %175, align 8
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %166
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #19
  br label %191

191:                                              ; preds = %190, %187, %166
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %207, label %194

194:                                              ; preds = %191
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  br i1 %198, label %201, label %203

201:                                              ; preds = %194
  %202 = add i32 %200, -1
  store i32 %202, i32* %199, align 4
  br label %203

203:                                              ; preds = %201, %194
  %204 = phi i32 [ %202, %201 ], [ %200, %194 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %192) #19
  br label %207

207:                                              ; preds = %206, %203, %191
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %167) #19
  br label %208

208:                                              ; preds = %207, %165, %162, %144
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143) #19
  %209 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %40, i64 0, i32 0, i32 0
  %210 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %209, align 8
  %211 = icmp eq %"class.WTF::StringImpl"* %210, null
  br i1 %211, label %225, label %212

212:                                              ; preds = %208
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = load atomic i32, i32* %213 monotonic, align 4
  %215 = and i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 0
  %218 = load i32, i32* %217, align 4
  br i1 %216, label %219, label %221

219:                                              ; preds = %212
  %220 = add i32 %218, -1
  store i32 %220, i32* %217, align 4
  br label %221

221:                                              ; preds = %219, %212
  %222 = phi i32 [ %220, %219 ], [ %218, %212 ]
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %221
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %210) #19
  br label %225

225:                                              ; preds = %224, %221, %208
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #19
  %226 = bitcast %"class.WTF::String"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %226) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %43, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i64 0, i64 0), i64 7) #19
  %227 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %132, i64 0, i32 3, i32 0, i32 0
  %228 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %227, align 8
  %229 = icmp eq %"class.blink::ElementData"* %228, null
  br i1 %229, label %287, label %230

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %228, i64 0, i32 3, i32 0, i32 0, i32 0
  %232 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %231, align 8
  %233 = icmp eq %"class.WTF::StringImpl"* %232, null
  br i1 %233, label %287, label %234

234:                                              ; preds = %230
  %235 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kIdAttrE, align 8
  %236 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %228, i64 0, i32 0, i32 0, i32 0
  %237 = load i32, i32* %236, align 4
  %238 = and i32 %237, 1
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %247, label %240

240:                                              ; preds = %234
  %241 = bitcast %"class.blink::ElementData"* %228 to %"class.blink::UniqueElementData"*
  %242 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %228, i64 1, i32 1
  %243 = bitcast %"class.blink::Member.354"* %242 to %"class.blink::Attribute"**
  %244 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %243, align 8
  %245 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %241, i64 0, i32 2, i32 0, i32 0, i32 2
  %246 = load i32, i32* %245, align 4
  br label %252

247:                                              ; preds = %234
  %248 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %228, i64 1
  %249 = bitcast %"class.blink::ElementData"* %248 to %"class.blink::Attribute"*
  %250 = lshr i32 %237, 1
  %251 = and i32 %250, 268435455
  br label %252

252:                                              ; preds = %247, %240
  %253 = phi %"class.blink::Attribute"* [ %249, %247 ], [ %244, %240 ]
  %254 = phi i32 [ %251, %247 ], [ %246, %240 ]
  %255 = zext i32 %254 to i64
  %256 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %253, i64 %255
  %257 = icmp eq i32 %254, 0
  br i1 %257, label %285, label %258

258:                                              ; preds = %252
  %259 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %235, i64 0, i32 0, i32 0
  %260 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %259, align 8
  %261 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %260, i64 0, i32 3, i32 0, i32 0, i32 0
  %262 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %260, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %263

263:                                              ; preds = %278, %258
  %264 = phi %"class.blink::Attribute"* [ %253, %258 ], [ %279, %278 ]
  %265 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %264, i64 0, i32 0, i32 0, i32 0
  %266 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %265, align 8
  %267 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %266, %260
  br i1 %267, label %281, label %268

268:                                              ; preds = %263
  %269 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %266, i64 0, i32 3, i32 0, i32 0, i32 0
  %270 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %269, align 8
  %271 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %261, align 8
  %272 = icmp eq %"class.WTF::StringImpl"* %270, %271
  br i1 %272, label %273, label %278

273:                                              ; preds = %268
  %274 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %266, i64 0, i32 4, i32 0, i32 0, i32 0
  %275 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %274, align 8
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %262, align 8
  %277 = icmp eq %"class.WTF::StringImpl"* %275, %276
  br i1 %277, label %281, label %278

278:                                              ; preds = %273, %268
  %279 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %264, i64 1
  %280 = icmp eq %"class.blink::Attribute"* %279, %256
  br i1 %280, label %285, label %263

281:                                              ; preds = %273, %263
  %282 = icmp eq %"class.blink::Attribute"* %264, null
  br i1 %282, label %285, label %283

283:                                              ; preds = %281
  %284 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %264, i64 0, i32 1
  br label %289

285:                                              ; preds = %278, %281, %252
  %286 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %289

287:                                              ; preds = %230, %225
  %288 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %289

289:                                              ; preds = %287, %285, %283
  %290 = phi %"class.WTF::AtomicString"* [ %288, %287 ], [ %286, %285 ], [ %284, %283 ]
  %291 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %290, i64 0, i32 0
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %118, %"class.WTF::String"* nonnull dereferenceable(8) %43, %"class.WTF::String"* dereferenceable(8) %291) #19
  %292 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  %293 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %292, align 8
  %294 = icmp eq %"class.WTF::StringImpl"* %293, null
  br i1 %294, label %308, label %295

295:                                              ; preds = %289
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %297 = load atomic i32, i32* %296 monotonic, align 4
  %298 = and i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 0
  %301 = load i32, i32* %300, align 4
  br i1 %299, label %302, label %304

302:                                              ; preds = %295
  %303 = add i32 %301, -1
  store i32 %303, i32* %300, align 4
  br label %304

304:                                              ; preds = %302, %295
  %305 = phi i32 [ %303, %302 ], [ %301, %295 ]
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %308

307:                                              ; preds = %304
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %293) #19
  br label %308

308:                                              ; preds = %307, %304, %289
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %226) #19
  %309 = bitcast %"class.WTF::StringBuilder"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %309) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %309, i8 -86, i64 48, i1 false) #19
  %310 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %44, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %310, align 8
  %311 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %44, i64 0, i32 1
  %312 = bitcast %union.anon.2947* %311 to i8*
  store i8 0, i8* %312, align 8
  %313 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %44, i64 0, i32 2
  store i32 0, i32* %313, align 8
  %314 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %44, i64 0, i32 3
  store i8 1, i8* %314, align 4
  %315 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %44, i64 0, i32 4
  store i8 0, i8* %315, align 1
  %316 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %227, align 8
  %317 = icmp eq %"class.blink::ElementData"* %316, null
  br i1 %317, label %405, label %318

318:                                              ; preds = %308
  %319 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %316, i64 0, i32 2, i32 0, i32 0
  %320 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %319, align 8
  %321 = icmp eq %"class.blink::SpaceSplitString::Data"* %320, null
  br i1 %321, label %405, label %322

322:                                              ; preds = %318
  %323 = call zeroext i1 @_ZNK5blink4Node15IsStyledElementEv(%"class.blink::Node"* %133) #19
  br i1 %323, label %324, label %405

324:                                              ; preds = %322
  %325 = bitcast %"class.WTF::HashSet.425"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %325) #19
  %326 = getelementptr inbounds %"class.WTF::HashSet.425", %"class.WTF::HashSet.425"* %45, i64 0, i32 0, i32 0
  %327 = getelementptr inbounds %"class.WTF::HashSet.425", %"class.WTF::HashSet.425"* %45, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %325, i8 -86, i64 24, i1 false) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %325, i8 0, i64 20, i1 false) #19
  %328 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %227, align 8
  %329 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %328, i64 0, i32 2, i32 0, i32 0
  %330 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %329, align 8
  %331 = icmp eq %"class.blink::SpaceSplitString::Data"* %330, null
  br i1 %331, label %378, label %332

332:                                              ; preds = %324
  %333 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %330, i64 0, i32 2, i32 0, i32 0, i32 2
  %334 = load i32, i32* %333, align 4
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %378, label %336

336:                                              ; preds = %332
  %337 = getelementptr inbounds %"class.WTF::HashSet.425", %"class.WTF::HashSet.425"* %45, i64 0, i32 0
  %338 = bitcast %"class.WTF::StringView"* %46 to i8*
  %339 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %46, i64 0, i32 0
  %340 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %46, i64 0, i32 1
  %341 = bitcast i8** %340 to %"class.WTF::StringImpl"**
  %342 = bitcast %"class.WTF::StringView"* %46 to i64*
  %343 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %46, i64 0, i32 2
  br label %379

344:                                              ; preds = %400
  %345 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %326, align 8
  %346 = bitcast %"class.WTF::AtomicString"* %345 to i8*
  %347 = icmp eq %"class.WTF::AtomicString"* %345, null
  br i1 %347, label %378, label %348, !prof !27

348:                                              ; preds = %344
  %349 = load i32, i32* %327, align 8
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %377, label %351

351:                                              ; preds = %348
  %352 = zext i32 %349 to i64
  br label %353

353:                                              ; preds = %374, %351
  %354 = phi i64 [ 0, %351 ], [ %375, %374 ]
  %355 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %345, i64 %354
  %356 = bitcast %"class.WTF::AtomicString"* %355 to i8**
  %357 = load i8*, i8** %356, align 8
  %358 = bitcast i8* %357 to %"class.WTF::StringImpl"*
  %359 = ptrtoint i8* %357 to i64
  switch i64 %359, label %360 [
    i64 -1, label %374
    i64 0, label %374
  ]

360:                                              ; preds = %353
  %361 = getelementptr inbounds i8, i8* %357, i64 8
  %362 = bitcast i8* %361 to i32*
  %363 = load atomic i32, i32* %362 monotonic, align 4
  %364 = and i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = bitcast i8* %357 to i32*
  %367 = load i32, i32* %366, align 4
  br i1 %365, label %368, label %370

368:                                              ; preds = %360
  %369 = add i32 %367, -1
  store i32 %369, i32* %366, align 4
  br label %370

370:                                              ; preds = %368, %360
  %371 = phi i32 [ %369, %368 ], [ %367, %360 ]
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %374

373:                                              ; preds = %370
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %358) #19
  br label %374

374:                                              ; preds = %373, %370, %353, %353
  %375 = add nuw nsw i64 %354, 1
  %376 = icmp eq i64 %375, %352
  br i1 %376, label %377, label %353

377:                                              ; preds = %374, %348
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %346) #19
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %326, align 8
  br label %378

378:                                              ; preds = %377, %344, %332, %324
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %325) #19
  br label %405

379:                                              ; preds = %403, %336
  %380 = phi %"class.blink::SpaceSplitString::Data"* [ %330, %336 ], [ %404, %403 ]
  %381 = phi i32 [ 0, %336 ], [ %401, %403 ]
  %382 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %380, i64 0, i32 2
  %383 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.361"* %382, i32 %381) #19
  %384 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.426"* nonnull %337, %"class.WTF::AtomicString"* dereferenceable(8) %383, %"class.WTF::AtomicString"* dereferenceable(8) %383) #19
  %385 = extractvalue { %"class.WTF::AtomicString"*, i8 } %384, 1
  %386 = and i8 %385, 1
  %387 = icmp eq i8 %386, 0
  br i1 %387, label %400, label %388

388:                                              ; preds = %379
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %44, i8 zeroext 46) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %338) #19
  %389 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %383, i64 0, i32 0, i32 0, i32 0
  %390 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %389, align 8
  %391 = icmp eq %"class.WTF::StringImpl"* %390, null
  br i1 %391, label %392, label %394

392:                                              ; preds = %388
  store i8* null, i8** %340, align 8
  %393 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %393, i64* %342, align 8
  br label %398

394:                                              ; preds = %388
  store %"class.WTF::StringImpl"* %390, %"class.WTF::StringImpl"** %339, align 8
  %395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %390, i64 0, i32 1
  %396 = load i32, i32* %395, align 4
  %397 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %390, i64 1
  store %"class.WTF::StringImpl"* %397, %"class.WTF::StringImpl"** %341, align 8
  br label %398

398:                                              ; preds = %394, %392
  %399 = phi i32 [ %396, %394 ], [ 0, %392 ]
  store i32 %399, i32* %343, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %44, %"class.WTF::StringView"* nonnull dereferenceable(24) %46) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %338) #19
  br label %400

400:                                              ; preds = %398, %379
  %401 = add nuw i32 %381, 1
  %402 = icmp eq i32 %401, %334
  br i1 %402, label %344, label %403

403:                                              ; preds = %400
  %404 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %329, align 8
  br label %379

405:                                              ; preds = %378, %322, %318, %308
  br i1 %130, label %406, label %443

406:                                              ; preds = %405
  %407 = bitcast %"class.blink::PseudoElement"* %131 to i8 (%"class.blink::PseudoElement"*)***
  %408 = load i8 (%"class.blink::PseudoElement"*)**, i8 (%"class.blink::PseudoElement"*)*** %407, align 8
  %409 = getelementptr inbounds i8 (%"class.blink::PseudoElement"*)*, i8 (%"class.blink::PseudoElement"*)** %408, i64 34
  %410 = load i8 (%"class.blink::PseudoElement"*)*, i8 (%"class.blink::PseudoElement"*)** %409, align 8
  %411 = call zeroext i8 %410(%"class.blink::PseudoElement"* nonnull %131) #19
  %412 = icmp eq i8 %411, 3
  br i1 %412, label %413, label %419

413:                                              ; preds = %406
  %414 = bitcast %"class.WTF::StringView"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %414) #19
  %415 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %416 = bitcast %"class.WTF::StringView"* %47 to i64*
  store i64 %415, i64* %416, align 8
  %417 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %47, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i64 0, i64 0), i8** %417, align 8
  %418 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %47, i64 0, i32 2
  store i32 8, i32* %418, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %44, %"class.WTF::StringView"* nonnull dereferenceable(24) %47) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %414) #19
  br label %443

419:                                              ; preds = %406
  %420 = load i8 (%"class.blink::PseudoElement"*)**, i8 (%"class.blink::PseudoElement"*)*** %407, align 8
  %421 = getelementptr inbounds i8 (%"class.blink::PseudoElement"*)*, i8 (%"class.blink::PseudoElement"*)** %420, i64 34
  %422 = load i8 (%"class.blink::PseudoElement"*)*, i8 (%"class.blink::PseudoElement"*)** %421, align 8
  %423 = call zeroext i8 %422(%"class.blink::PseudoElement"* nonnull %131) #19
  %424 = icmp eq i8 %423, 4
  br i1 %424, label %425, label %431

425:                                              ; preds = %419
  %426 = bitcast %"class.WTF::StringView"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %426) #19
  %427 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %428 = bitcast %"class.WTF::StringView"* %48 to i64*
  store i64 %427, i64* %428, align 8
  %429 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %48, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.53, i64 0, i64 0), i8** %429, align 8
  %430 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %48, i64 0, i32 2
  store i32 7, i32* %430, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %44, %"class.WTF::StringView"* nonnull dereferenceable(24) %48) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %426) #19
  br label %443

431:                                              ; preds = %419
  %432 = load i8 (%"class.blink::PseudoElement"*)**, i8 (%"class.blink::PseudoElement"*)*** %407, align 8
  %433 = getelementptr inbounds i8 (%"class.blink::PseudoElement"*)*, i8 (%"class.blink::PseudoElement"*)** %432, i64 34
  %434 = load i8 (%"class.blink::PseudoElement"*)*, i8 (%"class.blink::PseudoElement"*)** %433, align 8
  %435 = call zeroext i8 %434(%"class.blink::PseudoElement"* nonnull %131) #19
  %436 = icmp eq i8 %435, 5
  br i1 %436, label %437, label %443

437:                                              ; preds = %431
  %438 = bitcast %"class.WTF::StringView"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %438) #19
  %439 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %440 = bitcast %"class.WTF::StringView"* %49 to i64*
  store i64 %439, i64* %440, align 8
  %441 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %49, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.54, i64 0, i64 0), i8** %441, align 8
  %442 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %49, i64 0, i32 2
  store i32 8, i32* %442, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %44, %"class.WTF::StringView"* nonnull dereferenceable(24) %49) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %438) #19
  br label %443

443:                                              ; preds = %437, %431, %425, %413, %405
  %444 = load i32, i32* %313, align 8
  %445 = icmp eq i32 %444, 0
  br i1 %445, label %484, label %446

446:                                              ; preds = %443
  %447 = bitcast %"class.WTF::String"* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %447) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %50, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.55, i64 0, i64 0), i64 9) #19
  %448 = bitcast %"class.WTF::String"* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %448) #19
  %449 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %44) #19
  %450 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %51, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %449, %"class.WTF::StringImpl"** %450, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %118, %"class.WTF::String"* nonnull dereferenceable(8) %50, %"class.WTF::String"* nonnull dereferenceable(8) %51) #19
  %451 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %450, align 8
  %452 = icmp eq %"class.WTF::StringImpl"* %451, null
  br i1 %452, label %466, label %453

453:                                              ; preds = %446
  %454 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %451, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %455 = load atomic i32, i32* %454 monotonic, align 4
  %456 = and i32 %455, 2
  %457 = icmp eq i32 %456, 0
  %458 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %451, i64 0, i32 0
  %459 = load i32, i32* %458, align 4
  br i1 %457, label %460, label %462

460:                                              ; preds = %453
  %461 = add i32 %459, -1
  store i32 %461, i32* %458, align 4
  br label %462

462:                                              ; preds = %460, %453
  %463 = phi i32 [ %461, %460 ], [ %459, %453 ]
  %464 = icmp eq i32 %463, 0
  br i1 %464, label %465, label %466

465:                                              ; preds = %462
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %451) #19
  br label %466

466:                                              ; preds = %465, %462, %446
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %448) #19
  %467 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %50, i64 0, i32 0, i32 0
  %468 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %467, align 8
  %469 = icmp eq %"class.WTF::StringImpl"* %468, null
  br i1 %469, label %483, label %470

470:                                              ; preds = %466
  %471 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %468, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %472 = load atomic i32, i32* %471 monotonic, align 4
  %473 = and i32 %472, 2
  %474 = icmp eq i32 %473, 0
  %475 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %468, i64 0, i32 0
  %476 = load i32, i32* %475, align 4
  br i1 %474, label %477, label %479

477:                                              ; preds = %470
  %478 = add i32 %476, -1
  store i32 %478, i32* %475, align 4
  br label %479

479:                                              ; preds = %477, %470
  %480 = phi i32 [ %478, %477 ], [ %476, %470 ]
  %481 = icmp eq i32 %480, 0
  br i1 %481, label %482, label %483

482:                                              ; preds = %479
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %468) #19
  br label %483

483:                                              ; preds = %482, %479, %466
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %447) #19
  br label %484

484:                                              ; preds = %483, %443
  %485 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %114, i64 0, i32 0, i32 0, i32 1
  %486 = load i32, i32* %485, align 8
  %487 = and i32 %486, 1
  %488 = icmp eq i32 %487, 0
  %489 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %114, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %488, label %494, label %490

490:                                              ; preds = %484
  %491 = bitcast %"class.blink::NodeData"** %489 to %"class.blink::NodeRareData"**
  %492 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %491, align 8
  %493 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %492, i64 0, i32 1, i32 0, i32 0
  br label %496

494:                                              ; preds = %484
  %495 = bitcast %"class.blink::NodeData"** %489 to %"class.blink::NodeRenderingData"**
  br label %496

496:                                              ; preds = %494, %490
  %497 = phi %"class.blink::NodeRenderingData"** [ %493, %490 ], [ %495, %494 ]
  %498 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %497, align 8
  %499 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %498, i64 0, i32 1
  %500 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %499, align 8
  %501 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %114, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %502 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %501, align 8
  %503 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %502, i64 0, i32 2, i32 0, i32 0
  %504 = load %"class.blink::Document"*, %"class.blink::Document"** %503, align 8
  %505 = call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %504) #19
  %506 = icmp ne %"class.blink::LayoutObject"* %500, null
  %507 = icmp ne %"class.blink::LocalFrameView"* %505, null
  %508 = and i1 %506, %507
  br i1 %508, label %509, label %714

509:                                              ; preds = %496
  %510 = call { <2 x float>, <2 x float> } @_ZNK5blink7Element38GetBoundingClientRectNoLifecycleUpdateEv(%"class.blink::Element"* %114) #19
  %511 = extractvalue { <2 x float>, <2 x float> } %510, 1
  %512 = bitcast %"class.WTF::String"* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %512) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %52, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.56, i64 0, i64 0), i64 9) #19
  %513 = bitcast %"class.WTF::String"* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %513) #19
  %514 = extractelement <2 x float> %511, i32 0
  %515 = call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEf(float %514) #19
  %516 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %515, %"class.WTF::StringImpl"** %516, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %118, %"class.WTF::String"* nonnull dereferenceable(8) %52, %"class.WTF::String"* nonnull dereferenceable(8) %53) #19
  %517 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %516, align 8
  %518 = icmp eq %"class.WTF::StringImpl"* %517, null
  br i1 %518, label %532, label %519

519:                                              ; preds = %509
  %520 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %517, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %521 = load atomic i32, i32* %520 monotonic, align 4
  %522 = and i32 %521, 2
  %523 = icmp eq i32 %522, 0
  %524 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %517, i64 0, i32 0
  %525 = load i32, i32* %524, align 4
  br i1 %523, label %526, label %528

526:                                              ; preds = %519
  %527 = add i32 %525, -1
  store i32 %527, i32* %524, align 4
  br label %528

528:                                              ; preds = %526, %519
  %529 = phi i32 [ %527, %526 ], [ %525, %519 ]
  %530 = icmp eq i32 %529, 0
  br i1 %530, label %531, label %532

531:                                              ; preds = %528
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %517) #19
  br label %532

532:                                              ; preds = %531, %528, %509
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %513) #19
  %533 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %52, i64 0, i32 0, i32 0
  %534 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %533, align 8
  %535 = icmp eq %"class.WTF::StringImpl"* %534, null
  br i1 %535, label %549, label %536

536:                                              ; preds = %532
  %537 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %534, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %538 = load atomic i32, i32* %537 monotonic, align 4
  %539 = and i32 %538, 2
  %540 = icmp eq i32 %539, 0
  %541 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %534, i64 0, i32 0
  %542 = load i32, i32* %541, align 4
  br i1 %540, label %543, label %545

543:                                              ; preds = %536
  %544 = add i32 %542, -1
  store i32 %544, i32* %541, align 4
  br label %545

545:                                              ; preds = %543, %536
  %546 = phi i32 [ %544, %543 ], [ %542, %536 ]
  %547 = icmp eq i32 %546, 0
  br i1 %547, label %548, label %549

548:                                              ; preds = %545
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %534) #19
  br label %549

549:                                              ; preds = %548, %545, %532
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %512) #19
  %550 = bitcast %"class.WTF::String"* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %550) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %54, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.57, i64 0, i64 0), i64 10) #19
  %551 = bitcast %"class.WTF::String"* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %551) #19
  %552 = extractelement <2 x float> %511, i32 1
  %553 = call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEf(float %552) #19
  %554 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %55, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %553, %"class.WTF::StringImpl"** %554, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %118, %"class.WTF::String"* nonnull dereferenceable(8) %54, %"class.WTF::String"* nonnull dereferenceable(8) %55) #19
  %555 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %554, align 8
  %556 = icmp eq %"class.WTF::StringImpl"* %555, null
  br i1 %556, label %570, label %557

557:                                              ; preds = %549
  %558 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %555, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %559 = load atomic i32, i32* %558 monotonic, align 4
  %560 = and i32 %559, 2
  %561 = icmp eq i32 %560, 0
  %562 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %555, i64 0, i32 0
  %563 = load i32, i32* %562, align 4
  br i1 %561, label %564, label %566

564:                                              ; preds = %557
  %565 = add i32 %563, -1
  store i32 %565, i32* %562, align 4
  br label %566

566:                                              ; preds = %564, %557
  %567 = phi i32 [ %565, %564 ], [ %563, %557 ]
  %568 = icmp eq i32 %567, 0
  br i1 %568, label %569, label %570

569:                                              ; preds = %566
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %555) #19
  br label %570

570:                                              ; preds = %569, %566, %549
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %551) #19
  %571 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %54, i64 0, i32 0, i32 0
  %572 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %571, align 8
  %573 = icmp eq %"class.WTF::StringImpl"* %572, null
  br i1 %573, label %587, label %574

574:                                              ; preds = %570
  %575 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %572, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %576 = load atomic i32, i32* %575 monotonic, align 4
  %577 = and i32 %576, 2
  %578 = icmp eq i32 %577, 0
  %579 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %572, i64 0, i32 0
  %580 = load i32, i32* %579, align 4
  br i1 %578, label %581, label %583

581:                                              ; preds = %574
  %582 = add i32 %580, -1
  store i32 %582, i32* %579, align 4
  br label %583

583:                                              ; preds = %581, %574
  %584 = phi i32 [ %582, %581 ], [ %580, %574 ]
  %585 = icmp eq i32 %584, 0
  br i1 %585, label %586, label %587

586:                                              ; preds = %583
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %572) #19
  br label %587

587:                                              ; preds = %586, %583, %570
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %550) #19
  %588 = bitcast %"class.WTF::String"* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %588) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %56, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.58, i64 0, i64 0), i64 19) #19
  %589 = bitcast %"class.blink::Element"* %114 to i1 (%"class.blink::Element"*)***
  %590 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %589, align 8
  %591 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %590, i64 103
  %592 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %591, align 8
  %593 = call zeroext i1 %592(%"class.blink::Element"* %114) #19
  call void @_ZN5blink8protocol15DictionaryValue10setBooleanERKN3WTF6StringEb(%"class.blink::protocol::DictionaryValue"* nonnull %118, %"class.WTF::String"* nonnull dereferenceable(8) %56, i1 zeroext %593) #19
  %594 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %56, i64 0, i32 0, i32 0
  %595 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %594, align 8
  %596 = icmp eq %"class.WTF::StringImpl"* %595, null
  br i1 %596, label %610, label %597

597:                                              ; preds = %587
  %598 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %595, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %599 = load atomic i32, i32* %598 monotonic, align 4
  %600 = and i32 %599, 2
  %601 = icmp eq i32 %600, 0
  %602 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %595, i64 0, i32 0
  %603 = load i32, i32* %602, align 4
  br i1 %601, label %604, label %606

604:                                              ; preds = %597
  %605 = add i32 %603, -1
  store i32 %605, i32* %602, align 4
  br label %606

606:                                              ; preds = %604, %597
  %607 = phi i32 [ %605, %604 ], [ %603, %597 ]
  %608 = icmp eq i32 %607, 0
  br i1 %608, label %609, label %610

609:                                              ; preds = %606
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %595) #19
  br label %610

610:                                              ; preds = %609, %606, %587
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %588) #19
  %611 = bitcast %"class.WTF::String"* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %611) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %57, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.59, i64 0, i64 0), i64 14) #19
  %612 = bitcast %"class.WTF::String"* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %612) #19
  %613 = call %"class.WTF::StringImpl"* @_ZN5blink7Element12computedNameEv(%"class.blink::Element"* %114) #19
  %614 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %58, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %613, %"class.WTF::StringImpl"** %614, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %118, %"class.WTF::String"* nonnull dereferenceable(8) %57, %"class.WTF::String"* nonnull dereferenceable(8) %58) #19
  %615 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %614, align 8
  %616 = icmp eq %"class.WTF::StringImpl"* %615, null
  br i1 %616, label %630, label %617

617:                                              ; preds = %610
  %618 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %615, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %619 = load atomic i32, i32* %618 monotonic, align 4
  %620 = and i32 %619, 2
  %621 = icmp eq i32 %620, 0
  %622 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %615, i64 0, i32 0
  %623 = load i32, i32* %622, align 4
  br i1 %621, label %624, label %626

624:                                              ; preds = %617
  %625 = add i32 %623, -1
  store i32 %625, i32* %622, align 4
  br label %626

626:                                              ; preds = %624, %617
  %627 = phi i32 [ %625, %624 ], [ %623, %617 ]
  %628 = icmp eq i32 %627, 0
  br i1 %628, label %629, label %630

629:                                              ; preds = %626
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %615) #19
  br label %630

630:                                              ; preds = %629, %626, %610
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %612) #19
  %631 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %57, i64 0, i32 0, i32 0
  %632 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %631, align 8
  %633 = icmp eq %"class.WTF::StringImpl"* %632, null
  br i1 %633, label %647, label %634

634:                                              ; preds = %630
  %635 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %632, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %636 = load atomic i32, i32* %635 monotonic, align 4
  %637 = and i32 %636, 2
  %638 = icmp eq i32 %637, 0
  %639 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %632, i64 0, i32 0
  %640 = load i32, i32* %639, align 4
  br i1 %638, label %641, label %643

641:                                              ; preds = %634
  %642 = add i32 %640, -1
  store i32 %642, i32* %639, align 4
  br label %643

643:                                              ; preds = %641, %634
  %644 = phi i32 [ %642, %641 ], [ %640, %634 ]
  %645 = icmp eq i32 %644, 0
  br i1 %645, label %646, label %647

646:                                              ; preds = %643
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %632) #19
  br label %647

647:                                              ; preds = %646, %643, %630
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %611) #19
  %648 = bitcast %"class.WTF::String"* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %648) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %59, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.60, i64 0, i64 0), i64 14) #19
  %649 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink7Element12computedRoleEv(%"class.blink::Element"* %114) #19
  %650 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %649, i64 0, i32 0
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %118, %"class.WTF::String"* nonnull dereferenceable(8) %59, %"class.WTF::String"* dereferenceable(8) %650) #19
  %651 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %59, i64 0, i32 0, i32 0
  %652 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %651, align 8
  %653 = icmp eq %"class.WTF::StringImpl"* %652, null
  br i1 %653, label %667, label %654

654:                                              ; preds = %647
  %655 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %652, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %656 = load atomic i32, i32* %655 monotonic, align 4
  %657 = and i32 %656, 2
  %658 = icmp eq i32 %657, 0
  %659 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %652, i64 0, i32 0
  %660 = load i32, i32* %659, align 4
  br i1 %658, label %661, label %663

661:                                              ; preds = %654
  %662 = add i32 %660, -1
  store i32 %662, i32* %659, align 4
  br label %663

663:                                              ; preds = %661, %654
  %664 = phi i32 [ %662, %661 ], [ %660, %654 ]
  %665 = icmp eq i32 %664, 0
  br i1 %665, label %666, label %667

666:                                              ; preds = %663
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %652) #19
  br label %667

667:                                              ; preds = %666, %663, %647
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %648) #19
  %668 = bitcast %"class.WTF::String"* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %668) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %60, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.61, i64 0, i64 0), i64 16) #19
  %669 = bitcast %"class.WTF::String"* %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %669) #19
  %670 = bitcast %"class.blink::LayoutObject"* %500 to i8* (%"class.blink::LayoutObject"*)***
  %671 = load i8* (%"class.blink::LayoutObject"*)**, i8* (%"class.blink::LayoutObject"*)*** %670, align 8
  %672 = getelementptr inbounds i8* (%"class.blink::LayoutObject"*)*, i8* (%"class.blink::LayoutObject"*)** %671, i64 10
  %673 = load i8* (%"class.blink::LayoutObject"*)*, i8* (%"class.blink::LayoutObject"*)** %672, align 8
  %674 = call i8* %673(%"class.blink::LayoutObject"* nonnull %500) #19
  %675 = icmp eq i8* %674, null
  br i1 %675, label %678, label %676

676:                                              ; preds = %667
  %677 = call i64 @strlen(i8* nonnull %674) #20
  br label %678

678:                                              ; preds = %676, %667
  %679 = phi i64 [ %677, %676 ], [ 0, %667 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %61, i8* %674, i64 %679) #19
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %118, %"class.WTF::String"* nonnull dereferenceable(8) %60, %"class.WTF::String"* nonnull dereferenceable(8) %61) #19
  %680 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %61, i64 0, i32 0, i32 0
  %681 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %680, align 8
  %682 = icmp eq %"class.WTF::StringImpl"* %681, null
  br i1 %682, label %696, label %683

683:                                              ; preds = %678
  %684 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %681, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %685 = load atomic i32, i32* %684 monotonic, align 4
  %686 = and i32 %685, 2
  %687 = icmp eq i32 %686, 0
  %688 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %681, i64 0, i32 0
  %689 = load i32, i32* %688, align 4
  br i1 %687, label %690, label %692

690:                                              ; preds = %683
  %691 = add i32 %689, -1
  store i32 %691, i32* %688, align 4
  br label %692

692:                                              ; preds = %690, %683
  %693 = phi i32 [ %691, %690 ], [ %689, %683 ]
  %694 = icmp eq i32 %693, 0
  br i1 %694, label %695, label %696

695:                                              ; preds = %692
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %681) #19
  br label %696

696:                                              ; preds = %695, %692, %678
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %669) #19
  %697 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %698 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %697, align 8
  %699 = icmp eq %"class.WTF::StringImpl"* %698, null
  br i1 %699, label %713, label %700

700:                                              ; preds = %696
  %701 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %698, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %702 = load atomic i32, i32* %701 monotonic, align 4
  %703 = and i32 %702, 2
  %704 = icmp eq i32 %703, 0
  %705 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %698, i64 0, i32 0
  %706 = load i32, i32* %705, align 4
  br i1 %704, label %707, label %709

707:                                              ; preds = %700
  %708 = add i32 %706, -1
  store i32 %708, i32* %705, align 4
  br label %709

709:                                              ; preds = %707, %700
  %710 = phi i32 [ %708, %707 ], [ %706, %700 ]
  %711 = icmp eq i32 %710, 0
  br i1 %711, label %712, label %713

712:                                              ; preds = %709
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %698) #19
  br label %713

713:                                              ; preds = %712, %709, %696
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %668) #19
  br label %714

714:                                              ; preds = %713, %496
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %44) #19
  %715 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %310, align 8
  %716 = icmp eq %"class.WTF::StringImpl"* %715, null
  br i1 %716, label %730, label %717

717:                                              ; preds = %714
  %718 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %715, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %719 = load atomic i32, i32* %718 monotonic, align 4
  %720 = and i32 %719, 2
  %721 = icmp eq i32 %720, 0
  %722 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %715, i64 0, i32 0
  %723 = load i32, i32* %722, align 4
  br i1 %721, label %724, label %726

724:                                              ; preds = %717
  %725 = add i32 %723, -1
  store i32 %725, i32* %722, align 4
  br label %726

726:                                              ; preds = %724, %717
  %727 = phi i32 [ %725, %724 ], [ %723, %717 ]
  %728 = icmp eq i32 %727, 0
  br i1 %728, label %729, label %730

729:                                              ; preds = %726
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %715) #19
  br label %730

730:                                              ; preds = %714, %726, %729
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %309) #19
  %731 = ptrtoint i8* %117 to i64
  %732 = getelementptr inbounds %"class.std::__1::unique_ptr.2440", %"class.std::__1::unique_ptr.2440"* %89, i64 0, i32 0, i32 0, i32 0
  %733 = load %"class.blink::protocol::DictionaryValue"*, %"class.blink::protocol::DictionaryValue"** %732, align 8
  store i64 %731, i64* %90, align 8
  %734 = icmp eq %"class.blink::protocol::DictionaryValue"* %733, null
  br i1 %734, label %917, label %735

735:                                              ; preds = %730
  %736 = bitcast %"class.blink::protocol::DictionaryValue"* %733 to void (%"class.blink::protocol::DictionaryValue"*)***
  %737 = load void (%"class.blink::protocol::DictionaryValue"*)**, void (%"class.blink::protocol::DictionaryValue"*)*** %736, align 8
  %738 = getelementptr inbounds void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %737, i64 2
  %739 = load void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %738, align 8
  call void %739(%"class.blink::protocol::DictionaryValue"* nonnull %733) #19
  br label %917

740:                                              ; preds = %105
  %741 = and i1 %109, %4
  br i1 %741, label %742, label %917

742:                                              ; preds = %740
  %743 = tail call i8* @_Znwm(i64 80) #18
  %744 = bitcast i8* %743 to %"class.blink::protocol::DictionaryValue"*
  tail call void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"* nonnull %744) #19
  %745 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %111, i64 0, i32 0, i32 0, i32 1
  %746 = load i32, i32* %745, align 8
  %747 = and i32 %746, 1
  %748 = icmp eq i32 %747, 0
  %749 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %111, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %748, label %754, label %750

750:                                              ; preds = %742
  %751 = bitcast %"class.blink::NodeData"** %749 to %"class.blink::NodeRareData"**
  %752 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %751, align 8
  %753 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %752, i64 0, i32 1, i32 0, i32 0
  br label %756

754:                                              ; preds = %742
  %755 = bitcast %"class.blink::NodeData"** %749 to %"class.blink::NodeRenderingData"**
  br label %756

756:                                              ; preds = %754, %750
  %757 = phi %"class.blink::NodeRenderingData"** [ %753, %750 ], [ %755, %754 ]
  %758 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %757, align 8
  %759 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %758, i64 0, i32 1
  %760 = bitcast %"class.blink::LayoutObject"** %759 to %"class.blink::LayoutText"**
  %761 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %760, align 8
  %762 = icmp eq %"class.blink::LayoutText"* %761, null
  br i1 %762, label %907, label %763

763:                                              ; preds = %756
  %764 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %761, i64 0, i32 0, i32 4
  %765 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %764 to i96*
  %766 = load i96, i96* %765, align 4
  %767 = and i96 %766, 33554432
  %768 = icmp eq i96 %767, 0
  br i1 %768, label %907, label %769

769:                                              ; preds = %763
  %770 = tail call { i64, i64 } @_ZNK5blink10LayoutText26PhysicalVisualOverflowRectEv(%"class.blink::LayoutText"* nonnull %761) #19
  %771 = extractvalue { i64, i64 } %770, 1
  %772 = bitcast %"class.WTF::String"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %772) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %31, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.56, i64 0, i64 0), i64 9) #19
  %773 = bitcast %"class.WTF::String"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %773) #19
  %774 = bitcast %"class.blink::LayoutUnit"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %774) #19
  %775 = trunc i64 %771 to i32
  %776 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %33, i64 0, i32 0
  store i32 %775, i32* %776, align 4
  %777 = call %"class.WTF::StringImpl"* @_ZNK5blink10LayoutUnit8ToStringEv(%"class.blink::LayoutUnit"* nonnull %33) #19
  %778 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %32, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %777, %"class.WTF::StringImpl"** %778, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %744, %"class.WTF::String"* nonnull dereferenceable(8) %31, %"class.WTF::String"* nonnull dereferenceable(8) %32) #19
  %779 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %778, align 8
  %780 = icmp eq %"class.WTF::StringImpl"* %779, null
  br i1 %780, label %794, label %781

781:                                              ; preds = %769
  %782 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %779, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %783 = load atomic i32, i32* %782 monotonic, align 4
  %784 = and i32 %783, 2
  %785 = icmp eq i32 %784, 0
  %786 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %779, i64 0, i32 0
  %787 = load i32, i32* %786, align 4
  br i1 %785, label %788, label %790

788:                                              ; preds = %781
  %789 = add i32 %787, -1
  store i32 %789, i32* %786, align 4
  br label %790

790:                                              ; preds = %788, %781
  %791 = phi i32 [ %789, %788 ], [ %787, %781 ]
  %792 = icmp eq i32 %791, 0
  br i1 %792, label %793, label %794

793:                                              ; preds = %790
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %779) #19
  br label %794

794:                                              ; preds = %793, %790, %769
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %774) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %773) #19
  %795 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 0, i32 0, i32 0
  %796 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %795, align 8
  %797 = icmp eq %"class.WTF::StringImpl"* %796, null
  br i1 %797, label %811, label %798

798:                                              ; preds = %794
  %799 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %796, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %800 = load atomic i32, i32* %799 monotonic, align 4
  %801 = and i32 %800, 2
  %802 = icmp eq i32 %801, 0
  %803 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %796, i64 0, i32 0
  %804 = load i32, i32* %803, align 4
  br i1 %802, label %805, label %807

805:                                              ; preds = %798
  %806 = add i32 %804, -1
  store i32 %806, i32* %803, align 4
  br label %807

807:                                              ; preds = %805, %798
  %808 = phi i32 [ %806, %805 ], [ %804, %798 ]
  %809 = icmp eq i32 %808, 0
  br i1 %809, label %810, label %811

810:                                              ; preds = %807
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %796) #19
  br label %811

811:                                              ; preds = %810, %807, %794
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %772) #19
  %812 = bitcast %"class.WTF::String"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %812) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %34, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.57, i64 0, i64 0), i64 10) #19
  %813 = bitcast %"class.WTF::String"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %813) #19
  %814 = bitcast %"class.blink::LayoutUnit"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %814) #19
  %815 = lshr i64 %771, 32
  %816 = trunc i64 %815 to i32
  %817 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %36, i64 0, i32 0
  store i32 %816, i32* %817, align 4
  %818 = call %"class.WTF::StringImpl"* @_ZNK5blink10LayoutUnit8ToStringEv(%"class.blink::LayoutUnit"* nonnull %36) #19
  %819 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %818, %"class.WTF::StringImpl"** %819, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %744, %"class.WTF::String"* nonnull dereferenceable(8) %34, %"class.WTF::String"* nonnull dereferenceable(8) %35) #19
  %820 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %819, align 8
  %821 = icmp eq %"class.WTF::StringImpl"* %820, null
  br i1 %821, label %835, label %822

822:                                              ; preds = %811
  %823 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %820, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %824 = load atomic i32, i32* %823 monotonic, align 4
  %825 = and i32 %824, 2
  %826 = icmp eq i32 %825, 0
  %827 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %820, i64 0, i32 0
  %828 = load i32, i32* %827, align 4
  br i1 %826, label %829, label %831

829:                                              ; preds = %822
  %830 = add i32 %828, -1
  store i32 %830, i32* %827, align 4
  br label %831

831:                                              ; preds = %829, %822
  %832 = phi i32 [ %830, %829 ], [ %828, %822 ]
  %833 = icmp eq i32 %832, 0
  br i1 %833, label %834, label %835

834:                                              ; preds = %831
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %820) #19
  br label %835

835:                                              ; preds = %834, %831, %811
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %814) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %813) #19
  %836 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %34, i64 0, i32 0, i32 0
  %837 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %836, align 8
  %838 = icmp eq %"class.WTF::StringImpl"* %837, null
  br i1 %838, label %852, label %839

839:                                              ; preds = %835
  %840 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %837, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %841 = load atomic i32, i32* %840 monotonic, align 4
  %842 = and i32 %841, 2
  %843 = icmp eq i32 %842, 0
  %844 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %837, i64 0, i32 0
  %845 = load i32, i32* %844, align 4
  br i1 %843, label %846, label %848

846:                                              ; preds = %839
  %847 = add i32 %845, -1
  store i32 %847, i32* %844, align 4
  br label %848

848:                                              ; preds = %846, %839
  %849 = phi i32 [ %847, %846 ], [ %845, %839 ]
  %850 = icmp eq i32 %849, 0
  br i1 %850, label %851, label %852

851:                                              ; preds = %848
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %837) #19
  br label %852

852:                                              ; preds = %851, %848, %835
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %812) #19
  %853 = bitcast %"class.WTF::String"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %853) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %37, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50, i64 0, i64 0), i64 7) #19
  %854 = bitcast %"class.WTF::String"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %854) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %38, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0), i64 5) #19
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %744, %"class.WTF::String"* nonnull dereferenceable(8) %37, %"class.WTF::String"* nonnull dereferenceable(8) %38) #19
  %855 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %38, i64 0, i32 0, i32 0
  %856 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %855, align 8
  %857 = icmp eq %"class.WTF::StringImpl"* %856, null
  br i1 %857, label %871, label %858

858:                                              ; preds = %852
  %859 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %856, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %860 = load atomic i32, i32* %859 monotonic, align 4
  %861 = and i32 %860, 2
  %862 = icmp eq i32 %861, 0
  %863 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %856, i64 0, i32 0
  %864 = load i32, i32* %863, align 4
  br i1 %862, label %865, label %867

865:                                              ; preds = %858
  %866 = add i32 %864, -1
  store i32 %866, i32* %863, align 4
  br label %867

867:                                              ; preds = %865, %858
  %868 = phi i32 [ %866, %865 ], [ %864, %858 ]
  %869 = icmp eq i32 %868, 0
  br i1 %869, label %870, label %871

870:                                              ; preds = %867
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %856) #19
  br label %871

871:                                              ; preds = %870, %867, %852
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %854) #19
  %872 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 0, i32 0, i32 0
  %873 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %872, align 8
  %874 = icmp eq %"class.WTF::StringImpl"* %873, null
  br i1 %874, label %888, label %875

875:                                              ; preds = %871
  %876 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %873, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %877 = load atomic i32, i32* %876 monotonic, align 4
  %878 = and i32 %877, 2
  %879 = icmp eq i32 %878, 0
  %880 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %873, i64 0, i32 0
  %881 = load i32, i32* %880, align 4
  br i1 %879, label %882, label %884

882:                                              ; preds = %875
  %883 = add i32 %881, -1
  store i32 %883, i32* %880, align 4
  br label %884

884:                                              ; preds = %882, %875
  %885 = phi i32 [ %883, %882 ], [ %881, %875 ]
  %886 = icmp eq i32 %885, 0
  br i1 %886, label %887, label %888

887:                                              ; preds = %884
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %873) #19
  br label %888

888:                                              ; preds = %887, %884, %871
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %853) #19
  %889 = bitcast %"class.WTF::String"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %889) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %39, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10, i64 0, i64 0), i64 21) #19
  call void @_ZN5blink8protocol15DictionaryValue10setBooleanERKN3WTF6StringEb(%"class.blink::protocol::DictionaryValue"* nonnull %744, %"class.WTF::String"* nonnull dereferenceable(8) %39, i1 zeroext false) #19
  %890 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %39, i64 0, i32 0, i32 0
  %891 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %890, align 8
  %892 = icmp eq %"class.WTF::StringImpl"* %891, null
  br i1 %892, label %906, label %893

893:                                              ; preds = %888
  %894 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %891, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %895 = load atomic i32, i32* %894 monotonic, align 4
  %896 = and i32 %895, 2
  %897 = icmp eq i32 %896, 0
  %898 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %891, i64 0, i32 0
  %899 = load i32, i32* %898, align 4
  br i1 %897, label %900, label %902

900:                                              ; preds = %893
  %901 = add i32 %899, -1
  store i32 %901, i32* %898, align 4
  br label %902

902:                                              ; preds = %900, %893
  %903 = phi i32 [ %901, %900 ], [ %899, %893 ]
  %904 = icmp eq i32 %903, 0
  br i1 %904, label %905, label %906

905:                                              ; preds = %902
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %891) #19
  br label %906

906:                                              ; preds = %905, %902, %888
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %889) #19
  br label %907

907:                                              ; preds = %756, %763, %906
  %908 = ptrtoint i8* %743 to i64
  %909 = getelementptr inbounds %"class.std::__1::unique_ptr.2440", %"class.std::__1::unique_ptr.2440"* %89, i64 0, i32 0, i32 0, i32 0
  %910 = load %"class.blink::protocol::DictionaryValue"*, %"class.blink::protocol::DictionaryValue"** %909, align 8
  store i64 %908, i64* %90, align 8
  %911 = icmp eq %"class.blink::protocol::DictionaryValue"* %910, null
  br i1 %911, label %917, label %912

912:                                              ; preds = %907
  %913 = bitcast %"class.blink::protocol::DictionaryValue"* %910 to void (%"class.blink::protocol::DictionaryValue"*)***
  %914 = load void (%"class.blink::protocol::DictionaryValue"*)**, void (%"class.blink::protocol::DictionaryValue"*)*** %913, align 8
  %915 = getelementptr inbounds void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %914, i64 2
  %916 = load void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %915, align 8
  call void %916(%"class.blink::protocol::DictionaryValue"* nonnull %910) #19
  br label %917

917:                                              ; preds = %87, %907, %912, %730, %735, %740
  %918 = getelementptr inbounds %"class.std::__1::unique_ptr.2440", %"class.std::__1::unique_ptr.2440"* %89, i64 0, i32 0, i32 0, i32 0
  %919 = load %"class.blink::protocol::DictionaryValue"*, %"class.blink::protocol::DictionaryValue"** %918, align 8
  %920 = icmp eq %"class.blink::protocol::DictionaryValue"* %919, null
  br i1 %920, label %1446, label %921

921:                                              ; preds = %917
  %922 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %2, i64 0, i32 10
  %923 = load i8, i8* %922, align 1, !range !26
  %924 = icmp eq i8 %923, 0
  br i1 %924, label %1384, label %925

925:                                              ; preds = %921
  %926 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %2, i64 0, i32 16
  %927 = call i8* @_Znwm(i64 80) #18
  %928 = bitcast i8* %927 to %"class.blink::protocol::DictionaryValue"*
  call void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"* nonnull %928) #19
  %929 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #19
  %930 = bitcast i8* %929 to %"class.blink::CSSComputedStyleDeclaration"*
  %931 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %931) #19
  %932 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %932, align 8
  call void @_ZN5blink27CSSComputedStyleDeclarationC1EPNS_4NodeEbRKN3WTF6StringE(%"class.blink::CSSComputedStyleDeclaration"* %930, %"class.blink::Node"* %1, i1 zeroext true, %"class.WTF::String"* nonnull dereferenceable(8) %9) #19
  %933 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %932, align 8
  %934 = icmp eq %"class.WTF::StringImpl"* %933, null
  br i1 %934, label %948, label %935

935:                                              ; preds = %925
  %936 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %933, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %937 = load atomic i32, i32* %936 monotonic, align 4
  %938 = and i32 %937, 2
  %939 = icmp eq i32 %938, 0
  %940 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %933, i64 0, i32 0
  %941 = load i32, i32* %940, align 4
  br i1 %939, label %942, label %944

942:                                              ; preds = %935
  %943 = add i32 %941, -1
  store i32 %943, i32* %940, align 4
  br label %944

944:                                              ; preds = %942, %935
  %945 = phi i32 [ %943, %942 ], [ %941, %935 ]
  %946 = icmp eq i32 %945, 0
  br i1 %946, label %947, label %948

947:                                              ; preds = %944
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %933) #19
  br label %948

948:                                              ; preds = %947, %944, %925
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %931) #19
  %949 = getelementptr inbounds i8, i8* %929, i64 -4
  %950 = bitcast i8* %949 to i16*
  %951 = load atomic i16, i16* %950 monotonic, align 2
  %952 = or i16 %951, 1
  store atomic i16 %952, i16* %950 release, align 2
  %953 = bitcast %"class.WTF::Vector.529"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %953) #19
  %954 = getelementptr inbounds %"class.WTF::Vector.529", %"class.WTF::Vector.529"* %10, i64 0, i32 0, i32 0, i32 0
  %955 = getelementptr inbounds %"class.WTF::Vector.529", %"class.WTF::Vector.529"* %10, i64 0, i32 0, i32 0, i32 1
  %956 = getelementptr inbounds %"class.WTF::Vector.529", %"class.WTF::Vector.529"* %10, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %953, i8 0, i64 16, i1 false) #19
  br i1 %104, label %1019, label %957

957:                                              ; preds = %948
  %958 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %959 = load i32, i32* %958, align 8
  %960 = and i32 %959, 2
  %961 = icmp eq i32 %960, 0
  br i1 %961, label %1019, label %962

962:                                              ; preds = %957
  %963 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1
  %964 = bitcast %"class.blink::Node"* %963 to %"class.blink::Node"**
  %965 = load %"class.blink::Node"*, %"class.blink::Node"** %964, align 8
  %966 = icmp eq %"class.blink::Node"* %965, null
  br i1 %966, label %1019, label %968

967:                                              ; preds = %968
  br i1 %973, label %979, label %1019

968:                                              ; preds = %962, %968
  %969 = phi %"class.blink::Node"* [ %975, %968 ], [ %965, %962 ]
  %970 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %969, i64 0, i32 1
  %971 = load i32, i32* %970, align 8
  %972 = and i32 %971, 12
  %973 = icmp eq i32 %972, 4
  %974 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %969, i64 0, i32 5, i32 0, i32 0
  %975 = load %"class.blink::Node"*, %"class.blink::Node"** %974, align 8
  %976 = icmp ne %"class.blink::Node"* %975, null
  %977 = xor i1 %973, true
  %978 = and i1 %976, %977
  br i1 %978, label %968, label %967

979:                                              ; preds = %967
  %980 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %980) #19
  store i32 2, i32* %11, align 4
  call void @_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.529"* nonnull %10, i32* nonnull dereferenceable(4) %11) #19
  %981 = load i32, i32* %956, align 4
  %982 = load i32, i32* %955, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %980) #19
  %983 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %983) #19
  store i32 4, i32* %12, align 4
  %984 = icmp eq i32 %981, %982
  br i1 %984, label %991, label %985, !prof !2

985:                                              ; preds = %979
  %986 = load i32*, i32** %954, align 8
  %987 = zext i32 %981 to i64
  %988 = getelementptr inbounds i32, i32* %986, i64 %987
  store i32 4, i32* %988, align 4
  %989 = load i32, i32* %956, align 4
  %990 = add i32 %989, 1
  store i32 %990, i32* %956, align 4
  br label %993

991:                                              ; preds = %979
  call void @_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.529"* nonnull %10, i32* nonnull dereferenceable(4) %12) #19
  %992 = load i32, i32* %956, align 4
  br label %993

993:                                              ; preds = %991, %985
  %994 = phi i32 [ %990, %985 ], [ %992, %991 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %983) #19
  %995 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %995) #19
  store i32 8, i32* %13, align 4
  %996 = load i32, i32* %955, align 8
  %997 = icmp eq i32 %994, %996
  br i1 %997, label %1004, label %998, !prof !2

998:                                              ; preds = %993
  %999 = load i32*, i32** %954, align 8
  %1000 = zext i32 %994 to i64
  %1001 = getelementptr inbounds i32, i32* %999, i64 %1000
  store i32 8, i32* %1001, align 4
  %1002 = load i32, i32* %956, align 4
  %1003 = add i32 %1002, 1
  store i32 %1003, i32* %956, align 4
  br label %1006

1004:                                             ; preds = %993
  call void @_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.529"* nonnull %10, i32* nonnull dereferenceable(4) %13) #19
  %1005 = load i32, i32* %956, align 4
  br label %1006

1006:                                             ; preds = %1004, %998
  %1007 = phi i32 [ %1003, %998 ], [ %1005, %1004 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %995) #19
  %1008 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1008) #19
  store i32 211, i32* %14, align 4
  %1009 = load i32, i32* %955, align 8
  %1010 = icmp eq i32 %1007, %1009
  br i1 %1010, label %1017, label %1011, !prof !2

1011:                                             ; preds = %1006
  %1012 = load i32*, i32** %954, align 8
  %1013 = zext i32 %1007 to i64
  %1014 = getelementptr inbounds i32, i32* %1012, i64 %1013
  store i32 211, i32* %1014, align 4
  %1015 = load i32, i32* %956, align 4
  %1016 = add i32 %1015, 1
  store i32 %1016, i32* %956, align 4
  br label %1021

1017:                                             ; preds = %1006
  call void @_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.529"* nonnull %10, i32* nonnull dereferenceable(4) %14) #19
  %1018 = load i32, i32* %956, align 4
  br label %1021

1019:                                             ; preds = %967, %962, %957, %948
  %1020 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1020) #19
  store i32 499, i32* %15, align 4
  br label %1032

1021:                                             ; preds = %1017, %1011
  %1022 = phi i32 [ %1016, %1011 ], [ %1018, %1017 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1008) #19
  %1023 = load i32, i32* %955, align 8
  %1024 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1024) #19
  store i32 499, i32* %15, align 4
  %1025 = icmp eq i32 %1022, %1023
  br i1 %1025, label %1032, label %1026, !prof !2

1026:                                             ; preds = %1021
  %1027 = load i32*, i32** %954, align 8
  %1028 = zext i32 %1022 to i64
  %1029 = getelementptr inbounds i32, i32* %1027, i64 %1028
  store i32 499, i32* %1029, align 4
  %1030 = load i32, i32* %956, align 4
  %1031 = add i32 %1030, 1
  store i32 %1031, i32* %956, align 4
  br label %1035

1032:                                             ; preds = %1021, %1019
  %1033 = phi i8* [ %1020, %1019 ], [ %1024, %1021 ]
  call void @_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.529"* nonnull %10, i32* nonnull dereferenceable(4) %15) #19
  %1034 = load i32, i32* %956, align 4
  br label %1035

1035:                                             ; preds = %1032, %1026
  %1036 = phi i8* [ %1024, %1026 ], [ %1033, %1032 ]
  %1037 = phi i32 [ %1031, %1026 ], [ %1034, %1032 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1036) #19
  %1038 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1038) #19
  store i32 491, i32* %16, align 4
  %1039 = load i32, i32* %955, align 8
  %1040 = icmp eq i32 %1037, %1039
  br i1 %1040, label %1047, label %1041, !prof !2

1041:                                             ; preds = %1035
  %1042 = load i32*, i32** %954, align 8
  %1043 = zext i32 %1037 to i64
  %1044 = getelementptr inbounds i32, i32* %1042, i64 %1043
  store i32 491, i32* %1044, align 4
  %1045 = load i32, i32* %956, align 4
  %1046 = add i32 %1045, 1
  store i32 %1046, i32* %956, align 4
  br label %1049

1047:                                             ; preds = %1035
  call void @_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.529"* nonnull %10, i32* nonnull dereferenceable(4) %16) #19
  %1048 = load i32, i32* %956, align 4
  br label %1049

1049:                                             ; preds = %1047, %1041
  %1050 = phi i32 [ %1046, %1041 ], [ %1048, %1047 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1038) #19
  %1051 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1051) #19
  store i32 52, i32* %17, align 4
  %1052 = load i32, i32* %955, align 8
  %1053 = icmp eq i32 %1050, %1052
  br i1 %1053, label %1060, label %1054, !prof !2

1054:                                             ; preds = %1049
  %1055 = load i32*, i32** %954, align 8
  %1056 = zext i32 %1050 to i64
  %1057 = getelementptr inbounds i32, i32* %1055, i64 %1056
  store i32 52, i32* %1057, align 4
  %1058 = load i32, i32* %956, align 4
  %1059 = add i32 %1058, 1
  store i32 %1059, i32* %956, align 4
  br label %1062

1060:                                             ; preds = %1049
  call void @_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.529"* nonnull %10, i32* nonnull dereferenceable(4) %17) #19
  %1061 = load i32, i32* %956, align 4
  br label %1062

1062:                                             ; preds = %1060, %1054
  %1063 = phi i32 [ %1059, %1054 ], [ %1061, %1060 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1051) #19
  %1064 = icmp eq i32 %1063, 0
  br i1 %1064, label %1076, label %1065

1065:                                             ; preds = %1062
  %1066 = bitcast %"class.WTF::AtomicString"* %18 to i8*
  %1067 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %18, i64 0, i32 0, i32 0, i32 0
  %1068 = bitcast %"class.blink::CSSPropertyName"* %19 to i8*
  %1069 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %19, i64 0, i32 0
  %1070 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %19, i64 0, i32 1, i32 0, i32 0, i32 0
  %1071 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %18, i64 0, i32 0
  %1072 = bitcast %"class.WTF::String"* %21 to i8*
  %1073 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %1074 = bitcast %"class.WTF::String"* %20 to i8*
  %1075 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  br label %1104

1076:                                             ; preds = %1195, %1062
  %1077 = bitcast %"class.WTF::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1077) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %22, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i64 5) #19
  %1078 = bitcast i8* %927 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %919, %"class.WTF::String"* nonnull dereferenceable(8) %22, %"class.blink::protocol::Value"* nonnull %1078) #19
  %1079 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  %1080 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1079, align 8
  %1081 = icmp eq %"class.WTF::StringImpl"* %1080, null
  br i1 %1081, label %1095, label %1082

1082:                                             ; preds = %1076
  %1083 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1080, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1084 = load atomic i32, i32* %1083 monotonic, align 4
  %1085 = and i32 %1084, 2
  %1086 = icmp eq i32 %1085, 0
  %1087 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1080, i64 0, i32 0
  %1088 = load i32, i32* %1087, align 4
  br i1 %1086, label %1089, label %1091

1089:                                             ; preds = %1082
  %1090 = add i32 %1088, -1
  store i32 %1090, i32* %1087, align 4
  br label %1091

1091:                                             ; preds = %1089, %1082
  %1092 = phi i32 [ %1090, %1089 ], [ %1088, %1082 ]
  %1093 = icmp eq i32 %1092, 0
  br i1 %1093, label %1094, label %1095

1094:                                             ; preds = %1091
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1080) #19
  br label %1095

1095:                                             ; preds = %1094, %1091, %1076
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1077) #19
  %1096 = getelementptr inbounds %"struct.blink::InspectorHighlightContrastInfo", %"struct.blink::InspectorHighlightContrastInfo"* %3, i64 0, i32 2
  %1097 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1096, i64 0, i32 0, i32 0
  %1098 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1097, align 8
  %1099 = icmp eq %"class.WTF::StringImpl"* %1098, null
  br i1 %1099, label %1372, label %1100

1100:                                             ; preds = %1095
  %1101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1098, i64 0, i32 1
  %1102 = load i32, i32* %1101, align 4
  %1103 = icmp eq i32 %1102, 0
  br i1 %1103, label %1372, label %1200

1104:                                             ; preds = %1195, %1065
  %1105 = phi i64 [ 0, %1065 ], [ %1196, %1195 ]
  %1106 = trunc i64 %1105 to i32
  %1107 = call dereferenceable(4) i32* @_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.529"* nonnull %10, i32 %1106) #19
  %1108 = load i32, i32* %1107, align 4
  %1109 = call %"class.blink::CSSValue"* @_ZNK5blink27CSSComputedStyleDeclaration19GetPropertyCSSValueENS_13CSSPropertyIDE(%"class.blink::CSSComputedStyleDeclaration"* %930, i32 %1108) #19
  %1110 = icmp eq %"class.blink::CSSValue"* %1109, null
  br i1 %1110, label %1195, label %1111

1111:                                             ; preds = %1104
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1066) #19
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %1067, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1068) #19
  %1112 = call dereferenceable(4) i32* @_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.529"* nonnull %10, i32 %1106) #19
  %1113 = load i32, i32* %1112, align 4
  store i32 %1113, i32* %1069, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1070, align 8
  %1114 = call %"class.WTF::StringImpl"* @_ZNK5blink15CSSPropertyName14ToAtomicStringEv(%"class.blink::CSSPropertyName"* nonnull %19) #19
  store %"class.WTF::StringImpl"* %1114, %"class.WTF::StringImpl"** %1067, align 8
  %1115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1070, align 8
  %1116 = icmp eq %"class.WTF::StringImpl"* %1115, null
  br i1 %1116, label %1130, label %1117

1117:                                             ; preds = %1111
  %1118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1119 = load atomic i32, i32* %1118 monotonic, align 4
  %1120 = and i32 %1119, 2
  %1121 = icmp eq i32 %1120, 0
  %1122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1115, i64 0, i32 0
  %1123 = load i32, i32* %1122, align 4
  br i1 %1121, label %1124, label %1126

1124:                                             ; preds = %1117
  %1125 = add i32 %1123, -1
  store i32 %1125, i32* %1122, align 4
  br label %1126

1126:                                             ; preds = %1124, %1117
  %1127 = phi i32 [ %1125, %1124 ], [ %1123, %1117 ]
  %1128 = icmp eq i32 %1127, 0
  br i1 %1128, label %1129, label %1130

1129:                                             ; preds = %1126
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1115) #19
  br label %1130

1130:                                             ; preds = %1129, %1126, %1111
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1068) #19
  %1131 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1109, i64 0, i32 2
  %1132 = load i8, i8* %1131, align 1
  %1133 = icmp eq i8 %1132, 3
  br i1 %1133, label %1134, label %1160

1134:                                             ; preds = %1130
  %1135 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1109, i64 1, i32 1
  %1136 = bitcast i8* %1135 to i32*
  %1137 = load i32, i32* %1136, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1074) #19
  %1138 = lshr i32 %1137, 16
  %1139 = and i32 %1138, 255
  %1140 = lshr i32 %1137, 8
  %1141 = and i32 %1140, 255
  %1142 = and i32 %1137, 255
  %1143 = lshr i32 %1137, 24
  %1144 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.77, i64 0, i64 0), i32 %1139, i32 %1141, i32 %1142, i32 %1143) #19
  store %"class.WTF::StringImpl"* %1144, %"class.WTF::StringImpl"** %1075, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %928, %"class.WTF::String"* nonnull dereferenceable(8) %1071, %"class.WTF::String"* nonnull dereferenceable(8) %20) #19
  %1145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1075, align 8
  %1146 = icmp eq %"class.WTF::StringImpl"* %1145, null
  br i1 %1146, label %1177, label %1147

1147:                                             ; preds = %1134
  %1148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1149 = load atomic i32, i32* %1148 monotonic, align 4
  %1150 = and i32 %1149, 2
  %1151 = icmp eq i32 %1150, 0
  %1152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1145, i64 0, i32 0
  %1153 = load i32, i32* %1152, align 4
  br i1 %1151, label %1154, label %1156

1154:                                             ; preds = %1147
  %1155 = add i32 %1153, -1
  store i32 %1155, i32* %1152, align 4
  br label %1156

1156:                                             ; preds = %1154, %1147
  %1157 = phi i32 [ %1155, %1154 ], [ %1153, %1147 ]
  %1158 = icmp eq i32 %1157, 0
  br i1 %1158, label %1159, label %1177

1159:                                             ; preds = %1156
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1145) #19
  br label %1177

1160:                                             ; preds = %1130
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1072) #19
  %1161 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %1109) #19
  store %"class.WTF::StringImpl"* %1161, %"class.WTF::StringImpl"** %1073, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %928, %"class.WTF::String"* nonnull dereferenceable(8) %1071, %"class.WTF::String"* nonnull dereferenceable(8) %21) #19
  %1162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1073, align 8
  %1163 = icmp eq %"class.WTF::StringImpl"* %1162, null
  br i1 %1163, label %1177, label %1164

1164:                                             ; preds = %1160
  %1165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1166 = load atomic i32, i32* %1165 monotonic, align 4
  %1167 = and i32 %1166, 2
  %1168 = icmp eq i32 %1167, 0
  %1169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1162, i64 0, i32 0
  %1170 = load i32, i32* %1169, align 4
  br i1 %1168, label %1171, label %1173

1171:                                             ; preds = %1164
  %1172 = add i32 %1170, -1
  store i32 %1172, i32* %1169, align 4
  br label %1173

1173:                                             ; preds = %1171, %1164
  %1174 = phi i32 [ %1172, %1171 ], [ %1170, %1164 ]
  %1175 = icmp eq i32 %1174, 0
  br i1 %1175, label %1176, label %1177

1176:                                             ; preds = %1173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1162) #19
  br label %1177

1177:                                             ; preds = %1160, %1173, %1176, %1134, %1156, %1159
  %1178 = phi i8* [ %1074, %1159 ], [ %1074, %1156 ], [ %1074, %1134 ], [ %1072, %1176 ], [ %1072, %1173 ], [ %1072, %1160 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1178) #19
  %1179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1067, align 8
  %1180 = icmp eq %"class.WTF::StringImpl"* %1179, null
  br i1 %1180, label %1194, label %1181

1181:                                             ; preds = %1177
  %1182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1183 = load atomic i32, i32* %1182 monotonic, align 4
  %1184 = and i32 %1183, 2
  %1185 = icmp eq i32 %1184, 0
  %1186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1179, i64 0, i32 0
  %1187 = load i32, i32* %1186, align 4
  br i1 %1185, label %1188, label %1190

1188:                                             ; preds = %1181
  %1189 = add i32 %1187, -1
  store i32 %1189, i32* %1186, align 4
  br label %1190

1190:                                             ; preds = %1188, %1181
  %1191 = phi i32 [ %1189, %1188 ], [ %1187, %1181 ]
  %1192 = icmp eq i32 %1191, 0
  br i1 %1192, label %1193, label %1194

1193:                                             ; preds = %1190
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1179) #19
  br label %1194

1194:                                             ; preds = %1193, %1190, %1177
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1066) #19
  br label %1195

1195:                                             ; preds = %1194, %1104
  %1196 = add nuw nsw i64 %1105, 1
  %1197 = load i32, i32* %956, align 4
  %1198 = zext i32 %1197 to i64
  %1199 = icmp ult i64 %1196, %1198
  br i1 %1199, label %1104, label %1076

1200:                                             ; preds = %1100
  %1201 = call i8* @_Znwm(i64 80) #18
  %1202 = bitcast i8* %1201 to %"class.blink::protocol::DictionaryValue"*
  call void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"* nonnull %1202) #19
  %1203 = bitcast %"class.WTF::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1203) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %23, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.71, i64 0, i64 0), i64 8) #19
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %1202, %"class.WTF::String"* nonnull dereferenceable(8) %23, %"class.WTF::String"* dereferenceable(8) %1096) #19
  %1204 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %1205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1204, align 8
  %1206 = icmp eq %"class.WTF::StringImpl"* %1205, null
  br i1 %1206, label %1220, label %1207

1207:                                             ; preds = %1200
  %1208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1205, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1209 = load atomic i32, i32* %1208 monotonic, align 4
  %1210 = and i32 %1209, 2
  %1211 = icmp eq i32 %1210, 0
  %1212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1205, i64 0, i32 0
  %1213 = load i32, i32* %1212, align 4
  br i1 %1211, label %1214, label %1216

1214:                                             ; preds = %1207
  %1215 = add i32 %1213, -1
  store i32 %1215, i32* %1212, align 4
  br label %1216

1216:                                             ; preds = %1214, %1207
  %1217 = phi i32 [ %1215, %1214 ], [ %1213, %1207 ]
  %1218 = icmp eq i32 %1217, 0
  br i1 %1218, label %1219, label %1220

1219:                                             ; preds = %1216
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1205) #19
  br label %1220

1220:                                             ; preds = %1219, %1216, %1200
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1203) #19
  %1221 = bitcast %"class.WTF::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1221) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.72, i64 0, i64 0), i64 10) #19
  %1222 = getelementptr inbounds %"struct.blink::InspectorHighlightContrastInfo", %"struct.blink::InspectorHighlightContrastInfo"* %3, i64 0, i32 3
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %1202, %"class.WTF::String"* nonnull dereferenceable(8) %24, %"class.WTF::String"* dereferenceable(8) %1222) #19
  %1223 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  %1224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1223, align 8
  %1225 = icmp eq %"class.WTF::StringImpl"* %1224, null
  br i1 %1225, label %1239, label %1226

1226:                                             ; preds = %1220
  %1227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1224, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1228 = load atomic i32, i32* %1227 monotonic, align 4
  %1229 = and i32 %1228, 2
  %1230 = icmp eq i32 %1229, 0
  %1231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1224, i64 0, i32 0
  %1232 = load i32, i32* %1231, align 4
  br i1 %1230, label %1233, label %1235

1233:                                             ; preds = %1226
  %1234 = add i32 %1232, -1
  store i32 %1234, i32* %1231, align 4
  br label %1235

1235:                                             ; preds = %1233, %1226
  %1236 = phi i32 [ %1234, %1233 ], [ %1232, %1226 ]
  %1237 = icmp eq i32 %1236, 0
  br i1 %1237, label %1238, label %1239

1238:                                             ; preds = %1235
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1224) #19
  br label %1239

1239:                                             ; preds = %1238, %1235, %1220
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1221) #19
  %1240 = bitcast %"class.WTF::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1240) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %25, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.73, i64 0, i64 0), i64 15) #19
  %1241 = bitcast %"class.WTF::String"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1241) #19
  %1242 = getelementptr inbounds %"struct.blink::InspectorHighlightContrastInfo", %"struct.blink::InspectorHighlightContrastInfo"* %3, i64 0, i32 0, i32 0
  %1243 = load i32, i32* %1242, align 4
  %1244 = lshr i32 %1243, 16
  %1245 = and i32 %1244, 255
  %1246 = lshr i32 %1243, 8
  %1247 = and i32 %1246, 255
  %1248 = and i32 %1243, 255
  %1249 = lshr i32 %1243, 24
  %1250 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.77, i64 0, i64 0), i32 %1245, i32 %1247, i32 %1248, i32 %1249) #19
  %1251 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %26, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1250, %"class.WTF::StringImpl"** %1251, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %1202, %"class.WTF::String"* nonnull dereferenceable(8) %25, %"class.WTF::String"* nonnull dereferenceable(8) %26) #19
  %1252 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1251, align 8
  %1253 = icmp eq %"class.WTF::StringImpl"* %1252, null
  br i1 %1253, label %1267, label %1254

1254:                                             ; preds = %1239
  %1255 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1252, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1256 = load atomic i32, i32* %1255 monotonic, align 4
  %1257 = and i32 %1256, 2
  %1258 = icmp eq i32 %1257, 0
  %1259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1252, i64 0, i32 0
  %1260 = load i32, i32* %1259, align 4
  br i1 %1258, label %1261, label %1263

1261:                                             ; preds = %1254
  %1262 = add i32 %1260, -1
  store i32 %1262, i32* %1259, align 4
  br label %1263

1263:                                             ; preds = %1261, %1254
  %1264 = phi i32 [ %1262, %1261 ], [ %1260, %1254 ]
  %1265 = icmp eq i32 %1264, 0
  br i1 %1265, label %1266, label %1267

1266:                                             ; preds = %1263
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1252) #19
  br label %1267

1267:                                             ; preds = %1266, %1263, %1239
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1241) #19
  %1268 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  %1269 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1268, align 8
  %1270 = icmp eq %"class.WTF::StringImpl"* %1269, null
  br i1 %1270, label %1284, label %1271

1271:                                             ; preds = %1267
  %1272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1269, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1273 = load atomic i32, i32* %1272 monotonic, align 4
  %1274 = and i32 %1273, 2
  %1275 = icmp eq i32 %1274, 0
  %1276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1269, i64 0, i32 0
  %1277 = load i32, i32* %1276, align 4
  br i1 %1275, label %1278, label %1280

1278:                                             ; preds = %1271
  %1279 = add i32 %1277, -1
  store i32 %1279, i32* %1276, align 4
  br label %1280

1280:                                             ; preds = %1278, %1271
  %1281 = phi i32 [ %1279, %1278 ], [ %1277, %1271 ]
  %1282 = icmp eq i32 %1281, 0
  br i1 %1282, label %1283, label %1284

1283:                                             ; preds = %1280
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1269) #19
  br label %1284

1284:                                             ; preds = %1283, %1280, %1267
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1240) #19
  %1285 = bitcast %"class.WTF::String"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1285) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %27, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.74, i64 0, i64 0), i64 17) #19
  %1286 = bitcast %"class.WTF::String"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1286) #19
  %1287 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1287) #19
  %1288 = load i32, i32* %926, align 4
  switch i32 %1288, label %1291 [
    i32 0, label %1292
    i32 1, label %1289
    i32 2, label %1290
  ]

1289:                                             ; preds = %1284
  br label %1292

1290:                                             ; preds = %1284
  br label %1292

1291:                                             ; preds = %1284
  unreachable

1292:                                             ; preds = %1284, %1290, %1289
  %1293 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Overlay21ContrastAlgorithmEnum4ApcaE, i64 0, i64 0), %1290 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Overlay21ContrastAlgorithmEnum3AaaE, i64 0, i64 0), %1289 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Overlay21ContrastAlgorithmEnum2AaE, i64 0, i64 0), %1284 ]
  %1294 = call i64 @strlen(i8* nonnull %1293) #20
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* %1293, i64 %1294) #19
  %1295 = bitcast %"class.WTF::String"* %8 to i64*
  %1296 = load i64, i64* %1295, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1287) #19
  %1297 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %1298 = bitcast %"class.WTF::String"* %28 to i64*
  store i64 %1296, i64* %1298, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %1202, %"class.WTF::String"* nonnull dereferenceable(8) %27, %"class.WTF::String"* nonnull dereferenceable(8) %28) #19
  %1299 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1297, align 8
  %1300 = icmp eq %"class.WTF::StringImpl"* %1299, null
  br i1 %1300, label %1314, label %1301

1301:                                             ; preds = %1292
  %1302 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1299, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1303 = load atomic i32, i32* %1302 monotonic, align 4
  %1304 = and i32 %1303, 2
  %1305 = icmp eq i32 %1304, 0
  %1306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1299, i64 0, i32 0
  %1307 = load i32, i32* %1306, align 4
  br i1 %1305, label %1308, label %1310

1308:                                             ; preds = %1301
  %1309 = add i32 %1307, -1
  store i32 %1309, i32* %1306, align 4
  br label %1310

1310:                                             ; preds = %1308, %1301
  %1311 = phi i32 [ %1309, %1308 ], [ %1307, %1301 ]
  %1312 = icmp eq i32 %1311, 0
  br i1 %1312, label %1313, label %1314

1313:                                             ; preds = %1310
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1299) #19
  br label %1314

1314:                                             ; preds = %1313, %1310, %1292
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1286) #19
  %1315 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %1316 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1315, align 8
  %1317 = icmp eq %"class.WTF::StringImpl"* %1316, null
  br i1 %1317, label %1331, label %1318

1318:                                             ; preds = %1314
  %1319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1316, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1320 = load atomic i32, i32* %1319 monotonic, align 4
  %1321 = and i32 %1320, 2
  %1322 = icmp eq i32 %1321, 0
  %1323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1316, i64 0, i32 0
  %1324 = load i32, i32* %1323, align 4
  br i1 %1322, label %1325, label %1327

1325:                                             ; preds = %1318
  %1326 = add i32 %1324, -1
  store i32 %1326, i32* %1323, align 4
  br label %1327

1327:                                             ; preds = %1325, %1318
  %1328 = phi i32 [ %1326, %1325 ], [ %1324, %1318 ]
  %1329 = icmp eq i32 %1328, 0
  br i1 %1329, label %1330, label %1331

1330:                                             ; preds = %1327
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1316) #19
  br label %1331

1331:                                             ; preds = %1330, %1327, %1314
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1285) #19
  %1332 = bitcast %"class.WTF::String"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1332) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %29, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.75, i64 0, i64 0), i64 11) #19
  %1333 = getelementptr inbounds %"struct.blink::InspectorHighlightContrastInfo", %"struct.blink::InspectorHighlightContrastInfo"* %3, i64 0, i32 4
  %1334 = load float, float* %1333, align 8
  %1335 = fpext float %1334 to double
  call void @_ZN5blink8protocol15DictionaryValue9setDoubleERKN3WTF6StringEd(%"class.blink::protocol::DictionaryValue"* nonnull %1202, %"class.WTF::String"* nonnull dereferenceable(8) %29, double %1335) #19
  %1336 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  %1337 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1336, align 8
  %1338 = icmp eq %"class.WTF::StringImpl"* %1337, null
  br i1 %1338, label %1352, label %1339

1339:                                             ; preds = %1331
  %1340 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1337, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1341 = load atomic i32, i32* %1340 monotonic, align 4
  %1342 = and i32 %1341, 2
  %1343 = icmp eq i32 %1342, 0
  %1344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1337, i64 0, i32 0
  %1345 = load i32, i32* %1344, align 4
  br i1 %1343, label %1346, label %1348

1346:                                             ; preds = %1339
  %1347 = add i32 %1345, -1
  store i32 %1347, i32* %1344, align 4
  br label %1348

1348:                                             ; preds = %1346, %1339
  %1349 = phi i32 [ %1347, %1346 ], [ %1345, %1339 ]
  %1350 = icmp eq i32 %1349, 0
  br i1 %1350, label %1351, label %1352

1351:                                             ; preds = %1348
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1337) #19
  br label %1352

1352:                                             ; preds = %1351, %1348, %1331
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1332) #19
  %1353 = bitcast %"class.WTF::String"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1353) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %30, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76, i64 0, i64 0), i64 8) #19
  %1354 = bitcast i8* %1201 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %919, %"class.WTF::String"* nonnull dereferenceable(8) %30, %"class.blink::protocol::Value"* nonnull %1354) #19
  %1355 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %30, i64 0, i32 0, i32 0
  %1356 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1355, align 8
  %1357 = icmp eq %"class.WTF::StringImpl"* %1356, null
  br i1 %1357, label %1371, label %1358

1358:                                             ; preds = %1352
  %1359 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1356, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1360 = load atomic i32, i32* %1359 monotonic, align 4
  %1361 = and i32 %1360, 2
  %1362 = icmp eq i32 %1361, 0
  %1363 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1356, i64 0, i32 0
  %1364 = load i32, i32* %1363, align 4
  br i1 %1362, label %1365, label %1367

1365:                                             ; preds = %1358
  %1366 = add i32 %1364, -1
  store i32 %1366, i32* %1363, align 4
  br label %1367

1367:                                             ; preds = %1365, %1358
  %1368 = phi i32 [ %1366, %1365 ], [ %1364, %1358 ]
  %1369 = icmp eq i32 %1368, 0
  br i1 %1369, label %1370, label %1371

1370:                                             ; preds = %1367
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1356) #19
  br label %1371

1371:                                             ; preds = %1370, %1367, %1352
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1353) #19
  br label %1372

1372:                                             ; preds = %1371, %1100, %1095
  %1373 = load i32*, i32** %954, align 8
  %1374 = icmp eq i32* %1373, null
  %1375 = bitcast i32* %1373 to i8*
  br i1 %1374, label %1381, label %1376, !prof !27

1376:                                             ; preds = %1372
  %1377 = load i32, i32* %956, align 4
  %1378 = icmp eq i32 %1377, 0
  br i1 %1378, label %1380, label %1379, !prof !2

1379:                                             ; preds = %1376
  store i32 0, i32* %956, align 4
  br label %1380

1380:                                             ; preds = %1379, %1376
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1375) #19
  store i32* null, i32** %954, align 8
  br label %1381

1381:                                             ; preds = %1380, %1372
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %953) #19
  %1382 = load %"class.blink::protocol::DictionaryValue"*, %"class.blink::protocol::DictionaryValue"** %918, align 8
  %1383 = icmp eq %"class.blink::protocol::DictionaryValue"* %1382, null
  br i1 %1383, label %1446, label %1384

1384:                                             ; preds = %921, %1381
  %1385 = phi %"class.blink::protocol::DictionaryValue"* [ %1382, %1381 ], [ %919, %921 ]
  switch i32 %6, label %1424 [
    i32 2, label %1404
    i32 1, label %1386
  ]

1386:                                             ; preds = %1384
  %1387 = bitcast %"class.WTF::String"* %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1387) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %62, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0), i64 8) #19
  call void @_ZN5blink8protocol15DictionaryValue10setBooleanERKN3WTF6StringEb(%"class.blink::protocol::DictionaryValue"* nonnull %1385, %"class.WTF::String"* nonnull dereferenceable(8) %62, i1 zeroext true) #19
  %1388 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %62, i64 0, i32 0, i32 0
  %1389 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1388, align 8
  %1390 = icmp eq %"class.WTF::StringImpl"* %1389, null
  br i1 %1390, label %1422, label %1391

1391:                                             ; preds = %1386
  %1392 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1389, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1393 = load atomic i32, i32* %1392 monotonic, align 4
  %1394 = and i32 %1393, 2
  %1395 = icmp eq i32 %1394, 0
  %1396 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1389, i64 0, i32 0
  %1397 = load i32, i32* %1396, align 4
  br i1 %1395, label %1398, label %1400

1398:                                             ; preds = %1391
  %1399 = add i32 %1397, -1
  store i32 %1399, i32* %1396, align 4
  br label %1400

1400:                                             ; preds = %1398, %1391
  %1401 = phi i32 [ %1399, %1398 ], [ %1397, %1391 ]
  %1402 = icmp eq i32 %1401, 0
  br i1 %1402, label %1403, label %1422

1403:                                             ; preds = %1400
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1389) #19
  br label %1422

1404:                                             ; preds = %1384
  %1405 = bitcast %"class.WTF::String"* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1405) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %63, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i64 16) #19
  call void @_ZN5blink8protocol15DictionaryValue10setBooleanERKN3WTF6StringEb(%"class.blink::protocol::DictionaryValue"* nonnull %1385, %"class.WTF::String"* nonnull dereferenceable(8) %63, i1 zeroext true) #19
  %1406 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 0, i32 0, i32 0
  %1407 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1406, align 8
  %1408 = icmp eq %"class.WTF::StringImpl"* %1407, null
  br i1 %1408, label %1422, label %1409

1409:                                             ; preds = %1404
  %1410 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1407, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1411 = load atomic i32, i32* %1410 monotonic, align 4
  %1412 = and i32 %1411, 2
  %1413 = icmp eq i32 %1412, 0
  %1414 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1407, i64 0, i32 0
  %1415 = load i32, i32* %1414, align 4
  br i1 %1413, label %1416, label %1418

1416:                                             ; preds = %1409
  %1417 = add i32 %1415, -1
  store i32 %1417, i32* %1414, align 4
  br label %1418

1418:                                             ; preds = %1416, %1409
  %1419 = phi i32 [ %1417, %1416 ], [ %1415, %1409 ]
  %1420 = icmp eq i32 %1419, 0
  br i1 %1420, label %1421, label %1422

1421:                                             ; preds = %1418
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1407) #19
  br label %1422

1422:                                             ; preds = %1421, %1418, %1404, %1403, %1400, %1386
  %1423 = phi i8* [ %1387, %1386 ], [ %1387, %1400 ], [ %1387, %1403 ], [ %1405, %1404 ], [ %1405, %1418 ], [ %1405, %1421 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1423) #19
  br label %1424

1424:                                             ; preds = %1422, %1384
  %1425 = load %"class.blink::protocol::DictionaryValue"*, %"class.blink::protocol::DictionaryValue"** %918, align 8
  %1426 = bitcast %"class.WTF::String"* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1426) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %64, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10, i64 0, i64 0), i64 21) #19
  %1427 = load i8, i8* %98, align 2, !range !26
  %1428 = icmp ne i8 %1427, 0
  call void @_ZN5blink8protocol15DictionaryValue10setBooleanERKN3WTF6StringEb(%"class.blink::protocol::DictionaryValue"* %1425, %"class.WTF::String"* nonnull dereferenceable(8) %64, i1 zeroext %1428) #19
  %1429 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %1430 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1429, align 8
  %1431 = icmp eq %"class.WTF::StringImpl"* %1430, null
  br i1 %1431, label %1445, label %1432

1432:                                             ; preds = %1424
  %1433 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1430, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1434 = load atomic i32, i32* %1433 monotonic, align 4
  %1435 = and i32 %1434, 2
  %1436 = icmp eq i32 %1435, 0
  %1437 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1430, i64 0, i32 0
  %1438 = load i32, i32* %1437, align 4
  br i1 %1436, label %1439, label %1441

1439:                                             ; preds = %1432
  %1440 = add i32 %1438, -1
  store i32 %1440, i32* %1437, align 4
  br label %1441

1441:                                             ; preds = %1439, %1432
  %1442 = phi i32 [ %1440, %1439 ], [ %1438, %1432 ]
  %1443 = icmp eq i32 %1442, 0
  br i1 %1443, label %1444, label %1445

1444:                                             ; preds = %1441
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1430) #19
  br label %1445

1445:                                             ; preds = %1424, %1441, %1444
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1426) #19
  br label %1446

1446:                                             ; preds = %1381, %917, %1445
  br i1 %5, label %1447, label %1448

1447:                                             ; preds = %1446
  call void @_ZN5blink18InspectorHighlight18AppendDistanceInfoEPNS_4NodeE(%"class.blink::InspectorHighlight"* %0, %"class.blink::Node"* %1)
  br label %1448

1448:                                             ; preds = %1447, %1446
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorHighlight26AppendPathsForShapeOutsideEPNS_4NodeERKNS_24InspectorHighlightConfigE(%"class.blink::InspectorHighlight"* nocapture readonly, %"class.blink::Node"* nocapture readonly, %"struct.blink::InspectorHighlightConfig"* dereferenceable(88)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::Path", align 8
  %5 = alloca %"class.blink::AffineTransform", align 8
  %6 = alloca %"class.blink::(anonymous namespace)::ShapePathBuilder", align 8
  %7 = alloca %"class.blink::Path", align 8
  %8 = alloca %"class.blink::AffineTransform", align 8
  %9 = alloca %"class.blink::(anonymous namespace)::ShapePathBuilder", align 8
  %10 = alloca %"struct.blink::Shape::DisplayPaths", align 8
  %11 = alloca %"class.blink::FloatQuad", align 4
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = bitcast %"struct.blink::Shape::DisplayPaths"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #19
  %16 = getelementptr inbounds %"struct.blink::Shape::DisplayPaths", %"struct.blink::Shape::DisplayPaths"* %10, i64 0, i32 0
  %17 = getelementptr inbounds %"struct.blink::Shape::DisplayPaths", %"struct.blink::Shape::DisplayPaths"* %10, i64 0, i32 1
  %18 = bitcast %"struct.blink::Shape::DisplayPaths"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 32, i1 false)
  call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* nonnull %16) #19
  call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* %17) #19
  %19 = bitcast %"class.blink::FloatQuad"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %19, i8 0, i64 32, i1 false) #19
  %20 = call fastcc %"class.blink::ShapeOutsideInfo"* @_ZN5blink12_GLOBAL__N_123ShapeOutsideInfoForNodeEPNS_4NodeEPNS_5Shape12DisplayPathsEPNS_9FloatQuadE(%"class.blink::Node"* %1, %"struct.blink::Shape::DisplayPaths"* nonnull %10, %"class.blink::FloatQuad"* nonnull %11)
  %21 = icmp eq %"class.blink::ShapeOutsideInfo"* %20, null
  br i1 %21, label %162, label %22

22:                                               ; preds = %3
  %23 = call float @_ZNK5blink4Path6lengthEv(%"class.blink::Path"* nonnull %16) #19
  %24 = fcmp une float %23, 0.000000e+00
  %25 = bitcast %"class.blink::InspectorHighlight"* %0 to %"class.blink::InspectorHighlightBase"*
  br i1 %24, label %46, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %2, i64 0, i32 6
  %28 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #19
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %29, align 8
  call void @_ZN5blink22InspectorHighlightBase10AppendQuadERKNS_9FloatQuadERKNS_5ColorES6_RKN3WTF6StringE(%"class.blink::InspectorHighlightBase"* %25, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %11, %"class.blink::Color"* dereferenceable(4) %27, %"class.blink::Color"* nonnull dereferenceable(4) @.ref.tmp.13, %"class.WTF::String"* nonnull dereferenceable(8) %12)
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #19
  br label %45

45:                                               ; preds = %26, %41, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #19
  br label %162

46:                                               ; preds = %22
  %47 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %48 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %48, i64 0, i32 2, i32 0, i32 0
  %50 = load %"class.blink::Document"*, %"class.blink::Document"** %49, align 8
  %51 = call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %50) #19
  %52 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 6, i32 0, i32 0
  br i1 %55, label %61, label %57

57:                                               ; preds = %46
  %58 = bitcast %"class.blink::NodeData"** %56 to %"class.blink::NodeRareData"**
  %59 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %59, i64 0, i32 1, i32 0, i32 0
  br label %63

61:                                               ; preds = %46
  %62 = bitcast %"class.blink::NodeData"** %56 to %"class.blink::NodeRenderingData"**
  br label %63

63:                                               ; preds = %57, %61
  %64 = phi %"class.blink::NodeRenderingData"** [ %60, %57 ], [ %62, %61 ]
  %65 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %65, i64 0, i32 1
  %67 = bitcast %"class.blink::LayoutObject"** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 0, i32 2
  %70 = load float, float* %69, align 8
  %71 = bitcast %"class.blink::(anonymous namespace)::ShapePathBuilder"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %71) #19
  %72 = getelementptr inbounds %"class.blink::(anonymous namespace)::ShapePathBuilder", %"class.blink::(anonymous namespace)::ShapePathBuilder"* %9, i64 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.blink::(anonymous namespace)::ShapePathBuilder", %"class.blink::(anonymous namespace)::ShapePathBuilder"* %9, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.blink::(anonymous namespace)::ShapePathBuilder", %"class.blink::(anonymous namespace)::ShapePathBuilder"* %9, i64 0, i32 1
  %75 = getelementptr inbounds %"class.blink::(anonymous namespace)::ShapePathBuilder", %"class.blink::(anonymous namespace)::ShapePathBuilder"* %9, i64 0, i32 2
  %76 = getelementptr inbounds %"class.blink::(anonymous namespace)::ShapePathBuilder", %"class.blink::(anonymous namespace)::ShapePathBuilder"* %9, i64 0, i32 3
  %77 = call i8* @_Znwm(i64 40) #18
  %78 = bitcast i8* %77 to %"class.blink::protocol::ListValue"*
  call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %78) #19
  %79 = bitcast %"class.blink::protocol::ListValue"** %73 to i8**
  store i8* %77, i8** %79, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_116ShapePathBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %72, align 8
  store %"class.blink::LocalFrameView"* %51, %"class.blink::LocalFrameView"** %74, align 8
  %80 = bitcast %"class.blink::LayoutObject"** %75 to i64*
  store i64 %68, i64* %80, align 8
  store %"class.blink::ShapeOutsideInfo"* %20, %"class.blink::ShapeOutsideInfo"** %76, align 8
  %81 = bitcast %"class.blink::Path"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 16, i1 false) #19
  call void @_ZN5blink4PathC1ERKS0_(%"class.blink::Path"* nonnull %7, %"class.blink::Path"* nonnull dereferenceable(16) %16) #19
  %82 = bitcast %"class.blink::AffineTransform"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %82) #19
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %8) #19
  %83 = fpext float %70 to double
  %84 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEd(%"class.blink::AffineTransform"* nonnull %8, double %83) #19
  call void @_ZN5blink4Path9TransformERKNS_15AffineTransformE(%"class.blink::Path"* nonnull %7, %"class.blink::AffineTransform"* dereferenceable(48) %84) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %82) #19
  call void @_ZNK5blink4Path5ApplyEPvPFvS1_PKNS_11PathElementEE(%"class.blink::Path"* nonnull %7, i8* nonnull %71, void (i8*, %"struct.blink::PathElement"*)* nonnull @_ZN5blink12_GLOBAL__N_111PathBuilder17AppendPathElementEPvPKNS_11PathElementE) #19
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #19
  %85 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %73, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %71) #19
  %86 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %2, i64 0, i32 6
  %87 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #19
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %88, align 8
  call void @_ZN5blink22InspectorHighlightBase10AppendPathENSt3__110unique_ptrINS_8protocol9ListValueENS1_14default_deleteIS4_EEEERKNS_5ColorESA_RKN3WTF6StringE(%"class.blink::InspectorHighlightBase"* %25, %"class.blink::protocol::ListValue"* %85, %"class.blink::Color"* dereferenceable(4) %86, %"class.blink::Color"* nonnull dereferenceable(4) @.ref.tmp.14, %"class.WTF::String"* nonnull dereferenceable(8) %13)
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %63
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %89) #19
  br label %104

104:                                              ; preds = %63, %100, %103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #19
  %105 = call float @_ZNK5blink4Path6lengthEv(%"class.blink::Path"* %17) #19
  %106 = fcmp une float %105, 0.000000e+00
  br i1 %106, label %107, label %162

107:                                              ; preds = %104
  %108 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %47, align 8
  %109 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %108, i64 0, i32 2, i32 0, i32 0
  %110 = load %"class.blink::Document"*, %"class.blink::Document"** %109, align 8
  %111 = call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %110) #19
  %112 = load i32, i32* %52, align 8
  %113 = and i32 %112, 1
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %119, label %115

115:                                              ; preds = %107
  %116 = bitcast %"class.blink::NodeData"** %56 to %"class.blink::NodeRareData"**
  %117 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %117, i64 0, i32 1, i32 0, i32 0
  br label %121

119:                                              ; preds = %107
  %120 = bitcast %"class.blink::NodeData"** %56 to %"class.blink::NodeRenderingData"**
  br label %121

121:                                              ; preds = %115, %119
  %122 = phi %"class.blink::NodeRenderingData"** [ %118, %115 ], [ %120, %119 ]
  %123 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %122, align 8
  %124 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %123, i64 0, i32 1
  %125 = bitcast %"class.blink::LayoutObject"** %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = load float, float* %69, align 8
  %128 = bitcast %"class.blink::(anonymous namespace)::ShapePathBuilder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %128) #19
  %129 = getelementptr inbounds %"class.blink::(anonymous namespace)::ShapePathBuilder", %"class.blink::(anonymous namespace)::ShapePathBuilder"* %6, i64 0, i32 0, i32 0
  %130 = getelementptr inbounds %"class.blink::(anonymous namespace)::ShapePathBuilder", %"class.blink::(anonymous namespace)::ShapePathBuilder"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %131 = getelementptr inbounds %"class.blink::(anonymous namespace)::ShapePathBuilder", %"class.blink::(anonymous namespace)::ShapePathBuilder"* %6, i64 0, i32 1
  %132 = getelementptr inbounds %"class.blink::(anonymous namespace)::ShapePathBuilder", %"class.blink::(anonymous namespace)::ShapePathBuilder"* %6, i64 0, i32 2
  %133 = getelementptr inbounds %"class.blink::(anonymous namespace)::ShapePathBuilder", %"class.blink::(anonymous namespace)::ShapePathBuilder"* %6, i64 0, i32 3
  %134 = call i8* @_Znwm(i64 40) #18
  %135 = bitcast i8* %134 to %"class.blink::protocol::ListValue"*
  call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %135) #19
  %136 = bitcast %"class.blink::protocol::ListValue"** %130 to i8**
  store i8* %134, i8** %136, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_116ShapePathBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %129, align 8
  store %"class.blink::LocalFrameView"* %111, %"class.blink::LocalFrameView"** %131, align 8
  %137 = bitcast %"class.blink::LayoutObject"** %132 to i64*
  store i64 %126, i64* %137, align 8
  store %"class.blink::ShapeOutsideInfo"* %20, %"class.blink::ShapeOutsideInfo"** %133, align 8
  %138 = bitcast %"class.blink::Path"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %138) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %138, i8 -86, i64 16, i1 false) #19
  call void @_ZN5blink4PathC1ERKS0_(%"class.blink::Path"* nonnull %4, %"class.blink::Path"* dereferenceable(16) %17) #19
  %139 = bitcast %"class.blink::AffineTransform"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %139) #19
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %5) #19
  %140 = fpext float %127 to double
  %141 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEd(%"class.blink::AffineTransform"* nonnull %5, double %140) #19
  call void @_ZN5blink4Path9TransformERKNS_15AffineTransformE(%"class.blink::Path"* nonnull %4, %"class.blink::AffineTransform"* dereferenceable(48) %141) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %139) #19
  call void @_ZNK5blink4Path5ApplyEPvPFvS1_PKNS_11PathElementEE(%"class.blink::Path"* nonnull %4, i8* nonnull %128, void (i8*, %"struct.blink::PathElement"*)* nonnull @_ZN5blink12_GLOBAL__N_111PathBuilder17AppendPathElementEPvPKNS_11PathElementE) #19
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %138) #19
  %142 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %130, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %128) #19
  %143 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %2, i64 0, i32 7
  %144 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %144) #19
  %145 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %145, align 8
  call void @_ZN5blink22InspectorHighlightBase10AppendPathENSt3__110unique_ptrINS_8protocol9ListValueENS1_14default_deleteIS4_EEEERKNS_5ColorESA_RKN3WTF6StringE(%"class.blink::InspectorHighlightBase"* %25, %"class.blink::protocol::ListValue"* %142, %"class.blink::Color"* dereferenceable(4) %143, %"class.blink::Color"* nonnull dereferenceable(4) @.ref.tmp.15, %"class.WTF::String"* nonnull dereferenceable(8) %14)
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %145, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %146, null
  br i1 %147, label %161, label %148

148:                                              ; preds = %121
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  br i1 %152, label %155, label %157

155:                                              ; preds = %148
  %156 = add i32 %154, -1
  store i32 %156, i32* %153, align 4
  br label %157

157:                                              ; preds = %155, %148
  %158 = phi i32 [ %156, %155 ], [ %154, %148 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %146) #19
  br label %161

161:                                              ; preds = %121, %157, %160
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #19
  br label %162

162:                                              ; preds = %104, %161, %3, %45
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #19
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* %17) #19
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %16) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorHighlight19AppendNodeHighlightEPNS_4NodeERKNS_24InspectorHighlightConfigE(%"class.blink::InspectorHighlight"* nocapture, %"class.blink::Node"*, %"struct.blink::InspectorHighlightConfig"* dereferenceable(88)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.2440", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::Vector.2542", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.blink::FloatQuad", align 4
  %17 = alloca %"class.blink::FloatQuad", align 4
  %18 = alloca %"class.blink::FloatQuad", align 4
  %19 = alloca %"class.blink::FloatQuad", align 4
  %20 = alloca %"class.WTF::String", align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = alloca %"class.WTF::String", align 8
  %23 = alloca %"class.WTF::String", align 8
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 6, i32 0, i32 0
  br i1 %27, label %33, label %29

29:                                               ; preds = %3
  %30 = bitcast %"class.blink::NodeData"** %28 to %"class.blink::NodeRareData"**
  %31 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %31, i64 0, i32 1, i32 0, i32 0
  br label %35

33:                                               ; preds = %3
  %34 = bitcast %"class.blink::NodeData"** %28 to %"class.blink::NodeRenderingData"**
  br label %35

35:                                               ; preds = %29, %33
  %36 = phi %"class.blink::NodeRenderingData"** [ %32, %29 ], [ %34, %33 ]
  %37 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %37, i64 0, i32 1
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  %40 = icmp eq %"class.blink::LayoutObject"* %39, null
  br i1 %40, label %615, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.WTF::Vector.2542"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #19
  %43 = getelementptr inbounds %"class.WTF::Vector.2542", %"class.WTF::Vector.2542"* %14, i64 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.WTF::Vector.2542", %"class.WTF::Vector.2542"* %14, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 16, i1 false) #19
  br i1 %27, label %49, label %45

45:                                               ; preds = %41
  %46 = bitcast %"class.blink::NodeData"** %28 to %"class.blink::NodeRareData"**
  %47 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %47, i64 0, i32 1, i32 0, i32 0
  br label %51

49:                                               ; preds = %41
  %50 = bitcast %"class.blink::NodeData"** %28 to %"class.blink::NodeRenderingData"**
  br label %51

51:                                               ; preds = %49, %45
  %52 = phi %"class.blink::NodeRenderingData"** [ %48, %45 ], [ %50, %49 ]
  %53 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %53, i64 0, i32 1
  %55 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %54, align 8
  %56 = icmp eq %"class.blink::LayoutObject"* %55, null
  br i1 %56, label %109, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %55, i64 0, i32 4
  %59 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %58 to i96*
  %60 = load i96, i96* %59, align 4
  %61 = and i96 %60, 16777216
  %62 = icmp eq i96 %61, 0
  br i1 %62, label %63, label %109

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %55, i64 0, i32 6, i32 0, i32 0
  %65 = load %"class.blink::Node"*, %"class.blink::Node"** %64, align 8
  %66 = icmp eq %"class.blink::Node"* %65, null
  br i1 %66, label %109, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %65, i64 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, 48
  %71 = icmp eq i32 %70, 32
  br i1 %71, label %72, label %109

72:                                               ; preds = %67
  %73 = bitcast %"class.blink::LayoutObject"* %55 to i1 (%"class.blink::LayoutObject"*, i32)***
  %74 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %73, align 8
  %75 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %74, i64 92
  %76 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %75, align 8
  %77 = tail call zeroext i1 %76(%"class.blink::LayoutObject"* nonnull %55, i32 67) #19
  br i1 %77, label %109, label %78

78:                                               ; preds = %72
  call fastcc void @_ZN5blink12_GLOBAL__N_112CollectQuadsEPNS_4NodeERN3WTF6VectorINS_9FloatQuadELj0ENS3_18PartitionAllocatorEEE(%"class.blink::Node"* %1, %"class.WTF::Vector.2542"* nonnull dereferenceable(16) %14) #19
  %79 = load i32, i32* %44, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %605, label %81

81:                                               ; preds = %78
  %82 = bitcast %"class.blink::InspectorHighlight"* %0 to %"class.blink::InspectorHighlightBase"*
  %83 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %2, i64 0, i32 0
  %84 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %2, i64 0, i32 1
  %85 = bitcast %"class.WTF::String"* %15 to i8*
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  br label %87

87:                                               ; preds = %81, %105
  %88 = phi i32 [ 0, %81 ], [ %106, %105 ]
  %89 = call dereferenceable(32) %"class.blink::FloatQuad"* @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2542"* nonnull %14, i32 %88) #19
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #19
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %86, align 8
  call void @_ZN5blink22InspectorHighlightBase10AppendQuadERKNS_9FloatQuadERKNS_5ColorES6_RKN3WTF6StringE(%"class.blink::InspectorHighlightBase"* %82, %"class.blink::FloatQuad"* dereferenceable(32) %89, %"class.blink::Color"* dereferenceable(4) %83, %"class.blink::Color"* dereferenceable(4) %84, %"class.WTF::String"* nonnull dereferenceable(8) %15)
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %99, label %101

99:                                               ; preds = %92
  %100 = add i32 %98, -1
  store i32 %100, i32* %97, align 4
  br label %101

101:                                              ; preds = %99, %92
  %102 = phi i32 [ %100, %99 ], [ %98, %92 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #19
  br label %105

105:                                              ; preds = %87, %101, %104
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #19
  %106 = add nuw i32 %88, 1
  %107 = load i32, i32* %44, align 4
  %108 = icmp ult i32 %106, %107
  br i1 %108, label %87, label %605

109:                                              ; preds = %51, %63, %72, %67, %57
  %110 = bitcast %"class.blink::FloatQuad"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %110) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %110, i8 0, i64 32, i1 false) #19
  %111 = bitcast %"class.blink::FloatQuad"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %111) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %111, i8 0, i64 32, i1 false) #19
  %112 = bitcast %"class.blink::FloatQuad"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %112) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %112, i8 0, i64 32, i1 false) #19
  %113 = bitcast %"class.blink::FloatQuad"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %113) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %113, i8 0, i64 32, i1 false) #19
  %114 = call zeroext i1 @_ZN5blink22InspectorHighlightBase14BuildNodeQuadsEPNS_4NodeEPNS_9FloatQuadES4_S4_S4_(%"class.blink::Node"* %1, %"class.blink::FloatQuad"* nonnull %16, %"class.blink::FloatQuad"* nonnull %17, %"class.blink::FloatQuad"* nonnull %18, %"class.blink::FloatQuad"* nonnull %19)
  br i1 %114, label %115, label %604

115:                                              ; preds = %109
  %116 = bitcast %"class.blink::InspectorHighlight"* %0 to %"class.blink::InspectorHighlightBase"*
  %117 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %2, i64 0, i32 0
  %118 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %2, i64 0, i32 1
  %119 = bitcast %"class.WTF::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %20, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0), i64 7) #19
  call void @_ZN5blink22InspectorHighlightBase10AppendQuadERKNS_9FloatQuadERKNS_5ColorES6_RKN3WTF6StringE(%"class.blink::InspectorHighlightBase"* %116, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %16, %"class.blink::Color"* dereferenceable(4) %117, %"class.blink::Color"* dereferenceable(4) %118, %"class.WTF::String"* nonnull dereferenceable(8) %20)
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #19
  br label %136

136:                                              ; preds = %115, %132, %135
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #19
  %137 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %2, i64 0, i32 2
  %138 = bitcast %"class.WTF::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %21, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i64 7) #19
  call void @_ZN5blink22InspectorHighlightBase10AppendQuadERKNS_9FloatQuadERKNS_5ColorES6_RKN3WTF6StringE(%"class.blink::InspectorHighlightBase"* %116, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %17, %"class.blink::Color"* dereferenceable(4) %137, %"class.blink::Color"* nonnull dereferenceable(4) @.ref.tmp.17, %"class.WTF::String"* nonnull dereferenceable(8) %21)
  %139 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %139, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %140, null
  br i1 %141, label %155, label %142

142:                                              ; preds = %136
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load atomic i32, i32* %143 monotonic, align 4
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  br i1 %146, label %149, label %151

149:                                              ; preds = %142
  %150 = add i32 %148, -1
  store i32 %150, i32* %147, align 4
  br label %151

151:                                              ; preds = %149, %142
  %152 = phi i32 [ %150, %149 ], [ %148, %142 ]
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %151
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %140) #19
  br label %155

155:                                              ; preds = %136, %151, %154
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #19
  %156 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %2, i64 0, i32 3
  %157 = bitcast %"class.WTF::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %22, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i64 6) #19
  call void @_ZN5blink22InspectorHighlightBase10AppendQuadERKNS_9FloatQuadERKNS_5ColorES6_RKN3WTF6StringE(%"class.blink::InspectorHighlightBase"* %116, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %18, %"class.blink::Color"* dereferenceable(4) %156, %"class.blink::Color"* nonnull dereferenceable(4) @.ref.tmp.19, %"class.WTF::String"* nonnull dereferenceable(8) %22)
  %158 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %160, label %174, label %161

161:                                              ; preds = %155
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  br i1 %165, label %168, label %170

168:                                              ; preds = %161
  %169 = add i32 %167, -1
  store i32 %169, i32* %166, align 4
  br label %170

170:                                              ; preds = %168, %161
  %171 = phi i32 [ %169, %168 ], [ %167, %161 ]
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %170
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %159) #19
  br label %174

174:                                              ; preds = %155, %170, %173
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157) #19
  %175 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %2, i64 0, i32 4
  %176 = bitcast %"class.WTF::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %23, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0), i64 6) #19
  call void @_ZN5blink22InspectorHighlightBase10AppendQuadERKNS_9FloatQuadERKNS_5ColorES6_RKN3WTF6StringE(%"class.blink::InspectorHighlightBase"* %116, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %19, %"class.blink::Color"* dereferenceable(4) %175, %"class.blink::Color"* nonnull dereferenceable(4) @.ref.tmp.20, %"class.WTF::String"* nonnull dereferenceable(8) %23)
  %177 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %193, label %180

180:                                              ; preds = %174
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  br i1 %184, label %187, label %189

187:                                              ; preds = %180
  %188 = add i32 %186, -1
  store i32 %188, i32* %185, align 4
  br label %189

189:                                              ; preds = %187, %180
  %190 = phi i32 [ %188, %187 ], [ %186, %180 ]
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %178) #19
  br label %193

193:                                              ; preds = %174, %189, %192
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176) #19
  %194 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !26
  %195 = icmp eq i8 %194, 0
  br i1 %195, label %219, label %196

196:                                              ; preds = %193
  %197 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %39, i64 0, i32 4
  %198 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %197 to i96*
  %199 = load i96, i96* %198, align 4
  %200 = and i96 %199, 16777216
  %201 = icmp eq i96 %200, 0
  br i1 %201, label %202, label %219

202:                                              ; preds = %196
  %203 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %39, i64 0, i32 6, i32 0, i32 0
  %204 = load %"class.blink::Node"*, %"class.blink::Node"** %203, align 8
  %205 = icmp eq %"class.blink::Node"* %204, null
  br i1 %205, label %219, label %206

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %204, i64 0, i32 1
  %208 = load i32, i32* %207, align 8
  %209 = and i32 %208, 67108876
  %210 = icmp eq i32 %209, 67108864
  br i1 %210, label %211, label %219, !prof !28

211:                                              ; preds = %206
  %212 = bitcast %"class.blink::Node"* %204 to %"class.blink::Element"*
  %213 = call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %212) #19
  %214 = icmp eq %"class.blink::DisplayLockContext"* %213, null
  br i1 %214, label %219, label %215

215:                                              ; preds = %211
  %216 = getelementptr inbounds %"class.blink::DisplayLockContext", %"class.blink::DisplayLockContext"* %213, i64 0, i32 19
  %217 = load i8, i8* %216, align 4, !range !26
  %218 = icmp eq i8 %217, 0
  br i1 %218, label %219, label %604

219:                                              ; preds = %215, %196, %202, %206, %193, %211
  %220 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %2, i64 0, i32 8, i32 0
  %221 = load i32, i32* %220, align 4
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %227

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %2, i64 0, i32 17, i32 0, i32 0, i32 0
  %225 = load %"struct.blink::InspectorGridHighlightConfig"*, %"struct.blink::InspectorGridHighlightConfig"** %224, align 8
  %226 = icmp eq %"struct.blink::InspectorGridHighlightConfig"* %225, null
  br i1 %226, label %277, label %227

227:                                              ; preds = %223, %219
  %228 = call i8* @_Znwm(i64 40) #18
  %229 = bitcast i8* %228 to %"class.blink::protocol::ListValue"*
  call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %229) #19
  %230 = ptrtoint i8* %228 to i64
  %231 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 6
  %232 = getelementptr inbounds %"class.std::__1::unique_ptr.2401", %"class.std::__1::unique_ptr.2401"* %231, i64 0, i32 0, i32 0, i32 0
  %233 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %232, align 8
  %234 = bitcast %"class.std::__1::unique_ptr.2401"* %231 to i64*
  store i64 %230, i64* %234, align 8
  %235 = icmp eq %"class.blink::protocol::ListValue"* %233, null
  br i1 %235, label %241, label %236

236:                                              ; preds = %227
  %237 = bitcast %"class.blink::protocol::ListValue"* %233 to void (%"class.blink::protocol::ListValue"*)***
  %238 = load void (%"class.blink::protocol::ListValue"*)**, void (%"class.blink::protocol::ListValue"*)*** %237, align 8
  %239 = getelementptr inbounds void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %238, i64 2
  %240 = load void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %239, align 8
  call void %240(%"class.blink::protocol::ListValue"* nonnull %233) #19
  br label %241

241:                                              ; preds = %236, %227
  %242 = bitcast %"class.blink::LayoutObject"* %39 to i1 (%"class.blink::LayoutObject"*, i32)***
  %243 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %242, align 8
  %244 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %243, i64 92
  %245 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %244, align 8
  %246 = call zeroext i1 %245(%"class.blink::LayoutObject"* nonnull %39, i32 10) #19
  br i1 %246, label %252, label %247

247:                                              ; preds = %241
  %248 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %242, align 8
  %249 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %248, i64 92
  %250 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %249, align 8
  %251 = call zeroext i1 %250(%"class.blink::LayoutObject"* nonnull %39, i32 27) #19
  br i1 %251, label %252, label %277

252:                                              ; preds = %241, %247
  %253 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %232, align 8
  %254 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 0, i32 2
  %255 = load float, float* %254, align 8
  %256 = load i32, i32* %220, align 4
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %270, label %258

258:                                              ; preds = %252
  %259 = call noalias i8* @malloc(i64 48) #19
  %260 = bitcast i8* %259 to %"struct.blink::InspectorGridHighlightConfig"*
  call void @llvm.memset.p0i8.i64(i8* align 4 %259, i8 0, i64 45, i1 false) #19
  %261 = getelementptr inbounds i8, i8* %259, i64 4
  %262 = bitcast i8* %261 to i32*
  store i32 %256, i32* %262, align 4
  %263 = getelementptr inbounds i8, i8* %259, i64 8
  %264 = bitcast i8* %263 to i32*
  store i32 %256, i32* %264, align 4
  %265 = getelementptr inbounds i8, i8* %259, i64 38
  store i8 1, i8* %265, align 2
  %266 = getelementptr inbounds i8, i8* %259, i64 39
  store i8 1, i8* %266, align 1
  %267 = call fastcc %"class.blink::protocol::DictionaryValue"* @_ZN5blink12_GLOBAL__N_113BuildGridInfoEPNS_4NodeERKNS_28InspectorGridHighlightConfigEfb(%"class.blink::Node"* %1, %"struct.blink::InspectorGridHighlightConfig"* dereferenceable(48) %260, float %255) #19
  %268 = icmp eq i8* %259, null
  br i1 %268, label %274, label %269

269:                                              ; preds = %258
  call void @free(i8* nonnull %259) #19
  br label %274

270:                                              ; preds = %252
  %271 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %2, i64 0, i32 17, i32 0, i32 0, i32 0
  %272 = load %"struct.blink::InspectorGridHighlightConfig"*, %"struct.blink::InspectorGridHighlightConfig"** %271, align 8
  %273 = call fastcc %"class.blink::protocol::DictionaryValue"* @_ZN5blink12_GLOBAL__N_113BuildGridInfoEPNS_4NodeERKNS_28InspectorGridHighlightConfigEfb(%"class.blink::Node"* %1, %"struct.blink::InspectorGridHighlightConfig"* dereferenceable(48) %272, float %255) #19
  br label %274

274:                                              ; preds = %270, %269, %258
  %275 = phi %"class.blink::protocol::DictionaryValue"* [ %273, %270 ], [ %267, %258 ], [ %267, %269 ]
  %276 = bitcast %"class.blink::protocol::DictionaryValue"* %275 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol9ListValue9pushValueENSt3__110unique_ptrINS0_5ValueENS2_14default_deleteIS4_EEEE(%"class.blink::protocol::ListValue"* %253, %"class.blink::protocol::Value"* %276) #19
  br label %277

277:                                              ; preds = %223, %247, %274
  %278 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %2, i64 0, i32 18, i32 0, i32 0, i32 0
  %279 = load %"struct.blink::InspectorFlexContainerHighlightConfig"*, %"struct.blink::InspectorFlexContainerHighlightConfig"** %278, align 8
  %280 = icmp eq %"struct.blink::InspectorFlexContainerHighlightConfig"* %279, null
  br i1 %280, label %319, label %281

281:                                              ; preds = %277
  %282 = call i8* @_Znwm(i64 40) #18
  %283 = bitcast i8* %282 to %"class.blink::protocol::ListValue"*
  call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %283) #19
  %284 = ptrtoint i8* %282 to i64
  %285 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 7
  %286 = getelementptr inbounds %"class.std::__1::unique_ptr.2401", %"class.std::__1::unique_ptr.2401"* %285, i64 0, i32 0, i32 0, i32 0
  %287 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %286, align 8
  %288 = bitcast %"class.std::__1::unique_ptr.2401"* %285 to i64*
  store i64 %284, i64* %288, align 8
  %289 = icmp eq %"class.blink::protocol::ListValue"* %287, null
  br i1 %289, label %295, label %290

290:                                              ; preds = %281
  %291 = bitcast %"class.blink::protocol::ListValue"* %287 to void (%"class.blink::protocol::ListValue"*)***
  %292 = load void (%"class.blink::protocol::ListValue"*)**, void (%"class.blink::protocol::ListValue"*)*** %291, align 8
  %293 = getelementptr inbounds void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %292, i64 2
  %294 = load void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %293, align 8
  call void %294(%"class.blink::protocol::ListValue"* nonnull %287) #19
  br label %295

295:                                              ; preds = %290, %281
  %296 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %39, i64 0, i32 5, i32 0
  %297 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %296, align 8
  %298 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %297, i64 0, i32 0, i32 9
  %299 = bitcast [20 x i8]* %298 to i160*
  %300 = load i160, i160* %299, align 8
  %301 = lshr i160 %300, 32
  %302 = trunc i160 %301 to i32
  %303 = and i32 %302, 30
  %304 = or i32 %303, 1
  %305 = icmp eq i32 %304, 17
  br i1 %305, label %306, label %319

306:                                              ; preds = %295
  %307 = bitcast %"class.blink::LayoutObject"* %39 to i1 (%"class.blink::LayoutObject"*, i32)***
  %308 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %307, align 8
  %309 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %308, i64 92
  %310 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %309, align 8
  %311 = call zeroext i1 %310(%"class.blink::LayoutObject"* nonnull %39, i32 26) #19
  br i1 %311, label %312, label %319

312:                                              ; preds = %306
  %313 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %286, align 8
  %314 = load %"struct.blink::InspectorFlexContainerHighlightConfig"*, %"struct.blink::InspectorFlexContainerHighlightConfig"** %278, align 8
  %315 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 0, i32 2
  %316 = load float, float* %315, align 8
  %317 = call fastcc %"class.blink::protocol::DictionaryValue"* @_ZN5blink12_GLOBAL__N_122BuildFlexContainerInfoEPNS_4NodeERKNS_37InspectorFlexContainerHighlightConfigEf(%"class.blink::Node"* %1, %"struct.blink::InspectorFlexContainerHighlightConfig"* dereferenceable(144) %314, float %316)
  %318 = bitcast %"class.blink::protocol::DictionaryValue"* %317 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol9ListValue9pushValueENSt3__110unique_ptrINS0_5ValueENS2_14default_deleteIS4_EEEE(%"class.blink::protocol::ListValue"* %313, %"class.blink::protocol::Value"* %318) #19
  br label %319

319:                                              ; preds = %277, %295, %306, %312
  %320 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %2, i64 0, i32 19, i32 0, i32 0, i32 0
  %321 = load %"struct.blink::InspectorFlexItemHighlightConfig"*, %"struct.blink::InspectorFlexItemHighlightConfig"** %320, align 8
  %322 = icmp eq %"struct.blink::InspectorFlexItemHighlightConfig"* %321, null
  br i1 %322, label %604, label %323

323:                                              ; preds = %319
  %324 = call i8* @_Znwm(i64 40) #18
  %325 = bitcast i8* %324 to %"class.blink::protocol::ListValue"*
  call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %325) #19
  %326 = ptrtoint i8* %324 to i64
  %327 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 8
  %328 = getelementptr inbounds %"class.std::__1::unique_ptr.2401", %"class.std::__1::unique_ptr.2401"* %327, i64 0, i32 0, i32 0, i32 0
  %329 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %328, align 8
  %330 = bitcast %"class.std::__1::unique_ptr.2401"* %327 to i64*
  store i64 %326, i64* %330, align 8
  %331 = icmp eq %"class.blink::protocol::ListValue"* %329, null
  br i1 %331, label %337, label %332

332:                                              ; preds = %323
  %333 = bitcast %"class.blink::protocol::ListValue"* %329 to void (%"class.blink::protocol::ListValue"*)***
  %334 = load void (%"class.blink::protocol::ListValue"*)**, void (%"class.blink::protocol::ListValue"*)*** %333, align 8
  %335 = getelementptr inbounds void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %334, i64 2
  %336 = load void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %335, align 8
  call void %336(%"class.blink::protocol::ListValue"* nonnull %329) #19
  br label %337

337:                                              ; preds = %332, %323
  %338 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %39, i64 0, i32 4
  %339 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %338 to i96*
  %340 = load i96, i96* %339, align 4
  %341 = and i96 %340, 16777216
  %342 = icmp eq i96 %341, 0
  %343 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %39, i64 0, i32 6, i32 0, i32 0
  %344 = load %"class.blink::Node"*, %"class.blink::Node"** %343, align 8
  %345 = select i1 %342, %"class.blink::Node"* %344, %"class.blink::Node"* null
  %346 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %345, i64 0, i32 3, i32 0, i32 0
  %347 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %346, align 8
  %348 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %347, i64 0, i32 2, i32 0, i32 0
  %349 = load %"class.blink::Document"*, %"class.blink::Document"** %348, align 8
  %350 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %349, i64 0, i32 0, i32 0
  %351 = icmp eq %"class.blink::Node"* %350, %345
  br i1 %351, label %604, label %352

352:                                              ; preds = %337
  %353 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %39, i64 0, i32 7
  %354 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %353, align 8
  %355 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %354, i64 0, i32 5, i32 0
  %356 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %355, align 8
  %357 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %356, i64 0, i32 0, i32 9
  %358 = bitcast [20 x i8]* %357 to i160*
  %359 = load i160, i160* %358, align 8
  %360 = lshr i160 %359, 32
  %361 = trunc i160 %360 to i32
  %362 = and i32 %361, 30
  %363 = or i32 %362, 1
  %364 = icmp eq i32 %363, 17
  br i1 %364, label %365, label %604

365:                                              ; preds = %352
  %366 = bitcast %"class.blink::LayoutObject"* %354 to i1 (%"class.blink::LayoutObject"*, i32)***
  %367 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %366, align 8
  %368 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %367, i64 92
  %369 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %368, align 8
  %370 = call zeroext i1 %369(%"class.blink::LayoutObject"* %354, i32 26) #19
  br i1 %370, label %371, label %604

371:                                              ; preds = %365
  %372 = load i96, i96* %339, align 4
  %373 = and i96 %372, 134217728
  %374 = icmp ne i96 %373, 0
  %375 = and i96 %372, 113336795588871485128704
  %376 = icmp eq i96 %375, 75557863725914323419136
  %377 = or i1 %374, %376
  br i1 %377, label %604, label %378

378:                                              ; preds = %371
  %379 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %353, align 8
  %380 = icmp eq %"class.blink::LayoutObject"* %379, null
  br i1 %380, label %604, label %381

381:                                              ; preds = %378
  %382 = bitcast %"class.blink::LayoutObject"* %379 to i1 (%"class.blink::LayoutObject"*)***
  %383 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %382, align 8
  %384 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %383, i64 80
  %385 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %384, align 8
  %386 = call zeroext i1 %385(%"class.blink::LayoutObject"* nonnull %379) #19
  br i1 %386, label %387, label %604

387:                                              ; preds = %381
  %388 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %328, align 8
  %389 = load %"struct.blink::InspectorFlexItemHighlightConfig"*, %"struct.blink::InspectorFlexItemHighlightConfig"** %320, align 8
  %390 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 0, i32 2
  %391 = load float, float* %390, align 8
  %392 = bitcast i64* %8 to %"class.blink::Length"*
  %393 = call i8* @_Znwm(i64 80) #18
  %394 = bitcast i8* %393 to %"class.blink::protocol::DictionaryValue"*
  call void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"* nonnull %394) #19
  %395 = load i32, i32* %24, align 8
  %396 = and i32 %395, 1
  %397 = icmp eq i32 %396, 0
  br i1 %397, label %402, label %398

398:                                              ; preds = %387
  %399 = bitcast %"class.blink::NodeData"** %28 to %"class.blink::NodeRareData"**
  %400 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %399, align 8
  %401 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %400, i64 0, i32 1, i32 0, i32 0
  br label %404

402:                                              ; preds = %387
  %403 = bitcast %"class.blink::NodeData"** %28 to %"class.blink::NodeRenderingData"**
  br label %404

404:                                              ; preds = %402, %398
  %405 = phi %"class.blink::NodeRenderingData"** [ %401, %398 ], [ %403, %402 ]
  %406 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %405, align 8
  %407 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %406, i64 0, i32 1
  %408 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %407, align 8
  %409 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %408, i64 0, i32 7
  %410 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %409, align 8
  %411 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %410, i64 0, i32 5, i32 0
  %412 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %411, align 8
  %413 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %412, i64 0, i32 0, i32 9
  %414 = bitcast [20 x i8]* %413 to i160*
  %415 = load i160, i160* %414, align 8
  %416 = and i160 %415, 15211807202738752817960438464512
  %417 = icmp eq i160 %416, 0
  %418 = lshr i160 %415, 32
  %419 = trunc i160 %418 to i32
  %420 = and i32 %419, 30
  %421 = or i32 %420, 1
  %422 = icmp eq i32 %421, 15
  %423 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %412, i64 0, i32 0, i32 3, i32 0, i32 0
  %424 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %423, align 8
  br i1 %422, label %425, label %432

425:                                              ; preds = %404
  %426 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %424, i64 0, i32 2, i32 0, i32 0
  %427 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %426, align 8
  %428 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %427, i64 0, i32 13
  %429 = bitcast [3 x i8]* %428 to i24*
  %430 = load i24, i24* %429, align 8
  %431 = icmp slt i24 %430, 0
  br label %439

432:                                              ; preds = %404
  %433 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %424, i64 0, i32 12
  %434 = load i16, i16* %433, align 4
  %435 = lshr i16 %434, 5
  %436 = and i16 %435, 2
  %437 = or i16 %436, 1
  %438 = icmp eq i16 %437, 3
  br label %439

439:                                              ; preds = %432, %425
  %440 = phi i1 [ %431, %425 ], [ %438, %432 ]
  %441 = xor i1 %417, %440
  %442 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %442) #19
  %443 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %392, i64 0, i32 2
  %444 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %392, i64 0, i32 3
  store i64 -6148914691236517206, i64* %8, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %442, i8 0, i64 7, i1 false) #19, !alias.scope !29
  %445 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %408, i64 0, i32 5, i32 0
  %446 = bitcast %"class.blink::ComputedStyle"** %445 to %"class.blink::ComputedStyleBase"**
  %447 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %446, align 8
  %448 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %447, i64 0, i32 3, i32 0, i32 0
  %449 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %448, align 8
  %450 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %449, i64 0, i32 2, i32 0, i32 0
  %451 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %450, align 8
  %452 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %447, i64 0, i32 5, i32 0, i32 0
  %453 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %452, align 8
  %454 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %453, i64 0, i32 8
  %455 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %453, i64 0, i32 3
  %456 = select i1 %441, %"class.blink::Length"* %454, %"class.blink::Length"* %455
  %457 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %451, i64 0, i32 4, i32 2
  %458 = load i8, i8* %457, align 1
  switch i8 %458, label %602 [
    i8 2, label %459
    i8 0, label %461
  ]

459:                                              ; preds = %439
  %460 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %451, i64 0, i32 4
  br label %465

461:                                              ; preds = %439
  %462 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %456, i64 0, i32 2
  %463 = load i8, i8* %462, align 1
  %464 = icmp eq i8 %463, 2
  br i1 %464, label %465, label %602

465:                                              ; preds = %461, %459
  %466 = phi %"class.blink::Length"* [ %460, %459 ], [ %456, %461 ]
  %467 = bitcast %"class.blink::Length"* %466 to i64*
  %468 = load i64, i64* %467, align 4
  store i64 %468, i64* %8, align 8
  %469 = lshr i64 %468, 40
  %470 = trunc i64 %469 to i8
  switch i8 %470, label %598 [
    i8 2, label %471
    i8 1, label %471
    i8 8, label %471
  ]

471:                                              ; preds = %465, %465, %465
  %472 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %472) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.106, i64 0, i64 0), i64 8) #19
  %473 = load i8, i8* %444, align 2, !range !26
  %474 = icmp eq i8 %473, 0
  %475 = bitcast i64* %8 to float*
  %476 = load float, float* %475, align 8
  %477 = bitcast float %476 to i32
  %478 = sitofp i32 %477 to float
  %479 = select i1 %474, float %478, float %476
  %480 = fmul float %391, %479
  %481 = fpext float %480 to double
  call void @_ZN5blink8protocol15DictionaryValue9setDoubleERKN3WTF6StringEd(%"class.blink::protocol::DictionaryValue"* nonnull %394, %"class.WTF::String"* nonnull dereferenceable(8) %9, double %481) #19
  %482 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %483 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %482, align 8
  %484 = icmp eq %"class.WTF::StringImpl"* %483, null
  br i1 %484, label %498, label %485

485:                                              ; preds = %471
  %486 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %483, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %487 = load atomic i32, i32* %486 monotonic, align 4
  %488 = and i32 %487, 2
  %489 = icmp eq i32 %488, 0
  %490 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %483, i64 0, i32 0
  %491 = load i32, i32* %490, align 4
  br i1 %489, label %492, label %494

492:                                              ; preds = %485
  %493 = add i32 %491, -1
  store i32 %493, i32* %490, align 4
  br label %494

494:                                              ; preds = %492, %485
  %495 = phi i32 [ %493, %492 ], [ %491, %485 ]
  %496 = icmp eq i32 %495, 0
  br i1 %496, label %497, label %498

497:                                              ; preds = %494
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %483) #19
  br label %498

498:                                              ; preds = %497, %494, %471
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %472) #19
  %499 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %499) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.84, i64 0, i64 0), i64 16) #19
  call void @_ZN5blink8protocol15DictionaryValue10setBooleanERKN3WTF6StringEb(%"class.blink::protocol::DictionaryValue"* nonnull %394, %"class.WTF::String"* nonnull dereferenceable(8) %10, i1 zeroext %441) #19
  %500 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %501 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %500, align 8
  %502 = icmp eq %"class.WTF::StringImpl"* %501, null
  br i1 %502, label %516, label %503

503:                                              ; preds = %498
  %504 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %501, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %505 = load atomic i32, i32* %504 monotonic, align 4
  %506 = and i32 %505, 2
  %507 = icmp eq i32 %506, 0
  %508 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %501, i64 0, i32 0
  %509 = load i32, i32* %508, align 4
  br i1 %507, label %510, label %512

510:                                              ; preds = %503
  %511 = add i32 %509, -1
  store i32 %511, i32* %508, align 4
  br label %512

512:                                              ; preds = %510, %503
  %513 = phi i32 [ %511, %510 ], [ %509, %503 ]
  %514 = icmp eq i32 %513, 0
  br i1 %514, label %515, label %516

515:                                              ; preds = %512
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %501) #19
  br label %516

516:                                              ; preds = %515, %512, %498
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %499) #19
  %517 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %446, align 8
  %518 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %517, i64 0, i32 5, i32 0, i32 0
  %519 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %518, align 8
  %520 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %519, i64 0, i32 11
  %521 = load i8, i8* %520, align 4
  %522 = and i8 %521, 2
  %523 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %523) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.107, i64 0, i64 0), i64 9) #19
  %524 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %524) #19
  %525 = icmp eq i8 %522, 0
  %526 = select i1 %525, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0)
  %527 = select i1 %525, i64 6, i64 7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* %526, i64 %527) #19
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %394, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.WTF::String"* nonnull dereferenceable(8) %12) #19
  %528 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %529 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %528, align 8
  %530 = icmp eq %"class.WTF::StringImpl"* %529, null
  br i1 %530, label %544, label %531

531:                                              ; preds = %516
  %532 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %529, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %533 = load atomic i32, i32* %532 monotonic, align 4
  %534 = and i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %529, i64 0, i32 0
  %537 = load i32, i32* %536, align 4
  br i1 %535, label %538, label %540

538:                                              ; preds = %531
  %539 = add i32 %537, -1
  store i32 %539, i32* %536, align 4
  br label %540

540:                                              ; preds = %538, %531
  %541 = phi i32 [ %539, %538 ], [ %537, %531 ]
  %542 = icmp eq i32 %541, 0
  br i1 %542, label %543, label %544

543:                                              ; preds = %540
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %529) #19
  br label %544

544:                                              ; preds = %543, %540, %516
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %524) #19
  %545 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %546 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %545, align 8
  %547 = icmp eq %"class.WTF::StringImpl"* %546, null
  br i1 %547, label %561, label %548

548:                                              ; preds = %544
  %549 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %546, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %550 = load atomic i32, i32* %549 monotonic, align 4
  %551 = and i32 %550, 2
  %552 = icmp eq i32 %551, 0
  %553 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %546, i64 0, i32 0
  %554 = load i32, i32* %553, align 4
  br i1 %552, label %555, label %557

555:                                              ; preds = %548
  %556 = add i32 %554, -1
  store i32 %556, i32* %553, align 4
  br label %557

557:                                              ; preds = %555, %548
  %558 = phi i32 [ %556, %555 ], [ %554, %548 ]
  %559 = icmp eq i32 %558, 0
  br i1 %559, label %560, label %561

560:                                              ; preds = %557
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %546) #19
  br label %561

561:                                              ; preds = %560, %557, %544
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %523) #19
  %562 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %562) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.108, i64 0, i64 0), i64 23) #19
  %563 = bitcast %"class.std::__1::unique_ptr.2440"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %563) #19
  %564 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %564) #19
  %565 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %565) #19
  %566 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %566) #19
  %567 = call i8* @_Znwm(i64 80) #18
  %568 = bitcast i8* %567 to %"class.blink::protocol::DictionaryValue"*
  call void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"* nonnull %568) #19
  %569 = bitcast %"class.std::__1::unique_ptr.2440"* %4 to i8**
  store i8* %567, i8** %569, align 8
  %570 = getelementptr inbounds %"struct.blink::InspectorFlexItemHighlightConfig", %"struct.blink::InspectorFlexItemHighlightConfig"* %389, i64 0, i32 0
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.109, i64 0, i64 0), i64 11) #19
  %571 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %572 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %571, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_120AppendBoxStyleConfigERKN4absl8optionalINS_8BoxStyleEEERNSt3__110unique_ptrINS_8protocol15DictionaryValueENS7_14default_deleteISA_EEEEN3WTF6StringE(%"class.absl::optional.2387"* dereferenceable(12) %570, %"class.std::__1::unique_ptr.2440"* nonnull dereferenceable(8) %4, %"class.WTF::StringImpl"* %572) #19
  %573 = getelementptr inbounds %"struct.blink::InspectorFlexItemHighlightConfig", %"struct.blink::InspectorFlexItemHighlightConfig"* %389, i64 0, i32 1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.110, i64 0, i64 0), i64 14) #19
  %574 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %575 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %574, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_121AppendLineStyleConfigERKN4absl8optionalINS_9LineStyleEEERNSt3__110unique_ptrINS_8protocol15DictionaryValueENS7_14default_deleteISA_EEEEN3WTF6StringE(%"class.absl::optional.2382"* dereferenceable(24) %573, %"class.std::__1::unique_ptr.2440"* nonnull dereferenceable(8) %4, %"class.WTF::StringImpl"* %575) #19
  %576 = getelementptr inbounds %"struct.blink::InspectorFlexItemHighlightConfig", %"struct.blink::InspectorFlexItemHighlightConfig"* %389, i64 0, i32 2
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.111, i64 0, i64 0), i64 16) #19
  %577 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %578 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %577, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_121AppendLineStyleConfigERKN4absl8optionalINS_9LineStyleEEERNSt3__110unique_ptrINS_8protocol15DictionaryValueENS7_14default_deleteISA_EEEEN3WTF6StringE(%"class.absl::optional.2382"* dereferenceable(24) %576, %"class.std::__1::unique_ptr.2440"* nonnull dereferenceable(8) %4, %"class.WTF::StringImpl"* %578) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %563) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %564) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %565) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %566) #19
  %579 = bitcast i8* %567 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %394, %"class.WTF::String"* nonnull dereferenceable(8) %13, %"class.blink::protocol::Value"* nonnull %579) #19
  %580 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %581 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %580, align 8
  %582 = icmp eq %"class.WTF::StringImpl"* %581, null
  br i1 %582, label %596, label %583

583:                                              ; preds = %561
  %584 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %581, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %585 = load atomic i32, i32* %584 monotonic, align 4
  %586 = and i32 %585, 2
  %587 = icmp eq i32 %586, 0
  %588 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %581, i64 0, i32 0
  %589 = load i32, i32* %588, align 4
  br i1 %587, label %590, label %592

590:                                              ; preds = %583
  %591 = add i32 %589, -1
  store i32 %591, i32* %588, align 4
  br label %592

592:                                              ; preds = %590, %583
  %593 = phi i32 [ %591, %590 ], [ %589, %583 ]
  %594 = icmp eq i32 %593, 0
  br i1 %594, label %595, label %596

595:                                              ; preds = %592
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %581) #19
  br label %596

596:                                              ; preds = %595, %592, %561
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %562) #19
  %597 = load i8, i8* %443, align 1
  br label %598

598:                                              ; preds = %596, %465
  %599 = phi i8 [ %470, %465 ], [ %597, %596 ]
  %600 = icmp eq i8 %599, 8
  br i1 %600, label %601, label %602

601:                                              ; preds = %598
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %392) #19
  br label %602

602:                                              ; preds = %601, %598, %461, %439
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %442) #19
  %603 = bitcast i8* %393 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol9ListValue9pushValueENSt3__110unique_ptrINS0_5ValueENS2_14default_deleteIS4_EEEE(%"class.blink::protocol::ListValue"* %388, %"class.blink::protocol::Value"* nonnull %603) #19
  br label %604

604:                                              ; preds = %215, %319, %352, %371, %378, %337, %365, %602, %381, %109
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %113) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %112) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %111) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %110) #19
  br label %605

605:                                              ; preds = %105, %78, %604
  %606 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %43, align 8
  %607 = icmp eq %"class.blink::FloatQuad"* %606, null
  %608 = bitcast %"class.blink::FloatQuad"* %606 to i8*
  br i1 %607, label %614, label %609, !prof !27

609:                                              ; preds = %605
  %610 = load i32, i32* %44, align 4
  %611 = icmp eq i32 %610, 0
  br i1 %611, label %613, label %612, !prof !2

612:                                              ; preds = %609
  store i32 0, i32* %44, align 4
  br label %613

613:                                              ; preds = %612, %609
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %608) #19
  store %"class.blink::FloatQuad"* null, %"class.blink::FloatQuad"** %43, align 8
  br label %614

614:                                              ; preds = %605, %613
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #19
  br label %615

615:                                              ; preds = %35, %614
  ret void
}

declare void @_ZN5blink8protocol15DictionaryValue10setBooleanERKN3WTF6StringEb(%"class.blink::protocol::DictionaryValue"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorHighlight18AppendDistanceInfoEPNS_4NodeE(%"class.blink::InspectorHighlight"*, %"class.blink::Node"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %"struct.blink::PhysicalRect"*
  %9 = alloca %"class.std::__1::unique_ptr.2425", align 8
  %10 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 3
  %11 = tail call zeroext i1 @_ZN5blink18InspectorHighlight11GetBoxModelEPNS_4NodeEPNSt3__110unique_ptrINS_8protocol3DOM8BoxModelENS3_14default_deleteIS7_EEEEb(%"class.blink::Node"* %1, %"class.std::__1::unique_ptr.2477"* %10, i1 zeroext false)
  br i1 %11, label %12, label %335

12:                                               ; preds = %2
  %13 = tail call i8* @_Znwm(i64 24) #18
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #19
  %14 = ptrtoint i8* %13 to i64
  %15 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.2420", %"class.std::__1::unique_ptr.2420"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::vector.2423"*, %"class.std::__1::vector.2423"** %16, align 8
  %18 = bitcast %"class.std::__1::unique_ptr.2420"* %15 to i64*
  store i64 %14, i64* %18, align 8
  %19 = icmp eq %"class.std::__1::vector.2423"* %17, null
  br i1 %19, label %55, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.std::__1::vector.2423", %"class.std::__1::vector.2423"* %17, i64 0, i32 0, i32 0
  %22 = load %"class.std::__1::unique_ptr.2425"*, %"class.std::__1::unique_ptr.2425"** %21, align 8
  %23 = icmp eq %"class.std::__1::unique_ptr.2425"* %22, null
  br i1 %23, label %53, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.std::__1::unique_ptr.2425"* %22 to i8*
  %26 = getelementptr inbounds %"class.std::__1::vector.2423", %"class.std::__1::vector.2423"* %17, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::unique_ptr.2425"*, %"class.std::__1::unique_ptr.2425"** %26, align 8
  %28 = icmp eq %"class.std::__1::unique_ptr.2425"* %27, %22
  br i1 %28, label %51, label %29

29:                                               ; preds = %24, %46
  %30 = phi %"class.std::__1::unique_ptr.2425"* [ %31, %46 ], [ %27, %24 ]
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %30, i64 -1
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.std::__1::vector.2428"*, %"class.std::__1::vector.2428"** %32, align 8
  store %"class.std::__1::vector.2428"* null, %"class.std::__1::vector.2428"** %32, align 8
  %34 = icmp eq %"class.std::__1::vector.2428"* %33, null
  br i1 %34, label %46, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.std::__1::vector.2428", %"class.std::__1::vector.2428"* %33, i64 0, i32 0, i32 0
  %37 = load double*, double** %36, align 8
  %38 = icmp eq double* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %35
  %40 = ptrtoint double* %37 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector.2428", %"class.std::__1::vector.2428"* %33, i64 0, i32 0, i32 1
  %42 = bitcast double** %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = bitcast double* %37 to i8*
  tail call void @_ZdlPv(i8* %43) #18
  br label %44

44:                                               ; preds = %39, %35
  %45 = bitcast %"class.std::__1::vector.2428"* %33 to i8*
  tail call void @_ZdlPv(i8* %45) #18
  br label %46

46:                                               ; preds = %44, %29
  %47 = icmp eq %"class.std::__1::unique_ptr.2425"* %31, %22
  br i1 %47, label %48, label %29

48:                                               ; preds = %46
  %49 = bitcast %"class.std::__1::vector.2423"* %17 to i8**
  %50 = load i8*, i8** %49, align 8
  br label %51

51:                                               ; preds = %48, %24
  %52 = phi i8* [ %50, %48 ], [ %25, %24 ]
  store %"class.std::__1::unique_ptr.2425"* %22, %"class.std::__1::unique_ptr.2425"** %26, align 8
  tail call void @_ZdlPv(i8* %52) #18
  br label %53

53:                                               ; preds = %51, %20
  %54 = bitcast %"class.std::__1::vector.2423"* %17 to i8*
  tail call void @_ZdlPv(i8* %54) #18
  br label %55

55:                                               ; preds = %53, %12
  %56 = tail call i8* @_Znwm(i64 80) #18
  %57 = bitcast i8* %56 to %"class.blink::protocol::DictionaryValue"*
  tail call void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"* nonnull %57) #19
  %58 = ptrtoint i8* %56 to i64
  %59 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 2
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.2440", %"class.std::__1::unique_ptr.2440"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.blink::protocol::DictionaryValue"*, %"class.blink::protocol::DictionaryValue"** %60, align 8
  %62 = bitcast %"class.std::__1::unique_ptr.2440"* %59 to i64*
  store i64 %58, i64* %62, align 8
  %63 = icmp eq %"class.blink::protocol::DictionaryValue"* %61, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %55
  %65 = bitcast %"class.blink::protocol::DictionaryValue"* %61 to void (%"class.blink::protocol::DictionaryValue"*)***
  %66 = load void (%"class.blink::protocol::DictionaryValue"*)**, void (%"class.blink::protocol::DictionaryValue"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %66, i64 2
  %68 = load void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %67, align 8
  tail call void %68(%"class.blink::protocol::DictionaryValue"* nonnull %61) #19
  br label %69

69:                                               ; preds = %64, %55
  %70 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %71 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %71, i64 0, i32 2, i32 0, i32 0
  %73 = load %"class.blink::Document"*, %"class.blink::Document"** %72, align 8
  tail call void @_ZN5blink8Document35EnsurePaintLocationDataValidForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"* %73, %"class.blink::Node"* %1, i32 13) #19
  %74 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = and i32 %75, 1
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 6, i32 0, i32 0
  br i1 %77, label %83, label %79

79:                                               ; preds = %69
  %80 = bitcast %"class.blink::NodeData"** %78 to %"class.blink::NodeRareData"**
  %81 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %81, i64 0, i32 1, i32 0, i32 0
  br label %85

83:                                               ; preds = %69
  %84 = bitcast %"class.blink::NodeData"** %78 to %"class.blink::NodeRenderingData"**
  br label %85

85:                                               ; preds = %79, %83
  %86 = phi %"class.blink::NodeRenderingData"** [ %82, %79 ], [ %84, %83 ]
  %87 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %87, i64 0, i32 1
  %89 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %88, align 8
  %90 = icmp eq %"class.blink::LayoutObject"* %89, null
  br i1 %90, label %335, label %91

91:                                               ; preds = %85
  %92 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #19
  %93 = bitcast i8* %92 to %"class.blink::CSSComputedStyleDeclaration"*
  %94 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #19
  %95 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %95, align 8
  call void @_ZN5blink27CSSComputedStyleDeclarationC1EPNS_4NodeEbRKN3WTF6StringE(%"class.blink::CSSComputedStyleDeclaration"* %93, %"class.blink::Node"* %1, i1 zeroext true, %"class.WTF::String"* nonnull dereferenceable(8) %3) #19
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %111, label %98

98:                                               ; preds = %91
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  br i1 %102, label %105, label %107

105:                                              ; preds = %98
  %106 = add i32 %104, -1
  store i32 %106, i32* %103, align 4
  br label %107

107:                                              ; preds = %105, %98
  %108 = phi i32 [ %106, %105 ], [ %104, %98 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #19
  br label %111

111:                                              ; preds = %91, %107, %110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #19
  %112 = getelementptr inbounds i8, i8* %92, i64 -4
  %113 = bitcast i8* %112 to i16*
  %114 = load atomic i16, i16* %113 monotonic, align 2
  %115 = or i16 %114, 1
  store atomic i16 %115, i16* %113 release, align 2
  %116 = call i32 @_ZNK5blink27CSSComputedStyleDeclaration6lengthEv(%"class.blink::CSSComputedStyleDeclaration"* %93) #19
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %128, label %118

118:                                              ; preds = %111
  %119 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  %120 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %121 = bitcast %"class.WTF::AtomicString"* %4 to i64*
  %122 = bitcast %"class.blink::Node"* %1 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %123 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0
  %124 = bitcast %"class.WTF::String"* %6 to i8*
  %125 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %126 = bitcast %"class.WTF::String"* %5 to i8*
  %127 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  br label %212

128:                                              ; preds = %330, %111
  %129 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %70, align 8
  %130 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %129, i64 0, i32 2, i32 0, i32 0
  %131 = load %"class.blink::Document"*, %"class.blink::Document"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %131, i64 0, i32 0, i32 0
  call void @_ZN5blink18InspectorHighlight27VisitAndCollectDistanceInfoEPNS_4NodeE(%"class.blink::InspectorHighlight"* %0, %"class.blink::Node"* %132)
  %133 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %133) #19
  %134 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %135 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %70, align 8
  %136 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %135, i64 0, i32 2, i32 0, i32 0
  %137 = load %"class.blink::Document"*, %"class.blink::Document"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %137, i64 0, i32 113
  %139 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %138, align 8
  %140 = call { i64, i64 } @_ZNK5blink10LayoutView12DocumentRectEv(%"class.blink::LayoutView"* %139) #19
  %141 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %142 = extractvalue { i64, i64 } %140, 0
  store i64 %142, i64* %141, align 8
  %143 = extractvalue { i64, i64 } %140, 1
  store i64 %143, i64* %134, align 8
  %144 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %70, align 8
  %145 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %144, i64 0, i32 2, i32 0, i32 0
  %146 = load %"class.blink::Document"*, %"class.blink::Document"** %145, align 8
  %147 = call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %146) #19
  %148 = load %"class.std::__1::vector.2423"*, %"class.std::__1::vector.2423"** %16, align 8
  %149 = bitcast %"class.std::__1::unique_ptr.2425"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %149) #19
  %150 = call { i64, i64 } @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_12PhysicalRectE(%"class.blink::LocalFrameView"* %147, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %8) #19
  %151 = extractvalue { i64, i64 } %150, 0
  %152 = trunc i64 %151 to i32
  %153 = lshr i64 %151, 32
  %154 = trunc i64 %153 to i32
  %155 = extractvalue { i64, i64 } %150, 1
  %156 = sitofp i32 %152 to double
  %157 = fmul double %156, 1.562500e-02
  %158 = sitofp i32 %154 to double
  %159 = fmul double %158, 1.562500e-02
  %160 = trunc i64 %155 to i32
  %161 = sitofp i32 %160 to double
  %162 = fmul double %161, 1.562500e-02
  %163 = lshr i64 %155, 32
  %164 = trunc i64 %163 to i32
  %165 = sitofp i32 %164 to double
  %166 = fmul double %165, 1.562500e-02
  %167 = call i8* @_Znwm(i64 24) #18
  %168 = call i8* @_Znwm(i64 32) #18
  %169 = getelementptr inbounds i8, i8* %167, i64 8
  %170 = bitcast i8* %167 to i8**
  store i8* %168, i8** %170, align 8
  %171 = getelementptr inbounds i8, i8* %168, i64 32
  %172 = getelementptr inbounds i8, i8* %167, i64 16
  %173 = bitcast i8* %172 to i8**
  store i8* %171, i8** %173, align 8
  %174 = bitcast i8* %169 to i64*
  %175 = bitcast i8* %168 to double*
  store double %157, double* %175, align 8
  %176 = getelementptr inbounds i8, i8* %168, i64 8
  %177 = bitcast i8* %176 to double*
  store double %159, double* %177, align 8
  %178 = getelementptr inbounds i8, i8* %168, i64 16
  %179 = bitcast i8* %178 to double*
  store double %162, double* %179, align 8
  %180 = getelementptr inbounds i8, i8* %168, i64 24
  %181 = bitcast i8* %180 to double*
  store double %166, double* %181, align 8
  %182 = ptrtoint i8* %171 to i64
  store i64 %182, i64* %174, align 8
  %183 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %9, i64 0, i32 0, i32 0, i32 0
  %184 = bitcast %"class.std::__1::unique_ptr.2425"* %9 to i8**
  store i8* %167, i8** %184, align 8
  %185 = getelementptr inbounds %"class.std::__1::vector.2423", %"class.std::__1::vector.2423"* %148, i64 0, i32 0, i32 1
  %186 = load %"class.std::__1::unique_ptr.2425"*, %"class.std::__1::unique_ptr.2425"** %185, align 8
  %187 = getelementptr inbounds %"class.std::__1::vector.2423", %"class.std::__1::vector.2423"* %148, i64 0, i32 0, i32 2, i32 0, i32 0
  %188 = load %"class.std::__1::unique_ptr.2425"*, %"class.std::__1::unique_ptr.2425"** %187, align 8
  %189 = icmp ult %"class.std::__1::unique_ptr.2425"* %186, %188
  br i1 %189, label %190, label %196

190:                                              ; preds = %128
  %191 = ptrtoint i8* %167 to i64
  store %"class.std::__1::vector.2428"* null, %"class.std::__1::vector.2428"** %183, align 8
  %192 = bitcast %"class.std::__1::unique_ptr.2425"* %186 to i64*
  store i64 %191, i64* %192, align 8
  %193 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %186, i64 1
  %194 = ptrtoint %"class.std::__1::unique_ptr.2425"* %193 to i64
  %195 = bitcast %"class.std::__1::unique_ptr.2425"** %185 to i64*
  store i64 %194, i64* %195, align 8
  br label %197

196:                                              ; preds = %128
  call void @_ZNSt3__16vectorINS_10unique_ptrINS0_IdNS_9allocatorIdEEEENS_14default_deleteIS4_EEEENS2_IS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.2423"* %148, %"class.std::__1::unique_ptr.2425"* nonnull dereferenceable(8) %9) #19
  br label %197

197:                                              ; preds = %190, %196
  %198 = load %"class.std::__1::vector.2428"*, %"class.std::__1::vector.2428"** %183, align 8
  store %"class.std::__1::vector.2428"* null, %"class.std::__1::vector.2428"** %183, align 8
  %199 = icmp eq %"class.std::__1::vector.2428"* %198, null
  br i1 %199, label %211, label %200

200:                                              ; preds = %197
  %201 = getelementptr inbounds %"class.std::__1::vector.2428", %"class.std::__1::vector.2428"* %198, i64 0, i32 0, i32 0
  %202 = load double*, double** %201, align 8
  %203 = icmp eq double* %202, null
  br i1 %203, label %209, label %204

204:                                              ; preds = %200
  %205 = ptrtoint double* %202 to i64
  %206 = getelementptr inbounds %"class.std::__1::vector.2428", %"class.std::__1::vector.2428"* %198, i64 0, i32 0, i32 1
  %207 = bitcast double** %206 to i64*
  store i64 %205, i64* %207, align 8
  %208 = bitcast double* %202 to i8*
  call void @_ZdlPv(i8* %208) #18
  br label %209

209:                                              ; preds = %204, %200
  %210 = bitcast %"class.std::__1::vector.2428"* %198 to i8*
  call void @_ZdlPv(i8* %210) #18
  br label %211

211:                                              ; preds = %197, %209
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %133) #19
  br label %335

212:                                              ; preds = %118, %330
  %213 = phi i64 [ 0, %118 ], [ %331, %330 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #19
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %120, align 8
  %214 = trunc i64 %213 to i32
  %215 = call %"class.WTF::StringImpl"* @_ZNK5blink27CSSComputedStyleDeclaration4itemEj(%"class.blink::CSSComputedStyleDeclaration"* %93, i32 %214) #19
  %216 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %216, label %240, label %217

217:                                              ; preds = %212
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load atomic i32, i32* %218 acquire, align 4
  %220 = and i32 %219, 4
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %238, label %222

222:                                              ; preds = %217
  %223 = load atomic i32, i32* %218 monotonic, align 4
  %224 = and i32 %223, 2
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %241

226:                                              ; preds = %222
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %228 = load i32, i32* %227, align 4
  %229 = zext i32 %228 to i33
  %230 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %229, i33 1) #19
  %231 = extractvalue { i33, i1 } %230, 1
  %232 = extractvalue { i33, i1 } %230, 0
  %233 = icmp slt i33 %232, 0
  %234 = or i1 %231, %233
  br i1 %234, label %235, label %236, !prof !2

235:                                              ; preds = %226
  call void @llvm.trap() #19
  unreachable

236:                                              ; preds = %226
  %237 = trunc i33 %232 to i32
  store i32 %237, i32* %227, align 4
  br label %241

238:                                              ; preds = %217
  %239 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %215) #19
  br label %241

240:                                              ; preds = %212
  store i64 0, i64* %121, align 8
  br label %255

241:                                              ; preds = %222, %236, %238
  %242 = phi %"class.WTF::StringImpl"* [ %215, %236 ], [ %215, %222 ], [ %239, %238 ]
  %243 = ptrtoint %"class.WTF::StringImpl"* %242 to i64
  store i64 %243, i64* %121, align 8
  %244 = load atomic i32, i32* %218 monotonic, align 4
  %245 = and i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %248 = load i32, i32* %247, align 4
  br i1 %246, label %249, label %251

249:                                              ; preds = %241
  %250 = add i32 %248, -1
  store i32 %250, i32* %247, align 4
  br label %251

251:                                              ; preds = %249, %241
  %252 = phi i32 [ %250, %249 ], [ %248, %241 ]
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %255

254:                                              ; preds = %251
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %215) #19
  br label %255

255:                                              ; preds = %240, %251, %254
  %256 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %122, align 8
  %257 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %256, i64 10
  %258 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %257, align 8
  %259 = call %"class.blink::ExecutionContext"* %258(%"class.blink::Node"* %1) #19
  %260 = call i32 @_ZN5blink13CssPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"* %259, %"class.WTF::String"* nonnull dereferenceable(8) %123) #19
  %261 = call %"class.blink::CSSValue"* @_ZNK5blink27CSSComputedStyleDeclaration19GetPropertyCSSValueENS_13CSSPropertyIDE(%"class.blink::CSSComputedStyleDeclaration"* %93, i32 %260) #19
  %262 = icmp eq %"class.blink::CSSValue"* %261, null
  br i1 %262, label %314, label %263

263:                                              ; preds = %255
  %264 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %261, i64 0, i32 2
  %265 = load i8, i8* %264, align 1
  %266 = icmp eq i8 %265, 3
  br i1 %266, label %267, label %294

267:                                              ; preds = %263
  %268 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %261, i64 1, i32 1
  %269 = bitcast i8* %268 to i32*
  %270 = load i32, i32* %269, align 4
  %271 = load %"class.blink::protocol::DictionaryValue"*, %"class.blink::protocol::DictionaryValue"** %60, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #19
  %272 = lshr i32 %270, 16
  %273 = and i32 %272, 255
  %274 = lshr i32 %270, 8
  %275 = and i32 %274, 255
  %276 = and i32 %270, 255
  %277 = lshr i32 %270, 24
  %278 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.77, i64 0, i64 0), i32 %273, i32 %275, i32 %276, i32 %277) #19
  store %"class.WTF::StringImpl"* %278, %"class.WTF::StringImpl"** %127, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* %271, %"class.WTF::String"* nonnull dereferenceable(8) %123, %"class.WTF::String"* nonnull dereferenceable(8) %5) #19
  %279 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %280 = icmp eq %"class.WTF::StringImpl"* %279, null
  br i1 %280, label %312, label %281

281:                                              ; preds = %267
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %279, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %283 = load atomic i32, i32* %282 monotonic, align 4
  %284 = and i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %279, i64 0, i32 0
  %287 = load i32, i32* %286, align 4
  br i1 %285, label %288, label %290

288:                                              ; preds = %281
  %289 = add i32 %287, -1
  store i32 %289, i32* %286, align 4
  br label %290

290:                                              ; preds = %288, %281
  %291 = phi i32 [ %289, %288 ], [ %287, %281 ]
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %312

293:                                              ; preds = %290
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %279) #19
  br label %312

294:                                              ; preds = %263
  %295 = load %"class.blink::protocol::DictionaryValue"*, %"class.blink::protocol::DictionaryValue"** %60, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #19
  %296 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %261) #19
  store %"class.WTF::StringImpl"* %296, %"class.WTF::StringImpl"** %125, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* %295, %"class.WTF::String"* nonnull dereferenceable(8) %123, %"class.WTF::String"* nonnull dereferenceable(8) %6) #19
  %297 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %298 = icmp eq %"class.WTF::StringImpl"* %297, null
  br i1 %298, label %312, label %299

299:                                              ; preds = %294
  %300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %297, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %301 = load atomic i32, i32* %300 monotonic, align 4
  %302 = and i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %297, i64 0, i32 0
  %305 = load i32, i32* %304, align 4
  br i1 %303, label %306, label %308

306:                                              ; preds = %299
  %307 = add i32 %305, -1
  store i32 %307, i32* %304, align 4
  br label %308

308:                                              ; preds = %306, %299
  %309 = phi i32 [ %307, %306 ], [ %305, %299 ]
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %312

311:                                              ; preds = %308
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %297) #19
  br label %312

312:                                              ; preds = %311, %308, %294, %293, %290, %267
  %313 = phi i8* [ %126, %267 ], [ %126, %290 ], [ %126, %293 ], [ %124, %294 ], [ %124, %308 ], [ %124, %311 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %313) #19
  br label %314

314:                                              ; preds = %312, %255
  %315 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %316 = icmp eq %"class.WTF::StringImpl"* %315, null
  br i1 %316, label %330, label %317

317:                                              ; preds = %314
  %318 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %315, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %319 = load atomic i32, i32* %318 monotonic, align 4
  %320 = and i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %315, i64 0, i32 0
  %323 = load i32, i32* %322, align 4
  br i1 %321, label %324, label %326

324:                                              ; preds = %317
  %325 = add i32 %323, -1
  store i32 %325, i32* %322, align 4
  br label %326

326:                                              ; preds = %324, %317
  %327 = phi i32 [ %325, %324 ], [ %323, %317 ]
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %329, label %330

329:                                              ; preds = %326
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %315) #19
  br label %330

330:                                              ; preds = %314, %326, %329
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #19
  %331 = add nuw nsw i64 %213, 1
  %332 = call i32 @_ZNK5blink27CSSComputedStyleDeclaration6lengthEv(%"class.blink::CSSComputedStyleDeclaration"* %93) #19
  %333 = zext i32 %332 to i64
  %334 = icmp ult i64 %331, %333
  br i1 %334, label %212, label %128

335:                                              ; preds = %211, %85, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorHighlightD2Ev(%"class.blink::InspectorHighlight"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink18InspectorHighlightE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %4 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %3, align 8
  store %"class.blink::protocol::ListValue"* null, %"class.blink::protocol::ListValue"** %3, align 8
  %5 = icmp eq %"class.blink::protocol::ListValue"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::protocol::ListValue"* %4 to void (%"class.blink::protocol::ListValue"*)***
  %8 = load void (%"class.blink::protocol::ListValue"*)**, void (%"class.blink::protocol::ListValue"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %8, i64 2
  %10 = load void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %9, align 8
  tail call void %10(%"class.blink::protocol::ListValue"* nonnull %4) #19
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %13 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %12, align 8
  store %"class.blink::protocol::ListValue"* null, %"class.blink::protocol::ListValue"** %12, align 8
  %14 = icmp eq %"class.blink::protocol::ListValue"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.blink::protocol::ListValue"* %13 to void (%"class.blink::protocol::ListValue"*)***
  %17 = load void (%"class.blink::protocol::ListValue"*)**, void (%"class.blink::protocol::ListValue"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %17, i64 2
  %19 = load void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %18, align 8
  tail call void %19(%"class.blink::protocol::ListValue"* nonnull %13) #19
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %22 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %21, align 8
  store %"class.blink::protocol::ListValue"* null, %"class.blink::protocol::ListValue"** %21, align 8
  %23 = icmp eq %"class.blink::protocol::ListValue"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::protocol::ListValue"* %22 to void (%"class.blink::protocol::ListValue"*)***
  %26 = load void (%"class.blink::protocol::ListValue"*)**, void (%"class.blink::protocol::ListValue"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %26, i64 2
  %28 = load void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %27, align 8
  tail call void %28(%"class.blink::protocol::ListValue"* nonnull %22) #19
  br label %29

29:                                               ; preds = %20, %24
  %30 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::protocol::DictionaryValue"*, %"class.blink::protocol::DictionaryValue"** %30, align 8
  store %"class.blink::protocol::DictionaryValue"* null, %"class.blink::protocol::DictionaryValue"** %30, align 8
  %32 = icmp eq %"class.blink::protocol::DictionaryValue"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = bitcast %"class.blink::protocol::DictionaryValue"* %31 to void (%"class.blink::protocol::DictionaryValue"*)***
  %35 = load void (%"class.blink::protocol::DictionaryValue"*)**, void (%"class.blink::protocol::DictionaryValue"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %35, i64 2
  %37 = load void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %36, align 8
  tail call void %37(%"class.blink::protocol::DictionaryValue"* nonnull %31) #19
  br label %38

38:                                               ; preds = %29, %33
  %39 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %40 = load %"class.blink::protocol::DictionaryValue"*, %"class.blink::protocol::DictionaryValue"** %39, align 8
  store %"class.blink::protocol::DictionaryValue"* null, %"class.blink::protocol::DictionaryValue"** %39, align 8
  %41 = icmp eq %"class.blink::protocol::DictionaryValue"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.blink::protocol::DictionaryValue"* %40 to void (%"class.blink::protocol::DictionaryValue"*)***
  %44 = load void (%"class.blink::protocol::DictionaryValue"*)**, void (%"class.blink::protocol::DictionaryValue"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %44, i64 2
  %46 = load void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %45, align 8
  tail call void %46(%"class.blink::protocol::DictionaryValue"* nonnull %40) #19
  br label %47

47:                                               ; preds = %38, %42
  %48 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %49 = load %"class.blink::protocol::DOM::BoxModel"*, %"class.blink::protocol::DOM::BoxModel"** %48, align 8
  store %"class.blink::protocol::DOM::BoxModel"* null, %"class.blink::protocol::DOM::BoxModel"** %48, align 8
  %50 = icmp eq %"class.blink::protocol::DOM::BoxModel"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"class.blink::protocol::DOM::BoxModel"* %49 to void (%"class.blink::protocol::DOM::BoxModel"*)***
  %53 = load void (%"class.blink::protocol::DOM::BoxModel"*)**, void (%"class.blink::protocol::DOM::BoxModel"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.blink::protocol::DOM::BoxModel"*)*, void (%"class.blink::protocol::DOM::BoxModel"*)** %53, i64 2
  %55 = load void (%"class.blink::protocol::DOM::BoxModel"*)*, void (%"class.blink::protocol::DOM::BoxModel"*)** %54, align 8
  tail call void %55(%"class.blink::protocol::DOM::BoxModel"* nonnull %49) #19
  br label %56

56:                                               ; preds = %47, %51
  %57 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %58 = load %"class.blink::protocol::DictionaryValue"*, %"class.blink::protocol::DictionaryValue"** %57, align 8
  store %"class.blink::protocol::DictionaryValue"* null, %"class.blink::protocol::DictionaryValue"** %57, align 8
  %59 = icmp eq %"class.blink::protocol::DictionaryValue"* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = bitcast %"class.blink::protocol::DictionaryValue"* %58 to void (%"class.blink::protocol::DictionaryValue"*)***
  %62 = load void (%"class.blink::protocol::DictionaryValue"*)**, void (%"class.blink::protocol::DictionaryValue"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %62, i64 2
  %64 = load void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %63, align 8
  tail call void %64(%"class.blink::protocol::DictionaryValue"* nonnull %58) #19
  br label %65

65:                                               ; preds = %56, %60
  %66 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %67 = load %"class.std::__1::vector.2423"*, %"class.std::__1::vector.2423"** %66, align 8
  store %"class.std::__1::vector.2423"* null, %"class.std::__1::vector.2423"** %66, align 8
  %68 = icmp eq %"class.std::__1::vector.2423"* %67, null
  br i1 %68, label %104, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.std::__1::vector.2423", %"class.std::__1::vector.2423"* %67, i64 0, i32 0, i32 0
  %71 = load %"class.std::__1::unique_ptr.2425"*, %"class.std::__1::unique_ptr.2425"** %70, align 8
  %72 = icmp eq %"class.std::__1::unique_ptr.2425"* %71, null
  br i1 %72, label %102, label %73

73:                                               ; preds = %69
  %74 = bitcast %"class.std::__1::unique_ptr.2425"* %71 to i8*
  %75 = getelementptr inbounds %"class.std::__1::vector.2423", %"class.std::__1::vector.2423"* %67, i64 0, i32 0, i32 1
  %76 = load %"class.std::__1::unique_ptr.2425"*, %"class.std::__1::unique_ptr.2425"** %75, align 8
  %77 = icmp eq %"class.std::__1::unique_ptr.2425"* %76, %71
  br i1 %77, label %100, label %78

78:                                               ; preds = %73, %95
  %79 = phi %"class.std::__1::unique_ptr.2425"* [ %80, %95 ], [ %76, %73 ]
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %79, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = load %"class.std::__1::vector.2428"*, %"class.std::__1::vector.2428"** %81, align 8
  store %"class.std::__1::vector.2428"* null, %"class.std::__1::vector.2428"** %81, align 8
  %83 = icmp eq %"class.std::__1::vector.2428"* %82, null
  br i1 %83, label %95, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.std::__1::vector.2428", %"class.std::__1::vector.2428"* %82, i64 0, i32 0, i32 0
  %86 = load double*, double** %85, align 8
  %87 = icmp eq double* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %84
  %89 = ptrtoint double* %86 to i64
  %90 = getelementptr inbounds %"class.std::__1::vector.2428", %"class.std::__1::vector.2428"* %82, i64 0, i32 0, i32 1
  %91 = bitcast double** %90 to i64*
  store i64 %89, i64* %91, align 8
  %92 = bitcast double* %86 to i8*
  tail call void @_ZdlPv(i8* %92) #18
  br label %93

93:                                               ; preds = %88, %84
  %94 = bitcast %"class.std::__1::vector.2428"* %82 to i8*
  tail call void @_ZdlPv(i8* %94) #18
  br label %95

95:                                               ; preds = %93, %78
  %96 = icmp eq %"class.std::__1::unique_ptr.2425"* %80, %71
  br i1 %96, label %97, label %78

97:                                               ; preds = %95
  %98 = bitcast %"class.std::__1::vector.2423"* %67 to i8**
  %99 = load i8*, i8** %98, align 8
  br label %100

100:                                              ; preds = %97, %73
  %101 = phi i8* [ %99, %97 ], [ %74, %73 ]
  store %"class.std::__1::unique_ptr.2425"* %71, %"class.std::__1::unique_ptr.2425"** %75, align 8
  tail call void @_ZdlPv(i8* %101) #18
  br label %102

102:                                              ; preds = %100, %69
  %103 = bitcast %"class.std::__1::vector.2423"* %67 to i8*
  tail call void @_ZdlPv(i8* %103) #18
  br label %104

104:                                              ; preds = %65, %102
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink22InspectorHighlightBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %105 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %106 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %105, align 8
  store %"class.blink::protocol::ListValue"* null, %"class.blink::protocol::ListValue"** %105, align 8
  %107 = icmp eq %"class.blink::protocol::ListValue"* %106, null
  br i1 %107, label %113, label %108

108:                                              ; preds = %104
  %109 = bitcast %"class.blink::protocol::ListValue"* %106 to void (%"class.blink::protocol::ListValue"*)***
  %110 = load void (%"class.blink::protocol::ListValue"*)**, void (%"class.blink::protocol::ListValue"*)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %110, i64 2
  %112 = load void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %111, align 8
  tail call void %112(%"class.blink::protocol::ListValue"* nonnull %106) #19
  br label %113

113:                                              ; preds = %104, %108
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink18InspectorHighlight11GetBoxModelEPNS_4NodeEPNSt3__110unique_ptrINS_8protocol3DOM8BoxModelENS3_14default_deleteIS7_EEEEb(%"class.blink::Node"*, %"class.std::__1::unique_ptr.2477"* nocapture, i1 zeroext) local_unnamed_addr #4 align 2 {
  %4 = alloca %"class.blink::Path", align 8
  %5 = alloca %"class.blink::AffineTransform", align 8
  %6 = alloca %"class.blink::Path", align 8
  %7 = alloca %"class.blink::AffineTransform", align 8
  %8 = alloca %"class.blink::(anonymous namespace)::ShapePathBuilder", align 8
  %9 = alloca %"class.blink::(anonymous namespace)::ShapePathBuilder", align 8
  %10 = alloca %"class.blink::FloatQuad", align 16
  %11 = alloca %"class.blink::FloatQuad", align 16
  %12 = alloca %"class.blink::FloatQuad", align 16
  %13 = alloca %"class.blink::FloatQuad", align 16
  %14 = alloca %"class.WTF::Vector.2542", align 8
  %15 = alloca { i64, i64 }, align 8
  %16 = bitcast { i64, i64 }* %15 to %"class.blink::IntRect"*
  %17 = alloca %"struct.blink::Shape::DisplayPaths", align 8
  %18 = alloca %"class.blink::FloatQuad", align 8
  %19 = alloca %"class.crdtp::ErrorSupport", align 8
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %21 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %21, i64 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::Document"*, %"class.blink::Document"** %22, align 8
  tail call void @_ZN5blink8Document35EnsurePaintLocationDataValidForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"* %23, %"class.blink::Node"* %0, i32 13) #19
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %27, label %33, label %29

29:                                               ; preds = %3
  %30 = bitcast %"class.blink::NodeData"** %28 to %"class.blink::NodeRareData"**
  %31 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %31, i64 0, i32 1, i32 0, i32 0
  br label %35

33:                                               ; preds = %3
  %34 = bitcast %"class.blink::NodeData"** %28 to %"class.blink::NodeRenderingData"**
  br label %35

35:                                               ; preds = %29, %33
  %36 = phi %"class.blink::NodeRenderingData"** [ %32, %29 ], [ %34, %33 ]
  %37 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %37, i64 0, i32 1
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  %40 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %20, align 8
  %41 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %40, i64 0, i32 2, i32 0, i32 0
  %42 = load %"class.blink::Document"*, %"class.blink::Document"** %41, align 8
  %43 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %42) #19
  %44 = icmp ne %"class.blink::LayoutObject"* %39, null
  %45 = icmp ne %"class.blink::LocalFrameView"* %43, null
  %46 = and i1 %44, %45
  br i1 %46, label %47, label %594

47:                                               ; preds = %35
  %48 = bitcast %"class.blink::FloatQuad"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %48) #19
  %49 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %10, i64 0, i32 2, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %48, i8 0, i64 32, i1 false) #19
  %50 = bitcast %"class.blink::FloatQuad"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %50) #19
  %51 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %11, i64 0, i32 2, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %50, i8 0, i64 32, i1 false) #19
  %52 = bitcast %"class.blink::FloatQuad"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %52) #19
  %53 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %12, i64 0, i32 2, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %52, i8 0, i64 32, i1 false) #19
  %54 = bitcast %"class.blink::FloatQuad"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %54) #19
  %55 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %13, i64 0, i32 2, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %54, i8 0, i64 32, i1 false) #19
  %56 = bitcast %"class.WTF::Vector.2542"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #19
  %57 = getelementptr inbounds %"class.WTF::Vector.2542", %"class.WTF::Vector.2542"* %14, i64 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.WTF::Vector.2542", %"class.WTF::Vector.2542"* %14, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 0, i64 16, i1 false) #19
  %59 = load i32, i32* %24, align 8
  %60 = and i32 %59, 1
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %47
  %63 = bitcast %"class.blink::NodeData"** %28 to %"class.blink::NodeRareData"**
  %64 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %64, i64 0, i32 1, i32 0, i32 0
  br label %68

66:                                               ; preds = %47
  %67 = bitcast %"class.blink::NodeData"** %28 to %"class.blink::NodeRenderingData"**
  br label %68

68:                                               ; preds = %66, %62
  %69 = phi %"class.blink::NodeRenderingData"** [ %65, %62 ], [ %67, %66 ]
  %70 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %70, i64 0, i32 1
  %72 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %71, align 8
  %73 = icmp eq %"class.blink::LayoutObject"* %72, null
  br i1 %73, label %107, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %72, i64 0, i32 4
  %76 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %75 to i96*
  %77 = load i96, i96* %76, align 4
  %78 = and i96 %77, 16777216
  %79 = icmp eq i96 %78, 0
  br i1 %79, label %80, label %107

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %72, i64 0, i32 6, i32 0, i32 0
  %82 = load %"class.blink::Node"*, %"class.blink::Node"** %81, align 8
  %83 = icmp eq %"class.blink::Node"* %82, null
  br i1 %83, label %107, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %82, i64 0, i32 1
  %86 = load i32, i32* %85, align 8
  %87 = and i32 %86, 48
  %88 = icmp eq i32 %87, 32
  br i1 %88, label %89, label %107

89:                                               ; preds = %84
  %90 = bitcast %"class.blink::LayoutObject"* %72 to i1 (%"class.blink::LayoutObject"*, i32)***
  %91 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %90, align 8
  %92 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %91, i64 92
  %93 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %92, align 8
  %94 = tail call zeroext i1 %93(%"class.blink::LayoutObject"* nonnull %72, i32 67) #19
  br i1 %94, label %107, label %95

95:                                               ; preds = %89
  call fastcc void @_ZN5blink12_GLOBAL__N_112CollectQuadsEPNS_4NodeERN3WTF6VectorINS_9FloatQuadELj0ENS3_18PartitionAllocatorEEE(%"class.blink::Node"* %0, %"class.WTF::Vector.2542"* nonnull dereferenceable(16) %14) #19
  %96 = load i32, i32* %58, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %583, label %98

98:                                               ; preds = %95
  %99 = call dereferenceable(32) %"class.blink::FloatQuad"* @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2542"* nonnull %14, i32 0) #19
  %100 = bitcast %"class.blink::FloatQuad"* %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %48, i8* align 4 %100, i64 32, i1 false)
  %101 = call dereferenceable(32) %"class.blink::FloatQuad"* @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2542"* nonnull %14, i32 0) #19
  %102 = bitcast %"class.blink::FloatQuad"* %101 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %50, i8* align 4 %102, i64 32, i1 false)
  %103 = call dereferenceable(32) %"class.blink::FloatQuad"* @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2542"* nonnull %14, i32 0) #19
  %104 = bitcast %"class.blink::FloatQuad"* %103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %52, i8* align 4 %104, i64 32, i1 false)
  %105 = call dereferenceable(32) %"class.blink::FloatQuad"* @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2542"* nonnull %14, i32 0) #19
  %106 = bitcast %"class.blink::FloatQuad"* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %54, i8* align 4 %106, i64 32, i1 false)
  br label %109

107:                                              ; preds = %68, %80, %89, %84, %74
  %108 = call zeroext i1 @_ZN5blink22InspectorHighlightBase14BuildNodeQuadsEPNS_4NodeEPNS_9FloatQuadES4_S4_S4_(%"class.blink::Node"* %0, %"class.blink::FloatQuad"* nonnull %10, %"class.blink::FloatQuad"* nonnull %11, %"class.blink::FloatQuad"* nonnull %12, %"class.blink::FloatQuad"* nonnull %13)
  br i1 %108, label %109, label %583

109:                                              ; preds = %107, %98
  br i1 %2, label %110, label %166

110:                                              ; preds = %109
  %111 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %39, i64 0, i32 5, i32 0
  %112 = bitcast %"class.blink::ComputedStyle"** %111 to %"class.blink::ComputedStyleBase"**
  %113 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %113, i64 0, i32 1, i32 0, i32 0
  %115 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %115, i64 0, i32 2, i32 0, i32 0
  %117 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %117, i64 0, i32 6
  %119 = load float, float* %118, align 8
  %120 = fcmp une float %119, 1.000000e+00
  br i1 %120, label %121, label %166

121:                                              ; preds = %110
  %122 = fdiv float 1.000000e+00, %119
  %123 = bitcast %"class.blink::FloatQuad"* %10 to <4 x float>*
  %124 = load <4 x float>, <4 x float>* %123, align 16
  %125 = insertelement <4 x float> undef, float %122, i32 0
  %126 = shufflevector <4 x float> %125, <4 x float> undef, <4 x i32> zeroinitializer
  %127 = fmul <4 x float> %126, %124
  %128 = bitcast %"class.blink::FloatQuad"* %10 to <4 x float>*
  store <4 x float> %127, <4 x float>* %128, align 16
  %129 = bitcast float* %49 to <4 x float>*
  %130 = load <4 x float>, <4 x float>* %129, align 16
  %131 = fmul <4 x float> %126, %130
  %132 = bitcast float* %49 to <4 x float>*
  store <4 x float> %131, <4 x float>* %132, align 16
  %133 = fdiv float 1.000000e+00, %119
  %134 = bitcast %"class.blink::FloatQuad"* %11 to <4 x float>*
  %135 = load <4 x float>, <4 x float>* %134, align 16
  %136 = insertelement <4 x float> undef, float %133, i32 0
  %137 = shufflevector <4 x float> %136, <4 x float> undef, <4 x i32> zeroinitializer
  %138 = fmul <4 x float> %137, %135
  %139 = bitcast %"class.blink::FloatQuad"* %11 to <4 x float>*
  store <4 x float> %138, <4 x float>* %139, align 16
  %140 = bitcast float* %51 to <4 x float>*
  %141 = load <4 x float>, <4 x float>* %140, align 16
  %142 = fmul <4 x float> %137, %141
  %143 = bitcast float* %51 to <4 x float>*
  store <4 x float> %142, <4 x float>* %143, align 16
  %144 = fdiv float 1.000000e+00, %119
  %145 = bitcast %"class.blink::FloatQuad"* %12 to <4 x float>*
  %146 = load <4 x float>, <4 x float>* %145, align 16
  %147 = insertelement <4 x float> undef, float %144, i32 0
  %148 = shufflevector <4 x float> %147, <4 x float> undef, <4 x i32> zeroinitializer
  %149 = fmul <4 x float> %148, %146
  %150 = bitcast %"class.blink::FloatQuad"* %12 to <4 x float>*
  store <4 x float> %149, <4 x float>* %150, align 16
  %151 = bitcast float* %53 to <4 x float>*
  %152 = load <4 x float>, <4 x float>* %151, align 16
  %153 = fmul <4 x float> %148, %152
  %154 = bitcast float* %53 to <4 x float>*
  store <4 x float> %153, <4 x float>* %154, align 16
  %155 = fdiv float 1.000000e+00, %119
  %156 = bitcast %"class.blink::FloatQuad"* %13 to <4 x float>*
  %157 = load <4 x float>, <4 x float>* %156, align 16
  %158 = insertelement <4 x float> undef, float %155, i32 0
  %159 = shufflevector <4 x float> %158, <4 x float> undef, <4 x i32> zeroinitializer
  %160 = fmul <4 x float> %159, %157
  %161 = bitcast %"class.blink::FloatQuad"* %13 to <4 x float>*
  store <4 x float> %160, <4 x float>* %161, align 16
  %162 = bitcast float* %55 to <4 x float>*
  %163 = load <4 x float>, <4 x float>* %162, align 16
  %164 = fmul <4 x float> %159, %163
  %165 = bitcast float* %55 to <4 x float>*
  store <4 x float> %164, <4 x float>* %165, align 16
  br label %166

166:                                              ; preds = %110, %121, %109
  %167 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* nonnull %43) #19
  %168 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %167) #19
  %169 = getelementptr inbounds %"class.blink::VisualViewport", %"class.blink::VisualViewport"* %168, i64 0, i32 14
  %170 = load float, float* %169, align 8
  %171 = fdiv float 1.000000e+00, %170
  %172 = bitcast %"class.blink::FloatQuad"* %10 to <4 x float>*
  %173 = load <4 x float>, <4 x float>* %172, align 16
  %174 = insertelement <4 x float> undef, float %171, i32 0
  %175 = shufflevector <4 x float> %174, <4 x float> undef, <4 x i32> zeroinitializer
  %176 = fmul <4 x float> %173, %175
  %177 = bitcast %"class.blink::FloatQuad"* %10 to <4 x float>*
  store <4 x float> %176, <4 x float>* %177, align 16
  %178 = bitcast float* %49 to <4 x float>*
  %179 = load <4 x float>, <4 x float>* %178, align 16
  %180 = fmul <4 x float> %175, %179
  %181 = bitcast float* %49 to <4 x float>*
  store <4 x float> %180, <4 x float>* %181, align 16
  %182 = bitcast %"class.blink::FloatQuad"* %11 to <4 x float>*
  %183 = load <4 x float>, <4 x float>* %182, align 16
  %184 = fmul <4 x float> %175, %183
  %185 = bitcast %"class.blink::FloatQuad"* %11 to <4 x float>*
  store <4 x float> %184, <4 x float>* %185, align 16
  %186 = bitcast float* %51 to <4 x float>*
  %187 = load <4 x float>, <4 x float>* %186, align 16
  %188 = fmul <4 x float> %175, %187
  %189 = bitcast float* %51 to <4 x float>*
  store <4 x float> %188, <4 x float>* %189, align 16
  %190 = bitcast %"class.blink::FloatQuad"* %12 to <4 x float>*
  %191 = load <4 x float>, <4 x float>* %190, align 16
  %192 = fmul <4 x float> %175, %191
  %193 = bitcast %"class.blink::FloatQuad"* %12 to <4 x float>*
  store <4 x float> %192, <4 x float>* %193, align 16
  %194 = bitcast float* %53 to <4 x float>*
  %195 = load <4 x float>, <4 x float>* %194, align 16
  %196 = fmul <4 x float> %175, %195
  %197 = bitcast float* %53 to <4 x float>*
  store <4 x float> %196, <4 x float>* %197, align 16
  %198 = bitcast %"class.blink::FloatQuad"* %13 to <4 x float>*
  %199 = load <4 x float>, <4 x float>* %198, align 16
  %200 = fmul <4 x float> %175, %199
  %201 = bitcast %"class.blink::FloatQuad"* %13 to <4 x float>*
  store <4 x float> %200, <4 x float>* %201, align 16
  %202 = bitcast float* %55 to <4 x float>*
  %203 = load <4 x float>, <4 x float>* %202, align 16
  %204 = fmul <4 x float> %175, %203
  %205 = bitcast float* %55 to <4 x float>*
  store <4 x float> %204, <4 x float>* %205, align 16
  %206 = bitcast { i64, i64 }* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %206) #19
  %207 = call { i64, i64 } @_ZNK5blink12LayoutObject23AbsoluteBoundingBoxRectEj(%"class.blink::LayoutObject"* nonnull %39, i32 0) #19
  %208 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 0
  %209 = extractvalue { i64, i64 } %207, 0
  store i64 %209, i64* %208, align 8
  %210 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 1
  %211 = extractvalue { i64, i64 } %207, 1
  store i64 %211, i64* %210, align 8
  %212 = call { i64, i64 } @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_7IntRectE(%"class.blink::LocalFrameView"* nonnull %43, %"class.blink::IntRect"* nonnull dereferenceable(16) %16) #19
  %213 = extractvalue { i64, i64 } %212, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %206) #19
  %214 = bitcast %"class.blink::LayoutObject"* %39 to i1 (%"class.blink::LayoutObject"*)***
  %215 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %214, align 8
  %216 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %215, i64 20
  %217 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %216, align 8
  %218 = call zeroext i1 %217(%"class.blink::LayoutObject"* nonnull %39) #19
  %219 = bitcast %"class.blink::LayoutObject"* %39 to %"class.blink::LayoutBoxModelObject"*
  %220 = select i1 %218, %"class.blink::LayoutBoxModelObject"* %219, %"class.blink::LayoutBoxModelObject"* null
  %221 = call i8* @_Znwm(i64 56) #18
  %222 = bitcast i8* %221 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3DOM8BoxModelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %222, align 8
  %223 = getelementptr inbounds i8, i8* %221, i64 8
  %224 = getelementptr inbounds i8, i8* %221, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %224, i8 0, i64 40, i1 false) #19
  %225 = bitcast %"class.blink::FloatQuad"* %10 to <2 x float>*
  %226 = load <2 x float>, <2 x float>* %225, align 16
  %227 = fpext <2 x float> %226 to <2 x double>
  %228 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %10, i64 0, i32 1
  %229 = bitcast %"class.blink::FloatPoint"* %228 to <2 x float>*
  %230 = load <2 x float>, <2 x float>* %229, align 8
  %231 = fpext <2 x float> %230 to <2 x double>
  %232 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %10, i64 0, i32 2
  %233 = bitcast %"class.blink::FloatPoint"* %232 to <2 x float>*
  %234 = load <2 x float>, <2 x float>* %233, align 16
  %235 = fpext <2 x float> %234 to <2 x double>
  %236 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %10, i64 0, i32 3
  %237 = bitcast %"class.blink::FloatPoint"* %236 to <2 x float>*
  %238 = load <2 x float>, <2 x float>* %237, align 8
  %239 = fpext <2 x float> %238 to <2 x double>
  %240 = call i8* @_Znwm(i64 24) #18
  %241 = call i8* @_Znwm(i64 64) #18
  %242 = getelementptr inbounds i8, i8* %240, i64 8
  %243 = bitcast i8* %240 to i8**
  store i8* %241, i8** %243, align 8
  %244 = getelementptr inbounds i8, i8* %241, i64 64
  %245 = getelementptr inbounds i8, i8* %240, i64 16
  %246 = bitcast i8* %245 to i8**
  store i8* %244, i8** %246, align 8
  %247 = bitcast i8* %242 to i64*
  %248 = bitcast i8* %241 to <2 x double>*
  store <2 x double> %227, <2 x double>* %248, align 8
  %249 = getelementptr inbounds i8, i8* %241, i64 16
  %250 = bitcast i8* %249 to <2 x double>*
  store <2 x double> %231, <2 x double>* %250, align 8
  %251 = getelementptr inbounds i8, i8* %241, i64 32
  %252 = bitcast i8* %251 to <2 x double>*
  store <2 x double> %235, <2 x double>* %252, align 8
  %253 = getelementptr inbounds i8, i8* %241, i64 48
  %254 = bitcast i8* %253 to <2 x double>*
  store <2 x double> %239, <2 x double>* %254, align 8
  %255 = ptrtoint i8* %244 to i64
  store i64 %255, i64* %247, align 8
  %256 = ptrtoint i8* %240 to i64
  %257 = bitcast i8* %223 to i64*
  store i64 %256, i64* %257, align 8
  %258 = bitcast %"class.blink::FloatQuad"* %11 to <2 x float>*
  %259 = load <2 x float>, <2 x float>* %258, align 16
  %260 = fpext <2 x float> %259 to <2 x double>
  %261 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %11, i64 0, i32 1
  %262 = bitcast %"class.blink::FloatPoint"* %261 to <2 x float>*
  %263 = load <2 x float>, <2 x float>* %262, align 8
  %264 = fpext <2 x float> %263 to <2 x double>
  %265 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %11, i64 0, i32 2
  %266 = bitcast %"class.blink::FloatPoint"* %265 to <2 x float>*
  %267 = load <2 x float>, <2 x float>* %266, align 16
  %268 = fpext <2 x float> %267 to <2 x double>
  %269 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %11, i64 0, i32 3
  %270 = bitcast %"class.blink::FloatPoint"* %269 to <2 x float>*
  %271 = load <2 x float>, <2 x float>* %270, align 8
  %272 = fpext <2 x float> %271 to <2 x double>
  %273 = call i8* @_Znwm(i64 24) #18
  %274 = call i8* @_Znwm(i64 64) #18
  %275 = getelementptr inbounds i8, i8* %273, i64 8
  %276 = bitcast i8* %273 to i8**
  store i8* %274, i8** %276, align 8
  %277 = getelementptr inbounds i8, i8* %274, i64 64
  %278 = getelementptr inbounds i8, i8* %273, i64 16
  %279 = bitcast i8* %278 to i8**
  store i8* %277, i8** %279, align 8
  %280 = bitcast i8* %275 to i64*
  %281 = bitcast i8* %274 to <2 x double>*
  store <2 x double> %260, <2 x double>* %281, align 8
  %282 = getelementptr inbounds i8, i8* %274, i64 16
  %283 = bitcast i8* %282 to <2 x double>*
  store <2 x double> %264, <2 x double>* %283, align 8
  %284 = getelementptr inbounds i8, i8* %274, i64 32
  %285 = bitcast i8* %284 to <2 x double>*
  store <2 x double> %268, <2 x double>* %285, align 8
  %286 = getelementptr inbounds i8, i8* %274, i64 48
  %287 = bitcast i8* %286 to <2 x double>*
  store <2 x double> %272, <2 x double>* %287, align 8
  %288 = ptrtoint i8* %277 to i64
  store i64 %288, i64* %280, align 8
  %289 = ptrtoint i8* %273 to i64
  %290 = getelementptr inbounds i8, i8* %221, i64 16
  %291 = bitcast i8* %290 to i64*
  store i64 %289, i64* %291, align 8
  %292 = bitcast %"class.blink::FloatQuad"* %12 to <2 x float>*
  %293 = load <2 x float>, <2 x float>* %292, align 16
  %294 = fpext <2 x float> %293 to <2 x double>
  %295 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %12, i64 0, i32 1
  %296 = bitcast %"class.blink::FloatPoint"* %295 to <2 x float>*
  %297 = load <2 x float>, <2 x float>* %296, align 8
  %298 = fpext <2 x float> %297 to <2 x double>
  %299 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %12, i64 0, i32 2
  %300 = bitcast %"class.blink::FloatPoint"* %299 to <2 x float>*
  %301 = load <2 x float>, <2 x float>* %300, align 16
  %302 = fpext <2 x float> %301 to <2 x double>
  %303 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %12, i64 0, i32 3
  %304 = bitcast %"class.blink::FloatPoint"* %303 to <2 x float>*
  %305 = load <2 x float>, <2 x float>* %304, align 8
  %306 = fpext <2 x float> %305 to <2 x double>
  %307 = call i8* @_Znwm(i64 24) #18
  %308 = call i8* @_Znwm(i64 64) #18
  %309 = getelementptr inbounds i8, i8* %307, i64 8
  %310 = bitcast i8* %307 to i8**
  store i8* %308, i8** %310, align 8
  %311 = getelementptr inbounds i8, i8* %308, i64 64
  %312 = getelementptr inbounds i8, i8* %307, i64 16
  %313 = bitcast i8* %312 to i8**
  store i8* %311, i8** %313, align 8
  %314 = bitcast i8* %309 to i64*
  %315 = bitcast i8* %308 to <2 x double>*
  store <2 x double> %294, <2 x double>* %315, align 8
  %316 = getelementptr inbounds i8, i8* %308, i64 16
  %317 = bitcast i8* %316 to <2 x double>*
  store <2 x double> %298, <2 x double>* %317, align 8
  %318 = getelementptr inbounds i8, i8* %308, i64 32
  %319 = bitcast i8* %318 to <2 x double>*
  store <2 x double> %302, <2 x double>* %319, align 8
  %320 = getelementptr inbounds i8, i8* %308, i64 48
  %321 = bitcast i8* %320 to <2 x double>*
  store <2 x double> %306, <2 x double>* %321, align 8
  %322 = ptrtoint i8* %311 to i64
  store i64 %322, i64* %314, align 8
  %323 = ptrtoint i8* %307 to i64
  %324 = getelementptr inbounds i8, i8* %221, i64 24
  %325 = bitcast i8* %324 to i64*
  store i64 %323, i64* %325, align 8
  %326 = bitcast %"class.blink::FloatQuad"* %13 to <2 x float>*
  %327 = load <2 x float>, <2 x float>* %326, align 16
  %328 = fpext <2 x float> %327 to <2 x double>
  %329 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %13, i64 0, i32 1
  %330 = bitcast %"class.blink::FloatPoint"* %329 to <2 x float>*
  %331 = load <2 x float>, <2 x float>* %330, align 8
  %332 = fpext <2 x float> %331 to <2 x double>
  %333 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %13, i64 0, i32 2
  %334 = bitcast %"class.blink::FloatPoint"* %333 to <2 x float>*
  %335 = load <2 x float>, <2 x float>* %334, align 16
  %336 = fpext <2 x float> %335 to <2 x double>
  %337 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %13, i64 0, i32 3
  %338 = bitcast %"class.blink::FloatPoint"* %337 to <2 x float>*
  %339 = load <2 x float>, <2 x float>* %338, align 8
  %340 = fpext <2 x float> %339 to <2 x double>
  %341 = call i8* @_Znwm(i64 24) #18
  %342 = call i8* @_Znwm(i64 64) #18
  %343 = getelementptr inbounds i8, i8* %341, i64 8
  %344 = bitcast i8* %341 to i8**
  store i8* %342, i8** %344, align 8
  %345 = getelementptr inbounds i8, i8* %342, i64 64
  %346 = getelementptr inbounds i8, i8* %341, i64 16
  %347 = bitcast i8* %346 to i8**
  store i8* %345, i8** %347, align 8
  %348 = bitcast i8* %343 to i64*
  %349 = bitcast i8* %342 to <2 x double>*
  store <2 x double> %328, <2 x double>* %349, align 8
  %350 = getelementptr inbounds i8, i8* %342, i64 16
  %351 = bitcast i8* %350 to <2 x double>*
  store <2 x double> %332, <2 x double>* %351, align 8
  %352 = getelementptr inbounds i8, i8* %342, i64 32
  %353 = bitcast i8* %352 to <2 x double>*
  store <2 x double> %336, <2 x double>* %353, align 8
  %354 = getelementptr inbounds i8, i8* %342, i64 48
  %355 = bitcast i8* %354 to <2 x double>*
  store <2 x double> %340, <2 x double>* %355, align 8
  %356 = ptrtoint i8* %345 to i64
  store i64 %356, i64* %348, align 8
  %357 = ptrtoint i8* %341 to i64
  %358 = getelementptr inbounds i8, i8* %221, i64 32
  %359 = bitcast i8* %358 to i64*
  store i64 %357, i64* %359, align 8
  br i1 %218, label %360, label %436

360:                                              ; preds = %166
  %361 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %220, i64 0, i32 0
  %362 = call %"class.blink::Element"* @_ZNK5blink12LayoutObject12OffsetParentEPKNS_7ElementE(%"class.blink::LayoutObject"* %361, %"class.blink::Element"* null) #19
  %363 = bitcast %"class.blink::LayoutBoxModelObject"* %220 to i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)***
  %364 = load i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)**, i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)*** %363, align 8
  %365 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)*, i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)** %364, i64 112
  %366 = load i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)*, i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)** %365, align 8
  %367 = call i32 %366(%"class.blink::LayoutBoxModelObject"* nonnull %220, %"class.blink::Element"* %362) #19
  %368 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %220, i64 0, i32 0, i32 5, i32 0
  %369 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %368, align 8
  %370 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %369, i64 0, i32 0, i32 1, i32 0, i32 0
  %371 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %370, align 8
  %372 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %371, i64 0, i32 2, i32 0, i32 0
  %373 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %372, align 8
  %374 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %373, i64 0, i32 6
  %375 = load float, float* %374, align 8
  %376 = fcmp oeq float %375, 1.000000e+00
  br i1 %376, label %398, label %377

377:                                              ; preds = %360
  %378 = sitofp i32 %367 to float
  %379 = fcmp ogt float %375, 1.000000e+00
  br i1 %379, label %380, label %386

380:                                              ; preds = %377
  %381 = icmp slt i32 %367, 0
  br i1 %381, label %382, label %384

382:                                              ; preds = %380
  %383 = fadd float %378, -5.000000e-01
  br label %386

384:                                              ; preds = %380
  %385 = fadd float %378, 5.000000e-01
  br label %386

386:                                              ; preds = %384, %382, %377
  %387 = phi float [ %383, %382 ], [ %385, %384 ], [ %378, %377 ]
  %388 = fdiv float %387, %375
  %389 = fpext float %388 to double
  %390 = fcmp olt float %388, 0.000000e+00
  %391 = select i1 %390, double -1.000000e-02, double 1.000000e-02
  %392 = fadd double %391, %389
  %393 = fcmp ogt double %392, 0x41DFFFFFFFC00000
  %394 = fcmp olt double %392, 0xC1E0000000000000
  %395 = or i1 %393, %394
  %396 = fptosi double %392 to i32
  %397 = select i1 %395, i32 0, i32 %396
  br label %398

398:                                              ; preds = %386, %360
  %399 = phi i32 [ %367, %360 ], [ %397, %386 ]
  %400 = getelementptr inbounds i8, i8* %221, i64 40
  %401 = bitcast i8* %400 to i32*
  store i32 %399, i32* %401, align 8
  %402 = call %"class.blink::Element"* @_ZNK5blink12LayoutObject12OffsetParentEPKNS_7ElementE(%"class.blink::LayoutObject"* %361, %"class.blink::Element"* null) #19
  %403 = load i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)**, i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)*** %363, align 8
  %404 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)*, i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)** %403, i64 113
  %405 = load i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)*, i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)** %404, align 8
  %406 = call i32 %405(%"class.blink::LayoutBoxModelObject"* nonnull %220, %"class.blink::Element"* %402) #19
  %407 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %368, align 8
  %408 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %407, i64 0, i32 0, i32 1, i32 0, i32 0
  %409 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %408, align 8
  %410 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %409, i64 0, i32 2, i32 0, i32 0
  %411 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %410, align 8
  %412 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %411, i64 0, i32 6
  %413 = load float, float* %412, align 8
  %414 = fcmp oeq float %413, 1.000000e+00
  br i1 %414, label %442, label %415

415:                                              ; preds = %398
  %416 = sitofp i32 %406 to float
  %417 = fcmp ogt float %413, 1.000000e+00
  br i1 %417, label %418, label %424

418:                                              ; preds = %415
  %419 = icmp slt i32 %406, 0
  br i1 %419, label %420, label %422

420:                                              ; preds = %418
  %421 = fadd float %416, -5.000000e-01
  br label %424

422:                                              ; preds = %418
  %423 = fadd float %416, 5.000000e-01
  br label %424

424:                                              ; preds = %422, %420, %415
  %425 = phi float [ %421, %420 ], [ %423, %422 ], [ %416, %415 ]
  %426 = fdiv float %425, %413
  %427 = fpext float %426 to double
  %428 = fcmp olt float %426, 0.000000e+00
  %429 = select i1 %428, double -1.000000e-02, double 1.000000e-02
  %430 = fadd double %429, %427
  %431 = fcmp ogt double %430, 0x41DFFFFFFFC00000
  %432 = fcmp olt double %430, 0xC1E0000000000000
  %433 = or i1 %431, %432
  %434 = fptosi double %430 to i32
  %435 = select i1 %433, i32 0, i32 %434
  br label %442

436:                                              ; preds = %166
  %437 = trunc i64 %213 to i32
  %438 = getelementptr inbounds i8, i8* %221, i64 40
  %439 = bitcast i8* %438 to i32*
  store i32 %437, i32* %439, align 8
  %440 = lshr i64 %213, 32
  %441 = trunc i64 %440 to i32
  br label %442

442:                                              ; preds = %424, %398, %436
  %443 = phi i32 [ %441, %436 ], [ %435, %424 ], [ %406, %398 ]
  %444 = getelementptr inbounds i8, i8* %221, i64 44
  %445 = bitcast i8* %444 to i32*
  store i32 %443, i32* %445, align 4
  %446 = ptrtoint i8* %221 to i64
  %447 = getelementptr inbounds %"class.std::__1::unique_ptr.2477", %"class.std::__1::unique_ptr.2477"* %1, i64 0, i32 0, i32 0, i32 0
  %448 = load %"class.blink::protocol::DOM::BoxModel"*, %"class.blink::protocol::DOM::BoxModel"** %447, align 8
  %449 = bitcast %"class.std::__1::unique_ptr.2477"* %1 to i64*
  store i64 %446, i64* %449, align 8
  %450 = icmp eq %"class.blink::protocol::DOM::BoxModel"* %448, null
  br i1 %450, label %456, label %451

451:                                              ; preds = %442
  %452 = bitcast %"class.blink::protocol::DOM::BoxModel"* %448 to void (%"class.blink::protocol::DOM::BoxModel"*)***
  %453 = load void (%"class.blink::protocol::DOM::BoxModel"*)**, void (%"class.blink::protocol::DOM::BoxModel"*)*** %452, align 8
  %454 = getelementptr inbounds void (%"class.blink::protocol::DOM::BoxModel"*)*, void (%"class.blink::protocol::DOM::BoxModel"*)** %453, i64 2
  %455 = load void (%"class.blink::protocol::DOM::BoxModel"*)*, void (%"class.blink::protocol::DOM::BoxModel"*)** %454, align 8
  call void %455(%"class.blink::protocol::DOM::BoxModel"* nonnull %448) #19
  br label %456

456:                                              ; preds = %442, %451
  %457 = bitcast %"struct.blink::Shape::DisplayPaths"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %457) #19
  %458 = getelementptr inbounds %"struct.blink::Shape::DisplayPaths", %"struct.blink::Shape::DisplayPaths"* %17, i64 0, i32 1
  %459 = getelementptr inbounds %"struct.blink::Shape::DisplayPaths", %"struct.blink::Shape::DisplayPaths"* %17, i64 0, i32 0
  %460 = bitcast %"struct.blink::Shape::DisplayPaths"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %460, i8 -86, i64 32, i1 false)
  call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* nonnull %459) #19
  call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* %458) #19
  %461 = bitcast %"class.blink::FloatQuad"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %461) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %461, i8 0, i64 32, i1 false) #19
  %462 = bitcast %"class.crdtp::ErrorSupport"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %462) #19
  %463 = getelementptr inbounds %"class.crdtp::ErrorSupport", %"class.crdtp::ErrorSupport"* %19, i64 0, i32 0, i32 0, i32 0
  %464 = getelementptr inbounds %"class.crdtp::ErrorSupport", %"class.crdtp::ErrorSupport"* %19, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %462, i8 0, i64 48, i1 false) #19
  %465 = call fastcc %"class.blink::ShapeOutsideInfo"* @_ZN5blink12_GLOBAL__N_123ShapeOutsideInfoForNodeEPNS_4NodeEPNS_5Shape12DisplayPathsEPNS_9FloatQuadE(%"class.blink::Node"* %0, %"struct.blink::Shape::DisplayPaths"* nonnull %17, %"class.blink::FloatQuad"* nonnull %18)
  %466 = icmp eq %"class.blink::ShapeOutsideInfo"* %465, null
  br i1 %466, label %566, label %467

467:                                              ; preds = %456
  %468 = bitcast %"class.blink::(anonymous namespace)::ShapePathBuilder"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %468) #19
  %469 = getelementptr inbounds %"class.blink::(anonymous namespace)::ShapePathBuilder", %"class.blink::(anonymous namespace)::ShapePathBuilder"* %9, i64 0, i32 0, i32 0
  %470 = getelementptr inbounds %"class.blink::(anonymous namespace)::ShapePathBuilder", %"class.blink::(anonymous namespace)::ShapePathBuilder"* %9, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %471 = getelementptr inbounds %"class.blink::(anonymous namespace)::ShapePathBuilder", %"class.blink::(anonymous namespace)::ShapePathBuilder"* %9, i64 0, i32 1
  %472 = getelementptr inbounds %"class.blink::(anonymous namespace)::ShapePathBuilder", %"class.blink::(anonymous namespace)::ShapePathBuilder"* %9, i64 0, i32 2
  %473 = getelementptr inbounds %"class.blink::(anonymous namespace)::ShapePathBuilder", %"class.blink::(anonymous namespace)::ShapePathBuilder"* %9, i64 0, i32 3
  %474 = call i8* @_Znwm(i64 40) #18
  %475 = bitcast i8* %474 to %"class.blink::protocol::ListValue"*
  call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %475) #19
  %476 = bitcast %"class.blink::protocol::ListValue"** %470 to i8**
  store i8* %474, i8** %476, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_116ShapePathBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %469, align 8
  store %"class.blink::LocalFrameView"* %43, %"class.blink::LocalFrameView"** %471, align 8
  store %"class.blink::LayoutObject"* %39, %"class.blink::LayoutObject"** %472, align 8
  store %"class.blink::ShapeOutsideInfo"* %465, %"class.blink::ShapeOutsideInfo"** %473, align 8
  %477 = bitcast %"class.blink::Path"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %477) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %477, i8 -86, i64 16, i1 false) #19
  call void @_ZN5blink4PathC1ERKS0_(%"class.blink::Path"* nonnull %4, %"class.blink::Path"* nonnull dereferenceable(16) %459) #19
  %478 = bitcast %"class.blink::AffineTransform"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %478) #19
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %5) #19
  %479 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEd(%"class.blink::AffineTransform"* nonnull %5, double 1.000000e+00) #19
  call void @_ZN5blink4Path9TransformERKNS_15AffineTransformE(%"class.blink::Path"* nonnull %4, %"class.blink::AffineTransform"* dereferenceable(48) %479) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %478) #19
  call void @_ZNK5blink4Path5ApplyEPvPFvS1_PKNS_11PathElementEE(%"class.blink::Path"* nonnull %4, i8* nonnull %468, void (i8*, %"struct.blink::PathElement"*)* nonnull @_ZN5blink12_GLOBAL__N_111PathBuilder17AppendPathElementEPvPKNS_11PathElementE) #19
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %477) #19
  %480 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %470, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %468) #19
  %481 = bitcast %"class.blink::(anonymous namespace)::ShapePathBuilder"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %481) #19
  %482 = getelementptr inbounds %"class.blink::(anonymous namespace)::ShapePathBuilder", %"class.blink::(anonymous namespace)::ShapePathBuilder"* %8, i64 0, i32 0, i32 0
  %483 = getelementptr inbounds %"class.blink::(anonymous namespace)::ShapePathBuilder", %"class.blink::(anonymous namespace)::ShapePathBuilder"* %8, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %484 = getelementptr inbounds %"class.blink::(anonymous namespace)::ShapePathBuilder", %"class.blink::(anonymous namespace)::ShapePathBuilder"* %8, i64 0, i32 1
  %485 = getelementptr inbounds %"class.blink::(anonymous namespace)::ShapePathBuilder", %"class.blink::(anonymous namespace)::ShapePathBuilder"* %8, i64 0, i32 2
  %486 = getelementptr inbounds %"class.blink::(anonymous namespace)::ShapePathBuilder", %"class.blink::(anonymous namespace)::ShapePathBuilder"* %8, i64 0, i32 3
  %487 = call i8* @_Znwm(i64 40) #18
  %488 = bitcast i8* %487 to %"class.blink::protocol::ListValue"*
  call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %488) #19
  %489 = bitcast %"class.blink::protocol::ListValue"** %483 to i8**
  store i8* %487, i8** %489, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_116ShapePathBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %482, align 8
  store %"class.blink::LocalFrameView"* %43, %"class.blink::LocalFrameView"** %484, align 8
  store %"class.blink::LayoutObject"* %39, %"class.blink::LayoutObject"** %485, align 8
  store %"class.blink::ShapeOutsideInfo"* %465, %"class.blink::ShapeOutsideInfo"** %486, align 8
  %490 = bitcast %"class.blink::Path"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %490) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %490, i8 -86, i64 16, i1 false) #19
  call void @_ZN5blink4PathC1ERKS0_(%"class.blink::Path"* nonnull %6, %"class.blink::Path"* dereferenceable(16) %458) #19
  %491 = bitcast %"class.blink::AffineTransform"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %491) #19
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %7) #19
  %492 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEd(%"class.blink::AffineTransform"* nonnull %7, double 1.000000e+00) #19
  call void @_ZN5blink4Path9TransformERKNS_15AffineTransformE(%"class.blink::Path"* nonnull %6, %"class.blink::AffineTransform"* dereferenceable(48) %492) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %491) #19
  call void @_ZNK5blink4Path5ApplyEPvPFvS1_PKNS_11PathElementEE(%"class.blink::Path"* nonnull %6, i8* nonnull %481, void (i8*, %"struct.blink::PathElement"*)* nonnull @_ZN5blink12_GLOBAL__N_111PathBuilder17AppendPathElementEPvPKNS_11PathElementE) #19
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %490) #19
  %493 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %483, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %481) #19
  %494 = load %"class.blink::protocol::DOM::BoxModel"*, %"class.blink::protocol::DOM::BoxModel"** %447, align 8
  %495 = call i8* @_Znwm(i64 32) #18
  %496 = bitcast i8* %495 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3DOM16ShapeOutsideInfoE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %496, align 8
  %497 = getelementptr inbounds i8, i8* %495, i64 8
  %498 = bitcast %"class.blink::FloatQuad"* %18 to <2 x float>*
  %499 = load <2 x float>, <2 x float>* %498, align 8
  %500 = fpext <2 x float> %499 to <2 x double>
  %501 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %18, i64 0, i32 1
  %502 = bitcast %"class.blink::FloatPoint"* %501 to <2 x float>*
  %503 = load <2 x float>, <2 x float>* %502, align 8
  %504 = fpext <2 x float> %503 to <2 x double>
  %505 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %18, i64 0, i32 2
  %506 = bitcast %"class.blink::FloatPoint"* %505 to <2 x float>*
  %507 = load <2 x float>, <2 x float>* %506, align 8
  %508 = fpext <2 x float> %507 to <2 x double>
  %509 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %18, i64 0, i32 3
  %510 = bitcast %"class.blink::FloatPoint"* %509 to <2 x float>*
  %511 = load <2 x float>, <2 x float>* %510, align 8
  %512 = fpext <2 x float> %511 to <2 x double>
  %513 = call i8* @_Znwm(i64 24) #18
  %514 = call i8* @_Znwm(i64 64) #18
  %515 = getelementptr inbounds i8, i8* %513, i64 8
  %516 = bitcast i8* %513 to i8**
  store i8* %514, i8** %516, align 8
  %517 = getelementptr inbounds i8, i8* %514, i64 64
  %518 = getelementptr inbounds i8, i8* %513, i64 16
  %519 = bitcast i8* %518 to i8**
  store i8* %517, i8** %519, align 8
  %520 = bitcast i8* %515 to i64*
  %521 = bitcast i8* %514 to <2 x double>*
  store <2 x double> %500, <2 x double>* %521, align 8
  %522 = getelementptr inbounds i8, i8* %514, i64 16
  %523 = bitcast i8* %522 to <2 x double>*
  store <2 x double> %504, <2 x double>* %523, align 8
  %524 = getelementptr inbounds i8, i8* %514, i64 32
  %525 = bitcast i8* %524 to <2 x double>*
  store <2 x double> %508, <2 x double>* %525, align 8
  %526 = getelementptr inbounds i8, i8* %514, i64 48
  %527 = bitcast i8* %526 to <2 x double>*
  store <2 x double> %512, <2 x double>* %527, align 8
  %528 = ptrtoint i8* %517 to i64
  store i64 %528, i64* %520, align 8
  %529 = ptrtoint i8* %513 to i64
  %530 = bitcast i8* %497 to i64*
  store i64 %529, i64* %530, align 8
  %531 = bitcast %"class.blink::protocol::ListValue"* %480 to %"class.blink::protocol::Value"*
  %532 = call %"class.std::__1::vector.2404"* @_ZN5blink8protocol16ValueConversionsINSt3__16vectorINS2_10unique_ptrINS0_5ValueENS2_14default_deleteIS5_EEEENS2_9allocatorIS8_EEEEE9fromValueEPS5_PN5crdtp12ErrorSupportE(%"class.blink::protocol::Value"* %531, %"class.crdtp::ErrorSupport"* nonnull %19)
  %533 = ptrtoint %"class.std::__1::vector.2404"* %532 to i64
  %534 = getelementptr inbounds i8, i8* %495, i64 16
  %535 = bitcast i8* %534 to i64*
  store i64 %533, i64* %535, align 8
  %536 = bitcast %"class.blink::protocol::ListValue"* %493 to %"class.blink::protocol::Value"*
  %537 = call %"class.std::__1::vector.2404"* @_ZN5blink8protocol16ValueConversionsINSt3__16vectorINS2_10unique_ptrINS0_5ValueENS2_14default_deleteIS5_EEEENS2_9allocatorIS8_EEEEE9fromValueEPS5_PN5crdtp12ErrorSupportE(%"class.blink::protocol::Value"* %536, %"class.crdtp::ErrorSupport"* nonnull %19)
  %538 = ptrtoint %"class.std::__1::vector.2404"* %537 to i64
  %539 = getelementptr inbounds i8, i8* %495, i64 24
  %540 = bitcast i8* %539 to i64*
  store i64 %538, i64* %540, align 8
  %541 = getelementptr inbounds %"class.blink::protocol::DOM::BoxModel", %"class.blink::protocol::DOM::BoxModel"* %494, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %542 = load %"class.blink::protocol::DOM::ShapeOutsideInfo"*, %"class.blink::protocol::DOM::ShapeOutsideInfo"** %541, align 8
  %543 = ptrtoint i8* %495 to i64
  %544 = getelementptr inbounds %"class.blink::protocol::DOM::BoxModel", %"class.blink::protocol::DOM::BoxModel"* %494, i64 0, i32 7
  %545 = bitcast %"class.crdtp::detail::PtrMaybe"* %544 to i64*
  store i64 %543, i64* %545, align 8
  %546 = icmp eq %"class.blink::protocol::DOM::ShapeOutsideInfo"* %542, null
  br i1 %546, label %552, label %547

547:                                              ; preds = %467
  %548 = bitcast %"class.blink::protocol::DOM::ShapeOutsideInfo"* %542 to void (%"class.blink::protocol::DOM::ShapeOutsideInfo"*)***
  %549 = load void (%"class.blink::protocol::DOM::ShapeOutsideInfo"*)**, void (%"class.blink::protocol::DOM::ShapeOutsideInfo"*)*** %548, align 8
  %550 = getelementptr inbounds void (%"class.blink::protocol::DOM::ShapeOutsideInfo"*)*, void (%"class.blink::protocol::DOM::ShapeOutsideInfo"*)** %549, i64 2
  %551 = load void (%"class.blink::protocol::DOM::ShapeOutsideInfo"*)*, void (%"class.blink::protocol::DOM::ShapeOutsideInfo"*)** %550, align 8
  call void %551(%"class.blink::protocol::DOM::ShapeOutsideInfo"* nonnull %542) #19
  br label %552

552:                                              ; preds = %547, %467
  %553 = icmp eq %"class.blink::protocol::ListValue"* %493, null
  br i1 %553, label %559, label %554

554:                                              ; preds = %552
  %555 = bitcast %"class.blink::protocol::ListValue"* %493 to void (%"class.blink::protocol::ListValue"*)***
  %556 = load void (%"class.blink::protocol::ListValue"*)**, void (%"class.blink::protocol::ListValue"*)*** %555, align 8
  %557 = getelementptr inbounds void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %556, i64 2
  %558 = load void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %557, align 8
  call void %558(%"class.blink::protocol::ListValue"* nonnull %493) #19
  br label %559

559:                                              ; preds = %552, %554
  %560 = icmp eq %"class.blink::protocol::ListValue"* %480, null
  br i1 %560, label %566, label %561

561:                                              ; preds = %559
  %562 = bitcast %"class.blink::protocol::ListValue"* %480 to void (%"class.blink::protocol::ListValue"*)***
  %563 = load void (%"class.blink::protocol::ListValue"*)**, void (%"class.blink::protocol::ListValue"*)*** %562, align 8
  %564 = getelementptr inbounds void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %563, i64 2
  %565 = load void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %564, align 8
  call void %565(%"class.blink::protocol::ListValue"* nonnull %480) #19
  br label %566

566:                                              ; preds = %561, %559, %456
  %567 = getelementptr inbounds %"class.crdtp::ErrorSupport", %"class.crdtp::ErrorSupport"* %19, i64 0, i32 1
  %568 = bitcast %"class.std::__1::basic_string"* %567 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %569 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %568, i64 0, i32 1, i32 0
  %570 = load i8, i8* %569, align 1
  %571 = icmp slt i8 %570, 0
  br i1 %571, label %572, label %575

572:                                              ; preds = %566
  %573 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %567, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %574 = load i8*, i8** %573, align 8
  call void @_ZdlPv(i8* %574) #18
  br label %575

575:                                              ; preds = %572, %566
  %576 = load %"struct.crdtp::ErrorSupport::Segment"*, %"struct.crdtp::ErrorSupport::Segment"** %463, align 8
  %577 = icmp eq %"struct.crdtp::ErrorSupport::Segment"* %576, null
  br i1 %577, label %582, label %578

578:                                              ; preds = %575
  %579 = ptrtoint %"struct.crdtp::ErrorSupport::Segment"* %576 to i64
  %580 = bitcast %"struct.crdtp::ErrorSupport::Segment"** %464 to i64*
  store i64 %579, i64* %580, align 8
  %581 = bitcast %"struct.crdtp::ErrorSupport::Segment"* %576 to i8*
  call void @_ZdlPv(i8* %581) #18
  br label %582

582:                                              ; preds = %575, %578
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %462) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %461) #19
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* %458) #19
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %459) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %457) #19
  br label %583

583:                                              ; preds = %107, %95, %582
  %584 = phi i1 [ true, %582 ], [ false, %95 ], [ false, %107 ]
  %585 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %57, align 8
  %586 = icmp eq %"class.blink::FloatQuad"* %585, null
  %587 = bitcast %"class.blink::FloatQuad"* %585 to i8*
  br i1 %586, label %593, label %588, !prof !27

588:                                              ; preds = %583
  %589 = load i32, i32* %58, align 4
  %590 = icmp eq i32 %589, 0
  br i1 %590, label %592, label %591, !prof !2

591:                                              ; preds = %588
  store i32 0, i32* %58, align 4
  br label %592

592:                                              ; preds = %591, %588
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %587) #19
  store %"class.blink::FloatQuad"* null, %"class.blink::FloatQuad"** %57, align 8
  br label %593

593:                                              ; preds = %583, %592
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %52) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %50) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %48) #19
  br label %594

594:                                              ; preds = %35, %593
  %595 = phi i1 [ %584, %593 ], [ false, %35 ]
  ret i1 %595
}

declare void @_ZN5blink8Document35EnsurePaintLocationDataValidForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"*, %"class.blink::Node"*, i32) local_unnamed_addr #3

declare i32 @_ZNK5blink27CSSComputedStyleDeclaration6lengthEv(%"class.blink::CSSComputedStyleDeclaration"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink27CSSComputedStyleDeclaration4itemEj(%"class.blink::CSSComputedStyleDeclaration"*, i32) unnamed_addr #3

declare %"class.blink::CSSValue"* @_ZNK5blink27CSSComputedStyleDeclaration19GetPropertyCSSValueENS_13CSSPropertyIDE(%"class.blink::CSSComputedStyleDeclaration"*, i32) local_unnamed_addr #3

declare i32 @_ZN5blink13CssPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorHighlight27VisitAndCollectDistanceInfoEPNS_4NodeE(%"class.blink::InspectorHighlight"* readonly, %"class.blink::Node"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 6, i32 0, i32 0
  br i1 %6, label %12, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::NodeData"** %7 to %"class.blink::NodeRareData"**
  %10 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %10, i64 0, i32 1, i32 0, i32 0
  br label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.blink::NodeData"** %7 to %"class.blink::NodeRenderingData"**
  br label %14

14:                                               ; preds = %8, %12
  %15 = phi %"class.blink::NodeRenderingData"** [ %11, %8 ], [ %13, %12 ]
  %16 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %16, i64 0, i32 1
  %18 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %17, align 8
  %19 = icmp ne %"class.blink::LayoutObject"* %18, null
  br i1 %19, label %20, label %21

20:                                               ; preds = %14
  tail call void @_ZN5blink18InspectorHighlight26AddLayoutBoxToDistanceInfoEPNS_12LayoutObjectE(%"class.blink::InspectorHighlight"* %0, %"class.blink::LayoutObject"* nonnull %18)
  br label %21

21:                                               ; preds = %20, %14
  %22 = icmp eq %"class.blink::Node"* %1, null
  br i1 %22, label %73, label %23

23:                                               ; preds = %21
  %24 = load i32, i32* %3, align 8
  %25 = and i32 %24, 12
  %26 = icmp eq i32 %25, 0
  %27 = bitcast %"class.blink::Node"* %1 to %"class.blink::Element"*
  br i1 %26, label %28, label %73

28:                                               ; preds = %23
  %29 = bitcast %"class.blink::Node"* %1 to i8 (%"class.blink::Node"*)***
  %30 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %29, align 8
  %31 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %30, i64 34
  %32 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %31, align 8
  %33 = tail call zeroext i8 %32(%"class.blink::Node"* nonnull %1) #19
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %28
  %36 = tail call %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"* nonnull %27, i8 zeroext 2) #19
  %37 = icmp eq %"class.blink::PseudoElement"* %36, null
  br i1 %37, label %70, label %68

38:                                               ; preds = %28
  br i1 %19, label %39, label %73

39:                                               ; preds = %38
  %40 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %29, align 8
  %41 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %40, i64 34
  %42 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %41, align 8
  %43 = tail call zeroext i8 %42(%"class.blink::Node"* nonnull %1) #19
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %73, label %45

45:                                               ; preds = %39
  %46 = bitcast %"class.blink::LayoutObject"* %18 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %47 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %46, align 8
  %48 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %47, i64 13
  %49 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %48, align 8
  %50 = tail call %"class.blink::LayoutObjectChildList"* %49(%"class.blink::LayoutObject"* nonnull %18) #19
  %51 = icmp eq %"class.blink::LayoutObjectChildList"* %50, null
  br i1 %51, label %73, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %50, i64 0, i32 0
  %54 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %53, align 8
  %55 = icmp eq %"class.blink::LayoutObject"* %54, null
  br i1 %55, label %73, label %56

56:                                               ; preds = %52, %64
  %57 = phi %"class.blink::LayoutObject"* [ %66, %64 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %57, i64 0, i32 4
  %59 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %58 to i96*
  %60 = load i96, i96* %59, align 4
  %61 = and i96 %60, 16777216
  %62 = icmp eq i96 %61, 0
  br i1 %62, label %64, label %63

63:                                               ; preds = %56
  tail call void @_ZN5blink18InspectorHighlight26AddLayoutBoxToDistanceInfoEPNS_12LayoutObjectE(%"class.blink::InspectorHighlight"* %0, %"class.blink::LayoutObject"* nonnull %57) #19
  br label %64

64:                                               ; preds = %63, %56
  %65 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %57, i64 0, i32 9
  %66 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %65, align 8
  %67 = icmp eq %"class.blink::LayoutObject"* %66, null
  br i1 %67, label %73, label %56

68:                                               ; preds = %35
  %69 = getelementptr inbounds %"class.blink::PseudoElement", %"class.blink::PseudoElement"* %36, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink18InspectorHighlight27VisitAndCollectDistanceInfoEPNS_4NodeE(%"class.blink::InspectorHighlight"* %0, %"class.blink::Node"* %69)
  br label %70

70:                                               ; preds = %35, %68
  %71 = tail call %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"* nonnull %27, i8 zeroext 3) #19
  %72 = icmp eq %"class.blink::PseudoElement"* %71, null
  br i1 %72, label %87, label %85

73:                                               ; preds = %64, %87, %90, %23, %21, %52, %45, %39, %38
  %74 = load i32, i32* %3, align 8
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %84, label %77

77:                                               ; preds = %73
  %78 = tail call %"class.blink::Node"* @_ZN5blink19dom_traversal_utils10FirstChildERKNS_4NodeEb(%"class.blink::Node"* dereferenceable(64) %1, i1 zeroext false) #19
  %79 = icmp eq %"class.blink::Node"* %78, null
  br i1 %79, label %84, label %80

80:                                               ; preds = %77, %80
  %81 = phi %"class.blink::Node"* [ %82, %80 ], [ %78, %77 ]
  tail call void @_ZN5blink18InspectorHighlight27VisitAndCollectDistanceInfoEPNS_4NodeE(%"class.blink::InspectorHighlight"* %0, %"class.blink::Node"* nonnull %81)
  %82 = tail call %"class.blink::Node"* @_ZN5blink19dom_traversal_utils11NextSiblingERKNS_4NodeEb(%"class.blink::Node"* nonnull dereferenceable(64) %81, i1 zeroext false) #19
  %83 = icmp eq %"class.blink::Node"* %82, null
  br i1 %83, label %84, label %80

84:                                               ; preds = %80, %77, %73
  ret void

85:                                               ; preds = %70
  %86 = getelementptr inbounds %"class.blink::PseudoElement", %"class.blink::PseudoElement"* %71, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink18InspectorHighlight27VisitAndCollectDistanceInfoEPNS_4NodeE(%"class.blink::InspectorHighlight"* %0, %"class.blink::Node"* %86)
  br label %87

87:                                               ; preds = %85, %70
  %88 = tail call %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"* nonnull %27, i8 zeroext 4) #19
  %89 = icmp eq %"class.blink::PseudoElement"* %88, null
  br i1 %89, label %73, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.blink::PseudoElement", %"class.blink::PseudoElement"* %88, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink18InspectorHighlight27VisitAndCollectDistanceInfoEPNS_4NodeE(%"class.blink::InspectorHighlight"* %0, %"class.blink::Node"* %91)
  br label %73
}

declare { i64, i64 } @_ZNK5blink10LayoutView12DocumentRectEv(%"class.blink::LayoutView"*) local_unnamed_addr #3

declare { i64, i64 } @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_12PhysicalRectE(%"class.blink::LocalFrameView"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorHighlight26AddLayoutBoxToDistanceInfoEPNS_12LayoutObjectE(%"class.blink::InspectorHighlight"* nocapture readonly, %"class.blink::LayoutObject"*) local_unnamed_addr #1 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = alloca %"class.WTF::Vector.2531", align 8
  %7 = alloca %"class.std::__1::unique_ptr.2425", align 8
  %8 = alloca %"class.std::__1::unique_ptr.2425", align 8
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %10 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %9 to i96*
  %11 = load i96, i96* %10, align 4
  %12 = and i96 %11, 33554432
  %13 = icmp eq i96 %12, 0
  br i1 %13, label %171, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutText"*
  %16 = bitcast %"class.WTF::Vector.2531"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #19
  call void @_ZNK5blink10LayoutText14GetTextBoxInfoEv(%"class.WTF::Vector.2531"* nonnull sret %6, %"class.blink::LayoutText"* %15) #19
  %17 = getelementptr inbounds %"class.WTF::Vector.2531", %"class.WTF::Vector.2531"* %6, i64 0, i32 0, i32 0, i32 0
  %18 = load %"struct.blink::LayoutText::TextBoxInfo"*, %"struct.blink::LayoutText::TextBoxInfo"** %17, align 8
  %19 = getelementptr inbounds %"class.WTF::Vector.2531", %"class.WTF::Vector.2531"* %6, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"struct.blink::LayoutText::TextBoxInfo", %"struct.blink::LayoutText::TextBoxInfo"* %18, i64 %21
  %23 = icmp eq i32 %20, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %14
  %25 = bitcast { i64, i64 }* %4 to %"struct.blink::PhysicalRect"*
  %26 = bitcast { i64, i64 }* %5 to %"struct.blink::PhysicalRect"*
  %27 = bitcast { i64, i64 }* %4 to i8*
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %29 = bitcast { i64, i64 }* %5 to i8*
  %30 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 5, i32 0
  %31 = bitcast %"class.blink::LayoutObject"* %1 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 6, i32 0, i32 0
  %36 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %37 = bitcast %"class.std::__1::unique_ptr.2425"* %7 to i8*
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %7, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.std::__1::unique_ptr.2425"* %7 to i8**
  br label %52

40:                                               ; preds = %168
  %41 = load %"struct.blink::LayoutText::TextBoxInfo"*, %"struct.blink::LayoutText::TextBoxInfo"** %17, align 8
  br label %42

42:                                               ; preds = %40, %14
  %43 = phi %"struct.blink::LayoutText::TextBoxInfo"* [ %41, %40 ], [ %18, %14 ]
  %44 = icmp eq %"struct.blink::LayoutText::TextBoxInfo"* %43, null
  %45 = bitcast %"struct.blink::LayoutText::TextBoxInfo"* %43 to i8*
  br i1 %44, label %51, label %46, !prof !27

46:                                               ; preds = %42
  %47 = load i32, i32* %19, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %50, label %49, !prof !2

49:                                               ; preds = %46
  store i32 0, i32* %19, align 4
  br label %50

50:                                               ; preds = %49, %46
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %45) #19
  store %"struct.blink::LayoutText::TextBoxInfo"* null, %"struct.blink::LayoutText::TextBoxInfo"** %17, align 8
  br label %51

51:                                               ; preds = %42, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #19
  br label %328

52:                                               ; preds = %24, %168
  %53 = phi %"struct.blink::LayoutText::TextBoxInfo"* [ %18, %24 ], [ %169, %168 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false) #19
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #19
  %54 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %30, align 8
  %55 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %54, i64 0, i32 0, i32 9
  %56 = bitcast [20 x i8]* %55 to i160*
  %57 = load i160, i160* %56, align 8
  %58 = and i160 %57, 15211807202738752817960438464512
  %59 = icmp eq i160 %58, 5070602400912917605986812821504
  %60 = getelementptr inbounds %"struct.blink::LayoutText::TextBoxInfo", %"struct.blink::LayoutText::TextBoxInfo"* %53, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"struct.blink::LayoutText::TextBoxInfo", %"struct.blink::LayoutText::TextBoxInfo"* %53, i64 0, i32 0, i32 1, i32 0, i32 0
  br i1 %59, label %63, label %69, !prof !2

63:                                               ; preds = %52
  %64 = load i32, i32* %62, align 4
  %65 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %31, align 8
  %66 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %65, i64 106
  %67 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %66, align 8
  %68 = call i32 %67(%"class.blink::LayoutObject"* %1, i32 %61, i32 %64, %"class.blink::LayoutBox"* null) #19
  br label %69

69:                                               ; preds = %63, %52
  %70 = phi i32 [ %68, %63 ], [ %61, %52 ]
  %71 = getelementptr inbounds %"struct.blink::LayoutText::TextBoxInfo", %"struct.blink::LayoutText::TextBoxInfo"* %53, i64 0, i32 0, i32 0, i32 1, i32 0
  %72 = getelementptr inbounds %"struct.blink::LayoutText::TextBoxInfo", %"struct.blink::LayoutText::TextBoxInfo"* %53, i64 0, i32 0, i32 1, i32 1, i32 0
  %73 = load i32, i32* %71, align 4
  %74 = load i32, i32* %62, align 4
  %75 = load i32, i32* %72, align 4
  %76 = zext i32 %73 to i64
  %77 = shl nuw i64 %76, 32
  %78 = zext i32 %70 to i64
  %79 = or i64 %77, %78
  %80 = zext i32 %75 to i64
  %81 = shl nuw i64 %80, 32
  %82 = zext i32 %74 to i64
  %83 = or i64 %81, %82
  store i64 %79, i64* %32, align 8
  store i64 %83, i64* %33, align 8
  %84 = call { i64, i64 } @_ZNK5blink12LayoutObject19LocalToAncestorRectERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj(%"class.blink::LayoutObject"* %1, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %26, %"class.blink::LayoutBoxModelObject"* null, i32 0) #19
  %85 = extractvalue { i64, i64 } %84, 0
  store i64 %85, i64* %34, align 8
  %86 = extractvalue { i64, i64 } %84, 1
  store i64 %86, i64* %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #19
  %87 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %88 = icmp eq %"class.blink::Node"* %87, null
  br i1 %88, label %89, label %96

89:                                               ; preds = %69, %89
  %90 = phi %"class.blink::LayoutObject"* [ %92, %89 ], [ %1, %69 ]
  %91 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %90, i64 0, i32 7
  %92 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %92, i64 0, i32 6, i32 0, i32 0
  %94 = load %"class.blink::Node"*, %"class.blink::Node"** %93, align 8
  %95 = icmp eq %"class.blink::Node"* %94, null
  br i1 %95, label %89, label %96

96:                                               ; preds = %89, %69
  %97 = phi %"class.blink::Node"* [ %87, %69 ], [ %94, %89 ]
  %98 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %97, i64 0, i32 3, i32 0, i32 0
  %99 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %99, i64 0, i32 2, i32 0, i32 0
  %101 = load %"class.blink::Document"*, %"class.blink::Document"** %100, align 8
  %102 = call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %101) #19
  %103 = icmp eq %"class.blink::LocalFrameView"* %102, null
  br i1 %103, label %108, label %104

104:                                              ; preds = %96
  %105 = call { i64, i64 } @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_12PhysicalRectE(%"class.blink::LocalFrameView"* nonnull %102, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %25) #19
  %106 = extractvalue { i64, i64 } %105, 0
  %107 = extractvalue { i64, i64 } %105, 1
  br label %108

108:                                              ; preds = %96, %104
  %109 = phi i64 [ %106, %104 ], [ %85, %96 ]
  %110 = phi i64 [ %107, %104 ], [ %86, %96 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #19
  %111 = trunc i64 %109 to i32
  %112 = lshr i64 %109, 32
  %113 = trunc i64 %112 to i32
  %114 = load %"class.std::__1::vector.2423"*, %"class.std::__1::vector.2423"** %36, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #19
  %115 = sitofp i32 %111 to double
  %116 = fmul double %115, 1.562500e-02
  %117 = sitofp i32 %113 to double
  %118 = fmul double %117, 1.562500e-02
  %119 = trunc i64 %110 to i32
  %120 = sitofp i32 %119 to double
  %121 = fmul double %120, 1.562500e-02
  %122 = lshr i64 %110, 32
  %123 = trunc i64 %122 to i32
  %124 = sitofp i32 %123 to double
  %125 = fmul double %124, 1.562500e-02
  %126 = call i8* @_Znwm(i64 24) #18
  %127 = call i8* @_Znwm(i64 32) #18
  %128 = getelementptr inbounds i8, i8* %126, i64 8
  %129 = bitcast i8* %126 to i8**
  store i8* %127, i8** %129, align 8
  %130 = getelementptr inbounds i8, i8* %127, i64 32
  %131 = getelementptr inbounds i8, i8* %126, i64 16
  %132 = bitcast i8* %131 to i8**
  store i8* %130, i8** %132, align 8
  %133 = bitcast i8* %128 to i64*
  %134 = bitcast i8* %127 to double*
  store double %116, double* %134, align 8
  %135 = getelementptr inbounds i8, i8* %127, i64 8
  %136 = bitcast i8* %135 to double*
  store double %118, double* %136, align 8
  %137 = getelementptr inbounds i8, i8* %127, i64 16
  %138 = bitcast i8* %137 to double*
  store double %121, double* %138, align 8
  %139 = getelementptr inbounds i8, i8* %127, i64 24
  %140 = bitcast i8* %139 to double*
  store double %125, double* %140, align 8
  %141 = ptrtoint i8* %130 to i64
  store i64 %141, i64* %133, align 8
  store i8* %126, i8** %39, align 8
  %142 = getelementptr inbounds %"class.std::__1::vector.2423", %"class.std::__1::vector.2423"* %114, i64 0, i32 0, i32 1
  %143 = load %"class.std::__1::unique_ptr.2425"*, %"class.std::__1::unique_ptr.2425"** %142, align 8
  %144 = getelementptr inbounds %"class.std::__1::vector.2423", %"class.std::__1::vector.2423"* %114, i64 0, i32 0, i32 2, i32 0, i32 0
  %145 = load %"class.std::__1::unique_ptr.2425"*, %"class.std::__1::unique_ptr.2425"** %144, align 8
  %146 = icmp ult %"class.std::__1::unique_ptr.2425"* %143, %145
  br i1 %146, label %147, label %153

147:                                              ; preds = %108
  %148 = ptrtoint i8* %126 to i64
  store %"class.std::__1::vector.2428"* null, %"class.std::__1::vector.2428"** %38, align 8
  %149 = bitcast %"class.std::__1::unique_ptr.2425"* %143 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %143, i64 1
  %151 = ptrtoint %"class.std::__1::unique_ptr.2425"* %150 to i64
  %152 = bitcast %"class.std::__1::unique_ptr.2425"** %142 to i64*
  store i64 %151, i64* %152, align 8
  br label %154

153:                                              ; preds = %108
  call void @_ZNSt3__16vectorINS_10unique_ptrINS0_IdNS_9allocatorIdEEEENS_14default_deleteIS4_EEEENS2_IS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.2423"* %114, %"class.std::__1::unique_ptr.2425"* nonnull dereferenceable(8) %7) #19
  br label %154

154:                                              ; preds = %147, %153
  %155 = load %"class.std::__1::vector.2428"*, %"class.std::__1::vector.2428"** %38, align 8
  store %"class.std::__1::vector.2428"* null, %"class.std::__1::vector.2428"** %38, align 8
  %156 = icmp eq %"class.std::__1::vector.2428"* %155, null
  br i1 %156, label %168, label %157

157:                                              ; preds = %154
  %158 = getelementptr inbounds %"class.std::__1::vector.2428", %"class.std::__1::vector.2428"* %155, i64 0, i32 0, i32 0
  %159 = load double*, double** %158, align 8
  %160 = icmp eq double* %159, null
  br i1 %160, label %166, label %161

161:                                              ; preds = %157
  %162 = ptrtoint double* %159 to i64
  %163 = getelementptr inbounds %"class.std::__1::vector.2428", %"class.std::__1::vector.2428"* %155, i64 0, i32 0, i32 1
  %164 = bitcast double** %163 to i64*
  store i64 %162, i64* %164, align 8
  %165 = bitcast double* %159 to i8*
  call void @_ZdlPv(i8* %165) #18
  br label %166

166:                                              ; preds = %161, %157
  %167 = bitcast %"class.std::__1::vector.2428"* %155 to i8*
  call void @_ZdlPv(i8* %167) #18
  br label %168

168:                                              ; preds = %154, %166
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #19
  %169 = getelementptr inbounds %"struct.blink::LayoutText::TextBoxInfo", %"struct.blink::LayoutText::TextBoxInfo"* %53, i64 1
  %170 = icmp eq %"struct.blink::LayoutText::TextBoxInfo"* %169, %22
  br i1 %170, label %40, label %52

171:                                              ; preds = %2
  %172 = bitcast { i64, i64 }* %3 to %"struct.blink::PhysicalRect"*
  %173 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 6, i32 0, i32 0
  %174 = load %"class.blink::Node"*, %"class.blink::Node"** %173, align 8
  %175 = icmp eq %"class.blink::Node"* %174, null
  br i1 %175, label %176, label %183

176:                                              ; preds = %171, %176
  %177 = phi %"class.blink::LayoutObject"* [ %179, %176 ], [ %1, %171 ]
  %178 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %177, i64 0, i32 7
  %179 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %178, align 8
  %180 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %179, i64 0, i32 6, i32 0, i32 0
  %181 = load %"class.blink::Node"*, %"class.blink::Node"** %180, align 8
  %182 = icmp eq %"class.blink::Node"* %181, null
  br i1 %182, label %176, label %183

183:                                              ; preds = %176, %171
  %184 = phi %"class.blink::Node"* [ %174, %171 ], [ %181, %176 ]
  %185 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %184, i64 0, i32 3, i32 0, i32 0
  %186 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %185, align 8
  %187 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %186, i64 0, i32 2, i32 0, i32 0
  %188 = load %"class.blink::Document"*, %"class.blink::Document"** %187, align 8
  %189 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %188) #19
  %190 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %190) #19
  %191 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %192 = tail call { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject28AbsoluteBoundingBoxFloatRectEj(%"class.blink::LayoutObject"* %1, i32 0) #19
  %193 = extractvalue { <2 x float>, <2 x float> } %192, 0
  %194 = extractvalue { <2 x float>, <2 x float> } %192, 1
  %195 = extractelement <2 x float> %193, i32 0
  %196 = fmul float %195, 6.400000e+01
  %197 = tail call float @llvm.floor.f32(float %196) #19
  %198 = fcmp ult float %197, 0xC1E0000000000000
  %199 = fcmp ugt float %197, 0x41DFFFFFE0000000
  %200 = fcmp ogt float %197, 0xC1E0000000000000
  %201 = select i1 %200, float %197, float 0xC1E0000000000000
  %202 = fptosi float %201 to i32
  %203 = select i1 %198, i32 0, i32 2147483647
  %204 = select i1 %199, i32 %203, i32 %202
  %205 = extractelement <2 x float> %193, i32 1
  %206 = fmul float %205, 6.400000e+01
  %207 = tail call float @llvm.floor.f32(float %206) #19
  %208 = fcmp ult float %207, 0xC1E0000000000000
  %209 = fcmp ugt float %207, 0x41DFFFFFE0000000
  %210 = fcmp ogt float %207, 0xC1E0000000000000
  %211 = select i1 %210, float %207, float 0xC1E0000000000000
  %212 = fptosi float %211 to i32
  %213 = select i1 %208, i32 0, i32 2147483647
  %214 = select i1 %209, i32 %213, i32 %212
  %215 = extractelement <2 x float> %194, i32 0
  %216 = fadd float %195, %215
  %217 = fmul float %216, 6.400000e+01
  %218 = tail call float @llvm.ceil.f32(float %217) #19
  %219 = fcmp ult float %218, 0xC1E0000000000000
  %220 = fcmp ugt float %218, 0x41DFFFFFE0000000
  %221 = fcmp ogt float %218, 0xC1E0000000000000
  %222 = select i1 %221, float %218, float 0xC1E0000000000000
  %223 = fptosi float %222 to i32
  %224 = select i1 %219, i32 0, i32 2147483647
  %225 = select i1 %220, i32 %224, i32 %223
  %226 = icmp sgt i32 %204, -1
  %227 = select i1 %226, i32 -2147483648, i32 2147483647
  %228 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %225, i32 %204) #19
  %229 = extractvalue { i32, i1 } %228, 1
  %230 = extractvalue { i32, i1 } %228, 0
  %231 = select i1 %229, i32 %227, i32 %230, !prof !2
  %232 = extractelement <2 x float> %194, i32 1
  %233 = fadd float %205, %232
  %234 = fmul float %233, 6.400000e+01
  %235 = tail call float @llvm.ceil.f32(float %234) #19
  %236 = fcmp ult float %235, 0xC1E0000000000000
  %237 = fcmp ugt float %235, 0x41DFFFFFE0000000
  %238 = fcmp ogt float %235, 0xC1E0000000000000
  %239 = select i1 %238, float %235, float 0xC1E0000000000000
  %240 = fptosi float %239 to i32
  %241 = select i1 %236, i32 0, i32 2147483647
  %242 = select i1 %237, i32 %241, i32 %240
  %243 = icmp sgt i32 %214, -1
  %244 = select i1 %243, i32 -2147483648, i32 2147483647
  %245 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %242, i32 %214) #19
  %246 = extractvalue { i32, i1 } %245, 1
  %247 = extractvalue { i32, i1 } %245, 0
  %248 = select i1 %246, i32 %244, i32 %247, !prof !2
  %249 = zext i32 %214 to i64
  %250 = shl nuw i64 %249, 32
  %251 = zext i32 %204 to i64
  %252 = or i64 %250, %251
  %253 = zext i32 %248 to i64
  %254 = shl nuw i64 %253, 32
  %255 = zext i32 %231 to i64
  %256 = or i64 %254, %255
  %257 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  store i64 %252, i64* %257, align 8
  store i64 %256, i64* %191, align 8
  %258 = icmp eq %"class.blink::LocalFrameView"* %189, null
  br i1 %258, label %263, label %259

259:                                              ; preds = %183
  %260 = call { i64, i64 } @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_12PhysicalRectE(%"class.blink::LocalFrameView"* nonnull %189, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %172) #19
  %261 = extractvalue { i64, i64 } %260, 0
  %262 = extractvalue { i64, i64 } %260, 1
  br label %263

263:                                              ; preds = %183, %259
  %264 = phi i64 [ %261, %259 ], [ %252, %183 ]
  %265 = phi i64 [ %262, %259 ], [ %256, %183 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %190) #19
  %266 = trunc i64 %264 to i32
  %267 = lshr i64 %264, 32
  %268 = trunc i64 %267 to i32
  %269 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %270 = load %"class.std::__1::vector.2423"*, %"class.std::__1::vector.2423"** %269, align 8
  %271 = bitcast %"class.std::__1::unique_ptr.2425"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %271) #19
  %272 = sitofp i32 %266 to double
  %273 = fmul double %272, 1.562500e-02
  %274 = sitofp i32 %268 to double
  %275 = fmul double %274, 1.562500e-02
  %276 = trunc i64 %265 to i32
  %277 = sitofp i32 %276 to double
  %278 = fmul double %277, 1.562500e-02
  %279 = lshr i64 %265, 32
  %280 = trunc i64 %279 to i32
  %281 = sitofp i32 %280 to double
  %282 = fmul double %281, 1.562500e-02
  %283 = call i8* @_Znwm(i64 24) #18
  %284 = call i8* @_Znwm(i64 32) #18
  %285 = getelementptr inbounds i8, i8* %283, i64 8
  %286 = bitcast i8* %283 to i8**
  store i8* %284, i8** %286, align 8
  %287 = getelementptr inbounds i8, i8* %284, i64 32
  %288 = getelementptr inbounds i8, i8* %283, i64 16
  %289 = bitcast i8* %288 to i8**
  store i8* %287, i8** %289, align 8
  %290 = bitcast i8* %285 to i64*
  %291 = bitcast i8* %284 to double*
  store double %273, double* %291, align 8
  %292 = getelementptr inbounds i8, i8* %284, i64 8
  %293 = bitcast i8* %292 to double*
  store double %275, double* %293, align 8
  %294 = getelementptr inbounds i8, i8* %284, i64 16
  %295 = bitcast i8* %294 to double*
  store double %278, double* %295, align 8
  %296 = getelementptr inbounds i8, i8* %284, i64 24
  %297 = bitcast i8* %296 to double*
  store double %282, double* %297, align 8
  %298 = ptrtoint i8* %287 to i64
  store i64 %298, i64* %290, align 8
  %299 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %8, i64 0, i32 0, i32 0, i32 0
  %300 = bitcast %"class.std::__1::unique_ptr.2425"* %8 to i8**
  store i8* %283, i8** %300, align 8
  %301 = getelementptr inbounds %"class.std::__1::vector.2423", %"class.std::__1::vector.2423"* %270, i64 0, i32 0, i32 1
  %302 = load %"class.std::__1::unique_ptr.2425"*, %"class.std::__1::unique_ptr.2425"** %301, align 8
  %303 = getelementptr inbounds %"class.std::__1::vector.2423", %"class.std::__1::vector.2423"* %270, i64 0, i32 0, i32 2, i32 0, i32 0
  %304 = load %"class.std::__1::unique_ptr.2425"*, %"class.std::__1::unique_ptr.2425"** %303, align 8
  %305 = icmp ult %"class.std::__1::unique_ptr.2425"* %302, %304
  br i1 %305, label %306, label %312

306:                                              ; preds = %263
  %307 = ptrtoint i8* %283 to i64
  store %"class.std::__1::vector.2428"* null, %"class.std::__1::vector.2428"** %299, align 8
  %308 = bitcast %"class.std::__1::unique_ptr.2425"* %302 to i64*
  store i64 %307, i64* %308, align 8
  %309 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %302, i64 1
  %310 = ptrtoint %"class.std::__1::unique_ptr.2425"* %309 to i64
  %311 = bitcast %"class.std::__1::unique_ptr.2425"** %301 to i64*
  store i64 %310, i64* %311, align 8
  br label %313

312:                                              ; preds = %263
  call void @_ZNSt3__16vectorINS_10unique_ptrINS0_IdNS_9allocatorIdEEEENS_14default_deleteIS4_EEEENS2_IS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.2423"* %270, %"class.std::__1::unique_ptr.2425"* nonnull dereferenceable(8) %8) #19
  br label %313

313:                                              ; preds = %306, %312
  %314 = load %"class.std::__1::vector.2428"*, %"class.std::__1::vector.2428"** %299, align 8
  store %"class.std::__1::vector.2428"* null, %"class.std::__1::vector.2428"** %299, align 8
  %315 = icmp eq %"class.std::__1::vector.2428"* %314, null
  br i1 %315, label %327, label %316

316:                                              ; preds = %313
  %317 = getelementptr inbounds %"class.std::__1::vector.2428", %"class.std::__1::vector.2428"* %314, i64 0, i32 0, i32 0
  %318 = load double*, double** %317, align 8
  %319 = icmp eq double* %318, null
  br i1 %319, label %325, label %320

320:                                              ; preds = %316
  %321 = ptrtoint double* %318 to i64
  %322 = getelementptr inbounds %"class.std::__1::vector.2428", %"class.std::__1::vector.2428"* %314, i64 0, i32 0, i32 1
  %323 = bitcast double** %322 to i64*
  store i64 %321, i64* %323, align 8
  %324 = bitcast double* %318 to i8*
  call void @_ZdlPv(i8* %324) #18
  br label %325

325:                                              ; preds = %320, %316
  %326 = bitcast %"class.std::__1::vector.2428"* %314 to i8*
  call void @_ZdlPv(i8* %326) #18
  br label %327

327:                                              ; preds = %313, %325
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %271) #19
  br label %328

328:                                              ; preds = %327, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorHighlight27VisitAndCollectDistanceInfoENS_8PseudoIdEPNS_12LayoutObjectE(%"class.blink::InspectorHighlight"* nocapture readonly, i8 zeroext, %"class.blink::LayoutObject"*) local_unnamed_addr #1 align 2 {
  %4 = icmp eq i8 %1, 0
  br i1 %4, label %28, label %5

5:                                                ; preds = %3
  %6 = bitcast %"class.blink::LayoutObject"* %2 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %7 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %7, i64 13
  %9 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %8, align 8
  %10 = tail call %"class.blink::LayoutObjectChildList"* %9(%"class.blink::LayoutObject"* %2) #19
  %11 = icmp eq %"class.blink::LayoutObjectChildList"* %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %10, i64 0, i32 0
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = icmp eq %"class.blink::LayoutObject"* %14, null
  br i1 %15, label %28, label %16

16:                                               ; preds = %12, %24
  %17 = phi %"class.blink::LayoutObject"* [ %26, %24 ], [ %14, %12 ]
  %18 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %17, i64 0, i32 4
  %19 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %18 to i96*
  %20 = load i96, i96* %19, align 4
  %21 = and i96 %20, 16777216
  %22 = icmp eq i96 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %16
  tail call void @_ZN5blink18InspectorHighlight26AddLayoutBoxToDistanceInfoEPNS_12LayoutObjectE(%"class.blink::InspectorHighlight"* %0, %"class.blink::LayoutObject"* nonnull %17)
  br label %24

24:                                               ; preds = %16, %23
  %25 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %17, i64 0, i32 9
  %26 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %25, align 8
  %27 = icmp eq %"class.blink::LayoutObject"* %26, null
  br i1 %27, label %28, label %16

28:                                               ; preds = %24, %5, %12, %3
  ret void
}

declare %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) local_unnamed_addr #3

declare %"class.blink::Node"* @_ZN5blink19dom_traversal_utils10FirstChildERKNS_4NodeEb(%"class.blink::Node"* dereferenceable(64), i1 zeroext) local_unnamed_addr #3

declare %"class.blink::Node"* @_ZN5blink19dom_traversal_utils11NextSiblingERKNS_4NodeEb(%"class.blink::Node"* dereferenceable(64), i1 zeroext) local_unnamed_addr #3

declare void @_ZNK5blink10LayoutText14GetTextBoxInfoEv(%"class.WTF::Vector.2531"* sret, %"class.blink::LayoutText"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorHighlight22AppendEventTargetQuadsEPNS_4NodeERKNS_24InspectorHighlightConfigE(%"class.blink::InspectorHighlight"* nocapture readonly, %"class.blink::Node"* nocapture readonly, %"struct.blink::InspectorHighlightConfig"* dereferenceable(88)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::FloatQuad", align 4
  %5 = alloca %"class.blink::FloatQuad", align 4
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 6, i32 0, i32 0
  br i1 %10, label %16, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRareData"**
  %14 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %14, i64 0, i32 1, i32 0, i32 0
  br label %18

16:                                               ; preds = %3
  %17 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRenderingData"**
  br label %18

18:                                               ; preds = %12, %16
  %19 = phi %"class.blink::NodeRenderingData"** [ %15, %12 ], [ %17, %16 ]
  %20 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %20, i64 0, i32 1
  %22 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %23 = icmp eq %"class.blink::LayoutObject"* %22, null
  br i1 %23, label %50, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.blink::FloatQuad"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %25, i8 0, i64 32, i1 false) #19
  %26 = bitcast %"class.blink::FloatQuad"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %26, i8 0, i64 32, i1 false) #19
  %27 = call zeroext i1 @_ZN5blink22InspectorHighlightBase14BuildNodeQuadsEPNS_4NodeEPNS_9FloatQuadES4_S4_S4_(%"class.blink::Node"* %1, %"class.blink::FloatQuad"* nonnull %5, %"class.blink::FloatQuad"* nonnull %5, %"class.blink::FloatQuad"* nonnull %4, %"class.blink::FloatQuad"* nonnull %5)
  br i1 %27, label %28, label %49

28:                                               ; preds = %24
  %29 = bitcast %"class.blink::InspectorHighlight"* %0 to %"class.blink::InspectorHighlightBase"*
  %30 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %2, i64 0, i32 5
  %31 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #19
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %32, align 8
  call void @_ZN5blink22InspectorHighlightBase10AppendQuadERKNS_9FloatQuadERKNS_5ColorES6_RKN3WTF6StringE(%"class.blink::InspectorHighlightBase"* %29, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %4, %"class.blink::Color"* dereferenceable(4) %30, %"class.blink::Color"* nonnull dereferenceable(4) @.ref.tmp.12, %"class.WTF::String"* nonnull dereferenceable(8) %6)
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #19
  br label %48

48:                                               ; preds = %28, %44, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #19
  br label %49

49:                                               ; preds = %48, %24
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #19
  br label %50

50:                                               ; preds = %18, %49
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::ShapeOutsideInfo"* @_ZN5blink12_GLOBAL__N_123ShapeOutsideInfoForNodeEPNS_4NodeEPNS_5Shape12DisplayPathsEPNS_9FloatQuadE(%"class.blink::Node"* nocapture readonly, %"struct.blink::Shape::DisplayPaths"*, %"class.blink::FloatQuad"* nocapture) unnamed_addr #4 {
  %4 = alloca <2 x float>, align 8
  %5 = alloca <2 x float>, align 8
  %6 = alloca <2 x float>, align 8
  %7 = alloca <2 x float>, align 8
  %8 = alloca %"class.blink::FloatQuad", align 8
  %9 = alloca <2 x float>, align 8
  %10 = alloca <2 x float>, align 8
  %11 = alloca <2 x float>, align 8
  %12 = alloca <2 x float>, align 8
  %13 = alloca %"class.blink::FloatQuad", align 4
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %17, label %23, label %19

19:                                               ; preds = %3
  %20 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRareData"**
  %21 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %21, i64 0, i32 1, i32 0, i32 0
  br label %25

23:                                               ; preds = %3
  %24 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRenderingData"**
  br label %25

25:                                               ; preds = %19, %23
  %26 = phi %"class.blink::NodeRenderingData"** [ %22, %19 ], [ %24, %23 ]
  %27 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %27, i64 0, i32 1
  %29 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %28, align 8
  %30 = icmp eq %"class.blink::LayoutObject"* %29, null
  br i1 %30, label %135, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %29, i64 0, i32 4
  %33 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %32 to i96*
  %34 = load i96, i96* %33, align 4
  %35 = and i96 %34, 67108864
  %36 = icmp eq i96 %35, 0
  br i1 %36, label %135, label %37

37:                                               ; preds = %31
  %38 = bitcast %"class.blink::LayoutObject"* %29 to %"class.blink::LayoutBox"*
  %39 = tail call %"class.blink::ShapeOutsideInfo"* @_ZNK5blink9LayoutBox19GetShapeOutsideInfoEv(%"class.blink::LayoutBox"* nonnull %38) #19
  %40 = icmp eq %"class.blink::ShapeOutsideInfo"* %39, null
  br i1 %40, label %135, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %43 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %43, i64 0, i32 2, i32 0, i32 0
  %45 = load %"class.blink::Document"*, %"class.blink::Document"** %44, align 8
  %46 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %45) #19
  %47 = tail call %"class.blink::ShapeOutsideInfo"* @_ZNK5blink9LayoutBox19GetShapeOutsideInfoEv(%"class.blink::LayoutBox"* nonnull %38) #19
  %48 = tail call dereferenceable(16) %"class.blink::Shape"* @_ZNK5blink16ShapeOutsideInfo13ComputedShapeEv(%"class.blink::ShapeOutsideInfo"* %47) #19
  %49 = bitcast %"class.blink::Shape"* %48 to void (%"class.blink::Shape"*, %"struct.blink::Shape::DisplayPaths"*)***
  %50 = load void (%"class.blink::Shape"*, %"struct.blink::Shape::DisplayPaths"*)**, void (%"class.blink::Shape"*, %"struct.blink::Shape::DisplayPaths"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.blink::Shape"*, %"struct.blink::Shape::DisplayPaths"*)*, void (%"class.blink::Shape"*, %"struct.blink::Shape::DisplayPaths"*)** %50, i64 5
  %52 = load void (%"class.blink::Shape"*, %"struct.blink::Shape::DisplayPaths"*)*, void (%"class.blink::Shape"*, %"struct.blink::Shape::DisplayPaths"*)** %51, align 8
  tail call void %52(%"class.blink::Shape"* %48, %"struct.blink::Shape::DisplayPaths"* dereferenceable(32) %1) #19
  %53 = tail call { i64, i64 } @_ZNK5blink16ShapeOutsideInfo32ComputedShapePhysicalBoundingBoxEv(%"class.blink::ShapeOutsideInfo"* %47) #19
  %54 = extractvalue { i64, i64 } %53, 0
  %55 = trunc i64 %54 to i32
  %56 = lshr i64 %54, 32
  %57 = trunc i64 %56 to i32
  %58 = extractvalue { i64, i64 } %53, 1
  %59 = bitcast %"class.blink::FloatQuad"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %59) #19
  %60 = bitcast %"class.blink::FloatQuad"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %60) #19, !noalias !32
  %61 = sitofp i32 %55 to float
  %62 = fmul float %61, 1.562500e-02
  %63 = sitofp i32 %57 to float
  %64 = fmul float %63, 1.562500e-02
  %65 = trunc i64 %58 to i32
  %66 = sitofp i32 %65 to float
  %67 = fmul float %66, 1.562500e-02
  %68 = lshr i64 %58, 32
  %69 = trunc i64 %68 to i32
  %70 = sitofp i32 %69 to float
  %71 = fmul float %70, 1.562500e-02
  %72 = insertelement <2 x float> undef, float %62, i32 0
  %73 = insertelement <2 x float> %72, float %64, i32 1
  %74 = bitcast %"class.blink::FloatQuad"* %8 to <2 x float>*
  store <2 x float> %73, <2 x float>* %74, align 8, !noalias !32
  %75 = fadd float %62, %67
  %76 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %8, i64 0, i32 1, i32 0
  store float %75, float* %76, align 8, !noalias !32
  %77 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %8, i64 0, i32 1, i32 1
  store float %64, float* %77, align 4, !noalias !32
  %78 = fadd float %64, %71
  %79 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %8, i64 0, i32 2, i32 0
  store float %75, float* %79, align 8, !noalias !32
  %80 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %8, i64 0, i32 2, i32 1
  store float %78, float* %80, align 4, !noalias !32
  %81 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %8, i64 0, i32 3, i32 0
  store float %62, float* %81, align 8, !noalias !32
  %82 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %8, i64 0, i32 3, i32 1
  store float %78, float* %82, align 4, !noalias !32
  call void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* nonnull sret %13, %"class.blink::LayoutObject"* nonnull %29, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %8, %"class.blink::LayoutBoxModelObject"* null, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %60) #19, !noalias !32
  %83 = bitcast %"class.blink::FloatQuad"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %83, i8* nonnull align 4 %59, i64 32, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %59) #19
  %84 = bitcast %"class.blink::FloatQuad"* %2 to <2 x float>*
  %85 = bitcast %"class.blink::FloatQuad"* %2 to i64*
  %86 = load i64, i64* %85, align 4
  %87 = bitcast <2 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87)
  %88 = bitcast <2 x float>* %6 to %"class.blink::FloatPoint"*
  %89 = bitcast <2 x float>* %7 to %"class.blink::FloatPoint"*
  %90 = bitcast <2 x float>* %6 to i64*
  store i64 %86, i64* %90, align 8
  %91 = bitcast <2 x float>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #19
  %92 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %46, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %88) #19
  store <2 x float> %92, <2 x float>* %7, align 8
  %93 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %46) #19
  %94 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %93) #19
  %95 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %94, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %89) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87)
  store <2 x float> %95, <2 x float>* %84, align 4
  %96 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %2, i64 0, i32 1
  %97 = bitcast %"class.blink::FloatPoint"* %96 to <2 x float>*
  %98 = bitcast %"class.blink::FloatPoint"* %96 to i64*
  %99 = load i64, i64* %98, align 4
  %100 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100)
  %101 = bitcast <2 x float>* %4 to %"class.blink::FloatPoint"*
  %102 = bitcast <2 x float>* %5 to %"class.blink::FloatPoint"*
  %103 = bitcast <2 x float>* %4 to i64*
  store i64 %99, i64* %103, align 8
  %104 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #19
  %105 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %46, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %101) #19
  store <2 x float> %105, <2 x float>* %5, align 8
  %106 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %46) #19
  %107 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %106) #19
  %108 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %107, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %102) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100)
  store <2 x float> %108, <2 x float>* %97, align 4
  %109 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %2, i64 0, i32 2
  %110 = bitcast %"class.blink::FloatPoint"* %109 to i64*
  %111 = load i64, i64* %110, align 4
  %112 = bitcast <2 x float>* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #19
  %113 = bitcast <2 x float>* %11 to %"class.blink::FloatPoint"*
  %114 = bitcast <2 x float>* %12 to %"class.blink::FloatPoint"*
  %115 = bitcast <2 x float>* %11 to i64*
  store i64 %111, i64* %115, align 8
  %116 = bitcast <2 x float>* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #19
  %117 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %46, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %113) #19
  store <2 x float> %117, <2 x float>* %12, align 8
  %118 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %46) #19
  %119 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %118) #19
  %120 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %119, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %114) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #19
  %121 = bitcast %"class.blink::FloatPoint"* %109 to <2 x float>*
  store <2 x float> %120, <2 x float>* %121, align 4
  %122 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %2, i64 0, i32 3
  %123 = bitcast %"class.blink::FloatPoint"* %122 to i64*
  %124 = load i64, i64* %123, align 4
  %125 = bitcast <2 x float>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #19
  %126 = bitcast <2 x float>* %9 to %"class.blink::FloatPoint"*
  %127 = bitcast <2 x float>* %10 to %"class.blink::FloatPoint"*
  %128 = bitcast <2 x float>* %9 to i64*
  store i64 %124, i64* %128, align 8
  %129 = bitcast <2 x float>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #19
  %130 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %46, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %126) #19
  store <2 x float> %130, <2 x float>* %10, align 8
  %131 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %46) #19
  %132 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %131) #19
  %133 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %132, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %127) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #19
  %134 = bitcast %"class.blink::FloatPoint"* %122 to <2 x float>*
  store <2 x float> %133, <2 x float>* %134, align 4
  br label %135

135:                                              ; preds = %31, %25, %37, %41
  %136 = phi %"class.blink::ShapeOutsideInfo"* [ %47, %41 ], [ null, %37 ], [ null, %25 ], [ null, %31 ]
  ret %"class.blink::ShapeOutsideInfo"* %136
}

declare float @_ZNK5blink4Path6lengthEv(%"class.blink::Path"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink18InspectorHighlight13BuildSVGQuadsEPNS_4NodeERN3WTF6VectorINS_9FloatQuadELj0ENS3_18PartitionAllocatorEEE(%"class.blink::Node"*, %"class.WTF::Vector.2542"* dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %6, label %12, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::NodeData"** %7 to %"class.blink::NodeRareData"**
  %10 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %10, i64 0, i32 1, i32 0, i32 0
  br label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.blink::NodeData"** %7 to %"class.blink::NodeRenderingData"**
  br label %14

14:                                               ; preds = %8, %12
  %15 = phi %"class.blink::NodeRenderingData"** [ %11, %8 ], [ %13, %12 ]
  %16 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %16, i64 0, i32 1
  %18 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %17, align 8
  %19 = icmp eq %"class.blink::LayoutObject"* %18, null
  br i1 %19, label %42, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %18, i64 0, i32 4
  %22 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %21 to i96*
  %23 = load i96, i96* %22, align 4
  %24 = and i96 %23, 16777216
  %25 = icmp eq i96 %24, 0
  br i1 %25, label %26, label %42

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %18, i64 0, i32 6, i32 0, i32 0
  %28 = load %"class.blink::Node"*, %"class.blink::Node"** %27, align 8
  %29 = icmp eq %"class.blink::Node"* %28, null
  br i1 %29, label %42, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 48
  %34 = icmp eq i32 %33, 32
  br i1 %34, label %35, label %42

35:                                               ; preds = %30
  %36 = bitcast %"class.blink::LayoutObject"* %18 to i1 (%"class.blink::LayoutObject"*, i32)***
  %37 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %36, align 8
  %38 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %37, i64 92
  %39 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %38, align 8
  %40 = tail call zeroext i1 %39(%"class.blink::LayoutObject"* nonnull %18, i32 67) #19
  br i1 %40, label %42, label %41

41:                                               ; preds = %35
  tail call fastcc void @_ZN5blink12_GLOBAL__N_112CollectQuadsEPNS_4NodeERN3WTF6VectorINS_9FloatQuadELj0ENS3_18PartitionAllocatorEEE(%"class.blink::Node"* %0, %"class.WTF::Vector.2542"* dereferenceable(16) %1)
  br label %42

42:                                               ; preds = %20, %30, %35, %26, %14, %41
  %43 = phi i1 [ true, %41 ], [ false, %14 ], [ false, %26 ], [ false, %35 ], [ false, %30 ], [ false, %20 ]
  ret i1 %43
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::protocol::DictionaryValue"* @_ZN5blink12_GLOBAL__N_122BuildFlexContainerInfoEPNS_4NodeERKNS_37InspectorFlexContainerHighlightConfigEf(%"class.blink::Node"*, %"struct.blink::InspectorFlexContainerHighlightConfig"* dereferenceable(144), float) unnamed_addr #4 {
  %4 = alloca <2 x float>, align 8
  %5 = alloca <2 x float>, align 8
  %6 = alloca <2 x float>, align 8
  %7 = alloca <2 x float>, align 8
  %8 = alloca <2 x float>, align 8
  %9 = alloca <2 x float>, align 8
  %10 = alloca <2 x float>, align 8
  %11 = alloca <2 x float>, align 8
  %12 = alloca %"class.std::__1::unique_ptr.2440", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.WTF::String", align 8
  %20 = alloca %"class.WTF::String", align 8
  %21 = alloca %"class.blink::Path", align 8
  %22 = alloca %"class.blink::AffineTransform", align 8
  %23 = alloca <2 x float>, align 8
  %24 = alloca <2 x float>, align 8
  %25 = alloca <2 x float>, align 8
  %26 = alloca <2 x float>, align 8
  %27 = alloca <2 x float>, align 8
  %28 = alloca <2 x float>, align 8
  %29 = alloca <2 x float>, align 8
  %30 = alloca <2 x float>, align 8
  %31 = alloca %"class.blink::FloatQuad", align 8
  %32 = alloca %"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator", align 8
  %33 = alloca %"class.base::CheckedContiguousIterator", align 8
  %34 = alloca %"class.base::CheckedContiguousIterator", align 8
  %35 = alloca %"struct.std::__1::pair.2991", align 4
  %36 = alloca %"class.blink::Path", align 8
  %37 = alloca %"class.blink::AffineTransform", align 8
  %38 = alloca <2 x float>, align 8
  %39 = alloca <2 x float>, align 8
  %40 = alloca <2 x float>, align 8
  %41 = alloca <2 x float>, align 8
  %42 = alloca <2 x float>, align 8
  %43 = alloca <2 x float>, align 8
  %44 = alloca <2 x float>, align 8
  %45 = alloca <2 x float>, align 8
  %46 = alloca %"class.blink::FloatQuad", align 8
  %47 = alloca %"class.WTF::String", align 8
  %48 = alloca %"class.blink::(anonymous namespace)::PathBuilder", align 8
  %49 = alloca %"class.blink::FloatQuad", align 8
  %50 = alloca %"class.blink::Path", align 8
  %51 = alloca %"class.WTF::Vector.2985", align 8
  %52 = alloca %"class.blink::FloatQuad", align 8
  %53 = alloca %"class.blink::(anonymous namespace)::PathBuilder", align 8
  %54 = alloca %"class.blink::Path", align 8
  %55 = alloca %"class.WTF::String", align 8
  %56 = alloca %"class.WTF::String", align 8
  %57 = alloca %"class.WTF::String", align 8
  %58 = alloca %"class.WTF::String", align 8
  %59 = alloca %"class.WTF::String", align 8
  %60 = alloca %"class.WTF::String", align 8
  %61 = alloca %"class.WTF::String", align 8
  %62 = alloca %"class.WTF::String", align 8
  %63 = alloca %"class.WTF::String", align 8
  %64 = alloca %"class.WTF::String", align 8
  %65 = alloca %"class.WTF::String", align 8
  %66 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #19
  %67 = bitcast i8* %66 to %"class.blink::CSSComputedStyleDeclaration"*
  %68 = bitcast %"class.WTF::String"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #19
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %47, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %69, align 8
  call void @_ZN5blink27CSSComputedStyleDeclarationC1EPNS_4NodeEbRKN3WTF6StringE(%"class.blink::CSSComputedStyleDeclaration"* %67, %"class.blink::Node"* %0, i1 zeroext true, %"class.WTF::String"* nonnull dereferenceable(8) %47) #19
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %3
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #19
  br label %85

85:                                               ; preds = %3, %81, %84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #19
  %86 = getelementptr inbounds i8, i8* %66, i64 -4
  %87 = bitcast i8* %86 to i16*
  %88 = load atomic i16, i16* %87 monotonic, align 2
  %89 = or i16 %88, 1
  store atomic i16 %89, i16* %87 release, align 2
  %90 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %91 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %91, i64 0, i32 2, i32 0, i32 0
  %93 = load %"class.blink::Document"*, %"class.blink::Document"** %92, align 8
  %94 = call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %93) #19
  %95 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %96 = load i32, i32* %95, align 8
  %97 = and i32 %96, 1
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %98, label %104, label %100

100:                                              ; preds = %85
  %101 = bitcast %"class.blink::NodeData"** %99 to %"class.blink::NodeRareData"**
  %102 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %102, i64 0, i32 1, i32 0, i32 0
  br label %106

104:                                              ; preds = %85
  %105 = bitcast %"class.blink::NodeData"** %99 to %"class.blink::NodeRenderingData"**
  br label %106

106:                                              ; preds = %100, %104
  %107 = phi %"class.blink::NodeRenderingData"** [ %103, %100 ], [ %105, %104 ]
  %108 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %108, i64 0, i32 1
  %110 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %109, align 8
  %111 = bitcast %"class.blink::LayoutObject"* %110 to %"class.blink::LayoutBox"*
  %112 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %110, i64 0, i32 5, i32 0
  %113 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %113, i64 0, i32 0, i32 9
  %115 = bitcast [20 x i8]* %114 to i160*
  %116 = load i160, i160* %115, align 8
  %117 = and i160 %116, 15211807202738752817960438464512
  %118 = icmp eq i160 %117, 0
  %119 = lshr i160 %116, 32
  %120 = trunc i160 %119 to i32
  %121 = and i32 %120, 30
  %122 = or i32 %121, 1
  %123 = icmp eq i32 %122, 15
  %124 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %113, i64 0, i32 0, i32 3, i32 0, i32 0
  %125 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %124, align 8
  br i1 %123, label %126, label %135

126:                                              ; preds = %106
  %127 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %125, i64 0, i32 2, i32 0, i32 0
  %128 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %127, align 8
  %129 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %128, i64 0, i32 13
  %130 = bitcast [3 x i8]* %129 to i24*
  %131 = load i24, i24* %130, align 8
  %132 = icmp slt i24 %131, 0
  %133 = and i160 %116, 324518553658426726783156020576256
  %134 = icmp ne i160 %133, 0
  br label %145

135:                                              ; preds = %106
  %136 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %125, i64 0, i32 12
  %137 = load i16, i16* %136, align 4
  %138 = lshr i16 %137, 5
  %139 = and i16 %138, 2
  %140 = or i16 %139, 1
  %141 = icmp eq i16 %140, 3
  %142 = and i16 %137, 32
  %143 = or i16 %142, 64
  %144 = icmp eq i16 %143, 96
  br label %145

145:                                              ; preds = %126, %135
  %146 = phi i1 [ %141, %135 ], [ %132, %126 ]
  %147 = phi i1 [ %144, %135 ], [ %134, %126 ]
  %148 = xor i1 %118, %146
  %149 = call i8* @_Znwm(i64 80) #18
  %150 = bitcast i8* %149 to %"class.blink::protocol::DictionaryValue"*
  call void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"* nonnull %150) #19
  %151 = bitcast %"class.blink::(anonymous namespace)::PathBuilder"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %151) #19
  %152 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %48, i64 0, i32 0
  %153 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %48, i64 0, i32 1, i32 0, i32 0, i32 0
  %154 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %48, i64 0, i32 1
  %155 = bitcast %"class.std::__1::unique_ptr.2401"* %154 to i64*
  store i64 -6148914691236517206, i64* %155, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_111PathBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %152, align 8
  %156 = call i8* @_Znwm(i64 40) #18
  %157 = bitcast i8* %156 to %"class.blink::protocol::ListValue"*
  call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %157) #19
  %158 = bitcast %"class.blink::protocol::ListValue"** %153 to i8**
  store i8* %156, i8** %158, align 8
  %159 = call { i64, i64 } @_ZNK5blink9LayoutBox22PhysicalContentBoxRectEv(%"class.blink::LayoutBox"* %111)
  %160 = extractvalue { i64, i64 } %159, 0
  %161 = trunc i64 %160 to i32
  %162 = lshr i64 %160, 32
  %163 = trunc i64 %162 to i32
  %164 = extractvalue { i64, i64 } %159, 1
  %165 = bitcast %"class.blink::FloatQuad"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %165) #19
  %166 = bitcast %"class.blink::FloatQuad"* %46 to i8*
  %167 = bitcast %"class.blink::FloatQuad"* %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %167, i8 -1, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %166) #19, !noalias !37
  %168 = sitofp i32 %161 to float
  %169 = fmul float %168, 1.562500e-02
  %170 = sitofp i32 %163 to float
  %171 = fmul float %170, 1.562500e-02
  %172 = trunc i64 %164 to i32
  %173 = sitofp i32 %172 to float
  %174 = fmul float %173, 1.562500e-02
  %175 = lshr i64 %164, 32
  %176 = trunc i64 %175 to i32
  %177 = sitofp i32 %176 to float
  %178 = fmul float %177, 1.562500e-02
  %179 = insertelement <2 x float> undef, float %169, i32 0
  %180 = insertelement <2 x float> %179, float %171, i32 1
  %181 = bitcast %"class.blink::FloatQuad"* %46 to <2 x float>*
  store <2 x float> %180, <2 x float>* %181, align 8, !noalias !37
  %182 = fadd float %169, %174
  %183 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %46, i64 0, i32 1, i32 0
  store float %182, float* %183, align 8, !noalias !37
  %184 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %46, i64 0, i32 1, i32 1
  store float %171, float* %184, align 4, !noalias !37
  %185 = fadd float %171, %178
  %186 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %46, i64 0, i32 2, i32 0
  store float %182, float* %186, align 8, !noalias !37
  %187 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %46, i64 0, i32 2, i32 1
  store float %185, float* %187, align 4, !noalias !37
  %188 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %46, i64 0, i32 3, i32 0
  store float %169, float* %188, align 8, !noalias !37
  %189 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %46, i64 0, i32 3, i32 1
  store float %185, float* %189, align 4, !noalias !37
  call void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* nonnull sret %49, %"class.blink::LayoutObject"* %110, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %46, %"class.blink::LayoutBoxModelObject"* null, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %166) #19, !noalias !37
  %190 = bitcast %"class.blink::FloatQuad"* %49 to <2 x float>*
  %191 = bitcast %"class.blink::FloatQuad"* %49 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = bitcast <2 x float>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193)
  %194 = bitcast <2 x float>* %10 to %"class.blink::FloatPoint"*
  %195 = bitcast <2 x float>* %11 to %"class.blink::FloatPoint"*
  %196 = bitcast <2 x float>* %10 to i64*
  store i64 %192, i64* %196, align 8
  %197 = bitcast <2 x float>* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %197) #19
  %198 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %94, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %194) #19
  store <2 x float> %198, <2 x float>* %11, align 8
  %199 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %94) #19
  %200 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %199) #19
  %201 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %200, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %195) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %197) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193)
  store <2 x float> %201, <2 x float>* %190, align 8
  %202 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %49, i64 0, i32 1
  %203 = bitcast %"class.blink::FloatPoint"* %202 to <2 x float>*
  %204 = bitcast %"class.blink::FloatPoint"* %202 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = bitcast <2 x float>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %206)
  %207 = bitcast <2 x float>* %8 to %"class.blink::FloatPoint"*
  %208 = bitcast <2 x float>* %9 to %"class.blink::FloatPoint"*
  %209 = bitcast <2 x float>* %8 to i64*
  store i64 %205, i64* %209, align 8
  %210 = bitcast <2 x float>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %210) #19
  %211 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %94, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %207) #19
  store <2 x float> %211, <2 x float>* %9, align 8
  %212 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %94) #19
  %213 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %212) #19
  %214 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %213, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %208) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %210) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %206)
  store <2 x float> %214, <2 x float>* %203, align 8
  %215 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %49, i64 0, i32 2
  %216 = bitcast %"class.blink::FloatPoint"* %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = bitcast <2 x float>* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %218) #19
  %219 = bitcast <2 x float>* %44 to %"class.blink::FloatPoint"*
  %220 = bitcast <2 x float>* %45 to %"class.blink::FloatPoint"*
  %221 = bitcast <2 x float>* %44 to i64*
  store i64 %217, i64* %221, align 8
  %222 = bitcast <2 x float>* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %222) #19
  %223 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %94, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %219) #19
  store <2 x float> %223, <2 x float>* %45, align 8
  %224 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %94) #19
  %225 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %224) #19
  %226 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %225, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %220) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %222) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %218) #19
  %227 = bitcast %"class.blink::FloatPoint"* %215 to <2 x float>*
  store <2 x float> %226, <2 x float>* %227, align 8
  %228 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %49, i64 0, i32 3
  %229 = bitcast %"class.blink::FloatPoint"* %228 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = bitcast <2 x float>* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %231) #19
  %232 = bitcast <2 x float>* %42 to %"class.blink::FloatPoint"*
  %233 = bitcast <2 x float>* %43 to %"class.blink::FloatPoint"*
  %234 = bitcast <2 x float>* %42 to i64*
  store i64 %230, i64* %234, align 8
  %235 = bitcast <2 x float>* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %235) #19
  %236 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %94, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %232) #19
  store <2 x float> %236, <2 x float>* %43, align 8
  %237 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %94) #19
  %238 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %237) #19
  %239 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %238, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %233) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %235) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %231) #19
  %240 = bitcast %"class.blink::FloatPoint"* %228 to <2 x float>*
  store <2 x float> %239, <2 x float>* %240, align 8
  %241 = bitcast %"class.blink::Path"* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %241) #19
  %242 = bitcast <2 x float>* %38 to %"class.blink::FloatPoint"*
  %243 = bitcast <2 x float>* %39 to %"class.blink::FloatPoint"*
  %244 = bitcast <2 x float>* %40 to %"class.blink::FloatPoint"*
  %245 = bitcast <2 x float>* %41 to %"class.blink::FloatPoint"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %241, i8 -86, i64 16, i1 false) #19, !alias.scope !42
  call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* nonnull %50) #19
  %246 = bitcast <2 x float>* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %246) #19, !noalias !42
  %247 = load i64, i64* %191, align 8, !noalias !42
  %248 = bitcast <2 x float>* %38 to i64*
  store i64 %247, i64* %248, align 8, !noalias !42
  call void @_ZN5blink4Path6MoveToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %50, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %242) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %246) #19, !noalias !42
  %249 = bitcast <2 x float>* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %249) #19, !noalias !42
  %250 = load i64, i64* %204, align 8, !noalias !42
  %251 = bitcast <2 x float>* %39 to i64*
  store i64 %250, i64* %251, align 8, !noalias !42
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %50, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %243) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %249) #19, !noalias !42
  %252 = bitcast <2 x float>* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %252) #19, !noalias !42
  %253 = load i64, i64* %216, align 8, !noalias !42
  %254 = bitcast <2 x float>* %40 to i64*
  store i64 %253, i64* %254, align 8, !noalias !42
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %50, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %244) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %252) #19, !noalias !42
  %255 = bitcast <2 x float>* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %255) #19, !noalias !42
  %256 = load i64, i64* %229, align 8, !noalias !42
  %257 = bitcast <2 x float>* %41 to i64*
  store i64 %256, i64* %257, align 8, !noalias !42
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %50, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %245) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %255) #19, !noalias !42
  call void @_ZN5blink4Path12CloseSubpathEv(%"class.blink::Path"* nonnull %50) #19
  %258 = bitcast %"class.blink::Path"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %258) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %258, i8 -86, i64 16, i1 false) #19
  call void @_ZN5blink4PathC1ERKS0_(%"class.blink::Path"* nonnull %36, %"class.blink::Path"* nonnull dereferenceable(16) %50) #19
  %259 = bitcast %"class.blink::AffineTransform"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %259) #19
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %37) #19
  %260 = fpext float %2 to double
  %261 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEd(%"class.blink::AffineTransform"* nonnull %37, double %260) #19
  call void @_ZN5blink4Path9TransformERKNS_15AffineTransformE(%"class.blink::Path"* nonnull %36, %"class.blink::AffineTransform"* dereferenceable(48) %261) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %259) #19
  call void @_ZNK5blink4Path5ApplyEPvPFvS1_PKNS_11PathElementEE(%"class.blink::Path"* nonnull %36, i8* nonnull %151, void (i8*, %"struct.blink::PathElement"*)* nonnull @_ZN5blink12_GLOBAL__N_111PathBuilder17AppendPathElementEPvPKNS_11PathElementE) #19
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %36) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %258) #19
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %50) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %241) #19
  %262 = bitcast %"class.WTF::Vector.2985"* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %262) #19
  %263 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %51, i64 0, i32 0, i32 0, i32 0
  %264 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %51, i64 0, i32 0, i32 0, i32 1
  %265 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %51, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %262, i8 0, i64 16, i1 false) #19, !alias.scope !45
  %266 = bitcast %"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %266) #19, !noalias !45
  %267 = getelementptr inbounds %"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator", %"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator"* %32, i64 0, i32 0
  %268 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %110, i64 1, i32 9
  %269 = bitcast %"class.blink::LayoutObject"** %268 to %class.scoped_refptr.1712**
  %270 = load %class.scoped_refptr.1712*, %class.scoped_refptr.1712** %269, align 8, !noalias !45
  store %class.scoped_refptr.1712* %270, %class.scoped_refptr.1712** %267, align 8, !noalias !45
  %271 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %110, i64 1, i32 10, i32 0, i32 1, i32 0
  %272 = load i32, i32* %271, align 4, !noalias !45
  %273 = zext i32 %272 to i64
  %274 = getelementptr inbounds %class.scoped_refptr.1712, %class.scoped_refptr.1712* %270, i64 %273
  %275 = icmp eq i32 %272, 0
  br i1 %275, label %591, label %276

276:                                              ; preds = %145
  %277 = bitcast %"class.base::CheckedContiguousIterator"* %33 to i8*
  %278 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %33, i64 0, i32 1
  %279 = bitcast %"class.base::CheckedContiguousIterator"* %34 to i8*
  %280 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %34, i64 0, i32 1
  %281 = bitcast %"class.WTF::Vector.2985"* %51 to i64*
  %282 = bitcast %"struct.std::__1::pair.2991"* %35 to i8*
  %283 = getelementptr inbounds %"struct.std::__1::pair.2991", %"struct.std::__1::pair.2991"* %35, i64 0, i32 0, i32 0, i32 0, i32 0
  %284 = getelementptr inbounds %"struct.std::__1::pair.2991", %"struct.std::__1::pair.2991"* %35, i64 0, i32 0, i32 0, i32 1, i32 0
  %285 = getelementptr inbounds %"struct.std::__1::pair.2991", %"struct.std::__1::pair.2991"* %35, i64 0, i32 0, i32 1, i32 0, i32 0
  %286 = getelementptr inbounds %"struct.std::__1::pair.2991", %"struct.std::__1::pair.2991"* %35, i64 0, i32 0, i32 1, i32 1, i32 0
  %287 = getelementptr inbounds %"struct.std::__1::pair.2991", %"struct.std::__1::pair.2991"* %35, i64 0, i32 1
  br label %288

288:                                              ; preds = %298, %276
  %289 = call dereferenceable(72) %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink9LayoutBox22NGPhysicalFragmentList8IteratordeEv(%"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator"* nonnull %32) #19
  %290 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %289, i64 0, i32 6, i64 0
  %291 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %289, i64 0, i32 2
  %292 = load i32, i32* %291, align 4
  %293 = zext i32 %292 to i64
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %277) #19, !noalias !45
  %294 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %289, i64 0, i32 6, i64 %293
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %277, i8 -86, i64 24, i1 false) #19, !noalias !45
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink6NGLinkEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"* nonnull %33, %"struct.blink::NGLink"* %290, %"struct.blink::NGLink"* %290, %"struct.blink::NGLink"* %294) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %279) #19, !noalias !45
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %279, i8 -86, i64 24, i1 false) #19, !noalias !45
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink6NGLinkEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"* nonnull %34, %"struct.blink::NGLink"* %290, %"struct.blink::NGLink"* %294, %"struct.blink::NGLink"* %294) #19
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink6NGLinkEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"* nonnull %33, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %34) #19
  %295 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %278, align 8, !noalias !45
  %296 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %280, align 8, !noalias !45
  %297 = icmp eq %"struct.blink::NGLink"* %295, %296
  br i1 %297, label %298, label %302

298:                                              ; preds = %585, %288
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %279) #19, !noalias !45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %277) #19, !noalias !45
  %299 = load %class.scoped_refptr.1712*, %class.scoped_refptr.1712** %267, align 8, !noalias !45
  %300 = getelementptr inbounds %class.scoped_refptr.1712, %class.scoped_refptr.1712* %299, i64 1
  store %class.scoped_refptr.1712* %300, %class.scoped_refptr.1712** %267, align 8, !noalias !45
  %301 = icmp eq %class.scoped_refptr.1712* %300, %274
  br i1 %301, label %591, label %288

302:                                              ; preds = %288, %585
  %303 = phi i32 [ %586, %585 ], [ 0, %288 ]
  %304 = call dereferenceable(16) %"struct.blink::NGLink"* @_ZNK4base25CheckedContiguousIteratorIKN5blink6NGLinkEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %33) #19
  %305 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %304, i64 0, i32 0
  %306 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %305, align 8
  %307 = icmp eq %"class.blink::NGPhysicalFragment"* %306, null
  br i1 %307, label %585, label %308

308:                                              ; preds = %302
  %309 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %306, i64 0, i32 3
  %310 = bitcast i24* %309 to i32*
  %311 = load i32, i32* %310, align 8
  %312 = and i32 %311, 960
  %313 = icmp eq i32 %312, 640
  br i1 %313, label %585, label %314

314:                                              ; preds = %308
  %315 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %306, i64 0, i32 2
  %316 = bitcast %"struct.blink::PhysicalSize"* %315 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = trunc i64 %317 to i32
  %319 = lshr i64 %317, 32
  %320 = trunc i64 %319 to i32
  %321 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %304, i64 0, i32 1
  %322 = bitcast %"struct.blink::PhysicalOffset"* %321 to i64*
  %323 = load i64, i64* %322, align 8
  %324 = trunc i64 %323 to i32
  %325 = lshr i64 %323, 32
  %326 = trunc i64 %325 to i32
  %327 = and i32 %311, 64
  %328 = icmp eq i32 %327, 0
  %329 = icmp ne i32 %312, 256
  %330 = and i1 %328, %329
  %331 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %306, i64 0, i32 1
  br i1 %330, label %334, label %332

332:                                              ; preds = %314
  %333 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %331, align 8
  br label %339

334:                                              ; preds = %314
  %335 = bitcast %"class.blink::LayoutObject"** %331 to %"class.blink::LayoutBox"**
  %336 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %335, align 8
  %337 = bitcast %"class.blink::LayoutBox"* %336 to i32 (%"class.blink::LayoutBox"*)***
  %338 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %336, i64 0, i32 0, i32 0
  br label %339

339:                                              ; preds = %334, %332
  %340 = phi %"class.blink::LayoutObject"* [ %338, %334 ], [ %333, %332 ]
  %341 = phi i32 (%"class.blink::LayoutBox"*)*** [ %337, %334 ], [ null, %332 ]
  %342 = phi %"class.blink::LayoutBox"* [ %336, %334 ], [ null, %332 ]
  %343 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %342, i64 0, i32 0, i32 0, i32 5, i32 0
  %344 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %343, align 8
  %345 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %344, i64 0, i32 0, i32 9
  %346 = bitcast [20 x i8]* %345 to i160*
  %347 = load i160, i160* %346, align 8
  %348 = lshr i160 %347, 102
  %349 = trunc i160 %348 to i8
  %350 = and i8 %349, 3
  %351 = lshr i32 %311, 10
  %352 = and i32 %351, 3
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %354, label %357

354:                                              ; preds = %339
  %355 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %340, i64 0, i32 5, i32 0
  %356 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %355, align 8
  br label %359

357:                                              ; preds = %339
  %358 = call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %340, i32 %352) #19
  br label %359

359:                                              ; preds = %357, %354
  %360 = phi %"class.blink::ComputedStyle"* [ %356, %354 ], [ %358, %357 ]
  %361 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %360, i64 0, i32 0, i32 9
  %362 = bitcast [20 x i8]* %361 to i160*
  %363 = load i160, i160* %362, align 8
  %364 = lshr i160 %363, 102
  %365 = trunc i160 %364 to i8
  %366 = and i8 %365, 3
  %367 = icmp eq i8 %350, %366
  br i1 %367, label %368, label %392

368:                                              ; preds = %359
  %369 = load i32, i32* %310, align 8
  %370 = and i32 %369, 8388608
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %379, label %372

372:                                              ; preds = %368
  %373 = bitcast %"class.blink::NGPhysicalFragment"* %306 to %"class.blink::NGPhysicalBoxFragment"*
  %374 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %373, i64 0, i32 4, i32 0
  %375 = load i32, i32* %374, align 4
  %376 = zext i32 %375 to i64
  %377 = shl nuw i64 %376, 32
  %378 = or i64 %377, 1
  br label %392

379:                                              ; preds = %368
  %380 = and i32 %369, 4194304
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %388, label %382

382:                                              ; preds = %379
  %383 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %306, i64 1, i32 1
  %384 = bitcast %"class.blink::LayoutObject"** %383 to i32*
  %385 = load i32, i32* %384, align 4
  %386 = zext i32 %385 to i64
  %387 = shl nuw i64 %386, 32
  br label %388

388:                                              ; preds = %382, %379
  %389 = phi i64 [ %387, %382 ], [ 0, %379 ]
  %390 = phi i64 [ 1, %382 ], [ 0, %379 ]
  %391 = or i64 %390, %389
  br label %392

392:                                              ; preds = %388, %372, %359
  %393 = phi i64 [ %377, %372 ], [ %389, %388 ], [ 0, %359 ]
  %394 = phi i64 [ %378, %372 ], [ %391, %388 ], [ 0, %359 ]
  %395 = or i64 %394, %393
  %396 = trunc i64 %395 to i8
  %397 = lshr i64 %393, 32
  %398 = trunc i64 %397 to i32
  %399 = icmp eq i8 %396, 0
  br i1 %399, label %400, label %416

400:                                              ; preds = %392
  %401 = icmp eq i8 %350, 0
  %402 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %306, i64 0, i32 2, i32 1, i32 0
  %403 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %306, i64 0, i32 2, i32 0, i32 0
  %404 = select i1 %401, i32* %402, i32* %403
  %405 = load i32, i32* %404, align 4
  br i1 %401, label %416, label %406

406:                                              ; preds = %400
  %407 = sdiv i32 %405, 2
  %408 = sext i32 %407 to i64
  %409 = call i1 @llvm.is.constant.i64(i64 %408) #19
  br i1 %409, label %416, label %410

410:                                              ; preds = %406
  %411 = icmp slt i32 %405, -1
  %412 = select i1 %411, i32 -2147483648, i32 2147483647
  %413 = add nsw i64 %408, 2147483648
  %414 = icmp ult i64 %413, 4294967296
  %415 = select i1 %414, i32 %407, i32 %412, !prof !27
  br label %416

416:                                              ; preds = %410, %406, %400, %392
  %417 = phi i32 [ %398, %392 ], [ %415, %410 ], [ %405, %400 ], [ %407, %406 ]
  %418 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %341, align 8
  %419 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %418, i64 127
  %420 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %419, align 8
  %421 = call i32 %420(%"class.blink::LayoutBox"* %342) #19
  %422 = icmp slt i32 %421, 0
  %423 = select i1 %422, i32 -2147483648, i32 2147483647
  %424 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %417, i32 %421) #19
  %425 = extractvalue { i32, i1 } %424, 1
  %426 = extractvalue { i32, i1 } %424, 0
  %427 = select i1 %425, i32 %423, i32 %426, !prof !2
  %428 = sitofp i32 %427 to float
  %429 = fmul float %428, 1.562500e-02
  %430 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %343, align 8
  %431 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %430, i64 0, i32 0, i32 1, i32 0, i32 0
  %432 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %431, align 8
  %433 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %432, i64 0, i32 2, i32 0, i32 0
  %434 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %433, align 8
  %435 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %434, i64 0, i32 6
  %436 = load float, float* %435, align 8
  %437 = fdiv float %429, %436
  %438 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %341, align 8
  %439 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %438, i64 129
  %440 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %439, align 8
  %441 = call i32 %440(%"class.blink::LayoutBox"* %342) #19
  %442 = icmp sgt i32 %441, -1
  %443 = select i1 %442, i32 -2147483648, i32 2147483647
  %444 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %324, i32 %441) #19
  %445 = extractvalue { i32, i1 } %444, 1
  %446 = extractvalue { i32, i1 } %444, 0
  %447 = select i1 %445, i32 %443, i32 %446, !prof !2
  %448 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %341, align 8
  %449 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %448, i64 127
  %450 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %449, align 8
  %451 = call i32 %450(%"class.blink::LayoutBox"* %342) #19
  %452 = icmp sgt i32 %451, -1
  %453 = select i1 %452, i32 -2147483648, i32 2147483647
  %454 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %326, i32 %451) #19
  %455 = extractvalue { i32, i1 } %454, 1
  %456 = extractvalue { i32, i1 } %454, 0
  %457 = select i1 %455, i32 %453, i32 %456, !prof !2
  %458 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %342, i64 0, i32 0
  %459 = bitcast %"class.blink::LayoutBox"* %342 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %460 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %459, align 8
  %461 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %460, i64 129
  %462 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %461, align 8
  %463 = call i32 %462(%"class.blink::LayoutBoxModelObject"* %458) #19
  %464 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %459, align 8
  %465 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %464, i64 130
  %466 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %465, align 8
  %467 = call i32 %466(%"class.blink::LayoutBoxModelObject"* %458) #19
  %468 = icmp slt i32 %467, 0
  %469 = select i1 %468, i32 -2147483648, i32 2147483647
  %470 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %463, i32 %467) #19
  %471 = extractvalue { i32, i1 } %470, 1
  %472 = extractvalue { i32, i1 } %470, 0
  %473 = select i1 %471, i32 %469, i32 %472, !prof !2
  %474 = icmp slt i32 %473, 0
  %475 = select i1 %474, i32 -2147483648, i32 2147483647
  %476 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %318, i32 %473) #19
  %477 = extractvalue { i32, i1 } %476, 1
  %478 = extractvalue { i32, i1 } %476, 0
  %479 = select i1 %477, i32 %475, i32 %478, !prof !2
  %480 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %459, align 8
  %481 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %480, i64 127
  %482 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %481, align 8
  %483 = call i32 %482(%"class.blink::LayoutBoxModelObject"* %458) #19
  %484 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %459, align 8
  %485 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %484, i64 128
  %486 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %485, align 8
  %487 = call i32 %486(%"class.blink::LayoutBoxModelObject"* %458) #19
  %488 = icmp slt i32 %487, 0
  %489 = select i1 %488, i32 -2147483648, i32 2147483647
  %490 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %483, i32 %487) #19
  %491 = extractvalue { i32, i1 } %490, 1
  %492 = extractvalue { i32, i1 } %490, 0
  %493 = select i1 %491, i32 %489, i32 %492, !prof !2
  %494 = icmp slt i32 %493, 0
  %495 = select i1 %494, i32 -2147483648, i32 2147483647
  %496 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %320, i32 %493) #19
  %497 = extractvalue { i32, i1 } %496, 1
  %498 = extractvalue { i32, i1 } %496, 0
  %499 = select i1 %497, i32 %495, i32 %498, !prof !2
  br i1 %148, label %500, label %504

500:                                              ; preds = %416
  %501 = icmp slt i32 %479, 0
  %502 = select i1 %501, i32 -2147483648, i32 2147483647
  %503 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %447, i32 %479) #19
  br label %508

504:                                              ; preds = %416
  %505 = icmp slt i32 %499, 0
  %506 = select i1 %505, i32 -2147483648, i32 2147483647
  %507 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %457, i32 %499) #19
  br label %508

508:                                              ; preds = %504, %500
  %509 = phi { i32, i1 } [ %507, %504 ], [ %503, %500 ]
  %510 = phi i32 [ %506, %504 ], [ %502, %500 ]
  %511 = phi i32 [ %457, %504 ], [ %447, %500 ]
  %512 = extractvalue { i32, i1 } %509, 1
  %513 = extractvalue { i32, i1 } %509, 0
  %514 = select i1 %512, i32 %510, i32 %513
  %515 = load i32, i32* %265, align 4, !alias.scope !45
  %516 = icmp eq i32 %515, 0
  br i1 %516, label %522, label %517

517:                                              ; preds = %508
  br i1 %147, label %518, label %520

518:                                              ; preds = %517
  %519 = icmp sgt i32 %514, %303
  br i1 %519, label %522, label %565

520:                                              ; preds = %517
  %521 = icmp slt i32 %511, %303
  br i1 %521, label %522, label %565

522:                                              ; preds = %520, %518, %508
  %523 = add i32 %515, 1
  %524 = load i32, i32* %264, align 8, !alias.scope !45
  %525 = icmp ult i32 %524, %523
  br i1 %525, label %526, label %546

526:                                              ; preds = %522
  %527 = lshr i32 %524, 2
  %528 = add nuw i32 %524, 1
  %529 = add i32 %528, %527
  %530 = icmp ugt i32 %529, 4
  %531 = select i1 %530, i32 %529, i32 4
  %532 = icmp ugt i32 %531, %523
  %533 = select i1 %532, i32 %531, i32 %523
  %534 = icmp ult i32 %524, %533
  br i1 %534, label %535, label %546, !prof !27

535:                                              ; preds = %526
  %536 = load %"class.WTF::Vector.2988"*, %"class.WTF::Vector.2988"** %263, align 8, !alias.scope !45
  %537 = icmp eq %"class.WTF::Vector.2988"* %536, null
  br i1 %537, label %538, label %545

538:                                              ; preds = %535
  %539 = zext i32 %533 to i64
  %540 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorINSt3__14pairIN5blink12PhysicalRectEfEELj0ES0_EEEEmm(i64 %539) #19
  %541 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %540, i8* getelementptr inbounds ([131 x i8], [131 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINSt3__14pairIN5blink12PhysicalRectEfEELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #19
  %542 = ptrtoint i8* %541 to i64
  store atomic i64 %542, i64* %281 monotonic, align 8, !alias.scope !45
  %543 = lshr i64 %540, 4
  %544 = trunc i64 %543 to i32
  store i32 %544, i32* %264, align 8, !alias.scope !45
  br label %546

545:                                              ; preds = %535
  call void @_ZN3WTF6VectorINS0_INSt3__14pairIN5blink12PhysicalRectEfEELj0ENS_18PartitionAllocatorEEELj0ES6_E16ReallocateBufferEj(%"class.WTF::Vector.2985"* nonnull %51, i32 %533) #19
  br label %546

546:                                              ; preds = %545, %538, %526, %522
  %547 = load %"class.WTF::Vector.2988"*, %"class.WTF::Vector.2988"** %263, align 8, !alias.scope !45
  %548 = load i32, i32* %265, align 4, !alias.scope !45
  %549 = zext i32 %548 to i64
  %550 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %547, i64 %549
  %551 = icmp eq i32 %548, %523
  br i1 %551, label %562, label %552

552:                                              ; preds = %546
  %553 = zext i32 %523 to i64
  %554 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %547, i64 %553
  %555 = bitcast %"class.WTF::Vector.2988"* %550 to i8*
  %556 = ptrtoint %"class.WTF::Vector.2988"* %550 to i64
  %557 = getelementptr %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %554, i64 -1, i32 0, i32 0, i32 0
  %558 = ptrtoint %"struct.std::__1::pair.2991"** %557 to i64
  %559 = add i64 %558, 16
  %560 = sub i64 %559, %556
  %561 = and i64 %560, -16
  call void @llvm.memset.p0i8.i64(i8* align 8 %555, i8 0, i64 %561, i1 false) #19
  br label %562

562:                                              ; preds = %552, %546
  store i32 %523, i32* %265, align 4, !alias.scope !45
  %563 = call dereferenceable(16) %"class.WTF::Vector.2988"* @_ZN3WTF6VectorINS0_INSt3__14pairIN5blink12PhysicalRectEfEELj0ENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.2985"* nonnull %51, i32 %515) #19
  %564 = load i32, i32* %265, align 4, !alias.scope !45
  br label %565

565:                                              ; preds = %562, %520, %518
  %566 = phi i32 [ %564, %562 ], [ %515, %520 ], [ %515, %518 ]
  %567 = add i32 %566, -1
  %568 = call dereferenceable(16) %"class.WTF::Vector.2988"* @_ZN3WTF6VectorINS0_INSt3__14pairIN5blink12PhysicalRectEfEELj0ENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.2985"* nonnull %51, i32 %567) #19
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %282) #19, !noalias !45
  store i32 %447, i32* %283, align 4, !noalias !45
  store i32 %457, i32* %284, align 4, !noalias !45
  store i32 %479, i32* %285, align 4, !noalias !45
  store i32 %499, i32* %286, align 4, !noalias !45
  store float %437, float* %287, align 4, !alias.scope !48, !noalias !45
  %569 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %568, i64 0, i32 0, i32 0, i32 2
  %570 = load i32, i32* %569, align 4
  %571 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %568, i64 0, i32 0, i32 0, i32 1
  %572 = load i32, i32* %571, align 8
  %573 = icmp eq i32 %570, %572
  br i1 %573, label %582, label %574, !prof !2

574:                                              ; preds = %565
  %575 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %568, i64 0, i32 0, i32 0, i32 0
  %576 = load %"struct.std::__1::pair.2991"*, %"struct.std::__1::pair.2991"** %575, align 8
  %577 = zext i32 %570 to i64
  %578 = getelementptr inbounds %"struct.std::__1::pair.2991", %"struct.std::__1::pair.2991"* %576, i64 %577
  %579 = bitcast %"struct.std::__1::pair.2991"* %578 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %579, i8* nonnull align 4 %282, i64 20, i1 false) #19
  %580 = load i32, i32* %569, align 4
  %581 = add i32 %580, 1
  store i32 %581, i32* %569, align 4
  br label %583

582:                                              ; preds = %565
  call void @_ZN3WTF6VectorINSt3__14pairIN5blink12PhysicalRectEfEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS5_EEvOT_(%"class.WTF::Vector.2988"* %568, %"struct.std::__1::pair.2991"* nonnull dereferenceable(20) %35) #19
  br label %583

583:                                              ; preds = %582, %574
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %282) #19, !noalias !45
  %584 = select i1 %147, i32 %511, i32 %514
  br label %585

585:                                              ; preds = %583, %308, %302
  %586 = phi i32 [ %303, %302 ], [ %303, %308 ], [ %584, %583 ]
  %587 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKN5blink6NGLinkEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %33) #19
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink6NGLinkEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"* nonnull %33, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %34) #19
  %588 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %278, align 8, !noalias !45
  %589 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %280, align 8, !noalias !45
  %590 = icmp eq %"struct.blink::NGLink"* %588, %589
  br i1 %590, label %298, label %302

591:                                              ; preds = %298, %145
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %266) #19, !noalias !45
  %592 = call i8* @_Znwm(i64 40) #18
  %593 = bitcast i8* %592 to %"class.blink::protocol::ListValue"*
  call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %593) #19
  %594 = load %"class.WTF::Vector.2988"*, %"class.WTF::Vector.2988"** %263, align 8
  %595 = load i32, i32* %265, align 4
  %596 = zext i32 %595 to i64
  %597 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %594, i64 %596
  %598 = icmp eq i32 %595, 0
  br i1 %598, label %667, label %599

599:                                              ; preds = %591
  %600 = bitcast %"class.blink::FloatQuad"* %52 to i8*
  %601 = bitcast %"class.blink::FloatQuad"* %31 to i8*
  %602 = bitcast %"class.blink::FloatQuad"* %31 to <2 x float>*
  %603 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %31, i64 0, i32 1, i32 0
  %604 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %31, i64 0, i32 1, i32 1
  %605 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %31, i64 0, i32 2, i32 0
  %606 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %31, i64 0, i32 2, i32 1
  %607 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %31, i64 0, i32 3, i32 0
  %608 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %31, i64 0, i32 3, i32 1
  %609 = bitcast %"class.blink::FloatQuad"* %52 to <2 x float>*
  %610 = bitcast %"class.blink::FloatQuad"* %52 to i64*
  %611 = bitcast <2 x float>* %6 to i8*
  %612 = bitcast <2 x float>* %6 to %"class.blink::FloatPoint"*
  %613 = bitcast <2 x float>* %7 to %"class.blink::FloatPoint"*
  %614 = bitcast <2 x float>* %6 to i64*
  %615 = bitcast <2 x float>* %7 to i8*
  %616 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %52, i64 0, i32 1
  %617 = bitcast %"class.blink::FloatPoint"* %616 to <2 x float>*
  %618 = bitcast %"class.blink::FloatPoint"* %616 to i64*
  %619 = bitcast <2 x float>* %4 to i8*
  %620 = bitcast <2 x float>* %4 to %"class.blink::FloatPoint"*
  %621 = bitcast <2 x float>* %5 to %"class.blink::FloatPoint"*
  %622 = bitcast <2 x float>* %4 to i64*
  %623 = bitcast <2 x float>* %5 to i8*
  %624 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %52, i64 0, i32 2
  %625 = bitcast %"class.blink::FloatPoint"* %624 to i64*
  %626 = bitcast <2 x float>* %29 to i8*
  %627 = bitcast <2 x float>* %29 to %"class.blink::FloatPoint"*
  %628 = bitcast <2 x float>* %30 to %"class.blink::FloatPoint"*
  %629 = bitcast <2 x float>* %29 to i64*
  %630 = bitcast <2 x float>* %30 to i8*
  %631 = bitcast %"class.blink::FloatPoint"* %624 to <2 x float>*
  %632 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %52, i64 0, i32 3
  %633 = bitcast %"class.blink::FloatPoint"* %632 to i64*
  %634 = bitcast <2 x float>* %27 to i8*
  %635 = bitcast <2 x float>* %27 to %"class.blink::FloatPoint"*
  %636 = bitcast <2 x float>* %28 to %"class.blink::FloatPoint"*
  %637 = bitcast <2 x float>* %27 to i64*
  %638 = bitcast <2 x float>* %28 to i8*
  %639 = bitcast %"class.blink::FloatPoint"* %632 to <2 x float>*
  %640 = bitcast %"class.blink::(anonymous namespace)::PathBuilder"* %53 to i8*
  %641 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %53, i64 0, i32 0
  %642 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %53, i64 0, i32 1, i32 0, i32 0, i32 0
  %643 = bitcast %"class.blink::protocol::ListValue"** %642 to i8**
  %644 = bitcast %"class.blink::Path"* %54 to i8*
  %645 = bitcast <2 x float>* %23 to %"class.blink::FloatPoint"*
  %646 = bitcast <2 x float>* %24 to %"class.blink::FloatPoint"*
  %647 = bitcast <2 x float>* %25 to %"class.blink::FloatPoint"*
  %648 = bitcast <2 x float>* %26 to %"class.blink::FloatPoint"*
  %649 = bitcast <2 x float>* %23 to i8*
  %650 = bitcast <2 x float>* %23 to i64*
  %651 = bitcast <2 x float>* %24 to i8*
  %652 = bitcast <2 x float>* %24 to i64*
  %653 = bitcast <2 x float>* %25 to i8*
  %654 = bitcast <2 x float>* %25 to i64*
  %655 = bitcast <2 x float>* %26 to i8*
  %656 = bitcast <2 x float>* %26 to i64*
  %657 = bitcast %"class.blink::Path"* %21 to i8*
  %658 = bitcast %"class.blink::AffineTransform"* %22 to i8*
  %659 = bitcast %"class.WTF::String"* %55 to i8*
  %660 = bitcast %"class.blink::protocol::ListValue"** %642 to %"class.blink::protocol::Value"**
  %661 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %55, i64 0, i32 0, i32 0
  %662 = bitcast %"class.WTF::String"* %56 to i8*
  %663 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %56, i64 0, i32 0, i32 0
  %664 = bitcast %"class.blink::FloatQuad"* %52 to i8*
  %665 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %53, i64 0, i32 1
  %666 = bitcast %"class.std::__1::unique_ptr.2401"* %665 to i64*
  br label %784

667:                                              ; preds = %822, %591
  %668 = bitcast %"class.WTF::String"* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %668) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %57, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.82, i64 0, i64 0), i64 15) #19
  %669 = bitcast %"class.blink::protocol::ListValue"** %153 to %"class.blink::protocol::Value"**
  %670 = load %"class.blink::protocol::Value"*, %"class.blink::protocol::Value"** %669, align 8
  store %"class.blink::protocol::ListValue"* null, %"class.blink::protocol::ListValue"** %153, align 8
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %150, %"class.WTF::String"* nonnull dereferenceable(8) %57, %"class.blink::protocol::Value"* %670) #19
  %671 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %57, i64 0, i32 0, i32 0
  %672 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %671, align 8
  %673 = icmp eq %"class.WTF::StringImpl"* %672, null
  br i1 %673, label %687, label %674

674:                                              ; preds = %667
  %675 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %672, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %676 = load atomic i32, i32* %675 monotonic, align 4
  %677 = and i32 %676, 2
  %678 = icmp eq i32 %677, 0
  %679 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %672, i64 0, i32 0
  %680 = load i32, i32* %679, align 4
  br i1 %678, label %681, label %683

681:                                              ; preds = %674
  %682 = add i32 %680, -1
  store i32 %682, i32* %679, align 4
  br label %683

683:                                              ; preds = %681, %674
  %684 = phi i32 [ %682, %681 ], [ %680, %674 ]
  %685 = icmp eq i32 %684, 0
  br i1 %685, label %686, label %687

686:                                              ; preds = %683
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %672) #19
  br label %687

687:                                              ; preds = %667, %683, %686
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %668) #19
  %688 = bitcast %"class.WTF::String"* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %688) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %58, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i64 0, i64 0), i64 5) #19
  call void @_ZN5blink8protocol15DictionaryValue8setArrayERKN3WTF6StringENSt3__110unique_ptrINS0_9ListValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %150, %"class.WTF::String"* nonnull dereferenceable(8) %58, %"class.blink::protocol::ListValue"* nonnull %593) #19
  %689 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %58, i64 0, i32 0, i32 0
  %690 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %689, align 8
  %691 = icmp eq %"class.WTF::StringImpl"* %690, null
  br i1 %691, label %705, label %692

692:                                              ; preds = %687
  %693 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %690, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %694 = load atomic i32, i32* %693 monotonic, align 4
  %695 = and i32 %694, 2
  %696 = icmp eq i32 %695, 0
  %697 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %690, i64 0, i32 0
  %698 = load i32, i32* %697, align 4
  br i1 %696, label %699, label %701

699:                                              ; preds = %692
  %700 = add i32 %698, -1
  store i32 %700, i32* %697, align 4
  br label %701

701:                                              ; preds = %699, %692
  %702 = phi i32 [ %700, %699 ], [ %698, %692 ]
  %703 = icmp eq i32 %702, 0
  br i1 %703, label %704, label %705

704:                                              ; preds = %701
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %690) #19
  br label %705

705:                                              ; preds = %687, %701, %704
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %688) #19
  %706 = bitcast %"class.WTF::String"* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %706) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %59, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.84, i64 0, i64 0), i64 16) #19
  call void @_ZN5blink8protocol15DictionaryValue10setBooleanERKN3WTF6StringEb(%"class.blink::protocol::DictionaryValue"* nonnull %150, %"class.WTF::String"* nonnull dereferenceable(8) %59, i1 zeroext %148) #19
  %707 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %59, i64 0, i32 0, i32 0
  %708 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %707, align 8
  %709 = icmp eq %"class.WTF::StringImpl"* %708, null
  br i1 %709, label %723, label %710

710:                                              ; preds = %705
  %711 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %708, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %712 = load atomic i32, i32* %711 monotonic, align 4
  %713 = and i32 %712, 2
  %714 = icmp eq i32 %713, 0
  %715 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %708, i64 0, i32 0
  %716 = load i32, i32* %715, align 4
  br i1 %714, label %717, label %719

717:                                              ; preds = %710
  %718 = add i32 %716, -1
  store i32 %718, i32* %715, align 4
  br label %719

719:                                              ; preds = %717, %710
  %720 = phi i32 [ %718, %717 ], [ %716, %710 ]
  %721 = icmp eq i32 %720, 0
  br i1 %721, label %722, label %723

722:                                              ; preds = %719
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %708) #19
  br label %723

723:                                              ; preds = %705, %719, %722
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %706) #19
  %724 = bitcast %"class.WTF::String"* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %724) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %60, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.85, i64 0, i64 0), i64 9) #19
  call void @_ZN5blink8protocol15DictionaryValue10setBooleanERKN3WTF6StringEb(%"class.blink::protocol::DictionaryValue"* nonnull %150, %"class.WTF::String"* nonnull dereferenceable(8) %60, i1 zeroext %147) #19
  %725 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %726 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %725, align 8
  %727 = icmp eq %"class.WTF::StringImpl"* %726, null
  br i1 %727, label %741, label %728

728:                                              ; preds = %723
  %729 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %726, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %730 = load atomic i32, i32* %729 monotonic, align 4
  %731 = and i32 %730, 2
  %732 = icmp eq i32 %731, 0
  %733 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %726, i64 0, i32 0
  %734 = load i32, i32* %733, align 4
  br i1 %732, label %735, label %737

735:                                              ; preds = %728
  %736 = add i32 %734, -1
  store i32 %736, i32* %733, align 4
  br label %737

737:                                              ; preds = %735, %728
  %738 = phi i32 [ %736, %735 ], [ %734, %728 ]
  %739 = icmp eq i32 %738, 0
  br i1 %739, label %740, label %741

740:                                              ; preds = %737
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %726) #19
  br label %741

741:                                              ; preds = %723, %737, %740
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %724) #19
  %742 = bitcast %"class.WTF::String"* %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %742) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %61, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.86, i64 0, i64 0), i64 15) #19
  %743 = bitcast %"class.WTF::String"* %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %743) #19
  %744 = call %"class.blink::CSSValue"* @_ZNK5blink27CSSComputedStyleDeclaration19GetPropertyCSSValueENS_13CSSPropertyIDE(%"class.blink::CSSComputedStyleDeclaration"* %67, i32 31) #19
  %745 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %744) #19
  %746 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %62, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %745, %"class.WTF::StringImpl"** %746, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %150, %"class.WTF::String"* nonnull dereferenceable(8) %61, %"class.WTF::String"* nonnull dereferenceable(8) %62) #19
  %747 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %746, align 8
  %748 = icmp eq %"class.WTF::StringImpl"* %747, null
  br i1 %748, label %762, label %749

749:                                              ; preds = %741
  %750 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %747, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %751 = load atomic i32, i32* %750 monotonic, align 4
  %752 = and i32 %751, 2
  %753 = icmp eq i32 %752, 0
  %754 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %747, i64 0, i32 0
  %755 = load i32, i32* %754, align 4
  br i1 %753, label %756, label %758

756:                                              ; preds = %749
  %757 = add i32 %755, -1
  store i32 %757, i32* %754, align 4
  br label %758

758:                                              ; preds = %756, %749
  %759 = phi i32 [ %757, %756 ], [ %755, %749 ]
  %760 = icmp eq i32 %759, 0
  br i1 %760, label %761, label %762

761:                                              ; preds = %758
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %747) #19
  br label %762

762:                                              ; preds = %741, %758, %761
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %743) #19
  %763 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %61, i64 0, i32 0, i32 0
  %764 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %763, align 8
  %765 = icmp eq %"class.WTF::StringImpl"* %764, null
  br i1 %765, label %779, label %766

766:                                              ; preds = %762
  %767 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %764, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %768 = load atomic i32, i32* %767 monotonic, align 4
  %769 = and i32 %768, 2
  %770 = icmp eq i32 %769, 0
  %771 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %764, i64 0, i32 0
  %772 = load i32, i32* %771, align 4
  br i1 %770, label %773, label %775

773:                                              ; preds = %766
  %774 = add i32 %772, -1
  store i32 %774, i32* %771, align 4
  br label %775

775:                                              ; preds = %773, %766
  %776 = phi i32 [ %774, %773 ], [ %772, %766 ]
  %777 = icmp eq i32 %776, 0
  br i1 %777, label %778, label %779

778:                                              ; preds = %775
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %764) #19
  br label %779

779:                                              ; preds = %762, %775, %778
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %742) #19
  %780 = call %"class.blink::CSSValue"* @_ZNK5blink27CSSComputedStyleDeclaration19GetPropertyCSSValueENS_13CSSPropertyIDE(%"class.blink::CSSComputedStyleDeclaration"* %67, i32 294) #19
  %781 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %780, i64 0, i32 2
  %782 = load i8, i8* %781, align 1
  %783 = icmp eq i8 %782, 0
  br i1 %783, label %923, label %927

784:                                              ; preds = %599, %822
  %785 = phi %"class.WTF::Vector.2988"* [ %594, %599 ], [ %823, %822 ]
  %786 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %785, i64 0, i32 0, i32 0, i32 1
  %787 = load i32, i32* %786, align 8
  %788 = icmp eq i32 %787, 0
  br i1 %788, label %789, label %792

789:                                              ; preds = %784
  %790 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %785, i64 0, i32 0, i32 0, i32 2
  %791 = load i32, i32* %790, align 4
  br label %808

792:                                              ; preds = %784
  %793 = zext i32 %787 to i64
  %794 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink12PhysicalRectEfEEEEmm(i64 %793) #19
  %795 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %794, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIN5blink12PhysicalRectEfEEEEPKcv, i64 0, i64 0)) #19
  %796 = ptrtoint i8* %795 to i64
  %797 = icmp ne i8* %795, null
  %798 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %785, i64 0, i32 0, i32 0, i32 2
  %799 = load i32, i32* %798, align 4
  %800 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %785, i64 0, i32 0, i32 0, i32 0
  %801 = load %"struct.std::__1::pair.2991"*, %"struct.std::__1::pair.2991"** %800, align 8
  %802 = icmp ne %"struct.std::__1::pair.2991"* %801, null
  %803 = and i1 %797, %802
  br i1 %803, label %804, label %808, !prof !27

804:                                              ; preds = %792
  %805 = zext i32 %799 to i64
  %806 = bitcast %"struct.std::__1::pair.2991"* %801 to i8*
  %807 = mul nuw nsw i64 %805, 20
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %795, i8* nonnull align 4 %806, i64 %807, i1 false) #19
  br label %808

808:                                              ; preds = %789, %792, %804
  %809 = phi i32 [ %791, %789 ], [ %799, %792 ], [ %799, %804 ]
  %810 = phi i64 [ 0, %789 ], [ %796, %792 ], [ %796, %804 ]
  %811 = call i8* @_Znwm(i64 40) #18
  %812 = bitcast i8* %811 to %"class.blink::protocol::ListValue"*
  call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %812) #19
  %813 = inttoptr i64 %810 to %"struct.std::__1::pair.2991"*
  %814 = zext i32 %809 to i64
  %815 = getelementptr inbounds %"struct.std::__1::pair.2991", %"struct.std::__1::pair.2991"* %813, i64 %814
  %816 = icmp eq i32 %809, 0
  br i1 %816, label %817, label %825

817:                                              ; preds = %920, %808
  %818 = bitcast i8* %811 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol9ListValue9pushValueENSt3__110unique_ptrINS0_5ValueENS2_14default_deleteIS4_EEEE(%"class.blink::protocol::ListValue"* nonnull %593, %"class.blink::protocol::Value"* nonnull %818) #19
  %819 = icmp eq i64 %810, 0
  br i1 %819, label %822, label %820, !prof !27

820:                                              ; preds = %817
  %821 = inttoptr i64 %810 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %821) #19
  br label %822

822:                                              ; preds = %817, %820
  %823 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %785, i64 1
  %824 = icmp eq %"class.WTF::Vector.2988"* %823, %597
  br i1 %824, label %667, label %784

825:                                              ; preds = %808, %920
  %826 = phi %"struct.std::__1::pair.2991"* [ %921, %920 ], [ %813, %808 ]
  %827 = getelementptr inbounds %"struct.std::__1::pair.2991", %"struct.std::__1::pair.2991"* %826, i64 0, i32 0, i32 0, i32 0, i32 0
  %828 = load i32, i32* %827, align 4
  %829 = getelementptr inbounds %"struct.std::__1::pair.2991", %"struct.std::__1::pair.2991"* %826, i64 0, i32 0, i32 0, i32 1, i32 0
  %830 = load i32, i32* %829, align 4
  %831 = getelementptr inbounds %"struct.std::__1::pair.2991", %"struct.std::__1::pair.2991"* %826, i64 0, i32 0, i32 1, i32 0, i32 0
  %832 = load i32, i32* %831, align 4
  %833 = getelementptr inbounds %"struct.std::__1::pair.2991", %"struct.std::__1::pair.2991"* %826, i64 0, i32 0, i32 1, i32 1, i32 0
  %834 = load i32, i32* %833, align 4
  %835 = getelementptr inbounds %"struct.std::__1::pair.2991", %"struct.std::__1::pair.2991"* %826, i64 0, i32 1
  %836 = load float, float* %835, align 4
  %837 = call i8* @_Znwm(i64 80) #18
  %838 = bitcast i8* %837 to %"class.blink::protocol::DictionaryValue"*
  call void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"* nonnull %838) #19
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %600) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %664, i8 -1, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %601) #19, !noalias !51
  %839 = sitofp i32 %828 to float
  %840 = fmul float %839, 1.562500e-02
  %841 = sitofp i32 %830 to float
  %842 = fmul float %841, 1.562500e-02
  %843 = sitofp i32 %832 to float
  %844 = fmul float %843, 1.562500e-02
  %845 = sitofp i32 %834 to float
  %846 = fmul float %845, 1.562500e-02
  %847 = insertelement <2 x float> undef, float %840, i32 0
  %848 = insertelement <2 x float> %847, float %842, i32 1
  store <2 x float> %848, <2 x float>* %602, align 8, !noalias !51
  %849 = fadd float %840, %844
  store float %849, float* %603, align 8, !noalias !51
  store float %842, float* %604, align 4, !noalias !51
  %850 = fadd float %842, %846
  store float %849, float* %605, align 8, !noalias !51
  store float %850, float* %606, align 4, !noalias !51
  store float %840, float* %607, align 8, !noalias !51
  store float %850, float* %608, align 4, !noalias !51
  call void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* nonnull sret %52, %"class.blink::LayoutObject"* %110, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %31, %"class.blink::LayoutBoxModelObject"* null, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %601) #19, !noalias !51
  %851 = load i64, i64* %610, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %611)
  store i64 %851, i64* %614, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %615) #19
  %852 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %94, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %612) #19
  store <2 x float> %852, <2 x float>* %7, align 8
  %853 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %94) #19
  %854 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %853) #19
  %855 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %854, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %613) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %615) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %611)
  store <2 x float> %855, <2 x float>* %609, align 8
  %856 = load i64, i64* %618, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %619)
  store i64 %856, i64* %622, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %623) #19
  %857 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %94, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %620) #19
  store <2 x float> %857, <2 x float>* %5, align 8
  %858 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %94) #19
  %859 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %858) #19
  %860 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %859, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %621) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %623) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %619)
  store <2 x float> %860, <2 x float>* %617, align 8
  %861 = load i64, i64* %625, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %626) #19
  store i64 %861, i64* %629, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %630) #19
  %862 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %94, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %627) #19
  store <2 x float> %862, <2 x float>* %30, align 8
  %863 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %94) #19
  %864 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %863) #19
  %865 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %864, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %628) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %630) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %626) #19
  store <2 x float> %865, <2 x float>* %631, align 8
  %866 = load i64, i64* %633, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %634) #19
  store i64 %866, i64* %637, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %638) #19
  %867 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %94, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %635) #19
  store <2 x float> %867, <2 x float>* %28, align 8
  %868 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %94) #19
  %869 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %868) #19
  %870 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %869, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %636) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %638) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %634) #19
  store <2 x float> %870, <2 x float>* %639, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %640) #19
  store i64 -6148914691236517206, i64* %666, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_111PathBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %641, align 8
  %871 = call i8* @_Znwm(i64 40) #18
  %872 = bitcast i8* %871 to %"class.blink::protocol::ListValue"*
  call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %872) #19
  store i8* %871, i8** %643, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %644) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %644, i8 -86, i64 16, i1 false) #19, !alias.scope !56
  call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* nonnull %54) #19
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %649) #19, !noalias !56
  %873 = load i64, i64* %610, align 8, !noalias !56
  store i64 %873, i64* %650, align 8, !noalias !56
  call void @_ZN5blink4Path6MoveToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %54, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %645) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %649) #19, !noalias !56
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %651) #19, !noalias !56
  %874 = load i64, i64* %618, align 8, !noalias !56
  store i64 %874, i64* %652, align 8, !noalias !56
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %54, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %646) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %651) #19, !noalias !56
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %653) #19, !noalias !56
  %875 = load i64, i64* %625, align 8, !noalias !56
  store i64 %875, i64* %654, align 8, !noalias !56
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %54, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %647) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %653) #19, !noalias !56
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %655) #19, !noalias !56
  %876 = load i64, i64* %633, align 8, !noalias !56
  store i64 %876, i64* %656, align 8, !noalias !56
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %54, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %648) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %655) #19, !noalias !56
  call void @_ZN5blink4Path12CloseSubpathEv(%"class.blink::Path"* nonnull %54) #19
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %657) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %657, i8 -86, i64 16, i1 false) #19
  call void @_ZN5blink4PathC1ERKS0_(%"class.blink::Path"* nonnull %21, %"class.blink::Path"* nonnull dereferenceable(16) %54) #19
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %658) #19
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %22) #19
  %877 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEd(%"class.blink::AffineTransform"* nonnull %22, double %260) #19
  call void @_ZN5blink4Path9TransformERKNS_15AffineTransformE(%"class.blink::Path"* nonnull %21, %"class.blink::AffineTransform"* dereferenceable(48) %877) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %658) #19
  call void @_ZNK5blink4Path5ApplyEPvPFvS1_PKNS_11PathElementEE(%"class.blink::Path"* nonnull %21, i8* nonnull %640, void (i8*, %"struct.blink::PathElement"*)* nonnull @_ZN5blink12_GLOBAL__N_111PathBuilder17AppendPathElementEPvPKNS_11PathElementE) #19
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %21) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %657) #19
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %54) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %644) #19
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %659) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %55, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.80, i64 0, i64 0), i64 10) #19
  %878 = load %"class.blink::protocol::Value"*, %"class.blink::protocol::Value"** %660, align 8
  store %"class.blink::protocol::ListValue"* null, %"class.blink::protocol::ListValue"** %642, align 8
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %838, %"class.WTF::String"* nonnull dereferenceable(8) %55, %"class.blink::protocol::Value"* %878) #19
  %879 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %661, align 8
  %880 = icmp eq %"class.WTF::StringImpl"* %879, null
  br i1 %880, label %894, label %881

881:                                              ; preds = %825
  %882 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %879, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %883 = load atomic i32, i32* %882 monotonic, align 4
  %884 = and i32 %883, 2
  %885 = icmp eq i32 %884, 0
  %886 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %879, i64 0, i32 0
  %887 = load i32, i32* %886, align 4
  br i1 %885, label %888, label %890

888:                                              ; preds = %881
  %889 = add i32 %887, -1
  store i32 %889, i32* %886, align 4
  br label %890

890:                                              ; preds = %888, %881
  %891 = phi i32 [ %889, %888 ], [ %887, %881 ]
  %892 = icmp eq i32 %891, 0
  br i1 %892, label %893, label %894

893:                                              ; preds = %890
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %879) #19
  br label %894

894:                                              ; preds = %825, %890, %893
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %659) #19
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %662) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %56, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.81, i64 0, i64 0), i64 8) #19
  %895 = fpext float %836 to double
  call void @_ZN5blink8protocol15DictionaryValue9setDoubleERKN3WTF6StringEd(%"class.blink::protocol::DictionaryValue"* nonnull %838, %"class.WTF::String"* nonnull dereferenceable(8) %56, double %895) #19
  %896 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %663, align 8
  %897 = icmp eq %"class.WTF::StringImpl"* %896, null
  br i1 %897, label %911, label %898

898:                                              ; preds = %894
  %899 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %896, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %900 = load atomic i32, i32* %899 monotonic, align 4
  %901 = and i32 %900, 2
  %902 = icmp eq i32 %901, 0
  %903 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %896, i64 0, i32 0
  %904 = load i32, i32* %903, align 4
  br i1 %902, label %905, label %907

905:                                              ; preds = %898
  %906 = add i32 %904, -1
  store i32 %906, i32* %903, align 4
  br label %907

907:                                              ; preds = %905, %898
  %908 = phi i32 [ %906, %905 ], [ %904, %898 ]
  %909 = icmp eq i32 %908, 0
  br i1 %909, label %910, label %911

910:                                              ; preds = %907
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %896) #19
  br label %911

911:                                              ; preds = %894, %907, %910
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %662) #19
  %912 = bitcast i8* %837 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol9ListValue9pushValueENSt3__110unique_ptrINS0_5ValueENS2_14default_deleteIS4_EEEE(%"class.blink::protocol::ListValue"* nonnull %812, %"class.blink::protocol::Value"* nonnull %912) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_111PathBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %641, align 8
  %913 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %642, align 8
  store %"class.blink::protocol::ListValue"* null, %"class.blink::protocol::ListValue"** %642, align 8
  %914 = icmp eq %"class.blink::protocol::ListValue"* %913, null
  br i1 %914, label %920, label %915

915:                                              ; preds = %911
  %916 = bitcast %"class.blink::protocol::ListValue"* %913 to void (%"class.blink::protocol::ListValue"*)***
  %917 = load void (%"class.blink::protocol::ListValue"*)**, void (%"class.blink::protocol::ListValue"*)*** %916, align 8
  %918 = getelementptr inbounds void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %917, i64 2
  %919 = load void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %918, align 8
  call void %919(%"class.blink::protocol::ListValue"* nonnull %913) #19
  br label %920

920:                                              ; preds = %915, %911
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %640) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %600) #19
  %921 = getelementptr inbounds %"struct.std::__1::pair.2991", %"struct.std::__1::pair.2991"* %826, i64 1
  %922 = icmp eq %"struct.std::__1::pair.2991"* %921, %815
  br i1 %922, label %817, label %825

923:                                              ; preds = %779
  %924 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %780, i64 2, i32 2
  %925 = bitcast i8* %924 to double*
  %926 = load double, double* %925, align 8
  br label %927

927:                                              ; preds = %923, %779
  %928 = phi double [ %926, %923 ], [ 0.000000e+00, %779 ]
  %929 = call %"class.blink::CSSValue"* @_ZNK5blink27CSSComputedStyleDeclaration19GetPropertyCSSValueENS_13CSSPropertyIDE(%"class.blink::CSSComputedStyleDeclaration"* %67, i32 119) #19
  %930 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %929, i64 0, i32 2
  %931 = load i8, i8* %930, align 1
  %932 = icmp eq i8 %931, 0
  br i1 %932, label %933, label %937

933:                                              ; preds = %927
  %934 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %929, i64 2, i32 2
  %935 = bitcast i8* %934 to double*
  %936 = load double, double* %935, align 8
  br label %937

937:                                              ; preds = %933, %927
  %938 = phi double [ %936, %933 ], [ 0.000000e+00, %927 ]
  %939 = bitcast %"class.WTF::String"* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %939) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %63, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.87, i64 0, i64 0), i64 7) #19
  %940 = select i1 %148, double %938, double %928
  call void @_ZN5blink8protocol15DictionaryValue9setDoubleERKN3WTF6StringEd(%"class.blink::protocol::DictionaryValue"* nonnull %150, %"class.WTF::String"* nonnull dereferenceable(8) %63, double %940) #19
  %941 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 0, i32 0, i32 0
  %942 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %941, align 8
  %943 = icmp eq %"class.WTF::StringImpl"* %942, null
  br i1 %943, label %957, label %944

944:                                              ; preds = %937
  %945 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %942, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %946 = load atomic i32, i32* %945 monotonic, align 4
  %947 = and i32 %946, 2
  %948 = icmp eq i32 %947, 0
  %949 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %942, i64 0, i32 0
  %950 = load i32, i32* %949, align 4
  br i1 %948, label %951, label %953

951:                                              ; preds = %944
  %952 = add i32 %950, -1
  store i32 %952, i32* %949, align 4
  br label %953

953:                                              ; preds = %951, %944
  %954 = phi i32 [ %952, %951 ], [ %950, %944 ]
  %955 = icmp eq i32 %954, 0
  br i1 %955, label %956, label %957

956:                                              ; preds = %953
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %942) #19
  br label %957

957:                                              ; preds = %937, %953, %956
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %939) #19
  %958 = bitcast %"class.WTF::String"* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %958) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %64, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.88, i64 0, i64 0), i64 8) #19
  %959 = select i1 %148, double %928, double %938
  call void @_ZN5blink8protocol15DictionaryValue9setDoubleERKN3WTF6StringEd(%"class.blink::protocol::DictionaryValue"* nonnull %150, %"class.WTF::String"* nonnull dereferenceable(8) %64, double %959) #19
  %960 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %961 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %960, align 8
  %962 = icmp eq %"class.WTF::StringImpl"* %961, null
  br i1 %962, label %976, label %963

963:                                              ; preds = %957
  %964 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %961, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %965 = load atomic i32, i32* %964 monotonic, align 4
  %966 = and i32 %965, 2
  %967 = icmp eq i32 %966, 0
  %968 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %961, i64 0, i32 0
  %969 = load i32, i32* %968, align 4
  br i1 %967, label %970, label %972

970:                                              ; preds = %963
  %971 = add i32 %969, -1
  store i32 %971, i32* %968, align 4
  br label %972

972:                                              ; preds = %970, %963
  %973 = phi i32 [ %971, %970 ], [ %969, %963 ]
  %974 = icmp eq i32 %973, 0
  br i1 %974, label %975, label %976

975:                                              ; preds = %972
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %961) #19
  br label %976

976:                                              ; preds = %975, %972, %957
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %958) #19
  %977 = bitcast %"class.WTF::String"* %65 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %977) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %65, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.89, i64 0, i64 0), i64 28) #19
  %978 = bitcast %"class.std::__1::unique_ptr.2440"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %978)
  %979 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %979)
  %980 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %980)
  %981 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %981)
  %982 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %982)
  %983 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %983)
  %984 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %984)
  %985 = bitcast %"class.WTF::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %985)
  %986 = bitcast %"class.WTF::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %986)
  %987 = call i8* @_Znwm(i64 80) #18
  %988 = bitcast i8* %987 to %"class.blink::protocol::DictionaryValue"*
  call void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"* nonnull %988) #19
  %989 = bitcast %"class.std::__1::unique_ptr.2440"* %12 to i8**
  store i8* %987, i8** %989, align 8
  %990 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %1, i64 0, i32 0
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.82, i64 0, i64 0), i64 15) #19
  %991 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %992 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %991, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_121AppendLineStyleConfigERKN4absl8optionalINS_9LineStyleEEERNSt3__110unique_ptrINS_8protocol15DictionaryValueENS7_14default_deleteISA_EEEEN3WTF6StringE(%"class.absl::optional.2382"* dereferenceable(24) %990, %"class.std::__1::unique_ptr.2440"* nonnull dereferenceable(8) %12, %"class.WTF::StringImpl"* %992) #19
  %993 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %1, i64 0, i32 1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %14, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.96, i64 0, i64 0), i64 13) #19
  %994 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %995 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %994, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_121AppendLineStyleConfigERKN4absl8optionalINS_9LineStyleEEERNSt3__110unique_ptrINS_8protocol15DictionaryValueENS7_14default_deleteISA_EEEEN3WTF6StringE(%"class.absl::optional.2382"* dereferenceable(24) %993, %"class.std::__1::unique_ptr.2440"* nonnull dereferenceable(8) %12, %"class.WTF::StringImpl"* %995) #19
  %996 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %1, i64 0, i32 2
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %15, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.97, i64 0, i64 0), i64 13) #19
  %997 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %998 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %997, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_121AppendLineStyleConfigERKN4absl8optionalINS_9LineStyleEEERNSt3__110unique_ptrINS_8protocol15DictionaryValueENS7_14default_deleteISA_EEEEN3WTF6StringE(%"class.absl::optional.2382"* dereferenceable(24) %996, %"class.std::__1::unique_ptr.2440"* nonnull dereferenceable(8) %12, %"class.WTF::StringImpl"* %998) #19
  %999 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %1, i64 0, i32 3
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.98, i64 0, i64 0), i64 20) #19
  %1000 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %1001 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1000, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_120AppendBoxStyleConfigERKN4absl8optionalINS_8BoxStyleEEERNSt3__110unique_ptrINS_8protocol15DictionaryValueENS7_14default_deleteISA_EEEEN3WTF6StringE(%"class.absl::optional.2387"* dereferenceable(12) %999, %"class.std::__1::unique_ptr.2440"* nonnull dereferenceable(8) %12, %"class.WTF::StringImpl"* %1001) #19
  %1002 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %1, i64 0, i32 4
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %17, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.99, i64 0, i64 0), i64 21) #19
  %1003 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %1004 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1003, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_120AppendBoxStyleConfigERKN4absl8optionalINS_8BoxStyleEEERNSt3__110unique_ptrINS_8protocol15DictionaryValueENS7_14default_deleteISA_EEEEN3WTF6StringE(%"class.absl::optional.2387"* dereferenceable(12) %1002, %"class.std::__1::unique_ptr.2440"* nonnull dereferenceable(8) %12, %"class.WTF::StringImpl"* %1004) #19
  %1005 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %1, i64 0, i32 5
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %18, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.100, i64 0, i64 0), i64 11) #19
  %1006 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %1007 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1006, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_120AppendBoxStyleConfigERKN4absl8optionalINS_8BoxStyleEEERNSt3__110unique_ptrINS_8protocol15DictionaryValueENS7_14default_deleteISA_EEEEN3WTF6StringE(%"class.absl::optional.2387"* dereferenceable(12) %1005, %"class.std::__1::unique_ptr.2440"* nonnull dereferenceable(8) %12, %"class.WTF::StringImpl"* %1007) #19
  %1008 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %1, i64 0, i32 6
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.101, i64 0, i64 0), i64 14) #19
  %1009 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  %1010 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1009, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_120AppendBoxStyleConfigERKN4absl8optionalINS_8BoxStyleEEERNSt3__110unique_ptrINS_8protocol15DictionaryValueENS7_14default_deleteISA_EEEEN3WTF6StringE(%"class.absl::optional.2387"* dereferenceable(12) %1008, %"class.std::__1::unique_ptr.2440"* nonnull dereferenceable(8) %12, %"class.WTF::StringImpl"* %1010) #19
  %1011 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %1, i64 0, i32 7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.102, i64 0, i64 0), i64 14) #19
  %1012 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  %1013 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1012, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_121AppendLineStyleConfigERKN4absl8optionalINS_9LineStyleEEERNSt3__110unique_ptrINS_8protocol15DictionaryValueENS7_14default_deleteISA_EEEEN3WTF6StringE(%"class.absl::optional.2382"* dereferenceable(24) %1011, %"class.std::__1::unique_ptr.2440"* nonnull dereferenceable(8) %12, %"class.WTF::StringImpl"* %1013) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %978)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %979)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %980)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %981)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %982)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %983)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %984)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %985)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %986)
  %1014 = bitcast i8* %987 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %150, %"class.WTF::String"* nonnull dereferenceable(8) %65, %"class.blink::protocol::Value"* nonnull %1014) #19
  %1015 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %65, i64 0, i32 0, i32 0
  %1016 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1015, align 8
  %1017 = icmp eq %"class.WTF::StringImpl"* %1016, null
  br i1 %1017, label %1031, label %1018

1018:                                             ; preds = %976
  %1019 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1016, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1020 = load atomic i32, i32* %1019 monotonic, align 4
  %1021 = and i32 %1020, 2
  %1022 = icmp eq i32 %1021, 0
  %1023 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1016, i64 0, i32 0
  %1024 = load i32, i32* %1023, align 4
  br i1 %1022, label %1025, label %1027

1025:                                             ; preds = %1018
  %1026 = add i32 %1024, -1
  store i32 %1026, i32* %1023, align 4
  br label %1027

1027:                                             ; preds = %1025, %1018
  %1028 = phi i32 [ %1026, %1025 ], [ %1024, %1018 ]
  %1029 = icmp eq i32 %1028, 0
  br i1 %1029, label %1030, label %1031

1030:                                             ; preds = %1027
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1016) #19
  br label %1031

1031:                                             ; preds = %1030, %1027, %976
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %977) #19
  %1032 = load %"class.WTF::Vector.2988"*, %"class.WTF::Vector.2988"** %263, align 8
  %1033 = icmp eq %"class.WTF::Vector.2988"* %1032, null
  br i1 %1033, label %1061, label %1034, !prof !27

1034:                                             ; preds = %1031
  %1035 = bitcast %"class.WTF::Vector.2988"* %1032 to i8*
  %1036 = load i32, i32* %265, align 4
  %1037 = icmp eq i32 %1036, 0
  br i1 %1037, label %1059, label %1038, !prof !2

1038:                                             ; preds = %1034
  %1039 = zext i32 %1036 to i64
  %1040 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %1032, i64 %1039
  br label %1041

1041:                                             ; preds = %1053, %1038
  %1042 = phi %"class.WTF::Vector.2988"* [ %1054, %1053 ], [ %1032, %1038 ]
  %1043 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %1042, i64 0, i32 0, i32 0, i32 0
  %1044 = load %"struct.std::__1::pair.2991"*, %"struct.std::__1::pair.2991"** %1043, align 8
  %1045 = icmp eq %"struct.std::__1::pair.2991"* %1044, null
  %1046 = bitcast %"struct.std::__1::pair.2991"* %1044 to i8*
  br i1 %1045, label %1053, label %1047, !prof !27

1047:                                             ; preds = %1041
  %1048 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %1042, i64 0, i32 0, i32 0, i32 2
  %1049 = load i32, i32* %1048, align 4
  %1050 = icmp eq i32 %1049, 0
  br i1 %1050, label %1052, label %1051, !prof !2

1051:                                             ; preds = %1047
  store i32 0, i32* %1048, align 4
  br label %1052

1052:                                             ; preds = %1051, %1047
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1046) #19
  store %"struct.std::__1::pair.2991"* null, %"struct.std::__1::pair.2991"** %1043, align 8
  br label %1053

1053:                                             ; preds = %1052, %1041
  %1054 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %1042, i64 1
  %1055 = icmp eq %"class.WTF::Vector.2988"* %1054, %1040
  br i1 %1055, label %1056, label %1041

1056:                                             ; preds = %1053
  store i32 0, i32* %265, align 4
  %1057 = bitcast %"class.WTF::Vector.2985"* %51 to i8**
  %1058 = load i8*, i8** %1057, align 8
  br label %1059

1059:                                             ; preds = %1056, %1034
  %1060 = phi i8* [ %1058, %1056 ], [ %1035, %1034 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1060) #19
  store %"class.WTF::Vector.2988"* null, %"class.WTF::Vector.2988"** %263, align 8
  br label %1061

1061:                                             ; preds = %1031, %1059
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %262) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %165) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_111PathBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %152, align 8
  %1062 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %153, align 8
  store %"class.blink::protocol::ListValue"* null, %"class.blink::protocol::ListValue"** %153, align 8
  %1063 = icmp eq %"class.blink::protocol::ListValue"* %1062, null
  br i1 %1063, label %1069, label %1064

1064:                                             ; preds = %1061
  %1065 = bitcast %"class.blink::protocol::ListValue"* %1062 to void (%"class.blink::protocol::ListValue"*)***
  %1066 = load void (%"class.blink::protocol::ListValue"*)**, void (%"class.blink::protocol::ListValue"*)*** %1065, align 8
  %1067 = getelementptr inbounds void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %1066, i64 2
  %1068 = load void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %1067, align 8
  call void %1068(%"class.blink::protocol::ListValue"* nonnull %1062) #19
  br label %1069

1069:                                             ; preds = %1061, %1064
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %151) #19
  ret %"class.blink::protocol::DictionaryValue"* %150
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::protocol::DictionaryValue"* @_ZNK5blink18InspectorHighlight15AsProtocolValueEv(%"class.blink::InspectorHighlight"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.WTF::String", align 8
  %20 = alloca %"class.WTF::String", align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = tail call i8* @_Znwm(i64 80) #18
  %23 = bitcast i8* %22 to %"class.blink::protocol::DictionaryValue"*
  tail call void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"* nonnull %23) #19
  %24 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i64 5) #19
  %25 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %25, align 8
  %27 = bitcast %"class.blink::protocol::ListValue"* %26 to %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)***
  %28 = load %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)**, %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)*, %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)** %28, i64 8
  %30 = load %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)*, %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)** %29, align 8
  %31 = call %"class.blink::protocol::Value"* %30(%"class.blink::protocol::ListValue"* %26) #19
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %23, %"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.blink::protocol::Value"* %31) #19
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %1
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #19
  br label %48

48:                                               ; preds = %1, %44, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #19
  %49 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i64 0, i64 0), i64 10) #19
  %50 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 9
  %51 = load i8, i8* %50, align 8, !range !26
  %52 = icmp ne i8 %51, 0
  call void @_ZN5blink8protocol15DictionaryValue10setBooleanERKN3WTF6StringEb(%"class.blink::protocol::DictionaryValue"* nonnull %23, %"class.WTF::String"* nonnull dereferenceable(8) %3, i1 zeroext %52) #19
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %48
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #19
  br label %69

69:                                               ; preds = %48, %65, %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #19
  %70 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.24, i64 0, i64 0), i64 18) #19
  %71 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 10
  %72 = load i8, i8* %71, align 1, !range !26
  %73 = icmp ne i8 %72, 0
  call void @_ZN5blink8protocol15DictionaryValue10setBooleanERKN3WTF6StringEb(%"class.blink::protocol::DictionaryValue"* nonnull %23, %"class.WTF::String"* nonnull dereferenceable(8) %4, i1 zeroext %73) #19
  %74 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %69
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #19
  br label %90

90:                                               ; preds = %69, %86, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #19
  %91 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10, i64 0, i64 0), i64 21) #19
  %92 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 11
  %93 = load i8, i8* %92, align 2, !range !26
  %94 = icmp ne i8 %93, 0
  call void @_ZN5blink8protocol15DictionaryValue10setBooleanERKN3WTF6StringEb(%"class.blink::protocol::DictionaryValue"* nonnull %23, %"class.WTF::String"* nonnull dereferenceable(8) %5, i1 zeroext %94) #19
  %95 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %111, label %98

98:                                               ; preds = %90
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  br i1 %102, label %105, label %107

105:                                              ; preds = %98
  %106 = add i32 %104, -1
  store i32 %106, i32* %103, align 4
  br label %107

107:                                              ; preds = %105, %98
  %108 = phi i32 [ %106, %105 ], [ %104, %98 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #19
  br label %111

111:                                              ; preds = %90, %107, %110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #19
  %112 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 12
  %113 = load i32, i32* %112, align 4
  switch i32 %113, label %224 [
    i32 0, label %114
    i32 2, label %150
    i32 1, label %186
  ]

114:                                              ; preds = %111
  %115 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25, i64 0, i64 0), i64 11) #19
  %116 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i64 0, i64 0), i64 3) #19
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %23, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull dereferenceable(8) %7) #19
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %118, null
  br i1 %119, label %133, label %120

120:                                              ; preds = %114
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = and i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 0
  %126 = load i32, i32* %125, align 4
  br i1 %124, label %127, label %129

127:                                              ; preds = %120
  %128 = add i32 %126, -1
  store i32 %128, i32* %125, align 4
  br label %129

129:                                              ; preds = %127, %120
  %130 = phi i32 [ %128, %127 ], [ %126, %120 ]
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %129
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %118) #19
  br label %133

133:                                              ; preds = %114, %129, %132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #19
  %134 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %222, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  br i1 %141, label %144, label %146

144:                                              ; preds = %137
  %145 = add i32 %143, -1
  store i32 %145, i32* %142, align 4
  br label %146

146:                                              ; preds = %144, %137
  %147 = phi i32 [ %145, %144 ], [ %143, %137 ]
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %222

149:                                              ; preds = %146
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %135) #19
  br label %222

150:                                              ; preds = %111
  %151 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25, i64 0, i64 0), i64 11) #19
  %152 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %152) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0), i64 3) #19
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %23, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::String"* nonnull dereferenceable(8) %9) #19
  %153 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %169, label %156

156:                                              ; preds = %150
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %165

163:                                              ; preds = %156
  %164 = add i32 %162, -1
  store i32 %164, i32* %161, align 4
  br label %165

165:                                              ; preds = %163, %156
  %166 = phi i32 [ %164, %163 ], [ %162, %156 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %154) #19
  br label %169

169:                                              ; preds = %150, %165, %168
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #19
  %170 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %170, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %171, null
  br i1 %172, label %222, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  br i1 %177, label %180, label %182

180:                                              ; preds = %173
  %181 = add i32 %179, -1
  store i32 %181, i32* %178, align 4
  br label %182

182:                                              ; preds = %180, %173
  %183 = phi i32 [ %181, %180 ], [ %179, %173 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %222

185:                                              ; preds = %182
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %171) #19
  br label %222

186:                                              ; preds = %111
  %187 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %187) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25, i64 0, i64 0), i64 11) #19
  %188 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %188) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), i64 3) #19
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %23, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.WTF::String"* nonnull dereferenceable(8) %11) #19
  %189 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %189, align 8
  %191 = icmp eq %"class.WTF::StringImpl"* %190, null
  br i1 %191, label %205, label %192

192:                                              ; preds = %186
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = load atomic i32, i32* %193 monotonic, align 4
  %195 = and i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 0
  %198 = load i32, i32* %197, align 4
  br i1 %196, label %199, label %201

199:                                              ; preds = %192
  %200 = add i32 %198, -1
  store i32 %200, i32* %197, align 4
  br label %201

201:                                              ; preds = %199, %192
  %202 = phi i32 [ %200, %199 ], [ %198, %192 ]
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %205

204:                                              ; preds = %201
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %190) #19
  br label %205

205:                                              ; preds = %186, %201, %204
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %188) #19
  %206 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %206, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %208, label %222, label %209

209:                                              ; preds = %205
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  br i1 %213, label %216, label %218

216:                                              ; preds = %209
  %217 = add i32 %215, -1
  store i32 %217, i32* %214, align 4
  br label %218

218:                                              ; preds = %216, %209
  %219 = phi i32 [ %217, %216 ], [ %215, %209 ]
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %218
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %207) #19
  br label %222

222:                                              ; preds = %221, %218, %205, %185, %182, %169, %149, %146, %133
  %223 = phi i8* [ %115, %133 ], [ %115, %146 ], [ %115, %149 ], [ %151, %169 ], [ %151, %182 ], [ %151, %185 ], [ %187, %205 ], [ %187, %218 ], [ %187, %221 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %223) #19
  br label %224

224:                                              ; preds = %222, %111
  %225 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %226 = load %"class.blink::protocol::DOM::BoxModel"*, %"class.blink::protocol::DOM::BoxModel"** %225, align 8
  %227 = icmp eq %"class.blink::protocol::DOM::BoxModel"* %226, null
  br i1 %227, label %446, label %228

228:                                              ; preds = %224
  %229 = call i8* @_Znwm(i64 80) #18
  %230 = bitcast i8* %229 to %"class.blink::protocol::DictionaryValue"*
  call void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"* nonnull %230) #19
  %231 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %231) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), i64 5) #19
  %232 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %233 = load %"class.std::__1::vector.2423"*, %"class.std::__1::vector.2423"** %232, align 8
  %234 = call %"class.blink::protocol::ListValue"* @_ZN5blink8protocol16ValueConversionsINSt3__16vectorINS2_10unique_ptrINS3_IdNS2_9allocatorIdEEEENS2_14default_deleteIS7_EEEENS5_ISA_EEEEE7toValueEPSC_(%"class.std::__1::vector.2423"* %233)
  call void @_ZN5blink8protocol15DictionaryValue8setArrayERKN3WTF6StringENSt3__110unique_ptrINS0_9ListValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %230, %"class.WTF::String"* nonnull dereferenceable(8) %12, %"class.blink::protocol::ListValue"* %234) #19
  %235 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %236 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %235, align 8
  %237 = icmp eq %"class.WTF::StringImpl"* %236, null
  br i1 %237, label %251, label %238

238:                                              ; preds = %228
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %240 = load atomic i32, i32* %239 monotonic, align 4
  %241 = and i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 0
  %244 = load i32, i32* %243, align 4
  br i1 %242, label %245, label %247

245:                                              ; preds = %238
  %246 = add i32 %244, -1
  store i32 %246, i32* %243, align 4
  br label %247

247:                                              ; preds = %245, %238
  %248 = phi i32 [ %246, %245 ], [ %244, %238 ]
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %251

250:                                              ; preds = %247
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %236) #19
  br label %251

251:                                              ; preds = %228, %247, %250
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %231) #19
  %252 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %252) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0), i64 7) #19
  %253 = load %"class.blink::protocol::DOM::BoxModel"*, %"class.blink::protocol::DOM::BoxModel"** %225, align 8
  %254 = getelementptr inbounds %"class.blink::protocol::DOM::BoxModel", %"class.blink::protocol::DOM::BoxModel"* %253, i64 0, i32 1, i32 0, i32 0, i32 0
  %255 = load %"class.std::__1::vector.2428"*, %"class.std::__1::vector.2428"** %254, align 8
  %256 = call i8* @_Znwm(i64 40) #18
  %257 = bitcast i8* %256 to %"class.blink::protocol::ListValue"*
  call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %257) #19
  %258 = getelementptr inbounds %"class.std::__1::vector.2428", %"class.std::__1::vector.2428"* %255, i64 0, i32 0, i32 1
  %259 = bitcast double** %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = bitcast %"class.std::__1::vector.2428"* %255 to i64*
  %262 = load i64, i64* %261, align 8
  %263 = sub i64 %260, %262
  %264 = ashr exact i64 %263, 3
  %265 = getelementptr inbounds i8, i8* %256, i64 16
  %266 = bitcast i8* %265 to %"class.std::__1::vector.2404"*
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE7reserveEm(%"class.std::__1::vector.2404"* %266, i64 %264) #19
  %267 = getelementptr inbounds %"class.std::__1::vector.2428", %"class.std::__1::vector.2428"* %255, i64 0, i32 0, i32 0
  %268 = load double*, double** %267, align 8
  %269 = load double*, double** %258, align 8
  %270 = icmp eq double* %268, %269
  br i1 %270, label %284, label %271

271:                                              ; preds = %251, %271
  %272 = phi double* [ %282, %271 ], [ %268, %251 ]
  %273 = bitcast double* %272 to i64*
  %274 = load i64, i64* %273, align 8
  %275 = call i8* @_Znwm(i64 24) #18
  %276 = bitcast i8* %275 to i32 (...)***
  %277 = getelementptr inbounds i8, i8* %275, i64 8
  %278 = bitcast i8* %277 to i32*
  store i32 3, i32* %278, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %276, align 8
  %279 = getelementptr inbounds i8, i8* %275, i64 16
  %280 = bitcast i8* %279 to i64*
  store i64 %274, i64* %280, align 8
  %281 = bitcast i8* %275 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol9ListValue9pushValueENSt3__110unique_ptrINS0_5ValueENS2_14default_deleteIS4_EEEE(%"class.blink::protocol::ListValue"* nonnull %257, %"class.blink::protocol::Value"* nonnull %281) #19
  %282 = getelementptr inbounds double, double* %272, i64 1
  %283 = icmp eq double* %282, %269
  br i1 %283, label %284, label %271

284:                                              ; preds = %271, %251
  call void @_ZN5blink8protocol15DictionaryValue8setArrayERKN3WTF6StringENSt3__110unique_ptrINS0_9ListValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %230, %"class.WTF::String"* nonnull dereferenceable(8) %13, %"class.blink::protocol::ListValue"* nonnull %257) #19
  %285 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %286 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %285, align 8
  %287 = icmp eq %"class.WTF::StringImpl"* %286, null
  br i1 %287, label %301, label %288

288:                                              ; preds = %284
  %289 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %286, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = load atomic i32, i32* %289 monotonic, align 4
  %291 = and i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %286, i64 0, i32 0
  %294 = load i32, i32* %293, align 4
  br i1 %292, label %295, label %297

295:                                              ; preds = %288
  %296 = add i32 %294, -1
  store i32 %296, i32* %293, align 4
  br label %297

297:                                              ; preds = %295, %288
  %298 = phi i32 [ %296, %295 ], [ %294, %288 ]
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %301

300:                                              ; preds = %297
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %286) #19
  br label %301

301:                                              ; preds = %284, %297, %300
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %252) #19
  %302 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %302) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %14, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i64 7) #19
  %303 = load %"class.blink::protocol::DOM::BoxModel"*, %"class.blink::protocol::DOM::BoxModel"** %225, align 8
  %304 = getelementptr inbounds %"class.blink::protocol::DOM::BoxModel", %"class.blink::protocol::DOM::BoxModel"* %303, i64 0, i32 2, i32 0, i32 0, i32 0
  %305 = load %"class.std::__1::vector.2428"*, %"class.std::__1::vector.2428"** %304, align 8
  %306 = call i8* @_Znwm(i64 40) #18
  %307 = bitcast i8* %306 to %"class.blink::protocol::ListValue"*
  call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %307) #19
  %308 = getelementptr inbounds %"class.std::__1::vector.2428", %"class.std::__1::vector.2428"* %305, i64 0, i32 0, i32 1
  %309 = bitcast double** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"class.std::__1::vector.2428"* %305 to i64*
  %312 = load i64, i64* %311, align 8
  %313 = sub i64 %310, %312
  %314 = ashr exact i64 %313, 3
  %315 = getelementptr inbounds i8, i8* %306, i64 16
  %316 = bitcast i8* %315 to %"class.std::__1::vector.2404"*
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE7reserveEm(%"class.std::__1::vector.2404"* %316, i64 %314) #19
  %317 = getelementptr inbounds %"class.std::__1::vector.2428", %"class.std::__1::vector.2428"* %305, i64 0, i32 0, i32 0
  %318 = load double*, double** %317, align 8
  %319 = load double*, double** %308, align 8
  %320 = icmp eq double* %318, %319
  br i1 %320, label %334, label %321

321:                                              ; preds = %301, %321
  %322 = phi double* [ %332, %321 ], [ %318, %301 ]
  %323 = bitcast double* %322 to i64*
  %324 = load i64, i64* %323, align 8
  %325 = call i8* @_Znwm(i64 24) #18
  %326 = bitcast i8* %325 to i32 (...)***
  %327 = getelementptr inbounds i8, i8* %325, i64 8
  %328 = bitcast i8* %327 to i32*
  store i32 3, i32* %328, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %326, align 8
  %329 = getelementptr inbounds i8, i8* %325, i64 16
  %330 = bitcast i8* %329 to i64*
  store i64 %324, i64* %330, align 8
  %331 = bitcast i8* %325 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol9ListValue9pushValueENSt3__110unique_ptrINS0_5ValueENS2_14default_deleteIS4_EEEE(%"class.blink::protocol::ListValue"* nonnull %307, %"class.blink::protocol::Value"* nonnull %331) #19
  %332 = getelementptr inbounds double, double* %322, i64 1
  %333 = icmp eq double* %332, %319
  br i1 %333, label %334, label %321

334:                                              ; preds = %321, %301
  call void @_ZN5blink8protocol15DictionaryValue8setArrayERKN3WTF6StringENSt3__110unique_ptrINS0_9ListValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %230, %"class.WTF::String"* nonnull dereferenceable(8) %14, %"class.blink::protocol::ListValue"* nonnull %307) #19
  %335 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %335, align 8
  %337 = icmp eq %"class.WTF::StringImpl"* %336, null
  br i1 %337, label %351, label %338

338:                                              ; preds = %334
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %340 = load atomic i32, i32* %339 monotonic, align 4
  %341 = and i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 0
  %344 = load i32, i32* %343, align 4
  br i1 %342, label %345, label %347

345:                                              ; preds = %338
  %346 = add i32 %344, -1
  store i32 %346, i32* %343, align 4
  br label %347

347:                                              ; preds = %345, %338
  %348 = phi i32 [ %346, %345 ], [ %344, %338 ]
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %351

350:                                              ; preds = %347
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %336) #19
  br label %351

351:                                              ; preds = %334, %347, %350
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %302) #19
  %352 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %352) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i64 6) #19
  %353 = load %"class.blink::protocol::DOM::BoxModel"*, %"class.blink::protocol::DOM::BoxModel"** %225, align 8
  %354 = getelementptr inbounds %"class.blink::protocol::DOM::BoxModel", %"class.blink::protocol::DOM::BoxModel"* %353, i64 0, i32 3, i32 0, i32 0, i32 0
  %355 = load %"class.std::__1::vector.2428"*, %"class.std::__1::vector.2428"** %354, align 8
  %356 = call i8* @_Znwm(i64 40) #18
  %357 = bitcast i8* %356 to %"class.blink::protocol::ListValue"*
  call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %357) #19
  %358 = getelementptr inbounds %"class.std::__1::vector.2428", %"class.std::__1::vector.2428"* %355, i64 0, i32 0, i32 1
  %359 = bitcast double** %358 to i64*
  %360 = load i64, i64* %359, align 8
  %361 = bitcast %"class.std::__1::vector.2428"* %355 to i64*
  %362 = load i64, i64* %361, align 8
  %363 = sub i64 %360, %362
  %364 = ashr exact i64 %363, 3
  %365 = getelementptr inbounds i8, i8* %356, i64 16
  %366 = bitcast i8* %365 to %"class.std::__1::vector.2404"*
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE7reserveEm(%"class.std::__1::vector.2404"* %366, i64 %364) #19
  %367 = getelementptr inbounds %"class.std::__1::vector.2428", %"class.std::__1::vector.2428"* %355, i64 0, i32 0, i32 0
  %368 = load double*, double** %367, align 8
  %369 = load double*, double** %358, align 8
  %370 = icmp eq double* %368, %369
  br i1 %370, label %384, label %371

371:                                              ; preds = %351, %371
  %372 = phi double* [ %382, %371 ], [ %368, %351 ]
  %373 = bitcast double* %372 to i64*
  %374 = load i64, i64* %373, align 8
  %375 = call i8* @_Znwm(i64 24) #18
  %376 = bitcast i8* %375 to i32 (...)***
  %377 = getelementptr inbounds i8, i8* %375, i64 8
  %378 = bitcast i8* %377 to i32*
  store i32 3, i32* %378, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %376, align 8
  %379 = getelementptr inbounds i8, i8* %375, i64 16
  %380 = bitcast i8* %379 to i64*
  store i64 %374, i64* %380, align 8
  %381 = bitcast i8* %375 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol9ListValue9pushValueENSt3__110unique_ptrINS0_5ValueENS2_14default_deleteIS4_EEEE(%"class.blink::protocol::ListValue"* nonnull %357, %"class.blink::protocol::Value"* nonnull %381) #19
  %382 = getelementptr inbounds double, double* %372, i64 1
  %383 = icmp eq double* %382, %369
  br i1 %383, label %384, label %371

384:                                              ; preds = %371, %351
  call void @_ZN5blink8protocol15DictionaryValue8setArrayERKN3WTF6StringENSt3__110unique_ptrINS0_9ListValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %230, %"class.WTF::String"* nonnull dereferenceable(8) %15, %"class.blink::protocol::ListValue"* nonnull %357) #19
  %385 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %386 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %385, align 8
  %387 = icmp eq %"class.WTF::StringImpl"* %386, null
  br i1 %387, label %401, label %388

388:                                              ; preds = %384
  %389 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %386, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %390 = load atomic i32, i32* %389 monotonic, align 4
  %391 = and i32 %390, 2
  %392 = icmp eq i32 %391, 0
  %393 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %386, i64 0, i32 0
  %394 = load i32, i32* %393, align 4
  br i1 %392, label %395, label %397

395:                                              ; preds = %388
  %396 = add i32 %394, -1
  store i32 %396, i32* %393, align 4
  br label %397

397:                                              ; preds = %395, %388
  %398 = phi i32 [ %396, %395 ], [ %394, %388 ]
  %399 = icmp eq i32 %398, 0
  br i1 %399, label %400, label %401

400:                                              ; preds = %397
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %386) #19
  br label %401

401:                                              ; preds = %384, %397, %400
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %352) #19
  %402 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %402) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i64 5) #19
  %403 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %404 = load %"class.blink::protocol::DictionaryValue"*, %"class.blink::protocol::DictionaryValue"** %403, align 8
  %405 = bitcast %"class.blink::protocol::DictionaryValue"* %404 to %"class.blink::protocol::Value"* (%"class.blink::protocol::DictionaryValue"*)***
  %406 = load %"class.blink::protocol::Value"* (%"class.blink::protocol::DictionaryValue"*)**, %"class.blink::protocol::Value"* (%"class.blink::protocol::DictionaryValue"*)*** %405, align 8
  %407 = getelementptr inbounds %"class.blink::protocol::Value"* (%"class.blink::protocol::DictionaryValue"*)*, %"class.blink::protocol::Value"* (%"class.blink::protocol::DictionaryValue"*)** %406, i64 8
  %408 = load %"class.blink::protocol::Value"* (%"class.blink::protocol::DictionaryValue"*)*, %"class.blink::protocol::Value"* (%"class.blink::protocol::DictionaryValue"*)** %407, align 8
  %409 = call %"class.blink::protocol::Value"* %408(%"class.blink::protocol::DictionaryValue"* %404) #19
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %230, %"class.WTF::String"* nonnull dereferenceable(8) %16, %"class.blink::protocol::Value"* %409) #19
  %410 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %411 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %410, align 8
  %412 = icmp eq %"class.WTF::StringImpl"* %411, null
  br i1 %412, label %426, label %413

413:                                              ; preds = %401
  %414 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %411, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %415 = load atomic i32, i32* %414 monotonic, align 4
  %416 = and i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %411, i64 0, i32 0
  %419 = load i32, i32* %418, align 4
  br i1 %417, label %420, label %422

420:                                              ; preds = %413
  %421 = add i32 %419, -1
  store i32 %421, i32* %418, align 4
  br label %422

422:                                              ; preds = %420, %413
  %423 = phi i32 [ %421, %420 ], [ %419, %413 ]
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %425, label %426

425:                                              ; preds = %422
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %411) #19
  br label %426

426:                                              ; preds = %401, %422, %425
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %402) #19
  %427 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %427) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %17, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i64 0, i64 0), i64 12) #19
  %428 = bitcast i8* %229 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %23, %"class.WTF::String"* nonnull dereferenceable(8) %17, %"class.blink::protocol::Value"* nonnull %428) #19
  %429 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %430 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %429, align 8
  %431 = icmp eq %"class.WTF::StringImpl"* %430, null
  br i1 %431, label %445, label %432

432:                                              ; preds = %426
  %433 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %430, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %434 = load atomic i32, i32* %433 monotonic, align 4
  %435 = and i32 %434, 2
  %436 = icmp eq i32 %435, 0
  %437 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %430, i64 0, i32 0
  %438 = load i32, i32* %437, align 4
  br i1 %436, label %439, label %441

439:                                              ; preds = %432
  %440 = add i32 %438, -1
  store i32 %440, i32* %437, align 4
  br label %441

441:                                              ; preds = %439, %432
  %442 = phi i32 [ %440, %439 ], [ %438, %432 ]
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %444, label %445

444:                                              ; preds = %441
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %430) #19
  br label %445

445:                                              ; preds = %444, %441, %426
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %427) #19
  br label %446

446:                                              ; preds = %224, %445
  %447 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %448 = load %"class.blink::protocol::DictionaryValue"*, %"class.blink::protocol::DictionaryValue"** %447, align 8
  %449 = icmp eq %"class.blink::protocol::DictionaryValue"* %448, null
  br i1 %449, label %475, label %450

450:                                              ; preds = %446
  %451 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %451) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %18, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32, i64 0, i64 0), i64 11) #19
  %452 = load %"class.blink::protocol::DictionaryValue"*, %"class.blink::protocol::DictionaryValue"** %447, align 8
  %453 = bitcast %"class.blink::protocol::DictionaryValue"* %452 to %"class.blink::protocol::Value"* (%"class.blink::protocol::DictionaryValue"*)***
  %454 = load %"class.blink::protocol::Value"* (%"class.blink::protocol::DictionaryValue"*)**, %"class.blink::protocol::Value"* (%"class.blink::protocol::DictionaryValue"*)*** %453, align 8
  %455 = getelementptr inbounds %"class.blink::protocol::Value"* (%"class.blink::protocol::DictionaryValue"*)*, %"class.blink::protocol::Value"* (%"class.blink::protocol::DictionaryValue"*)** %454, i64 8
  %456 = load %"class.blink::protocol::Value"* (%"class.blink::protocol::DictionaryValue"*)*, %"class.blink::protocol::Value"* (%"class.blink::protocol::DictionaryValue"*)** %455, align 8
  %457 = call %"class.blink::protocol::Value"* %456(%"class.blink::protocol::DictionaryValue"* %452) #19
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %23, %"class.WTF::String"* nonnull dereferenceable(8) %18, %"class.blink::protocol::Value"* %457) #19
  %458 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %459 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %458, align 8
  %460 = icmp eq %"class.WTF::StringImpl"* %459, null
  br i1 %460, label %474, label %461

461:                                              ; preds = %450
  %462 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %459, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %463 = load atomic i32, i32* %462 monotonic, align 4
  %464 = and i32 %463, 2
  %465 = icmp eq i32 %464, 0
  %466 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %459, i64 0, i32 0
  %467 = load i32, i32* %466, align 4
  br i1 %465, label %468, label %470

468:                                              ; preds = %461
  %469 = add i32 %467, -1
  store i32 %469, i32* %466, align 4
  br label %470

470:                                              ; preds = %468, %461
  %471 = phi i32 [ %469, %468 ], [ %467, %461 ]
  %472 = icmp eq i32 %471, 0
  br i1 %472, label %473, label %474

473:                                              ; preds = %470
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %459) #19
  br label %474

474:                                              ; preds = %450, %470, %473
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %451) #19
  br label %475

475:                                              ; preds = %446, %474
  %476 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %477 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %476, align 8
  %478 = icmp eq %"class.blink::protocol::ListValue"* %477, null
  br i1 %478, label %512, label %479

479:                                              ; preds = %475
  %480 = getelementptr inbounds %"class.blink::protocol::ListValue", %"class.blink::protocol::ListValue"* %477, i64 0, i32 1
  %481 = getelementptr inbounds %"class.blink::protocol::ListValue", %"class.blink::protocol::ListValue"* %477, i64 0, i32 1, i32 0, i32 1
  %482 = bitcast %"class.std::__1::unique_ptr.2406"** %481 to i64*
  %483 = load i64, i64* %482, align 8
  %484 = bitcast %"class.std::__1::vector.2404"* %480 to i64*
  %485 = load i64, i64* %484, align 8
  %486 = icmp eq i64 %483, %485
  br i1 %486, label %512, label %487

487:                                              ; preds = %479
  %488 = bitcast %"class.WTF::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %488) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %19, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i64 0, i64 0), i64 8) #19
  %489 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %476, align 8
  %490 = bitcast %"class.blink::protocol::ListValue"* %489 to %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)***
  %491 = load %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)**, %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)*** %490, align 8
  %492 = getelementptr inbounds %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)*, %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)** %491, i64 8
  %493 = load %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)*, %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)** %492, align 8
  %494 = call %"class.blink::protocol::Value"* %493(%"class.blink::protocol::ListValue"* %489) #19
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %23, %"class.WTF::String"* nonnull dereferenceable(8) %19, %"class.blink::protocol::Value"* %494) #19
  %495 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  %496 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %495, align 8
  %497 = icmp eq %"class.WTF::StringImpl"* %496, null
  br i1 %497, label %511, label %498

498:                                              ; preds = %487
  %499 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %496, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %500 = load atomic i32, i32* %499 monotonic, align 4
  %501 = and i32 %500, 2
  %502 = icmp eq i32 %501, 0
  %503 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %496, i64 0, i32 0
  %504 = load i32, i32* %503, align 4
  br i1 %502, label %505, label %507

505:                                              ; preds = %498
  %506 = add i32 %504, -1
  store i32 %506, i32* %503, align 4
  br label %507

507:                                              ; preds = %505, %498
  %508 = phi i32 [ %506, %505 ], [ %504, %498 ]
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %510, label %511

510:                                              ; preds = %507
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %496) #19
  br label %511

511:                                              ; preds = %487, %507, %510
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %488) #19
  br label %512

512:                                              ; preds = %475, %479, %511
  %513 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %514 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %513, align 8
  %515 = icmp eq %"class.blink::protocol::ListValue"* %514, null
  br i1 %515, label %549, label %516

516:                                              ; preds = %512
  %517 = getelementptr inbounds %"class.blink::protocol::ListValue", %"class.blink::protocol::ListValue"* %514, i64 0, i32 1
  %518 = getelementptr inbounds %"class.blink::protocol::ListValue", %"class.blink::protocol::ListValue"* %514, i64 0, i32 1, i32 0, i32 1
  %519 = bitcast %"class.std::__1::unique_ptr.2406"** %518 to i64*
  %520 = load i64, i64* %519, align 8
  %521 = bitcast %"class.std::__1::vector.2404"* %517 to i64*
  %522 = load i64, i64* %521, align 8
  %523 = icmp eq i64 %520, %522
  br i1 %523, label %549, label %524

524:                                              ; preds = %516
  %525 = bitcast %"class.WTF::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %525) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %20, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i64 0, i64 0), i64 8) #19
  %526 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %513, align 8
  %527 = bitcast %"class.blink::protocol::ListValue"* %526 to %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)***
  %528 = load %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)**, %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)*** %527, align 8
  %529 = getelementptr inbounds %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)*, %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)** %528, i64 8
  %530 = load %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)*, %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)** %529, align 8
  %531 = call %"class.blink::protocol::Value"* %530(%"class.blink::protocol::ListValue"* %526) #19
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %23, %"class.WTF::String"* nonnull dereferenceable(8) %20, %"class.blink::protocol::Value"* %531) #19
  %532 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  %533 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %532, align 8
  %534 = icmp eq %"class.WTF::StringImpl"* %533, null
  br i1 %534, label %548, label %535

535:                                              ; preds = %524
  %536 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %533, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %537 = load atomic i32, i32* %536 monotonic, align 4
  %538 = and i32 %537, 2
  %539 = icmp eq i32 %538, 0
  %540 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %533, i64 0, i32 0
  %541 = load i32, i32* %540, align 4
  br i1 %539, label %542, label %544

542:                                              ; preds = %535
  %543 = add i32 %541, -1
  store i32 %543, i32* %540, align 4
  br label %544

544:                                              ; preds = %542, %535
  %545 = phi i32 [ %543, %542 ], [ %541, %535 ]
  %546 = icmp eq i32 %545, 0
  br i1 %546, label %547, label %548

547:                                              ; preds = %544
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %533) #19
  br label %548

548:                                              ; preds = %524, %544, %547
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %525) #19
  br label %549

549:                                              ; preds = %512, %516, %548
  %550 = getelementptr inbounds %"class.blink::InspectorHighlight", %"class.blink::InspectorHighlight"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %551 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %550, align 8
  %552 = icmp eq %"class.blink::protocol::ListValue"* %551, null
  br i1 %552, label %586, label %553

553:                                              ; preds = %549
  %554 = getelementptr inbounds %"class.blink::protocol::ListValue", %"class.blink::protocol::ListValue"* %551, i64 0, i32 1
  %555 = getelementptr inbounds %"class.blink::protocol::ListValue", %"class.blink::protocol::ListValue"* %551, i64 0, i32 1, i32 0, i32 1
  %556 = bitcast %"class.std::__1::unique_ptr.2406"** %555 to i64*
  %557 = load i64, i64* %556, align 8
  %558 = bitcast %"class.std::__1::vector.2404"* %554 to i64*
  %559 = load i64, i64* %558, align 8
  %560 = icmp eq i64 %557, %559
  br i1 %560, label %586, label %561

561:                                              ; preds = %553
  %562 = bitcast %"class.WTF::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %562) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %21, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i64 12) #19
  %563 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %550, align 8
  %564 = bitcast %"class.blink::protocol::ListValue"* %563 to %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)***
  %565 = load %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)**, %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)*** %564, align 8
  %566 = getelementptr inbounds %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)*, %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)** %565, i64 8
  %567 = load %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)*, %"class.blink::protocol::Value"* (%"class.blink::protocol::ListValue"*)** %566, align 8
  %568 = call %"class.blink::protocol::Value"* %567(%"class.blink::protocol::ListValue"* %563) #19
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %23, %"class.WTF::String"* nonnull dereferenceable(8) %21, %"class.blink::protocol::Value"* %568) #19
  %569 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %570 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %569, align 8
  %571 = icmp eq %"class.WTF::StringImpl"* %570, null
  br i1 %571, label %585, label %572

572:                                              ; preds = %561
  %573 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %570, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %574 = load atomic i32, i32* %573 monotonic, align 4
  %575 = and i32 %574, 2
  %576 = icmp eq i32 %575, 0
  %577 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %570, i64 0, i32 0
  %578 = load i32, i32* %577, align 4
  br i1 %576, label %579, label %581

579:                                              ; preds = %572
  %580 = add i32 %578, -1
  store i32 %580, i32* %577, align 4
  br label %581

581:                                              ; preds = %579, %572
  %582 = phi i32 [ %580, %579 ], [ %578, %572 ]
  %583 = icmp eq i32 %582, 0
  br i1 %583, label %584, label %585

584:                                              ; preds = %581
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %570) #19
  br label %585

585:                                              ; preds = %561, %581, %584
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %562) #19
  br label %586

586:                                              ; preds = %549, %585, %553
  ret %"class.blink::protocol::DictionaryValue"* %23
}

declare void @_ZN5blink8protocol15DictionaryValue8setArrayERKN3WTF6StringENSt3__110unique_ptrINS0_9ListValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::ListValue"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::protocol::ListValue"* @_ZN5blink8protocol16ValueConversionsINSt3__16vectorINS2_10unique_ptrINS3_IdNS2_9allocatorIdEEEENS2_14default_deleteIS7_EEEENS5_ISA_EEEEE7toValueEPSC_(%"class.std::__1::vector.2423"*) local_unnamed_addr #1 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 40) #18
  %3 = bitcast i8* %2 to %"class.blink::protocol::ListValue"*
  tail call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %3) #19
  %4 = getelementptr inbounds %"class.std::__1::vector.2423", %"class.std::__1::vector.2423"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::unique_ptr.2425"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.2423"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 3
  %11 = getelementptr inbounds i8, i8* %2, i64 16
  %12 = bitcast i8* %11 to %"class.std::__1::vector.2404"*
  tail call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE7reserveEm(%"class.std::__1::vector.2404"* %12, i64 %10) #19
  %13 = getelementptr inbounds %"class.std::__1::vector.2423", %"class.std::__1::vector.2423"* %0, i64 0, i32 0, i32 0
  %14 = load %"class.std::__1::unique_ptr.2425"*, %"class.std::__1::unique_ptr.2425"** %13, align 8
  %15 = load %"class.std::__1::unique_ptr.2425"*, %"class.std::__1::unique_ptr.2425"** %4, align 8
  %16 = icmp eq %"class.std::__1::unique_ptr.2425"* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %50, %1
  ret %"class.blink::protocol::ListValue"* %3

18:                                               ; preds = %1, %50
  %19 = phi %"class.std::__1::unique_ptr.2425"* [ %52, %50 ], [ %14, %1 ]
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.std::__1::vector.2428"*, %"class.std::__1::vector.2428"** %20, align 8
  %22 = tail call i8* @_Znwm(i64 40) #18
  %23 = bitcast i8* %22 to %"class.blink::protocol::ListValue"*
  tail call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %23) #19
  %24 = getelementptr inbounds %"class.std::__1::vector.2428", %"class.std::__1::vector.2428"* %21, i64 0, i32 0, i32 1
  %25 = bitcast double** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.std::__1::vector.2428"* %21 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = ashr exact i64 %29, 3
  %31 = getelementptr inbounds i8, i8* %22, i64 16
  %32 = bitcast i8* %31 to %"class.std::__1::vector.2404"*
  tail call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE7reserveEm(%"class.std::__1::vector.2404"* %32, i64 %30) #19
  %33 = getelementptr inbounds %"class.std::__1::vector.2428", %"class.std::__1::vector.2428"* %21, i64 0, i32 0, i32 0
  %34 = load double*, double** %33, align 8
  %35 = load double*, double** %24, align 8
  %36 = icmp eq double* %34, %35
  br i1 %36, label %50, label %37

37:                                               ; preds = %18, %37
  %38 = phi double* [ %48, %37 ], [ %34, %18 ]
  %39 = bitcast double* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = tail call i8* @_Znwm(i64 24) #18
  %42 = bitcast i8* %41 to i32 (...)***
  %43 = getelementptr inbounds i8, i8* %41, i64 8
  %44 = bitcast i8* %43 to i32*
  store i32 3, i32* %44, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %45 = getelementptr inbounds i8, i8* %41, i64 16
  %46 = bitcast i8* %45 to i64*
  store i64 %40, i64* %46, align 8
  %47 = bitcast i8* %41 to %"class.blink::protocol::Value"*
  tail call void @_ZN5blink8protocol9ListValue9pushValueENSt3__110unique_ptrINS0_5ValueENS2_14default_deleteIS4_EEEE(%"class.blink::protocol::ListValue"* nonnull %23, %"class.blink::protocol::Value"* nonnull %47) #19
  %48 = getelementptr inbounds double, double* %38, i64 1
  %49 = icmp eq double* %48, %35
  br i1 %49, label %50, label %37

50:                                               ; preds = %37, %18
  %51 = bitcast i8* %22 to %"class.blink::protocol::Value"*
  tail call void @_ZN5blink8protocol9ListValue9pushValueENSt3__110unique_ptrINS0_5ValueENS2_14default_deleteIS4_EEEE(%"class.blink::protocol::ListValue"* nonnull %3, %"class.blink::protocol::Value"* nonnull %51) #19
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %19, i64 1
  %53 = icmp eq %"class.std::__1::unique_ptr.2425"* %52, %15
  br i1 %53, label %17, label %18
}

declare { i64, i64 } @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_7IntRectE(%"class.blink::LocalFrameView"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #3

declare { i64, i64 } @_ZNK5blink12LayoutObject23AbsoluteBoundingBoxRectEj(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #3

declare %"class.blink::Element"* @_ZNK5blink12LayoutObject12OffsetParentEPKNS_7ElementE(%"class.blink::LayoutObject"*, %"class.blink::Element"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::vector.2404"* @_ZN5blink8protocol16ValueConversionsINSt3__16vectorINS2_10unique_ptrINS0_5ValueENS2_14default_deleteIS5_EEEENS2_9allocatorIS8_EEEEE9fromValueEPS5_PN5crdtp12ErrorSupportE(%"class.blink::protocol::Value"*, %"class.crdtp::ErrorSupport"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.2406", align 8
  %4 = icmp eq %"class.blink::protocol::Value"* %0, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::protocol::Value", %"class.blink::protocol::Value"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 7
  %9 = bitcast %"class.blink::protocol::Value"* %0 to %"class.blink::protocol::ListValue"*
  br i1 %8, label %11, label %10

10:                                               ; preds = %5, %2
  tail call void @_ZN5crdtp12ErrorSupport8AddErrorEPKc(%"class.crdtp::ErrorSupport"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.176, i64 0, i64 0)) #19
  br label %104

11:                                               ; preds = %5
  tail call void @_ZN5crdtp12ErrorSupport4PushEv(%"class.crdtp::ErrorSupport"* %1) #19
  %12 = tail call i8* @_Znwm(i64 24) #18
  %13 = bitcast i8* %12 to %"class.std::__1::vector.2404"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #19
  %14 = ptrtoint i8* %12 to i64
  %15 = getelementptr inbounds %"class.blink::protocol::Value", %"class.blink::protocol::Value"* %0, i64 1
  %16 = getelementptr inbounds %"class.blink::protocol::Value", %"class.blink::protocol::Value"* %0, i64 1, i32 1
  %17 = bitcast i32* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.blink::protocol::Value"* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = ashr exact i64 %21, 3
  tail call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE7reserveEm(%"class.std::__1::vector.2404"* nonnull %13, i64 %22)
  %23 = load i64, i64* %17, align 8
  %24 = load i64, i64* %19, align 8
  %25 = icmp eq i64 %23, %24
  br i1 %25, label %34, label %26

26:                                               ; preds = %11
  %27 = bitcast %"class.std::__1::unique_ptr.2406"* %3 to i8*
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %3, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds i8, i8* %12, i64 8
  %30 = bitcast i8* %29 to %"class.std::__1::unique_ptr.2406"**
  %31 = getelementptr inbounds i8, i8* %12, i64 16
  %32 = bitcast i8* %31 to %"class.std::__1::unique_ptr.2406"**
  %33 = bitcast i8* %29 to i64*
  br label %38

34:                                               ; preds = %68, %11
  call void @_ZN5crdtp12ErrorSupport3PopEv(%"class.crdtp::ErrorSupport"* %1) #19
  %35 = call { i8*, i64 } @_ZNK5crdtp12ErrorSupport6ErrorsEv(%"class.crdtp::ErrorSupport"* %1) #19
  %36 = extractvalue { i8*, i64 } %35, 1
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %104, label %75

38:                                               ; preds = %26, %68
  %39 = phi i64 [ 0, %26 ], [ %69, %68 ]
  call void @_ZN5crdtp12ErrorSupport8SetIndexEm(%"class.crdtp::ErrorSupport"* %1, i64 %39) #19
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #19
  store %"class.blink::protocol::Value"* inttoptr (i64 -6148914691236517206 to %"class.blink::protocol::Value"*), %"class.blink::protocol::Value"** %28, align 8
  %40 = call %"class.blink::protocol::Value"* @_ZN5blink8protocol9ListValue2atEm(%"class.blink::protocol::ListValue"* nonnull %9, i64 %39) #19
  %41 = icmp eq %"class.blink::protocol::Value"* %40, null
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  call void @_ZN5crdtp12ErrorSupport8AddErrorEPKc(%"class.crdtp::ErrorSupport"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.177, i64 0, i64 0)) #19
  br label %49

43:                                               ; preds = %38
  %44 = bitcast %"class.blink::protocol::Value"* %40 to %"class.blink::protocol::Value"* (%"class.blink::protocol::Value"*)***
  %45 = load %"class.blink::protocol::Value"* (%"class.blink::protocol::Value"*)**, %"class.blink::protocol::Value"* (%"class.blink::protocol::Value"*)*** %44, align 8
  %46 = getelementptr inbounds %"class.blink::protocol::Value"* (%"class.blink::protocol::Value"*)*, %"class.blink::protocol::Value"* (%"class.blink::protocol::Value"*)** %45, i64 8
  %47 = load %"class.blink::protocol::Value"* (%"class.blink::protocol::Value"*)*, %"class.blink::protocol::Value"* (%"class.blink::protocol::Value"*)** %46, align 8
  %48 = call %"class.blink::protocol::Value"* %47(%"class.blink::protocol::Value"* nonnull %40) #19
  br label %49

49:                                               ; preds = %42, %43
  %50 = phi %"class.blink::protocol::Value"* [ null, %42 ], [ %48, %43 ]
  store %"class.blink::protocol::Value"* %50, %"class.blink::protocol::Value"** %28, align 8
  %51 = load %"class.std::__1::unique_ptr.2406"*, %"class.std::__1::unique_ptr.2406"** %30, align 8
  %52 = load %"class.std::__1::unique_ptr.2406"*, %"class.std::__1::unique_ptr.2406"** %32, align 8
  %53 = icmp ult %"class.std::__1::unique_ptr.2406"* %51, %52
  br i1 %53, label %54, label %59

54:                                               ; preds = %49
  %55 = ptrtoint %"class.blink::protocol::Value"* %50 to i64
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %28, align 8
  %56 = bitcast %"class.std::__1::unique_ptr.2406"* %51 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %51, i64 1
  %58 = ptrtoint %"class.std::__1::unique_ptr.2406"* %57 to i64
  store i64 %58, i64* %33, align 8
  br label %60

59:                                               ; preds = %49
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.2404"* nonnull %13, %"class.std::__1::unique_ptr.2406"* nonnull dereferenceable(8) %3) #19
  br label %60

60:                                               ; preds = %54, %59
  %61 = load %"class.blink::protocol::Value"*, %"class.blink::protocol::Value"** %28, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %28, align 8
  %62 = icmp eq %"class.blink::protocol::Value"* %61, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %60
  %64 = bitcast %"class.blink::protocol::Value"* %61 to void (%"class.blink::protocol::Value"*)***
  %65 = load void (%"class.blink::protocol::Value"*)**, void (%"class.blink::protocol::Value"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::protocol::Value"*)*, void (%"class.blink::protocol::Value"*)** %65, i64 2
  %67 = load void (%"class.blink::protocol::Value"*)*, void (%"class.blink::protocol::Value"*)** %66, align 8
  call void %67(%"class.blink::protocol::Value"* nonnull %61) #19
  br label %68

68:                                               ; preds = %60, %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #19
  %69 = add nuw i64 %39, 1
  %70 = load i64, i64* %17, align 8
  %71 = load i64, i64* %19, align 8
  %72 = sub i64 %70, %71
  %73 = ashr exact i64 %72, 3
  %74 = icmp ult i64 %69, %73
  br i1 %74, label %38, label %34

75:                                               ; preds = %34
  %76 = bitcast i8* %12 to %"class.std::__1::unique_ptr.2406"**
  %77 = load %"class.std::__1::unique_ptr.2406"*, %"class.std::__1::unique_ptr.2406"** %76, align 8
  %78 = icmp eq %"class.std::__1::unique_ptr.2406"* %77, null
  br i1 %78, label %103, label %79

79:                                               ; preds = %75
  %80 = bitcast %"class.std::__1::unique_ptr.2406"* %77 to i8*
  %81 = getelementptr inbounds i8, i8* %12, i64 8
  %82 = bitcast i8* %81 to %"class.std::__1::unique_ptr.2406"**
  %83 = load %"class.std::__1::unique_ptr.2406"*, %"class.std::__1::unique_ptr.2406"** %82, align 8
  %84 = icmp eq %"class.std::__1::unique_ptr.2406"* %83, %77
  br i1 %84, label %101, label %85

85:                                               ; preds = %79, %96
  %86 = phi %"class.std::__1::unique_ptr.2406"* [ %87, %96 ], [ %83, %79 ]
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %86, i64 -1
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %87, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.blink::protocol::Value"*, %"class.blink::protocol::Value"** %88, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %88, align 8
  %90 = icmp eq %"class.blink::protocol::Value"* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %85
  %92 = bitcast %"class.blink::protocol::Value"* %89 to void (%"class.blink::protocol::Value"*)***
  %93 = load void (%"class.blink::protocol::Value"*)**, void (%"class.blink::protocol::Value"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.blink::protocol::Value"*)*, void (%"class.blink::protocol::Value"*)** %93, i64 2
  %95 = load void (%"class.blink::protocol::Value"*)*, void (%"class.blink::protocol::Value"*)** %94, align 8
  call void %95(%"class.blink::protocol::Value"* nonnull %89) #19
  br label %96

96:                                               ; preds = %91, %85
  %97 = icmp eq %"class.std::__1::unique_ptr.2406"* %87, %77
  br i1 %97, label %98, label %85

98:                                               ; preds = %96
  %99 = bitcast i8* %12 to i8**
  %100 = load i8*, i8** %99, align 8
  br label %101

101:                                              ; preds = %98, %79
  %102 = phi i8* [ %100, %98 ], [ %80, %79 ]
  store %"class.std::__1::unique_ptr.2406"* %77, %"class.std::__1::unique_ptr.2406"** %82, align 8
  call void @_ZdlPv(i8* %102) #18
  br label %103

103:                                              ; preds = %101, %75
  call void @_ZdlPv(i8* nonnull %12) #18
  br label %104

104:                                              ; preds = %34, %103, %10
  %105 = phi i64 [ 0, %10 ], [ 0, %103 ], [ %14, %34 ]
  %106 = inttoptr i64 %105 to %"class.std::__1::vector.2404"*
  ret %"class.std::__1::vector.2404"* %106
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_112CollectQuadsEPNS_4NodeERN3WTF6VectorINS_9FloatQuadELj0ENS3_18PartitionAllocatorEEE(%"class.blink::Node"*, %"class.WTF::Vector.2542"* dereferenceable(16)) unnamed_addr #4 {
  %3 = alloca <2 x float>, align 8
  %4 = alloca <2 x float>, align 8
  %5 = alloca <2 x float>, align 8
  %6 = alloca <2 x float>, align 8
  %7 = alloca <2 x float>, align 8
  %8 = alloca <2 x float>, align 8
  %9 = alloca <2 x float>, align 8
  %10 = alloca <2 x float>, align 8
  tail call fastcc void @_ZN5blink12_GLOBAL__N_121CollectQuadsRecursiveEPNS_4NodeERN3WTF6VectorINS_9FloatQuadELj0ENS3_18PartitionAllocatorEEE(%"class.blink::Node"* %0, %"class.WTF::Vector.2542"* dereferenceable(16) %1)
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %14, label %20, label %16

16:                                               ; preds = %2
  %17 = bitcast %"class.blink::NodeData"** %15 to %"class.blink::NodeRareData"**
  %18 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %18, i64 0, i32 1, i32 0, i32 0
  br label %22

20:                                               ; preds = %2
  %21 = bitcast %"class.blink::NodeData"** %15 to %"class.blink::NodeRenderingData"**
  br label %22

22:                                               ; preds = %16, %20
  %23 = phi %"class.blink::NodeRenderingData"** [ %19, %16 ], [ %21, %20 ]
  %24 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %24, i64 0, i32 1
  %26 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %25, align 8
  %27 = icmp eq %"class.blink::LayoutObject"* %26, null
  br i1 %27, label %122, label %28

28:                                               ; preds = %22
  br i1 %14, label %33, label %29

29:                                               ; preds = %28
  %30 = bitcast %"class.blink::NodeData"** %15 to %"class.blink::NodeRareData"**
  %31 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %31, i64 0, i32 1, i32 0, i32 0
  br label %35

33:                                               ; preds = %28
  %34 = bitcast %"class.blink::NodeData"** %15 to %"class.blink::NodeRenderingData"**
  br label %35

35:                                               ; preds = %29, %33
  %36 = phi %"class.blink::NodeRenderingData"** [ %32, %29 ], [ %34, %33 ]
  %37 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %37, i64 0, i32 1
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %39, i64 0, i32 6, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %43, label %50

43:                                               ; preds = %35, %43
  %44 = phi %"class.blink::LayoutObject"* [ %46, %43 ], [ %39, %35 ]
  %45 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %44, i64 0, i32 7
  %46 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %46, i64 0, i32 6, i32 0, i32 0
  %48 = load %"class.blink::Node"*, %"class.blink::Node"** %47, align 8
  %49 = icmp eq %"class.blink::Node"* %48, null
  br i1 %49, label %43, label %50

50:                                               ; preds = %43, %35
  %51 = phi %"class.blink::Node"* [ %41, %35 ], [ %48, %43 ]
  %52 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %51, i64 0, i32 3, i32 0, i32 0
  %53 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %53, i64 0, i32 2, i32 0, i32 0
  %55 = load %"class.blink::Document"*, %"class.blink::Document"** %54, align 8
  %56 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %55) #19
  %57 = icmp eq %"class.blink::LocalFrameView"* %56, null
  br i1 %57, label %122, label %58

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"class.WTF::Vector.2542", %"class.WTF::Vector.2542"* %1, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %59, align 8
  %61 = getelementptr inbounds %"class.WTF::Vector.2542", %"class.WTF::Vector.2542"* %1, i64 0, i32 0, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %60, i64 %63
  %65 = icmp eq i32 %62, 0
  br i1 %65, label %122, label %66

66:                                               ; preds = %58
  %67 = bitcast <2 x float>* %5 to i8*
  %68 = bitcast <2 x float>* %5 to %"class.blink::FloatPoint"*
  %69 = bitcast <2 x float>* %6 to %"class.blink::FloatPoint"*
  %70 = bitcast <2 x float>* %5 to i64*
  %71 = bitcast <2 x float>* %6 to i8*
  %72 = bitcast <2 x float>* %3 to i8*
  %73 = bitcast <2 x float>* %3 to %"class.blink::FloatPoint"*
  %74 = bitcast <2 x float>* %4 to %"class.blink::FloatPoint"*
  %75 = bitcast <2 x float>* %3 to i64*
  %76 = bitcast <2 x float>* %4 to i8*
  %77 = bitcast <2 x float>* %9 to i8*
  %78 = bitcast <2 x float>* %9 to %"class.blink::FloatPoint"*
  %79 = bitcast <2 x float>* %10 to %"class.blink::FloatPoint"*
  %80 = bitcast <2 x float>* %9 to i64*
  %81 = bitcast <2 x float>* %10 to i8*
  %82 = bitcast <2 x float>* %7 to i8*
  %83 = bitcast <2 x float>* %7 to %"class.blink::FloatPoint"*
  %84 = bitcast <2 x float>* %8 to %"class.blink::FloatPoint"*
  %85 = bitcast <2 x float>* %7 to i64*
  %86 = bitcast <2 x float>* %8 to i8*
  br label %87

87:                                               ; preds = %66, %87
  %88 = phi %"class.blink::FloatQuad"* [ %60, %66 ], [ %120, %87 ]
  %89 = bitcast %"class.blink::FloatQuad"* %88 to <2 x float>*
  %90 = bitcast %"class.blink::FloatQuad"* %88 to i64*
  %91 = load i64, i64* %90, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67)
  store i64 %91, i64* %70, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #19
  %92 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* nonnull %56, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %68) #19
  store <2 x float> %92, <2 x float>* %6, align 8
  %93 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* nonnull %56) #19
  %94 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %93) #19
  %95 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %94, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %69) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67)
  store <2 x float> %95, <2 x float>* %89, align 4
  %96 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %88, i64 0, i32 1
  %97 = bitcast %"class.blink::FloatPoint"* %96 to <2 x float>*
  %98 = bitcast %"class.blink::FloatPoint"* %96 to i64*
  %99 = load i64, i64* %98, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72)
  store i64 %99, i64* %75, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #19
  %100 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* nonnull %56, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %73) #19
  store <2 x float> %100, <2 x float>* %4, align 8
  %101 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* nonnull %56) #19
  %102 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %101) #19
  %103 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %102, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %74) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72)
  store <2 x float> %103, <2 x float>* %97, align 4
  %104 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %88, i64 0, i32 2
  %105 = bitcast %"class.blink::FloatPoint"* %104 to i64*
  %106 = load i64, i64* %105, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #19
  store i64 %106, i64* %80, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #19
  %107 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* nonnull %56, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %78) #19
  store <2 x float> %107, <2 x float>* %10, align 8
  %108 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* nonnull %56) #19
  %109 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %108) #19
  %110 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %109, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %79) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #19
  %111 = bitcast %"class.blink::FloatPoint"* %104 to <2 x float>*
  store <2 x float> %110, <2 x float>* %111, align 4
  %112 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %88, i64 0, i32 3
  %113 = bitcast %"class.blink::FloatPoint"* %112 to i64*
  %114 = load i64, i64* %113, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #19
  store i64 %114, i64* %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #19
  %115 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* nonnull %56, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %83) #19
  store <2 x float> %115, <2 x float>* %8, align 8
  %116 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* nonnull %56) #19
  %117 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %116) #19
  %118 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %117, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %84) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #19
  %119 = bitcast %"class.blink::FloatPoint"* %112 to <2 x float>*
  store <2 x float> %118, <2 x float>* %119, align 4
  %120 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %88, i64 1
  %121 = icmp eq %"class.blink::FloatQuad"* %120, %64
  br i1 %121, label %122, label %87

122:                                              ; preds = %87, %58, %22, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink18InspectorHighlight15GetContentQuadsEPNS_4NodeEPNSt3__110unique_ptrINS3_6vectorINS4_INS5_IdNS3_9allocatorIdEEEENS3_14default_deleteIS8_EEEENS6_ISB_EEEENS9_ISD_EEEE(%"class.blink::Node"*, %"class.std::__1::unique_ptr.2420"* nocapture) local_unnamed_addr #4 align 2 {
  %3 = alloca %"class.WTF::Vector.2542", align 8
  %4 = alloca %"class.std::__1::unique_ptr.2425", align 8
  %5 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.blink::NodeData"** %9 to %"class.blink::NodeRareData"**
  %12 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %12, i64 0, i32 1, i32 0, i32 0
  br label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.blink::NodeData"** %9 to %"class.blink::NodeRenderingData"**
  br label %16

16:                                               ; preds = %10, %14
  %17 = phi %"class.blink::NodeRenderingData"** [ %13, %10 ], [ %15, %14 ]
  %18 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %18, i64 0, i32 1
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %22, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::Document"*, %"class.blink::Document"** %23, align 8
  %25 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %24) #19
  %26 = icmp ne %"class.blink::LayoutObject"* %20, null
  %27 = icmp ne %"class.blink::LocalFrameView"* %25, null
  %28 = and i1 %26, %27
  br i1 %28, label %29, label %216

29:                                               ; preds = %16
  %30 = bitcast %"class.WTF::Vector.2542"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #19
  %31 = getelementptr inbounds %"class.WTF::Vector.2542", %"class.WTF::Vector.2542"* %3, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.WTF::Vector.2542", %"class.WTF::Vector.2542"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 16, i1 false) #19
  call fastcc void @_ZN5blink12_GLOBAL__N_112CollectQuadsEPNS_4NodeERN3WTF6VectorINS_9FloatQuadELj0ENS3_18PartitionAllocatorEEE(%"class.blink::Node"* %0, %"class.WTF::Vector.2542"* nonnull dereferenceable(16) %3)
  %33 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* nonnull %25) #19
  %34 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %33) #19
  %35 = getelementptr inbounds %"class.blink::VisualViewport", %"class.blink::VisualViewport"* %34, i64 0, i32 14
  %36 = load float, float* %35, align 8
  %37 = fdiv float 1.000000e+00, %36
  %38 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %31, align 8
  %39 = load i32, i32* %32, align 4
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %38, i64 %40
  %42 = icmp eq i32 %39, 0
  br i1 %42, label %50, label %43

43:                                               ; preds = %29
  %44 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 0, i32 5, i32 0
  %45 = bitcast %"class.blink::ComputedStyle"** %44 to %"class.blink::ComputedStyleBase"**
  %46 = insertelement <4 x float> undef, float %37, i32 0
  %47 = shufflevector <4 x float> %46, <4 x float> undef, <4 x i32> zeroinitializer
  %48 = insertelement <4 x float> undef, float %37, i32 0
  %49 = shufflevector <4 x float> %48, <4 x float> undef, <4 x i32> zeroinitializer
  br label %102

50:                                               ; preds = %131, %29
  %51 = call i8* @_Znwm(i64 24) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 24, i1 false) #19
  %52 = ptrtoint i8* %51 to i64
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.2420", %"class.std::__1::unique_ptr.2420"* %1, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.std::__1::vector.2423"*, %"class.std::__1::vector.2423"** %53, align 8
  %55 = bitcast %"class.std::__1::unique_ptr.2420"* %1 to i64*
  store i64 %52, i64* %55, align 8
  %56 = icmp eq %"class.std::__1::vector.2423"* %54, null
  br i1 %56, label %92, label %57

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.std::__1::vector.2423", %"class.std::__1::vector.2423"* %54, i64 0, i32 0, i32 0
  %59 = load %"class.std::__1::unique_ptr.2425"*, %"class.std::__1::unique_ptr.2425"** %58, align 8
  %60 = icmp eq %"class.std::__1::unique_ptr.2425"* %59, null
  br i1 %60, label %90, label %61

61:                                               ; preds = %57
  %62 = bitcast %"class.std::__1::unique_ptr.2425"* %59 to i8*
  %63 = getelementptr inbounds %"class.std::__1::vector.2423", %"class.std::__1::vector.2423"* %54, i64 0, i32 0, i32 1
  %64 = load %"class.std::__1::unique_ptr.2425"*, %"class.std::__1::unique_ptr.2425"** %63, align 8
  %65 = icmp eq %"class.std::__1::unique_ptr.2425"* %64, %59
  br i1 %65, label %88, label %66

66:                                               ; preds = %61, %83
  %67 = phi %"class.std::__1::unique_ptr.2425"* [ %68, %83 ], [ %64, %61 ]
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %67, i64 -1
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.std::__1::vector.2428"*, %"class.std::__1::vector.2428"** %69, align 8
  store %"class.std::__1::vector.2428"* null, %"class.std::__1::vector.2428"** %69, align 8
  %71 = icmp eq %"class.std::__1::vector.2428"* %70, null
  br i1 %71, label %83, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.std::__1::vector.2428", %"class.std::__1::vector.2428"* %70, i64 0, i32 0, i32 0
  %74 = load double*, double** %73, align 8
  %75 = icmp eq double* %74, null
  br i1 %75, label %81, label %76

76:                                               ; preds = %72
  %77 = ptrtoint double* %74 to i64
  %78 = getelementptr inbounds %"class.std::__1::vector.2428", %"class.std::__1::vector.2428"* %70, i64 0, i32 0, i32 1
  %79 = bitcast double** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = bitcast double* %74 to i8*
  call void @_ZdlPv(i8* %80) #18
  br label %81

81:                                               ; preds = %76, %72
  %82 = bitcast %"class.std::__1::vector.2428"* %70 to i8*
  call void @_ZdlPv(i8* %82) #18
  br label %83

83:                                               ; preds = %81, %66
  %84 = icmp eq %"class.std::__1::unique_ptr.2425"* %68, %59
  br i1 %84, label %85, label %66

85:                                               ; preds = %83
  %86 = bitcast %"class.std::__1::vector.2423"* %54 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %85, %61
  %89 = phi i8* [ %87, %85 ], [ %62, %61 ]
  store %"class.std::__1::unique_ptr.2425"* %59, %"class.std::__1::unique_ptr.2425"** %63, align 8
  call void @_ZdlPv(i8* %89) #18
  br label %90

90:                                               ; preds = %88, %57
  %91 = bitcast %"class.std::__1::vector.2423"* %54 to i8*
  call void @_ZdlPv(i8* %91) #18
  br label %92

92:                                               ; preds = %90, %50
  %93 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %31, align 8
  %94 = load i32, i32* %32, align 4
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %93, i64 %95
  %97 = icmp eq i32 %94, 0
  br i1 %97, label %143, label %98

98:                                               ; preds = %92
  %99 = bitcast %"class.std::__1::unique_ptr.2425"* %4 to i8*
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %4, i64 0, i32 0, i32 0, i32 0
  %101 = bitcast %"class.std::__1::unique_ptr.2425"* %4 to i8**
  br label %153

102:                                              ; preds = %43, %131
  %103 = phi %"class.blink::FloatQuad"* [ %38, %43 ], [ %139, %131 ]
  %104 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %45, align 8
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %104, i64 0, i32 1, i32 0, i32 0
  %106 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %105, align 8
  %107 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %106, i64 0, i32 2, i32 0, i32 0
  %108 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %108, i64 0, i32 6
  %110 = load float, float* %109, align 8
  %111 = fcmp une float %110, 1.000000e+00
  br i1 %111, label %118, label %112

112:                                              ; preds = %102
  %113 = bitcast %"class.blink::FloatQuad"* %103 to <4 x float>*
  %114 = load <4 x float>, <4 x float>* %113, align 4
  %115 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %103, i64 0, i32 2, i32 0
  %116 = bitcast float* %115 to <4 x float>*
  %117 = load <4 x float>, <4 x float>* %116, align 4
  br label %131

118:                                              ; preds = %102
  %119 = fdiv float 1.000000e+00, %110
  %120 = bitcast %"class.blink::FloatQuad"* %103 to <4 x float>*
  %121 = load <4 x float>, <4 x float>* %120, align 4
  %122 = insertelement <4 x float> undef, float %119, i32 0
  %123 = shufflevector <4 x float> %122, <4 x float> undef, <4 x i32> zeroinitializer
  %124 = fmul <4 x float> %123, %121
  %125 = bitcast %"class.blink::FloatQuad"* %103 to <4 x float>*
  store <4 x float> %124, <4 x float>* %125, align 4
  %126 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %103, i64 0, i32 2, i32 0
  %127 = bitcast float* %126 to <4 x float>*
  %128 = load <4 x float>, <4 x float>* %127, align 4
  %129 = fmul <4 x float> %123, %128
  %130 = bitcast float* %126 to <4 x float>*
  store <4 x float> %129, <4 x float>* %130, align 4
  br label %131

131:                                              ; preds = %112, %118
  %132 = phi <4 x float> [ %114, %112 ], [ %124, %118 ]
  %133 = phi <4 x float> [ %117, %112 ], [ %129, %118 ]
  %134 = fmul <4 x float> %47, %132
  %135 = bitcast %"class.blink::FloatQuad"* %103 to <4 x float>*
  store <4 x float> %134, <4 x float>* %135, align 4
  %136 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %103, i64 0, i32 2, i32 0
  %137 = fmul <4 x float> %49, %133
  %138 = bitcast float* %136 to <4 x float>*
  store <4 x float> %137, <4 x float>* %138, align 4
  %139 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %103, i64 1
  %140 = icmp eq %"class.blink::FloatQuad"* %139, %41
  br i1 %140, label %50, label %102

141:                                              ; preds = %213
  %142 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %31, align 8
  br label %143

143:                                              ; preds = %141, %92
  %144 = phi %"class.blink::FloatQuad"* [ %142, %141 ], [ %93, %92 ]
  %145 = icmp eq %"class.blink::FloatQuad"* %144, null
  %146 = bitcast %"class.blink::FloatQuad"* %144 to i8*
  br i1 %145, label %152, label %147, !prof !27

147:                                              ; preds = %143
  %148 = load i32, i32* %32, align 4
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %151, label %150, !prof !2

150:                                              ; preds = %147
  store i32 0, i32* %32, align 4
  br label %151

151:                                              ; preds = %150, %147
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %146) #19
  store %"class.blink::FloatQuad"* null, %"class.blink::FloatQuad"** %31, align 8
  br label %152

152:                                              ; preds = %143, %151
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #19
  br label %216

153:                                              ; preds = %98, %213
  %154 = phi %"class.blink::FloatQuad"* [ %93, %98 ], [ %214, %213 ]
  %155 = load %"class.std::__1::vector.2423"*, %"class.std::__1::vector.2423"** %53, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #19
  %156 = bitcast %"class.blink::FloatQuad"* %154 to <2 x float>*
  %157 = load <2 x float>, <2 x float>* %156, align 4
  %158 = fpext <2 x float> %157 to <2 x double>
  %159 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %154, i64 0, i32 1
  %160 = bitcast %"class.blink::FloatPoint"* %159 to <2 x float>*
  %161 = load <2 x float>, <2 x float>* %160, align 4
  %162 = fpext <2 x float> %161 to <2 x double>
  %163 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %154, i64 0, i32 2
  %164 = bitcast %"class.blink::FloatPoint"* %163 to <2 x float>*
  %165 = load <2 x float>, <2 x float>* %164, align 4
  %166 = fpext <2 x float> %165 to <2 x double>
  %167 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %154, i64 0, i32 3
  %168 = bitcast %"class.blink::FloatPoint"* %167 to <2 x float>*
  %169 = load <2 x float>, <2 x float>* %168, align 4
  %170 = fpext <2 x float> %169 to <2 x double>
  %171 = call i8* @_Znwm(i64 24) #18
  %172 = call i8* @_Znwm(i64 64) #18
  %173 = getelementptr inbounds i8, i8* %171, i64 8
  %174 = bitcast i8* %171 to i8**
  store i8* %172, i8** %174, align 8
  %175 = getelementptr inbounds i8, i8* %172, i64 64
  %176 = getelementptr inbounds i8, i8* %171, i64 16
  %177 = bitcast i8* %176 to i8**
  store i8* %175, i8** %177, align 8
  %178 = bitcast i8* %173 to i64*
  %179 = bitcast i8* %172 to <2 x double>*
  store <2 x double> %158, <2 x double>* %179, align 8
  %180 = getelementptr inbounds i8, i8* %172, i64 16
  %181 = bitcast i8* %180 to <2 x double>*
  store <2 x double> %162, <2 x double>* %181, align 8
  %182 = getelementptr inbounds i8, i8* %172, i64 32
  %183 = bitcast i8* %182 to <2 x double>*
  store <2 x double> %166, <2 x double>* %183, align 8
  %184 = getelementptr inbounds i8, i8* %172, i64 48
  %185 = bitcast i8* %184 to <2 x double>*
  store <2 x double> %170, <2 x double>* %185, align 8
  %186 = ptrtoint i8* %175 to i64
  store i64 %186, i64* %178, align 8
  store i8* %171, i8** %101, align 8
  %187 = getelementptr inbounds %"class.std::__1::vector.2423", %"class.std::__1::vector.2423"* %155, i64 0, i32 0, i32 1
  %188 = load %"class.std::__1::unique_ptr.2425"*, %"class.std::__1::unique_ptr.2425"** %187, align 8
  %189 = getelementptr inbounds %"class.std::__1::vector.2423", %"class.std::__1::vector.2423"* %155, i64 0, i32 0, i32 2, i32 0, i32 0
  %190 = load %"class.std::__1::unique_ptr.2425"*, %"class.std::__1::unique_ptr.2425"** %189, align 8
  %191 = icmp ult %"class.std::__1::unique_ptr.2425"* %188, %190
  br i1 %191, label %192, label %198

192:                                              ; preds = %153
  %193 = ptrtoint i8* %171 to i64
  store %"class.std::__1::vector.2428"* null, %"class.std::__1::vector.2428"** %100, align 8
  %194 = bitcast %"class.std::__1::unique_ptr.2425"* %188 to i64*
  store i64 %193, i64* %194, align 8
  %195 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %188, i64 1
  %196 = ptrtoint %"class.std::__1::unique_ptr.2425"* %195 to i64
  %197 = bitcast %"class.std::__1::unique_ptr.2425"** %187 to i64*
  store i64 %196, i64* %197, align 8
  br label %199

198:                                              ; preds = %153
  call void @_ZNSt3__16vectorINS_10unique_ptrINS0_IdNS_9allocatorIdEEEENS_14default_deleteIS4_EEEENS2_IS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.2423"* %155, %"class.std::__1::unique_ptr.2425"* nonnull dereferenceable(8) %4) #19
  br label %199

199:                                              ; preds = %192, %198
  %200 = load %"class.std::__1::vector.2428"*, %"class.std::__1::vector.2428"** %100, align 8
  store %"class.std::__1::vector.2428"* null, %"class.std::__1::vector.2428"** %100, align 8
  %201 = icmp eq %"class.std::__1::vector.2428"* %200, null
  br i1 %201, label %213, label %202

202:                                              ; preds = %199
  %203 = getelementptr inbounds %"class.std::__1::vector.2428", %"class.std::__1::vector.2428"* %200, i64 0, i32 0, i32 0
  %204 = load double*, double** %203, align 8
  %205 = icmp eq double* %204, null
  br i1 %205, label %211, label %206

206:                                              ; preds = %202
  %207 = ptrtoint double* %204 to i64
  %208 = getelementptr inbounds %"class.std::__1::vector.2428", %"class.std::__1::vector.2428"* %200, i64 0, i32 0, i32 1
  %209 = bitcast double** %208 to i64*
  store i64 %207, i64* %209, align 8
  %210 = bitcast double* %204 to i8*
  call void @_ZdlPv(i8* %210) #18
  br label %211

211:                                              ; preds = %206, %202
  %212 = bitcast %"class.std::__1::vector.2428"* %200 to i8*
  call void @_ZdlPv(i8* %212) #18
  br label %213

213:                                              ; preds = %199, %211
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #19
  %214 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %154, i64 1
  %215 = icmp eq %"class.blink::FloatQuad"* %214, %96
  br i1 %215, label %141, label %153

216:                                              ; preds = %16, %152
  %217 = phi i1 [ true, %152 ], [ false, %16 ]
  ret i1 %217
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::protocol::DictionaryValue"* @_ZN5blink22InspectorGridHighlightEPNS_4NodeERKNS_28InspectorGridHighlightConfigE(%"class.blink::Node"*, %"struct.blink::InspectorGridHighlightConfig"* dereferenceable(48)) local_unnamed_addr #1 {
  %3 = tail call %"class.blink::Element"* @_ZN5blink20DisplayLockUtilities30NearestLockedExclusiveAncestorERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %0) #19
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %5, label %52

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  %10 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %9) #19
  %11 = icmp eq %"class.blink::LocalFrameView"* %10, null
  br i1 %11, label %52, label %12

12:                                               ; preds = %5
  %13 = tail call %"class.blink::ChromeClient"* @_ZNK5blink14LocalFrameView15GetChromeClientEv(%"class.blink::LocalFrameView"* nonnull %10) #19
  %14 = getelementptr inbounds %"class.blink::LocalFrameView", %"class.blink::LocalFrameView"* %10, i64 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %14, align 8
  %16 = bitcast %"class.blink::ChromeClient"* %13 to float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)***
  %17 = load float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)**, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*** %16, align 8
  %18 = getelementptr inbounds float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)** %17, i64 3
  %19 = load float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)** %18, align 8
  %20 = tail call float %19(%"class.blink::ChromeClient"* %13, %"class.blink::LocalFrame"* %15, float 1.000000e+00) #19
  %21 = fdiv float 1.000000e+00, %20
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %25, label %31, label %27

27:                                               ; preds = %12
  %28 = bitcast %"class.blink::NodeData"** %26 to %"class.blink::NodeRareData"**
  %29 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %29, i64 0, i32 1, i32 0, i32 0
  br label %33

31:                                               ; preds = %12
  %32 = bitcast %"class.blink::NodeData"** %26 to %"class.blink::NodeRenderingData"**
  br label %33

33:                                               ; preds = %27, %31
  %34 = phi %"class.blink::NodeRenderingData"** [ %30, %27 ], [ %32, %31 ]
  %35 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %35, i64 0, i32 1
  %37 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %36, align 8
  %38 = icmp eq %"class.blink::LayoutObject"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.blink::LayoutObject"* %37 to i1 (%"class.blink::LayoutObject"*, i32)***
  %41 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %40, align 8
  %42 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %41, i64 92
  %43 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %42, align 8
  %44 = tail call zeroext i1 %43(%"class.blink::LayoutObject"* nonnull %37, i32 10) #19
  br i1 %44, label %50, label %45

45:                                               ; preds = %39
  %46 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %40, align 8
  %47 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %46, i64 92
  %48 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %47, align 8
  %49 = tail call zeroext i1 %48(%"class.blink::LayoutObject"* nonnull %37, i32 27) #19
  br i1 %49, label %50, label %52

50:                                               ; preds = %39, %45
  %51 = tail call fastcc %"class.blink::protocol::DictionaryValue"* @_ZN5blink12_GLOBAL__N_113BuildGridInfoEPNS_4NodeERKNS_28InspectorGridHighlightConfigEfb(%"class.blink::Node"* %0, %"struct.blink::InspectorGridHighlightConfig"* dereferenceable(48) %1, float %21)
  br label %52

52:                                               ; preds = %45, %33, %5, %2, %50
  %53 = phi %"class.blink::protocol::DictionaryValue"* [ %51, %50 ], [ null, %2 ], [ null, %5 ], [ null, %33 ], [ null, %45 ]
  ret %"class.blink::protocol::DictionaryValue"* %53
}

declare %"class.blink::Element"* @_ZN5blink20DisplayLockUtilities30NearestLockedExclusiveAncestorERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::protocol::DictionaryValue"* @_ZN5blink12_GLOBAL__N_113BuildGridInfoEPNS_4NodeERKNS_28InspectorGridHighlightConfigEfb(%"class.blink::Node"*, %"struct.blink::InspectorGridHighlightConfig"* dereferenceable(48), float) unnamed_addr #4 {
  %4 = alloca <2 x float>, align 8
  %5 = alloca <2 x float>, align 8
  %6 = alloca <2 x float>, align 8
  %7 = alloca <2 x float>, align 8
  %8 = alloca <2 x float>, align 8
  %9 = alloca <2 x float>, align 8
  %10 = alloca <2 x float>, align 8
  %11 = alloca <2 x float>, align 8
  %12 = alloca <2 x float>, align 8
  %13 = alloca <2 x float>, align 8
  %14 = alloca <2 x float>, align 8
  %15 = alloca <2 x float>, align 8
  %16 = alloca <2 x float>, align 8
  %17 = alloca <2 x float>, align 8
  %18 = alloca <2 x float>, align 8
  %19 = alloca <2 x float>, align 8
  %20 = alloca <2 x float>, align 8
  %21 = alloca <2 x float>, align 8
  %22 = alloca <2 x float>, align 8
  %23 = alloca <2 x float>, align 8
  %24 = alloca %"class.blink::Path", align 8
  %25 = alloca %"class.blink::AffineTransform", align 8
  %26 = alloca <2 x float>, align 8
  %27 = alloca <2 x float>, align 8
  %28 = alloca <2 x float>, align 8
  %29 = alloca <2 x float>, align 8
  %30 = alloca <2 x float>, align 8
  %31 = alloca <2 x float>, align 8
  %32 = alloca <2 x float>, align 8
  %33 = alloca <2 x float>, align 8
  %34 = alloca %"class.blink::FloatQuad", align 8
  %35 = alloca <2 x float>, align 8
  %36 = alloca <2 x float>, align 8
  %37 = alloca %"class.blink::FloatQuad", align 8
  %38 = alloca <2 x float>, align 8
  %39 = alloca <2 x float>, align 8
  %40 = alloca <2 x float>, align 8
  %41 = alloca <2 x float>, align 8
  %42 = alloca <2 x float>, align 8
  %43 = alloca <2 x float>, align 8
  %44 = alloca <2 x float>, align 8
  %45 = alloca <2 x float>, align 8
  %46 = alloca <2 x float>, align 8
  %47 = alloca <2 x float>, align 8
  %48 = alloca %"class.blink::Path", align 8
  %49 = alloca %"class.blink::AffineTransform", align 8
  %50 = alloca %"class.WTF::HashMap.548", align 8
  %51 = alloca %"class.blink::FloatQuad", align 8
  %52 = alloca %"class.blink::(anonymous namespace)::PathBuilder", align 8
  %53 = alloca %"class.blink::Path", align 8
  %54 = alloca %"class.blink::Path", align 8
  %55 = alloca %"class.blink::AffineTransform", align 8
  %56 = alloca <2 x float>, align 8
  %57 = alloca <2 x float>, align 8
  %58 = alloca <2 x float>, align 8
  %59 = alloca <2 x float>, align 8
  %60 = alloca <2 x float>, align 8
  %61 = alloca <2 x float>, align 8
  %62 = alloca <2 x float>, align 8
  %63 = alloca <2 x float>, align 8
  %64 = alloca %"class.blink::FloatQuad", align 8
  %65 = alloca %"class.blink::Path", align 8
  %66 = alloca %"class.blink::AffineTransform", align 8
  %67 = alloca <2 x float>, align 8
  %68 = alloca <2 x float>, align 8
  %69 = alloca <2 x float>, align 8
  %70 = alloca <2 x float>, align 8
  %71 = alloca <2 x float>, align 8
  %72 = alloca <2 x float>, align 8
  %73 = alloca <2 x float>, align 8
  %74 = alloca <2 x float>, align 8
  %75 = alloca %"class.blink::FloatQuad", align 8
  %76 = alloca %"class.blink::Path", align 8
  %77 = alloca %"class.blink::AffineTransform", align 8
  %78 = alloca <2 x float>, align 8
  %79 = alloca <2 x float>, align 8
  %80 = alloca <2 x float>, align 8
  %81 = alloca <2 x float>, align 8
  %82 = alloca <2 x float>, align 8
  %83 = alloca <2 x float>, align 8
  %84 = alloca <2 x float>, align 8
  %85 = alloca <2 x float>, align 8
  %86 = alloca %"class.blink::FloatQuad", align 8
  %87 = alloca %"class.blink::Path", align 8
  %88 = alloca %"class.blink::AffineTransform", align 8
  %89 = alloca <2 x float>, align 8
  %90 = alloca <2 x float>, align 8
  %91 = alloca <2 x float>, align 8
  %92 = alloca <2 x float>, align 8
  %93 = alloca <2 x float>, align 8
  %94 = alloca <2 x float>, align 8
  %95 = alloca <2 x float>, align 8
  %96 = alloca <2 x float>, align 8
  %97 = alloca %"class.blink::FloatQuad", align 8
  %98 = alloca %"class.WTF::String", align 8
  %99 = alloca %"class.WTF::String", align 8
  %100 = alloca %"class.WTF::String", align 8
  %101 = alloca %"class.WTF::String", align 8
  %102 = alloca %"class.WTF::String", align 8
  %103 = alloca %"class.WTF::String", align 8
  %104 = alloca %"class.WTF::String", align 8
  %105 = alloca %"class.WTF::String", align 8
  %106 = alloca %"class.WTF::String", align 8
  %107 = alloca %"class.WTF::String", align 8
  %108 = alloca %"class.WTF::String", align 8
  %109 = alloca %"class.WTF::String", align 8
  %110 = alloca %"class.WTF::String", align 8
  %111 = alloca %"class.WTF::String", align 8
  %112 = alloca %"class.WTF::String", align 8
  %113 = alloca %"class.WTF::String", align 8
  %114 = alloca %"class.WTF::String", align 8
  %115 = alloca %"class.WTF::String", align 8
  %116 = alloca %"class.WTF::String", align 8
  %117 = alloca %"class.WTF::String", align 8
  %118 = alloca %"class.WTF::String", align 8
  %119 = alloca %"class.WTF::String", align 8
  %120 = alloca %"class.WTF::String", align 8
  %121 = alloca %"class.WTF::String", align 8
  %122 = alloca %"class.WTF::String", align 8
  %123 = alloca %"class.WTF::String", align 8
  %124 = alloca %"class.WTF::String", align 8
  %125 = alloca %"class.blink::FloatPoint", align 4
  %126 = alloca %"class.blink::FloatPoint", align 4
  %127 = alloca %"class.WTF::Vector.3011", align 8
  %128 = alloca %"class.WTF::Vector.3011", align 8
  %129 = alloca %"class.WTF::String", align 8
  %130 = alloca %"class.WTF::String", align 8
  %131 = alloca %"class.WTF::String", align 8
  %132 = alloca %"class.blink::LayoutUnit", align 4
  %133 = alloca %"class.blink::LayoutUnit", align 4
  %134 = alloca %"class.blink::HeapHashMap.3016", align 8
  %135 = alloca %"class.WTF::Vector.630", align 8
  %136 = alloca %"class.blink::CSSPropertyName", align 8
  %137 = alloca %"class.WTF::Vector.630", align 8
  %138 = alloca %"class.blink::CSSPropertyName", align 8
  %139 = alloca %"class.WTF::String", align 8
  %140 = alloca %"class.WTF::String", align 8
  %141 = alloca %"class.blink::(anonymous namespace)::PathBuilder", align 8
  %142 = alloca %"class.blink::(anonymous namespace)::PathBuilder", align 8
  %143 = alloca %"class.blink::FloatQuad", align 8
  %144 = alloca %"class.blink::Path", align 8
  %145 = alloca %"class.blink::FloatQuad", align 8
  %146 = alloca %"class.blink::Path", align 8
  %147 = alloca %"class.WTF::String", align 8
  %148 = alloca %"class.WTF::String", align 8
  %149 = alloca %"class.blink::(anonymous namespace)::PathBuilder", align 8
  %150 = alloca %"class.blink::(anonymous namespace)::PathBuilder", align 8
  %151 = alloca %"class.blink::FloatQuad", align 8
  %152 = alloca %"class.blink::Path", align 8
  %153 = alloca %"class.blink::FloatQuad", align 8
  %154 = alloca %"class.blink::Path", align 8
  %155 = alloca %"class.WTF::String", align 8
  %156 = alloca %"class.WTF::String", align 8
  %157 = alloca %"class.WTF::String", align 8
  %158 = alloca %"class.WTF::String", align 8
  %159 = alloca %"class.WTF::String", align 8
  %160 = alloca %"class.WTF::String", align 8
  %161 = alloca %"class.WTF::String", align 8
  %162 = alloca %"class.WTF::String", align 8
  %163 = alloca %"class.WTF::String", align 8
  %164 = alloca %"class.blink::(anonymous namespace)::PathBuilder", align 8
  %165 = alloca %"class.blink::FloatQuad", align 8
  %166 = alloca %"class.blink::Path", align 8
  %167 = alloca %"class.WTF::String", align 8
  %168 = alloca %"class.WTF::String", align 8
  %169 = alloca %"class.WTF::String", align 8
  %170 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %171 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %170, align 8
  %172 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %171, i64 0, i32 2, i32 0, i32 0
  %173 = load %"class.blink::Document"*, %"class.blink::Document"** %172, align 8
  %174 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %173) #19
  %175 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %176 = load i32, i32* %175, align 8
  %177 = and i32 %176, 1
  %178 = icmp eq i32 %177, 0
  %179 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %178, label %184, label %180

180:                                              ; preds = %3
  %181 = bitcast %"class.blink::NodeData"** %179 to %"class.blink::NodeRareData"**
  %182 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %181, align 8
  %183 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %182, i64 0, i32 1, i32 0, i32 0
  br label %186

184:                                              ; preds = %3
  %185 = bitcast %"class.blink::NodeData"** %179 to %"class.blink::NodeRenderingData"**
  br label %186

186:                                              ; preds = %180, %184
  %187 = phi %"class.blink::NodeRenderingData"** [ %183, %180 ], [ %185, %184 ]
  %188 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %187, align 8
  %189 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %188, i64 0, i32 1
  %190 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %189, align 8
  %191 = icmp eq %"class.blink::LayoutObject"* %190, null
  br i1 %191, label %198, label %192

192:                                              ; preds = %186
  %193 = bitcast %"class.blink::LayoutObject"* %190 to %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)***
  %194 = load %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)*** %193, align 8
  %195 = getelementptr inbounds %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)** %194, i64 33
  %196 = load %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)** %195, align 8
  %197 = tail call %"class.blink::LayoutNGGridInterface"* %196(%"class.blink::LayoutObject"* nonnull %190) #19
  br label %198

198:                                              ; preds = %186, %192
  %199 = phi %"class.blink::LayoutNGGridInterface"* [ %197, %192 ], [ null, %186 ]
  %200 = tail call i8* @_Znwm(i64 80) #18
  %201 = bitcast i8* %200 to %"class.blink::protocol::DictionaryValue"*
  tail call void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"* nonnull %201) #19
  %202 = bitcast %"class.WTF::Vector.3011"* %127 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %202) #19
  %203 = getelementptr inbounds %"class.WTF::Vector.3011", %"class.WTF::Vector.3011"* %127, i64 0, i32 0, i32 0, i32 0
  %204 = getelementptr inbounds %"class.WTF::Vector.3011", %"class.WTF::Vector.3011"* %127, i64 0, i32 0, i32 0, i32 2
  %205 = bitcast %"class.blink::LayoutNGGridInterface"* %199 to void (%"class.WTF::Vector.3011"*, %"class.blink::LayoutNGGridInterface"*)***
  %206 = bitcast %"class.WTF::Vector.3011"* %127 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %206, i8 -86, i64 16, i1 false)
  %207 = load void (%"class.WTF::Vector.3011"*, %"class.blink::LayoutNGGridInterface"*)**, void (%"class.WTF::Vector.3011"*, %"class.blink::LayoutNGGridInterface"*)*** %205, align 8
  %208 = getelementptr inbounds void (%"class.WTF::Vector.3011"*, %"class.blink::LayoutNGGridInterface"*)*, void (%"class.WTF::Vector.3011"*, %"class.blink::LayoutNGGridInterface"*)** %207, i64 4
  %209 = load void (%"class.WTF::Vector.3011"*, %"class.blink::LayoutNGGridInterface"*)*, void (%"class.WTF::Vector.3011"*, %"class.blink::LayoutNGGridInterface"*)** %208, align 8
  call void %209(%"class.WTF::Vector.3011"* nonnull sret %127, %"class.blink::LayoutNGGridInterface"* %199) #19
  %210 = bitcast %"class.WTF::Vector.3011"* %128 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %210) #19
  %211 = getelementptr inbounds %"class.WTF::Vector.3011", %"class.WTF::Vector.3011"* %128, i64 0, i32 0, i32 0, i32 0
  %212 = getelementptr inbounds %"class.WTF::Vector.3011", %"class.WTF::Vector.3011"* %128, i64 0, i32 0, i32 0, i32 2
  %213 = bitcast %"class.WTF::Vector.3011"* %128 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %213, i8 -86, i64 16, i1 false)
  %214 = load void (%"class.WTF::Vector.3011"*, %"class.blink::LayoutNGGridInterface"*)**, void (%"class.WTF::Vector.3011"*, %"class.blink::LayoutNGGridInterface"*)*** %205, align 8
  %215 = getelementptr inbounds void (%"class.WTF::Vector.3011"*, %"class.blink::LayoutNGGridInterface"*)*, void (%"class.WTF::Vector.3011"*, %"class.blink::LayoutNGGridInterface"*)** %214, i64 5
  %216 = load void (%"class.WTF::Vector.3011"*, %"class.blink::LayoutNGGridInterface"*)*, void (%"class.WTF::Vector.3011"*, %"class.blink::LayoutNGGridInterface"*)** %215, align 8
  call void %216(%"class.WTF::Vector.3011"* nonnull sret %128, %"class.blink::LayoutNGGridInterface"* %199) #19
  %217 = bitcast %"class.WTF::String"* %129 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %217) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %129, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.112, i64 0, i64 0), i64 13) #19
  %218 = bitcast %"class.blink::FloatPoint"* %125 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %218) #19
  %219 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %125, i64 0, i32 0
  %220 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %125, i64 0, i32 1
  store float 0.000000e+00, float* %219, align 4
  store float 0.000000e+00, float* %220, align 4
  %221 = bitcast %"class.blink::FloatPoint"* %126 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %221) #19
  %222 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %126, i64 0, i32 0
  %223 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %126, i64 0, i32 1
  store float 1.000000e+00, float* %222, align 4
  store float 1.000000e+00, float* %223, align 4
  %224 = call <2 x float> @_ZNK5blink12LayoutObject25LocalToAncestorFloatPointERKNS_10FloatPointEPKNS_20LayoutBoxModelObjectEj(%"class.blink::LayoutObject"* %190, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %125, %"class.blink::LayoutBoxModelObject"* null, i32 0) #19
  %225 = call <2 x float> @_ZNK5blink12LayoutObject25LocalToAncestorFloatPointERKNS_10FloatPointEPKNS_20LayoutBoxModelObjectEj(%"class.blink::LayoutObject"* %190, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %126, %"class.blink::LayoutBoxModelObject"* null, i32 0) #19
  %226 = extractelement <2 x float> %225, i32 0
  %227 = extractelement <2 x float> %224, i32 0
  %228 = fsub float %226, %227
  %229 = extractelement <2 x float> %224, i32 1
  %230 = extractelement <2 x float> %225, i32 1
  %231 = fsub float %229, %230
  %232 = call float @atan2f(float %228, float %231) #19
  %233 = fpext float %232 to double
  %234 = fcmp olt float %232, 0.000000e+00
  %235 = fadd double %233, 0x401921FB54442D18
  %236 = select i1 %234, double %235, double %233
  %237 = fmul double %236, 0x404CA5DC1A63C1F8
  %238 = call double @llvm.round.f64(double %237) #19
  %239 = fptosi double %238 to i32
  %240 = add nsw i32 %239, -135
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %221) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %218) #19
  call void @_ZN5blink8protocol15DictionaryValue10setIntegerERKN3WTF6StringEi(%"class.blink::protocol::DictionaryValue"* nonnull %201, %"class.WTF::String"* nonnull dereferenceable(8) %129, i32 %240) #19
  %241 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %129, i64 0, i32 0, i32 0
  %242 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %241, align 8
  %243 = icmp eq %"class.WTF::StringImpl"* %242, null
  br i1 %243, label %257, label %244

244:                                              ; preds = %198
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load atomic i32, i32* %245 monotonic, align 4
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 0
  %250 = load i32, i32* %249, align 4
  br i1 %248, label %251, label %253

251:                                              ; preds = %244
  %252 = add i32 %250, -1
  store i32 %252, i32* %249, align 4
  br label %253

253:                                              ; preds = %251, %244
  %254 = phi i32 [ %252, %251 ], [ %250, %244 ]
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %257

256:                                              ; preds = %253
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %242) #19
  br label %257

257:                                              ; preds = %198, %253, %256
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %217) #19
  %258 = bitcast %"class.WTF::String"* %130 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %258) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %130, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.113, i64 0, i64 0), i64 11) #19
  %259 = bitcast %"class.WTF::String"* %131 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %259) #19
  %260 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %190, i64 0, i32 5, i32 0
  %261 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %260, align 8
  %262 = bitcast %"class.WTF::String"* %124 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %262)
  %263 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %261, i64 0, i32 0, i32 9
  %264 = bitcast [20 x i8]* %263 to i160*
  %265 = load i160, i160* %264, align 8
  %266 = lshr i160 %265, 102
  %267 = trunc i160 %266 to i8
  %268 = and i8 %267, 3
  switch i8 %268, label %271 [
    i8 2, label %269
    i8 1, label %270
  ]

269:                                              ; preds = %257
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %124, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.130, i64 0, i64 0), i64 11) #19
  br label %272

270:                                              ; preds = %257
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %124, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.131, i64 0, i64 0), i64 11) #19
  br label %272

271:                                              ; preds = %257
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %124, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.132, i64 0, i64 0), i64 13) #19
  br label %272

272:                                              ; preds = %269, %270, %271
  %273 = bitcast %"class.WTF::String"* %124 to i64*
  %274 = load i64, i64* %273, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %262)
  %275 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %131, i64 0, i32 0, i32 0
  %276 = bitcast %"class.WTF::String"* %131 to i64*
  store i64 %274, i64* %276, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %201, %"class.WTF::String"* nonnull dereferenceable(8) %130, %"class.WTF::String"* nonnull dereferenceable(8) %131) #19
  %277 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8
  %278 = icmp eq %"class.WTF::StringImpl"* %277, null
  br i1 %278, label %292, label %279

279:                                              ; preds = %272
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %277, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %281 = load atomic i32, i32* %280 monotonic, align 4
  %282 = and i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %277, i64 0, i32 0
  %285 = load i32, i32* %284, align 4
  br i1 %283, label %286, label %288

286:                                              ; preds = %279
  %287 = add i32 %285, -1
  store i32 %287, i32* %284, align 4
  br label %288

288:                                              ; preds = %286, %279
  %289 = phi i32 [ %287, %286 ], [ %285, %279 ]
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %292

291:                                              ; preds = %288
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %277) #19
  br label %292

292:                                              ; preds = %272, %288, %291
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %259) #19
  %293 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %130, i64 0, i32 0, i32 0
  %294 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %293, align 8
  %295 = icmp eq %"class.WTF::StringImpl"* %294, null
  br i1 %295, label %309, label %296

296:                                              ; preds = %292
  %297 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %294, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %298 = load atomic i32, i32* %297 monotonic, align 4
  %299 = and i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %294, i64 0, i32 0
  %302 = load i32, i32* %301, align 4
  br i1 %300, label %303, label %305

303:                                              ; preds = %296
  %304 = add i32 %302, -1
  store i32 %304, i32* %301, align 4
  br label %305

305:                                              ; preds = %303, %296
  %306 = phi i32 [ %304, %303 ], [ %302, %296 ]
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %308, label %309

308:                                              ; preds = %305
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %294) #19
  br label %309

309:                                              ; preds = %292, %305, %308
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %258) #19
  %310 = bitcast %"class.blink::LayoutUnit"* %132 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %310) #19
  %311 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %132, i64 0, i32 0
  %312 = bitcast %"class.blink::LayoutNGGridInterface"* %199 to i32 (%"class.blink::LayoutNGGridInterface"*, i32)***
  %313 = load i32 (%"class.blink::LayoutNGGridInterface"*, i32)**, i32 (%"class.blink::LayoutNGGridInterface"*, i32)*** %312, align 8
  %314 = getelementptr inbounds i32 (%"class.blink::LayoutNGGridInterface"*, i32)*, i32 (%"class.blink::LayoutNGGridInterface"*, i32)** %313, i64 6
  %315 = load i32 (%"class.blink::LayoutNGGridInterface"*, i32)*, i32 (%"class.blink::LayoutNGGridInterface"*, i32)** %314, align 8
  %316 = call i32 %315(%"class.blink::LayoutNGGridInterface"* %199, i32 1) #19
  %317 = load i32 (%"class.blink::LayoutNGGridInterface"*, i32)**, i32 (%"class.blink::LayoutNGGridInterface"*, i32)*** %312, align 8
  %318 = getelementptr inbounds i32 (%"class.blink::LayoutNGGridInterface"*, i32)*, i32 (%"class.blink::LayoutNGGridInterface"*, i32)** %317, i64 7
  %319 = load i32 (%"class.blink::LayoutNGGridInterface"*, i32)*, i32 (%"class.blink::LayoutNGGridInterface"*, i32)** %318, align 8
  %320 = call i32 %319(%"class.blink::LayoutNGGridInterface"* %199, i32 1) #19
  %321 = icmp slt i32 %320, 0
  %322 = select i1 %321, i32 -2147483648, i32 2147483647
  %323 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %316, i32 %320) #19
  %324 = extractvalue { i32, i1 } %323, 1
  %325 = extractvalue { i32, i1 } %323, 0
  %326 = select i1 %324, i32 %322, i32 %325, !prof !2
  store i32 %326, i32* %311, align 4
  %327 = bitcast %"class.blink::LayoutUnit"* %133 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %327) #19
  %328 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %133, i64 0, i32 0
  %329 = load i32 (%"class.blink::LayoutNGGridInterface"*, i32)**, i32 (%"class.blink::LayoutNGGridInterface"*, i32)*** %312, align 8
  %330 = getelementptr inbounds i32 (%"class.blink::LayoutNGGridInterface"*, i32)*, i32 (%"class.blink::LayoutNGGridInterface"*, i32)** %329, i64 6
  %331 = load i32 (%"class.blink::LayoutNGGridInterface"*, i32)*, i32 (%"class.blink::LayoutNGGridInterface"*, i32)** %330, align 8
  %332 = call i32 %331(%"class.blink::LayoutNGGridInterface"* %199, i32 0) #19
  %333 = load i32 (%"class.blink::LayoutNGGridInterface"*, i32)**, i32 (%"class.blink::LayoutNGGridInterface"*, i32)*** %312, align 8
  %334 = getelementptr inbounds i32 (%"class.blink::LayoutNGGridInterface"*, i32)*, i32 (%"class.blink::LayoutNGGridInterface"*, i32)** %333, i64 7
  %335 = load i32 (%"class.blink::LayoutNGGridInterface"*, i32)*, i32 (%"class.blink::LayoutNGGridInterface"*, i32)** %334, align 8
  %336 = call i32 %335(%"class.blink::LayoutNGGridInterface"* %199, i32 0) #19
  %337 = icmp slt i32 %336, 0
  %338 = select i1 %337, i32 -2147483648, i32 2147483647
  %339 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %332, i32 %336) #19
  %340 = extractvalue { i32, i1 } %339, 1
  %341 = extractvalue { i32, i1 } %339, 0
  %342 = select i1 %340, i32 %338, i32 %341, !prof !2
  store i32 %342, i32* %328, align 4
  %343 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %1, i64 0, i32 17
  %344 = load i8, i8* %343, align 4, !range !26
  %345 = icmp eq i8 %344, 0
  br i1 %345, label %545, label %346

346:                                              ; preds = %309
  %347 = icmp eq %"class.blink::Node"* %0, null
  br i1 %347, label %354, label %348

348:                                              ; preds = %346
  %349 = load i32, i32* %175, align 8
  %350 = and i32 %349, 12
  %351 = icmp eq i32 %350, 0
  %352 = bitcast %"class.blink::Node"* %0 to %"class.blink::Element"*
  %353 = select i1 %351, %"class.blink::Element"* %352, %"class.blink::Element"* null
  br label %354

354:                                              ; preds = %346, %348
  %355 = phi %"class.blink::Element"* [ %353, %348 ], [ null, %346 ]
  %356 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %355, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %357 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %356, align 8
  %358 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %357, i64 0, i32 2, i32 0, i32 0
  %359 = load %"class.blink::Document"*, %"class.blink::Document"** %358, align 8
  %360 = call dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"* %359) #19
  %361 = bitcast %"class.blink::HeapHashMap.3016"* %134 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %361) #19
  %362 = bitcast %"class.blink::HeapHashMap.3016"* %134 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %362, i8 -86, i64 24, i1 false)
  call void @_ZN5blink13StyleResolver24CascadedValuesForElementEPNS_7ElementENS_8PseudoIdE(%"class.blink::HeapHashMap.3016"* nonnull sret %134, %"class.blink::StyleResolver"* %360, %"class.blink::Element"* %355, i8 zeroext 0) #19
  %363 = bitcast %"class.WTF::Vector.630"* %135 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %363) #19
  %364 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %135, i64 0, i32 0, i32 0, i32 0
  %365 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %135, i64 0, i32 0, i32 0, i32 2
  %366 = bitcast %"class.blink::CSSPropertyName"* %136 to i8*
  %367 = bitcast %"class.WTF::Vector.630"* %135 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %367, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %366) #19
  %368 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %136, i64 0, i32 0
  store i32 163, i32* %368, align 8
  %369 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %136, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %369, align 8
  %370 = getelementptr inbounds %"class.blink::HeapHashMap.3016", %"class.blink::HeapHashMap.3016"* %134, i64 0, i32 0, i32 0
  %371 = call %"struct.WTF::KeyValuePair.3022"* @_ZNK3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EERKS2_EEPKS8_RKT0_(%"class.WTF::HashTable.3020"* nonnull %370, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %136) #19
  %372 = icmp eq %"struct.WTF::KeyValuePair.3022"* %371, null
  br i1 %372, label %376, label %373

373:                                              ; preds = %354
  %374 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %371, i64 0, i32 1, i32 0, i32 0
  %375 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %374, align 8
  br label %376

376:                                              ; preds = %354, %373
  %377 = phi %"class.blink::CSSValue"* [ %375, %373 ], [ null, %354 ]
  %378 = bitcast %"class.blink::LayoutNGGridInterface"* %199 to i64 (%"class.blink::LayoutNGGridInterface"*, i32)***
  %379 = load i64 (%"class.blink::LayoutNGGridInterface"*, i32)**, i64 (%"class.blink::LayoutNGGridInterface"*, i32)*** %378, align 8
  %380 = getelementptr inbounds i64 (%"class.blink::LayoutNGGridInterface"*, i32)*, i64 (%"class.blink::LayoutNGGridInterface"*, i32)** %379, i64 2
  %381 = load i64 (%"class.blink::LayoutNGGridInterface"*, i32)*, i64 (%"class.blink::LayoutNGGridInterface"*, i32)** %380, align 8
  %382 = call i64 %381(%"class.blink::LayoutNGGridInterface"* %199, i32 0) #19
  call fastcc void @_ZN5blink12_GLOBAL__N_125GetAuthoredGridTrackSizesEPKNS_8CSSValueEm(%"class.WTF::Vector.630"* nonnull sret %135, %"class.blink::CSSValue"* %377, i64 %382)
  %383 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %369, align 8
  %384 = icmp eq %"class.WTF::StringImpl"* %383, null
  br i1 %384, label %398, label %385

385:                                              ; preds = %376
  %386 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %383, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %387 = load atomic i32, i32* %386 monotonic, align 4
  %388 = and i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %383, i64 0, i32 0
  %391 = load i32, i32* %390, align 4
  br i1 %389, label %392, label %394

392:                                              ; preds = %385
  %393 = add i32 %391, -1
  store i32 %393, i32* %390, align 4
  br label %394

394:                                              ; preds = %392, %385
  %395 = phi i32 [ %393, %392 ], [ %391, %385 ]
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %397, label %398

397:                                              ; preds = %394
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %383) #19
  br label %398

398:                                              ; preds = %376, %394, %397
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %366) #19
  %399 = bitcast %"class.WTF::Vector.630"* %137 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %399) #19
  %400 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %137, i64 0, i32 0, i32 0, i32 0
  %401 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %137, i64 0, i32 0, i32 0, i32 2
  %402 = bitcast %"class.blink::CSSPropertyName"* %138 to i8*
  %403 = bitcast %"class.WTF::Vector.630"* %137 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %403, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %402) #19
  %404 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %138, i64 0, i32 0
  store i32 164, i32* %404, align 8
  %405 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %138, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %405, align 8
  %406 = call %"struct.WTF::KeyValuePair.3022"* @_ZNK3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EERKS2_EEPKS8_RKT0_(%"class.WTF::HashTable.3020"* nonnull %370, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %138) #19
  %407 = icmp eq %"struct.WTF::KeyValuePair.3022"* %406, null
  br i1 %407, label %411, label %408

408:                                              ; preds = %398
  %409 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %406, i64 0, i32 1, i32 0, i32 0
  %410 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %409, align 8
  br label %411

411:                                              ; preds = %398, %408
  %412 = phi %"class.blink::CSSValue"* [ %410, %408 ], [ null, %398 ]
  %413 = load i64 (%"class.blink::LayoutNGGridInterface"*, i32)**, i64 (%"class.blink::LayoutNGGridInterface"*, i32)*** %378, align 8
  %414 = getelementptr inbounds i64 (%"class.blink::LayoutNGGridInterface"*, i32)*, i64 (%"class.blink::LayoutNGGridInterface"*, i32)** %413, i64 2
  %415 = load i64 (%"class.blink::LayoutNGGridInterface"*, i32)*, i64 (%"class.blink::LayoutNGGridInterface"*, i32)** %414, align 8
  %416 = call i64 %415(%"class.blink::LayoutNGGridInterface"* %199, i32 1) #19
  call fastcc void @_ZN5blink12_GLOBAL__N_125GetAuthoredGridTrackSizesEPKNS_8CSSValueEm(%"class.WTF::Vector.630"* nonnull sret %137, %"class.blink::CSSValue"* %412, i64 %416)
  %417 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %405, align 8
  %418 = icmp eq %"class.WTF::StringImpl"* %417, null
  br i1 %418, label %432, label %419

419:                                              ; preds = %411
  %420 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %417, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %421 = load atomic i32, i32* %420 monotonic, align 4
  %422 = and i32 %421, 2
  %423 = icmp eq i32 %422, 0
  %424 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %417, i64 0, i32 0
  %425 = load i32, i32* %424, align 4
  br i1 %423, label %426, label %428

426:                                              ; preds = %419
  %427 = add i32 %425, -1
  store i32 %427, i32* %424, align 4
  br label %428

428:                                              ; preds = %426, %419
  %429 = phi i32 [ %427, %426 ], [ %425, %419 ]
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %431, label %432

431:                                              ; preds = %428
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %417) #19
  br label %432

432:                                              ; preds = %431, %428, %411
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %402) #19
  %433 = bitcast %"class.WTF::String"* %139 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %433) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %139, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.114, i64 0, i64 0), i64 16) #19
  %434 = call fastcc %"class.blink::protocol::ListValue"* @_ZN5blink12_GLOBAL__N_119BuildGridTrackSizesEPNS_4NodeENS_24GridTrackSizingDirectionEfNS_10LayoutUnitERKN3WTF6VectorIS4_Lj0ENS5_18PartitionAllocatorEEESA_PKNS6_INS5_6StringELj0ES7_EE(%"class.blink::Node"* %0, i32 0, float %2, i32 %342, %"class.WTF::Vector.3011"* nonnull dereferenceable(16) %128, %"class.WTF::Vector.3011"* nonnull dereferenceable(16) %127, %"class.WTF::Vector.630"* nonnull %135)
  %435 = bitcast %"class.blink::protocol::ListValue"* %434 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %201, %"class.WTF::String"* nonnull dereferenceable(8) %139, %"class.blink::protocol::Value"* %435) #19
  %436 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %139, i64 0, i32 0, i32 0
  %437 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %436, align 8
  %438 = icmp eq %"class.WTF::StringImpl"* %437, null
  br i1 %438, label %452, label %439

439:                                              ; preds = %432
  %440 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %437, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %441 = load atomic i32, i32* %440 monotonic, align 4
  %442 = and i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %437, i64 0, i32 0
  %445 = load i32, i32* %444, align 4
  br i1 %443, label %446, label %448

446:                                              ; preds = %439
  %447 = add i32 %445, -1
  store i32 %447, i32* %444, align 4
  br label %448

448:                                              ; preds = %446, %439
  %449 = phi i32 [ %447, %446 ], [ %445, %439 ]
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %451, label %452

451:                                              ; preds = %448
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %437) #19
  br label %452

452:                                              ; preds = %451, %448, %432
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %433) #19
  %453 = bitcast %"class.WTF::String"* %140 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %453) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %140, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.115, i64 0, i64 0), i64 13) #19
  %454 = call fastcc %"class.blink::protocol::ListValue"* @_ZN5blink12_GLOBAL__N_119BuildGridTrackSizesEPNS_4NodeENS_24GridTrackSizingDirectionEfNS_10LayoutUnitERKN3WTF6VectorIS4_Lj0ENS5_18PartitionAllocatorEEESA_PKNS6_INS5_6StringELj0ES7_EE(%"class.blink::Node"* %0, i32 1, float %2, i32 %326, %"class.WTF::Vector.3011"* nonnull dereferenceable(16) %127, %"class.WTF::Vector.3011"* nonnull dereferenceable(16) %128, %"class.WTF::Vector.630"* nonnull %137)
  %455 = bitcast %"class.blink::protocol::ListValue"* %454 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %201, %"class.WTF::String"* nonnull dereferenceable(8) %140, %"class.blink::protocol::Value"* %455) #19
  %456 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %140, i64 0, i32 0, i32 0
  %457 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %456, align 8
  %458 = icmp eq %"class.WTF::StringImpl"* %457, null
  br i1 %458, label %472, label %459

459:                                              ; preds = %452
  %460 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %457, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %461 = load atomic i32, i32* %460 monotonic, align 4
  %462 = and i32 %461, 2
  %463 = icmp eq i32 %462, 0
  %464 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %457, i64 0, i32 0
  %465 = load i32, i32* %464, align 4
  br i1 %463, label %466, label %468

466:                                              ; preds = %459
  %467 = add i32 %465, -1
  store i32 %467, i32* %464, align 4
  br label %468

468:                                              ; preds = %466, %459
  %469 = phi i32 [ %467, %466 ], [ %465, %459 ]
  %470 = icmp eq i32 %469, 0
  br i1 %470, label %471, label %472

471:                                              ; preds = %468
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %457) #19
  br label %472

472:                                              ; preds = %452, %468, %471
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %453) #19
  %473 = load %"class.WTF::String"*, %"class.WTF::String"** %400, align 8
  %474 = icmp eq %"class.WTF::String"* %473, null
  br i1 %474, label %508, label %475, !prof !27

475:                                              ; preds = %472
  %476 = bitcast %"class.WTF::String"* %473 to i8*
  %477 = load i32, i32* %401, align 4
  %478 = icmp eq i32 %477, 0
  br i1 %478, label %506, label %479, !prof !2

479:                                              ; preds = %475
  %480 = zext i32 %477 to i64
  %481 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %473, i64 %480
  br label %482

482:                                              ; preds = %500, %479
  %483 = phi %"class.WTF::String"* [ %501, %500 ], [ %473, %479 ]
  %484 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %483, i64 0, i32 0, i32 0
  %485 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %484, align 8
  %486 = icmp eq %"class.WTF::StringImpl"* %485, null
  br i1 %486, label %500, label %487

487:                                              ; preds = %482
  %488 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %485, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %489 = load atomic i32, i32* %488 monotonic, align 4
  %490 = and i32 %489, 2
  %491 = icmp eq i32 %490, 0
  %492 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %485, i64 0, i32 0
  %493 = load i32, i32* %492, align 4
  br i1 %491, label %494, label %496

494:                                              ; preds = %487
  %495 = add i32 %493, -1
  store i32 %495, i32* %492, align 4
  br label %496

496:                                              ; preds = %494, %487
  %497 = phi i32 [ %495, %494 ], [ %493, %487 ]
  %498 = icmp eq i32 %497, 0
  br i1 %498, label %499, label %500

499:                                              ; preds = %496
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %485) #19
  br label %500

500:                                              ; preds = %499, %496, %482
  %501 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %483, i64 1
  %502 = icmp eq %"class.WTF::String"* %501, %481
  br i1 %502, label %503, label %482

503:                                              ; preds = %500
  store i32 0, i32* %401, align 4
  %504 = bitcast %"class.WTF::Vector.630"* %137 to i8**
  %505 = load i8*, i8** %504, align 8
  br label %506

506:                                              ; preds = %503, %475
  %507 = phi i8* [ %505, %503 ], [ %476, %475 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %507) #19
  store %"class.WTF::String"* null, %"class.WTF::String"** %400, align 8
  br label %508

508:                                              ; preds = %472, %506
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %399) #19
  %509 = load %"class.WTF::String"*, %"class.WTF::String"** %364, align 8
  %510 = icmp eq %"class.WTF::String"* %509, null
  br i1 %510, label %544, label %511, !prof !27

511:                                              ; preds = %508
  %512 = bitcast %"class.WTF::String"* %509 to i8*
  %513 = load i32, i32* %365, align 4
  %514 = icmp eq i32 %513, 0
  br i1 %514, label %542, label %515, !prof !2

515:                                              ; preds = %511
  %516 = zext i32 %513 to i64
  %517 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %509, i64 %516
  br label %518

518:                                              ; preds = %536, %515
  %519 = phi %"class.WTF::String"* [ %537, %536 ], [ %509, %515 ]
  %520 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %519, i64 0, i32 0, i32 0
  %521 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %520, align 8
  %522 = icmp eq %"class.WTF::StringImpl"* %521, null
  br i1 %522, label %536, label %523

523:                                              ; preds = %518
  %524 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %521, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %525 = load atomic i32, i32* %524 monotonic, align 4
  %526 = and i32 %525, 2
  %527 = icmp eq i32 %526, 0
  %528 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %521, i64 0, i32 0
  %529 = load i32, i32* %528, align 4
  br i1 %527, label %530, label %532

530:                                              ; preds = %523
  %531 = add i32 %529, -1
  store i32 %531, i32* %528, align 4
  br label %532

532:                                              ; preds = %530, %523
  %533 = phi i32 [ %531, %530 ], [ %529, %523 ]
  %534 = icmp eq i32 %533, 0
  br i1 %534, label %535, label %536

535:                                              ; preds = %532
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %521) #19
  br label %536

536:                                              ; preds = %535, %532, %518
  %537 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %519, i64 1
  %538 = icmp eq %"class.WTF::String"* %537, %517
  br i1 %538, label %539, label %518

539:                                              ; preds = %536
  store i32 0, i32* %365, align 4
  %540 = bitcast %"class.WTF::Vector.630"* %135 to i8**
  %541 = load i8*, i8** %540, align 8
  br label %542

542:                                              ; preds = %539, %511
  %543 = phi i8* [ %541, %539 ], [ %512, %511 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %543) #19
  store %"class.WTF::String"* null, %"class.WTF::String"** %364, align 8
  br label %544

544:                                              ; preds = %508, %542
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %363) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %361) #19
  br label %545

545:                                              ; preds = %309, %544
  %546 = bitcast %"class.blink::(anonymous namespace)::PathBuilder"* %141 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %546) #19
  %547 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %141, i64 0, i32 0
  %548 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %141, i64 0, i32 1, i32 0, i32 0, i32 0
  %549 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %141, i64 0, i32 1
  %550 = bitcast %"class.std::__1::unique_ptr.2401"* %549 to i64*
  store i64 -6148914691236517206, i64* %550, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_111PathBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %547, align 8
  %551 = call i8* @_Znwm(i64 40) #18
  %552 = bitcast i8* %551 to %"class.blink::protocol::ListValue"*
  call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %552) #19
  %553 = bitcast %"class.blink::protocol::ListValue"** %548 to i8**
  store i8* %551, i8** %553, align 8
  %554 = bitcast %"class.blink::(anonymous namespace)::PathBuilder"* %142 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %554) #19
  %555 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %142, i64 0, i32 0
  %556 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %142, i64 0, i32 1, i32 0, i32 0, i32 0
  %557 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %142, i64 0, i32 1
  %558 = bitcast %"class.std::__1::unique_ptr.2401"* %557 to i64*
  store i64 -6148914691236517206, i64* %558, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_111PathBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %555, align 8
  %559 = call i8* @_Znwm(i64 40) #18
  %560 = bitcast i8* %559 to %"class.blink::protocol::ListValue"*
  call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %560) #19
  %561 = bitcast %"class.blink::protocol::ListValue"** %556 to i8**
  store i8* %559, i8** %561, align 8
  %562 = call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3011"* nonnull %128, i32 0) #19
  %563 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %562, i64 0, i32 0
  %564 = load i32, i32* %563, align 4
  %565 = load i32, i32* %212, align 4
  %566 = add i32 %565, -1
  %567 = call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3011"* nonnull %128, i32 %566) #19
  %568 = call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3011"* nonnull %128, i32 0) #19
  %569 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %567, i64 0, i32 0
  %570 = load i32, i32* %569, align 4
  %571 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %568, i64 0, i32 0
  %572 = load i32, i32* %571, align 4
  %573 = icmp sgt i32 %572, -1
  %574 = select i1 %573, i32 -2147483648, i32 2147483647
  %575 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %570, i32 %572) #19
  %576 = extractvalue { i32, i1 } %575, 1
  %577 = extractvalue { i32, i1 } %575, 0
  %578 = select i1 %576, i32 %574, i32 %577, !prof !2
  %579 = load i32, i32* %204, align 4
  %580 = icmp ugt i32 %579, 1
  br i1 %580, label %581, label %706

581:                                              ; preds = %545
  %582 = icmp sgt i32 %326, -1
  %583 = select i1 %582, i32 -2147483648, i32 2147483647
  %584 = bitcast %"class.blink::FloatQuad"* %143 to i8*
  %585 = bitcast %"class.blink::FloatQuad"* %97 to i8*
  %586 = sitofp i32 %564 to float
  %587 = fmul float %586, 1.562500e-02
  %588 = sitofp i32 %578 to float
  %589 = fmul float %588, 1.562500e-02
  %590 = insertelement <2 x float> undef, float %587, i32 0
  %591 = bitcast %"class.blink::FloatQuad"* %97 to <2 x float>*
  %592 = fadd float %587, %589
  %593 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %97, i64 0, i32 1, i32 0
  %594 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %97, i64 0, i32 1, i32 1
  %595 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %97, i64 0, i32 2, i32 0
  %596 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %97, i64 0, i32 2, i32 1
  %597 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %97, i64 0, i32 3, i32 0
  %598 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %97, i64 0, i32 3, i32 1
  %599 = bitcast %"class.blink::FloatQuad"* %143 to <2 x float>*
  %600 = bitcast %"class.blink::FloatQuad"* %143 to i64*
  %601 = bitcast <2 x float>* %22 to i8*
  %602 = bitcast <2 x float>* %22 to %"class.blink::FloatPoint"*
  %603 = bitcast <2 x float>* %23 to %"class.blink::FloatPoint"*
  %604 = bitcast <2 x float>* %22 to i64*
  %605 = bitcast <2 x float>* %23 to i8*
  %606 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %143, i64 0, i32 1
  %607 = bitcast %"class.blink::FloatPoint"* %606 to <2 x float>*
  %608 = bitcast %"class.blink::FloatPoint"* %606 to i64*
  %609 = bitcast <2 x float>* %20 to i8*
  %610 = bitcast <2 x float>* %20 to %"class.blink::FloatPoint"*
  %611 = bitcast <2 x float>* %21 to %"class.blink::FloatPoint"*
  %612 = bitcast <2 x float>* %20 to i64*
  %613 = bitcast <2 x float>* %21 to i8*
  %614 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %143, i64 0, i32 2
  %615 = bitcast %"class.blink::FloatPoint"* %614 to i64*
  %616 = bitcast <2 x float>* %95 to i8*
  %617 = bitcast <2 x float>* %95 to %"class.blink::FloatPoint"*
  %618 = bitcast <2 x float>* %96 to %"class.blink::FloatPoint"*
  %619 = bitcast <2 x float>* %95 to i64*
  %620 = bitcast <2 x float>* %96 to i8*
  %621 = bitcast %"class.blink::FloatPoint"* %614 to <2 x float>*
  %622 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %143, i64 0, i32 3
  %623 = bitcast %"class.blink::FloatPoint"* %622 to i64*
  %624 = bitcast <2 x float>* %93 to i8*
  %625 = bitcast <2 x float>* %93 to %"class.blink::FloatPoint"*
  %626 = bitcast <2 x float>* %94 to %"class.blink::FloatPoint"*
  %627 = bitcast <2 x float>* %93 to i64*
  %628 = bitcast <2 x float>* %94 to i8*
  %629 = bitcast %"class.blink::FloatPoint"* %622 to <2 x float>*
  %630 = bitcast %"class.blink::Path"* %144 to i8*
  %631 = icmp sgt i32 %326, 0
  %632 = bitcast <2 x float>* %89 to %"class.blink::FloatPoint"*
  %633 = bitcast <2 x float>* %90 to %"class.blink::FloatPoint"*
  %634 = bitcast <2 x float>* %89 to i8*
  %635 = bitcast <2 x float>* %89 to i64*
  %636 = bitcast <2 x float>* %90 to i8*
  %637 = bitcast <2 x float>* %90 to i64*
  %638 = bitcast <2 x float>* %92 to %"class.blink::FloatPoint"*
  %639 = bitcast <2 x float>* %91 to %"class.blink::FloatPoint"*
  %640 = bitcast <2 x float>* %91 to i8*
  %641 = bitcast <2 x float>* %91 to i64*
  %642 = bitcast <2 x float>* %92 to i8*
  %643 = bitcast <2 x float>* %92 to i64*
  %644 = bitcast %"class.blink::Path"* %87 to i8*
  %645 = bitcast %"class.blink::AffineTransform"* %88 to i8*
  %646 = fpext float %2 to double
  %647 = bitcast %"class.blink::FloatQuad"* %145 to i8*
  %648 = bitcast %"class.blink::FloatQuad"* %86 to i8*
  %649 = sitofp i32 %326 to float
  %650 = fmul float %649, 1.562500e-02
  %651 = bitcast %"class.blink::FloatQuad"* %86 to <2 x float>*
  %652 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %86, i64 0, i32 1, i32 0
  %653 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %86, i64 0, i32 1, i32 1
  %654 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %86, i64 0, i32 2, i32 0
  %655 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %86, i64 0, i32 2, i32 1
  %656 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %86, i64 0, i32 3, i32 0
  %657 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %86, i64 0, i32 3, i32 1
  %658 = bitcast %"class.blink::FloatQuad"* %145 to <2 x float>*
  %659 = bitcast %"class.blink::FloatQuad"* %145 to i64*
  %660 = bitcast <2 x float>* %18 to i8*
  %661 = bitcast <2 x float>* %18 to %"class.blink::FloatPoint"*
  %662 = bitcast <2 x float>* %19 to %"class.blink::FloatPoint"*
  %663 = bitcast <2 x float>* %18 to i64*
  %664 = bitcast <2 x float>* %19 to i8*
  %665 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %145, i64 0, i32 1
  %666 = bitcast %"class.blink::FloatPoint"* %665 to <2 x float>*
  %667 = bitcast %"class.blink::FloatPoint"* %665 to i64*
  %668 = bitcast <2 x float>* %16 to i8*
  %669 = bitcast <2 x float>* %16 to %"class.blink::FloatPoint"*
  %670 = bitcast <2 x float>* %17 to %"class.blink::FloatPoint"*
  %671 = bitcast <2 x float>* %16 to i64*
  %672 = bitcast <2 x float>* %17 to i8*
  %673 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %145, i64 0, i32 2
  %674 = bitcast %"class.blink::FloatPoint"* %673 to i64*
  %675 = bitcast <2 x float>* %84 to i8*
  %676 = bitcast <2 x float>* %84 to %"class.blink::FloatPoint"*
  %677 = bitcast <2 x float>* %85 to %"class.blink::FloatPoint"*
  %678 = bitcast <2 x float>* %84 to i64*
  %679 = bitcast <2 x float>* %85 to i8*
  %680 = bitcast %"class.blink::FloatPoint"* %673 to <2 x float>*
  %681 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %145, i64 0, i32 3
  %682 = bitcast %"class.blink::FloatPoint"* %681 to i64*
  %683 = bitcast <2 x float>* %82 to i8*
  %684 = bitcast <2 x float>* %82 to %"class.blink::FloatPoint"*
  %685 = bitcast <2 x float>* %83 to %"class.blink::FloatPoint"*
  %686 = bitcast <2 x float>* %82 to i64*
  %687 = bitcast <2 x float>* %83 to i8*
  %688 = bitcast %"class.blink::FloatPoint"* %681 to <2 x float>*
  %689 = bitcast %"class.blink::Path"* %146 to i8*
  %690 = bitcast <2 x float>* %78 to %"class.blink::FloatPoint"*
  %691 = bitcast <2 x float>* %79 to %"class.blink::FloatPoint"*
  %692 = bitcast <2 x float>* %80 to %"class.blink::FloatPoint"*
  %693 = bitcast <2 x float>* %81 to %"class.blink::FloatPoint"*
  %694 = bitcast <2 x float>* %78 to i8*
  %695 = bitcast <2 x float>* %78 to i64*
  %696 = bitcast <2 x float>* %79 to i8*
  %697 = bitcast <2 x float>* %79 to i64*
  %698 = bitcast <2 x float>* %80 to i8*
  %699 = bitcast <2 x float>* %80 to i64*
  %700 = bitcast <2 x float>* %81 to i8*
  %701 = bitcast <2 x float>* %81 to i64*
  %702 = bitcast %"class.blink::Path"* %76 to i8*
  %703 = bitcast %"class.blink::AffineTransform"* %77 to i8*
  %704 = bitcast %"class.blink::FloatQuad"* %143 to i8*
  %705 = bitcast %"class.blink::FloatQuad"* %145 to i8*
  br label %913

706:                                              ; preds = %1023, %545
  %707 = bitcast %"class.WTF::String"* %147 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %707) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %147, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.116, i64 0, i64 0), i64 4) #19
  %708 = bitcast %"class.blink::protocol::ListValue"** %548 to %"class.blink::protocol::Value"**
  %709 = load %"class.blink::protocol::Value"*, %"class.blink::protocol::Value"** %708, align 8
  store %"class.blink::protocol::ListValue"* null, %"class.blink::protocol::ListValue"** %548, align 8
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %201, %"class.WTF::String"* nonnull dereferenceable(8) %147, %"class.blink::protocol::Value"* %709) #19
  %710 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %147, i64 0, i32 0, i32 0
  %711 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %710, align 8
  %712 = icmp eq %"class.WTF::StringImpl"* %711, null
  br i1 %712, label %726, label %713

713:                                              ; preds = %706
  %714 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %711, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %715 = load atomic i32, i32* %714 monotonic, align 4
  %716 = and i32 %715, 2
  %717 = icmp eq i32 %716, 0
  %718 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %711, i64 0, i32 0
  %719 = load i32, i32* %718, align 4
  br i1 %717, label %720, label %722

720:                                              ; preds = %713
  %721 = add i32 %719, -1
  store i32 %721, i32* %718, align 4
  br label %722

722:                                              ; preds = %720, %713
  %723 = phi i32 [ %721, %720 ], [ %719, %713 ]
  %724 = icmp eq i32 %723, 0
  br i1 %724, label %725, label %726

725:                                              ; preds = %722
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %711) #19
  br label %726

726:                                              ; preds = %725, %722, %706
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %707) #19
  %727 = bitcast %"class.WTF::String"* %148 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %727) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %148, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.117, i64 0, i64 0), i64 7) #19
  %728 = bitcast %"class.blink::protocol::ListValue"** %556 to %"class.blink::protocol::Value"**
  %729 = load %"class.blink::protocol::Value"*, %"class.blink::protocol::Value"** %728, align 8
  store %"class.blink::protocol::ListValue"* null, %"class.blink::protocol::ListValue"** %556, align 8
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %201, %"class.WTF::String"* nonnull dereferenceable(8) %148, %"class.blink::protocol::Value"* %729) #19
  %730 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %148, i64 0, i32 0, i32 0
  %731 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %730, align 8
  %732 = icmp eq %"class.WTF::StringImpl"* %731, null
  br i1 %732, label %746, label %733

733:                                              ; preds = %726
  %734 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %731, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %735 = load atomic i32, i32* %734 monotonic, align 4
  %736 = and i32 %735, 2
  %737 = icmp eq i32 %736, 0
  %738 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %731, i64 0, i32 0
  %739 = load i32, i32* %738, align 4
  br i1 %737, label %740, label %742

740:                                              ; preds = %733
  %741 = add i32 %739, -1
  store i32 %741, i32* %738, align 4
  br label %742

742:                                              ; preds = %740, %733
  %743 = phi i32 [ %741, %740 ], [ %739, %733 ]
  %744 = icmp eq i32 %743, 0
  br i1 %744, label %745, label %746

745:                                              ; preds = %742
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %731) #19
  br label %746

746:                                              ; preds = %726, %742, %745
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %727) #19
  %747 = bitcast %"class.blink::(anonymous namespace)::PathBuilder"* %149 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %747) #19
  %748 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %149, i64 0, i32 0
  %749 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %149, i64 0, i32 1, i32 0, i32 0, i32 0
  %750 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %149, i64 0, i32 1
  %751 = bitcast %"class.std::__1::unique_ptr.2401"* %750 to i64*
  store i64 -6148914691236517206, i64* %751, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_111PathBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %748, align 8
  %752 = call i8* @_Znwm(i64 40) #18
  %753 = bitcast i8* %752 to %"class.blink::protocol::ListValue"*
  call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %753) #19
  %754 = bitcast %"class.blink::protocol::ListValue"** %749 to i8**
  store i8* %752, i8** %754, align 8
  %755 = bitcast %"class.blink::(anonymous namespace)::PathBuilder"* %150 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %755) #19
  %756 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %150, i64 0, i32 0
  %757 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %150, i64 0, i32 1, i32 0, i32 0, i32 0
  %758 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %150, i64 0, i32 1
  %759 = bitcast %"class.std::__1::unique_ptr.2401"* %758 to i64*
  store i64 -6148914691236517206, i64* %759, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_111PathBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %756, align 8
  %760 = call i8* @_Znwm(i64 40) #18
  %761 = bitcast i8* %760 to %"class.blink::protocol::ListValue"*
  call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %761) #19
  %762 = bitcast %"class.blink::protocol::ListValue"** %757 to i8**
  store i8* %760, i8** %762, align 8
  %763 = call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3011"* nonnull %127, i32 0) #19
  %764 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %763, i64 0, i32 0
  %765 = load i32, i32* %764, align 4
  %766 = load i32, i32* %204, align 4
  %767 = add i32 %766, -1
  %768 = call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3011"* nonnull %127, i32 %767) #19
  %769 = call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3011"* nonnull %127, i32 0) #19
  %770 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %768, i64 0, i32 0
  %771 = load i32, i32* %770, align 4
  %772 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %769, i64 0, i32 0
  %773 = load i32, i32* %772, align 4
  %774 = icmp sgt i32 %773, -1
  %775 = select i1 %774, i32 -2147483648, i32 2147483647
  %776 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %771, i32 %773) #19
  %777 = extractvalue { i32, i1 } %776, 1
  %778 = extractvalue { i32, i1 } %776, 0
  %779 = select i1 %777, i32 %775, i32 %778, !prof !2
  %780 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %260, align 8
  %781 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %780, i64 0, i32 0, i32 9
  %782 = bitcast [20 x i8]* %781 to i160*
  %783 = load i160, i160* %782, align 8
  %784 = and i160 %783, 41538374868278621028243970633760768
  %785 = icmp eq i160 %784, 0
  %786 = load i32, i32* %212, align 4
  %787 = icmp ugt i32 %786, 1
  br i1 %787, label %788, label %1028

788:                                              ; preds = %746
  %789 = load i32, i32* %328, align 4
  %790 = icmp sgt i32 %789, -1
  %791 = select i1 %790, i32 -2147483648, i32 2147483647
  %792 = bitcast %"class.blink::FloatQuad"* %151 to i8*
  %793 = bitcast %"class.blink::FloatQuad"* %75 to i8*
  %794 = sitofp i32 %765 to float
  %795 = fmul float %794, 1.562500e-02
  %796 = sitofp i32 %779 to float
  %797 = fmul float %796, 1.562500e-02
  %798 = bitcast %"class.blink::FloatQuad"* %75 to <2 x float>*
  %799 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %75, i64 0, i32 1, i32 0
  %800 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %75, i64 0, i32 1, i32 1
  %801 = fadd float %795, %797
  %802 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %75, i64 0, i32 2, i32 0
  %803 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %75, i64 0, i32 2, i32 1
  %804 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %75, i64 0, i32 3, i32 0
  %805 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %75, i64 0, i32 3, i32 1
  %806 = bitcast %"class.blink::FloatQuad"* %151 to <2 x float>*
  %807 = bitcast %"class.blink::FloatQuad"* %151 to i64*
  %808 = bitcast <2 x float>* %14 to i8*
  %809 = bitcast <2 x float>* %14 to %"class.blink::FloatPoint"*
  %810 = bitcast <2 x float>* %15 to %"class.blink::FloatPoint"*
  %811 = bitcast <2 x float>* %14 to i64*
  %812 = bitcast <2 x float>* %15 to i8*
  %813 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %151, i64 0, i32 1
  %814 = bitcast %"class.blink::FloatPoint"* %813 to <2 x float>*
  %815 = bitcast %"class.blink::FloatPoint"* %813 to i64*
  %816 = bitcast <2 x float>* %12 to i8*
  %817 = bitcast <2 x float>* %12 to %"class.blink::FloatPoint"*
  %818 = bitcast <2 x float>* %13 to %"class.blink::FloatPoint"*
  %819 = bitcast <2 x float>* %12 to i64*
  %820 = bitcast <2 x float>* %13 to i8*
  %821 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %151, i64 0, i32 2
  %822 = bitcast %"class.blink::FloatPoint"* %821 to i64*
  %823 = bitcast <2 x float>* %73 to i8*
  %824 = bitcast <2 x float>* %73 to %"class.blink::FloatPoint"*
  %825 = bitcast <2 x float>* %74 to %"class.blink::FloatPoint"*
  %826 = bitcast <2 x float>* %73 to i64*
  %827 = bitcast <2 x float>* %74 to i8*
  %828 = bitcast %"class.blink::FloatPoint"* %821 to <2 x float>*
  %829 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %151, i64 0, i32 3
  %830 = bitcast %"class.blink::FloatPoint"* %829 to i64*
  %831 = bitcast <2 x float>* %71 to i8*
  %832 = bitcast <2 x float>* %71 to %"class.blink::FloatPoint"*
  %833 = bitcast <2 x float>* %72 to %"class.blink::FloatPoint"*
  %834 = bitcast <2 x float>* %71 to i64*
  %835 = bitcast <2 x float>* %72 to i8*
  %836 = bitcast %"class.blink::FloatPoint"* %829 to <2 x float>*
  %837 = bitcast %"class.blink::Path"* %152 to i8*
  %838 = icmp sgt i32 %789, 0
  %839 = bitcast <2 x float>* %67 to %"class.blink::FloatPoint"*
  %840 = bitcast <2 x float>* %68 to %"class.blink::FloatPoint"*
  %841 = bitcast <2 x float>* %67 to i8*
  %842 = bitcast <2 x float>* %67 to i64*
  %843 = bitcast <2 x float>* %68 to i8*
  %844 = bitcast <2 x float>* %68 to i64*
  %845 = bitcast <2 x float>* %70 to %"class.blink::FloatPoint"*
  %846 = bitcast <2 x float>* %69 to %"class.blink::FloatPoint"*
  %847 = bitcast <2 x float>* %69 to i8*
  %848 = bitcast <2 x float>* %69 to i64*
  %849 = bitcast <2 x float>* %70 to i8*
  %850 = bitcast <2 x float>* %70 to i64*
  %851 = bitcast %"class.blink::Path"* %65 to i8*
  %852 = bitcast %"class.blink::AffineTransform"* %66 to i8*
  %853 = fpext float %2 to double
  %854 = bitcast %"class.blink::FloatQuad"* %153 to i8*
  %855 = bitcast %"class.blink::FloatQuad"* %64 to i8*
  %856 = sitofp i32 %789 to float
  %857 = fmul float %856, 1.562500e-02
  %858 = bitcast %"class.blink::FloatQuad"* %64 to <2 x float>*
  %859 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %64, i64 0, i32 1, i32 0
  %860 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %64, i64 0, i32 1, i32 1
  %861 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %64, i64 0, i32 2, i32 0
  %862 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %64, i64 0, i32 2, i32 1
  %863 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %64, i64 0, i32 3, i32 0
  %864 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %64, i64 0, i32 3, i32 1
  %865 = bitcast %"class.blink::FloatQuad"* %153 to <2 x float>*
  %866 = bitcast %"class.blink::FloatQuad"* %153 to i64*
  %867 = bitcast <2 x float>* %10 to i8*
  %868 = bitcast <2 x float>* %10 to %"class.blink::FloatPoint"*
  %869 = bitcast <2 x float>* %11 to %"class.blink::FloatPoint"*
  %870 = bitcast <2 x float>* %10 to i64*
  %871 = bitcast <2 x float>* %11 to i8*
  %872 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %153, i64 0, i32 1
  %873 = bitcast %"class.blink::FloatPoint"* %872 to <2 x float>*
  %874 = bitcast %"class.blink::FloatPoint"* %872 to i64*
  %875 = bitcast <2 x float>* %8 to i8*
  %876 = bitcast <2 x float>* %8 to %"class.blink::FloatPoint"*
  %877 = bitcast <2 x float>* %9 to %"class.blink::FloatPoint"*
  %878 = bitcast <2 x float>* %8 to i64*
  %879 = bitcast <2 x float>* %9 to i8*
  %880 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %153, i64 0, i32 2
  %881 = bitcast %"class.blink::FloatPoint"* %880 to i64*
  %882 = bitcast <2 x float>* %62 to i8*
  %883 = bitcast <2 x float>* %62 to %"class.blink::FloatPoint"*
  %884 = bitcast <2 x float>* %63 to %"class.blink::FloatPoint"*
  %885 = bitcast <2 x float>* %62 to i64*
  %886 = bitcast <2 x float>* %63 to i8*
  %887 = bitcast %"class.blink::FloatPoint"* %880 to <2 x float>*
  %888 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %153, i64 0, i32 3
  %889 = bitcast %"class.blink::FloatPoint"* %888 to i64*
  %890 = bitcast <2 x float>* %60 to i8*
  %891 = bitcast <2 x float>* %60 to %"class.blink::FloatPoint"*
  %892 = bitcast <2 x float>* %61 to %"class.blink::FloatPoint"*
  %893 = bitcast <2 x float>* %60 to i64*
  %894 = bitcast <2 x float>* %61 to i8*
  %895 = bitcast %"class.blink::FloatPoint"* %888 to <2 x float>*
  %896 = bitcast %"class.blink::Path"* %154 to i8*
  %897 = bitcast <2 x float>* %56 to %"class.blink::FloatPoint"*
  %898 = bitcast <2 x float>* %57 to %"class.blink::FloatPoint"*
  %899 = bitcast <2 x float>* %58 to %"class.blink::FloatPoint"*
  %900 = bitcast <2 x float>* %59 to %"class.blink::FloatPoint"*
  %901 = bitcast <2 x float>* %56 to i8*
  %902 = bitcast <2 x float>* %56 to i64*
  %903 = bitcast <2 x float>* %57 to i8*
  %904 = bitcast <2 x float>* %57 to i64*
  %905 = bitcast <2 x float>* %58 to i8*
  %906 = bitcast <2 x float>* %58 to i64*
  %907 = bitcast <2 x float>* %59 to i8*
  %908 = bitcast <2 x float>* %59 to i64*
  %909 = bitcast %"class.blink::Path"* %54 to i8*
  %910 = bitcast %"class.blink::AffineTransform"* %55 to i8*
  %911 = bitcast %"class.blink::FloatQuad"* %151 to i8*
  %912 = bitcast %"class.blink::FloatQuad"* %153 to i8*
  br label %1072

913:                                              ; preds = %581, %1023
  %914 = phi i64 [ 1, %581 ], [ %1025, %1023 ]
  %915 = trunc i64 %914 to i32
  %916 = add i32 %915, -1
  %917 = call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3011"* nonnull %127, i32 %916)
  %918 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %917, i64 0, i32 0
  %919 = load i32, i32* %918, align 4
  %920 = call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3011"* nonnull %127, i32 %915)
  %921 = call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3011"* nonnull %127, i32 %916)
  %922 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %920, i64 0, i32 0
  %923 = load i32, i32* %922, align 4
  %924 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %921, i64 0, i32 0
  %925 = load i32, i32* %924, align 4
  %926 = icmp sgt i32 %925, -1
  %927 = select i1 %926, i32 -2147483648, i32 2147483647
  %928 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %923, i32 %925) #19
  %929 = extractvalue { i32, i1 } %928, 1
  %930 = extractvalue { i32, i1 } %928, 0
  %931 = select i1 %929, i32 %927, i32 %930, !prof !2
  %932 = load i32, i32* %204, align 4
  %933 = add i32 %932, -1
  %934 = zext i32 %933 to i64
  %935 = icmp eq i64 %914, %934
  br i1 %935, label %941, label %936

936:                                              ; preds = %913
  %937 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %931, i32 %326) #19
  %938 = extractvalue { i32, i1 } %937, 1
  %939 = extractvalue { i32, i1 } %937, 0
  %940 = select i1 %938, i32 %583, i32 %939, !prof !2
  br label %941

941:                                              ; preds = %913, %936
  %942 = phi i32 [ %931, %913 ], [ %940, %936 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %584) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %704, i8 -1, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %585) #19, !noalias !59
  %943 = sitofp i32 %919 to float
  %944 = fmul float %943, 1.562500e-02
  %945 = sitofp i32 %942 to float
  %946 = fmul float %945, 1.562500e-02
  %947 = insertelement <2 x float> %590, float %944, i32 1
  store <2 x float> %947, <2 x float>* %591, align 8, !noalias !59
  store float %592, float* %593, align 8, !noalias !59
  store float %944, float* %594, align 4, !noalias !59
  %948 = fadd float %944, %946
  store float %592, float* %595, align 8, !noalias !59
  store float %948, float* %596, align 4, !noalias !59
  store float %587, float* %597, align 8, !noalias !59
  store float %948, float* %598, align 4, !noalias !59
  call void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* nonnull sret %143, %"class.blink::LayoutObject"* %190, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %97, %"class.blink::LayoutBoxModelObject"* null, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %585) #19, !noalias !59
  %949 = load i64, i64* %600, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %601)
  store i64 %949, i64* %604, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %605) #19
  %950 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %174, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %602) #19
  store <2 x float> %950, <2 x float>* %23, align 8
  %951 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %174) #19
  %952 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %951) #19
  %953 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %952, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %603) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %605) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %601)
  store <2 x float> %953, <2 x float>* %599, align 8
  %954 = load i64, i64* %608, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %609)
  store i64 %954, i64* %612, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %613) #19
  %955 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %174, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %610) #19
  store <2 x float> %955, <2 x float>* %21, align 8
  %956 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %174) #19
  %957 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %956) #19
  %958 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %957, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %611) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %613) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %609)
  store <2 x float> %958, <2 x float>* %607, align 8
  %959 = load i64, i64* %615, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %616) #19
  store i64 %959, i64* %619, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %620) #19
  %960 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %174, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %617) #19
  store <2 x float> %960, <2 x float>* %96, align 8
  %961 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %174) #19
  %962 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %961) #19
  %963 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %962, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %618) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %620) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %616) #19
  store <2 x float> %963, <2 x float>* %621, align 8
  %964 = load i64, i64* %623, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %624) #19
  store i64 %964, i64* %627, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %628) #19
  %965 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %174, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %625) #19
  store <2 x float> %965, <2 x float>* %94, align 8
  %966 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %174) #19
  %967 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %966) #19
  %968 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %967, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %626) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %628) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %624) #19
  store <2 x float> %968, <2 x float>* %629, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %630) #19
  %969 = load i32, i32* %204, align 4
  %970 = add i32 %969, -1
  %971 = zext i32 %970 to i64
  %972 = icmp eq i64 %914, %971
  %973 = or i1 %631, %972
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %630, i8 -86, i64 16, i1 false) #19, !alias.scope !64
  call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* nonnull %144) #19
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %634) #19, !noalias !64
  %974 = load i64, i64* %600, align 8, !noalias !64
  store i64 %974, i64* %635, align 8, !noalias !64
  call void @_ZN5blink4Path6MoveToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %144, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %632) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %634) #19, !noalias !64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %636) #19, !noalias !64
  %975 = load i64, i64* %608, align 8, !noalias !64
  store i64 %975, i64* %637, align 8, !noalias !64
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %144, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %633) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %636) #19, !noalias !64
  br i1 %973, label %976, label %979

976:                                              ; preds = %941
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %640) #19, !noalias !64
  %977 = load i64, i64* %615, align 8, !noalias !64
  store i64 %977, i64* %641, align 8, !noalias !64
  call void @_ZN5blink4Path6MoveToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %144, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %639) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %640) #19, !noalias !64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %642) #19, !noalias !64
  %978 = load i64, i64* %623, align 8, !noalias !64
  store i64 %978, i64* %643, align 8, !noalias !64
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %144, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %638) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %642) #19, !noalias !64
  br label %979

979:                                              ; preds = %941, %976
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %644) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %644, i8 -86, i64 16, i1 false) #19
  call void @_ZN5blink4PathC1ERKS0_(%"class.blink::Path"* nonnull %87, %"class.blink::Path"* nonnull dereferenceable(16) %144) #19
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %645) #19
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %88) #19
  %980 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEd(%"class.blink::AffineTransform"* nonnull %88, double %646) #19
  call void @_ZN5blink4Path9TransformERKNS_15AffineTransformE(%"class.blink::Path"* nonnull %87, %"class.blink::AffineTransform"* dereferenceable(48) %980) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %645) #19
  call void @_ZNK5blink4Path5ApplyEPvPFvS1_PKNS_11PathElementEE(%"class.blink::Path"* nonnull %87, i8* nonnull %546, void (i8*, %"struct.blink::PathElement"*)* nonnull @_ZN5blink12_GLOBAL__N_111PathBuilder17AppendPathElementEPvPKNS_11PathElementE) #19
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %87) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %644) #19
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %144) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %630) #19
  %981 = load i32, i32* %204, align 4
  %982 = add i32 %981, -1
  %983 = zext i32 %982 to i64
  %984 = icmp eq i64 %914, %983
  br i1 %984, label %1023, label %985

985:                                              ; preds = %979
  %986 = call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3011"* nonnull %127, i32 %915)
  %987 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %986, i64 0, i32 0
  %988 = load i32, i32* %987, align 4
  %989 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %988, i32 %326) #19
  %990 = extractvalue { i32, i1 } %989, 1
  %991 = extractvalue { i32, i1 } %989, 0
  %992 = select i1 %990, i32 %583, i32 %991, !prof !2
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %647) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %705, i8 -1, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %648) #19, !noalias !67
  %993 = sitofp i32 %992 to float
  %994 = fmul float %993, 1.562500e-02
  %995 = insertelement <2 x float> %590, float %994, i32 1
  store <2 x float> %995, <2 x float>* %651, align 8, !noalias !67
  store float %592, float* %652, align 8, !noalias !67
  store float %994, float* %653, align 4, !noalias !67
  %996 = fadd float %650, %994
  store float %592, float* %654, align 8, !noalias !67
  store float %996, float* %655, align 4, !noalias !67
  store float %587, float* %656, align 8, !noalias !67
  store float %996, float* %657, align 4, !noalias !67
  call void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* nonnull sret %145, %"class.blink::LayoutObject"* %190, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %86, %"class.blink::LayoutBoxModelObject"* null, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %648) #19, !noalias !67
  %997 = load i64, i64* %659, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %660)
  store i64 %997, i64* %663, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %664) #19
  %998 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %174, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %661) #19
  store <2 x float> %998, <2 x float>* %19, align 8
  %999 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %174) #19
  %1000 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %999) #19
  %1001 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %1000, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %662) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %664) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %660)
  store <2 x float> %1001, <2 x float>* %658, align 8
  %1002 = load i64, i64* %667, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %668)
  store i64 %1002, i64* %671, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %672) #19
  %1003 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %174, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %669) #19
  store <2 x float> %1003, <2 x float>* %17, align 8
  %1004 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %174) #19
  %1005 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %1004) #19
  %1006 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %1005, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %670) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %672) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %668)
  store <2 x float> %1006, <2 x float>* %666, align 8
  %1007 = load i64, i64* %674, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %675) #19
  store i64 %1007, i64* %678, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %679) #19
  %1008 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %174, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %676) #19
  store <2 x float> %1008, <2 x float>* %85, align 8
  %1009 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %174) #19
  %1010 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %1009) #19
  %1011 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %1010, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %677) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %679) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %675) #19
  store <2 x float> %1011, <2 x float>* %680, align 8
  %1012 = load i64, i64* %682, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %683) #19
  store i64 %1012, i64* %686, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %687) #19
  %1013 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %174, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %684) #19
  store <2 x float> %1013, <2 x float>* %83, align 8
  %1014 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %174) #19
  %1015 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %1014) #19
  %1016 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %1015, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %685) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %687) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %683) #19
  store <2 x float> %1016, <2 x float>* %688, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %689) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %689, i8 -86, i64 16, i1 false) #19, !alias.scope !72
  call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* nonnull %146) #19
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %694) #19, !noalias !72
  %1017 = load i64, i64* %659, align 8, !noalias !72
  store i64 %1017, i64* %695, align 8, !noalias !72
  call void @_ZN5blink4Path6MoveToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %146, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %690) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %694) #19, !noalias !72
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %696) #19, !noalias !72
  %1018 = load i64, i64* %667, align 8, !noalias !72
  store i64 %1018, i64* %697, align 8, !noalias !72
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %146, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %691) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %696) #19, !noalias !72
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %698) #19, !noalias !72
  %1019 = load i64, i64* %674, align 8, !noalias !72
  store i64 %1019, i64* %699, align 8, !noalias !72
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %146, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %692) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %698) #19, !noalias !72
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %700) #19, !noalias !72
  %1020 = load i64, i64* %682, align 8, !noalias !72
  store i64 %1020, i64* %701, align 8, !noalias !72
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %146, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %693) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %700) #19, !noalias !72
  call void @_ZN5blink4Path12CloseSubpathEv(%"class.blink::Path"* nonnull %146) #19
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %702) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %702, i8 -86, i64 16, i1 false) #19
  call void @_ZN5blink4PathC1ERKS0_(%"class.blink::Path"* nonnull %76, %"class.blink::Path"* nonnull dereferenceable(16) %146) #19
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %703) #19
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %77) #19
  %1021 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEd(%"class.blink::AffineTransform"* nonnull %77, double %646) #19
  call void @_ZN5blink4Path9TransformERKNS_15AffineTransformE(%"class.blink::Path"* nonnull %76, %"class.blink::AffineTransform"* dereferenceable(48) %1021) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %703) #19
  call void @_ZNK5blink4Path5ApplyEPvPFvS1_PKNS_11PathElementEE(%"class.blink::Path"* nonnull %76, i8* nonnull %554, void (i8*, %"struct.blink::PathElement"*)* nonnull @_ZN5blink12_GLOBAL__N_111PathBuilder17AppendPathElementEPvPKNS_11PathElementE) #19
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %76) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %702) #19
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %146) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %689) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %647) #19
  %1022 = load i32, i32* %204, align 4
  br label %1023

1023:                                             ; preds = %979, %985
  %1024 = phi i32 [ %981, %979 ], [ %1022, %985 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %584) #19
  %1025 = add nuw nsw i64 %914, 1
  %1026 = zext i32 %1024 to i64
  %1027 = icmp ult i64 %1025, %1026
  br i1 %1027, label %913, label %706

1028:                                             ; preds = %1194, %746
  %1029 = bitcast %"class.WTF::String"* %155 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1029) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %155, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.118, i64 0, i64 0), i64 7) #19
  %1030 = bitcast %"class.blink::protocol::ListValue"** %749 to %"class.blink::protocol::Value"**
  %1031 = load %"class.blink::protocol::Value"*, %"class.blink::protocol::Value"** %1030, align 8
  store %"class.blink::protocol::ListValue"* null, %"class.blink::protocol::ListValue"** %749, align 8
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %201, %"class.WTF::String"* nonnull dereferenceable(8) %155, %"class.blink::protocol::Value"* %1031) #19
  %1032 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %155, i64 0, i32 0, i32 0
  %1033 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1032, align 8
  %1034 = icmp eq %"class.WTF::StringImpl"* %1033, null
  br i1 %1034, label %1048, label %1035

1035:                                             ; preds = %1028
  %1036 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1033, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1037 = load atomic i32, i32* %1036 monotonic, align 4
  %1038 = and i32 %1037, 2
  %1039 = icmp eq i32 %1038, 0
  %1040 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1033, i64 0, i32 0
  %1041 = load i32, i32* %1040, align 4
  br i1 %1039, label %1042, label %1044

1042:                                             ; preds = %1035
  %1043 = add i32 %1041, -1
  store i32 %1043, i32* %1040, align 4
  br label %1044

1044:                                             ; preds = %1042, %1035
  %1045 = phi i32 [ %1043, %1042 ], [ %1041, %1035 ]
  %1046 = icmp eq i32 %1045, 0
  br i1 %1046, label %1047, label %1048

1047:                                             ; preds = %1044
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1033) #19
  br label %1048

1048:                                             ; preds = %1047, %1044, %1028
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1029) #19
  %1049 = bitcast %"class.WTF::String"* %156 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1049) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %156, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.119, i64 0, i64 0), i64 10) #19
  %1050 = bitcast %"class.blink::protocol::ListValue"** %757 to %"class.blink::protocol::Value"**
  %1051 = load %"class.blink::protocol::Value"*, %"class.blink::protocol::Value"** %1050, align 8
  store %"class.blink::protocol::ListValue"* null, %"class.blink::protocol::ListValue"** %757, align 8
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %201, %"class.WTF::String"* nonnull dereferenceable(8) %156, %"class.blink::protocol::Value"* %1051) #19
  %1052 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %156, i64 0, i32 0, i32 0
  %1053 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1052, align 8
  %1054 = icmp eq %"class.WTF::StringImpl"* %1053, null
  br i1 %1054, label %1068, label %1055

1055:                                             ; preds = %1048
  %1056 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1053, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1057 = load atomic i32, i32* %1056 monotonic, align 4
  %1058 = and i32 %1057, 2
  %1059 = icmp eq i32 %1058, 0
  %1060 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1053, i64 0, i32 0
  %1061 = load i32, i32* %1060, align 4
  br i1 %1059, label %1062, label %1064

1062:                                             ; preds = %1055
  %1063 = add i32 %1061, -1
  store i32 %1063, i32* %1060, align 4
  br label %1064

1064:                                             ; preds = %1062, %1055
  %1065 = phi i32 [ %1063, %1062 ], [ %1061, %1055 ]
  %1066 = icmp eq i32 %1065, 0
  br i1 %1066, label %1067, label %1068

1067:                                             ; preds = %1064
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1053) #19
  br label %1068

1068:                                             ; preds = %1048, %1064, %1067
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1049) #19
  %1069 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %1, i64 0, i32 13
  %1070 = load i8, i8* %1069, align 4, !range !26
  %1071 = icmp eq i8 %1070, 0
  br i1 %1071, label %1240, label %1199

1072:                                             ; preds = %788, %1194
  %1073 = phi i64 [ 1, %788 ], [ %1196, %1194 ]
  %1074 = trunc i64 %1073 to i32
  %1075 = call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3011"* nonnull %128, i32 %1074)
  %1076 = add nsw i64 %1073, -1
  %1077 = trunc i64 %1076 to i32
  %1078 = call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3011"* nonnull %128, i32 %1077)
  %1079 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1075, i64 0, i32 0
  %1080 = load i32, i32* %1079, align 4
  %1081 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1078, i64 0, i32 0
  %1082 = load i32, i32* %1081, align 4
  %1083 = icmp sgt i32 %1082, -1
  %1084 = select i1 %1083, i32 -2147483648, i32 2147483647
  %1085 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1080, i32 %1082) #19
  %1086 = extractvalue { i32, i1 } %1085, 1
  %1087 = extractvalue { i32, i1 } %1085, 0
  %1088 = select i1 %1086, i32 %1084, i32 %1087, !prof !2
  %1089 = load i32, i32* %212, align 4
  %1090 = add i32 %1089, -1
  %1091 = zext i32 %1090 to i64
  %1092 = icmp eq i64 %1073, %1091
  br i1 %1092, label %1098, label %1093

1093:                                             ; preds = %1072
  %1094 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1088, i32 %789) #19
  %1095 = extractvalue { i32, i1 } %1094, 1
  %1096 = extractvalue { i32, i1 } %1094, 0
  %1097 = select i1 %1095, i32 %791, i32 %1096, !prof !2
  br label %1098

1098:                                             ; preds = %1072, %1093
  %1099 = phi i32 [ %1088, %1072 ], [ %1097, %1093 ]
  %1100 = call fastcc i32 @_ZN5blink12_GLOBAL__N_121GetPositionForTrackAtEPKNS_12LayoutObjectEmNS_24GridTrackSizingDirectionERKN3WTF6VectorINS_10LayoutUnitELj0ENS5_18PartitionAllocatorEEE(%"class.blink::LayoutObject"* %190, i64 %1076, i32 0, %"class.WTF::Vector.3011"* nonnull dereferenceable(16) %128)
  br i1 %785, label %1108, label %1101

1101:                                             ; preds = %1098
  %1102 = icmp sgt i32 %1099, -1
  %1103 = select i1 %1102, i32 -2147483648, i32 2147483647
  %1104 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1100, i32 %1099) #19
  %1105 = extractvalue { i32, i1 } %1104, 1
  %1106 = extractvalue { i32, i1 } %1104, 0
  %1107 = select i1 %1105, i32 %1103, i32 %1106, !prof !2
  br label %1108

1108:                                             ; preds = %1101, %1098
  %1109 = phi i32 [ %1100, %1098 ], [ %1107, %1101 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %792) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %911, i8 -1, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %793) #19, !noalias !75
  %1110 = sitofp i32 %1109 to float
  %1111 = fmul float %1110, 1.562500e-02
  %1112 = sitofp i32 %1099 to float
  %1113 = fmul float %1112, 1.562500e-02
  %1114 = insertelement <2 x float> undef, float %1111, i32 0
  %1115 = insertelement <2 x float> %1114, float %795, i32 1
  store <2 x float> %1115, <2 x float>* %798, align 8, !noalias !75
  %1116 = fadd float %1113, %1111
  store float %1116, float* %799, align 8, !noalias !75
  store float %795, float* %800, align 4, !noalias !75
  store float %1116, float* %802, align 8, !noalias !75
  store float %801, float* %803, align 4, !noalias !75
  store float %1111, float* %804, align 8, !noalias !75
  store float %801, float* %805, align 4, !noalias !75
  call void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* nonnull sret %151, %"class.blink::LayoutObject"* %190, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %75, %"class.blink::LayoutBoxModelObject"* null, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %793) #19, !noalias !75
  %1117 = load i64, i64* %807, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %808)
  store i64 %1117, i64* %811, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %812) #19
  %1118 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %174, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %809) #19
  store <2 x float> %1118, <2 x float>* %15, align 8
  %1119 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %174) #19
  %1120 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %1119) #19
  %1121 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %1120, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %810) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %812) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %808)
  store <2 x float> %1121, <2 x float>* %806, align 8
  %1122 = load i64, i64* %815, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %816)
  store i64 %1122, i64* %819, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %820) #19
  %1123 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %174, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %817) #19
  store <2 x float> %1123, <2 x float>* %13, align 8
  %1124 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %174) #19
  %1125 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %1124) #19
  %1126 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %1125, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %818) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %820) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %816)
  store <2 x float> %1126, <2 x float>* %814, align 8
  %1127 = load i64, i64* %822, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %823) #19
  store i64 %1127, i64* %826, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %827) #19
  %1128 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %174, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %824) #19
  store <2 x float> %1128, <2 x float>* %74, align 8
  %1129 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %174) #19
  %1130 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %1129) #19
  %1131 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %1130, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %825) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %827) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %823) #19
  store <2 x float> %1131, <2 x float>* %828, align 8
  %1132 = load i64, i64* %830, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %831) #19
  store i64 %1132, i64* %834, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %835) #19
  %1133 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %174, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %832) #19
  store <2 x float> %1133, <2 x float>* %72, align 8
  %1134 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %174) #19
  %1135 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %1134) #19
  %1136 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %1135, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %833) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %835) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %831) #19
  store <2 x float> %1136, <2 x float>* %836, align 8
  %1137 = load i32, i32* %212, align 4
  %1138 = add i32 %1137, -1
  %1139 = zext i32 %1138 to i64
  %1140 = select i1 %785, i64 %1139, i64 1
  %1141 = icmp eq i64 %1073, %1140
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %837) #19
  %1142 = or i1 %838, %1141
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %837, i8 -86, i64 16, i1 false) #19, !alias.scope !80
  call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* nonnull %152) #19
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %841) #19, !noalias !80
  %1143 = load i64, i64* %807, align 8, !noalias !80
  store i64 %1143, i64* %842, align 8, !noalias !80
  call void @_ZN5blink4Path6MoveToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %152, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %839) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %841) #19, !noalias !80
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %843) #19, !noalias !80
  %1144 = load i64, i64* %830, align 8, !noalias !80
  store i64 %1144, i64* %844, align 8, !noalias !80
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %152, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %840) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %843) #19, !noalias !80
  br i1 %1142, label %1145, label %1148

1145:                                             ; preds = %1108
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %847) #19, !noalias !80
  %1146 = load i64, i64* %822, align 8, !noalias !80
  store i64 %1146, i64* %848, align 8, !noalias !80
  call void @_ZN5blink4Path6MoveToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %152, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %846) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %847) #19, !noalias !80
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %849) #19, !noalias !80
  %1147 = load i64, i64* %815, align 8, !noalias !80
  store i64 %1147, i64* %850, align 8, !noalias !80
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %152, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %845) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %849) #19, !noalias !80
  br label %1148

1148:                                             ; preds = %1108, %1145
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %851) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %851, i8 -86, i64 16, i1 false) #19
  call void @_ZN5blink4PathC1ERKS0_(%"class.blink::Path"* nonnull %65, %"class.blink::Path"* nonnull dereferenceable(16) %152) #19
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %852) #19
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %66) #19
  %1149 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEd(%"class.blink::AffineTransform"* nonnull %66, double %853) #19
  call void @_ZN5blink4Path9TransformERKNS_15AffineTransformE(%"class.blink::Path"* nonnull %65, %"class.blink::AffineTransform"* dereferenceable(48) %1149) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %852) #19
  call void @_ZNK5blink4Path5ApplyEPvPFvS1_PKNS_11PathElementEE(%"class.blink::Path"* nonnull %65, i8* nonnull %747, void (i8*, %"struct.blink::PathElement"*)* nonnull @_ZN5blink12_GLOBAL__N_111PathBuilder17AppendPathElementEPvPKNS_11PathElementE) #19
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %65) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %851) #19
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %152) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %837) #19
  %1150 = load i32, i32* %212, align 4
  %1151 = add i32 %1150, -1
  %1152 = zext i32 %1151 to i64
  %1153 = icmp eq i64 %1073, %1152
  br i1 %1153, label %1194, label %1154

1154:                                             ; preds = %1148
  %1155 = call fastcc i32 @_ZN5blink12_GLOBAL__N_121GetPositionForTrackAtEPKNS_12LayoutObjectEmNS_24GridTrackSizingDirectionERKN3WTF6VectorINS_10LayoutUnitELj0ENS5_18PartitionAllocatorEEE(%"class.blink::LayoutObject"* %190, i64 %1073, i32 0, %"class.WTF::Vector.3011"* nonnull dereferenceable(16) %128)
  br i1 %785, label %1156, label %1161

1156:                                             ; preds = %1154
  %1157 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1155, i32 %789) #19
  %1158 = extractvalue { i32, i1 } %1157, 1
  %1159 = extractvalue { i32, i1 } %1157, 0
  %1160 = select i1 %1158, i32 %791, i32 %1159, !prof !2
  br label %1161

1161:                                             ; preds = %1156, %1154
  %1162 = phi i32 [ %1160, %1156 ], [ %1155, %1154 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %854) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %912, i8 -1, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %855) #19, !noalias !83
  %1163 = sitofp i32 %1162 to float
  %1164 = fmul float %1163, 1.562500e-02
  %1165 = insertelement <2 x float> undef, float %1164, i32 0
  %1166 = insertelement <2 x float> %1165, float %795, i32 1
  store <2 x float> %1166, <2 x float>* %858, align 8, !noalias !83
  %1167 = fadd float %1164, %857
  store float %1167, float* %859, align 8, !noalias !83
  store float %795, float* %860, align 4, !noalias !83
  store float %1167, float* %861, align 8, !noalias !83
  store float %801, float* %862, align 4, !noalias !83
  store float %1164, float* %863, align 8, !noalias !83
  store float %801, float* %864, align 4, !noalias !83
  call void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* nonnull sret %153, %"class.blink::LayoutObject"* %190, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %64, %"class.blink::LayoutBoxModelObject"* null, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %855) #19, !noalias !83
  %1168 = load i64, i64* %866, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %867)
  store i64 %1168, i64* %870, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %871) #19
  %1169 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %174, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %868) #19
  store <2 x float> %1169, <2 x float>* %11, align 8
  %1170 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %174) #19
  %1171 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %1170) #19
  %1172 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %1171, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %869) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %871) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %867)
  store <2 x float> %1172, <2 x float>* %865, align 8
  %1173 = load i64, i64* %874, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %875)
  store i64 %1173, i64* %878, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %879) #19
  %1174 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %174, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %876) #19
  store <2 x float> %1174, <2 x float>* %9, align 8
  %1175 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %174) #19
  %1176 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %1175) #19
  %1177 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %1176, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %877) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %879) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %875)
  store <2 x float> %1177, <2 x float>* %873, align 8
  %1178 = load i64, i64* %881, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %882) #19
  store i64 %1178, i64* %885, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %886) #19
  %1179 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %174, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %883) #19
  store <2 x float> %1179, <2 x float>* %63, align 8
  %1180 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %174) #19
  %1181 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %1180) #19
  %1182 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %1181, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %884) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %886) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %882) #19
  store <2 x float> %1182, <2 x float>* %887, align 8
  %1183 = load i64, i64* %889, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %890) #19
  store i64 %1183, i64* %893, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %894) #19
  %1184 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %174, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %891) #19
  store <2 x float> %1184, <2 x float>* %61, align 8
  %1185 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %174) #19
  %1186 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %1185) #19
  %1187 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %1186, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %892) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %894) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %890) #19
  store <2 x float> %1187, <2 x float>* %895, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %896) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %896, i8 -86, i64 16, i1 false) #19, !alias.scope !88
  call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* nonnull %154) #19
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %901) #19, !noalias !88
  %1188 = load i64, i64* %866, align 8, !noalias !88
  store i64 %1188, i64* %902, align 8, !noalias !88
  call void @_ZN5blink4Path6MoveToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %154, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %897) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %901) #19, !noalias !88
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %903) #19, !noalias !88
  %1189 = load i64, i64* %874, align 8, !noalias !88
  store i64 %1189, i64* %904, align 8, !noalias !88
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %154, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %898) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %903) #19, !noalias !88
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %905) #19, !noalias !88
  %1190 = load i64, i64* %881, align 8, !noalias !88
  store i64 %1190, i64* %906, align 8, !noalias !88
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %154, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %899) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %905) #19, !noalias !88
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %907) #19, !noalias !88
  %1191 = load i64, i64* %889, align 8, !noalias !88
  store i64 %1191, i64* %908, align 8, !noalias !88
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %154, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %900) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %907) #19, !noalias !88
  call void @_ZN5blink4Path12CloseSubpathEv(%"class.blink::Path"* nonnull %154) #19
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %909) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %909, i8 -86, i64 16, i1 false) #19
  call void @_ZN5blink4PathC1ERKS0_(%"class.blink::Path"* nonnull %54, %"class.blink::Path"* nonnull dereferenceable(16) %154) #19
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %910) #19
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %55) #19
  %1192 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEd(%"class.blink::AffineTransform"* nonnull %55, double %853) #19
  call void @_ZN5blink4Path9TransformERKNS_15AffineTransformE(%"class.blink::Path"* nonnull %54, %"class.blink::AffineTransform"* dereferenceable(48) %1192) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %910) #19
  call void @_ZNK5blink4Path5ApplyEPvPFvS1_PKNS_11PathElementEE(%"class.blink::Path"* nonnull %54, i8* nonnull %755, void (i8*, %"struct.blink::PathElement"*)* nonnull @_ZN5blink12_GLOBAL__N_111PathBuilder17AppendPathElementEPvPKNS_11PathElementE) #19
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %54) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %909) #19
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %154) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %896) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %854) #19
  %1193 = load i32, i32* %212, align 4
  br label %1194

1194:                                             ; preds = %1148, %1161
  %1195 = phi i32 [ %1150, %1148 ], [ %1193, %1161 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %792) #19
  %1196 = add nuw nsw i64 %1073, 1
  %1197 = zext i32 %1195 to i64
  %1198 = icmp ult i64 %1196, %1197
  br i1 %1198, label %1072, label %1028

1199:                                             ; preds = %1068
  %1200 = bitcast %"class.WTF::String"* %157 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1200) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %157, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.120, i64 0, i64 0), i64 30) #19
  %1201 = call fastcc %"class.blink::protocol::ListValue"* @_ZN5blink12_GLOBAL__N_136BuildGridPositiveLineNumberPositionsEPNS_4NodeERKNS_10LayoutUnitENS_24GridTrackSizingDirectionEfRKN3WTF6VectorIS3_Lj0ENS7_18PartitionAllocatorEEESC_(%"class.blink::Node"* %0, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %132, i32 1, float %2, %"class.WTF::Vector.3011"* nonnull dereferenceable(16) %127, %"class.WTF::Vector.3011"* nonnull dereferenceable(16) %128)
  %1202 = bitcast %"class.blink::protocol::ListValue"* %1201 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %201, %"class.WTF::String"* nonnull dereferenceable(8) %157, %"class.blink::protocol::Value"* %1202) #19
  %1203 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %157, i64 0, i32 0, i32 0
  %1204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1203, align 8
  %1205 = icmp eq %"class.WTF::StringImpl"* %1204, null
  br i1 %1205, label %1219, label %1206

1206:                                             ; preds = %1199
  %1207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1208 = load atomic i32, i32* %1207 monotonic, align 4
  %1209 = and i32 %1208, 2
  %1210 = icmp eq i32 %1209, 0
  %1211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1204, i64 0, i32 0
  %1212 = load i32, i32* %1211, align 4
  br i1 %1210, label %1213, label %1215

1213:                                             ; preds = %1206
  %1214 = add i32 %1212, -1
  store i32 %1214, i32* %1211, align 4
  br label %1215

1215:                                             ; preds = %1213, %1206
  %1216 = phi i32 [ %1214, %1213 ], [ %1212, %1206 ]
  %1217 = icmp eq i32 %1216, 0
  br i1 %1217, label %1218, label %1219

1218:                                             ; preds = %1215
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1204) #19
  br label %1219

1219:                                             ; preds = %1218, %1215, %1199
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1200) #19
  %1220 = bitcast %"class.WTF::String"* %158 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1220) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %158, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.121, i64 0, i64 0), i64 33) #19
  %1221 = call fastcc %"class.blink::protocol::ListValue"* @_ZN5blink12_GLOBAL__N_136BuildGridPositiveLineNumberPositionsEPNS_4NodeERKNS_10LayoutUnitENS_24GridTrackSizingDirectionEfRKN3WTF6VectorIS3_Lj0ENS7_18PartitionAllocatorEEESC_(%"class.blink::Node"* %0, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %133, i32 0, float %2, %"class.WTF::Vector.3011"* nonnull dereferenceable(16) %128, %"class.WTF::Vector.3011"* nonnull dereferenceable(16) %127)
  %1222 = bitcast %"class.blink::protocol::ListValue"* %1221 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %201, %"class.WTF::String"* nonnull dereferenceable(8) %158, %"class.blink::protocol::Value"* %1222) #19
  %1223 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %158, i64 0, i32 0, i32 0
  %1224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1223, align 8
  %1225 = icmp eq %"class.WTF::StringImpl"* %1224, null
  br i1 %1225, label %1239, label %1226

1226:                                             ; preds = %1219
  %1227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1224, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1228 = load atomic i32, i32* %1227 monotonic, align 4
  %1229 = and i32 %1228, 2
  %1230 = icmp eq i32 %1229, 0
  %1231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1224, i64 0, i32 0
  %1232 = load i32, i32* %1231, align 4
  br i1 %1230, label %1233, label %1235

1233:                                             ; preds = %1226
  %1234 = add i32 %1232, -1
  store i32 %1234, i32* %1231, align 4
  br label %1235

1235:                                             ; preds = %1233, %1226
  %1236 = phi i32 [ %1234, %1233 ], [ %1232, %1226 ]
  %1237 = icmp eq i32 %1236, 0
  br i1 %1237, label %1238, label %1239

1238:                                             ; preds = %1235
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1224) #19
  br label %1239

1239:                                             ; preds = %1219, %1235, %1238
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1220) #19
  br label %1240

1240:                                             ; preds = %1068, %1239
  %1241 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %1, i64 0, i32 14
  %1242 = load i8, i8* %1241, align 1, !range !26
  %1243 = icmp eq i8 %1242, 0
  br i1 %1243, label %1285, label %1244

1244:                                             ; preds = %1240
  %1245 = bitcast %"class.WTF::String"* %159 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1245) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %159, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.122, i64 0, i64 0), i64 30) #19
  %1246 = call fastcc %"class.blink::protocol::ListValue"* @_ZN5blink12_GLOBAL__N_136BuildGridNegativeLineNumberPositionsEPNS_4NodeERKNS_10LayoutUnitENS_24GridTrackSizingDirectionEfRKN3WTF6VectorIS3_Lj0ENS7_18PartitionAllocatorEEESC_(%"class.blink::Node"* %0, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %132, i32 1, float %2, %"class.WTF::Vector.3011"* nonnull dereferenceable(16) %127, %"class.WTF::Vector.3011"* nonnull dereferenceable(16) %128)
  %1247 = bitcast %"class.blink::protocol::ListValue"* %1246 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %201, %"class.WTF::String"* nonnull dereferenceable(8) %159, %"class.blink::protocol::Value"* nonnull %1247) #19
  %1248 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %159, i64 0, i32 0, i32 0
  %1249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1248, align 8
  %1250 = icmp eq %"class.WTF::StringImpl"* %1249, null
  br i1 %1250, label %1264, label %1251

1251:                                             ; preds = %1244
  %1252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1253 = load atomic i32, i32* %1252 monotonic, align 4
  %1254 = and i32 %1253, 2
  %1255 = icmp eq i32 %1254, 0
  %1256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1249, i64 0, i32 0
  %1257 = load i32, i32* %1256, align 4
  br i1 %1255, label %1258, label %1260

1258:                                             ; preds = %1251
  %1259 = add i32 %1257, -1
  store i32 %1259, i32* %1256, align 4
  br label %1260

1260:                                             ; preds = %1258, %1251
  %1261 = phi i32 [ %1259, %1258 ], [ %1257, %1251 ]
  %1262 = icmp eq i32 %1261, 0
  br i1 %1262, label %1263, label %1264

1263:                                             ; preds = %1260
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1249) #19
  br label %1264

1264:                                             ; preds = %1263, %1260, %1244
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1245) #19
  %1265 = bitcast %"class.WTF::String"* %160 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1265) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %160, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.123, i64 0, i64 0), i64 33) #19
  %1266 = call fastcc %"class.blink::protocol::ListValue"* @_ZN5blink12_GLOBAL__N_136BuildGridNegativeLineNumberPositionsEPNS_4NodeERKNS_10LayoutUnitENS_24GridTrackSizingDirectionEfRKN3WTF6VectorIS3_Lj0ENS7_18PartitionAllocatorEEESC_(%"class.blink::Node"* %0, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %133, i32 0, float %2, %"class.WTF::Vector.3011"* nonnull dereferenceable(16) %128, %"class.WTF::Vector.3011"* nonnull dereferenceable(16) %127)
  %1267 = bitcast %"class.blink::protocol::ListValue"* %1266 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %201, %"class.WTF::String"* nonnull dereferenceable(8) %160, %"class.blink::protocol::Value"* nonnull %1267) #19
  %1268 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %160, i64 0, i32 0, i32 0
  %1269 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1268, align 8
  %1270 = icmp eq %"class.WTF::StringImpl"* %1269, null
  br i1 %1270, label %1284, label %1271

1271:                                             ; preds = %1264
  %1272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1269, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1273 = load atomic i32, i32* %1272 monotonic, align 4
  %1274 = and i32 %1273, 2
  %1275 = icmp eq i32 %1274, 0
  %1276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1269, i64 0, i32 0
  %1277 = load i32, i32* %1276, align 4
  br i1 %1275, label %1278, label %1280

1278:                                             ; preds = %1271
  %1279 = add i32 %1277, -1
  store i32 %1279, i32* %1276, align 4
  br label %1280

1280:                                             ; preds = %1278, %1271
  %1281 = phi i32 [ %1279, %1278 ], [ %1277, %1271 ]
  %1282 = icmp eq i32 %1281, 0
  br i1 %1282, label %1283, label %1284

1283:                                             ; preds = %1280
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1269) #19
  br label %1284

1284:                                             ; preds = %1264, %1280, %1283
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1265) #19
  br label %1285

1285:                                             ; preds = %1240, %1284
  %1286 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %1, i64 0, i32 15
  %1287 = load i8, i8* %1286, align 2, !range !26
  %1288 = icmp eq i8 %1287, 0
  br i1 %1288, label %1657, label %1289

1289:                                             ; preds = %1285
  %1290 = bitcast %"class.WTF::String"* %161 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1290) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %161, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.124, i64 0, i64 0), i64 9) #19
  %1291 = load i32, i32* %175, align 8
  %1292 = and i32 %1291, 1
  %1293 = icmp eq i32 %1292, 0
  br i1 %1293, label %1298, label %1294

1294:                                             ; preds = %1289
  %1295 = bitcast %"class.blink::NodeData"** %179 to %"class.blink::NodeRareData"**
  %1296 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %1295, align 8
  %1297 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %1296, i64 0, i32 1, i32 0, i32 0
  br label %1300

1298:                                             ; preds = %1289
  %1299 = bitcast %"class.blink::NodeData"** %179 to %"class.blink::NodeRenderingData"**
  br label %1300

1300:                                             ; preds = %1298, %1294
  %1301 = phi %"class.blink::NodeRenderingData"** [ %1297, %1294 ], [ %1299, %1298 ]
  %1302 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %1301, align 8
  %1303 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %1302, i64 0, i32 1
  %1304 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1303, align 8
  %1305 = icmp eq %"class.blink::LayoutObject"* %1304, null
  br i1 %1305, label %1312, label %1306

1306:                                             ; preds = %1300
  %1307 = bitcast %"class.blink::LayoutObject"* %1304 to %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)***
  %1308 = load %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)*** %1307, align 8
  %1309 = getelementptr inbounds %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)** %1308, i64 33
  %1310 = load %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)** %1309, align 8
  %1311 = call %"class.blink::LayoutNGGridInterface"* %1310(%"class.blink::LayoutObject"* nonnull %1304) #19
  br label %1312

1312:                                             ; preds = %1306, %1300
  %1313 = phi %"class.blink::LayoutNGGridInterface"* [ %1311, %1306 ], [ null, %1300 ]
  %1314 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %170, align 8
  %1315 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1314, i64 0, i32 2, i32 0, i32 0
  %1316 = load %"class.blink::Document"*, %"class.blink::Document"** %1315, align 8
  %1317 = call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %1316) #19
  %1318 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1304, i64 0, i32 5, i32 0
  %1319 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1318, align 8
  %1320 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1319, i64 0, i32 0, i32 9
  %1321 = bitcast [20 x i8]* %1320 to i160*
  %1322 = load i160, i160* %1321, align 8
  %1323 = and i160 %1322, 41538374868278621028243970633760768
  %1324 = icmp eq i160 %1323, 0
  %1325 = call i8* @_Znwm(i64 80) #18
  %1326 = bitcast i8* %1325 to %"class.blink::protocol::DictionaryValue"*
  call void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"* nonnull %1326) #19
  %1327 = bitcast %"class.blink::LayoutNGGridInterface"* %1313 to i32 (%"class.blink::LayoutNGGridInterface"*, i32)***
  %1328 = load i32 (%"class.blink::LayoutNGGridInterface"*, i32)**, i32 (%"class.blink::LayoutNGGridInterface"*, i32)*** %1327, align 8
  %1329 = getelementptr inbounds i32 (%"class.blink::LayoutNGGridInterface"*, i32)*, i32 (%"class.blink::LayoutNGGridInterface"*, i32)** %1328, i64 6
  %1330 = load i32 (%"class.blink::LayoutNGGridInterface"*, i32)*, i32 (%"class.blink::LayoutNGGridInterface"*, i32)** %1329, align 8
  %1331 = call i32 %1330(%"class.blink::LayoutNGGridInterface"* %1313, i32 1) #19
  %1332 = load i32 (%"class.blink::LayoutNGGridInterface"*, i32)**, i32 (%"class.blink::LayoutNGGridInterface"*, i32)*** %1327, align 8
  %1333 = getelementptr inbounds i32 (%"class.blink::LayoutNGGridInterface"*, i32)*, i32 (%"class.blink::LayoutNGGridInterface"*, i32)** %1332, i64 6
  %1334 = load i32 (%"class.blink::LayoutNGGridInterface"*, i32)*, i32 (%"class.blink::LayoutNGGridInterface"*, i32)** %1333, align 8
  %1335 = call i32 %1334(%"class.blink::LayoutNGGridInterface"* %1313, i32 0) #19
  %1336 = bitcast %"class.WTF::HashMap.548"* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1336) #19
  %1337 = getelementptr inbounds %"class.WTF::HashMap.548", %"class.WTF::HashMap.548"* %50, i64 0, i32 0, i32 0
  %1338 = getelementptr inbounds %"class.WTF::HashMap.548", %"class.WTF::HashMap.548"* %50, i64 0, i32 0, i32 1
  %1339 = getelementptr inbounds %"class.WTF::HashMap.548", %"class.WTF::HashMap.548"* %50, i64 0, i32 0, i32 2
  %1340 = bitcast %"class.blink::ComputedStyle"** %1318 to %"class.blink::ComputedStyleBase"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1336, i8 -86, i64 24, i1 false) #19
  %1341 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %1340, align 8
  %1342 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %1341, i64 0, i32 3, i32 0, i32 0
  %1343 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %1342, align 8
  %1344 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %1343, i64 0, i32 3, i32 0, i32 0
  %1345 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %1344, align 8
  %1346 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %1345, i64 0, i32 3, i32 0, i32 0
  %1347 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %1346, align 8
  %1348 = getelementptr inbounds %"class.WTF::HashMap.548", %"class.WTF::HashMap.548"* %50, i64 0, i32 0
  %1349 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %1347, i64 0, i32 12, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1336, i8 0, i64 20, i1 false) #19
  %1350 = load i32, i32* %1349, align 4
  %1351 = icmp eq i32 %1350, 0
  br i1 %1351, label %1388, label %1352

1352:                                             ; preds = %1312
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8GridAreaEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.549"* nonnull %1348, i32 %1350) #19
  %1353 = load i32, i32* %1349, align 4
  %1354 = icmp eq i32 %1353, 0
  %1355 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %1347, i64 0, i32 12, i32 0, i32 0
  %1356 = load %"struct.WTF::KeyValuePair.552"*, %"struct.WTF::KeyValuePair.552"** %1355, align 8
  %1357 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %1347, i64 0, i32 12, i32 0, i32 1
  %1358 = load i32, i32* %1357, align 8
  %1359 = zext i32 %1358 to i64
  %1360 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %1356, i64 %1359
  br i1 %1354, label %1388, label %1361

1361:                                             ; preds = %1352
  %1362 = icmp eq i32 %1358, 0
  br i1 %1362, label %1370, label %1363

1363:                                             ; preds = %1361, %1367
  %1364 = phi %"struct.WTF::KeyValuePair.552"* [ %1368, %1367 ], [ %1356, %1361 ]
  %1365 = bitcast %"struct.WTF::KeyValuePair.552"* %1364 to i64*
  %1366 = load i64, i64* %1365, align 8
  switch i64 %1366, label %1370 [
    i64 -1, label %1367
    i64 0, label %1367
  ]

1367:                                             ; preds = %1363, %1363
  %1368 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %1364, i64 1
  %1369 = icmp eq %"struct.WTF::KeyValuePair.552"* %1368, %1360
  br i1 %1369, label %1388, label %1363

1370:                                             ; preds = %1363, %1361
  %1371 = phi %"struct.WTF::KeyValuePair.552"* [ %1356, %1361 ], [ %1364, %1363 ]
  %1372 = icmp eq %"struct.WTF::KeyValuePair.552"* %1371, %1360
  br i1 %1372, label %1388, label %1373

1373:                                             ; preds = %1370, %1386
  %1374 = phi %"struct.WTF::KeyValuePair.552"* [ %1380, %1386 ], [ %1371, %1370 ]
  %1375 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %1374, i64 0, i32 0
  %1376 = call { %"struct.WTF::KeyValuePair.552"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8GridAreaEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_SC_SD_EERKS1_RKS5_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.549"* nonnull %1348, %"class.WTF::String"* dereferenceable(8) %1375, %"struct.WTF::KeyValuePair.552"* dereferenceable(32) %1374) #19
  %1377 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %1374, i64 1
  %1378 = icmp eq %"struct.WTF::KeyValuePair.552"* %1377, %1360
  br i1 %1378, label %1388, label %1379

1379:                                             ; preds = %1373, %1383
  %1380 = phi %"struct.WTF::KeyValuePair.552"* [ %1384, %1383 ], [ %1377, %1373 ]
  %1381 = bitcast %"struct.WTF::KeyValuePair.552"* %1380 to i64*
  %1382 = load i64, i64* %1381, align 8
  switch i64 %1382, label %1386 [
    i64 -1, label %1383
    i64 0, label %1383
  ]

1383:                                             ; preds = %1379, %1379
  %1384 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %1380, i64 1
  %1385 = icmp eq %"struct.WTF::KeyValuePair.552"* %1384, %1360
  br i1 %1385, label %1388, label %1379

1386:                                             ; preds = %1379
  %1387 = icmp eq %"struct.WTF::KeyValuePair.552"* %1380, %1360
  br i1 %1387, label %1388, label %1373

1388:                                             ; preds = %1367, %1386, %1373, %1383, %1370, %1352, %1312
  %1389 = load i32, i32* %1339, align 4
  %1390 = icmp eq i32 %1389, 0
  %1391 = load %"struct.WTF::KeyValuePair.552"*, %"struct.WTF::KeyValuePair.552"** %1337, align 8
  %1392 = load i32, i32* %1338, align 8
  %1393 = zext i32 %1392 to i64
  %1394 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %1391, i64 %1393
  br i1 %1390, label %1473, label %1395

1395:                                             ; preds = %1388
  %1396 = icmp eq i32 %1392, 0
  br i1 %1396, label %1404, label %1397

1397:                                             ; preds = %1395, %1401
  %1398 = phi %"struct.WTF::KeyValuePair.552"* [ %1402, %1401 ], [ %1391, %1395 ]
  %1399 = bitcast %"struct.WTF::KeyValuePair.552"* %1398 to i64*
  %1400 = load i64, i64* %1399, align 8
  switch i64 %1400, label %1404 [
    i64 -1, label %1401
    i64 0, label %1401
  ]

1401:                                             ; preds = %1397, %1397
  %1402 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %1398, i64 1
  %1403 = icmp eq %"struct.WTF::KeyValuePair.552"* %1402, %1394
  br i1 %1403, label %1473, label %1397

1404:                                             ; preds = %1397, %1395
  %1405 = phi %"struct.WTF::KeyValuePair.552"* [ %1391, %1395 ], [ %1398, %1397 ]
  %1406 = icmp eq %"struct.WTF::KeyValuePair.552"* %1405, %1394
  br i1 %1406, label %1473, label %1407

1407:                                             ; preds = %1404
  %1408 = bitcast %"class.blink::FloatQuad"* %51 to i8*
  %1409 = bitcast %"class.blink::FloatQuad"* %37 to i8*
  %1410 = bitcast %"class.blink::FloatQuad"* %37 to <2 x float>*
  %1411 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %37, i64 0, i32 1, i32 0
  %1412 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %37, i64 0, i32 1, i32 1
  %1413 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %37, i64 0, i32 2, i32 0
  %1414 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %37, i64 0, i32 2, i32 1
  %1415 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %37, i64 0, i32 3, i32 0
  %1416 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %37, i64 0, i32 3, i32 1
  %1417 = bitcast %"class.blink::FloatQuad"* %51 to <2 x float>*
  %1418 = bitcast %"class.blink::FloatQuad"* %51 to i64*
  %1419 = bitcast <2 x float>* %35 to i8*
  %1420 = bitcast <2 x float>* %35 to %"class.blink::FloatPoint"*
  %1421 = bitcast <2 x float>* %36 to %"class.blink::FloatPoint"*
  %1422 = bitcast <2 x float>* %35 to i64*
  %1423 = bitcast <2 x float>* %36 to i8*
  %1424 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %51, i64 0, i32 1
  %1425 = bitcast %"class.blink::FloatPoint"* %1424 to <2 x float>*
  %1426 = bitcast %"class.blink::FloatPoint"* %1424 to i64*
  %1427 = bitcast <2 x float>* %38 to i8*
  %1428 = bitcast <2 x float>* %38 to %"class.blink::FloatPoint"*
  %1429 = bitcast <2 x float>* %39 to %"class.blink::FloatPoint"*
  %1430 = bitcast <2 x float>* %38 to i64*
  %1431 = bitcast <2 x float>* %39 to i8*
  %1432 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %51, i64 0, i32 2
  %1433 = bitcast %"class.blink::FloatPoint"* %1432 to i64*
  %1434 = bitcast <2 x float>* %42 to i8*
  %1435 = bitcast <2 x float>* %42 to %"class.blink::FloatPoint"*
  %1436 = bitcast <2 x float>* %43 to %"class.blink::FloatPoint"*
  %1437 = bitcast <2 x float>* %42 to i64*
  %1438 = bitcast <2 x float>* %43 to i8*
  %1439 = bitcast %"class.blink::FloatPoint"* %1432 to <2 x float>*
  %1440 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %51, i64 0, i32 3
  %1441 = bitcast %"class.blink::FloatPoint"* %1440 to i64*
  %1442 = bitcast <2 x float>* %40 to i8*
  %1443 = bitcast <2 x float>* %40 to %"class.blink::FloatPoint"*
  %1444 = bitcast <2 x float>* %41 to %"class.blink::FloatPoint"*
  %1445 = bitcast <2 x float>* %40 to i64*
  %1446 = bitcast <2 x float>* %41 to i8*
  %1447 = bitcast %"class.blink::FloatPoint"* %1440 to <2 x float>*
  %1448 = bitcast %"class.blink::(anonymous namespace)::PathBuilder"* %52 to i8*
  %1449 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %52, i64 0, i32 0
  %1450 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %52, i64 0, i32 1, i32 0, i32 0, i32 0
  %1451 = bitcast %"class.blink::protocol::ListValue"** %1450 to i8**
  %1452 = bitcast %"class.blink::Path"* %53 to i8*
  %1453 = bitcast <2 x float>* %44 to %"class.blink::FloatPoint"*
  %1454 = bitcast <2 x float>* %45 to %"class.blink::FloatPoint"*
  %1455 = bitcast <2 x float>* %46 to %"class.blink::FloatPoint"*
  %1456 = bitcast <2 x float>* %47 to %"class.blink::FloatPoint"*
  %1457 = bitcast <2 x float>* %44 to i8*
  %1458 = bitcast <2 x float>* %44 to i64*
  %1459 = bitcast <2 x float>* %45 to i8*
  %1460 = bitcast <2 x float>* %45 to i64*
  %1461 = bitcast <2 x float>* %46 to i8*
  %1462 = bitcast <2 x float>* %46 to i64*
  %1463 = bitcast <2 x float>* %47 to i8*
  %1464 = bitcast <2 x float>* %47 to i64*
  %1465 = bitcast %"class.blink::Path"* %48 to i8*
  %1466 = bitcast %"class.blink::AffineTransform"* %49 to i8*
  %1467 = fpext float %2 to double
  %1468 = bitcast %"class.blink::protocol::ListValue"** %1450 to %"class.blink::protocol::Value"**
  %1469 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %52, i64 0, i32 1
  %1470 = bitcast %"class.std::__1::unique_ptr.2401"* %1469 to i64*
  br label %1507

1471:                                             ; preds = %1636, %1626, %1633
  %1472 = load %"struct.WTF::KeyValuePair.552"*, %"struct.WTF::KeyValuePair.552"** %1337, align 8
  br label %1473

1473:                                             ; preds = %1401, %1471, %1404, %1388
  %1474 = phi %"struct.WTF::KeyValuePair.552"* [ %1472, %1471 ], [ %1391, %1404 ], [ %1391, %1388 ], [ %1391, %1401 ]
  %1475 = icmp eq %"struct.WTF::KeyValuePair.552"* %1474, null
  br i1 %1475, label %1638, label %1476, !prof !27

1476:                                             ; preds = %1473
  %1477 = load i32, i32* %1338, align 8
  %1478 = icmp eq i32 %1477, 0
  br i1 %1478, label %1505, label %1479

1479:                                             ; preds = %1476
  %1480 = zext i32 %1477 to i64
  br label %1481

1481:                                             ; preds = %1502, %1479
  %1482 = phi i64 [ 0, %1479 ], [ %1503, %1502 ]
  %1483 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %1474, i64 %1482
  %1484 = bitcast %"struct.WTF::KeyValuePair.552"* %1483 to i8**
  %1485 = load i8*, i8** %1484, align 8
  %1486 = bitcast i8* %1485 to %"class.WTF::StringImpl"*
  %1487 = ptrtoint i8* %1485 to i64
  switch i64 %1487, label %1488 [
    i64 -1, label %1502
    i64 0, label %1502
  ]

1488:                                             ; preds = %1481
  %1489 = getelementptr inbounds i8, i8* %1485, i64 8
  %1490 = bitcast i8* %1489 to i32*
  %1491 = load atomic i32, i32* %1490 monotonic, align 4
  %1492 = and i32 %1491, 2
  %1493 = icmp eq i32 %1492, 0
  %1494 = bitcast i8* %1485 to i32*
  %1495 = load i32, i32* %1494, align 4
  br i1 %1493, label %1496, label %1498

1496:                                             ; preds = %1488
  %1497 = add i32 %1495, -1
  store i32 %1497, i32* %1494, align 4
  br label %1498

1498:                                             ; preds = %1496, %1488
  %1499 = phi i32 [ %1497, %1496 ], [ %1495, %1488 ]
  %1500 = icmp eq i32 %1499, 0
  br i1 %1500, label %1501, label %1502

1501:                                             ; preds = %1498
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1486) #19
  br label %1502

1502:                                             ; preds = %1501, %1498, %1481, %1481
  %1503 = add nuw nsw i64 %1482, 1
  %1504 = icmp eq i64 %1503, %1480
  br i1 %1504, label %1505, label %1481

1505:                                             ; preds = %1502, %1476
  %1506 = bitcast %"struct.WTF::KeyValuePair.552"* %1474 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1506) #19
  store %"struct.WTF::KeyValuePair.552"* null, %"struct.WTF::KeyValuePair.552"** %1337, align 8
  br label %1638

1507:                                             ; preds = %1636, %1407
  %1508 = phi %"struct.WTF::KeyValuePair.552"* [ %1405, %1407 ], [ %1630, %1636 ]
  %1509 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %1508, i64 0, i32 0
  %1510 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %1508, i64 0, i32 1, i32 0, i32 0
  %1511 = load i32, i32* %1510, align 4
  %1512 = sext i32 %1511 to i64
  %1513 = call fastcc i32 @_ZN5blink12_GLOBAL__N_121GetPositionForTrackAtEPKNS_12LayoutObjectEmNS_24GridTrackSizingDirectionERKN3WTF6VectorINS_10LayoutUnitELj0ENS5_18PartitionAllocatorEEE(%"class.blink::LayoutObject"* %1304, i64 %1512, i32 0, %"class.WTF::Vector.3011"* nonnull dereferenceable(16) %128) #19
  %1514 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %1508, i64 0, i32 1, i32 0, i32 1
  %1515 = load i32, i32* %1514, align 4
  %1516 = sext i32 %1515 to i64
  %1517 = call fastcc i32 @_ZN5blink12_GLOBAL__N_121GetPositionForTrackAtEPKNS_12LayoutObjectEmNS_24GridTrackSizingDirectionERKN3WTF6VectorINS_10LayoutUnitELj0ENS5_18PartitionAllocatorEEE(%"class.blink::LayoutObject"* %1304, i64 %1516, i32 0, %"class.WTF::Vector.3011"* nonnull dereferenceable(16) %128) #19
  %1518 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %1508, i64 0, i32 1, i32 1, i32 0
  %1519 = load i32, i32* %1518, align 4
  %1520 = call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3011"* nonnull %127, i32 %1519) #19
  %1521 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1520, i64 0, i32 0
  %1522 = load i32, i32* %1521, align 4
  %1523 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %1508, i64 0, i32 1, i32 1, i32 1
  %1524 = load i32, i32* %1523, align 4
  %1525 = call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3011"* nonnull %127, i32 %1524) #19
  %1526 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1525, i64 0, i32 0
  %1527 = load i32, i32* %1526, align 4
  %1528 = load i32, i32* %1523, align 4
  %1529 = sext i32 %1528 to i64
  %1530 = load i32, i32* %204, align 4
  %1531 = add i32 %1530, -1
  %1532 = zext i32 %1531 to i64
  %1533 = icmp eq i64 %1529, %1532
  %1534 = select i1 %1533, i32 0, i32 %1331
  %1535 = load i32, i32* %1514, align 4
  %1536 = sext i32 %1535 to i64
  %1537 = load i32, i32* %212, align 4
  %1538 = add i32 %1537, -1
  %1539 = zext i32 %1538 to i64
  %1540 = icmp eq i64 %1536, %1539
  %1541 = select i1 %1540, i32 0, i32 %1335
  br i1 %1324, label %1553, label %1542

1542:                                             ; preds = %1507
  %1543 = sitofp i32 %1541 to float
  %1544 = fmul float %1543, -1.562500e-02
  %1545 = fmul float %1544, 6.400000e+01
  %1546 = fcmp ult float %1545, 0xC1E0000000000000
  %1547 = fcmp ugt float %1545, 0x41DFFFFFE0000000
  %1548 = fcmp ogt float %1545, 0xC1E0000000000000
  %1549 = select i1 %1548, float %1545, float 0xC1E0000000000000
  %1550 = fptosi float %1549 to i32
  %1551 = select i1 %1546, i32 0, i32 2147483647
  %1552 = select i1 %1547, i32 %1551, i32 %1550
  br label %1553

1553:                                             ; preds = %1542, %1507
  %1554 = phi i32 [ %1541, %1507 ], [ %1552, %1542 ]
  %1555 = icmp sgt i32 %1513, -1
  %1556 = select i1 %1555, i32 -2147483648, i32 2147483647
  %1557 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1517, i32 %1513) #19
  %1558 = extractvalue { i32, i1 } %1557, 1
  %1559 = extractvalue { i32, i1 } %1557, 0
  %1560 = select i1 %1558, i32 %1556, i32 %1559, !prof !2
  %1561 = icmp sgt i32 %1554, -1
  %1562 = select i1 %1561, i32 -2147483648, i32 2147483647
  %1563 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1560, i32 %1554) #19
  %1564 = extractvalue { i32, i1 } %1563, 1
  %1565 = extractvalue { i32, i1 } %1563, 0
  %1566 = select i1 %1564, i32 %1562, i32 %1565, !prof !2
  %1567 = icmp sgt i32 %1522, -1
  %1568 = select i1 %1567, i32 -2147483648, i32 2147483647
  %1569 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1527, i32 %1522) #19
  %1570 = extractvalue { i32, i1 } %1569, 1
  %1571 = extractvalue { i32, i1 } %1569, 0
  %1572 = select i1 %1570, i32 %1568, i32 %1571, !prof !2
  %1573 = icmp sgt i32 %1534, -1
  %1574 = select i1 %1573, i32 -2147483648, i32 2147483647
  %1575 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1572, i32 %1534) #19
  %1576 = extractvalue { i32, i1 } %1575, 1
  %1577 = extractvalue { i32, i1 } %1575, 0
  %1578 = select i1 %1576, i32 %1574, i32 %1577, !prof !2
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1408) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1408, i8 -1, i64 32, i1 false) #19
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1409) #19, !noalias !91
  %1579 = sitofp i32 %1513 to float
  %1580 = fmul float %1579, 1.562500e-02
  %1581 = sitofp i32 %1522 to float
  %1582 = fmul float %1581, 1.562500e-02
  %1583 = sitofp i32 %1566 to float
  %1584 = fmul float %1583, 1.562500e-02
  %1585 = sitofp i32 %1578 to float
  %1586 = fmul float %1585, 1.562500e-02
  %1587 = insertelement <2 x float> undef, float %1580, i32 0
  %1588 = insertelement <2 x float> %1587, float %1582, i32 1
  store <2 x float> %1588, <2 x float>* %1410, align 8, !noalias !91
  %1589 = fadd float %1580, %1584
  store float %1589, float* %1411, align 8, !noalias !91
  store float %1582, float* %1412, align 4, !noalias !91
  %1590 = fadd float %1582, %1586
  store float %1589, float* %1413, align 8, !noalias !91
  store float %1590, float* %1414, align 4, !noalias !91
  store float %1580, float* %1415, align 8, !noalias !91
  store float %1590, float* %1416, align 4, !noalias !91
  call void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* nonnull sret %51, %"class.blink::LayoutObject"* %1304, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %37, %"class.blink::LayoutBoxModelObject"* null, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1409) #19, !noalias !91
  %1591 = load i64, i64* %1418, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1419) #19
  store i64 %1591, i64* %1422, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1423) #19
  %1592 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %1317, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %1420) #19
  store <2 x float> %1592, <2 x float>* %36, align 8
  %1593 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %1317) #19
  %1594 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %1593) #19
  %1595 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %1594, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %1421) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1423) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1419) #19
  store <2 x float> %1595, <2 x float>* %1417, align 8
  %1596 = load i64, i64* %1426, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1427) #19
  store i64 %1596, i64* %1430, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1431) #19
  %1597 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %1317, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %1428) #19
  store <2 x float> %1597, <2 x float>* %39, align 8
  %1598 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %1317) #19
  %1599 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %1598) #19
  %1600 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %1599, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %1429) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1431) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1427) #19
  store <2 x float> %1600, <2 x float>* %1425, align 8
  %1601 = load i64, i64* %1433, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1434) #19
  store i64 %1601, i64* %1437, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1438) #19
  %1602 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %1317, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %1435) #19
  store <2 x float> %1602, <2 x float>* %43, align 8
  %1603 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %1317) #19
  %1604 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %1603) #19
  %1605 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %1604, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %1436) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1438) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1434) #19
  store <2 x float> %1605, <2 x float>* %1439, align 8
  %1606 = load i64, i64* %1441, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1442) #19
  store i64 %1606, i64* %1445, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1446) #19
  %1607 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %1317, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %1443) #19
  store <2 x float> %1607, <2 x float>* %41, align 8
  %1608 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %1317) #19
  %1609 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %1608) #19
  %1610 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %1609, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %1444) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1446) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1442) #19
  store <2 x float> %1610, <2 x float>* %1447, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1448) #19
  store i64 -6148914691236517206, i64* %1470, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_111PathBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1449, align 8
  %1611 = call i8* @_Znwm(i64 40) #18
  %1612 = bitcast i8* %1611 to %"class.blink::protocol::ListValue"*
  call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %1612) #19
  store i8* %1611, i8** %1451, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1452) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1452, i8 -86, i64 16, i1 false) #19, !alias.scope !96
  call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* nonnull %53) #19
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1457) #19, !noalias !96
  %1613 = load i64, i64* %1418, align 8, !noalias !96
  store i64 %1613, i64* %1458, align 8, !noalias !96
  call void @_ZN5blink4Path6MoveToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %53, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %1453) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1457) #19, !noalias !96
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1459) #19, !noalias !96
  %1614 = load i64, i64* %1426, align 8, !noalias !96
  store i64 %1614, i64* %1460, align 8, !noalias !96
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %53, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %1454) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1459) #19, !noalias !96
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1461) #19, !noalias !96
  %1615 = load i64, i64* %1433, align 8, !noalias !96
  store i64 %1615, i64* %1462, align 8, !noalias !96
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %53, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %1455) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1461) #19, !noalias !96
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1463) #19, !noalias !96
  %1616 = load i64, i64* %1441, align 8, !noalias !96
  store i64 %1616, i64* %1464, align 8, !noalias !96
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %53, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %1456) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1463) #19, !noalias !96
  call void @_ZN5blink4Path12CloseSubpathEv(%"class.blink::Path"* nonnull %53) #19
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1465) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1465, i8 -86, i64 16, i1 false) #19
  call void @_ZN5blink4PathC1ERKS0_(%"class.blink::Path"* nonnull %48, %"class.blink::Path"* nonnull dereferenceable(16) %53) #19
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %1466) #19
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %49) #19
  %1617 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEd(%"class.blink::AffineTransform"* nonnull %49, double %1467) #19
  call void @_ZN5blink4Path9TransformERKNS_15AffineTransformE(%"class.blink::Path"* nonnull %48, %"class.blink::AffineTransform"* dereferenceable(48) %1617) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1466) #19
  call void @_ZNK5blink4Path5ApplyEPvPFvS1_PKNS_11PathElementEE(%"class.blink::Path"* nonnull %48, i8* nonnull %1448, void (i8*, %"struct.blink::PathElement"*)* nonnull @_ZN5blink12_GLOBAL__N_111PathBuilder17AppendPathElementEPvPKNS_11PathElementE) #19
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %48) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1465) #19
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %53) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1452) #19
  %1618 = load %"class.blink::protocol::Value"*, %"class.blink::protocol::Value"** %1468, align 8
  store %"class.blink::protocol::ListValue"* null, %"class.blink::protocol::ListValue"** %1450, align 8
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %1326, %"class.WTF::String"* dereferenceable(8) %1509, %"class.blink::protocol::Value"* %1618) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_111PathBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1449, align 8
  %1619 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %1450, align 8
  store %"class.blink::protocol::ListValue"* null, %"class.blink::protocol::ListValue"** %1450, align 8
  %1620 = icmp eq %"class.blink::protocol::ListValue"* %1619, null
  br i1 %1620, label %1626, label %1621

1621:                                             ; preds = %1553
  %1622 = bitcast %"class.blink::protocol::ListValue"* %1619 to void (%"class.blink::protocol::ListValue"*)***
  %1623 = load void (%"class.blink::protocol::ListValue"*)**, void (%"class.blink::protocol::ListValue"*)*** %1622, align 8
  %1624 = getelementptr inbounds void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %1623, i64 2
  %1625 = load void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %1624, align 8
  call void %1625(%"class.blink::protocol::ListValue"* nonnull %1619) #19
  br label %1626

1626:                                             ; preds = %1621, %1553
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1448) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1408) #19
  %1627 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %1508, i64 1
  %1628 = icmp eq %"struct.WTF::KeyValuePair.552"* %1627, %1394
  br i1 %1628, label %1471, label %1629

1629:                                             ; preds = %1626, %1633
  %1630 = phi %"struct.WTF::KeyValuePair.552"* [ %1634, %1633 ], [ %1627, %1626 ]
  %1631 = bitcast %"struct.WTF::KeyValuePair.552"* %1630 to i64*
  %1632 = load i64, i64* %1631, align 8
  switch i64 %1632, label %1636 [
    i64 -1, label %1633
    i64 0, label %1633
  ]

1633:                                             ; preds = %1629, %1629
  %1634 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %1630, i64 1
  %1635 = icmp eq %"struct.WTF::KeyValuePair.552"* %1634, %1394
  br i1 %1635, label %1471, label %1629

1636:                                             ; preds = %1629
  %1637 = icmp eq %"struct.WTF::KeyValuePair.552"* %1630, %1394
  br i1 %1637, label %1471, label %1507

1638:                                             ; preds = %1505, %1473
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1336) #19
  %1639 = bitcast i8* %1325 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %201, %"class.WTF::String"* nonnull dereferenceable(8) %161, %"class.blink::protocol::Value"* nonnull %1639) #19
  %1640 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %161, i64 0, i32 0, i32 0
  %1641 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1640, align 8
  %1642 = icmp eq %"class.WTF::StringImpl"* %1641, null
  br i1 %1642, label %1656, label %1643

1643:                                             ; preds = %1638
  %1644 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1641, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1645 = load atomic i32, i32* %1644 monotonic, align 4
  %1646 = and i32 %1645, 2
  %1647 = icmp eq i32 %1646, 0
  %1648 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1641, i64 0, i32 0
  %1649 = load i32, i32* %1648, align 4
  br i1 %1647, label %1650, label %1652

1650:                                             ; preds = %1643
  %1651 = add i32 %1649, -1
  store i32 %1651, i32* %1648, align 4
  br label %1652

1652:                                             ; preds = %1650, %1643
  %1653 = phi i32 [ %1651, %1650 ], [ %1649, %1643 ]
  %1654 = icmp eq i32 %1653, 0
  br i1 %1654, label %1655, label %1656

1655:                                             ; preds = %1652
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1641) #19
  br label %1656

1656:                                             ; preds = %1638, %1652, %1655
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1290) #19
  br label %1657

1657:                                             ; preds = %1285, %1656
  %1658 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %1, i64 0, i32 16
  %1659 = load i8, i8* %1658, align 1, !range !26
  %1660 = icmp eq i8 %1659, 0
  br i1 %1660, label %1702, label %1661

1661:                                             ; preds = %1657
  %1662 = bitcast %"class.WTF::String"* %162 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1662) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %162, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.125, i64 0, i64 0), i64 18) #19
  %1663 = call fastcc %"class.blink::protocol::ListValue"* @_ZN5blink12_GLOBAL__N_118BuildGridLineNamesEPNS_4NodeENS_24GridTrackSizingDirectionEfRKN3WTF6VectorINS_10LayoutUnitELj0ENS4_18PartitionAllocatorEEESA_(%"class.blink::Node"* %0, i32 1, float %2, %"class.WTF::Vector.3011"* nonnull dereferenceable(16) %127, %"class.WTF::Vector.3011"* nonnull dereferenceable(16) %128)
  %1664 = bitcast %"class.blink::protocol::ListValue"* %1663 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %201, %"class.WTF::String"* nonnull dereferenceable(8) %162, %"class.blink::protocol::Value"* %1664) #19
  %1665 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %162, i64 0, i32 0, i32 0
  %1666 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1665, align 8
  %1667 = icmp eq %"class.WTF::StringImpl"* %1666, null
  br i1 %1667, label %1681, label %1668

1668:                                             ; preds = %1661
  %1669 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1666, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1670 = load atomic i32, i32* %1669 monotonic, align 4
  %1671 = and i32 %1670, 2
  %1672 = icmp eq i32 %1671, 0
  %1673 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1666, i64 0, i32 0
  %1674 = load i32, i32* %1673, align 4
  br i1 %1672, label %1675, label %1677

1675:                                             ; preds = %1668
  %1676 = add i32 %1674, -1
  store i32 %1676, i32* %1673, align 4
  br label %1677

1677:                                             ; preds = %1675, %1668
  %1678 = phi i32 [ %1676, %1675 ], [ %1674, %1668 ]
  %1679 = icmp eq i32 %1678, 0
  br i1 %1679, label %1680, label %1681

1680:                                             ; preds = %1677
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1666) #19
  br label %1681

1681:                                             ; preds = %1680, %1677, %1661
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1662) #19
  %1682 = bitcast %"class.WTF::String"* %163 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1682) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %163, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.126, i64 0, i64 0), i64 21) #19
  %1683 = call fastcc %"class.blink::protocol::ListValue"* @_ZN5blink12_GLOBAL__N_118BuildGridLineNamesEPNS_4NodeENS_24GridTrackSizingDirectionEfRKN3WTF6VectorINS_10LayoutUnitELj0ENS4_18PartitionAllocatorEEESA_(%"class.blink::Node"* %0, i32 0, float %2, %"class.WTF::Vector.3011"* nonnull dereferenceable(16) %128, %"class.WTF::Vector.3011"* nonnull dereferenceable(16) %127)
  %1684 = bitcast %"class.blink::protocol::ListValue"* %1683 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %201, %"class.WTF::String"* nonnull dereferenceable(8) %163, %"class.blink::protocol::Value"* %1684) #19
  %1685 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %163, i64 0, i32 0, i32 0
  %1686 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1685, align 8
  %1687 = icmp eq %"class.WTF::StringImpl"* %1686, null
  br i1 %1687, label %1701, label %1688

1688:                                             ; preds = %1681
  %1689 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1686, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1690 = load atomic i32, i32* %1689 monotonic, align 4
  %1691 = and i32 %1690, 2
  %1692 = icmp eq i32 %1691, 0
  %1693 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1686, i64 0, i32 0
  %1694 = load i32, i32* %1693, align 4
  br i1 %1692, label %1695, label %1697

1695:                                             ; preds = %1688
  %1696 = add i32 %1694, -1
  store i32 %1696, i32* %1693, align 4
  br label %1697

1697:                                             ; preds = %1695, %1688
  %1698 = phi i32 [ %1696, %1695 ], [ %1694, %1688 ]
  %1699 = icmp eq i32 %1698, 0
  br i1 %1699, label %1700, label %1701

1700:                                             ; preds = %1697
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1686) #19
  br label %1701

1701:                                             ; preds = %1681, %1697, %1700
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1682) #19
  br label %1702

1702:                                             ; preds = %1701, %1657
  %1703 = bitcast %"class.blink::(anonymous namespace)::PathBuilder"* %164 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1703) #19
  %1704 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %164, i64 0, i32 0
  %1705 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %164, i64 0, i32 1, i32 0, i32 0, i32 0
  %1706 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %164, i64 0, i32 1
  %1707 = bitcast %"class.std::__1::unique_ptr.2401"* %1706 to i64*
  store i64 -6148914691236517206, i64* %1707, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_111PathBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1704, align 8
  %1708 = call i8* @_Znwm(i64 40) #18
  %1709 = bitcast i8* %1708 to %"class.blink::protocol::ListValue"*
  call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %1709) #19
  %1710 = bitcast %"class.blink::protocol::ListValue"** %1705 to i8**
  store i8* %1708, i8** %1710, align 8
  %1711 = bitcast %"class.blink::FloatQuad"* %165 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1711) #19
  %1712 = bitcast %"class.blink::FloatQuad"* %34 to i8*
  %1713 = bitcast %"class.blink::FloatQuad"* %165 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1713, i8 -1, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1712) #19, !noalias !99
  %1714 = sitofp i32 %564 to float
  %1715 = fmul float %1714, 1.562500e-02
  %1716 = sitofp i32 %765 to float
  %1717 = fmul float %1716, 1.562500e-02
  %1718 = sitofp i32 %578 to float
  %1719 = fmul float %1718, 1.562500e-02
  %1720 = sitofp i32 %779 to float
  %1721 = fmul float %1720, 1.562500e-02
  %1722 = insertelement <2 x float> undef, float %1715, i32 0
  %1723 = insertelement <2 x float> %1722, float %1717, i32 1
  %1724 = bitcast %"class.blink::FloatQuad"* %34 to <2 x float>*
  store <2 x float> %1723, <2 x float>* %1724, align 8, !noalias !99
  %1725 = fadd float %1715, %1719
  %1726 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %34, i64 0, i32 1, i32 0
  store float %1725, float* %1726, align 8, !noalias !99
  %1727 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %34, i64 0, i32 1, i32 1
  store float %1717, float* %1727, align 4, !noalias !99
  %1728 = fadd float %1717, %1721
  %1729 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %34, i64 0, i32 2, i32 0
  store float %1725, float* %1729, align 8, !noalias !99
  %1730 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %34, i64 0, i32 2, i32 1
  store float %1728, float* %1730, align 4, !noalias !99
  %1731 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %34, i64 0, i32 3, i32 0
  store float %1715, float* %1731, align 8, !noalias !99
  %1732 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %34, i64 0, i32 3, i32 1
  store float %1728, float* %1732, align 4, !noalias !99
  call void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* nonnull sret %165, %"class.blink::LayoutObject"* %190, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %34, %"class.blink::LayoutBoxModelObject"* null, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1712) #19, !noalias !99
  %1733 = bitcast %"class.blink::FloatQuad"* %165 to <2 x float>*
  %1734 = bitcast %"class.blink::FloatQuad"* %165 to i64*
  %1735 = load i64, i64* %1734, align 8
  %1736 = bitcast <2 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1736)
  %1737 = bitcast <2 x float>* %6 to %"class.blink::FloatPoint"*
  %1738 = bitcast <2 x float>* %7 to %"class.blink::FloatPoint"*
  %1739 = bitcast <2 x float>* %6 to i64*
  store i64 %1735, i64* %1739, align 8
  %1740 = bitcast <2 x float>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1740) #19
  %1741 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %174, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %1737) #19
  store <2 x float> %1741, <2 x float>* %7, align 8
  %1742 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %174) #19
  %1743 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %1742) #19
  %1744 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %1743, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %1738) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1740) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1736)
  store <2 x float> %1744, <2 x float>* %1733, align 8
  %1745 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %165, i64 0, i32 1
  %1746 = bitcast %"class.blink::FloatPoint"* %1745 to <2 x float>*
  %1747 = bitcast %"class.blink::FloatPoint"* %1745 to i64*
  %1748 = load i64, i64* %1747, align 8
  %1749 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1749)
  %1750 = bitcast <2 x float>* %4 to %"class.blink::FloatPoint"*
  %1751 = bitcast <2 x float>* %5 to %"class.blink::FloatPoint"*
  %1752 = bitcast <2 x float>* %4 to i64*
  store i64 %1748, i64* %1752, align 8
  %1753 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1753) #19
  %1754 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %174, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %1750) #19
  store <2 x float> %1754, <2 x float>* %5, align 8
  %1755 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %174) #19
  %1756 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %1755) #19
  %1757 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %1756, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %1751) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1753) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1749)
  store <2 x float> %1757, <2 x float>* %1746, align 8
  %1758 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %165, i64 0, i32 2
  %1759 = bitcast %"class.blink::FloatPoint"* %1758 to i64*
  %1760 = load i64, i64* %1759, align 8
  %1761 = bitcast <2 x float>* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1761) #19
  %1762 = bitcast <2 x float>* %32 to %"class.blink::FloatPoint"*
  %1763 = bitcast <2 x float>* %33 to %"class.blink::FloatPoint"*
  %1764 = bitcast <2 x float>* %32 to i64*
  store i64 %1760, i64* %1764, align 8
  %1765 = bitcast <2 x float>* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1765) #19
  %1766 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %174, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %1762) #19
  store <2 x float> %1766, <2 x float>* %33, align 8
  %1767 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %174) #19
  %1768 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %1767) #19
  %1769 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %1768, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %1763) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1765) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1761) #19
  %1770 = bitcast %"class.blink::FloatPoint"* %1758 to <2 x float>*
  store <2 x float> %1769, <2 x float>* %1770, align 8
  %1771 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %165, i64 0, i32 3
  %1772 = bitcast %"class.blink::FloatPoint"* %1771 to i64*
  %1773 = load i64, i64* %1772, align 8
  %1774 = bitcast <2 x float>* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1774) #19
  %1775 = bitcast <2 x float>* %30 to %"class.blink::FloatPoint"*
  %1776 = bitcast <2 x float>* %31 to %"class.blink::FloatPoint"*
  %1777 = bitcast <2 x float>* %30 to i64*
  store i64 %1773, i64* %1777, align 8
  %1778 = bitcast <2 x float>* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1778) #19
  %1779 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %174, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %1775) #19
  store <2 x float> %1779, <2 x float>* %31, align 8
  %1780 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %174) #19
  %1781 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %1780) #19
  %1782 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %1781, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %1776) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1778) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1774) #19
  %1783 = bitcast %"class.blink::FloatPoint"* %1771 to <2 x float>*
  store <2 x float> %1782, <2 x float>* %1783, align 8
  %1784 = bitcast %"class.blink::Path"* %166 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1784) #19
  %1785 = bitcast <2 x float>* %26 to %"class.blink::FloatPoint"*
  %1786 = bitcast <2 x float>* %27 to %"class.blink::FloatPoint"*
  %1787 = bitcast <2 x float>* %28 to %"class.blink::FloatPoint"*
  %1788 = bitcast <2 x float>* %29 to %"class.blink::FloatPoint"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1784, i8 -86, i64 16, i1 false) #19, !alias.scope !104
  call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* nonnull %166) #19
  %1789 = bitcast <2 x float>* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1789) #19, !noalias !104
  %1790 = load i64, i64* %1734, align 8, !noalias !104
  %1791 = bitcast <2 x float>* %26 to i64*
  store i64 %1790, i64* %1791, align 8, !noalias !104
  call void @_ZN5blink4Path6MoveToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %166, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %1785) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1789) #19, !noalias !104
  %1792 = bitcast <2 x float>* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1792) #19, !noalias !104
  %1793 = load i64, i64* %1747, align 8, !noalias !104
  %1794 = bitcast <2 x float>* %27 to i64*
  store i64 %1793, i64* %1794, align 8, !noalias !104
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %166, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %1786) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1792) #19, !noalias !104
  %1795 = bitcast <2 x float>* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1795) #19, !noalias !104
  %1796 = load i64, i64* %1759, align 8, !noalias !104
  %1797 = bitcast <2 x float>* %28 to i64*
  store i64 %1796, i64* %1797, align 8, !noalias !104
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %166, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %1787) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1795) #19, !noalias !104
  %1798 = bitcast <2 x float>* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1798) #19, !noalias !104
  %1799 = load i64, i64* %1772, align 8, !noalias !104
  %1800 = bitcast <2 x float>* %29 to i64*
  store i64 %1799, i64* %1800, align 8, !noalias !104
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %166, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %1788) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1798) #19, !noalias !104
  call void @_ZN5blink4Path12CloseSubpathEv(%"class.blink::Path"* nonnull %166) #19
  %1801 = bitcast %"class.blink::Path"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1801) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1801, i8 -86, i64 16, i1 false) #19
  call void @_ZN5blink4PathC1ERKS0_(%"class.blink::Path"* nonnull %24, %"class.blink::Path"* nonnull dereferenceable(16) %166) #19
  %1802 = bitcast %"class.blink::AffineTransform"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %1802) #19
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %25) #19
  %1803 = fpext float %2 to double
  %1804 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEd(%"class.blink::AffineTransform"* nonnull %25, double %1803) #19
  call void @_ZN5blink4Path9TransformERKNS_15AffineTransformE(%"class.blink::Path"* nonnull %24, %"class.blink::AffineTransform"* dereferenceable(48) %1804) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1802) #19
  call void @_ZNK5blink4Path5ApplyEPvPFvS1_PKNS_11PathElementEE(%"class.blink::Path"* nonnull %24, i8* nonnull %1703, void (i8*, %"struct.blink::PathElement"*)* nonnull @_ZN5blink12_GLOBAL__N_111PathBuilder17AppendPathElementEPvPKNS_11PathElementE) #19
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %24) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1801) #19
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %166) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1784) #19
  %1805 = bitcast %"class.WTF::String"* %167 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1805) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %167, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.127, i64 0, i64 0), i64 10) #19
  %1806 = bitcast %"class.blink::protocol::ListValue"** %1705 to %"class.blink::protocol::Value"**
  %1807 = load %"class.blink::protocol::Value"*, %"class.blink::protocol::Value"** %1806, align 8
  store %"class.blink::protocol::ListValue"* null, %"class.blink::protocol::ListValue"** %1705, align 8
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %201, %"class.WTF::String"* nonnull dereferenceable(8) %167, %"class.blink::protocol::Value"* %1807) #19
  %1808 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %167, i64 0, i32 0, i32 0
  %1809 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1808, align 8
  %1810 = icmp eq %"class.WTF::StringImpl"* %1809, null
  br i1 %1810, label %1824, label %1811

1811:                                             ; preds = %1702
  %1812 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1809, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1813 = load atomic i32, i32* %1812 monotonic, align 4
  %1814 = and i32 %1813, 2
  %1815 = icmp eq i32 %1814, 0
  %1816 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1809, i64 0, i32 0
  %1817 = load i32, i32* %1816, align 4
  br i1 %1815, label %1818, label %1820

1818:                                             ; preds = %1811
  %1819 = add i32 %1817, -1
  store i32 %1819, i32* %1816, align 4
  br label %1820

1820:                                             ; preds = %1818, %1811
  %1821 = phi i32 [ %1819, %1818 ], [ %1817, %1811 ]
  %1822 = icmp eq i32 %1821, 0
  br i1 %1822, label %1823, label %1824

1823:                                             ; preds = %1820
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1809) #19
  br label %1824

1824:                                             ; preds = %1702, %1820, %1823
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1805) #19
  %1825 = bitcast %"class.WTF::String"* %168 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1825) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %168, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.128, i64 0, i64 0), i64 19) #19
  %1826 = call i8* @_Znwm(i64 80) #18
  %1827 = bitcast i8* %1826 to %"class.blink::protocol::DictionaryValue"*
  call void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"* nonnull %1827) #19
  %1828 = bitcast %"class.WTF::String"* %98 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1828) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %98, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.139, i64 0, i64 0), i64 14) #19
  %1829 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %1, i64 0, i32 10
  %1830 = load i8, i8* %1829, align 1, !range !26
  %1831 = icmp ne i8 %1830, 0
  call void @_ZN5blink8protocol15DictionaryValue10setBooleanERKN3WTF6StringEb(%"class.blink::protocol::DictionaryValue"* nonnull %1827, %"class.WTF::String"* nonnull dereferenceable(8) %98, i1 zeroext %1831) #19
  %1832 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %98, i64 0, i32 0, i32 0
  %1833 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1832, align 8
  %1834 = icmp eq %"class.WTF::StringImpl"* %1833, null
  br i1 %1834, label %1848, label %1835

1835:                                             ; preds = %1824
  %1836 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1833, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1837 = load atomic i32, i32* %1836 monotonic, align 4
  %1838 = and i32 %1837, 2
  %1839 = icmp eq i32 %1838, 0
  %1840 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1833, i64 0, i32 0
  %1841 = load i32, i32* %1840, align 4
  br i1 %1839, label %1842, label %1844

1842:                                             ; preds = %1835
  %1843 = add i32 %1841, -1
  store i32 %1843, i32* %1840, align 4
  br label %1844

1844:                                             ; preds = %1842, %1835
  %1845 = phi i32 [ %1843, %1842 ], [ %1841, %1835 ]
  %1846 = icmp eq i32 %1845, 0
  br i1 %1846, label %1847, label %1848

1847:                                             ; preds = %1844
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1833) #19
  br label %1848

1848:                                             ; preds = %1847, %1844, %1824
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1828) #19
  %1849 = bitcast %"class.WTF::String"* %99 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1849) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %99, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.140, i64 0, i64 0), i64 11) #19
  %1850 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %1, i64 0, i32 11
  %1851 = load i8, i8* %1850, align 2, !range !26
  %1852 = icmp ne i8 %1851, 0
  call void @_ZN5blink8protocol15DictionaryValue10setBooleanERKN3WTF6StringEb(%"class.blink::protocol::DictionaryValue"* nonnull %1827, %"class.WTF::String"* nonnull dereferenceable(8) %99, i1 zeroext %1852) #19
  %1853 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %99, i64 0, i32 0, i32 0
  %1854 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1853, align 8
  %1855 = icmp eq %"class.WTF::StringImpl"* %1854, null
  br i1 %1855, label %1869, label %1856

1856:                                             ; preds = %1848
  %1857 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1854, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1858 = load atomic i32, i32* %1857 monotonic, align 4
  %1859 = and i32 %1858, 2
  %1860 = icmp eq i32 %1859, 0
  %1861 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1854, i64 0, i32 0
  %1862 = load i32, i32* %1861, align 4
  br i1 %1860, label %1863, label %1865

1863:                                             ; preds = %1856
  %1864 = add i32 %1862, -1
  store i32 %1864, i32* %1861, align 4
  br label %1865

1865:                                             ; preds = %1863, %1856
  %1866 = phi i32 [ %1864, %1863 ], [ %1862, %1856 ]
  %1867 = icmp eq i32 %1866, 0
  br i1 %1867, label %1868, label %1869

1868:                                             ; preds = %1865
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1854) #19
  br label %1869

1869:                                             ; preds = %1868, %1865, %1848
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1849) #19
  %1870 = bitcast %"class.WTF::String"* %100 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1870) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %100, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.141, i64 0, i64 0), i64 14) #19
  %1871 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %1, i64 0, i32 12
  %1872 = load i8, i8* %1871, align 1, !range !26
  %1873 = icmp ne i8 %1872, 0
  call void @_ZN5blink8protocol15DictionaryValue10setBooleanERKN3WTF6StringEb(%"class.blink::protocol::DictionaryValue"* nonnull %1827, %"class.WTF::String"* nonnull dereferenceable(8) %100, i1 zeroext %1873) #19
  %1874 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 0, i32 0, i32 0
  %1875 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1874, align 8
  %1876 = icmp eq %"class.WTF::StringImpl"* %1875, null
  br i1 %1876, label %1890, label %1877

1877:                                             ; preds = %1869
  %1878 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1875, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1879 = load atomic i32, i32* %1878 monotonic, align 4
  %1880 = and i32 %1879, 2
  %1881 = icmp eq i32 %1880, 0
  %1882 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1875, i64 0, i32 0
  %1883 = load i32, i32* %1882, align 4
  br i1 %1881, label %1884, label %1886

1884:                                             ; preds = %1877
  %1885 = add i32 %1883, -1
  store i32 %1885, i32* %1882, align 4
  br label %1886

1886:                                             ; preds = %1884, %1877
  %1887 = phi i32 [ %1885, %1884 ], [ %1883, %1877 ]
  %1888 = icmp eq i32 %1887, 0
  br i1 %1888, label %1889, label %1890

1889:                                             ; preds = %1886
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1875) #19
  br label %1890

1890:                                             ; preds = %1889, %1886, %1869
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1870) #19
  %1891 = bitcast %"class.WTF::String"* %101 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1891) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %101, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.142, i64 0, i64 0), i64 22) #19
  %1892 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %1, i64 0, i32 9
  %1893 = load i8, i8* %1892, align 4, !range !26
  %1894 = icmp ne i8 %1893, 0
  call void @_ZN5blink8protocol15DictionaryValue10setBooleanERKN3WTF6StringEb(%"class.blink::protocol::DictionaryValue"* nonnull %1827, %"class.WTF::String"* nonnull dereferenceable(8) %101, i1 zeroext %1894) #19
  %1895 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %1896 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1895, align 8
  %1897 = icmp eq %"class.WTF::StringImpl"* %1896, null
  br i1 %1897, label %1911, label %1898

1898:                                             ; preds = %1890
  %1899 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1896, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1900 = load atomic i32, i32* %1899 monotonic, align 4
  %1901 = and i32 %1900, 2
  %1902 = icmp eq i32 %1901, 0
  %1903 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1896, i64 0, i32 0
  %1904 = load i32, i32* %1903, align 4
  br i1 %1902, label %1905, label %1907

1905:                                             ; preds = %1898
  %1906 = add i32 %1904, -1
  store i32 %1906, i32* %1903, align 4
  br label %1907

1907:                                             ; preds = %1905, %1898
  %1908 = phi i32 [ %1906, %1905 ], [ %1904, %1898 ]
  %1909 = icmp eq i32 %1908, 0
  br i1 %1909, label %1910, label %1911

1910:                                             ; preds = %1907
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1896) #19
  br label %1911

1911:                                             ; preds = %1910, %1907, %1890
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1891) #19
  %1912 = bitcast %"class.WTF::String"* %102 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1912) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %102, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.143, i64 0, i64 0), i64 23) #19
  %1913 = load i8, i8* %1069, align 4, !range !26
  %1914 = icmp ne i8 %1913, 0
  call void @_ZN5blink8protocol15DictionaryValue10setBooleanERKN3WTF6StringEb(%"class.blink::protocol::DictionaryValue"* nonnull %1827, %"class.WTF::String"* nonnull dereferenceable(8) %102, i1 zeroext %1914) #19
  %1915 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %102, i64 0, i32 0, i32 0
  %1916 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1915, align 8
  %1917 = icmp eq %"class.WTF::StringImpl"* %1916, null
  br i1 %1917, label %1931, label %1918

1918:                                             ; preds = %1911
  %1919 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1916, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1920 = load atomic i32, i32* %1919 monotonic, align 4
  %1921 = and i32 %1920, 2
  %1922 = icmp eq i32 %1921, 0
  %1923 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1916, i64 0, i32 0
  %1924 = load i32, i32* %1923, align 4
  br i1 %1922, label %1925, label %1927

1925:                                             ; preds = %1918
  %1926 = add i32 %1924, -1
  store i32 %1926, i32* %1923, align 4
  br label %1927

1927:                                             ; preds = %1925, %1918
  %1928 = phi i32 [ %1926, %1925 ], [ %1924, %1918 ]
  %1929 = icmp eq i32 %1928, 0
  br i1 %1929, label %1930, label %1931

1930:                                             ; preds = %1927
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1916) #19
  br label %1931

1931:                                             ; preds = %1930, %1927, %1911
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1912) #19
  %1932 = bitcast %"class.WTF::String"* %103 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1932) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %103, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.144, i64 0, i64 0), i64 23) #19
  %1933 = load i8, i8* %1241, align 1, !range !26
  %1934 = icmp ne i8 %1933, 0
  call void @_ZN5blink8protocol15DictionaryValue10setBooleanERKN3WTF6StringEb(%"class.blink::protocol::DictionaryValue"* nonnull %1827, %"class.WTF::String"* nonnull dereferenceable(8) %103, i1 zeroext %1934) #19
  %1935 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %103, i64 0, i32 0, i32 0
  %1936 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1935, align 8
  %1937 = icmp eq %"class.WTF::StringImpl"* %1936, null
  br i1 %1937, label %1951, label %1938

1938:                                             ; preds = %1931
  %1939 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1936, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1940 = load atomic i32, i32* %1939 monotonic, align 4
  %1941 = and i32 %1940, 2
  %1942 = icmp eq i32 %1941, 0
  %1943 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1936, i64 0, i32 0
  %1944 = load i32, i32* %1943, align 4
  br i1 %1942, label %1945, label %1947

1945:                                             ; preds = %1938
  %1946 = add i32 %1944, -1
  store i32 %1946, i32* %1943, align 4
  br label %1947

1947:                                             ; preds = %1945, %1938
  %1948 = phi i32 [ %1946, %1945 ], [ %1944, %1938 ]
  %1949 = icmp eq i32 %1948, 0
  br i1 %1949, label %1950, label %1951

1950:                                             ; preds = %1947
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1936) #19
  br label %1951

1951:                                             ; preds = %1950, %1947, %1931
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1932) #19
  %1952 = bitcast %"class.WTF::String"* %104 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1952) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %104, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.145, i64 0, i64 0), i64 13) #19
  %1953 = load i8, i8* %1286, align 2, !range !26
  %1954 = icmp ne i8 %1953, 0
  call void @_ZN5blink8protocol15DictionaryValue10setBooleanERKN3WTF6StringEb(%"class.blink::protocol::DictionaryValue"* nonnull %1827, %"class.WTF::String"* nonnull dereferenceable(8) %104, i1 zeroext %1954) #19
  %1955 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 0, i32 0, i32 0
  %1956 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1955, align 8
  %1957 = icmp eq %"class.WTF::StringImpl"* %1956, null
  br i1 %1957, label %1971, label %1958

1958:                                             ; preds = %1951
  %1959 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1956, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1960 = load atomic i32, i32* %1959 monotonic, align 4
  %1961 = and i32 %1960, 2
  %1962 = icmp eq i32 %1961, 0
  %1963 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1956, i64 0, i32 0
  %1964 = load i32, i32* %1963, align 4
  br i1 %1962, label %1965, label %1967

1965:                                             ; preds = %1958
  %1966 = add i32 %1964, -1
  store i32 %1966, i32* %1963, align 4
  br label %1967

1967:                                             ; preds = %1965, %1958
  %1968 = phi i32 [ %1966, %1965 ], [ %1964, %1958 ]
  %1969 = icmp eq i32 %1968, 0
  br i1 %1969, label %1970, label %1971

1970:                                             ; preds = %1967
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1956) #19
  br label %1971

1971:                                             ; preds = %1970, %1967, %1951
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1952) #19
  %1972 = bitcast %"class.WTF::String"* %105 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1972) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %105, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.146, i64 0, i64 0), i64 13) #19
  %1973 = load i8, i8* %1658, align 1, !range !26
  %1974 = icmp ne i8 %1973, 0
  call void @_ZN5blink8protocol15DictionaryValue10setBooleanERKN3WTF6StringEb(%"class.blink::protocol::DictionaryValue"* nonnull %1827, %"class.WTF::String"* nonnull dereferenceable(8) %105, i1 zeroext %1974) #19
  %1975 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %105, i64 0, i32 0, i32 0
  %1976 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1975, align 8
  %1977 = icmp eq %"class.WTF::StringImpl"* %1976, null
  br i1 %1977, label %1991, label %1978

1978:                                             ; preds = %1971
  %1979 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1976, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1980 = load atomic i32, i32* %1979 monotonic, align 4
  %1981 = and i32 %1980, 2
  %1982 = icmp eq i32 %1981, 0
  %1983 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1976, i64 0, i32 0
  %1984 = load i32, i32* %1983, align 4
  br i1 %1982, label %1985, label %1987

1985:                                             ; preds = %1978
  %1986 = add i32 %1984, -1
  store i32 %1986, i32* %1983, align 4
  br label %1987

1987:                                             ; preds = %1985, %1978
  %1988 = phi i32 [ %1986, %1985 ], [ %1984, %1978 ]
  %1989 = icmp eq i32 %1988, 0
  br i1 %1989, label %1990, label %1991

1990:                                             ; preds = %1987
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1976) #19
  br label %1991

1991:                                             ; preds = %1990, %1987, %1971
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1972) #19
  %1992 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %1, i64 0, i32 0, i32 0
  %1993 = load i32, i32* %1992, align 4
  %1994 = icmp eq i32 %1993, 0
  br i1 %1994, label %2034, label %1995

1995:                                             ; preds = %1991
  %1996 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %1, i64 0, i32 0
  %1997 = bitcast %"class.WTF::String"* %106 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1997) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %106, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.148, i64 0, i64 0), i64 15) #19
  %1998 = bitcast %"class.WTF::String"* %107 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1998) #19
  %1999 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color10SerializedEv(%"class.blink::Color"* %1996) #19
  %2000 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %107, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1999, %"class.WTF::StringImpl"** %2000, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %1827, %"class.WTF::String"* nonnull dereferenceable(8) %106, %"class.WTF::String"* nonnull dereferenceable(8) %107) #19
  %2001 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2000, align 8
  %2002 = icmp eq %"class.WTF::StringImpl"* %2001, null
  br i1 %2002, label %2016, label %2003

2003:                                             ; preds = %1995
  %2004 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2001, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2005 = load atomic i32, i32* %2004 monotonic, align 4
  %2006 = and i32 %2005, 2
  %2007 = icmp eq i32 %2006, 0
  %2008 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2001, i64 0, i32 0
  %2009 = load i32, i32* %2008, align 4
  br i1 %2007, label %2010, label %2012

2010:                                             ; preds = %2003
  %2011 = add i32 %2009, -1
  store i32 %2011, i32* %2008, align 4
  br label %2012

2012:                                             ; preds = %2010, %2003
  %2013 = phi i32 [ %2011, %2010 ], [ %2009, %2003 ]
  %2014 = icmp eq i32 %2013, 0
  br i1 %2014, label %2015, label %2016

2015:                                             ; preds = %2012
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2001) #19
  br label %2016

2016:                                             ; preds = %2015, %2012, %1995
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1998) #19
  %2017 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 0, i32 0, i32 0
  %2018 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2017, align 8
  %2019 = icmp eq %"class.WTF::StringImpl"* %2018, null
  br i1 %2019, label %2033, label %2020

2020:                                             ; preds = %2016
  %2021 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2018, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2022 = load atomic i32, i32* %2021 monotonic, align 4
  %2023 = and i32 %2022, 2
  %2024 = icmp eq i32 %2023, 0
  %2025 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2018, i64 0, i32 0
  %2026 = load i32, i32* %2025, align 4
  br i1 %2024, label %2027, label %2029

2027:                                             ; preds = %2020
  %2028 = add i32 %2026, -1
  store i32 %2028, i32* %2025, align 4
  br label %2029

2029:                                             ; preds = %2027, %2020
  %2030 = phi i32 [ %2028, %2027 ], [ %2026, %2020 ]
  %2031 = icmp eq i32 %2030, 0
  br i1 %2031, label %2032, label %2033

2032:                                             ; preds = %2029
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2018) #19
  br label %2033

2033:                                             ; preds = %2032, %2029, %2016
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1997) #19
  br label %2034

2034:                                             ; preds = %2033, %1991
  %2035 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %1, i64 0, i32 1
  %2036 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %2035, i64 0, i32 0
  %2037 = load i32, i32* %2036, align 4
  %2038 = icmp eq i32 %2037, 0
  br i1 %2038, label %2077, label %2039

2039:                                             ; preds = %2034
  %2040 = bitcast %"class.WTF::String"* %108 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2040) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %108, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.150, i64 0, i64 0), i64 12) #19
  %2041 = bitcast %"class.WTF::String"* %109 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2041) #19
  %2042 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color10SerializedEv(%"class.blink::Color"* %2035) #19
  %2043 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %109, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2042, %"class.WTF::StringImpl"** %2043, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %1827, %"class.WTF::String"* nonnull dereferenceable(8) %108, %"class.WTF::String"* nonnull dereferenceable(8) %109) #19
  %2044 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2043, align 8
  %2045 = icmp eq %"class.WTF::StringImpl"* %2044, null
  br i1 %2045, label %2059, label %2046

2046:                                             ; preds = %2039
  %2047 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2044, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2048 = load atomic i32, i32* %2047 monotonic, align 4
  %2049 = and i32 %2048, 2
  %2050 = icmp eq i32 %2049, 0
  %2051 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2044, i64 0, i32 0
  %2052 = load i32, i32* %2051, align 4
  br i1 %2050, label %2053, label %2055

2053:                                             ; preds = %2046
  %2054 = add i32 %2052, -1
  store i32 %2054, i32* %2051, align 4
  br label %2055

2055:                                             ; preds = %2053, %2046
  %2056 = phi i32 [ %2054, %2053 ], [ %2052, %2046 ]
  %2057 = icmp eq i32 %2056, 0
  br i1 %2057, label %2058, label %2059

2058:                                             ; preds = %2055
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2044) #19
  br label %2059

2059:                                             ; preds = %2058, %2055, %2039
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2041) #19
  %2060 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %108, i64 0, i32 0, i32 0
  %2061 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2060, align 8
  %2062 = icmp eq %"class.WTF::StringImpl"* %2061, null
  br i1 %2062, label %2076, label %2063

2063:                                             ; preds = %2059
  %2064 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2061, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2065 = load atomic i32, i32* %2064 monotonic, align 4
  %2066 = and i32 %2065, 2
  %2067 = icmp eq i32 %2066, 0
  %2068 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2061, i64 0, i32 0
  %2069 = load i32, i32* %2068, align 4
  br i1 %2067, label %2070, label %2072

2070:                                             ; preds = %2063
  %2071 = add i32 %2069, -1
  store i32 %2071, i32* %2068, align 4
  br label %2072

2072:                                             ; preds = %2070, %2063
  %2073 = phi i32 [ %2071, %2070 ], [ %2069, %2063 ]
  %2074 = icmp eq i32 %2073, 0
  br i1 %2074, label %2075, label %2076

2075:                                             ; preds = %2072
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2061) #19
  br label %2076

2076:                                             ; preds = %2075, %2072, %2059
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2040) #19
  br label %2077

2077:                                             ; preds = %2076, %2034
  %2078 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %1, i64 0, i32 2
  %2079 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %2078, i64 0, i32 0
  %2080 = load i32, i32* %2079, align 4
  %2081 = icmp eq i32 %2080, 0
  br i1 %2081, label %2120, label %2082

2082:                                             ; preds = %2077
  %2083 = bitcast %"class.WTF::String"* %110 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2083) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %110, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.152, i64 0, i64 0), i64 15) #19
  %2084 = bitcast %"class.WTF::String"* %111 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2084) #19
  %2085 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color10SerializedEv(%"class.blink::Color"* %2078) #19
  %2086 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %111, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2085, %"class.WTF::StringImpl"** %2086, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %1827, %"class.WTF::String"* nonnull dereferenceable(8) %110, %"class.WTF::String"* nonnull dereferenceable(8) %111) #19
  %2087 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2086, align 8
  %2088 = icmp eq %"class.WTF::StringImpl"* %2087, null
  br i1 %2088, label %2102, label %2089

2089:                                             ; preds = %2082
  %2090 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2087, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2091 = load atomic i32, i32* %2090 monotonic, align 4
  %2092 = and i32 %2091, 2
  %2093 = icmp eq i32 %2092, 0
  %2094 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2087, i64 0, i32 0
  %2095 = load i32, i32* %2094, align 4
  br i1 %2093, label %2096, label %2098

2096:                                             ; preds = %2089
  %2097 = add i32 %2095, -1
  store i32 %2097, i32* %2094, align 4
  br label %2098

2098:                                             ; preds = %2096, %2089
  %2099 = phi i32 [ %2097, %2096 ], [ %2095, %2089 ]
  %2100 = icmp eq i32 %2099, 0
  br i1 %2100, label %2101, label %2102

2101:                                             ; preds = %2098
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2087) #19
  br label %2102

2102:                                             ; preds = %2101, %2098, %2082
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2084) #19
  %2103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %110, i64 0, i32 0, i32 0
  %2104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2103, align 8
  %2105 = icmp eq %"class.WTF::StringImpl"* %2104, null
  br i1 %2105, label %2119, label %2106

2106:                                             ; preds = %2102
  %2107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2108 = load atomic i32, i32* %2107 monotonic, align 4
  %2109 = and i32 %2108, 2
  %2110 = icmp eq i32 %2109, 0
  %2111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2104, i64 0, i32 0
  %2112 = load i32, i32* %2111, align 4
  br i1 %2110, label %2113, label %2115

2113:                                             ; preds = %2106
  %2114 = add i32 %2112, -1
  store i32 %2114, i32* %2111, align 4
  br label %2115

2115:                                             ; preds = %2113, %2106
  %2116 = phi i32 [ %2114, %2113 ], [ %2112, %2106 ]
  %2117 = icmp eq i32 %2116, 0
  br i1 %2117, label %2118, label %2119

2118:                                             ; preds = %2115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2104) #19
  br label %2119

2119:                                             ; preds = %2118, %2115, %2102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2083) #19
  br label %2120

2120:                                             ; preds = %2119, %2077
  %2121 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %1, i64 0, i32 3
  %2122 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %2121, i64 0, i32 0
  %2123 = load i32, i32* %2122, align 4
  %2124 = icmp eq i32 %2123, 0
  br i1 %2124, label %2163, label %2125

2125:                                             ; preds = %2120
  %2126 = bitcast %"class.WTF::String"* %112 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2126) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %112, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.154, i64 0, i64 0), i64 11) #19
  %2127 = bitcast %"class.WTF::String"* %113 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2127) #19
  %2128 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color10SerializedEv(%"class.blink::Color"* %2121) #19
  %2129 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %113, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2128, %"class.WTF::StringImpl"** %2129, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %1827, %"class.WTF::String"* nonnull dereferenceable(8) %112, %"class.WTF::String"* nonnull dereferenceable(8) %113) #19
  %2130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2129, align 8
  %2131 = icmp eq %"class.WTF::StringImpl"* %2130, null
  br i1 %2131, label %2145, label %2132

2132:                                             ; preds = %2125
  %2133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2134 = load atomic i32, i32* %2133 monotonic, align 4
  %2135 = and i32 %2134, 2
  %2136 = icmp eq i32 %2135, 0
  %2137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2130, i64 0, i32 0
  %2138 = load i32, i32* %2137, align 4
  br i1 %2136, label %2139, label %2141

2139:                                             ; preds = %2132
  %2140 = add i32 %2138, -1
  store i32 %2140, i32* %2137, align 4
  br label %2141

2141:                                             ; preds = %2139, %2132
  %2142 = phi i32 [ %2140, %2139 ], [ %2138, %2132 ]
  %2143 = icmp eq i32 %2142, 0
  br i1 %2143, label %2144, label %2145

2144:                                             ; preds = %2141
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2130) #19
  br label %2145

2145:                                             ; preds = %2144, %2141, %2125
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2127) #19
  %2146 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %112, i64 0, i32 0, i32 0
  %2147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2146, align 8
  %2148 = icmp eq %"class.WTF::StringImpl"* %2147, null
  br i1 %2148, label %2162, label %2149

2149:                                             ; preds = %2145
  %2150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2151 = load atomic i32, i32* %2150 monotonic, align 4
  %2152 = and i32 %2151, 2
  %2153 = icmp eq i32 %2152, 0
  %2154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2147, i64 0, i32 0
  %2155 = load i32, i32* %2154, align 4
  br i1 %2153, label %2156, label %2158

2156:                                             ; preds = %2149
  %2157 = add i32 %2155, -1
  store i32 %2157, i32* %2154, align 4
  br label %2158

2158:                                             ; preds = %2156, %2149
  %2159 = phi i32 [ %2157, %2156 ], [ %2155, %2149 ]
  %2160 = icmp eq i32 %2159, 0
  br i1 %2160, label %2161, label %2162

2161:                                             ; preds = %2158
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2147) #19
  br label %2162

2162:                                             ; preds = %2161, %2158, %2145
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2126) #19
  br label %2163

2163:                                             ; preds = %2162, %2120
  %2164 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %1, i64 0, i32 4
  %2165 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %2164, i64 0, i32 0
  %2166 = load i32, i32* %2165, align 4
  %2167 = icmp eq i32 %2166, 0
  br i1 %2167, label %2206, label %2168

2168:                                             ; preds = %2163
  %2169 = bitcast %"class.WTF::String"* %114 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2169) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %114, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.156, i64 0, i64 0), i64 14) #19
  %2170 = bitcast %"class.WTF::String"* %115 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2170) #19
  %2171 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color10SerializedEv(%"class.blink::Color"* %2164) #19
  %2172 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %115, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2171, %"class.WTF::StringImpl"** %2172, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %1827, %"class.WTF::String"* nonnull dereferenceable(8) %114, %"class.WTF::String"* nonnull dereferenceable(8) %115) #19
  %2173 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2172, align 8
  %2174 = icmp eq %"class.WTF::StringImpl"* %2173, null
  br i1 %2174, label %2188, label %2175

2175:                                             ; preds = %2168
  %2176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2173, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2177 = load atomic i32, i32* %2176 monotonic, align 4
  %2178 = and i32 %2177, 2
  %2179 = icmp eq i32 %2178, 0
  %2180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2173, i64 0, i32 0
  %2181 = load i32, i32* %2180, align 4
  br i1 %2179, label %2182, label %2184

2182:                                             ; preds = %2175
  %2183 = add i32 %2181, -1
  store i32 %2183, i32* %2180, align 4
  br label %2184

2184:                                             ; preds = %2182, %2175
  %2185 = phi i32 [ %2183, %2182 ], [ %2181, %2175 ]
  %2186 = icmp eq i32 %2185, 0
  br i1 %2186, label %2187, label %2188

2187:                                             ; preds = %2184
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2173) #19
  br label %2188

2188:                                             ; preds = %2187, %2184, %2168
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2170) #19
  %2189 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %114, i64 0, i32 0, i32 0
  %2190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2189, align 8
  %2191 = icmp eq %"class.WTF::StringImpl"* %2190, null
  br i1 %2191, label %2205, label %2192

2192:                                             ; preds = %2188
  %2193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2190, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2194 = load atomic i32, i32* %2193 monotonic, align 4
  %2195 = and i32 %2194, 2
  %2196 = icmp eq i32 %2195, 0
  %2197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2190, i64 0, i32 0
  %2198 = load i32, i32* %2197, align 4
  br i1 %2196, label %2199, label %2201

2199:                                             ; preds = %2192
  %2200 = add i32 %2198, -1
  store i32 %2200, i32* %2197, align 4
  br label %2201

2201:                                             ; preds = %2199, %2192
  %2202 = phi i32 [ %2200, %2199 ], [ %2198, %2192 ]
  %2203 = icmp eq i32 %2202, 0
  br i1 %2203, label %2204, label %2205

2204:                                             ; preds = %2201
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2190) #19
  br label %2205

2205:                                             ; preds = %2204, %2201, %2188
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2169) #19
  br label %2206

2206:                                             ; preds = %2205, %2163
  %2207 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %1, i64 0, i32 5
  %2208 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %2207, i64 0, i32 0
  %2209 = load i32, i32* %2208, align 4
  %2210 = icmp eq i32 %2209, 0
  br i1 %2210, label %2249, label %2211

2211:                                             ; preds = %2206
  %2212 = bitcast %"class.WTF::String"* %116 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2212) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %116, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.158, i64 0, i64 0), i64 13) #19
  %2213 = bitcast %"class.WTF::String"* %117 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2213) #19
  %2214 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color10SerializedEv(%"class.blink::Color"* %2207) #19
  %2215 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %117, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2214, %"class.WTF::StringImpl"** %2215, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %1827, %"class.WTF::String"* nonnull dereferenceable(8) %116, %"class.WTF::String"* nonnull dereferenceable(8) %117) #19
  %2216 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2215, align 8
  %2217 = icmp eq %"class.WTF::StringImpl"* %2216, null
  br i1 %2217, label %2231, label %2218

2218:                                             ; preds = %2211
  %2219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2216, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2220 = load atomic i32, i32* %2219 monotonic, align 4
  %2221 = and i32 %2220, 2
  %2222 = icmp eq i32 %2221, 0
  %2223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2216, i64 0, i32 0
  %2224 = load i32, i32* %2223, align 4
  br i1 %2222, label %2225, label %2227

2225:                                             ; preds = %2218
  %2226 = add i32 %2224, -1
  store i32 %2226, i32* %2223, align 4
  br label %2227

2227:                                             ; preds = %2225, %2218
  %2228 = phi i32 [ %2226, %2225 ], [ %2224, %2218 ]
  %2229 = icmp eq i32 %2228, 0
  br i1 %2229, label %2230, label %2231

2230:                                             ; preds = %2227
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2216) #19
  br label %2231

2231:                                             ; preds = %2230, %2227, %2211
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2213) #19
  %2232 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %116, i64 0, i32 0, i32 0
  %2233 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2232, align 8
  %2234 = icmp eq %"class.WTF::StringImpl"* %2233, null
  br i1 %2234, label %2248, label %2235

2235:                                             ; preds = %2231
  %2236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2233, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2237 = load atomic i32, i32* %2236 monotonic, align 4
  %2238 = and i32 %2237, 2
  %2239 = icmp eq i32 %2238, 0
  %2240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2233, i64 0, i32 0
  %2241 = load i32, i32* %2240, align 4
  br i1 %2239, label %2242, label %2244

2242:                                             ; preds = %2235
  %2243 = add i32 %2241, -1
  store i32 %2243, i32* %2240, align 4
  br label %2244

2244:                                             ; preds = %2242, %2235
  %2245 = phi i32 [ %2243, %2242 ], [ %2241, %2235 ]
  %2246 = icmp eq i32 %2245, 0
  br i1 %2246, label %2247, label %2248

2247:                                             ; preds = %2244
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2233) #19
  br label %2248

2248:                                             ; preds = %2247, %2244, %2231
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2212) #19
  br label %2249

2249:                                             ; preds = %2248, %2206
  %2250 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %1, i64 0, i32 6
  %2251 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %2250, i64 0, i32 0
  %2252 = load i32, i32* %2251, align 4
  %2253 = icmp eq i32 %2252, 0
  br i1 %2253, label %2292, label %2254

2254:                                             ; preds = %2249
  %2255 = bitcast %"class.WTF::String"* %118 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2255) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %118, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.160, i64 0, i64 0), i64 16) #19
  %2256 = bitcast %"class.WTF::String"* %119 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2256) #19
  %2257 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color10SerializedEv(%"class.blink::Color"* %2250) #19
  %2258 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2257, %"class.WTF::StringImpl"** %2258, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %1827, %"class.WTF::String"* nonnull dereferenceable(8) %118, %"class.WTF::String"* nonnull dereferenceable(8) %119) #19
  %2259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2258, align 8
  %2260 = icmp eq %"class.WTF::StringImpl"* %2259, null
  br i1 %2260, label %2274, label %2261

2261:                                             ; preds = %2254
  %2262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2259, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2263 = load atomic i32, i32* %2262 monotonic, align 4
  %2264 = and i32 %2263, 2
  %2265 = icmp eq i32 %2264, 0
  %2266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2259, i64 0, i32 0
  %2267 = load i32, i32* %2266, align 4
  br i1 %2265, label %2268, label %2270

2268:                                             ; preds = %2261
  %2269 = add i32 %2267, -1
  store i32 %2269, i32* %2266, align 4
  br label %2270

2270:                                             ; preds = %2268, %2261
  %2271 = phi i32 [ %2269, %2268 ], [ %2267, %2261 ]
  %2272 = icmp eq i32 %2271, 0
  br i1 %2272, label %2273, label %2274

2273:                                             ; preds = %2270
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2259) #19
  br label %2274

2274:                                             ; preds = %2273, %2270, %2254
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2256) #19
  %2275 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %118, i64 0, i32 0, i32 0
  %2276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2275, align 8
  %2277 = icmp eq %"class.WTF::StringImpl"* %2276, null
  br i1 %2277, label %2291, label %2278

2278:                                             ; preds = %2274
  %2279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2276, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2280 = load atomic i32, i32* %2279 monotonic, align 4
  %2281 = and i32 %2280, 2
  %2282 = icmp eq i32 %2281, 0
  %2283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2276, i64 0, i32 0
  %2284 = load i32, i32* %2283, align 4
  br i1 %2282, label %2285, label %2287

2285:                                             ; preds = %2278
  %2286 = add i32 %2284, -1
  store i32 %2286, i32* %2283, align 4
  br label %2287

2287:                                             ; preds = %2285, %2278
  %2288 = phi i32 [ %2286, %2285 ], [ %2284, %2278 ]
  %2289 = icmp eq i32 %2288, 0
  br i1 %2289, label %2290, label %2291

2290:                                             ; preds = %2287
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2276) #19
  br label %2291

2291:                                             ; preds = %2290, %2287, %2274
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2255) #19
  br label %2292

2292:                                             ; preds = %2291, %2249
  %2293 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %1, i64 0, i32 7
  %2294 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %2293, i64 0, i32 0
  %2295 = load i32, i32* %2294, align 4
  %2296 = icmp eq i32 %2295, 0
  br i1 %2296, label %2335, label %2297

2297:                                             ; preds = %2292
  %2298 = bitcast %"class.WTF::String"* %120 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2298) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %120, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.162, i64 0, i64 0), i64 15) #19
  %2299 = bitcast %"class.WTF::String"* %121 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2299) #19
  %2300 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color10SerializedEv(%"class.blink::Color"* %2293) #19
  %2301 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %121, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2300, %"class.WTF::StringImpl"** %2301, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %1827, %"class.WTF::String"* nonnull dereferenceable(8) %120, %"class.WTF::String"* nonnull dereferenceable(8) %121) #19
  %2302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2301, align 8
  %2303 = icmp eq %"class.WTF::StringImpl"* %2302, null
  br i1 %2303, label %2317, label %2304

2304:                                             ; preds = %2297
  %2305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2306 = load atomic i32, i32* %2305 monotonic, align 4
  %2307 = and i32 %2306, 2
  %2308 = icmp eq i32 %2307, 0
  %2309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2302, i64 0, i32 0
  %2310 = load i32, i32* %2309, align 4
  br i1 %2308, label %2311, label %2313

2311:                                             ; preds = %2304
  %2312 = add i32 %2310, -1
  store i32 %2312, i32* %2309, align 4
  br label %2313

2313:                                             ; preds = %2311, %2304
  %2314 = phi i32 [ %2312, %2311 ], [ %2310, %2304 ]
  %2315 = icmp eq i32 %2314, 0
  br i1 %2315, label %2316, label %2317

2316:                                             ; preds = %2313
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2302) #19
  br label %2317

2317:                                             ; preds = %2316, %2313, %2297
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2299) #19
  %2318 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %120, i64 0, i32 0, i32 0
  %2319 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2318, align 8
  %2320 = icmp eq %"class.WTF::StringImpl"* %2319, null
  br i1 %2320, label %2334, label %2321

2321:                                             ; preds = %2317
  %2322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2319, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2323 = load atomic i32, i32* %2322 monotonic, align 4
  %2324 = and i32 %2323, 2
  %2325 = icmp eq i32 %2324, 0
  %2326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2319, i64 0, i32 0
  %2327 = load i32, i32* %2326, align 4
  br i1 %2325, label %2328, label %2330

2328:                                             ; preds = %2321
  %2329 = add i32 %2327, -1
  store i32 %2329, i32* %2326, align 4
  br label %2330

2330:                                             ; preds = %2328, %2321
  %2331 = phi i32 [ %2329, %2328 ], [ %2327, %2321 ]
  %2332 = icmp eq i32 %2331, 0
  br i1 %2332, label %2333, label %2334

2333:                                             ; preds = %2330
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2319) #19
  br label %2334

2334:                                             ; preds = %2333, %2330, %2317
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2298) #19
  br label %2335

2335:                                             ; preds = %2334, %2292
  %2336 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %1, i64 0, i32 8
  %2337 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %2336, i64 0, i32 0
  %2338 = load i32, i32* %2337, align 4
  %2339 = icmp eq i32 %2338, 0
  br i1 %2339, label %2378, label %2340

2340:                                             ; preds = %2335
  %2341 = bitcast %"class.WTF::String"* %122 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2341) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %122, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.164, i64 0, i64 0), i64 19) #19
  %2342 = bitcast %"class.WTF::String"* %123 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2342) #19
  %2343 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color10SerializedEv(%"class.blink::Color"* %2336) #19
  %2344 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %123, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2343, %"class.WTF::StringImpl"** %2344, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %1827, %"class.WTF::String"* nonnull dereferenceable(8) %122, %"class.WTF::String"* nonnull dereferenceable(8) %123) #19
  %2345 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2344, align 8
  %2346 = icmp eq %"class.WTF::StringImpl"* %2345, null
  br i1 %2346, label %2360, label %2347

2347:                                             ; preds = %2340
  %2348 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2345, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2349 = load atomic i32, i32* %2348 monotonic, align 4
  %2350 = and i32 %2349, 2
  %2351 = icmp eq i32 %2350, 0
  %2352 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2345, i64 0, i32 0
  %2353 = load i32, i32* %2352, align 4
  br i1 %2351, label %2354, label %2356

2354:                                             ; preds = %2347
  %2355 = add i32 %2353, -1
  store i32 %2355, i32* %2352, align 4
  br label %2356

2356:                                             ; preds = %2354, %2347
  %2357 = phi i32 [ %2355, %2354 ], [ %2353, %2347 ]
  %2358 = icmp eq i32 %2357, 0
  br i1 %2358, label %2359, label %2360

2359:                                             ; preds = %2356
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2345) #19
  br label %2360

2360:                                             ; preds = %2359, %2356, %2340
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2342) #19
  %2361 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %122, i64 0, i32 0, i32 0
  %2362 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2361, align 8
  %2363 = icmp eq %"class.WTF::StringImpl"* %2362, null
  br i1 %2363, label %2377, label %2364

2364:                                             ; preds = %2360
  %2365 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2362, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2366 = load atomic i32, i32* %2365 monotonic, align 4
  %2367 = and i32 %2366, 2
  %2368 = icmp eq i32 %2367, 0
  %2369 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2362, i64 0, i32 0
  %2370 = load i32, i32* %2369, align 4
  br i1 %2368, label %2371, label %2373

2371:                                             ; preds = %2364
  %2372 = add i32 %2370, -1
  store i32 %2372, i32* %2369, align 4
  br label %2373

2373:                                             ; preds = %2371, %2364
  %2374 = phi i32 [ %2372, %2371 ], [ %2370, %2364 ]
  %2375 = icmp eq i32 %2374, 0
  br i1 %2375, label %2376, label %2377

2376:                                             ; preds = %2373
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2362) #19
  br label %2377

2377:                                             ; preds = %2376, %2373, %2360
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2341) #19
  br label %2378

2378:                                             ; preds = %2377, %2335
  %2379 = bitcast i8* %1826 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %201, %"class.WTF::String"* nonnull dereferenceable(8) %168, %"class.blink::protocol::Value"* nonnull %2379) #19
  %2380 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %168, i64 0, i32 0, i32 0
  %2381 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2380, align 8
  %2382 = icmp eq %"class.WTF::StringImpl"* %2381, null
  br i1 %2382, label %2396, label %2383

2383:                                             ; preds = %2378
  %2384 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2381, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2385 = load atomic i32, i32* %2384 monotonic, align 4
  %2386 = and i32 %2385, 2
  %2387 = icmp eq i32 %2386, 0
  %2388 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2381, i64 0, i32 0
  %2389 = load i32, i32* %2388, align 4
  br i1 %2387, label %2390, label %2392

2390:                                             ; preds = %2383
  %2391 = add i32 %2389, -1
  store i32 %2391, i32* %2388, align 4
  br label %2392

2392:                                             ; preds = %2390, %2383
  %2393 = phi i32 [ %2391, %2390 ], [ %2389, %2383 ]
  %2394 = icmp eq i32 %2393, 0
  br i1 %2394, label %2395, label %2396

2395:                                             ; preds = %2392
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2381) #19
  br label %2396

2396:                                             ; preds = %2378, %2392, %2395
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1825) #19
  %2397 = bitcast %"class.WTF::String"* %169 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2397) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %169, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.129, i64 0, i64 0), i64 13) #19
  call void @_ZN5blink8protocol15DictionaryValue10setBooleanERKN3WTF6StringEb(%"class.blink::protocol::DictionaryValue"* nonnull %201, %"class.WTF::String"* nonnull dereferenceable(8) %169, i1 zeroext true) #19
  %2398 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %169, i64 0, i32 0, i32 0
  %2399 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2398, align 8
  %2400 = icmp eq %"class.WTF::StringImpl"* %2399, null
  br i1 %2400, label %2414, label %2401

2401:                                             ; preds = %2396
  %2402 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2399, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2403 = load atomic i32, i32* %2402 monotonic, align 4
  %2404 = and i32 %2403, 2
  %2405 = icmp eq i32 %2404, 0
  %2406 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2399, i64 0, i32 0
  %2407 = load i32, i32* %2406, align 4
  br i1 %2405, label %2408, label %2410

2408:                                             ; preds = %2401
  %2409 = add i32 %2407, -1
  store i32 %2409, i32* %2406, align 4
  br label %2410

2410:                                             ; preds = %2408, %2401
  %2411 = phi i32 [ %2409, %2408 ], [ %2407, %2401 ]
  %2412 = icmp eq i32 %2411, 0
  br i1 %2412, label %2413, label %2414

2413:                                             ; preds = %2410
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2399) #19
  br label %2414

2414:                                             ; preds = %2396, %2410, %2413
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2397) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1711) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_111PathBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1704, align 8
  %2415 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %1705, align 8
  store %"class.blink::protocol::ListValue"* null, %"class.blink::protocol::ListValue"** %1705, align 8
  %2416 = icmp eq %"class.blink::protocol::ListValue"* %2415, null
  br i1 %2416, label %2422, label %2417

2417:                                             ; preds = %2414
  %2418 = bitcast %"class.blink::protocol::ListValue"* %2415 to void (%"class.blink::protocol::ListValue"*)***
  %2419 = load void (%"class.blink::protocol::ListValue"*)**, void (%"class.blink::protocol::ListValue"*)*** %2418, align 8
  %2420 = getelementptr inbounds void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %2419, i64 2
  %2421 = load void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %2420, align 8
  call void %2421(%"class.blink::protocol::ListValue"* nonnull %2415) #19
  br label %2422

2422:                                             ; preds = %2414, %2417
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1703) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_111PathBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %756, align 8
  %2423 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %757, align 8
  store %"class.blink::protocol::ListValue"* null, %"class.blink::protocol::ListValue"** %757, align 8
  %2424 = icmp eq %"class.blink::protocol::ListValue"* %2423, null
  br i1 %2424, label %2430, label %2425

2425:                                             ; preds = %2422
  %2426 = bitcast %"class.blink::protocol::ListValue"* %2423 to void (%"class.blink::protocol::ListValue"*)***
  %2427 = load void (%"class.blink::protocol::ListValue"*)**, void (%"class.blink::protocol::ListValue"*)*** %2426, align 8
  %2428 = getelementptr inbounds void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %2427, i64 2
  %2429 = load void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %2428, align 8
  call void %2429(%"class.blink::protocol::ListValue"* nonnull %2423) #19
  br label %2430

2430:                                             ; preds = %2422, %2425
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %755) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_111PathBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %748, align 8
  %2431 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %749, align 8
  store %"class.blink::protocol::ListValue"* null, %"class.blink::protocol::ListValue"** %749, align 8
  %2432 = icmp eq %"class.blink::protocol::ListValue"* %2431, null
  br i1 %2432, label %2438, label %2433

2433:                                             ; preds = %2430
  %2434 = bitcast %"class.blink::protocol::ListValue"* %2431 to void (%"class.blink::protocol::ListValue"*)***
  %2435 = load void (%"class.blink::protocol::ListValue"*)**, void (%"class.blink::protocol::ListValue"*)*** %2434, align 8
  %2436 = getelementptr inbounds void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %2435, i64 2
  %2437 = load void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %2436, align 8
  call void %2437(%"class.blink::protocol::ListValue"* nonnull %2431) #19
  br label %2438

2438:                                             ; preds = %2430, %2433
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %747) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_111PathBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %555, align 8
  %2439 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %556, align 8
  store %"class.blink::protocol::ListValue"* null, %"class.blink::protocol::ListValue"** %556, align 8
  %2440 = icmp eq %"class.blink::protocol::ListValue"* %2439, null
  br i1 %2440, label %2446, label %2441

2441:                                             ; preds = %2438
  %2442 = bitcast %"class.blink::protocol::ListValue"* %2439 to void (%"class.blink::protocol::ListValue"*)***
  %2443 = load void (%"class.blink::protocol::ListValue"*)**, void (%"class.blink::protocol::ListValue"*)*** %2442, align 8
  %2444 = getelementptr inbounds void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %2443, i64 2
  %2445 = load void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %2444, align 8
  call void %2445(%"class.blink::protocol::ListValue"* nonnull %2439) #19
  br label %2446

2446:                                             ; preds = %2438, %2441
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %554) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_111PathBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %547, align 8
  %2447 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %548, align 8
  store %"class.blink::protocol::ListValue"* null, %"class.blink::protocol::ListValue"** %548, align 8
  %2448 = icmp eq %"class.blink::protocol::ListValue"* %2447, null
  br i1 %2448, label %2454, label %2449

2449:                                             ; preds = %2446
  %2450 = bitcast %"class.blink::protocol::ListValue"* %2447 to void (%"class.blink::protocol::ListValue"*)***
  %2451 = load void (%"class.blink::protocol::ListValue"*)**, void (%"class.blink::protocol::ListValue"*)*** %2450, align 8
  %2452 = getelementptr inbounds void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %2451, i64 2
  %2453 = load void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %2452, align 8
  call void %2453(%"class.blink::protocol::ListValue"* nonnull %2447) #19
  br label %2454

2454:                                             ; preds = %2446, %2449
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %546) #19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %327) #19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %310) #19
  %2455 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %211, align 8
  %2456 = icmp eq %"class.blink::LayoutUnit"* %2455, null
  %2457 = bitcast %"class.blink::LayoutUnit"* %2455 to i8*
  br i1 %2456, label %2463, label %2458, !prof !27

2458:                                             ; preds = %2454
  %2459 = load i32, i32* %212, align 4
  %2460 = icmp eq i32 %2459, 0
  br i1 %2460, label %2462, label %2461, !prof !2

2461:                                             ; preds = %2458
  store i32 0, i32* %212, align 4
  br label %2462

2462:                                             ; preds = %2461, %2458
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %2457) #19
  store %"class.blink::LayoutUnit"* null, %"class.blink::LayoutUnit"** %211, align 8
  br label %2463

2463:                                             ; preds = %2454, %2462
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %210) #19
  %2464 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %203, align 8
  %2465 = icmp eq %"class.blink::LayoutUnit"* %2464, null
  %2466 = bitcast %"class.blink::LayoutUnit"* %2464 to i8*
  br i1 %2465, label %2472, label %2467, !prof !27

2467:                                             ; preds = %2463
  %2468 = load i32, i32* %204, align 4
  %2469 = icmp eq i32 %2468, 0
  br i1 %2469, label %2471, label %2470, !prof !2

2470:                                             ; preds = %2467
  store i32 0, i32* %204, align 4
  br label %2471

2471:                                             ; preds = %2470, %2467
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %2466) #19
  store %"class.blink::LayoutUnit"* null, %"class.blink::LayoutUnit"** %203, align 8
  br label %2472

2472:                                             ; preds = %2463, %2471
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %202) #19
  ret %"class.blink::protocol::DictionaryValue"* %201
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::protocol::DictionaryValue"* @_ZN5blink31InspectorFlexContainerHighlightEPNS_4NodeERKNS_37InspectorFlexContainerHighlightConfigE(%"class.blink::Node"*, %"struct.blink::InspectorFlexContainerHighlightConfig"* dereferenceable(144)) local_unnamed_addr #1 {
  %3 = tail call %"class.blink::Element"* @_ZN5blink20DisplayLockUtilities30NearestLockedExclusiveAncestorERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %0) #19
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %5, label %58

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  %10 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %9) #19
  %11 = icmp eq %"class.blink::LocalFrameView"* %10, null
  br i1 %11, label %58, label %12

12:                                               ; preds = %5
  %13 = tail call %"class.blink::ChromeClient"* @_ZNK5blink14LocalFrameView15GetChromeClientEv(%"class.blink::LocalFrameView"* nonnull %10) #19
  %14 = getelementptr inbounds %"class.blink::LocalFrameView", %"class.blink::LocalFrameView"* %10, i64 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %14, align 8
  %16 = bitcast %"class.blink::ChromeClient"* %13 to float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)***
  %17 = load float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)**, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*** %16, align 8
  %18 = getelementptr inbounds float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)** %17, i64 3
  %19 = load float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)** %18, align 8
  %20 = tail call float %19(%"class.blink::ChromeClient"* %13, %"class.blink::LocalFrame"* %15, float 1.000000e+00) #19
  %21 = fdiv float 1.000000e+00, %20
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %25, label %31, label %27

27:                                               ; preds = %12
  %28 = bitcast %"class.blink::NodeData"** %26 to %"class.blink::NodeRareData"**
  %29 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %29, i64 0, i32 1, i32 0, i32 0
  br label %33

31:                                               ; preds = %12
  %32 = bitcast %"class.blink::NodeData"** %26 to %"class.blink::NodeRenderingData"**
  br label %33

33:                                               ; preds = %27, %31
  %34 = phi %"class.blink::NodeRenderingData"** [ %30, %27 ], [ %32, %31 ]
  %35 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %35, i64 0, i32 1
  %37 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %36, align 8
  %38 = icmp eq %"class.blink::LayoutObject"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %37, i64 0, i32 5, i32 0
  %41 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %41, i64 0, i32 0, i32 9
  %43 = bitcast [20 x i8]* %42 to i160*
  %44 = load i160, i160* %43, align 8
  %45 = lshr i160 %44, 32
  %46 = trunc i160 %45 to i32
  %47 = and i32 %46, 30
  %48 = or i32 %47, 1
  %49 = icmp eq i32 %48, 17
  br i1 %49, label %50, label %58

50:                                               ; preds = %39
  %51 = bitcast %"class.blink::LayoutObject"* %37 to i1 (%"class.blink::LayoutObject"*, i32)***
  %52 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %52, i64 92
  %54 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::LayoutObject"* nonnull %37, i32 26) #19
  br i1 %55, label %56, label %58

56:                                               ; preds = %50
  %57 = tail call fastcc %"class.blink::protocol::DictionaryValue"* @_ZN5blink12_GLOBAL__N_122BuildFlexContainerInfoEPNS_4NodeERKNS_37InspectorFlexContainerHighlightConfigEf(%"class.blink::Node"* %0, %"struct.blink::InspectorFlexContainerHighlightConfig"* dereferenceable(144) %1, float %21)
  br label %58

58:                                               ; preds = %39, %50, %33, %5, %2, %56
  %59 = phi %"class.blink::protocol::DictionaryValue"* [ %57, %56 ], [ null, %2 ], [ null, %5 ], [ null, %33 ], [ null, %50 ], [ null, %39 ]
  ret %"class.blink::protocol::DictionaryValue"* %59
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::protocol::DictionaryValue"* @_ZN5blink22BuildSnapContainerInfoEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #4 {
  %2 = alloca %"class.blink::FloatQuad", align 8
  %3 = alloca %"class.blink::FloatQuad", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.blink::FloatQuad", align 8
  %11 = alloca %"class.blink::FloatQuad", align 4
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.blink::FloatQuad", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.std::__1::vector", align 8
  %16 = alloca %"struct.cc::SnapAreaData", align 8
  %17 = alloca %"class.blink::FloatQuad", align 8
  %18 = alloca %"class.blink::FloatQuad", align 4
  %19 = alloca %"class.WTF::String", align 8
  %20 = alloca %"class.blink::FloatQuad", align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = alloca %"class.WTF::String", align 8
  %23 = icmp eq %"class.blink::Node"* %0, null
  br i1 %23, label %534, label %24

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %26, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::Document"*, %"class.blink::Document"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %28, i64 0, i32 47, i32 0, i32 0
  %30 = load %"class.blink::Element"*, %"class.blink::Element"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"class.blink::Node"* %31, %0
  br i1 %32, label %33, label %40

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %28, i64 0, i32 0
  %35 = bitcast %"class.blink::Document"* %28 to %"class.blink::LayoutBox"* (%"class.blink::ContainerNode"*)***
  %36 = load %"class.blink::LayoutBox"* (%"class.blink::ContainerNode"*)**, %"class.blink::LayoutBox"* (%"class.blink::ContainerNode"*)*** %35, align 8
  %37 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::ContainerNode"*)*, %"class.blink::LayoutBox"* (%"class.blink::ContainerNode"*)** %36, i64 75
  %38 = load %"class.blink::LayoutBox"* (%"class.blink::ContainerNode"*)*, %"class.blink::LayoutBox"* (%"class.blink::ContainerNode"*)** %37, align 8
  %39 = tail call %"class.blink::LayoutBox"* %38(%"class.blink::ContainerNode"* %34) #19
  br label %42

40:                                               ; preds = %24
  %41 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* nonnull %0) #19
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi %"class.blink::LayoutBox"* [ %39, %33 ], [ %41, %40 ]
  %44 = icmp eq %"class.blink::LayoutBox"* %43, null
  br i1 %44, label %534, label %45

45:                                               ; preds = %42
  %46 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %25, align 8
  %47 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %46, i64 0, i32 2, i32 0, i32 0
  %48 = load %"class.blink::Document"*, %"class.blink::Document"** %47, align 8
  %49 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %48) #19
  %50 = icmp eq %"class.blink::LocalFrameView"* %49, null
  br i1 %50, label %534, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %43, i64 0, i32 0
  %53 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %52) #19
  %54 = icmp eq %"class.blink::PaintLayerScrollableArea"* %53, null
  br i1 %54, label %534, label %55

55:                                               ; preds = %51
  %56 = tail call i8* @_Znwm(i64 80) #18
  %57 = bitcast i8* %56 to %"class.blink::protocol::DictionaryValue"*
  tail call void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"* nonnull %57) #19
  %58 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %53, i64 0, i32 3
  %59 = bitcast %"class.blink::IntPoint"* %58 to i64*
  %60 = load i64, i64* %59, align 4
  %61 = trunc i64 %60 to i32
  %62 = lshr i64 %60, 32
  %63 = trunc i64 %62 to i32
  %64 = sitofp i32 %61 to float
  %65 = sitofp i32 %63 to float
  %66 = tail call <2 x float> @_ZNK5blink24PaintLayerScrollableArea15GetScrollOffsetEv(%"class.blink::PaintLayerScrollableArea"* nonnull %53) #19
  %67 = extractelement <2 x float> %66, i32 0
  %68 = fadd float %67, %64
  %69 = extractelement <2 x float> %66, i32 1
  %70 = fadd float %69, %65
  %71 = tail call %"class.cc::SnapContainerData"* @_ZNK5blink24PaintLayerScrollableArea20GetSnapContainerDataEv(%"class.blink::PaintLayerScrollableArea"* nonnull %53) #19
  %72 = icmp eq %"class.cc::SnapContainerData"* %71, null
  br i1 %72, label %529, label %73

73:                                               ; preds = %55
  %74 = bitcast %"class.blink::FloatQuad"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %74) #19
  %75 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %43, i64 0, i32 0, i32 0
  %76 = bitcast %"class.blink::FloatQuad"* %11 to i8*
  %77 = bitcast %"class.blink::FloatQuad"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -1, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %76) #19
  %78 = getelementptr inbounds %"class.cc::SnapContainerData", %"class.cc::SnapContainerData"* %71, i64 0, i32 1
  %79 = bitcast %"class.gfx::RectF"* %78 to <2 x float>*
  %80 = load <2 x float>, <2 x float>* %79, align 4
  %81 = getelementptr inbounds %"class.cc::SnapContainerData", %"class.cc::SnapContainerData"* %71, i64 0, i32 1, i32 1
  %82 = bitcast %"class.gfx::SizeF"* %81 to <2 x float>*
  %83 = load <2 x float>, <2 x float>* %82, align 4
  %84 = extractelement <2 x float> %80, i32 0
  %85 = extractelement <2 x float> %80, i32 1
  %86 = extractelement <2 x float> %83, i32 0
  %87 = extractelement <2 x float> %83, i32 1
  %88 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %11, i64 0, i32 0, i32 0
  store float %84, float* %88, align 4, !alias.scope !107
  %89 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %11, i64 0, i32 0, i32 1
  store float %85, float* %89, align 4, !alias.scope !107
  %90 = fadd float %84, %86
  %91 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %11, i64 0, i32 1, i32 0
  store float %90, float* %91, align 4, !alias.scope !107
  %92 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %11, i64 0, i32 1, i32 1
  store float %85, float* %92, align 4, !alias.scope !107
  %93 = fadd float %85, %87
  %94 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %11, i64 0, i32 2, i32 0
  store float %90, float* %94, align 4, !alias.scope !107
  %95 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %11, i64 0, i32 2, i32 1
  store float %93, float* %95, align 4, !alias.scope !107
  %96 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %11, i64 0, i32 3, i32 0
  store float %84, float* %96, align 4, !alias.scope !107
  %97 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %11, i64 0, i32 3, i32 1
  store float %93, float* %97, align 4, !alias.scope !107
  call void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* nonnull sret %10, %"class.blink::LayoutObject"* %75, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %11, %"class.blink::LayoutBoxModelObject"* null, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %76) #19
  %98 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36, i64 0, i64 0), i64 8) #19
  %99 = call fastcc %"class.blink::protocol::ListValue"* @_ZN5blink12_GLOBAL__N_117BuildPathFromQuadEPKNS_14LocalFrameViewENS_9FloatQuadE(%"class.blink::LocalFrameView"* nonnull %49, %"class.blink::FloatQuad"* nonnull byval(%"class.blink::FloatQuad") align 8 %10)
  %100 = bitcast %"class.blink::protocol::ListValue"* %99 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %57, %"class.WTF::String"* nonnull dereferenceable(8) %12, %"class.blink::protocol::Value"* %100) #19
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %73
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #19
  br label %117

117:                                              ; preds = %116, %113, %73
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #19
  %118 = call i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"* nonnull %43) #19
  %119 = call i32 @_ZNK5blink9LayoutBox9ClientTopEv(%"class.blink::LayoutBox"* nonnull %43) #19
  %120 = call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* nonnull %43) #19
  %121 = call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* nonnull %43) #19
  %122 = bitcast %"class.blink::FloatQuad"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %122) #19
  %123 = bitcast %"class.blink::FloatQuad"* %3 to i8*
  %124 = bitcast %"class.blink::FloatQuad"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 -1, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %123) #19, !noalias !110
  %125 = sitofp i32 %118 to float
  %126 = fmul float %125, 1.562500e-02
  %127 = sitofp i32 %119 to float
  %128 = fmul float %127, 1.562500e-02
  %129 = sitofp i32 %120 to float
  %130 = fmul float %129, 1.562500e-02
  %131 = sitofp i32 %121 to float
  %132 = fmul float %131, 1.562500e-02
  %133 = insertelement <2 x float> undef, float %126, i32 0
  %134 = insertelement <2 x float> %133, float %128, i32 1
  %135 = bitcast %"class.blink::FloatQuad"* %3 to <2 x float>*
  store <2 x float> %134, <2 x float>* %135, align 8, !noalias !110
  %136 = fadd float %126, %130
  %137 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %3, i64 0, i32 1, i32 0
  store float %136, float* %137, align 8, !noalias !110
  %138 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %3, i64 0, i32 1, i32 1
  store float %128, float* %138, align 4, !noalias !110
  %139 = fadd float %128, %132
  %140 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %3, i64 0, i32 2, i32 0
  store float %136, float* %140, align 8, !noalias !110
  %141 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %3, i64 0, i32 2, i32 1
  store float %139, float* %141, align 4, !noalias !110
  %142 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %3, i64 0, i32 3, i32 0
  store float %126, float* %142, align 8, !noalias !110
  %143 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %3, i64 0, i32 3, i32 1
  store float %139, float* %143, align 4, !noalias !110
  call void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* nonnull sret %13, %"class.blink::LayoutObject"* %75, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %3, %"class.blink::LayoutBoxModelObject"* null, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %123) #19, !noalias !110
  %144 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %144) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %14, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.37, i64 0, i64 0), i64 10) #19
  %145 = call fastcc %"class.blink::protocol::ListValue"* @_ZN5blink12_GLOBAL__N_117BuildPathFromQuadEPKNS_14LocalFrameViewENS_9FloatQuadE(%"class.blink::LocalFrameView"* nonnull %49, %"class.blink::FloatQuad"* nonnull byval(%"class.blink::FloatQuad") align 8 %13)
  %146 = bitcast %"class.blink::protocol::ListValue"* %145 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %57, %"class.WTF::String"* nonnull dereferenceable(8) %14, %"class.blink::protocol::Value"* %146) #19
  %147 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %147, align 8
  %149 = icmp eq %"class.WTF::StringImpl"* %148, null
  br i1 %149, label %163, label %150

150:                                              ; preds = %117
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %159

157:                                              ; preds = %150
  %158 = add i32 %156, -1
  store i32 %158, i32* %155, align 4
  br label %159

159:                                              ; preds = %157, %150
  %160 = phi i32 [ %158, %157 ], [ %156, %150 ]
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %159
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %148) #19
  br label %163

163:                                              ; preds = %117, %159, %162
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #19
  %164 = bitcast %"class.cc::SnapContainerData"* %71 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = lshr i64 %165, 32
  %167 = trunc i64 %166 to i32
  %168 = call i8* @_Znwm(i64 40) #18
  %169 = bitcast i8* %168 to %"class.blink::protocol::ListValue"*
  call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %169) #19
  %170 = bitcast %"class.std::__1::vector"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %170) #19
  %171 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %15, i64 0, i32 0, i32 0
  %172 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %15, i64 0, i32 0, i32 1
  %173 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %15, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %170, i8 0, i64 24, i1 false) #19
  %174 = getelementptr inbounds %"class.cc::SnapContainerData", %"class.cc::SnapContainerData"* %71, i64 0, i32 4
  %175 = getelementptr inbounds %"class.cc::SnapContainerData", %"class.cc::SnapContainerData"* %71, i64 0, i32 4, i32 0, i32 1
  %176 = bitcast %"struct.cc::SnapAreaData"** %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = bitcast %"class.std::__1::vector"* %174 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = sub i64 %177, %179
  %181 = sdiv exact i64 %180, 40
  %182 = bitcast %"struct.cc::SnapAreaData"** %173 to i64*
  %183 = bitcast %"class.std::__1::vector"* %15 to i64*
  %184 = icmp eq i64 %180, 0
  br i1 %184, label %197, label %185

185:                                              ; preds = %163
  %186 = icmp ugt i64 %181, 461168601842738790
  br i1 %186, label %187, label %188

187:                                              ; preds = %185
  call void @abort() #21
  unreachable

188:                                              ; preds = %185
  %189 = bitcast %"struct.cc::SnapAreaData"** %172 to i64*
  %190 = call i8* @_Znwm(i64 %180) #18
  %191 = bitcast i8* %190 to %"struct.cc::SnapAreaData"*
  %192 = ptrtoint i8* %190 to i64
  %193 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %191, i64 %181
  %194 = ptrtoint %"struct.cc::SnapAreaData"* %193 to i64
  store i64 %192, i64* %183, align 8
  store i64 %192, i64* %189, align 8
  store i64 %194, i64* %182, align 8
  %195 = load i64, i64* %176, align 8
  %196 = load i64, i64* %178, align 8
  br label %197

197:                                              ; preds = %163, %188
  %198 = phi %"struct.cc::SnapAreaData"* [ %191, %188 ], [ null, %163 ]
  %199 = phi i64 [ %192, %188 ], [ 0, %163 ]
  %200 = phi %"struct.cc::SnapAreaData"* [ %193, %188 ], [ null, %163 ]
  %201 = phi i64 [ %196, %188 ], [ %179, %163 ]
  %202 = phi i64 [ %195, %188 ], [ %177, %163 ]
  %203 = icmp eq i64 %202, %201
  br i1 %203, label %213, label %204

204:                                              ; preds = %197
  %205 = bitcast %"struct.cc::SnapAreaData"* %16 to i8*
  %206 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %16, i64 0, i32 1
  %207 = fsub float -0.000000e+00, %68
  %208 = fsub float -0.000000e+00, %70
  %209 = bitcast %"struct.cc::SnapAreaData"** %172 to i64*
  br label %263

210:                                              ; preds = %324
  %211 = load %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"** %171, align 8
  %212 = load %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"** %172, align 8
  br label %213

213:                                              ; preds = %210, %197
  %214 = phi %"struct.cc::SnapAreaData"* [ %212, %210 ], [ %198, %197 ]
  %215 = phi %"struct.cc::SnapAreaData"* [ %211, %210 ], [ %198, %197 ]
  call fastcc void @"_ZNSt3__16__sortIRZN5blink22BuildSnapContainerInfoEPNS1_4NodeEE3$_0PN2cc12SnapAreaDataEEEvT0_S9_T_"(%"struct.cc::SnapAreaData"* %215, %"struct.cc::SnapAreaData"* %214) #19
  %216 = load %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"** %171, align 8
  %217 = load %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"** %172, align 8
  %218 = icmp eq %"struct.cc::SnapAreaData"* %216, %217
  br i1 %218, label %335, label %219

219:                                              ; preds = %213
  %220 = bitcast %"class.blink::FloatQuad"* %17 to i8*
  %221 = bitcast %"class.blink::FloatQuad"* %18 to i8*
  %222 = bitcast %"class.blink::FloatQuad"* %18 to i32*
  %223 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %18, i64 0, i32 0, i32 1
  %224 = bitcast float* %223 to i32*
  %225 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %18, i64 0, i32 1, i32 0
  %226 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %18, i64 0, i32 1, i32 1
  %227 = bitcast float* %226 to i32*
  %228 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %18, i64 0, i32 2, i32 0
  %229 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %18, i64 0, i32 2, i32 1
  %230 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %18, i64 0, i32 3
  %231 = bitcast %"class.blink::FloatPoint"* %230 to i32*
  %232 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %18, i64 0, i32 3, i32 1
  %233 = bitcast %"class.WTF::String"* %19 to i8*
  %234 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  %235 = bitcast %"class.blink::FloatQuad"* %20 to i8*
  %236 = bitcast %"class.blink::FloatQuad"* %2 to i8*
  %237 = bitcast %"class.blink::FloatQuad"* %2 to <2 x float>*
  %238 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %2, i64 0, i32 1, i32 0
  %239 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %2, i64 0, i32 1, i32 1
  %240 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %2, i64 0, i32 2, i32 0
  %241 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %2, i64 0, i32 2, i32 1
  %242 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %2, i64 0, i32 3, i32 0
  %243 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %2, i64 0, i32 3, i32 1
  %244 = bitcast %"class.WTF::String"* %21 to i8*
  %245 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %246 = bitcast %"class.WTF::String"* %6 to i8*
  %247 = bitcast %"class.WTF::String"* %7 to i8*
  %248 = bitcast %"class.WTF::String"* %5 to i8*
  %249 = bitcast %"class.WTF::String"* %5 to i64*
  %250 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %251 = bitcast %"class.WTF::String"* %7 to i64*
  %252 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %253 = bitcast %"class.WTF::String"* %8 to i8*
  %254 = bitcast %"class.WTF::String"* %9 to i8*
  %255 = bitcast %"class.WTF::String"* %4 to i8*
  %256 = bitcast %"class.WTF::String"* %4 to i64*
  %257 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %258 = bitcast %"class.WTF::String"* %9 to i64*
  %259 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %260 = bitcast %"class.blink::FloatQuad"* %17 to i8*
  %261 = bitcast %"class.blink::FloatQuad"* %20 to i8*
  %262 = icmp ult i32 %167, 2
  br label %361

263:                                              ; preds = %331, %204
  %264 = phi i64 [ %199, %204 ], [ %334, %331 ]
  %265 = phi %"struct.cc::SnapAreaData"* [ %200, %204 ], [ %333, %331 ]
  %266 = phi %"struct.cc::SnapAreaData"* [ %198, %204 ], [ %332, %331 ]
  %267 = phi i64 [ %201, %204 ], [ %327, %331 ]
  %268 = phi i64 [ 0, %204 ], [ %325, %331 ]
  %269 = inttoptr i64 %267 to %"struct.cc::SnapAreaData"*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %205) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %205, i8* align 8 bitcast ({ %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, [7 x i8], %"struct.cc::ElementId" }* @"__const._ZNSt3__127__insertion_sort_incompleteIRZN5blink22BuildSnapContainerInfoEPNS1_4NodeEE3$_0PN2cc12SnapAreaDataEEEbT0_S9_T_.__t" to i8*), i64 40, i1 false)
  %270 = shl i64 %268, 32
  %271 = ashr exact i64 %270, 32
  %272 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %269, i64 %271
  %273 = bitcast %"struct.cc::SnapAreaData"* %272 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %205, i8* align 8 %273, i64 40, i1 false)
  call void @_ZN3gfx5RectF6OffsetEff(%"class.gfx::RectF"* %206, float %207, float %208) #19
  %274 = icmp ult %"struct.cc::SnapAreaData"* %266, %265
  %275 = ptrtoint %"struct.cc::SnapAreaData"* %265 to i64
  br i1 %274, label %276, label %280

276:                                              ; preds = %263
  %277 = bitcast %"struct.cc::SnapAreaData"* %266 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %277, i8* nonnull align 8 %205, i64 40, i1 false) #19
  %278 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %266, i64 1
  %279 = ptrtoint %"struct.cc::SnapAreaData"* %278 to i64
  store i64 %279, i64* %209, align 8
  br label %324

280:                                              ; preds = %263
  %281 = ptrtoint %"struct.cc::SnapAreaData"* %266 to i64
  %282 = load i64, i64* %183, align 8
  %283 = sub i64 %281, %282
  %284 = sdiv exact i64 %283, 40
  %285 = add nsw i64 %284, 1
  %286 = icmp ugt i64 %285, 461168601842738790
  br i1 %286, label %287, label %289

287:                                              ; preds = %280
  %288 = bitcast %"class.std::__1::vector"* %15 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %288) #21
  unreachable

289:                                              ; preds = %280
  %290 = sub i64 %275, %282
  %291 = sdiv exact i64 %290, 40
  %292 = icmp ult i64 %291, 230584300921369395
  br i1 %292, label %293, label %298

293:                                              ; preds = %289
  %294 = shl nsw i64 %291, 1
  %295 = icmp ult i64 %294, %285
  %296 = select i1 %295, i64 %285, i64 %294
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %303, label %298

298:                                              ; preds = %293, %289
  %299 = phi i64 [ %296, %293 ], [ 461168601842738790, %289 ]
  %300 = mul i64 %299, 40
  %301 = call i8* @_Znwm(i64 %300) #18
  %302 = bitcast i8* %301 to %"struct.cc::SnapAreaData"*
  br label %303

303:                                              ; preds = %298, %293
  %304 = phi i64 [ %299, %298 ], [ 0, %293 ]
  %305 = phi %"struct.cc::SnapAreaData"* [ %302, %298 ], [ null, %293 ]
  %306 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %305, i64 %284
  %307 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %305, i64 %304
  %308 = ptrtoint %"struct.cc::SnapAreaData"* %307 to i64
  %309 = bitcast %"struct.cc::SnapAreaData"* %306 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %309, i8* nonnull align 8 %205, i64 40, i1 false) #19
  %310 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %306, i64 1
  %311 = ptrtoint %"struct.cc::SnapAreaData"* %310 to i64
  %312 = sub i64 %264, %282
  %313 = sdiv exact i64 %312, -40
  %314 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %306, i64 %313
  %315 = ptrtoint %"struct.cc::SnapAreaData"* %314 to i64
  %316 = icmp sgt i64 %312, 0
  br i1 %316, label %317, label %320

317:                                              ; preds = %303
  %318 = bitcast %"struct.cc::SnapAreaData"* %314 to i8*
  %319 = inttoptr i64 %282 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %318, i8* align 8 %319, i64 %312, i1 false) #19
  br label %320

320:                                              ; preds = %317, %303
  store i64 %315, i64* %183, align 8
  store i64 %311, i64* %209, align 8
  store i64 %308, i64* %182, align 8
  %321 = icmp eq i64 %282, 0
  br i1 %321, label %324, label %322

322:                                              ; preds = %320
  %323 = inttoptr i64 %282 to i8*
  call void @_ZdlPv(i8* %323) #18
  br label %324

324:                                              ; preds = %276, %320, %322
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %205) #19
  %325 = add nuw i64 %268, 1
  %326 = load i64, i64* %176, align 8
  %327 = load i64, i64* %178, align 8
  %328 = sub i64 %326, %327
  %329 = sdiv exact i64 %328, 40
  %330 = icmp ult i64 %325, %329
  br i1 %330, label %331, label %210

331:                                              ; preds = %324
  %332 = load %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"** %172, align 8
  %333 = load %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"** %173, align 8
  %334 = ptrtoint %"struct.cc::SnapAreaData"* %332 to i64
  br label %263

335:                                              ; preds = %526, %213
  %336 = bitcast %"class.WTF::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %336) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %22, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.39, i64 0, i64 0), i64 9) #19
  call void @_ZN5blink8protocol15DictionaryValue8setArrayERKN3WTF6StringENSt3__110unique_ptrINS0_9ListValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %57, %"class.WTF::String"* nonnull dereferenceable(8) %22, %"class.blink::protocol::ListValue"* nonnull %169) #19
  %337 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  %338 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %337, align 8
  %339 = icmp eq %"class.WTF::StringImpl"* %338, null
  br i1 %339, label %353, label %340

340:                                              ; preds = %335
  %341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %338, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %342 = load atomic i32, i32* %341 monotonic, align 4
  %343 = and i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %338, i64 0, i32 0
  %346 = load i32, i32* %345, align 4
  br i1 %344, label %347, label %349

347:                                              ; preds = %340
  %348 = add i32 %346, -1
  store i32 %348, i32* %345, align 4
  br label %349

349:                                              ; preds = %347, %340
  %350 = phi i32 [ %348, %347 ], [ %346, %340 ]
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %352, label %353

352:                                              ; preds = %349
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %338) #19
  br label %353

353:                                              ; preds = %335, %349, %352
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %336) #19
  %354 = load %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"** %171, align 8
  %355 = icmp eq %"struct.cc::SnapAreaData"* %354, null
  br i1 %355, label %360, label %356

356:                                              ; preds = %353
  %357 = ptrtoint %"struct.cc::SnapAreaData"* %354 to i64
  %358 = bitcast %"struct.cc::SnapAreaData"** %172 to i64*
  store i64 %357, i64* %358, align 8
  %359 = bitcast %"struct.cc::SnapAreaData"* %354 to i8*
  call void @_ZdlPv(i8* %359) #18
  br label %360

360:                                              ; preds = %353, %356
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %170) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %122) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %74) #19
  br label %534

361:                                              ; preds = %219, %526
  %362 = phi %"struct.cc::SnapAreaData"* [ %216, %219 ], [ %527, %526 ]
  %363 = call i8* @_Znwm(i64 80) #18
  %364 = bitcast i8* %363 to %"class.blink::protocol::DictionaryValue"*
  call void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"* nonnull %364) #19
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %220) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %260, i8 -1, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %221) #19
  %365 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %362, i64 0, i32 1
  %366 = bitcast %"class.gfx::RectF"* %365 to i32*
  %367 = load i32, i32* %366, align 4, !noalias !115
  %368 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %362, i64 0, i32 1, i32 0, i32 1
  %369 = bitcast float* %368 to i32*
  %370 = load i32, i32* %369, align 4, !noalias !115
  %371 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %362, i64 0, i32 1, i32 1, i32 0
  %372 = load float, float* %371, align 4, !noalias !115
  %373 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %362, i64 0, i32 1, i32 1, i32 1
  %374 = load float, float* %373, align 4, !noalias !115
  store i32 %367, i32* %222, align 4, !alias.scope !115
  store i32 %370, i32* %224, align 4, !alias.scope !115
  %375 = bitcast i32 %367 to float
  %376 = fadd float %372, %375
  store float %376, float* %225, align 4, !alias.scope !115
  store i32 %370, i32* %227, align 4, !alias.scope !115
  %377 = bitcast i32 %370 to float
  %378 = fadd float %374, %377
  store float %376, float* %228, align 4, !alias.scope !115
  store float %378, float* %229, align 4, !alias.scope !115
  store i32 %367, i32* %231, align 4, !alias.scope !115
  store float %378, float* %232, align 4, !alias.scope !115
  call void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* nonnull sret %17, %"class.blink::LayoutObject"* %75, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %18, %"class.blink::LayoutBoxModelObject"* null, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %221) #19
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %233) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #19
  %379 = call fastcc %"class.blink::protocol::ListValue"* @_ZN5blink12_GLOBAL__N_117BuildPathFromQuadEPKNS_14LocalFrameViewENS_9FloatQuadE(%"class.blink::LocalFrameView"* nonnull %49, %"class.blink::FloatQuad"* nonnull byval(%"class.blink::FloatQuad") align 8 %17)
  %380 = bitcast %"class.blink::protocol::ListValue"* %379 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %364, %"class.WTF::String"* nonnull dereferenceable(8) %19, %"class.blink::protocol::Value"* %380) #19
  %381 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %234, align 8
  %382 = icmp eq %"class.WTF::StringImpl"* %381, null
  br i1 %382, label %396, label %383

383:                                              ; preds = %361
  %384 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %381, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %385 = load atomic i32, i32* %384 monotonic, align 4
  %386 = and i32 %385, 2
  %387 = icmp eq i32 %386, 0
  %388 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %381, i64 0, i32 0
  %389 = load i32, i32* %388, align 4
  br i1 %387, label %390, label %392

390:                                              ; preds = %383
  %391 = add i32 %389, -1
  store i32 %391, i32* %388, align 4
  br label %392

392:                                              ; preds = %390, %383
  %393 = phi i32 [ %391, %390 ], [ %389, %383 ]
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %395, label %396

395:                                              ; preds = %392
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %381) #19
  br label %396

396:                                              ; preds = %361, %392, %395
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %233) #19
  %397 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %362, i64 0, i32 3, i32 0
  %398 = load i64, i64* %397, align 8
  %399 = call i32 @_ZN5blink32DOMNodeIdFromCompositorElementIdEN2cc9ElementIdE(i64 %398) #19
  %400 = call %"class.blink::Node"* @_ZN5blink10DOMNodeIds9NodeForIdEi(i32 %399) #19
  %401 = icmp eq %"class.blink::Node"* %400, null
  br i1 %401, label %521, label %402

402:                                              ; preds = %396
  %403 = call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* nonnull %400) #19
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %235) #19
  %404 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %403, i64 0, i32 0, i32 0
  %405 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %403, i64 0, i32 2, i32 1
  %406 = bitcast %"class.blink::LayoutSize"* %405 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %261, i8 -1, i64 32, i1 false)
  %407 = load i64, i64* %406, align 4
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %236) #19, !noalias !118
  %408 = trunc i64 %407 to i32
  %409 = sitofp i32 %408 to float
  %410 = fmul float %409, 1.562500e-02
  %411 = lshr i64 %407, 32
  %412 = trunc i64 %411 to i32
  %413 = sitofp i32 %412 to float
  %414 = fmul float %413, 1.562500e-02
  store <2 x float> zeroinitializer, <2 x float>* %237, align 8, !noalias !118
  %415 = fadd float %410, 0.000000e+00
  store float %415, float* %238, align 8, !noalias !118
  store float 0.000000e+00, float* %239, align 4, !noalias !118
  %416 = fadd float %414, 0.000000e+00
  store float %415, float* %240, align 8, !noalias !118
  store float %416, float* %241, align 4, !noalias !118
  store float 0.000000e+00, float* %242, align 8, !noalias !118
  store float %416, float* %243, align 4, !noalias !118
  call void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* nonnull sret %20, %"class.blink::LayoutObject"* %404, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %2, %"class.blink::LayoutBoxModelObject"* null, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %236) #19, !noalias !118
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %244) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %21, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.38, i64 0, i64 0), i64 9) #19
  %417 = call fastcc %"class.blink::protocol::ListValue"* @_ZN5blink12_GLOBAL__N_117BuildPathFromQuadEPKNS_14LocalFrameViewENS_9FloatQuadE(%"class.blink::LocalFrameView"* nonnull %49, %"class.blink::FloatQuad"* nonnull byval(%"class.blink::FloatQuad") align 8 %20)
  %418 = bitcast %"class.blink::protocol::ListValue"* %417 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* nonnull %364, %"class.WTF::String"* nonnull dereferenceable(8) %21, %"class.blink::protocol::Value"* %418) #19
  %419 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %245, align 8
  %420 = icmp eq %"class.WTF::StringImpl"* %419, null
  br i1 %420, label %434, label %421

421:                                              ; preds = %402
  %422 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %419, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %423 = load atomic i32, i32* %422 monotonic, align 4
  %424 = and i32 %423, 2
  %425 = icmp eq i32 %424, 0
  %426 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %419, i64 0, i32 0
  %427 = load i32, i32* %426, align 4
  br i1 %425, label %428, label %430

428:                                              ; preds = %421
  %429 = add i32 %427, -1
  store i32 %429, i32* %426, align 4
  br label %430

430:                                              ; preds = %428, %421
  %431 = phi i32 [ %429, %428 ], [ %427, %421 ]
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %433, label %434

433:                                              ; preds = %430
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %419) #19
  br label %434

434:                                              ; preds = %402, %430, %433
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %244) #19
  %435 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %362, i64 0, i32 0, i32 1
  switch i32 %167, label %519 [
    i32 3, label %436
    i32 0, label %436
    i32 2, label %436
    i32 4, label %478
    i32 1, label %478
  ]

436:                                              ; preds = %434, %434, %434
  %437 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %362, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %246) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.165, i64 0, i64 0), i64 10) #19
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %247) #19
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %248) #19
  %438 = load i32, i32* %437, align 4
  switch i32 %438, label %443 [
    i32 0, label %439
    i32 1, label %440
    i32 2, label %441
    i32 3, label %442
  ]

439:                                              ; preds = %436
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.167, i64 0, i64 0), i64 4) #19
  br label %444

440:                                              ; preds = %436
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.168, i64 0, i64 0), i64 5) #19
  br label %444

441:                                              ; preds = %436
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.169, i64 0, i64 0), i64 3) #19
  br label %444

442:                                              ; preds = %436
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.170, i64 0, i64 0), i64 6) #19
  br label %444

443:                                              ; preds = %436
  unreachable

444:                                              ; preds = %442, %441, %440, %439
  %445 = load i64, i64* %249, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %248) #19
  store i64 %445, i64* %251, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %364, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull dereferenceable(8) %7) #19
  %446 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %250, align 8
  %447 = icmp eq %"class.WTF::StringImpl"* %446, null
  br i1 %447, label %461, label %448

448:                                              ; preds = %444
  %449 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %446, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %450 = load atomic i32, i32* %449 monotonic, align 4
  %451 = and i32 %450, 2
  %452 = icmp eq i32 %451, 0
  %453 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %446, i64 0, i32 0
  %454 = load i32, i32* %453, align 4
  br i1 %452, label %455, label %457

455:                                              ; preds = %448
  %456 = add i32 %454, -1
  store i32 %456, i32* %453, align 4
  br label %457

457:                                              ; preds = %455, %448
  %458 = phi i32 [ %456, %455 ], [ %454, %448 ]
  %459 = icmp eq i32 %458, 0
  br i1 %459, label %460, label %461

460:                                              ; preds = %457
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %446) #19
  br label %461

461:                                              ; preds = %460, %457, %444
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %247) #19
  %462 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %252, align 8
  %463 = icmp eq %"class.WTF::StringImpl"* %462, null
  br i1 %463, label %477, label %464

464:                                              ; preds = %461
  %465 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %462, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %466 = load atomic i32, i32* %465 monotonic, align 4
  %467 = and i32 %466, 2
  %468 = icmp eq i32 %467, 0
  %469 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %462, i64 0, i32 0
  %470 = load i32, i32* %469, align 4
  br i1 %468, label %471, label %473

471:                                              ; preds = %464
  %472 = add i32 %470, -1
  store i32 %472, i32* %469, align 4
  br label %473

473:                                              ; preds = %471, %464
  %474 = phi i32 [ %472, %471 ], [ %470, %464 ]
  %475 = icmp eq i32 %474, 0
  br i1 %475, label %476, label %477

476:                                              ; preds = %473
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %462) #19
  br label %477

477:                                              ; preds = %476, %473, %461
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %246) #19
  br i1 %262, label %478, label %519

478:                                              ; preds = %477, %434, %434
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %253) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.166, i64 0, i64 0), i64 11) #19
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %254) #19
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %255) #19
  %479 = load i32, i32* %435, align 4
  switch i32 %479, label %484 [
    i32 0, label %480
    i32 1, label %481
    i32 2, label %482
    i32 3, label %483
  ]

480:                                              ; preds = %478
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.167, i64 0, i64 0), i64 4) #19
  br label %485

481:                                              ; preds = %478
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.168, i64 0, i64 0), i64 5) #19
  br label %485

482:                                              ; preds = %478
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.169, i64 0, i64 0), i64 3) #19
  br label %485

483:                                              ; preds = %478
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.170, i64 0, i64 0), i64 6) #19
  br label %485

484:                                              ; preds = %478
  unreachable

485:                                              ; preds = %483, %482, %481, %480
  %486 = load i64, i64* %256, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %255) #19
  store i64 %486, i64* %258, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %364, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::String"* nonnull dereferenceable(8) %9) #19
  %487 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %257, align 8
  %488 = icmp eq %"class.WTF::StringImpl"* %487, null
  br i1 %488, label %502, label %489

489:                                              ; preds = %485
  %490 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %487, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %491 = load atomic i32, i32* %490 monotonic, align 4
  %492 = and i32 %491, 2
  %493 = icmp eq i32 %492, 0
  %494 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %487, i64 0, i32 0
  %495 = load i32, i32* %494, align 4
  br i1 %493, label %496, label %498

496:                                              ; preds = %489
  %497 = add i32 %495, -1
  store i32 %497, i32* %494, align 4
  br label %498

498:                                              ; preds = %496, %489
  %499 = phi i32 [ %497, %496 ], [ %495, %489 ]
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %501, label %502

501:                                              ; preds = %498
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %487) #19
  br label %502

502:                                              ; preds = %501, %498, %485
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %254) #19
  %503 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %259, align 8
  %504 = icmp eq %"class.WTF::StringImpl"* %503, null
  br i1 %504, label %518, label %505

505:                                              ; preds = %502
  %506 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %503, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %507 = load atomic i32, i32* %506 monotonic, align 4
  %508 = and i32 %507, 2
  %509 = icmp eq i32 %508, 0
  %510 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %503, i64 0, i32 0
  %511 = load i32, i32* %510, align 4
  br i1 %509, label %512, label %514

512:                                              ; preds = %505
  %513 = add i32 %511, -1
  store i32 %513, i32* %510, align 4
  br label %514

514:                                              ; preds = %512, %505
  %515 = phi i32 [ %513, %512 ], [ %511, %505 ]
  %516 = icmp eq i32 %515, 0
  br i1 %516, label %517, label %518

517:                                              ; preds = %514
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %503) #19
  br label %518

518:                                              ; preds = %517, %514, %502
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %253) #19
  br label %519

519:                                              ; preds = %477, %434, %518
  %520 = bitcast i8* %363 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol9ListValue9pushValueENSt3__110unique_ptrINS0_5ValueENS2_14default_deleteIS4_EEEE(%"class.blink::protocol::ListValue"* nonnull %169, %"class.blink::protocol::Value"* nonnull %520) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %235) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %220) #19
  br label %526

521:                                              ; preds = %396
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %220) #19
  %522 = bitcast i8* %363 to void (%"class.blink::protocol::DictionaryValue"*)***
  %523 = load void (%"class.blink::protocol::DictionaryValue"*)**, void (%"class.blink::protocol::DictionaryValue"*)*** %522, align 8
  %524 = getelementptr inbounds void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %523, i64 2
  %525 = load void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %524, align 8
  call void %525(%"class.blink::protocol::DictionaryValue"* nonnull %364) #19
  br label %526

526:                                              ; preds = %521, %519
  %527 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %362, i64 1
  %528 = icmp eq %"struct.cc::SnapAreaData"* %527, %217
  br i1 %528, label %335, label %361

529:                                              ; preds = %55
  %530 = bitcast i8* %56 to void (%"class.blink::protocol::DictionaryValue"*)***
  %531 = load void (%"class.blink::protocol::DictionaryValue"*)**, void (%"class.blink::protocol::DictionaryValue"*)*** %530, align 8
  %532 = getelementptr inbounds void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %531, i64 2
  %533 = load void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %532, align 8
  tail call void %533(%"class.blink::protocol::DictionaryValue"* nonnull %57) #19
  br label %534

534:                                              ; preds = %529, %360, %51, %45, %42, %1
  %535 = phi %"class.blink::protocol::DictionaryValue"* [ null, %1 ], [ null, %42 ], [ null, %45 ], [ null, %51 ], [ %57, %360 ], [ null, %529 ]
  ret %"class.blink::protocol::DictionaryValue"* %535
}

declare %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"*) local_unnamed_addr #3

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #3

declare %"class.cc::SnapContainerData"* @_ZNK5blink24PaintLayerScrollableArea20GetSnapContainerDataEv(%"class.blink::PaintLayerScrollableArea"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::protocol::ListValue"* @_ZN5blink12_GLOBAL__N_117BuildPathFromQuadEPKNS_14LocalFrameViewENS_9FloatQuadE(%"class.blink::LocalFrameView"*, %"class.blink::FloatQuad"* nocapture byval(%"class.blink::FloatQuad") align 8) unnamed_addr #4 {
  %3 = alloca <2 x float>, align 8
  %4 = alloca <2 x float>, align 8
  %5 = alloca <2 x float>, align 8
  %6 = alloca <2 x float>, align 8
  %7 = alloca %"class.blink::Path", align 8
  %8 = alloca %"class.blink::AffineTransform", align 8
  %9 = alloca <2 x float>, align 8
  %10 = alloca <2 x float>, align 8
  %11 = alloca <2 x float>, align 8
  %12 = alloca <2 x float>, align 8
  %13 = alloca <2 x float>, align 8
  %14 = alloca <2 x float>, align 8
  %15 = alloca <2 x float>, align 8
  %16 = alloca <2 x float>, align 8
  %17 = alloca %"class.blink::(anonymous namespace)::PathBuilder", align 8
  %18 = alloca %"class.blink::Path", align 8
  %19 = bitcast %"class.blink::FloatQuad"* %1 to <2 x float>*
  %20 = bitcast %"class.blink::FloatQuad"* %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = bitcast <2 x float>* %5 to %"class.blink::FloatPoint"*
  %24 = bitcast <2 x float>* %6 to %"class.blink::FloatPoint"*
  %25 = bitcast <2 x float>* %5 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast <2 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #19
  %27 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %0, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %23) #19
  store <2 x float> %27, <2 x float>* %6, align 8
  %28 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %0) #19
  %29 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %28) #19
  %30 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %29, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %24) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store <2 x float> %30, <2 x float>* %19, align 8
  %31 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %1, i64 0, i32 1
  %32 = bitcast %"class.blink::FloatPoint"* %31 to <2 x float>*
  %33 = bitcast %"class.blink::FloatPoint"* %31 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = bitcast <2 x float>* %3 to %"class.blink::FloatPoint"*
  %37 = bitcast <2 x float>* %4 to %"class.blink::FloatPoint"*
  %38 = bitcast <2 x float>* %3 to i64*
  store i64 %34, i64* %38, align 8
  %39 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #19
  %40 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %0, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %36) #19
  store <2 x float> %40, <2 x float>* %4, align 8
  %41 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %0) #19
  %42 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %41) #19
  %43 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %42, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %37) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  store <2 x float> %43, <2 x float>* %32, align 8
  %44 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %1, i64 0, i32 2
  %45 = bitcast %"class.blink::FloatPoint"* %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast <2 x float>* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #19
  %48 = bitcast <2 x float>* %15 to %"class.blink::FloatPoint"*
  %49 = bitcast <2 x float>* %16 to %"class.blink::FloatPoint"*
  %50 = bitcast <2 x float>* %15 to i64*
  store i64 %46, i64* %50, align 8
  %51 = bitcast <2 x float>* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #19
  %52 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %0, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %48) #19
  store <2 x float> %52, <2 x float>* %16, align 8
  %53 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %0) #19
  %54 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %53) #19
  %55 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %54, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %49) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #19
  %56 = bitcast %"class.blink::FloatPoint"* %44 to <2 x float>*
  store <2 x float> %55, <2 x float>* %56, align 8
  %57 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %1, i64 0, i32 3
  %58 = bitcast %"class.blink::FloatPoint"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast <2 x float>* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #19
  %61 = bitcast <2 x float>* %13 to %"class.blink::FloatPoint"*
  %62 = bitcast <2 x float>* %14 to %"class.blink::FloatPoint"*
  %63 = bitcast <2 x float>* %13 to i64*
  store i64 %59, i64* %63, align 8
  %64 = bitcast <2 x float>* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #19
  %65 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %0, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %61) #19
  store <2 x float> %65, <2 x float>* %14, align 8
  %66 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %0) #19
  %67 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %66) #19
  %68 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %67, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %62) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #19
  %69 = bitcast %"class.blink::(anonymous namespace)::PathBuilder"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #19
  %70 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %17, i64 0, i32 0
  %71 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %17, i64 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_111PathBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %72 = call i8* @_Znwm(i64 40) #18
  %73 = bitcast i8* %72 to %"class.blink::protocol::ListValue"*
  call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %73) #19
  %74 = bitcast %"class.blink::protocol::ListValue"** %71 to i8**
  store i8* %72, i8** %74, align 8
  %75 = bitcast %"class.blink::Path"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #19
  %76 = bitcast <2 x float>* %9 to %"class.blink::FloatPoint"*
  %77 = bitcast <2 x float>* %10 to %"class.blink::FloatPoint"*
  %78 = bitcast <2 x float>* %11 to %"class.blink::FloatPoint"*
  %79 = bitcast <2 x float>* %12 to %"class.blink::FloatPoint"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 -86, i64 16, i1 false) #19, !alias.scope !123
  call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* nonnull %18) #19
  %80 = bitcast <2 x float>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #19, !noalias !123
  store <2 x float> %30, <2 x float>* %9, align 8, !noalias !123
  call void @_ZN5blink4Path6MoveToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %18, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %76) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #19, !noalias !123
  %81 = bitcast <2 x float>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #19, !noalias !123
  store <2 x float> %43, <2 x float>* %10, align 8, !noalias !123
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %18, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %77) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #19, !noalias !123
  %82 = bitcast <2 x float>* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #19, !noalias !123
  store <2 x float> %55, <2 x float>* %11, align 8, !noalias !123
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %18, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %78) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #19, !noalias !123
  %83 = bitcast <2 x float>* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #19, !noalias !123
  store <2 x float> %68, <2 x float>* %12, align 8, !noalias !123
  call void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"* nonnull %18, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %79) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #19, !noalias !123
  call void @_ZN5blink4Path12CloseSubpathEv(%"class.blink::Path"* nonnull %18) #19
  %84 = call %"class.blink::ChromeClient"* @_ZNK5blink14LocalFrameView15GetChromeClientEv(%"class.blink::LocalFrameView"* %0) #19
  %85 = getelementptr inbounds %"class.blink::LocalFrameView", %"class.blink::LocalFrameView"* %0, i64 0, i32 3, i32 0, i32 0
  %86 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %85, align 8
  %87 = bitcast %"class.blink::ChromeClient"* %84 to float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)***
  %88 = load float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)**, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*** %87, align 8
  %89 = getelementptr inbounds float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)** %88, i64 3
  %90 = load float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)** %89, align 8
  %91 = call float %90(%"class.blink::ChromeClient"* %84, %"class.blink::LocalFrame"* %86, float 1.000000e+00) #19
  %92 = fdiv float 1.000000e+00, %91
  %93 = bitcast %"class.blink::Path"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 -86, i64 16, i1 false) #19
  call void @_ZN5blink4PathC1ERKS0_(%"class.blink::Path"* nonnull %7, %"class.blink::Path"* nonnull dereferenceable(16) %18) #19
  %94 = bitcast %"class.blink::AffineTransform"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %94) #19
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %8) #19
  %95 = fpext float %92 to double
  %96 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEd(%"class.blink::AffineTransform"* nonnull %8, double %95) #19
  call void @_ZN5blink4Path9TransformERKNS_15AffineTransformE(%"class.blink::Path"* nonnull %7, %"class.blink::AffineTransform"* dereferenceable(48) %96) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %94) #19
  call void @_ZNK5blink4Path5ApplyEPvPFvS1_PKNS_11PathElementEE(%"class.blink::Path"* nonnull %7, i8* nonnull %69, void (i8*, %"struct.blink::PathElement"*)* nonnull @_ZN5blink12_GLOBAL__N_111PathBuilder17AppendPathElementEPvPKNS_11PathElementE) #19
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #19
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %18) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #19
  %97 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %71, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #19
  ret %"class.blink::protocol::ListValue"* %97
}

declare void @_ZN3gfx5RectF6OffsetEff(%"class.gfx::RectF"*, float, float) local_unnamed_addr #3

declare %"class.blink::Node"* @_ZN5blink10DOMNodeIds9NodeForIdEi(i32) local_unnamed_addr #3

declare i32 @_ZN5blink32DOMNodeIdFromCompositorElementIdEN2cc9ElementIdE(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::protocol::DictionaryValue"* @_ZN5blink28InspectorScrollSnapHighlightEPNS_4NodeERKNS_43InspectorScrollSnapContainerHighlightConfigE(%"class.blink::Node"*, %"struct.blink::InspectorScrollSnapContainerHighlightConfig"* dereferenceable(56)) local_unnamed_addr #1 {
  %3 = alloca %"class.std::__1::unique_ptr.2440", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = bitcast %"class.std::__1::unique_ptr.2440"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #19
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.2440", %"class.std::__1::unique_ptr.2440"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = tail call %"class.blink::protocol::DictionaryValue"* @_ZN5blink22BuildSnapContainerInfoEPNS_4NodeE(%"class.blink::Node"* %0)
  store %"class.blink::protocol::DictionaryValue"* %12, %"class.blink::protocol::DictionaryValue"** %11, align 8
  %13 = icmp eq %"class.blink::protocol::DictionaryValue"* %12, null
  br i1 %13, label %97, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"struct.blink::InspectorScrollSnapContainerHighlightConfig", %"struct.blink::InspectorScrollSnapContainerHighlightConfig"* %1, i64 0, i32 0
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.40, i64 0, i64 0), i64 14) #19
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_121AppendLineStyleConfigERKN4absl8optionalINS_9LineStyleEEERNSt3__110unique_ptrINS_8protocol15DictionaryValueENS7_14default_deleteISA_EEEEN3WTF6StringE(%"class.absl::optional.2382"* dereferenceable(24) %15, %"class.std::__1::unique_ptr.2440"* nonnull dereferenceable(8) %3, %"class.WTF::StringImpl"* %17)
  %18 = getelementptr inbounds %"struct.blink::InspectorScrollSnapContainerHighlightConfig", %"struct.blink::InspectorScrollSnapContainerHighlightConfig"* %1, i64 0, i32 1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.41, i64 0, i64 0), i64 14) #19
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_121AppendLineStyleConfigERKN4absl8optionalINS_9LineStyleEEERNSt3__110unique_ptrINS_8protocol15DictionaryValueENS7_14default_deleteISA_EEEEN3WTF6StringE(%"class.absl::optional.2382"* dereferenceable(24) %18, %"class.std::__1::unique_ptr.2440"* nonnull dereferenceable(8) %3, %"class.WTF::StringImpl"* %20)
  %21 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42, i64 0, i64 0), i64 17) #19
  %22 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #19
  %23 = getelementptr inbounds %"struct.blink::InspectorScrollSnapContainerHighlightConfig", %"struct.blink::InspectorScrollSnapContainerHighlightConfig"* %1, i64 0, i32 2
  %24 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color10SerializedEv(%"class.blink::Color"* %23) #19
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %25, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %12, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull dereferenceable(8) %7) #19
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %14
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #19
  br label %41

41:                                               ; preds = %14, %37, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #19
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #19
  br label %58

58:                                               ; preds = %41, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #19
  %59 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.43, i64 0, i64 0), i64 18) #19
  %60 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #19
  %61 = getelementptr inbounds %"struct.blink::InspectorScrollSnapContainerHighlightConfig", %"struct.blink::InspectorScrollSnapContainerHighlightConfig"* %1, i64 0, i32 3
  %62 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color10SerializedEv(%"class.blink::Color"* %61) #19
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %63, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %12, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::String"* nonnull dereferenceable(8) %9) #19
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #19
  br label %79

79:                                               ; preds = %58, %75, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #19
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #19
  br label %96

96:                                               ; preds = %79, %92, %95
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #19
  store %"class.blink::protocol::DictionaryValue"* null, %"class.blink::protocol::DictionaryValue"** %11, align 8
  br label %97

97:                                               ; preds = %2, %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #19
  ret %"class.blink::protocol::DictionaryValue"* %12
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_121AppendLineStyleConfigERKN4absl8optionalINS_9LineStyleEEERNSt3__110unique_ptrINS_8protocol15DictionaryValueENS7_14default_deleteISA_EEEEN3WTF6StringE(%"class.absl::optional.2382"* dereferenceable(24), %"class.std::__1::unique_ptr.2440"* nocapture readonly dereferenceable(8), %"class.WTF::StringImpl"*) unnamed_addr #1 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %8, align 8
  %9 = getelementptr inbounds %"class.absl::optional.2382", %"class.absl::optional.2382"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !26
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %89, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.absl::optional.2382", %"class.absl::optional.2382"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %14 = getelementptr inbounds %"struct.blink::LineStyle", %"struct.blink::LineStyle"* %13, i64 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %89, label %17

17:                                               ; preds = %12
  %18 = tail call i8* @_Znwm(i64 80) #18
  %19 = bitcast i8* %18 to %"class.blink::protocol::DictionaryValue"*
  tail call void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"* nonnull %19) #19
  %20 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.171, i64 0, i64 0), i64 5) #19
  %21 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #19
  %22 = load i8, i8* %9, align 8, !range !26
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %17
  call void @llvm.trap() #19
  unreachable

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"struct.blink::LineStyle", %"struct.blink::LineStyle"* %13, i64 0, i32 0
  %27 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color10SerializedEv(%"class.blink::Color"* %26) #19
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %19, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #19
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #19
  br label %44

44:                                               ; preds = %25, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #19
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #19
  br label %61

61:                                               ; preds = %44, %57, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #19
  %62 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.172, i64 0, i64 0), i64 7) #19
  %63 = load i8, i8* %9, align 8, !range !26
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %61
  call void @llvm.trap() #19
  unreachable

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.absl::optional.2382", %"class.absl::optional.2382"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %19, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::String"* dereferenceable(8) %67) #19
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #19
  br label %84

84:                                               ; preds = %83, %80, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #19
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.2440", %"class.std::__1::unique_ptr.2440"* %1, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.blink::protocol::DictionaryValue"*, %"class.blink::protocol::DictionaryValue"** %85, align 8
  %87 = bitcast i8* %18 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* %86, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::protocol::Value"* nonnull %87) #19
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  br label %89

89:                                               ; preds = %12, %84, %3
  %90 = phi %"class.WTF::StringImpl"* [ %2, %3 ], [ %88, %84 ], [ %2, %12 ]
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %99, label %101

99:                                               ; preds = %92
  %100 = add i32 %98, -1
  store i32 %100, i32* %97, align 4
  br label %101

101:                                              ; preds = %99, %92
  %102 = phi i32 [ %100, %99 ], [ %98, %92 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #19
  br label %105

105:                                              ; preds = %89, %101, %104
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorHighlight13DefaultConfigEv(%"struct.blink::InspectorHighlightConfig"* noalias sret) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"struct.blink::InspectorGridHighlightConfig", align 4
  %5 = alloca %"struct.blink::InspectorFlexContainerHighlightConfig", align 8
  %6 = bitcast %"struct.blink::InspectorHighlightConfig"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 48, i1 false)
  %7 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %0, i64 0, i32 13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 40, i1 false) #19
  store i8 1, i8* %7, align 8
  %8 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %0, i64 0, i32 14, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %8, align 8
  %9 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %0, i64 0, i32 15
  store i32 1, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %0, i64 0, i32 16
  %11 = bitcast i32* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 28, i1 false) #19
  %12 = tail call i32 @_ZN5blink8MakeRGBAEiiii(i32 255, i32 0, i32 0, i32 0) #19
  %13 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %0, i64 0, i32 0, i32 0
  store i32 %12, i32* %13, align 8
  %14 = tail call i32 @_ZN5blink8MakeRGBAEiiii(i32 128, i32 0, i32 0, i32 0) #19
  %15 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %0, i64 0, i32 1, i32 0
  store i32 %14, i32* %15, align 4
  %16 = tail call i32 @_ZN5blink8MakeRGBAEiiii(i32 0, i32 255, i32 0, i32 0) #19
  %17 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %0, i64 0, i32 2, i32 0
  store i32 %16, i32* %17, align 8
  %18 = tail call i32 @_ZN5blink8MakeRGBAEiiii(i32 0, i32 0, i32 255, i32 0) #19
  %19 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %0, i64 0, i32 3, i32 0
  store i32 %18, i32* %19, align 4
  %20 = tail call i32 @_ZN5blink8MakeRGBAEiiii(i32 255, i32 255, i32 255, i32 0) #19
  %21 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %0, i64 0, i32 4, i32 0
  store i32 %20, i32* %21, align 8
  %22 = tail call i32 @_ZN5blink8MakeRGBAEiiii(i32 128, i32 128, i32 128, i32 0) #19
  %23 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %0, i64 0, i32 5, i32 0
  store i32 %22, i32* %23, align 4
  %24 = tail call i32 @_ZN5blink8MakeRGBAEiiii(i32 0, i32 0, i32 0, i32 0) #19
  %25 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %0, i64 0, i32 6, i32 0
  store i32 %24, i32* %25, align 8
  %26 = tail call i32 @_ZN5blink8MakeRGBAEiiii(i32 128, i32 128, i32 128, i32 0) #19
  %27 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %0, i64 0, i32 7, i32 0
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %0, i64 0, i32 9
  store i8 1, i8* %28, align 4
  %29 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %0, i64 0, i32 10
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %0, i64 0, i32 11
  store i8 1, i8* %30, align 2
  %31 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %0, i64 0, i32 12
  store i8 1, i8* %31, align 1
  %32 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %0, i64 0, i32 8, i32 0
  store i32 0, i32* %32, align 8
  store i32 1, i32* %9, align 8
  %33 = bitcast %"struct.blink::InspectorGridHighlightConfig"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %33) #19
  call void @_ZN5blink18InspectorHighlight17DefaultGridConfigEv(%"struct.blink::InspectorGridHighlightConfig"* nonnull sret %4)
  %34 = tail call noalias i8* @malloc(i64 48) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* nonnull align 4 %33, i64 48, i1 false) #19
  %35 = ptrtoint i8* %34 to i64
  %36 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %0, i64 0, i32 17
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.2373", %"class.std::__1::unique_ptr.2373"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"struct.blink::InspectorGridHighlightConfig"*, %"struct.blink::InspectorGridHighlightConfig"** %37, align 8
  %39 = bitcast %"class.std::__1::unique_ptr.2373"* %36 to i64*
  store i64 %35, i64* %39, align 8
  %40 = icmp eq %"struct.blink::InspectorGridHighlightConfig"* %38, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %1
  %42 = bitcast %"struct.blink::InspectorGridHighlightConfig"* %38 to i8*
  tail call void @free(i8* %42) #19
  br label %43

43:                                               ; preds = %41, %1
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %33) #19
  %44 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %44) #19
  call void @_ZN5blink18InspectorHighlight26DefaultFlexContainerConfigEv(%"struct.blink::InspectorFlexContainerHighlightConfig"* nonnull sret %5)
  %45 = tail call noalias i8* @malloc(i64 144) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 24, i1 false) #19
  %46 = load i8, i8* %44, align 8, !range !26
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %59, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds i8, i8* %45, i64 8
  %51 = bitcast i8* %50 to i32*
  %52 = load i32, i32* %49, align 8
  store i32 %52, i32* %51, align 8
  %53 = getelementptr inbounds i8, i8* %45, i64 16
  %54 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %54, i64 0, i32 0, i32 0
  %56 = bitcast %"class.WTF::String"* %54 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast i8* %53 to i64*
  store i64 %57, i64* %58, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %55, align 8
  store i8 1, i8* %45, align 8
  br label %59

59:                                               ; preds = %48, %43
  %60 = getelementptr inbounds i8, i8* %45, i64 24
  %61 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 24, i1 false) #19
  %62 = load i8, i8* %61, align 8, !range !26
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %75, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds i8, i8* %45, i64 32
  %67 = bitcast i8* %66 to i32*
  %68 = load i32, i32* %65, align 8
  store i32 %68, i32* %67, align 8
  %69 = getelementptr inbounds i8, i8* %45, i64 40
  %70 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %70, i64 0, i32 0, i32 0
  %72 = bitcast %"class.WTF::String"* %70 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast i8* %69 to i64*
  store i64 %73, i64* %74, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %71, align 8
  store i8 1, i8* %60, align 8
  br label %75

75:                                               ; preds = %64, %59
  %76 = getelementptr inbounds i8, i8* %45, i64 48
  %77 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 24, i1 false) #19
  %78 = load i8, i8* %77, align 8, !range !26
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %91, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds i8, i8* %45, i64 56
  %83 = bitcast i8* %82 to i32*
  %84 = load i32, i32* %81, align 8
  store i32 %84, i32* %83, align 8
  %85 = getelementptr inbounds i8, i8* %45, i64 64
  %86 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %86, i64 0, i32 0, i32 0
  %88 = bitcast %"class.WTF::String"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast i8* %85 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %87, align 8
  store i8 1, i8* %76, align 8
  br label %91

91:                                               ; preds = %80, %75
  %92 = getelementptr inbounds i8, i8* %45, i64 72
  %93 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %5, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 48, i1 false) #19
  %94 = getelementptr inbounds i8, i8* %45, i64 120
  %95 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %5, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 24, i1 false) #19
  %96 = load i8, i8* %95, align 8, !range !26
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %109, label %98

98:                                               ; preds = %91
  %99 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %5, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %100 = getelementptr inbounds i8, i8* %45, i64 128
  %101 = bitcast i8* %100 to i32*
  %102 = load i32, i32* %99, align 8
  store i32 %102, i32* %101, align 8
  %103 = getelementptr inbounds i8, i8* %45, i64 136
  %104 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %5, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast i8* %103 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  store i8 1, i8* %94, align 8
  br label %109

109:                                              ; preds = %91, %98
  %110 = ptrtoint i8* %45 to i64
  %111 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %0, i64 0, i32 18
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.2379", %"class.std::__1::unique_ptr.2379"* %111, i64 0, i32 0, i32 0, i32 0
  %113 = load %"struct.blink::InspectorFlexContainerHighlightConfig"*, %"struct.blink::InspectorFlexContainerHighlightConfig"** %112, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.2379"* %111 to i64*
  store i64 %110, i64* %114, align 8
  %115 = icmp eq %"struct.blink::InspectorFlexContainerHighlightConfig"* %113, null
  br i1 %115, label %118, label %116

116:                                              ; preds = %109
  tail call void @_ZN5blink37InspectorFlexContainerHighlightConfigD2Ev(%"struct.blink::InspectorFlexContainerHighlightConfig"* nonnull %113) #19
  %117 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @free(i8* %117) #19
  br label %118

118:                                              ; preds = %116, %109
  call void @_ZN5blink37InspectorFlexContainerHighlightConfigD2Ev(%"struct.blink::InspectorFlexContainerHighlightConfig"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %44) #19
  %119 = call i32 @_ZN5blink8MakeRGBAEiiii(i32 255, i32 0, i32 0, i32 0) #19, !noalias !126
  %120 = call i32 @_ZN5blink8MakeRGBAEiiii(i32 255, i32 0, i32 0, i32 0) #19, !noalias !126
  %121 = zext i32 %120 to i64
  %122 = shl nuw i64 %121, 32
  %123 = zext i32 %119 to i64
  %124 = or i64 %122, %123
  %125 = call i32 @_ZN5blink8MakeRGBAEiiii(i32 255, i32 0, i32 0, i32 0) #19, !noalias !126
  %126 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #19, !noalias !126
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0), i64 5) #19, !noalias !126
  %127 = bitcast %"class.WTF::String"* %3 to i64*
  %128 = load i64, i64* %127, align 8, !noalias !126
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #19, !noalias !126
  %129 = call i32 @_ZN5blink8MakeRGBAEiiii(i32 255, i32 0, i32 0, i32 0) #19, !noalias !126
  %130 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130) #19, !noalias !126
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0), i64 5) #19, !noalias !126
  %131 = bitcast %"class.WTF::String"* %2 to i64*
  %132 = load i64, i64* %131, align 8, !noalias !126
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #19, !noalias !126
  %133 = call noalias i8* @malloc(i64 64) #19
  store i8 1, i8* %133, align 8
  %134 = getelementptr inbounds i8, i8* %133, i64 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %134, i8 -86, i64 3, i1 false)
  %135 = getelementptr inbounds i8, i8* %133, i64 4
  %136 = bitcast i8* %135 to i64*
  store i64 %124, i64* %136, align 4
  %137 = getelementptr inbounds i8, i8* %133, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %137, i8 0, i64 16, i1 false) #19
  %138 = getelementptr inbounds i8, i8* %133, i64 24
  %139 = bitcast i8* %138 to i32*
  store i32 %125, i32* %139, align 8
  %140 = getelementptr inbounds i8, i8* %133, i64 32
  %141 = bitcast i8* %140 to i64*
  store i64 %128, i64* %141, align 8
  store i8 1, i8* %137, align 8
  %142 = getelementptr inbounds i8, i8* %133, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 16, i1 false) #19
  %143 = getelementptr inbounds i8, i8* %133, i64 48
  %144 = bitcast i8* %143 to i32*
  store i32 %129, i32* %144, align 8
  %145 = getelementptr inbounds i8, i8* %133, i64 56
  %146 = bitcast i8* %145 to i64*
  store i64 %132, i64* %146, align 8
  store i8 1, i8* %142, align 8
  %147 = ptrtoint i8* %133 to i64
  %148 = getelementptr inbounds %"struct.blink::InspectorHighlightConfig", %"struct.blink::InspectorHighlightConfig"* %0, i64 0, i32 19
  %149 = getelementptr inbounds %"class.std::__1::unique_ptr.2395", %"class.std::__1::unique_ptr.2395"* %148, i64 0, i32 0, i32 0, i32 0
  %150 = load %"struct.blink::InspectorFlexItemHighlightConfig"*, %"struct.blink::InspectorFlexItemHighlightConfig"** %149, align 8
  %151 = bitcast %"class.std::__1::unique_ptr.2395"* %148 to i64*
  store i64 %147, i64* %151, align 8
  %152 = icmp eq %"struct.blink::InspectorFlexItemHighlightConfig"* %150, null
  br i1 %152, label %198, label %153

153:                                              ; preds = %118
  %154 = getelementptr inbounds %"struct.blink::InspectorFlexItemHighlightConfig", %"struct.blink::InspectorFlexItemHighlightConfig"* %150, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %155 = load i8, i8* %154, align 8, !range !26
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %175, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"struct.blink::InspectorFlexItemHighlightConfig", %"struct.blink::InspectorFlexItemHighlightConfig"* %150, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %160, label %174, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  br i1 %165, label %168, label %170

168:                                              ; preds = %161
  %169 = add i32 %167, -1
  store i32 %169, i32* %166, align 4
  br label %170

170:                                              ; preds = %168, %161
  %171 = phi i32 [ %169, %168 ], [ %167, %161 ]
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %170
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %159) #19
  br label %174

174:                                              ; preds = %173, %170, %157
  store i8 0, i8* %154, align 8
  br label %175

175:                                              ; preds = %174, %153
  %176 = getelementptr inbounds %"struct.blink::InspectorFlexItemHighlightConfig", %"struct.blink::InspectorFlexItemHighlightConfig"* %150, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %177 = load i8, i8* %176, align 8, !range !26
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %196, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"struct.blink::InspectorFlexItemHighlightConfig", %"struct.blink::InspectorFlexItemHighlightConfig"* %150, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %181 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %180, align 8
  %182 = icmp eq %"class.WTF::StringImpl"* %181, null
  br i1 %182, label %196, label %183

183:                                              ; preds = %179
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load atomic i32, i32* %184 monotonic, align 4
  %186 = and i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 0
  %189 = load i32, i32* %188, align 4
  br i1 %187, label %190, label %192

190:                                              ; preds = %183
  %191 = add i32 %189, -1
  store i32 %191, i32* %188, align 4
  br label %192

192:                                              ; preds = %190, %183
  %193 = phi i32 [ %191, %190 ], [ %189, %183 ]
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %196

195:                                              ; preds = %192
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %181) #19
  br label %196

196:                                              ; preds = %175, %179, %192, %195
  %197 = getelementptr inbounds %"struct.blink::InspectorFlexItemHighlightConfig", %"struct.blink::InspectorFlexItemHighlightConfig"* %150, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @free(i8* %197) #19
  br label %198

198:                                              ; preds = %118, %196
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorHighlight17DefaultGridConfigEv(%"struct.blink::InspectorGridHighlightConfig"* noalias nocapture sret) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"struct.blink::InspectorGridHighlightConfig"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 -86, i64 48, i1 false)
  %3 = tail call i32 @_ZN5blink8MakeRGBAEiiii(i32 255, i32 0, i32 0, i32 0) #19
  %4 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %0, i64 0, i32 0, i32 0
  store i32 %3, i32* %4, align 4
  %5 = tail call i32 @_ZN5blink8MakeRGBAEiiii(i32 128, i32 0, i32 0, i32 0) #19
  %6 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %0, i64 0, i32 1, i32 0
  store i32 %5, i32* %6, align 4
  %7 = tail call i32 @_ZN5blink8MakeRGBAEiiii(i32 128, i32 0, i32 0, i32 0) #19
  %8 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %0, i64 0, i32 2, i32 0
  store i32 %7, i32* %8, align 4
  %9 = tail call i32 @_ZN5blink8MakeRGBAEiiii(i32 0, i32 255, i32 0, i32 0) #19
  %10 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %0, i64 0, i32 3, i32 0
  store i32 %9, i32* %10, align 4
  %11 = tail call i32 @_ZN5blink8MakeRGBAEiiii(i32 0, i32 0, i32 255, i32 0) #19
  %12 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %0, i64 0, i32 4, i32 0
  store i32 %11, i32* %12, align 4
  %13 = tail call i32 @_ZN5blink8MakeRGBAEiiii(i32 255, i32 255, i32 255, i32 0) #19
  %14 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %0, i64 0, i32 5, i32 0
  store i32 %13, i32* %14, align 4
  %15 = tail call i32 @_ZN5blink8MakeRGBAEiiii(i32 128, i32 128, i32 128, i32 0) #19
  %16 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %0, i64 0, i32 6, i32 0
  store i32 %15, i32* %16, align 4
  %17 = tail call i32 @_ZN5blink8MakeRGBAEiiii(i32 255, i32 0, i32 0, i32 0) #19
  %18 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %0, i64 0, i32 7, i32 0
  store i32 %17, i32* %18, align 4
  %19 = tail call i32 @_ZN5blink8MakeRGBAEiiii(i32 255, i32 0, i32 0, i32 0) #19
  %20 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %0, i64 0, i32 8, i32 0
  store i32 %19, i32* %20, align 4
  %21 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %0, i64 0, i32 9
  store i8 1, i8* %21, align 4
  %22 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %0, i64 0, i32 13
  %23 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %0, i64 0, i32 10
  %24 = bitcast i8* %22 to i32*
  store i32 16843009, i32* %24, align 4
  store i8 0, i8* %23, align 1
  %25 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %0, i64 0, i32 11
  store i8 1, i8* %25, align 2
  %26 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %0, i64 0, i32 12
  store i8 1, i8* %26, align 1
  %27 = getelementptr inbounds %"struct.blink::InspectorGridHighlightConfig", %"struct.blink::InspectorGridHighlightConfig"* %0, i64 0, i32 17
  store i8 1, i8* %27, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorHighlight26DefaultFlexContainerConfigEv(%"struct.blink::InspectorFlexContainerHighlightConfig"* noalias nocapture sret) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 144, i1 false)
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %12, align 4
  %13 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %13, align 8
  %14 = tail call i32 @_ZN5blink8MakeRGBAEiiii(i32 255, i32 0, i32 0, i32 0) #19
  %15 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0), i64 5) #19
  %16 = bitcast %"class.WTF::String"* %5 to i64*
  %17 = load i64, i64* %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #19
  %18 = load i8, i8* %6, align 8, !range !26
  %19 = icmp eq i8 %18, 0
  %20 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 %14, i32* %20, align 8
  %21 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %22 = bitcast %"class.WTF::String"* %21 to i64*
  br i1 %19, label %40, label %23

23:                                               ; preds = %1
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  store i64 %17, i64* %22, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %41, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %36
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #19
  br label %41

40:                                               ; preds = %1
  store i64 %17, i64* %22, align 8
  store i8 1, i8* %6, align 8
  br label %41

41:                                               ; preds = %23, %36, %39, %40
  %42 = call i32 @_ZN5blink8MakeRGBAEiiii(i32 255, i32 0, i32 0, i32 0) #19
  %43 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0), i64 5) #19
  %44 = bitcast %"class.WTF::String"* %4 to i64*
  %45 = load i64, i64* %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #19
  %46 = load i8, i8* %7, align 8, !range !26
  %47 = icmp eq i8 %46, 0
  %48 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 %42, i32* %48, align 8
  %49 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %50 = bitcast %"class.WTF::String"* %49 to i64*
  br i1 %47, label %68, label %51

51:                                               ; preds = %41
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  store i64 %45, i64* %50, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %69, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %64
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #19
  br label %69

68:                                               ; preds = %41
  store i64 %45, i64* %50, align 8
  store i8 1, i8* %7, align 8
  br label %69

69:                                               ; preds = %51, %64, %67, %68
  %70 = call i32 @_ZN5blink8MakeRGBAEiiii(i32 255, i32 0, i32 0, i32 0) #19
  %71 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0), i64 5) #19
  %72 = bitcast %"class.WTF::String"* %3 to i64*
  %73 = load i64, i64* %72, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #19
  %74 = load i8, i8* %8, align 8, !range !26
  %75 = icmp eq i8 %74, 0
  %76 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 %70, i32* %76, align 8
  %77 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %78 = bitcast %"class.WTF::String"* %77 to i64*
  br i1 %75, label %96, label %79

79:                                               ; preds = %69
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  store i64 %73, i64* %78, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %97, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %92
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #19
  br label %97

96:                                               ; preds = %69
  store i64 %73, i64* %78, align 8
  store i8 1, i8* %8, align 8
  br label %97

97:                                               ; preds = %79, %92, %95, %96
  %98 = call i32 @_ZN5blink8MakeRGBAEiiii(i32 255, i32 0, i32 0, i32 0) #19
  %99 = call i32 @_ZN5blink8MakeRGBAEiiii(i32 255, i32 0, i32 0, i32 0) #19
  %100 = zext i32 %99 to i64
  %101 = shl nuw i64 %100, 32
  %102 = zext i32 %98 to i64
  %103 = or i64 %101, %102
  store i8 1, i8* %9, align 8
  %104 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %105 = bitcast %union.anon.2391* %104 to i64*
  store i64 %103, i64* %105, align 4
  %106 = call i32 @_ZN5blink8MakeRGBAEiiii(i32 255, i32 0, i32 0, i32 0) #19
  %107 = call i32 @_ZN5blink8MakeRGBAEiiii(i32 255, i32 0, i32 0, i32 0) #19
  %108 = zext i32 %107 to i64
  %109 = shl nuw i64 %108, 32
  %110 = zext i32 %106 to i64
  %111 = or i64 %109, %110
  store i8 1, i8* %10, align 4
  %112 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %113 = bitcast %union.anon.2391* %112 to i64*
  store i64 %111, i64* %113, align 4
  %114 = call i32 @_ZN5blink8MakeRGBAEiiii(i32 255, i32 0, i32 0, i32 0) #19
  %115 = call i32 @_ZN5blink8MakeRGBAEiiii(i32 255, i32 0, i32 0, i32 0) #19
  %116 = zext i32 %115 to i64
  %117 = shl nuw i64 %116, 32
  %118 = zext i32 %114 to i64
  %119 = or i64 %117, %118
  store i8 1, i8* %11, align 8
  %120 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %121 = bitcast %union.anon.2391* %120 to i64*
  store i64 %119, i64* %121, align 4
  %122 = call i32 @_ZN5blink8MakeRGBAEiiii(i32 255, i32 0, i32 0, i32 0) #19
  %123 = call i32 @_ZN5blink8MakeRGBAEiiii(i32 255, i32 0, i32 0, i32 0) #19
  %124 = zext i32 %123 to i64
  %125 = shl nuw i64 %124, 32
  %126 = zext i32 %122 to i64
  %127 = or i64 %125, %126
  store i8 1, i8* %12, align 4
  %128 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %129 = bitcast %union.anon.2391* %128 to i64*
  store i64 %127, i64* %129, align 4
  %130 = call i32 @_ZN5blink8MakeRGBAEiiii(i32 255, i32 0, i32 0, i32 0) #19
  %131 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0), i64 5) #19
  %132 = bitcast %"class.WTF::String"* %2 to i64*
  %133 = load i64, i64* %132, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #19
  %134 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 %130, i32* %134, align 8
  %135 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %136 = bitcast %"class.WTF::String"* %135 to i64*
  store i64 %133, i64* %136, align 8
  store i8 1, i8* %13, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink37InspectorFlexContainerHighlightConfigD2Ev(%"struct.blink::InspectorFlexContainerHighlightConfig"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !26
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %23, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #19
  br label %22

22:                                               ; preds = %21, %18, %5
  store i8 0, i8* %2, align 8
  br label %23

23:                                               ; preds = %1, %22
  %24 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %25 = load i8, i8* %24, align 8, !range !26
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %45, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #19
  br label %44

44:                                               ; preds = %43, %40, %27
  store i8 0, i8* %24, align 8
  br label %45

45:                                               ; preds = %23, %44
  %46 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %47 = load i8, i8* %46, align 8, !range !26
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %67, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #19
  br label %66

66:                                               ; preds = %65, %62, %49
  store i8 0, i8* %46, align 8
  br label %67

67:                                               ; preds = %45, %66
  %68 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8, i8* %68, align 8, !range !26
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %89, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"struct.blink::InspectorFlexContainerHighlightConfig", %"struct.blink::InspectorFlexContainerHighlightConfig"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #19
  br label %88

88:                                               ; preds = %87, %84, %71
  store i8 0, i8* %68, align 8
  br label %89

89:                                               ; preds = %67, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorHighlight21DefaultFlexItemConfigEv(%"struct.blink::InspectorFlexItemHighlightConfig"* noalias nocapture sret) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"struct.blink::InspectorFlexItemHighlightConfig", %"struct.blink::InspectorFlexItemHighlightConfig"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 56, i1 false)
  %5 = getelementptr inbounds %"struct.blink::InspectorFlexItemHighlightConfig", %"struct.blink::InspectorFlexItemHighlightConfig"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.blink::InspectorFlexItemHighlightConfig", %"struct.blink::InspectorFlexItemHighlightConfig"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %7 = tail call i32 @_ZN5blink8MakeRGBAEiiii(i32 255, i32 0, i32 0, i32 0) #19
  %8 = tail call i32 @_ZN5blink8MakeRGBAEiiii(i32 255, i32 0, i32 0, i32 0) #19
  %9 = zext i32 %8 to i64
  %10 = shl nuw i64 %9, 32
  %11 = zext i32 %7 to i64
  %12 = or i64 %10, %11
  store i8 1, i8* %4, align 8
  %13 = getelementptr inbounds %"struct.blink::InspectorFlexItemHighlightConfig", %"struct.blink::InspectorFlexItemHighlightConfig"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast %union.anon.2391* %13 to i64*
  store i64 %12, i64* %14, align 4
  %15 = tail call i32 @_ZN5blink8MakeRGBAEiiii(i32 255, i32 0, i32 0, i32 0) #19
  %16 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0), i64 5) #19
  %17 = bitcast %"class.WTF::String"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #19
  %19 = getelementptr inbounds %"struct.blink::InspectorFlexItemHighlightConfig", %"struct.blink::InspectorFlexItemHighlightConfig"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 %15, i32* %19, align 8
  %20 = getelementptr inbounds %"struct.blink::InspectorFlexItemHighlightConfig", %"struct.blink::InspectorFlexItemHighlightConfig"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = bitcast %"class.WTF::String"* %20 to i64*
  store i64 %18, i64* %21, align 8
  store i8 1, i8* %5, align 8
  %22 = call i32 @_ZN5blink8MakeRGBAEiiii(i32 255, i32 0, i32 0, i32 0) #19
  %23 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0), i64 5) #19
  %24 = bitcast %"class.WTF::String"* %2 to i64*
  %25 = load i64, i64* %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #19
  %26 = getelementptr inbounds %"struct.blink::InspectorFlexItemHighlightConfig", %"struct.blink::InspectorFlexItemHighlightConfig"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 %22, i32* %26, align 8
  %27 = getelementptr inbounds %"struct.blink::InspectorFlexItemHighlightConfig", %"struct.blink::InspectorFlexItemHighlightConfig"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %28 = bitcast %"class.WTF::String"* %27 to i64*
  store i64 %25, i64* %28, align 8
  store i8 1, i8* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i32, %"class.WTF::StringImpl"* } @_ZN5blink18InspectorHighlight16DefaultLineStyleEv() local_unnamed_addr #1 align 2 {
  %1 = alloca %"class.WTF::String", align 8
  %2 = tail call i32 @_ZN5blink8MakeRGBAEiiii(i32 255, i32 0, i32 0, i32 0) #19
  %3 = bitcast %"class.WTF::String"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0), i64 5) #19
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  %6 = insertvalue { i32, %"class.WTF::StringImpl"* } undef, i32 %2, 0
  %7 = insertvalue { i32, %"class.WTF::StringImpl"* } %6, %"class.WTF::StringImpl"* %5, 1
  ret { i32, %"class.WTF::StringImpl"* } %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink18InspectorHighlight15DefaultBoxStyleEv() local_unnamed_addr #1 align 2 {
  %1 = tail call i32 @_ZN5blink8MakeRGBAEiiii(i32 255, i32 0, i32 0, i32 0) #19
  %2 = tail call i32 @_ZN5blink8MakeRGBAEiiii(i32 255, i32 0, i32 0, i32 0) #19
  %3 = zext i32 %2 to i64
  %4 = shl nuw i64 %3, 32
  %5 = zext i32 %1 to i64
  %6 = or i64 %4, %5
  ret i64 %6
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"*) unnamed_addr #3

declare %"class.blink::ChromeClient"* @_ZNK5blink14LocalFrameView15GetChromeClientEv(%"class.blink::LocalFrameView"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 1190036353683150593851392
  %8 = icmp eq i160 %7, 340010386766614455386112
  br i1 %8, label %39, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 8589934592
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %17 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #19
  %18 = icmp eq %"class.blink::PaintLayerScrollableArea"* %17, null
  br i1 %18, label %53, label %19

19:                                               ; preds = %15
  %20 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #19
  %21 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 3
  %22 = load i8, i8* %21, align 8
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 1, i32 0, i32 0
  %27 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %26, align 8
  %28 = icmp eq %"class.blink::Scrollbar"* %27, null
  br i1 %28, label %29, label %53

29:                                               ; preds = %25, %19
  %30 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #19
  %31 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 3
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, 2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %36, align 8
  %38 = icmp eq %"class.blink::Scrollbar"* %37, null
  br i1 %38, label %39, label %53

39:                                               ; preds = %1, %9, %29, %35
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = and i160 %43, 270215977642229760
  %45 = icmp eq i160 %44, 0
  br i1 %45, label %46, label %53

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %48 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %49 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %48, align 8
  %50 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %49, i64 124
  %51 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %50, align 8
  %52 = tail call i32 %51(%"class.blink::LayoutBoxModelObject"* %47) #19
  br label %70

53:                                               ; preds = %15, %25, %35, %39
  %54 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %55 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %56 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %55, align 8
  %57 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %56, i64 124
  %58 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %57, align 8
  %59 = tail call i32 %58(%"class.blink::LayoutBoxModelObject"* %54) #19
  %60 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 1, i32 0, i32 1) #19
  %61 = extractvalue { i64, i64 } %60, 1
  %62 = lshr i64 %61, 32
  %63 = trunc i64 %62 to i32
  %64 = icmp slt i32 %63, 0
  %65 = select i1 %64, i32 -2147483648, i32 2147483647
  %66 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %59, i32 %63) #19
  %67 = extractvalue { i32, i1 } %66, 1
  %68 = extractvalue { i32, i1 } %66, 0
  %69 = select i1 %67, i32 %65, i32 %68, !prof !2
  br label %70

70:                                               ; preds = %53, %46
  %71 = phi i32 [ %52, %46 ], [ %69, %53 ]
  ret i32 %71
}

declare { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox9ClientTopEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 1190036353683150593851392
  %8 = icmp eq i160 %7, 340010386766614455386112
  br i1 %8, label %39, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 8589934592
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %17 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #19
  %18 = icmp eq %"class.blink::PaintLayerScrollableArea"* %17, null
  br i1 %18, label %53, label %19

19:                                               ; preds = %15
  %20 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #19
  %21 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 3
  %22 = load i8, i8* %21, align 8
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 1, i32 0, i32 0
  %27 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %26, align 8
  %28 = icmp eq %"class.blink::Scrollbar"* %27, null
  br i1 %28, label %29, label %53

29:                                               ; preds = %25, %19
  %30 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #19
  %31 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 3
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, 2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %36, align 8
  %38 = icmp eq %"class.blink::Scrollbar"* %37, null
  br i1 %38, label %39, label %53

39:                                               ; preds = %1, %9, %29, %35
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = and i160 %43, 270215977642229760
  %45 = icmp eq i160 %44, 0
  br i1 %45, label %46, label %53

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %48 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %49 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %48, align 8
  %50 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %49, i64 122
  %51 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %50, align 8
  %52 = tail call i32 %51(%"class.blink::LayoutBoxModelObject"* %47) #19
  br label %69

53:                                               ; preds = %15, %25, %35, %39
  %54 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %55 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %56 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %55, align 8
  %57 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %56, i64 122
  %58 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %57, align 8
  %59 = tail call i32 %58(%"class.blink::LayoutBoxModelObject"* %54) #19
  %60 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 1, i32 0, i32 1) #19
  %61 = extractvalue { i64, i64 } %60, 0
  %62 = trunc i64 %61 to i32
  %63 = icmp slt i32 %62, 0
  %64 = select i1 %63, i32 -2147483648, i32 2147483647
  %65 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %59, i32 %62) #19
  %66 = extractvalue { i32, i1 } %65, 1
  %67 = extractvalue { i32, i1 } %65, 0
  %68 = select i1 %66, i32 %64, i32 %67, !prof !2
  br label %69

69:                                               ; preds = %53, %46
  %70 = phi i32 [ %52, %46 ], [ %68, %53 ]
  ret i32 %70
}

declare i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

declare i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #8

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #8

declare void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* sret, %"class.blink::LayoutObject"*, %"class.blink::FloatQuad"* dereferenceable(32), %"class.blink::LayoutBoxModelObject"*, i32) local_unnamed_addr #3

declare <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"*, %"class.blink::FloatPoint"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"*) local_unnamed_addr #3

declare dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"*) local_unnamed_addr #3

declare <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"*, %"class.blink::FloatPoint"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN5blink4PathC1Ev(%"class.blink::Path"*) unnamed_addr #3

declare void @_ZN5blink4Path6MoveToERKNS_10FloatPointE(%"class.blink::Path"*, %"class.blink::FloatPoint"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"*, %"class.blink::FloatPoint"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN5blink4Path12CloseSubpathEv(%"class.blink::Path"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_111PathBuilderD0Ev(%"class.blink::(anonymous namespace)::PathBuilder"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_111PathBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %3, align 8
  store %"class.blink::protocol::ListValue"* null, %"class.blink::protocol::ListValue"** %3, align 8
  %5 = icmp eq %"class.blink::protocol::ListValue"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::protocol::ListValue"* %4 to void (%"class.blink::protocol::ListValue"*)***
  %8 = load void (%"class.blink::protocol::ListValue"*)**, void (%"class.blink::protocol::ListValue"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %8, i64 2
  %10 = load void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %9, align 8
  tail call void %10(%"class.blink::protocol::ListValue"* nonnull %4) #19
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.blink::(anonymous namespace)::PathBuilder"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #18
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal <2 x float> @_ZN5blink12_GLOBAL__N_111PathBuilder14TranslatePointERKNS_10FloatPointE(%"class.blink::(anonymous namespace)::PathBuilder"* nocapture readnone, %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8)) unnamed_addr #9 align 2 {
  %3 = bitcast %"class.blink::FloatPoint"* %1 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 4
  ret <2 x float> %4
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare void @_ZN5blink4PathC1ERKS0_(%"class.blink::Path"*, %"class.blink::Path"* dereferenceable(16)) unnamed_addr #3

declare void @_ZN5blink4Path9TransformERKNS_15AffineTransformE(%"class.blink::Path"*, %"class.blink::AffineTransform"* dereferenceable(48)) local_unnamed_addr #3

declare void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"*) unnamed_addr #3

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEd(%"class.blink::AffineTransform"*, double) local_unnamed_addr #3

declare void @_ZNK5blink4Path5ApplyEPvPFvS1_PKNS_11PathElementEE(%"class.blink::Path"*, i8*, void (i8*, %"struct.blink::PathElement"*)*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_111PathBuilder17AppendPathElementEPvPKNS_11PathElementE(i8*, %"struct.blink::PathElement"* nocapture readonly) #4 align 2 {
  %3 = bitcast i8* %0 to %"class.blink::(anonymous namespace)::PathBuilder"*
  %4 = getelementptr inbounds %"struct.blink::PathElement", %"struct.blink::PathElement"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %29 [
    i32 0, label %6
    i32 1, label %9
    i32 3, label %12
    i32 2, label %15
    i32 4, label %18
  ]

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.blink::PathElement", %"struct.blink::PathElement"* %1, i64 0, i32 1
  %8 = load %"class.blink::FloatPoint"*, %"class.blink::FloatPoint"** %7, align 8
  tail call fastcc void @_ZN5blink12_GLOBAL__N_111PathBuilder26AppendPathCommandAndPointsEPKcPKNS_10FloatPointEm(%"class.blink::(anonymous namespace)::PathBuilder"* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0), %"class.blink::FloatPoint"* %8, i64 1) #19
  br label %29

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.blink::PathElement", %"struct.blink::PathElement"* %1, i64 0, i32 1
  %11 = load %"class.blink::FloatPoint"*, %"class.blink::FloatPoint"** %10, align 8
  tail call fastcc void @_ZN5blink12_GLOBAL__N_111PathBuilder26AppendPathCommandAndPointsEPKcPKNS_10FloatPointEm(%"class.blink::(anonymous namespace)::PathBuilder"* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.46, i64 0, i64 0), %"class.blink::FloatPoint"* %11, i64 1) #19
  br label %29

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.blink::PathElement", %"struct.blink::PathElement"* %1, i64 0, i32 1
  %14 = load %"class.blink::FloatPoint"*, %"class.blink::FloatPoint"** %13, align 8
  tail call fastcc void @_ZN5blink12_GLOBAL__N_111PathBuilder26AppendPathCommandAndPointsEPKcPKNS_10FloatPointEm(%"class.blink::(anonymous namespace)::PathBuilder"* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.47, i64 0, i64 0), %"class.blink::FloatPoint"* %14, i64 3) #19
  br label %29

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"struct.blink::PathElement", %"struct.blink::PathElement"* %1, i64 0, i32 1
  %17 = load %"class.blink::FloatPoint"*, %"class.blink::FloatPoint"** %16, align 8
  tail call fastcc void @_ZN5blink12_GLOBAL__N_111PathBuilder26AppendPathCommandAndPointsEPKcPKNS_10FloatPointEm(%"class.blink::(anonymous namespace)::PathBuilder"* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i64 0, i64 0), %"class.blink::FloatPoint"* %17, i64 2) #19
  br label %29

18:                                               ; preds = %2
  %19 = getelementptr inbounds i8, i8* %0, i64 8
  %20 = bitcast i8* %19 to %"class.blink::protocol::ListValue"**
  %21 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %20, align 8
  %22 = tail call i8* @_Znwm(i64 24) #18
  %23 = bitcast i8* %22 to i32 (...)***
  %24 = getelementptr inbounds i8, i8* %22, i64 8
  %25 = bitcast i8* %24 to i32*
  store i32 4, i32* %25, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink8protocol11StringValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %26 = getelementptr inbounds i8, i8* %22, i64 16
  %27 = bitcast i8* %26 to %"class.WTF::String"*
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %27, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.49, i64 0, i64 0), i64 1) #19
  %28 = bitcast i8* %22 to %"class.blink::protocol::Value"*
  tail call void @_ZN5blink8protocol9ListValue9pushValueENSt3__110unique_ptrINS0_5ValueENS2_14default_deleteIS4_EEEE(%"class.blink::protocol::ListValue"* %21, %"class.blink::protocol::Value"* nonnull %28) #19
  br label %29

29:                                               ; preds = %2, %6, %9, %12, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_111PathBuilder26AppendPathCommandAndPointsEPKcPKNS_10FloatPointEm(%"class.blink::(anonymous namespace)::PathBuilder"*, i8*, %"class.blink::FloatPoint"*, i64) unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.blink::(anonymous namespace)::PathBuilder", %"class.blink::(anonymous namespace)::PathBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %5, align 8
  %7 = tail call i8* @_Znwm(i64 24) #18
  %8 = bitcast i8* %7 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 4, i32* %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink8protocol11StringValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 16
  %12 = bitcast i8* %11 to %"class.WTF::String"*
  %13 = icmp eq i8* %1, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %4
  %15 = tail call i64 @strlen(i8* nonnull %1) #20
  br label %16

16:                                               ; preds = %14, %4
  %17 = phi i64 [ %15, %14 ], [ 0, %4 ]
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %12, i8* %1, i64 %17) #19
  %18 = bitcast i8* %7 to %"class.blink::protocol::Value"*
  tail call void @_ZN5blink8protocol9ListValue9pushValueENSt3__110unique_ptrINS0_5ValueENS2_14default_deleteIS4_EEEE(%"class.blink::protocol::ListValue"* %6, %"class.blink::protocol::Value"* nonnull %18) #19
  %19 = icmp eq i64 %3, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::(anonymous namespace)::PathBuilder"* %0 to <2 x float> (%"class.blink::(anonymous namespace)::PathBuilder"*, %"class.blink::FloatPoint"*)***
  br label %23

22:                                               ; preds = %23, %16
  ret void

23:                                               ; preds = %23, %20
  %24 = phi i64 [ 0, %20 ], [ %50, %23 ]
  %25 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %2, i64 %24
  %26 = load <2 x float> (%"class.blink::(anonymous namespace)::PathBuilder"*, %"class.blink::FloatPoint"*)**, <2 x float> (%"class.blink::(anonymous namespace)::PathBuilder"*, %"class.blink::FloatPoint"*)*** %21, align 8
  %27 = getelementptr inbounds <2 x float> (%"class.blink::(anonymous namespace)::PathBuilder"*, %"class.blink::FloatPoint"*)*, <2 x float> (%"class.blink::(anonymous namespace)::PathBuilder"*, %"class.blink::FloatPoint"*)** %26, i64 2
  %28 = load <2 x float> (%"class.blink::(anonymous namespace)::PathBuilder"*, %"class.blink::FloatPoint"*)*, <2 x float> (%"class.blink::(anonymous namespace)::PathBuilder"*, %"class.blink::FloatPoint"*)** %27, align 8
  %29 = tail call <2 x float> %28(%"class.blink::(anonymous namespace)::PathBuilder"* %0, %"class.blink::FloatPoint"* dereferenceable(8) %25) #19
  %30 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %5, align 8
  %31 = extractelement <2 x float> %29, i32 0
  %32 = fpext float %31 to double
  %33 = tail call i8* @_Znwm(i64 24) #18
  %34 = bitcast i8* %33 to i32 (...)***
  %35 = getelementptr inbounds i8, i8* %33, i64 8
  %36 = bitcast i8* %35 to i32*
  store i32 3, i32* %36, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %37 = getelementptr inbounds i8, i8* %33, i64 16
  %38 = bitcast i8* %37 to double*
  store double %32, double* %38, align 8
  %39 = bitcast i8* %33 to %"class.blink::protocol::Value"*
  tail call void @_ZN5blink8protocol9ListValue9pushValueENSt3__110unique_ptrINS0_5ValueENS2_14default_deleteIS4_EEEE(%"class.blink::protocol::ListValue"* %30, %"class.blink::protocol::Value"* nonnull %39) #19
  %40 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %5, align 8
  %41 = extractelement <2 x float> %29, i32 1
  %42 = fpext float %41 to double
  %43 = tail call i8* @_Znwm(i64 24) #18
  %44 = bitcast i8* %43 to i32 (...)***
  %45 = getelementptr inbounds i8, i8* %43, i64 8
  %46 = bitcast i8* %45 to i32*
  store i32 3, i32* %46, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %47 = getelementptr inbounds i8, i8* %43, i64 16
  %48 = bitcast i8* %47 to double*
  store double %42, double* %48, align 8
  %49 = bitcast i8* %43 to %"class.blink::protocol::Value"*
  tail call void @_ZN5blink8protocol9ListValue9pushValueENSt3__110unique_ptrINS0_5ValueENS2_14default_deleteIS4_EEEE(%"class.blink::protocol::ListValue"* %40, %"class.blink::protocol::Value"* nonnull %49) #19
  %50 = add nuw i64 %24, 1
  %51 = icmp eq i64 %50, %3
  br i1 %51, label %22, label %23
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

declare void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"*) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare i32 @_ZN5blink8MakeRGBAEiiii(i32, i32, i32, i32) local_unnamed_addr #3

declare %"class.blink::Element"* @_ZNK5blink4Node25ParentOrShadowHostElementEv(%"class.blink::Node"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15DeprecatedLowerEv(%"class.WTF::String"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink4Node15IsStyledElementEv(%"class.blink::Node"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !26
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #19
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #19
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #19
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #19
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #19
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #3

declare { <2 x float>, <2 x float> } @_ZNK5blink7Element38GetBoundingClientRectNoLifecycleUpdateEv(%"class.blink::Element"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEf(float) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink7Element12computedNameEv(%"class.blink::Element"*) local_unnamed_addr #3

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink7Element12computedRoleEv(%"class.blink::Element"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.361"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.361", %"class.WTF::Vector.361"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #19
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i64 0, i64 0), i8* %14, i8* %15) #19
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.63, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #19
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #19
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  %23 = getelementptr inbounds %"class.WTF::Vector.361", %"class.WTF::Vector.361"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 %25
  ret %"class.WTF::AtomicString"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.426"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.426", %"class.WTF::HashTable.426"* %0, i64 0, i32 0
  %5 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %4, align 8
  %6 = icmp eq %"class.WTF::AtomicString"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.426"* %0, %"class.WTF::AtomicString"* null)
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::AtomicString"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.426", %"class.WTF::HashTable.426"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 %22
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"class.WTF::StringImpl"* [ %25, %27 ], [ %60, %52 ]
  %43 = phi %"class.WTF::AtomicString"* [ %23, %27 ], [ %58, %52 ]
  %44 = phi %"class.WTF::AtomicString"* [ null, %27 ], [ %53, %52 ]
  %45 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %46 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %47 = bitcast %"class.WTF::AtomicString"* %43 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, inttoptr (i64 -1 to i8*)
  br i1 %49, label %52, label %50

50:                                               ; preds = %41
  %51 = icmp eq %"class.WTF::StringImpl"* %42, %17
  br i1 %51, label %125, label %52

52:                                               ; preds = %41, %50
  %53 = phi %"class.WTF::AtomicString"* [ %44, %50 ], [ %43, %41 ]
  %54 = icmp eq i64 %46, 0
  %55 = select i1 %54, i64 %40, i64 %46
  %56 = add i64 %55, %45
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 %57
  %59 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"class.WTF::AtomicString"* %53, null
  br i1 %63, label %72, label %64

64:                                               ; preds = %62
  %65 = bitcast %"class.WTF::AtomicString"* %53 to i64*
  store i64 0, i64* %65, align 8
  %66 = getelementptr inbounds %"class.WTF::HashTable.426", %"class.WTF::HashTable.426"* %0, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, 2147483647
  %69 = and i32 %68, 2147483647
  %70 = and i32 %67, -2147483648
  %71 = or i32 %69, %70
  store i32 %71, i32* %66, align 8
  br label %72

72:                                               ; preds = %10, %62, %64
  %73 = phi %"class.WTF::AtomicString"* [ %53, %64 ], [ %58, %62 ], [ %23, %10 ]
  %74 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %94

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i33
  %86 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %85, i33 1) #19
  %87 = extractvalue { i33, i1 } %86, 1
  %88 = extractvalue { i33, i1 } %86, 0
  %89 = icmp slt i33 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %92, !prof !2

91:                                               ; preds = %82
  tail call void @llvm.trap() #19
  unreachable

92:                                               ; preds = %82
  %93 = trunc i33 %88 to i32
  store i32 %93, i32* %83, align 4
  br label %94

94:                                               ; preds = %92, %77, %72
  %95 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %96 = bitcast %"class.WTF::AtomicString"* %73 to i64*
  %97 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %73, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  store i64 %95, i64* %96, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #19
  br label %113

113:                                              ; preds = %94, %109, %112
  %114 = getelementptr inbounds %"class.WTF::HashTable.426", %"class.WTF::HashTable.426"* %0, i64 0, i32 2
  %115 = load i32, i32* %114, align 4
  %116 = add i32 %115, 1
  store i32 %116, i32* %114, align 4
  %117 = getelementptr inbounds %"class.WTF::HashTable.426", %"class.WTF::HashTable.426"* %0, i64 0, i32 3
  %118 = load i32, i32* %117, align 8
  %119 = add i32 %118, %116
  %120 = shl i32 %119, 1
  %121 = load i32, i32* %12, align 8
  %122 = icmp ult i32 %120, %121
  br i1 %122, label %125, label %123

123:                                              ; preds = %113
  %124 = tail call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.426"* %0, %"class.WTF::AtomicString"* %73)
  br label %125

125:                                              ; preds = %50, %113, %123
  %126 = phi i8 [ 1, %113 ], [ 1, %123 ], [ 0, %50 ]
  %127 = phi %"class.WTF::AtomicString"* [ %73, %113 ], [ %124, %123 ], [ %43, %50 ]
  %128 = insertvalue { %"class.WTF::AtomicString"*, i8 } undef, %"class.WTF::AtomicString"* %127, 0
  %129 = insertvalue { %"class.WTF::AtomicString"*, i8 } %128, i8 %126, 1
  ret { %"class.WTF::AtomicString"*, i8 } %129
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.426"*, %"class.WTF::AtomicString"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.426", %"class.WTF::HashTable.426"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.426", %"class.WTF::HashTable.426"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #19
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #19
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.64, i64 0, i64 0), i8* %22, i8* %23) #19
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.65, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #19
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #19
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #19
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #19
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #19
  %36 = bitcast i8* %35 to %"class.WTF::AtomicString"*
  %37 = call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.426"* %0, %"class.WTF::AtomicString"* %36, i32 %32, %"class.WTF::AtomicString"* %1) #19
  ret %"class.WTF::AtomicString"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.426"*, %"class.WTF::AtomicString"*, i32, %"class.WTF::AtomicString"*) local_unnamed_addr #1 comdat align 2 {
  %5 = ptrtoint %"class.WTF::AtomicString"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.426", %"class.WTF::HashTable.426"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.426", %"class.WTF::HashTable.426"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.426"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %9, align 8
  %17 = ptrtoint %"class.WTF::AtomicString"* %16 to i64
  br label %61

18:                                               ; preds = %157
  %19 = bitcast %"class.WTF::HashTable.426"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %158, %18 ]
  %23 = phi %"class.WTF::AtomicString"* [ null, %10 ], [ %161, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %159, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"class.WTF::AtomicString"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %57, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %55, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %52, %29
  %32 = phi i64 [ 0, %29 ], [ %53, %52 ]
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %25, i64 %32
  %34 = bitcast %"class.WTF::AtomicString"* %33 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast i8* %35 to %"class.WTF::StringImpl"*
  %37 = ptrtoint i8* %35 to i64
  switch i64 %37, label %38 [
    i64 -1, label %52
    i64 0, label %52
  ]

38:                                               ; preds = %31
  %39 = getelementptr inbounds i8, i8* %35, i64 8
  %40 = bitcast i8* %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = bitcast i8* %35 to i32*
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %38
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %38
  %49 = phi i32 [ %47, %46 ], [ %45, %38 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #19
  br label %52

52:                                               ; preds = %51, %48, %31, %31
  %53 = add nuw nsw i64 %32, 1
  %54 = icmp eq i64 %53, %30
  br i1 %54, label %55, label %31

55:                                               ; preds = %52, %27
  %56 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %56) #19
  br label %57

57:                                               ; preds = %20, %55
  %58 = getelementptr inbounds %"class.WTF::HashTable.426", %"class.WTF::HashTable.426"* %0, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, -2147483648
  store i32 %60, i32* %58, align 8
  ret %"class.WTF::AtomicString"* %23

61:                                               ; preds = %13, %157
  %62 = phi i64 [ %17, %13 ], [ %158, %157 ]
  %63 = phi i32 [ %7, %13 ], [ %159, %157 ]
  %64 = phi %"class.WTF::AtomicString"* [ %16, %13 ], [ %160, %157 ]
  %65 = phi %"class.WTF::AtomicString"* [ null, %13 ], [ %161, %157 ]
  %66 = phi i32 [ 0, %13 ], [ %162, %157 ]
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %64, i64 %67
  %69 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = ptrtoint %"class.WTF::StringImpl"* %70 to i64
  switch i64 %71, label %72 [
    i64 -1, label %157
    i64 0, label %157
  ]

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = lshr i32 %74, 8
  %76 = and i32 %75, %14
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 %77
  %79 = ptrtoint %"class.WTF::AtomicString"* %78 to i64
  %80 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %78, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %99, label %83

83:                                               ; preds = %72
  %84 = xor i32 %75, -1
  %85 = lshr i32 %74, 31
  %86 = add nsw i32 %85, %84
  %87 = shl i32 %86, 12
  %88 = xor i32 %87, %86
  %89 = lshr i32 %88, 7
  %90 = xor i32 %89, %88
  %91 = shl i32 %90, 2
  %92 = xor i32 %91, %90
  %93 = lshr i32 %92, 20
  %94 = xor i32 %93, %92
  %95 = or i32 %94, 1
  %96 = zext i32 %95 to i64
  br label %105

97:                                               ; preds = %117
  %98 = ptrtoint %"class.WTF::AtomicString"* %123 to i64
  br label %99

99:                                               ; preds = %97, %72
  %100 = phi i64 [ %79, %72 ], [ %98, %97 ]
  %101 = phi %"class.WTF::AtomicString"* [ null, %72 ], [ %118, %97 ]
  %102 = icmp eq %"class.WTF::AtomicString"* %101, null
  %103 = ptrtoint %"class.WTF::AtomicString"* %101 to i64
  %104 = select i1 %102, i64 %100, i64 %103
  br label %128

105:                                              ; preds = %117, %83
  %106 = phi %"class.WTF::AtomicString"* [ null, %83 ], [ %118, %117 ]
  %107 = phi %"class.WTF::StringImpl"* [ %81, %83 ], [ %126, %117 ]
  %108 = phi i64 [ %79, %83 ], [ %124, %117 ]
  %109 = phi %"class.WTF::AtomicString"* [ %78, %83 ], [ %123, %117 ]
  %110 = phi i64 [ %77, %83 ], [ %122, %117 ]
  %111 = phi i64 [ 0, %83 ], [ %120, %117 ]
  %112 = bitcast %"class.WTF::AtomicString"* %109 to i8**
  %113 = load i8*, i8** %112, align 8
  %114 = icmp eq i8* %113, inttoptr (i64 -1 to i8*)
  br i1 %114, label %117, label %115

115:                                              ; preds = %105
  %116 = icmp eq %"class.WTF::StringImpl"* %107, %70
  br i1 %116, label %128, label %117

117:                                              ; preds = %115, %105
  %118 = phi %"class.WTF::AtomicString"* [ %106, %115 ], [ %109, %105 ]
  %119 = icmp eq i64 %111, 0
  %120 = select i1 %119, i64 %96, i64 %111
  %121 = add i64 %120, %110
  %122 = and i64 %121, %15
  %123 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 %122
  %124 = ptrtoint %"class.WTF::AtomicString"* %123 to i64
  %125 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %123, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %97, label %105

128:                                              ; preds = %115, %99
  %129 = phi i64 [ %104, %99 ], [ %108, %115 ]
  %130 = inttoptr i64 %129 to %"class.WTF::AtomicString"*
  %131 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %130, i64 0, i32 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #19
  br label %147

147:                                              ; preds = %128, %143, %146
  %148 = bitcast %"class.WTF::AtomicString"* %68 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = inttoptr i64 %129 to i64*
  store i64 %149, i64* %150, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %69, align 8
  %151 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %9, align 8
  %152 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %151, i64 %67
  %153 = icmp eq %"class.WTF::AtomicString"* %152, %3
  %154 = select i1 %153, %"class.WTF::AtomicString"* %130, %"class.WTF::AtomicString"* %65
  %155 = load i32, i32* %6, align 8
  %156 = ptrtoint %"class.WTF::AtomicString"* %151 to i64
  br label %157

157:                                              ; preds = %61, %61, %147
  %158 = phi i64 [ %62, %61 ], [ %156, %147 ], [ %62, %61 ]
  %159 = phi i32 [ %63, %61 ], [ %155, %147 ], [ %63, %61 ]
  %160 = phi %"class.WTF::AtomicString"* [ %64, %61 ], [ %151, %147 ], [ %64, %61 ]
  %161 = phi %"class.WTF::AtomicString"* [ %65, %61 ], [ %154, %147 ], [ %65, %61 ]
  %162 = add i32 %66, 1
  %163 = icmp eq i32 %162, %159
  br i1 %163, label %18, label %61
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !26
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !26
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #19
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !2

22:                                               ; preds = %15
  %23 = bitcast %union.anon.2947* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon.2947* %16 to %"class.WTF::Vector.2952"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.2952"* %30, i16* nonnull dereferenceable(2) %3) #19
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !26
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #19
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !2

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.2948", %"class.WTF::Vector.2948"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.2948"* %41, i8* nonnull dereferenceable(1) %4) #19
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.2952"*, i16* dereferenceable(2)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2952", %"class.WTF::Vector.2952"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2952", %"class.WTF::Vector.2952"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2952"* %0, i32 %5) #19
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2952"* %0, i32 %5) #19
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2952"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2952", %"class.WTF::Vector.2952"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #19
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #19
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.66, i64 0, i64 0), i8* %15, i8* %16) #19
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.63, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #19
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #19
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #19
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !27

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2952", %"class.WTF::Vector.2952"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #19
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #19
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2952"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.2952", %"class.WTF::Vector.2952"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.2952"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2952"* %0, i32 %27) #19
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2952"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2952", %"class.WTF::Vector.2952"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2952", %"class.WTF::Vector.2952"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.2952"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.2952", %"class.WTF::Vector.2952"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.2952", %"class.WTF::Vector.2952"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.2952", %"class.WTF::Vector.2952"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.2952"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.2952", %"class.WTF::Vector.2952"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #19
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2953"* %19, i16* nonnull %6) #19
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #19
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #19
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.2952", %"class.WTF::Vector.2952"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !27

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.2952", %"class.WTF::Vector.2952"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #19
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.2952", %"class.WTF::Vector.2952"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !27

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.2952", %"class.WTF::Vector.2952"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2953"* %53, i16* %48) #19
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.2952"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.2952", %"class.WTF::Vector.2952"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #19
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.68, i64 0, i64 0), i8* %11, i8* %12) #19
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.69, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #19
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #19
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #19
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2953"*, i16*) local_unnamed_addr #13 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #19
  ret void
}

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.2948"*, i8* dereferenceable(1)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2948", %"class.WTF::Vector.2948"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2948", %"class.WTF::Vector.2948"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2948"* %0, i32 %5) #19
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2948"* %0, i32 %5) #19
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2948"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2948", %"class.WTF::Vector.2948"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #19
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #19
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.66, i64 0, i64 0), i8* %15, i8* %16) #19
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.63, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #19
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #19
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #19
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !27

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2948", %"class.WTF::Vector.2948"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #19
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #19
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2948"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.2948", %"class.WTF::Vector.2948"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.2948"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2948"* %0, i32 %27) #19
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2948"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2948", %"class.WTF::Vector.2948"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2948", %"class.WTF::Vector.2948"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.2948"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.2948", %"class.WTF::Vector.2948"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.2948", %"class.WTF::Vector.2948"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.2948", %"class.WTF::Vector.2948"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.2948"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.2948", %"class.WTF::Vector.2948"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #19
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.2949"* %18, i8* nonnull %6) #19
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #19
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #19
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.2948", %"class.WTF::Vector.2948"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !27

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.2948", %"class.WTF::Vector.2948"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #19
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.2948", %"class.WTF::Vector.2948"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !27

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.2948", %"class.WTF::Vector.2948"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.2949"* %46, i8* %42) #19
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.2948"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.2948", %"class.WTF::Vector.2948"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #19
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.68, i64 0, i64 0), i8* %11, i8* %12) #19
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.69, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #19
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #19
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #19
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.2949"*, i8*) local_unnamed_addr #13 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #19
  ret void
}

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #3

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #3

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink10LayoutUnit8ToStringEv(%"class.blink::LayoutUnit"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink15CSSPropertyName14ToAtomicStringEv(%"class.blink::CSSPropertyName"*) local_unnamed_addr #3

declare void @_ZN5blink8protocol15DictionaryValue9setDoubleERKN3WTF6StringEd(%"class.blink::protocol::DictionaryValue"*, %"class.WTF::String"* dereferenceable(8), double) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.529"*, i32* dereferenceable(4)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.529", %"class.WTF::Vector.529"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.529", %"class.WTF::Vector.529"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.529", %"class.WTF::Vector.529"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !27

24:                                               ; preds = %13
  %25 = icmp eq i32* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13CSSPropertyIDEEEmm(i64 %26) #19
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13CSSPropertyIDEEEPKcv, i64 0, i64 0)) #19
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.529"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i32*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load i32*, i32** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i32* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i32* %38 to i8*
  br i1 %41, label %43, label %49, !prof !27

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #19
  %47 = bitcast %"class.WTF::Vector.529"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #19
  %51 = bitcast %"class.WTF::Vector.529"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i32*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i32* %1 to i64
  %56 = ptrtoint i32* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.529", %"class.WTF::Vector.529"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !27

69:                                               ; preds = %54
  %70 = icmp eq i32* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13CSSPropertyIDEEEmm(i64 %71) #19
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13CSSPropertyIDEEEPKcv, i64 0, i64 0)) #19
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.529"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i32*, i32** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i32* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i32* %78 to i8*
  br i1 %81, label %83, label %89, !prof !27

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #19
  %87 = bitcast %"class.WTF::Vector.529"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #19
  %91 = bitcast %"class.WTF::Vector.529"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i32*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i32* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i32, i32* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i32* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i32* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %100, i64 %103
  %105 = load i32, i32* %101, align 4
  store i32 %105, i32* %104, align 4
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13CSSPropertyIDEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #19
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.68, i64 0, i64 0), i8* %11, i8* %12) #19
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.69, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #19
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #19
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #19
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.529"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.529", %"class.WTF::Vector.529"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #19
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i64 0, i64 0), i8* %14, i8* %15) #19
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.63, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #19
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #19
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  %23 = getelementptr inbounds %"class.WTF::Vector.529", %"class.WTF::Vector.529"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #14

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #15

declare { i64, i64 } @_ZNK5blink12LayoutObject19LocalToAncestorRectERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj(%"class.blink::LayoutObject"*, %"struct.blink::PhysicalRect"* dereferenceable(16), %"class.blink::LayoutBoxModelObject"*, i32) local_unnamed_addr #3

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject28AbsoluteBoundingBoxFloatRectEj(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #8

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #8

declare %"class.blink::ShapeOutsideInfo"* @_ZNK5blink9LayoutBox19GetShapeOutsideInfoEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

declare dereferenceable(16) %"class.blink::Shape"* @_ZNK5blink16ShapeOutsideInfo13ComputedShapeEv(%"class.blink::ShapeOutsideInfo"*) local_unnamed_addr #3

declare { i64, i64 } @_ZNK5blink16ShapeOutsideInfo32ComputedShapePhysicalBoundingBoxEv(%"class.blink::ShapeOutsideInfo"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_116ShapePathBuilderD0Ev(%"class.blink::(anonymous namespace)::ShapePathBuilder"*) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::ShapePathBuilder", %"class.blink::(anonymous namespace)::ShapePathBuilder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_111PathBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::ShapePathBuilder", %"class.blink::(anonymous namespace)::ShapePathBuilder"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::protocol::ListValue"*, %"class.blink::protocol::ListValue"** %3, align 8
  store %"class.blink::protocol::ListValue"* null, %"class.blink::protocol::ListValue"** %3, align 8
  %5 = icmp eq %"class.blink::protocol::ListValue"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::protocol::ListValue"* %4 to void (%"class.blink::protocol::ListValue"*)***
  %8 = load void (%"class.blink::protocol::ListValue"*)**, void (%"class.blink::protocol::ListValue"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %8, i64 2
  %10 = load void (%"class.blink::protocol::ListValue"*)*, void (%"class.blink::protocol::ListValue"*)** %9, align 8
  tail call void %10(%"class.blink::protocol::ListValue"* nonnull %4) #19
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.blink::(anonymous namespace)::ShapePathBuilder"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal <2 x float> @_ZN5blink12_GLOBAL__N_116ShapePathBuilder14TranslatePointERKNS_10FloatPointE(%"class.blink::(anonymous namespace)::ShapePathBuilder"* nocapture readonly, %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8)) unnamed_addr #4 align 2 {
  %3 = alloca <2 x float>, align 8
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::IntPoint"*
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::ShapePathBuilder", %"class.blink::(anonymous namespace)::ShapePathBuilder"* %0, i64 0, i32 3
  %7 = load %"class.blink::ShapeOutsideInfo"*, %"class.blink::ShapeOutsideInfo"** %6, align 8
  %8 = bitcast %"class.blink::FloatPoint"* %1 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 4
  %10 = tail call <2 x float> @_ZNK5blink16ShapeOutsideInfo24ShapeToLayoutObjectPointENS_10FloatPointE(%"class.blink::ShapeOutsideInfo"* %7, <2 x float> %9) #19
  %11 = extractelement <2 x float> %10, i32 0
  %12 = fmul float %11, 6.400000e+01
  %13 = tail call float @llvm.round.f32(float %12) #19
  %14 = fcmp ult float %13, 0xC1E0000000000000
  %15 = fcmp ugt float %13, 0x41DFFFFFE0000000
  %16 = fcmp ogt float %13, 0xC1E0000000000000
  %17 = select i1 %16, float %13, float 0xC1E0000000000000
  %18 = fptosi float %17 to i32
  %19 = select i1 %14, i32 0, i32 2147483647
  %20 = select i1 %15, i32 %19, i32 %18
  %21 = extractelement <2 x float> %10, i32 1
  %22 = fmul float %21, 6.400000e+01
  %23 = tail call float @llvm.round.f32(float %22) #19
  %24 = fcmp ult float %23, 0xC1E0000000000000
  %25 = fcmp ugt float %23, 0x41DFFFFFE0000000
  %26 = fcmp ogt float %23, 0xC1E0000000000000
  %27 = select i1 %26, float %23, float 0xC1E0000000000000
  %28 = fptosi float %27 to i32
  %29 = select i1 %24, i32 0, i32 2147483647
  %30 = select i1 %25, i32 %29, i32 %28
  %31 = getelementptr inbounds %"class.blink::(anonymous namespace)::ShapePathBuilder", %"class.blink::(anonymous namespace)::ShapePathBuilder"* %0, i64 0, i32 1
  %32 = load %"class.blink::LocalFrameView"*, %"class.blink::LocalFrameView"** %31, align 8
  %33 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #19
  %34 = getelementptr inbounds %"class.blink::(anonymous namespace)::ShapePathBuilder", %"class.blink::(anonymous namespace)::ShapePathBuilder"* %0, i64 0, i32 2
  %35 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %34, align 8
  %36 = bitcast <2 x float>* %3 to %"class.blink::FloatPoint"*
  %37 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #19
  %38 = sitofp i32 %20 to float
  %39 = fmul float %38, 1.562500e-02
  %40 = sitofp i32 %30 to float
  %41 = fmul float %40, 1.562500e-02
  %42 = insertelement <2 x float> undef, float %39, i32 0
  %43 = insertelement <2 x float> %42, float %41, i32 1
  store <2 x float> %43, <2 x float>* %3, align 8
  %44 = call <2 x float> @_ZNK5blink12LayoutObject25LocalToAncestorFloatPointERKNS_10FloatPointEPKNS_20LayoutBoxModelObjectEj(%"class.blink::LayoutObject"* %35, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %36, %"class.blink::LayoutBoxModelObject"* null, i32 4) #19
  %45 = extractelement <2 x float> %44, i32 0
  %46 = fmul float %45, 6.400000e+01
  %47 = call float @llvm.round.f32(float %46) #19
  %48 = fcmp ult float %47, 0xC1E0000000000000
  %49 = fcmp ugt float %47, 0x41DFFFFFE0000000
  %50 = fcmp ogt float %47, 0xC1E0000000000000
  %51 = select i1 %50, float %47, float 0xC1E0000000000000
  %52 = fptosi float %51 to i32
  %53 = select i1 %48, i32 0, i32 2147483647
  %54 = select i1 %49, i32 %53, i32 %52
  %55 = extractelement <2 x float> %44, i32 1
  %56 = fmul float %55, 6.400000e+01
  %57 = call float @llvm.round.f32(float %56) #19
  %58 = fcmp ult float %57, 0xC1E0000000000000
  %59 = fcmp ugt float %57, 0x41DFFFFFE0000000
  %60 = fcmp ogt float %57, 0xC1E0000000000000
  %61 = select i1 %60, float %57, float 0xC1E0000000000000
  %62 = fptosi float %61 to i32
  %63 = select i1 %58, i32 0, i32 2147483647
  %64 = select i1 %59, i32 %63, i32 %62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #19
  %65 = sdiv i32 %54, 64
  %66 = srem i32 %54, 64
  %67 = add nsw i32 %66, 32
  %68 = ashr i32 %67, 6
  %69 = add nsw i32 %68, %65
  %70 = sdiv i32 %64, 64
  %71 = srem i32 %64, 64
  %72 = add nsw i32 %71, 32
  %73 = ashr i32 %72, 6
  %74 = add nsw i32 %73, %70
  %75 = zext i32 %74 to i64
  %76 = shl nuw i64 %75, 32
  %77 = zext i32 %69 to i64
  %78 = or i64 %76, %77
  store i64 %78, i64* %4, align 8
  %79 = call i64 @_ZNK5blink14LocalFrameView15FrameToViewportERKNS_8IntPointE(%"class.blink::LocalFrameView"* %32, %"class.blink::IntPoint"* nonnull dereferenceable(8) %5) #19
  %80 = trunc i64 %79 to i32
  %81 = lshr i64 %79, 32
  %82 = trunc i64 %81 to i32
  %83 = sitofp i32 %80 to float
  %84 = insertelement <2 x float> undef, float %83, i32 0
  %85 = sitofp i32 %82 to float
  %86 = insertelement <2 x float> %84, float %85, i32 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #19
  ret <2 x float> %86
}

declare <2 x float> @_ZNK5blink16ShapeOutsideInfo24ShapeToLayoutObjectPointENS_10FloatPointE(%"class.blink::ShapeOutsideInfo"*, <2 x float>) local_unnamed_addr #3

declare i64 @_ZNK5blink14LocalFrameView15FrameToViewportERKNS_8IntPointE(%"class.blink::LocalFrameView"*, %"class.blink::IntPoint"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #8

declare <2 x float> @_ZNK5blink12LayoutObject25LocalToAncestorFloatPointERKNS_10FloatPointEPKNS_20LayoutBoxModelObjectEj(%"class.blink::LayoutObject"*, %"class.blink::FloatPoint"* dereferenceable(8), %"class.blink::LayoutBoxModelObject"*, i32) local_unnamed_addr #3

declare %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #16

declare dereferenceable(72) %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink9LayoutBox22NGPhysicalFragmentList8IteratordeEv(%"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.blink::NGLink"* @_ZNK4base25CheckedContiguousIteratorIKN5blink6NGLinkEEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %7, align 8
  %11 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %8, align 8
  %12 = icmp eq %"struct.blink::NGLink"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"struct.blink::NGLink"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  %17 = bitcast %"struct.blink::NGLink"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.95, i64 0, i64 0), i8* %16, i8* %18) #19
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.91, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #19
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #19
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  %26 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %7, align 8
  ret %"struct.blink::NGLink"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKN5blink6NGLinkEEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %7, align 8
  %11 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %8, align 8
  %12 = icmp eq %"struct.blink::NGLink"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"struct.blink::NGLink"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  %17 = bitcast %"struct.blink::NGLink"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.95, i64 0, i64 0), i8* %16, i8* %18) #19
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.91, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #19
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #19
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  %26 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %7, align 8
  %27 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %26, i64 1
  store %"struct.blink::NGLink"* %27, %"struct.blink::NGLink"** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #6 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #19
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKN5blink6NGLinkEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"*, %"struct.blink::NGLink"*, %"struct.blink::NGLink"*, %"struct.blink::NGLink"*) unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"struct.blink::NGLink"*, align 8
  %8 = alloca %"struct.blink::NGLink"*, align 8
  %9 = alloca %"struct.blink::NGLink"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"struct.blink::NGLink"* %1, %"struct.blink::NGLink"** %7, align 8
  store %"struct.blink::NGLink"* %2, %"struct.blink::NGLink"** %8, align 8
  store %"struct.blink::NGLink"* %3, %"struct.blink::NGLink"** %9, align 8
  %14 = ptrtoint %"struct.blink::NGLink"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint %"struct.blink::NGLink"* %2 to i64
  %18 = bitcast %"struct.blink::NGLink"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint %"struct.blink::NGLink"* %3 to i64
  %21 = bitcast %"struct.blink::NGLink"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #19
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"struct.blink::NGLink"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"struct.blink::NGLink"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  %30 = bitcast %"struct.blink::NGLink"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.90, i64 0, i64 0), i8* %29, i8* %31) #19
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.91, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #19
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #19
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #19
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #19
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %8, align 8
  %43 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %9, align 8
  %44 = icmp ugt %"struct.blink::NGLink"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"struct.blink::NGLink"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  %49 = bitcast %"struct.blink::NGLink"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.92, i64 0, i64 0), i8* %48, i8* %50) #19
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.91, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #19
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #19
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKN5blink6NGLinkEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #19
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %11, align 8
  %15 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %12, align 8
  %16 = icmp eq %"struct.blink::NGLink"* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.93, i64 0, i64 0), i8* %20, i8* %22) #19
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.91, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #19
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #19
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #19
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #19
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %32, align 8
  %36 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %33, align 8
  %37 = icmp eq %"struct.blink::NGLink"* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast %"struct.blink::NGLink"** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  %42 = bitcast %"struct.blink::NGLink"** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.94, i64 0, i64 0), i8* %41, i8* %43) #19
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.91, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #19
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #19
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #19
  ret void
}

declare dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #17

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS0_INSt3__14pairIN5blink12PhysicalRectEfEELj0ENS_18PartitionAllocatorEEELj0ES6_E16ReallocateBufferEj(%"class.WTF::Vector.2985"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %43

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::Vector.2988"*, %"class.WTF::Vector.2988"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.2985"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %41, label %14

14:                                               ; preds = %4, %37
  %15 = phi %"class.WTF::Vector.2988"* [ %39, %37 ], [ %6, %4 ]
  %16 = phi %"class.WTF::Vector.2988"* [ %38, %37 ], [ null, %4 ]
  %17 = bitcast %"class.WTF::Vector.2988"* %16 to i8*
  %18 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %16, i64 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %16, i64 0, i32 0, i32 0, i32 2
  %20 = bitcast %"class.WTF::Vector.2988"* %15 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #19
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.WTF::Vector.2988"* %16 to i64*
  store atomic i64 0, i64* %20 monotonic, align 8
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %15, i64 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %18, align 4
  %25 = load i32, i32* %23, align 4
  store i32 %25, i32* %18, align 4
  store i32 %24, i32* %23, align 4
  %26 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %15, i64 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %19, align 4
  %28 = load i32, i32* %26, align 4
  store i32 %28, i32* %19, align 4
  store i32 %27, i32* %26, align 4
  %29 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %15, i64 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::pair.2991"*, %"struct.std::__1::pair.2991"** %29, align 8
  %31 = icmp eq %"struct.std::__1::pair.2991"* %30, null
  %32 = bitcast %"struct.std::__1::pair.2991"* %30 to i8*
  br i1 %31, label %37, label %33, !prof !27

33:                                               ; preds = %14
  %34 = icmp eq i32 %27, 0
  br i1 %34, label %36, label %35, !prof !2

35:                                               ; preds = %33
  store i32 0, i32* %26, align 4
  br label %36

36:                                               ; preds = %35, %33
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %32) #19
  store %"struct.std::__1::pair.2991"* null, %"struct.std::__1::pair.2991"** %29, align 8
  br label %37

37:                                               ; preds = %36, %14
  %38 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %16, i64 1
  %39 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %15, i64 1
  %40 = icmp eq %"class.WTF::Vector.2988"* %39, %10
  br i1 %40, label %41, label %14

41:                                               ; preds = %37, %4
  %42 = bitcast %"class.WTF::Vector.2988"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %42) #19
  br label %95

43:                                               ; preds = %2
  %44 = zext i32 %1 to i64
  %45 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorINSt3__14pairIN5blink12PhysicalRectEfEELj0ES0_EEEEmm(i64 %44) #19
  %46 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %45, i8* getelementptr inbounds ([131 x i8], [131 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINSt3__14pairIN5blink12PhysicalRectEfEELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #19
  %47 = lshr i64 %45, 4
  %48 = ptrtoint i8* %46 to i64
  %49 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %0, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::Vector.2988"*, %"class.WTF::Vector.2988"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %0, i64 0, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %50, i64 %53
  %55 = icmp eq i32 %52, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %43
  %57 = bitcast %"class.WTF::Vector.2988"* %50 to i8*
  br label %90

58:                                               ; preds = %43
  %59 = bitcast i8* %46 to %"class.WTF::Vector.2988"*
  br label %60

60:                                               ; preds = %58, %83
  %61 = phi %"class.WTF::Vector.2988"* [ %85, %83 ], [ %50, %58 ]
  %62 = phi %"class.WTF::Vector.2988"* [ %84, %83 ], [ %59, %58 ]
  %63 = bitcast %"class.WTF::Vector.2988"* %62 to i8*
  %64 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %62, i64 0, i32 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %62, i64 0, i32 0, i32 0, i32 2
  %66 = bitcast %"class.WTF::Vector.2988"* %61 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #19
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.WTF::Vector.2988"* %62 to i64*
  store atomic i64 0, i64* %66 monotonic, align 8
  store atomic i64 %67, i64* %68 monotonic, align 8
  %69 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %61, i64 0, i32 0, i32 0, i32 1
  %70 = load i32, i32* %64, align 4
  %71 = load i32, i32* %69, align 4
  store i32 %71, i32* %64, align 4
  store i32 %70, i32* %69, align 4
  %72 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %61, i64 0, i32 0, i32 0, i32 2
  %73 = load i32, i32* %65, align 4
  %74 = load i32, i32* %72, align 4
  store i32 %74, i32* %65, align 4
  store i32 %73, i32* %72, align 4
  %75 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %61, i64 0, i32 0, i32 0, i32 0
  %76 = load %"struct.std::__1::pair.2991"*, %"struct.std::__1::pair.2991"** %75, align 8
  %77 = icmp eq %"struct.std::__1::pair.2991"* %76, null
  %78 = bitcast %"struct.std::__1::pair.2991"* %76 to i8*
  br i1 %77, label %83, label %79, !prof !27

79:                                               ; preds = %60
  %80 = icmp eq i32 %73, 0
  br i1 %80, label %82, label %81, !prof !2

81:                                               ; preds = %79
  store i32 0, i32* %72, align 4
  br label %82

82:                                               ; preds = %81, %79
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %78) #19
  store %"struct.std::__1::pair.2991"* null, %"struct.std::__1::pair.2991"** %75, align 8
  br label %83

83:                                               ; preds = %82, %60
  %84 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %62, i64 1
  %85 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %61, i64 1
  %86 = icmp eq %"class.WTF::Vector.2988"* %85, %54
  br i1 %86, label %87, label %60

87:                                               ; preds = %83
  %88 = bitcast %"class.WTF::Vector.2985"* %0 to i8**
  %89 = load i8*, i8** %88, align 8
  br label %90

90:                                               ; preds = %56, %87
  %91 = phi i8* [ %89, %87 ], [ %57, %56 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %91) #19
  %92 = bitcast %"class.WTF::Vector.2985"* %0 to i64*
  store atomic i64 %48, i64* %92 monotonic, align 8
  %93 = trunc i64 %47 to i32
  %94 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %93, i32* %94, align 8
  br label %95

95:                                               ; preds = %90, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorINSt3__14pairIN5blink12PhysicalRectEfEELj0ES0_EEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #19
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.68, i64 0, i64 0), i8* %11, i8* %12) #19
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.69, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #19
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #19
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #19
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.2988"* @_ZN3WTF6VectorINS0_INSt3__14pairIN5blink12PhysicalRectEfEELj0ENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.2985"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #19
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i64 0, i64 0), i8* %14, i8* %15) #19
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.63, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #19
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #19
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  %23 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::Vector.2988"*, %"class.WTF::Vector.2988"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %24, i64 %25
  ret %"class.WTF::Vector.2988"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIN5blink12PhysicalRectEfEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS5_EEvOT_(%"class.WTF::Vector.2988"*, %"struct.std::__1::pair.2991"* dereferenceable(20)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.2991"*, %"struct.std::__1::pair.2991"** %6, align 8
  %8 = icmp ugt %"struct.std::__1::pair.2991"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.std::__1::pair.2991", %"struct.std::__1::pair.2991"* %7, i64 %10
  %12 = icmp ugt %"struct.std::__1::pair.2991"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !27

24:                                               ; preds = %13
  %25 = icmp eq %"struct.std::__1::pair.2991"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink12PhysicalRectEfEEEEmm(i64 %26) #19
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIN5blink12PhysicalRectEfEEEEPKcv, i64 0, i64 0)) #19
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.2988"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %27, 20
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.std::__1::pair.2991"*
  br label %99

35:                                               ; preds = %24
  %36 = udiv i64 %27, 20
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.std::__1::pair.2991"*, %"struct.std::__1::pair.2991"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.std::__1::pair.2991"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.std::__1::pair.2991"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !27

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = mul nuw nsw i64 %45, 20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #19
  %47 = bitcast %"class.WTF::Vector.2988"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #19
  %51 = bitcast %"class.WTF::Vector.2988"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.std::__1::pair.2991"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.std::__1::pair.2991"* %1 to i64
  %56 = ptrtoint %"struct.std::__1::pair.2991"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = sdiv exact i64 %57, 20
  %59 = getelementptr inbounds %"class.WTF::Vector.2988", %"class.WTF::Vector.2988"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !27

69:                                               ; preds = %54
  %70 = icmp eq %"struct.std::__1::pair.2991"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink12PhysicalRectEfEEEEmm(i64 %71) #19
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIN5blink12PhysicalRectEfEEEEPKcv, i64 0, i64 0)) #19
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.2988"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.std::__1::pair.2991"*, %"struct.std::__1::pair.2991"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.std::__1::pair.2991"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.std::__1::pair.2991"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !27

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = mul nuw nsw i64 %85, 20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #19
  %87 = bitcast %"class.WTF::Vector.2988"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #19
  %91 = bitcast %"class.WTF::Vector.2988"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = udiv i64 %72, 20
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.std::__1::pair.2991"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.std::__1::pair.2991"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.std::__1::pair.2991", %"struct.std::__1::pair.2991"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.std::__1::pair.2991"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.std::__1::pair.2991"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.std::__1::pair.2991", %"struct.std::__1::pair.2991"* %100, i64 %103
  %105 = bitcast %"struct.std::__1::pair.2991"* %104 to i8*
  %106 = bitcast %"struct.std::__1::pair.2991"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %106, i64 20, i1 false) #19
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink12PhysicalRectEfEEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 107269324
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #19
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 107269324) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.68, i64 0, i64 0), i8* %11, i8* %12) #19
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.69, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #19
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #19
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  %20 = mul i64 %0, 20
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #19
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_120AppendBoxStyleConfigERKN4absl8optionalINS_8BoxStyleEEERNSt3__110unique_ptrINS_8protocol15DictionaryValueENS7_14default_deleteISA_EEEEN3WTF6StringE(%"class.absl::optional.2387"* dereferenceable(12), %"class.std::__1::unique_ptr.2440"* nocapture readonly dereferenceable(8), %"class.WTF::StringImpl"*) unnamed_addr #1 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %9, align 8
  %10 = getelementptr inbounds %"class.absl::optional.2387", %"class.absl::optional.2387"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 4, !range !26
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %113, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.absl::optional.2387", %"class.absl::optional.2387"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %15 = getelementptr inbounds %"struct.blink::BoxStyle", %"struct.blink::BoxStyle"* %14, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.absl::optional.2387", %"class.absl::optional.2387"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %113, label %22

22:                                               ; preds = %13, %18
  %23 = tail call i8* @_Znwm(i64 80) #18
  %24 = bitcast i8* %23 to %"class.blink::protocol::DictionaryValue"*
  tail call void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"* nonnull %24) #19
  %25 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i64 9) #19
  %26 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #19
  %27 = load i8, i8* %10, align 4, !range !26
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %30, !prof !2

29:                                               ; preds = %22
  call void @llvm.trap() #19
  unreachable

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"struct.blink::BoxStyle", %"struct.blink::BoxStyle"* %14, i64 0, i32 0
  %32 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color10SerializedEv(%"class.blink::Color"* %31) #19
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %24, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #19
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #19
  br label %49

49:                                               ; preds = %30, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #19
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #19
  br label %66

66:                                               ; preds = %49, %62, %65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #19
  %67 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.103, i64 0, i64 0), i64 10) #19
  %68 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #19
  %69 = load i8, i8* %10, align 4, !range !26
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %72, !prof !2

71:                                               ; preds = %66
  call void @llvm.trap() #19
  unreachable

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.absl::optional.2387", %"class.absl::optional.2387"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %74 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color10SerializedEv(%"class.blink::Color"* %73) #19
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %75, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %24, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::String"* nonnull dereferenceable(8) %8) #19
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #19
  br label %91

91:                                               ; preds = %72, %87, %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #19
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %104

102:                                              ; preds = %95
  %103 = add i32 %101, -1
  store i32 %103, i32* %100, align 4
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32 [ %103, %102 ], [ %101, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #19
  br label %108

108:                                              ; preds = %107, %104, %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #19
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.2440", %"class.std::__1::unique_ptr.2440"* %1, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.blink::protocol::DictionaryValue"*, %"class.blink::protocol::DictionaryValue"** %109, align 8
  %111 = bitcast i8* %23 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol15DictionaryValue8setValueERKN3WTF6StringENSt3__110unique_ptrINS0_5ValueENS6_14default_deleteIS8_EEEE(%"class.blink::protocol::DictionaryValue"* %110, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::protocol::Value"* nonnull %111) #19
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  br label %113

113:                                              ; preds = %18, %108, %3
  %114 = phi %"class.WTF::StringImpl"* [ %2, %3 ], [ %112, %108 ], [ %2, %18 ]
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %129, label %116

116:                                              ; preds = %113
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  br i1 %120, label %123, label %125

123:                                              ; preds = %116
  %124 = add i32 %122, -1
  store i32 %124, i32* %121, align 4
  br label %125

125:                                              ; preds = %123, %116
  %126 = phi i32 [ %124, %123 ], [ %122, %116 ]
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %125
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %114) #19
  br label %129

129:                                              ; preds = %113, %125, %128
  ret void
}

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_121CollectQuadsRecursiveEPNS_4NodeERN3WTF6VectorINS_9FloatQuadELj0ENS3_18PartitionAllocatorEEE(%"class.blink::Node"*, %"class.WTF::Vector.2542"* dereferenceable(16)) unnamed_addr #1 {
  %3 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %6, label %12, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::NodeData"** %7 to %"class.blink::NodeRareData"**
  %10 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %10, i64 0, i32 1, i32 0, i32 0
  br label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.blink::NodeData"** %7 to %"class.blink::NodeRenderingData"**
  br label %14

14:                                               ; preds = %8, %12
  %15 = phi %"class.blink::NodeRenderingData"** [ %11, %8 ], [ %13, %12 ]
  %16 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %16, i64 0, i32 1
  %18 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %17, align 8
  %19 = icmp ne %"class.blink::LayoutObject"* %18, null
  br i1 %19, label %20, label %26

20:                                               ; preds = %14
  %21 = bitcast %"class.blink::LayoutObject"* %18 to i1 (%"class.blink::LayoutObject"*)***
  %22 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %21, align 8
  %23 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %22, i64 26
  %24 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.blink::LayoutObject"* nonnull %18) #19
  br i1 %25, label %32, label %43

26:                                               ; preds = %14
  %27 = and i32 %4, 12
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %48

29:                                               ; preds = %26
  %30 = bitcast %"class.blink::Node"* %0 to %"class.blink::Element"*
  %31 = tail call zeroext i1 @_ZNK5blink7Element23HasDisplayContentsStyleEv(%"class.blink::Element"* %30) #19
  br i1 %31, label %32, label %48

32:                                               ; preds = %29, %20
  %33 = tail call %"class.blink::Node"* @_ZN5blink26LayoutTreeBuilderTraversal10FirstChildERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %0) #19
  %34 = icmp eq %"class.blink::Node"* %33, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %32
  %36 = tail call %"class.blink::Node"* @_ZN5blink26LayoutTreeBuilderTraversal10FirstChildERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %0) #19
  %37 = icmp eq %"class.blink::Node"* %36, null
  br i1 %37, label %48, label %38

38:                                               ; preds = %35, %38
  %39 = phi %"class.blink::Node"* [ %40, %38 ], [ %36, %35 ]
  tail call fastcc void @_ZN5blink12_GLOBAL__N_121CollectQuadsRecursiveEPNS_4NodeERN3WTF6VectorINS_9FloatQuadELj0ENS3_18PartitionAllocatorEEE(%"class.blink::Node"* nonnull %39, %"class.WTF::Vector.2542"* dereferenceable(16) %1)
  %40 = tail call %"class.blink::Node"* @_ZN5blink26LayoutTreeBuilderTraversal11NextSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %39) #19
  %41 = icmp eq %"class.blink::Node"* %40, null
  br i1 %41, label %48, label %38

42:                                               ; preds = %32
  br i1 %19, label %43, label %48

43:                                               ; preds = %20, %42
  %44 = bitcast %"class.blink::LayoutObject"* %18 to void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.2542"*, i32)***
  %45 = load void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.2542"*, i32)**, void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.2542"*, i32)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.2542"*, i32)*, void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.2542"*, i32)** %45, i64 67
  %47 = load void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.2542"*, i32)*, void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.2542"*, i32)** %46, align 8
  tail call void %47(%"class.blink::LayoutObject"* nonnull %18, %"class.WTF::Vector.2542"* dereferenceable(16) %1, i32 0) #19
  br label %48

48:                                               ; preds = %38, %35, %26, %29, %42, %43
  ret void
}

declare zeroext i1 @_ZNK5blink7Element23HasDisplayContentsStyleEv(%"class.blink::Element"*) local_unnamed_addr #3

declare %"class.blink::Node"* @_ZN5blink26LayoutTreeBuilderTraversal10FirstChildERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #3

declare %"class.blink::Node"* @_ZN5blink26LayoutTreeBuilderTraversal11NextSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #3

declare dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"*) local_unnamed_addr #3

declare void @_ZN5blink13StyleResolver24CascadedValuesForElementEPNS_7ElementENS_8PseudoIdE(%"class.blink::HeapHashMap.3016"* sret, %"class.blink::StyleResolver"*, %"class.blink::Element"*, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_125GetAuthoredGridTrackSizesEPKNS_8CSSValueEm(%"class.WTF::Vector.630"* noalias sret, %"class.blink::CSSValue"* readonly, i64) unnamed_addr #1 {
  %4 = alloca %"class.WTF::Vector.630", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 2
  %11 = bitcast %"class.WTF::Vector.630"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #19
  %12 = icmp eq %"class.blink::CSSValue"* %1, null
  br i1 %12, label %241, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp ult i8 %15, 52
  br i1 %16, label %241, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %19 = bitcast i8* %18 to %"class.blink::Member.1304"**
  %20 = load %"class.blink::Member.1304"*, %"class.blink::Member.1304"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 6, i32 2
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"class.blink::Member.1304", %"class.blink::Member.1304"* %20, i64 %24
  %26 = icmp eq i32 %23, 0
  br i1 %26, label %241, label %27

27:                                               ; preds = %17
  %28 = bitcast %"class.WTF::String"* %6 to i8*
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %30 = bitcast %"class.WTF::Vector.630"* %4 to i8*
  %31 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %4, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %4, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %4, i64 0, i32 0, i32 0, i32 2
  %34 = bitcast %"class.WTF::String"* %5 to i8*
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %36 = bitcast %"class.WTF::Vector.630"* %4 to i8**
  %37 = bitcast %"class.WTF::String"* %7 to i8*
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  br label %39

39:                                               ; preds = %27, %237
  %40 = phi i64 [ %2, %27 ], [ %238, %237 ]
  %41 = phi %"class.blink::Member.1304"* [ %20, %27 ], [ %239, %237 ]
  %42 = getelementptr inbounds %"class.blink::Member.1304", %"class.blink::Member.1304"* %41, i64 0, i32 0, i32 0
  %43 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %42, align 8
  %44 = icmp eq %"class.blink::CSSValue"* %43, null
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = load i8, i8* inttoptr (i64 2 to i8*), align 2
  br label %204

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %43, i64 0, i32 2
  %49 = load i8, i8* %48, align 1
  switch i8 %49, label %204 [
    i8 56, label %50
    i8 57, label %144
  ]

50:                                               ; preds = %47
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 16, i1 false) #19
  %51 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %43, i64 2, i32 2
  %52 = bitcast i8* %51 to %"class.blink::Member.1304"**
  %53 = load %"class.blink::Member.1304"*, %"class.blink::Member.1304"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %43, i64 6, i32 2
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"class.blink::Member.1304", %"class.blink::Member.1304"* %53, i64 %57
  %59 = icmp eq i32 %56, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %99, %50
  %61 = icmp eq i64 %40, 0
  br i1 %61, label %108, label %102

62:                                               ; preds = %50, %99
  %63 = phi %"class.blink::Member.1304"* [ %100, %99 ], [ %53, %50 ]
  %64 = getelementptr inbounds %"class.blink::Member.1304", %"class.blink::Member.1304"* %63, i64 0, i32 0, i32 0
  %65 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %65, i64 0, i32 2
  %67 = load i8, i8* %66, align 1
  %68 = icmp eq i8 %67, 55
  br i1 %68, label %99, label %69

69:                                               ; preds = %62
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #19
  %70 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %65) #19
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %35, align 8
  %71 = load i32, i32* %33, align 4
  %72 = load i32, i32* %32, align 8
  %73 = icmp eq i32 %71, %72
  br i1 %73, label %82, label %74, !prof !2

74:                                               ; preds = %69
  %75 = ptrtoint %"class.WTF::StringImpl"* %70 to i64
  %76 = load %"class.WTF::String"*, %"class.WTF::String"** %31, align 8
  %77 = zext i32 %71 to i64
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %76, i64 %77
  %79 = bitcast %"class.WTF::String"* %78 to i64*
  store i64 %75, i64* %79, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %35, align 8
  %80 = load i32, i32* %33, align 4
  %81 = add i32 %80, 1
  store i32 %81, i32* %33, align 4
  br label %98

82:                                               ; preds = %69
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.630"* nonnull %4, %"class.WTF::String"* nonnull dereferenceable(8) %5) #19
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %92, label %94

92:                                               ; preds = %85
  %93 = add i32 %91, -1
  store i32 %93, i32* %90, align 4
  br label %94

94:                                               ; preds = %92, %85
  %95 = phi i32 [ %93, %92 ], [ %91, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %83) #19
  br label %98

98:                                               ; preds = %74, %82, %94, %97
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #19
  br label %99

99:                                               ; preds = %98, %62
  %100 = getelementptr inbounds %"class.blink::Member.1304", %"class.blink::Member.1304"* %63, i64 1
  %101 = icmp eq %"class.blink::Member.1304"* %100, %58
  br i1 %101, label %60, label %62

102:                                              ; preds = %60, %102
  %103 = phi i64 [ %106, %102 ], [ %40, %60 ]
  %104 = load %"class.WTF::String"*, %"class.WTF::String"** %31, align 8
  %105 = load i32, i32* %33, align 4
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6AppendIS1_EEvPKT_j(%"class.WTF::Vector.630"* %0, %"class.WTF::String"* %104, i32 %105) #19
  %106 = add i64 %103, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %102

108:                                              ; preds = %102, %60
  %109 = load %"class.WTF::String"*, %"class.WTF::String"** %31, align 8
  %110 = icmp eq %"class.WTF::String"* %109, null
  br i1 %110, label %143, label %111, !prof !27

111:                                              ; preds = %108
  %112 = bitcast %"class.WTF::String"* %109 to i8*
  %113 = load i32, i32* %33, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %141, label %115, !prof !2

115:                                              ; preds = %111
  %116 = zext i32 %113 to i64
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %109, i64 %116
  br label %118

118:                                              ; preds = %136, %115
  %119 = phi %"class.WTF::String"* [ %137, %136 ], [ %109, %115 ]
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #19
  br label %136

136:                                              ; preds = %135, %132, %118
  %137 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 1
  %138 = icmp eq %"class.WTF::String"* %137, %117
  br i1 %138, label %139, label %118

139:                                              ; preds = %136
  store i32 0, i32* %33, align 4
  %140 = load i8*, i8** %36, align 8
  br label %141

141:                                              ; preds = %139, %111
  %142 = phi i8* [ %140, %139 ], [ %112, %111 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %142) #19
  store %"class.WTF::String"* null, %"class.WTF::String"** %31, align 8
  br label %143

143:                                              ; preds = %141, %108
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #19
  br label %237

144:                                              ; preds = %47
  %145 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %43, i64 18, i32 2
  %146 = bitcast i8* %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %237, label %149

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %43, i64 2, i32 2
  %151 = bitcast i8* %150 to %"class.blink::Member.1304"**
  %152 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %43, i64 6, i32 2
  %153 = bitcast i8* %152 to i32*
  br label %154

154:                                              ; preds = %161, %149
  %155 = phi i64 [ 0, %149 ], [ %162, %161 ]
  %156 = load %"class.blink::Member.1304"*, %"class.blink::Member.1304"** %151, align 8
  %157 = load i32, i32* %153, align 4
  %158 = zext i32 %157 to i64
  %159 = getelementptr inbounds %"class.blink::Member.1304", %"class.blink::Member.1304"* %156, i64 %158
  %160 = icmp eq i32 %157, 0
  br i1 %160, label %161, label %164

161:                                              ; preds = %201, %154
  %162 = add nuw i64 %155, 1
  %163 = icmp eq i64 %162, %147
  br i1 %163, label %237, label %154

164:                                              ; preds = %154, %201
  %165 = phi %"class.blink::Member.1304"* [ %202, %201 ], [ %156, %154 ]
  %166 = getelementptr inbounds %"class.blink::Member.1304", %"class.blink::Member.1304"* %165, i64 0, i32 0, i32 0
  %167 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %166, align 8
  %168 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %167, i64 0, i32 2
  %169 = load i8, i8* %168, align 1
  %170 = icmp eq i8 %169, 55
  br i1 %170, label %201, label %171

171:                                              ; preds = %164
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #19
  %172 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %167) #19
  store %"class.WTF::StringImpl"* %172, %"class.WTF::StringImpl"** %29, align 8
  %173 = load i32, i32* %10, align 4
  %174 = load i32, i32* %9, align 8
  %175 = icmp eq i32 %173, %174
  br i1 %175, label %184, label %176, !prof !2

176:                                              ; preds = %171
  %177 = ptrtoint %"class.WTF::StringImpl"* %172 to i64
  %178 = load %"class.WTF::String"*, %"class.WTF::String"** %8, align 8
  %179 = zext i32 %173 to i64
  %180 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %179
  %181 = bitcast %"class.WTF::String"* %180 to i64*
  store i64 %177, i64* %181, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %29, align 8
  %182 = load i32, i32* %10, align 4
  %183 = add i32 %182, 1
  store i32 %183, i32* %10, align 4
  br label %200

184:                                              ; preds = %171
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.630"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %6) #19
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %185, null
  br i1 %186, label %200, label %187

187:                                              ; preds = %184
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load atomic i32, i32* %188 monotonic, align 4
  %190 = and i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 0
  %193 = load i32, i32* %192, align 4
  br i1 %191, label %194, label %196

194:                                              ; preds = %187
  %195 = add i32 %193, -1
  store i32 %195, i32* %192, align 4
  br label %196

196:                                              ; preds = %194, %187
  %197 = phi i32 [ %195, %194 ], [ %193, %187 ]
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %196
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %185) #19
  br label %200

200:                                              ; preds = %176, %184, %196, %199
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #19
  br label %201

201:                                              ; preds = %164, %200
  %202 = getelementptr inbounds %"class.blink::Member.1304", %"class.blink::Member.1304"* %165, i64 1
  %203 = icmp eq %"class.blink::Member.1304"* %202, %159
  br i1 %203, label %161, label %164

204:                                              ; preds = %47, %45
  %205 = phi i8 [ %46, %45 ], [ %49, %47 ]
  %206 = icmp eq i8 %205, 55
  br i1 %206, label %237, label %207

207:                                              ; preds = %204
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #19
  %208 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %43) #19
  store %"class.WTF::StringImpl"* %208, %"class.WTF::StringImpl"** %38, align 8
  %209 = load i32, i32* %10, align 4
  %210 = load i32, i32* %9, align 8
  %211 = icmp eq i32 %209, %210
  br i1 %211, label %220, label %212, !prof !2

212:                                              ; preds = %207
  %213 = ptrtoint %"class.WTF::StringImpl"* %208 to i64
  %214 = load %"class.WTF::String"*, %"class.WTF::String"** %8, align 8
  %215 = zext i32 %209 to i64
  %216 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %214, i64 %215
  %217 = bitcast %"class.WTF::String"* %216 to i64*
  store i64 %213, i64* %217, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %38, align 8
  %218 = load i32, i32* %10, align 4
  %219 = add i32 %218, 1
  store i32 %219, i32* %10, align 4
  br label %236

220:                                              ; preds = %207
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.630"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %7) #19
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %220
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #19
  br label %236

236:                                              ; preds = %212, %220, %232, %235
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #19
  br label %237

237:                                              ; preds = %161, %144, %143, %204, %236
  %238 = phi i64 [ %40, %204 ], [ 0, %143 ], [ %40, %236 ], [ %40, %144 ], [ %40, %161 ]
  %239 = getelementptr inbounds %"class.blink::Member.1304", %"class.blink::Member.1304"* %41, i64 1
  %240 = icmp eq %"class.blink::Member.1304"* %239, %25
  br i1 %240, label %241, label %39

241:                                              ; preds = %237, %17, %3, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::protocol::ListValue"* @_ZN5blink12_GLOBAL__N_119BuildGridTrackSizesEPNS_4NodeENS_24GridTrackSizingDirectionEfNS_10LayoutUnitERKN3WTF6VectorIS4_Lj0ENS5_18PartitionAllocatorEEESA_PKNS6_INS5_6StringELj0ES7_EE(%"class.blink::Node"* nocapture readonly, i32, float, i32, %"class.WTF::Vector.3011"* dereferenceable(16), %"class.WTF::Vector.3011"* dereferenceable(16), %"class.WTF::Vector.630"*) unnamed_addr #1 {
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %13, label %19, label %15

15:                                               ; preds = %7
  %16 = bitcast %"class.blink::NodeData"** %14 to %"class.blink::NodeRareData"**
  %17 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %17, i64 0, i32 1, i32 0, i32 0
  br label %21

19:                                               ; preds = %7
  %20 = bitcast %"class.blink::NodeData"** %14 to %"class.blink::NodeRenderingData"**
  br label %21

21:                                               ; preds = %15, %19
  %22 = phi %"class.blink::NodeRenderingData"** [ %18, %15 ], [ %20, %19 ]
  %23 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %23, i64 0, i32 1
  %25 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %26 = icmp eq i32 %1, 0
  br i1 %26, label %27, label %35

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %25, i64 0, i32 5, i32 0
  %29 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %29, i64 0, i32 0, i32 9
  %31 = bitcast [20 x i8]* %30 to i160*
  %32 = load i160, i160* %31, align 8
  %33 = and i160 %32, 41538374868278621028243970633760768
  %34 = icmp ne i160 %33, 0
  br label %35

35:                                               ; preds = %27, %21
  %36 = phi i1 [ false, %21 ], [ %34, %27 ]
  %37 = tail call i8* @_Znwm(i64 40) #18
  %38 = bitcast i8* %37 to %"class.blink::protocol::ListValue"*
  tail call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %38) #19
  %39 = getelementptr inbounds %"class.WTF::Vector.3011", %"class.WTF::Vector.3011"* %4, i64 0, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i64
  %42 = icmp eq i32 %1, 1
  %43 = xor i1 %42, true
  %44 = zext i1 %43 to i32
  %45 = tail call fastcc i32 @_ZN5blink12_GLOBAL__N_121GetPositionForTrackAtEPKNS_12LayoutObjectEmNS_24GridTrackSizingDirectionERKN3WTF6VectorINS_10LayoutUnitELj0ENS5_18PartitionAllocatorEEE(%"class.blink::LayoutObject"* %25, i64 0, i32 %44, %"class.WTF::Vector.3011"* dereferenceable(16) %5) #19
  %46 = icmp ugt i32 %40, 1
  br i1 %46, label %47, label %183

47:                                               ; preds = %35
  %48 = add nsw i64 %41, -1
  %49 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %25, i64 0, i32 5, i32 0
  %50 = bitcast %"class.WTF::String"* %8 to i8*
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %6, i64 0, i32 0, i32 0, i32 2
  %53 = bitcast %"class.WTF::String"* %9 to i8*
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  br label %55

55:                                               ; preds = %179, %47
  %56 = phi i64 [ 1, %47 ], [ %181, %179 ]
  %57 = call fastcc i32 @_ZN5blink12_GLOBAL__N_121GetPositionForTrackAtEPKNS_12LayoutObjectEmNS_24GridTrackSizingDirectionERKN3WTF6VectorINS_10LayoutUnitELj0ENS5_18PartitionAllocatorEEE(%"class.blink::LayoutObject"* %25, i64 %56, i32 %1, %"class.WTF::Vector.3011"* dereferenceable(16) %4)
  %58 = add nsw i64 %56, -1
  %59 = call fastcc i32 @_ZN5blink12_GLOBAL__N_121GetPositionForTrackAtEPKNS_12LayoutObjectEmNS_24GridTrackSizingDirectionERKN3WTF6VectorINS_10LayoutUnitELj0ENS5_18PartitionAllocatorEEE(%"class.blink::LayoutObject"* %25, i64 %58, i32 %1, %"class.WTF::Vector.3011"* dereferenceable(16) %4)
  %60 = icmp ult i64 %56, %48
  %61 = select i1 %60, i32 %3, i32 0
  %62 = icmp sgt i32 %59, -1
  %63 = select i1 %62, i32 -2147483648, i32 2147483647
  %64 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %57, i32 %59) #19
  %65 = extractvalue { i32, i1 } %64, 1
  %66 = extractvalue { i32, i1 } %64, 0
  %67 = select i1 %65, i32 %63, i32 %66, !prof !2
  %68 = icmp sgt i32 %61, -1
  %69 = select i1 %68, i32 -2147483648, i32 2147483647
  %70 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %67, i32 %61) #19
  %71 = extractvalue { i32, i1 } %70, 1
  %72 = extractvalue { i32, i1 } %70, 0
  %73 = select i1 %71, i32 %69, i32 %72, !prof !2
  br i1 %36, label %74, label %85

74:                                               ; preds = %55
  %75 = icmp sgt i32 %57, -1
  %76 = select i1 %75, i32 -2147483648, i32 2147483647
  %77 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %59, i32 %57) #19
  %78 = extractvalue { i32, i1 } %77, 1
  %79 = extractvalue { i32, i1 } %77, 0
  %80 = select i1 %78, i32 %76, i32 %79, !prof !2
  %81 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %80, i32 %61) #19
  %82 = extractvalue { i32, i1 } %81, 1
  %83 = extractvalue { i32, i1 } %81, 0
  %84 = select i1 %82, i32 %69, i32 %83, !prof !2
  br label %85

85:                                               ; preds = %74, %55
  %86 = phi i32 [ %84, %74 ], [ %73, %55 ]
  %87 = sdiv i32 %86, 2
  %88 = sext i32 %87 to i64
  %89 = call i1 @llvm.is.constant.i64(i64 %88) #19
  br i1 %89, label %96, label %90

90:                                               ; preds = %85
  %91 = icmp slt i32 %86, -1
  %92 = select i1 %91, i32 -2147483648, i32 2147483647
  %93 = add nsw i64 %88, 2147483648
  %94 = icmp ult i64 %93, 4294967296
  %95 = select i1 %94, i32 %87, i32 %92, !prof !27
  br label %96

96:                                               ; preds = %85, %90
  %97 = phi i32 [ %95, %90 ], [ %87, %85 ]
  %98 = icmp slt i32 %97, 0
  %99 = select i1 %98, i32 -2147483648, i32 2147483647
  %100 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %59, i32 %97) #19
  %101 = extractvalue { i32, i1 } %100, 1
  %102 = extractvalue { i32, i1 } %100, 0
  %103 = select i1 %101, i32 %99, i32 %102, !prof !2
  br i1 %36, label %104, label %119

104:                                              ; preds = %96
  br i1 %89, label %111, label %105

105:                                              ; preds = %104
  %106 = icmp slt i32 %86, -1
  %107 = select i1 %106, i32 -2147483648, i32 2147483647
  %108 = add nsw i64 %88, 2147483648
  %109 = icmp ult i64 %108, 4294967296
  %110 = select i1 %109, i32 %87, i32 %107, !prof !27
  br label %111

111:                                              ; preds = %104, %105
  %112 = phi i32 [ %110, %105 ], [ %87, %104 ]
  %113 = icmp sgt i32 %112, -1
  %114 = select i1 %113, i32 -2147483648, i32 2147483647
  %115 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %59, i32 %112) #19
  %116 = extractvalue { i32, i1 } %115, 1
  %117 = extractvalue { i32, i1 } %115, 0
  %118 = select i1 %116, i32 %114, i32 %117, !prof !2
  br label %119

119:                                              ; preds = %111, %96
  %120 = phi i32 [ %118, %111 ], [ %103, %96 ]
  %121 = sitofp i32 %86 to float
  %122 = fmul float %121, 1.562500e-02
  %123 = fmul float %122, %2
  %124 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %49, align 8
  %125 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %124, i64 0, i32 0, i32 1, i32 0, i32 0
  %126 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %125, align 8
  %127 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %126, i64 0, i32 2, i32 0, i32 0
  %128 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %127, align 8
  %129 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %128, i64 0, i32 6
  %130 = load float, float* %129, align 8
  %131 = fdiv float %123, %130
  %132 = select i1 %42, i32 %120, i32 %45
  %133 = select i1 %42, i32 %45, i32 %120
  %134 = zext i32 %132 to i64
  %135 = shl nuw i64 %134, 32
  %136 = zext i32 %133 to i64
  %137 = or i64 %135, %136
  %138 = call fastcc i64 @_ZN5blink12_GLOBAL__N_120LocalToAbsolutePointEPNS_4NodeENS_14PhysicalOffsetEf(%"class.blink::Node"* %0, i64 %137, float %2)
  %139 = call fastcc %"class.blink::protocol::DictionaryValue"* @_ZN5blink12_GLOBAL__N_113BuildPositionENS_14PhysicalOffsetE(i64 %138)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.134, i64 0, i64 0), i64 12) #19
  %140 = fpext float %131 to double
  call void @_ZN5blink8protocol15DictionaryValue9setDoubleERKN3WTF6StringEd(%"class.blink::protocol::DictionaryValue"* %139, %"class.WTF::String"* nonnull dereferenceable(8) %8, double %140) #19
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %119
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #19
  br label %156

156:                                              ; preds = %119, %152, %155
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #19
  %157 = load i32, i32* %52, align 4
  %158 = zext i32 %157 to i64
  %159 = icmp ult i64 %58, %158
  br i1 %159, label %160, label %179

160:                                              ; preds = %156
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.135, i64 0, i64 0), i64 12) #19
  %161 = trunc i64 %58 to i32
  %162 = call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.630"* %6, i32 %161)
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* %139, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.WTF::String"* dereferenceable(8) %162) #19
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %178, label %165

165:                                              ; preds = %160
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = and i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  br i1 %169, label %172, label %174

172:                                              ; preds = %165
  %173 = add i32 %171, -1
  store i32 %173, i32* %170, align 4
  br label %174

174:                                              ; preds = %172, %165
  %175 = phi i32 [ %173, %172 ], [ %171, %165 ]
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %174
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %163) #19
  br label %178

178:                                              ; preds = %160, %174, %177
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #19
  br label %179

179:                                              ; preds = %156, %178
  %180 = bitcast %"class.blink::protocol::DictionaryValue"* %139 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol9ListValue9pushValueENSt3__110unique_ptrINS0_5ValueENS2_14default_deleteIS4_EEEE(%"class.blink::protocol::ListValue"* nonnull %38, %"class.blink::protocol::Value"* %180) #19
  %181 = add nuw nsw i64 %56, 1
  %182 = icmp eq i64 %181, %41
  br i1 %182, label %183, label %55

183:                                              ; preds = %179, %35
  ret %"class.blink::protocol::ListValue"* %38
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3011"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.3011", %"class.WTF::Vector.3011"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #19
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i64 0, i64 0), i8* %14, i8* %15) #19
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.63, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #19
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #19
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  %23 = getelementptr inbounds %"class.WTF::Vector.3011", %"class.WTF::Vector.3011"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %24, i64 %25
  ret %"class.blink::LayoutUnit"* %26
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN5blink12_GLOBAL__N_121GetPositionForTrackAtEPKNS_12LayoutObjectEmNS_24GridTrackSizingDirectionERKN3WTF6VectorINS_10LayoutUnitELj0ENS5_18PartitionAllocatorEEE(%"class.blink::LayoutObject"*, i64, i32, %"class.WTF::Vector.3011"* dereferenceable(16)) unnamed_addr #1 {
  %5 = icmp eq i32 %2, 1
  %6 = trunc i64 %1 to i32
  %7 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3011"* %3, i32 %6)
  %8 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  br i1 %5, label %49, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 5, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 9
  %14 = bitcast [20 x i8]* %13 to i160*
  %15 = load i160, i160* %14, align 8
  %16 = and i160 %15, 41538374868278621028243970633760768
  %17 = icmp eq i160 %16, 0
  br i1 %17, label %49, label %18

18:                                               ; preds = %10
  %19 = bitcast %"class.blink::LayoutObject"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %20 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %20, i64 92
  %22 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %21, align 8
  %23 = tail call zeroext i1 %22(%"class.blink::LayoutObject"* %0, i32 10) #19
  br i1 %23, label %24, label %27

24:                                               ; preds = %18
  %25 = bitcast %"class.blink::LayoutObject"* %0 to %"class.blink::LayoutGrid"*
  %26 = tail call i32 @_ZNK5blink10LayoutGrid22TranslateRTLCoordinateENS_10LayoutUnitE(%"class.blink::LayoutGrid"* %25, i32 %9) #19
  br label %49

27:                                               ; preds = %18
  %28 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3011"* %3, i32 0) #19
  %29 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %28, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.WTF::Vector.3011", %"class.WTF::Vector.3011"* %3, i64 0, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = add i32 %32, -1
  %34 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3011"* %3, i32 %33) #19
  %35 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %34, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %30, 0
  %38 = select i1 %37, i32 -2147483648, i32 2147483647
  %39 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %36, i32 %30) #19
  %40 = extractvalue { i32, i1 } %39, 1
  %41 = extractvalue { i32, i1 } %39, 0
  %42 = select i1 %40, i32 %38, i32 %41, !prof !2
  %43 = icmp sgt i32 %9, -1
  %44 = select i1 %43, i32 -2147483648, i32 2147483647
  %45 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %42, i32 %9) #19
  %46 = extractvalue { i32, i1 } %45, 1
  %47 = extractvalue { i32, i1 } %45, 0
  %48 = select i1 %46, i32 %44, i32 %47, !prof !2
  br label %49

49:                                               ; preds = %27, %24, %10, %4
  %50 = phi i32 [ %9, %4 ], [ %9, %10 ], [ %26, %24 ], [ %48, %27 ]
  ret i32 %50
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::protocol::ListValue"* @_ZN5blink12_GLOBAL__N_136BuildGridPositiveLineNumberPositionsEPNS_4NodeERKNS_10LayoutUnitENS_24GridTrackSizingDirectionEfRKN3WTF6VectorIS3_Lj0ENS7_18PartitionAllocatorEEESC_(%"class.blink::Node"* nocapture readonly, %"class.blink::LayoutUnit"* nocapture readonly dereferenceable(4), i32, float, %"class.WTF::Vector.3011"* dereferenceable(16), %"class.WTF::Vector.3011"* dereferenceable(16)) unnamed_addr #1 {
  %7 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %10, label %16, label %12

12:                                               ; preds = %6
  %13 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRareData"**
  %14 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %14, i64 0, i32 1, i32 0, i32 0
  br label %18

16:                                               ; preds = %6
  %17 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRenderingData"**
  br label %18

18:                                               ; preds = %12, %16
  %19 = phi %"class.blink::NodeRenderingData"** [ %15, %12 ], [ %17, %16 ]
  %20 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %20, i64 0, i32 1
  %22 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %23 = icmp eq %"class.blink::LayoutObject"* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.blink::LayoutObject"* %22 to %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)***
  %26 = load %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)** %26, i64 33
  %28 = load %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)** %27, align 8
  %29 = tail call %"class.blink::LayoutNGGridInterface"* %28(%"class.blink::LayoutObject"* nonnull %22) #19
  br label %30

30:                                               ; preds = %18, %24
  %31 = phi %"class.blink::LayoutNGGridInterface"* [ %29, %24 ], [ null, %18 ]
  %32 = icmp eq i32 %2, 0
  br i1 %32, label %33, label %41

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %22, i64 0, i32 5, i32 0
  %35 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %35, i64 0, i32 0, i32 9
  %37 = bitcast [20 x i8]* %36 to i160*
  %38 = load i160, i160* %37, align 8
  %39 = and i160 %38, 41538374868278621028243970633760768
  %40 = icmp ne i160 %39, 0
  br label %41

41:                                               ; preds = %33, %30
  %42 = phi i1 [ false, %30 ], [ %40, %33 ]
  %43 = tail call i8* @_Znwm(i64 40) #18
  %44 = bitcast i8* %43 to %"class.blink::protocol::ListValue"*
  tail call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %44) #19
  %45 = getelementptr inbounds %"class.WTF::Vector.3011", %"class.WTF::Vector.3011"* %4, i64 0, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i64
  %48 = icmp eq i32 %2, 1
  %49 = xor i1 %48, true
  %50 = zext i1 %49 to i32
  %51 = tail call fastcc i32 @_ZN5blink12_GLOBAL__N_121GetPositionForTrackAtEPKNS_12LayoutObjectEmNS_24GridTrackSizingDirectionERKN3WTF6VectorINS_10LayoutUnitELj0ENS5_18PartitionAllocatorEEE(%"class.blink::LayoutObject"* %22, i64 0, i32 %50, %"class.WTF::Vector.3011"* dereferenceable(16) %5) #19
  %52 = bitcast %"class.blink::LayoutNGGridInterface"* %31 to i64 (%"class.blink::LayoutNGGridInterface"*, i32)***
  %53 = load i64 (%"class.blink::LayoutNGGridInterface"*, i32)**, i64 (%"class.blink::LayoutNGGridInterface"*, i32)*** %52, align 8
  %54 = load i64 (%"class.blink::LayoutNGGridInterface"*, i32)*, i64 (%"class.blink::LayoutNGGridInterface"*, i32)** %53, align 8
  %55 = tail call i64 %54(%"class.blink::LayoutNGGridInterface"* %31, i32 %2) #19
  %56 = icmp ult i64 %55, %47
  br i1 %56, label %57, label %115

57:                                               ; preds = %41
  %58 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1, i64 0, i32 0
  %59 = add nsw i64 %47, -1
  br label %60

60:                                               ; preds = %97, %57
  %61 = phi i64 [ %55, %57 ], [ %113, %97 ]
  %62 = load i32, i32* %58, align 4
  %63 = sdiv i32 %62, 2
  %64 = sext i32 %63 to i64
  %65 = tail call i1 @llvm.is.constant.i64(i64 %64) #19
  br i1 %65, label %72, label %66

66:                                               ; preds = %60
  %67 = icmp slt i32 %62, -1
  %68 = select i1 %67, i32 -2147483648, i32 2147483647
  %69 = add nsw i64 %64, 2147483648
  %70 = icmp ult i64 %69, 4294967296
  %71 = select i1 %70, i32 %63, i32 %68, !prof !27
  br label %72

72:                                               ; preds = %60, %66
  %73 = phi i32 [ %71, %66 ], [ %63, %60 ]
  br i1 %42, label %74, label %85

74:                                               ; preds = %72
  %75 = sitofp i32 %73 to float
  %76 = fmul float %75, -1.562500e-02
  %77 = fmul float %76, 6.400000e+01
  %78 = fcmp ult float %77, 0xC1E0000000000000
  %79 = fcmp ugt float %77, 0x41DFFFFFE0000000
  %80 = fcmp ogt float %77, 0xC1E0000000000000
  %81 = select i1 %80, float %77, float 0xC1E0000000000000
  %82 = fptosi float %81 to i32
  %83 = select i1 %78, i32 0, i32 2147483647
  %84 = select i1 %79, i32 %83, i32 %82
  br label %85

85:                                               ; preds = %74, %72
  %86 = phi i32 [ %84, %74 ], [ %73, %72 ]
  %87 = icmp eq i32 %62, 0
  %88 = icmp eq i64 %61, 0
  %89 = or i1 %88, %87
  %90 = icmp eq i64 %61, %59
  %91 = or i1 %90, %89
  %92 = tail call fastcc i32 @_ZN5blink12_GLOBAL__N_121GetPositionForTrackAtEPKNS_12LayoutObjectEmNS_24GridTrackSizingDirectionERKN3WTF6VectorINS_10LayoutUnitELj0ENS5_18PartitionAllocatorEEE(%"class.blink::LayoutObject"* %22, i64 %61, i32 %2, %"class.WTF::Vector.3011"* dereferenceable(16) %4)
  br i1 %91, label %95, label %93

93:                                               ; preds = %85
  %94 = icmp sgt i32 %86, -1
  br i1 %94, label %95, label %97

95:                                               ; preds = %85, %93
  %96 = phi i32 [ %86, %93 ], [ 0, %85 ]
  br label %97

97:                                               ; preds = %93, %95
  %98 = phi i32 [ %96, %95 ], [ %86, %93 ]
  %99 = phi i32 [ -2147483648, %95 ], [ 2147483647, %93 ]
  %100 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %92, i32 %98) #19
  %101 = extractvalue { i32, i1 } %100, 1
  %102 = extractvalue { i32, i1 } %100, 0
  %103 = select i1 %101, i32 %99, i32 %102, !prof !2
  %104 = select i1 %48, i32 %103, i32 %51
  %105 = select i1 %48, i32 %51, i32 %103
  %106 = zext i32 %104 to i64
  %107 = shl nuw i64 %106, 32
  %108 = zext i32 %105 to i64
  %109 = or i64 %107, %108
  %110 = tail call fastcc i64 @_ZN5blink12_GLOBAL__N_120LocalToAbsolutePointEPNS_4NodeENS_14PhysicalOffsetEf(%"class.blink::Node"* %0, i64 %109, float %3)
  %111 = tail call fastcc %"class.blink::protocol::DictionaryValue"* @_ZN5blink12_GLOBAL__N_113BuildPositionENS_14PhysicalOffsetE(i64 %110)
  %112 = bitcast %"class.blink::protocol::DictionaryValue"* %111 to %"class.blink::protocol::Value"*
  tail call void @_ZN5blink8protocol9ListValue9pushValueENSt3__110unique_ptrINS0_5ValueENS2_14default_deleteIS4_EEEE(%"class.blink::protocol::ListValue"* nonnull %44, %"class.blink::protocol::Value"* %112) #19
  %113 = add nsw i64 %61, 1
  %114 = icmp eq i64 %113, %47
  br i1 %114, label %115, label %60

115:                                              ; preds = %97, %41
  ret %"class.blink::protocol::ListValue"* %44
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc nonnull %"class.blink::protocol::ListValue"* @_ZN5blink12_GLOBAL__N_136BuildGridNegativeLineNumberPositionsEPNS_4NodeERKNS_10LayoutUnitENS_24GridTrackSizingDirectionEfRKN3WTF6VectorIS3_Lj0ENS7_18PartitionAllocatorEEESC_(%"class.blink::Node"* nocapture readonly, %"class.blink::LayoutUnit"* nocapture readonly dereferenceable(4), i32, float, %"class.WTF::Vector.3011"* dereferenceable(16), %"class.WTF::Vector.3011"* dereferenceable(16)) unnamed_addr #1 {
  %7 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %10, label %16, label %12

12:                                               ; preds = %6
  %13 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRareData"**
  %14 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %14, i64 0, i32 1, i32 0, i32 0
  br label %18

16:                                               ; preds = %6
  %17 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRenderingData"**
  br label %18

18:                                               ; preds = %12, %16
  %19 = phi %"class.blink::NodeRenderingData"** [ %15, %12 ], [ %17, %16 ]
  %20 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %20, i64 0, i32 1
  %22 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %23 = icmp eq %"class.blink::LayoutObject"* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.blink::LayoutObject"* %22 to %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)***
  %26 = load %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)** %26, i64 33
  %28 = load %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)** %27, align 8
  %29 = tail call %"class.blink::LayoutNGGridInterface"* %28(%"class.blink::LayoutObject"* nonnull %22) #19
  br label %30

30:                                               ; preds = %18, %24
  %31 = phi %"class.blink::LayoutNGGridInterface"* [ %29, %24 ], [ null, %18 ]
  %32 = icmp eq i32 %2, 0
  br i1 %32, label %33, label %41

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %22, i64 0, i32 5, i32 0
  %35 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %35, i64 0, i32 0, i32 9
  %37 = bitcast [20 x i8]* %36 to i160*
  %38 = load i160, i160* %37, align 8
  %39 = and i160 %38, 41538374868278621028243970633760768
  %40 = icmp ne i160 %39, 0
  br label %41

41:                                               ; preds = %33, %30
  %42 = phi i1 [ false, %30 ], [ %40, %33 ]
  %43 = tail call i8* @_Znwm(i64 40) #18
  %44 = bitcast i8* %43 to %"class.blink::protocol::ListValue"*
  tail call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %44) #19
  %45 = getelementptr inbounds %"class.WTF::Vector.3011", %"class.WTF::Vector.3011"* %4, i64 0, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %2, 1
  %48 = xor i1 %47, true
  %49 = zext i1 %48 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.3011", %"class.WTF::Vector.3011"* %5, i64 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = add i32 %51, -1
  %53 = zext i32 %52 to i64
  %54 = tail call fastcc i32 @_ZN5blink12_GLOBAL__N_121GetPositionForTrackAtEPKNS_12LayoutObjectEmNS_24GridTrackSizingDirectionERKN3WTF6VectorINS_10LayoutUnitELj0ENS5_18PartitionAllocatorEEE(%"class.blink::LayoutObject"* %22, i64 %53, i32 %49, %"class.WTF::Vector.3011"* dereferenceable(16) %5) #19
  %55 = bitcast %"class.blink::LayoutNGGridInterface"* %31 to i64 (%"class.blink::LayoutNGGridInterface"*, i32)***
  %56 = load i64 (%"class.blink::LayoutNGGridInterface"*, i32)**, i64 (%"class.blink::LayoutNGGridInterface"*, i32)*** %55, align 8
  %57 = getelementptr inbounds i64 (%"class.blink::LayoutNGGridInterface"*, i32)*, i64 (%"class.blink::LayoutNGGridInterface"*, i32)** %56, i64 1
  %58 = load i64 (%"class.blink::LayoutNGGridInterface"*, i32)*, i64 (%"class.blink::LayoutNGGridInterface"*, i32)** %57, align 8
  %59 = tail call i64 %58(%"class.blink::LayoutNGGridInterface"* %31, i32 %2) #19
  %60 = tail call fastcc i32 @_ZN5blink12_GLOBAL__N_121GetPositionForTrackAtEPKNS_12LayoutObjectEmNS_24GridTrackSizingDirectionERKN3WTF6VectorINS_10LayoutUnitELj0ENS5_18PartitionAllocatorEEE(%"class.blink::LayoutObject"* %22, i64 0, i32 %2, %"class.WTF::Vector.3011"* dereferenceable(16) %4) #19
  %61 = tail call i8* @_Znwm(i64 80) #18
  %62 = bitcast i8* %61 to %"class.blink::protocol::DictionaryValue"*
  tail call void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"* nonnull %62) #19
  %63 = select i1 %47, i32 %54, i32 %60
  %64 = select i1 %47, i32 %60, i32 %54
  %65 = zext i32 %64 to i64
  %66 = shl nuw i64 %65, 32
  %67 = zext i32 %63 to i64
  %68 = or i64 %66, %67
  %69 = tail call fastcc i64 @_ZN5blink12_GLOBAL__N_120LocalToAbsolutePointEPNS_4NodeENS_14PhysicalOffsetEf(%"class.blink::Node"* %0, i64 %68, float %3)
  %70 = tail call fastcc %"class.blink::protocol::DictionaryValue"* @_ZN5blink12_GLOBAL__N_113BuildPositionENS_14PhysicalOffsetE(i64 %69)
  %71 = bitcast %"class.blink::protocol::DictionaryValue"* %70 to %"class.blink::protocol::Value"*
  tail call void @_ZN5blink8protocol9ListValue9pushValueENSt3__110unique_ptrINS0_5ValueENS2_14default_deleteIS4_EEEE(%"class.blink::protocol::ListValue"* nonnull %44, %"class.blink::protocol::Value"* %71) #19
  %72 = bitcast i8* %61 to void (%"class.blink::protocol::DictionaryValue"*)***
  %73 = load void (%"class.blink::protocol::DictionaryValue"*)**, void (%"class.blink::protocol::DictionaryValue"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %73, i64 2
  %75 = load void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %74, align 8
  tail call void %75(%"class.blink::protocol::DictionaryValue"* nonnull %62) #19
  %76 = icmp eq i64 %59, 0
  br i1 %76, label %140, label %77

77:                                               ; preds = %41
  %78 = zext i32 %46 to i64
  %79 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1, i64 0, i32 0
  %80 = add nsw i64 %78, -1
  br label %81

81:                                               ; preds = %77, %121
  %82 = phi i64 [ 1, %77 ], [ %138, %121 ]
  %83 = load i32, i32* %79, align 4
  %84 = sdiv i32 %83, 2
  %85 = sext i32 %84 to i64
  %86 = tail call i1 @llvm.is.constant.i64(i64 %85) #19
  br i1 %86, label %93, label %87

87:                                               ; preds = %81
  %88 = icmp slt i32 %83, -1
  %89 = select i1 %88, i32 -2147483648, i32 2147483647
  %90 = add nsw i64 %85, 2147483648
  %91 = icmp ult i64 %90, 4294967296
  %92 = select i1 %91, i32 %84, i32 %89, !prof !27
  br label %93

93:                                               ; preds = %81, %87
  %94 = phi i32 [ %92, %87 ], [ %84, %81 ]
  br i1 %42, label %95, label %106

95:                                               ; preds = %93
  %96 = sitofp i32 %94 to float
  %97 = fmul float %96, -1.562500e-02
  %98 = fmul float %97, 6.400000e+01
  %99 = fcmp ult float %98, 0xC1E0000000000000
  %100 = fcmp ugt float %98, 0x41DFFFFFE0000000
  %101 = fcmp ogt float %98, 0xC1E0000000000000
  %102 = select i1 %101, float %98, float 0xC1E0000000000000
  %103 = fptosi float %102 to i32
  %104 = select i1 %99, i32 0, i32 2147483647
  %105 = select i1 %100, i32 %104, i32 %103
  br label %106

106:                                              ; preds = %95, %93
  %107 = phi i32 [ %105, %95 ], [ %94, %93 ]
  %108 = icmp eq i32 %83, 0
  br i1 %108, label %113, label %109

109:                                              ; preds = %106
  %110 = icmp eq i64 %82, %59
  %111 = icmp eq i64 %82, %80
  %112 = and i1 %110, %111
  br i1 %112, label %113, label %115

113:                                              ; preds = %106, %109
  %114 = tail call fastcc i32 @_ZN5blink12_GLOBAL__N_121GetPositionForTrackAtEPKNS_12LayoutObjectEmNS_24GridTrackSizingDirectionERKN3WTF6VectorINS_10LayoutUnitELj0ENS5_18PartitionAllocatorEEE(%"class.blink::LayoutObject"* %22, i64 %82, i32 %2, %"class.WTF::Vector.3011"* dereferenceable(16) %4)
  br label %118

115:                                              ; preds = %109
  %116 = tail call fastcc i32 @_ZN5blink12_GLOBAL__N_121GetPositionForTrackAtEPKNS_12LayoutObjectEmNS_24GridTrackSizingDirectionERKN3WTF6VectorINS_10LayoutUnitELj0ENS5_18PartitionAllocatorEEE(%"class.blink::LayoutObject"* %22, i64 %82, i32 %2, %"class.WTF::Vector.3011"* dereferenceable(16) %4)
  %117 = icmp sgt i32 %107, -1
  br i1 %117, label %118, label %121

118:                                              ; preds = %113, %115
  %119 = phi i32 [ %114, %113 ], [ %116, %115 ]
  %120 = phi i32 [ 0, %113 ], [ %107, %115 ]
  br label %121

121:                                              ; preds = %115, %118
  %122 = phi i32 [ %119, %118 ], [ %116, %115 ]
  %123 = phi i32 [ %120, %118 ], [ %107, %115 ]
  %124 = phi i32 [ -2147483648, %118 ], [ 2147483647, %115 ]
  %125 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %122, i32 %123) #19
  %126 = extractvalue { i32, i1 } %125, 1
  %127 = extractvalue { i32, i1 } %125, 0
  %128 = select i1 %126, i32 %124, i32 %127, !prof !2
  %129 = select i1 %47, i32 %128, i32 %54
  %130 = select i1 %47, i32 %54, i32 %128
  %131 = zext i32 %129 to i64
  %132 = shl nuw i64 %131, 32
  %133 = zext i32 %130 to i64
  %134 = or i64 %132, %133
  %135 = tail call fastcc i64 @_ZN5blink12_GLOBAL__N_120LocalToAbsolutePointEPNS_4NodeENS_14PhysicalOffsetEf(%"class.blink::Node"* %0, i64 %134, float %3)
  %136 = tail call fastcc %"class.blink::protocol::DictionaryValue"* @_ZN5blink12_GLOBAL__N_113BuildPositionENS_14PhysicalOffsetE(i64 %135)
  %137 = bitcast %"class.blink::protocol::DictionaryValue"* %136 to %"class.blink::protocol::Value"*
  tail call void @_ZN5blink8protocol9ListValue9pushValueENSt3__110unique_ptrINS0_5ValueENS2_14default_deleteIS4_EEEE(%"class.blink::protocol::ListValue"* nonnull %44, %"class.blink::protocol::Value"* %137) #19
  %138 = add i64 %82, 1
  %139 = icmp ugt i64 %138, %59
  br i1 %139, label %140, label %81

140:                                              ; preds = %121, %41
  ret %"class.blink::protocol::ListValue"* %44
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::protocol::ListValue"* @_ZN5blink12_GLOBAL__N_118BuildGridLineNamesEPNS_4NodeENS_24GridTrackSizingDirectionEfRKN3WTF6VectorINS_10LayoutUnitELj0ENS4_18PartitionAllocatorEEESA_(%"class.blink::Node"* nocapture readonly, i32, float, %"class.WTF::Vector.3011"* dereferenceable(16), %"class.WTF::Vector.3011"* dereferenceable(16)) unnamed_addr #1 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %10, label %16, label %12

12:                                               ; preds = %5
  %13 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRareData"**
  %14 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %14, i64 0, i32 1, i32 0, i32 0
  br label %18

16:                                               ; preds = %5
  %17 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRenderingData"**
  br label %18

18:                                               ; preds = %12, %16
  %19 = phi %"class.blink::NodeRenderingData"** [ %15, %12 ], [ %17, %16 ]
  %20 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %20, i64 0, i32 1
  %22 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %23 = icmp eq %"class.blink::LayoutObject"* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.blink::LayoutObject"* %22 to %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)***
  %26 = load %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)** %26, i64 33
  %28 = load %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)** %27, align 8
  %29 = tail call %"class.blink::LayoutNGGridInterface"* %28(%"class.blink::LayoutObject"* nonnull %22) #19
  br label %30

30:                                               ; preds = %18, %24
  %31 = phi %"class.blink::LayoutNGGridInterface"* [ %29, %24 ], [ null, %18 ]
  %32 = icmp eq i32 %1, 0
  br i1 %32, label %33, label %41

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %22, i64 0, i32 5, i32 0
  %35 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %35, i64 0, i32 0, i32 9
  %37 = bitcast [20 x i8]* %36 to i160*
  %38 = load i160, i160* %37, align 8
  %39 = and i160 %38, 41538374868278621028243970633760768
  %40 = icmp ne i160 %39, 0
  br label %41

41:                                               ; preds = %33, %30
  %42 = phi i1 [ false, %30 ], [ %40, %33 ]
  %43 = tail call i8* @_Znwm(i64 40) #18
  %44 = bitcast i8* %43 to %"class.blink::protocol::ListValue"*
  tail call void @_ZN5blink8protocol9ListValueC1Ev(%"class.blink::protocol::ListValue"* nonnull %44) #19
  %45 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %22, i64 0, i32 5, i32 0
  %46 = bitcast %"class.blink::ComputedStyle"** %45 to %"class.blink::ComputedStyleBase"**
  %47 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %47, i64 0, i32 3, i32 0, i32 0
  %49 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %49, i64 0, i32 3, i32 0, i32 0
  %51 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %51, i64 0, i32 3, i32 0, i32 0
  %53 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %53, i64 0, i32 2
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %53, i64 0, i32 3
  %56 = select i1 %32, %"class.WTF::HashMap.538"* %54, %"class.WTF::HashMap.538"* %55
  %57 = bitcast %"class.blink::LayoutNGGridInterface"* %31 to i32 (%"class.blink::LayoutNGGridInterface"*, i32)***
  %58 = load i32 (%"class.blink::LayoutNGGridInterface"*, i32)**, i32 (%"class.blink::LayoutNGGridInterface"*, i32)*** %57, align 8
  %59 = getelementptr inbounds i32 (%"class.blink::LayoutNGGridInterface"*, i32)*, i32 (%"class.blink::LayoutNGGridInterface"*, i32)** %58, i64 6
  %60 = load i32 (%"class.blink::LayoutNGGridInterface"*, i32)*, i32 (%"class.blink::LayoutNGGridInterface"*, i32)** %59, align 8
  %61 = tail call i32 %60(%"class.blink::LayoutNGGridInterface"* %31, i32 %1) #19
  %62 = icmp eq i32 %1, 1
  %63 = xor i1 %62, true
  %64 = zext i1 %63 to i32
  %65 = tail call fastcc i32 @_ZN5blink12_GLOBAL__N_121GetPositionForTrackAtEPKNS_12LayoutObjectEmNS_24GridTrackSizingDirectionERKN3WTF6VectorINS_10LayoutUnitELj0ENS5_18PartitionAllocatorEEE(%"class.blink::LayoutObject"* %22, i64 0, i32 %64, %"class.WTF::Vector.3011"* dereferenceable(16) %4) #19
  %66 = getelementptr inbounds %"class.WTF::HashMap.538", %"class.WTF::HashMap.538"* %56, i64 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::HashMap.538", %"class.WTF::HashMap.538"* %56, i64 0, i32 0, i32 0
  %70 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %69, align 8
  %71 = getelementptr inbounds %"class.WTF::HashMap.538", %"class.WTF::HashMap.538"* %56, i64 0, i32 0, i32 1
  %72 = load i32, i32* %71, align 8
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %70, i64 %73
  br i1 %68, label %97, label %75

75:                                               ; preds = %41
  %76 = icmp eq i32 %72, 0
  br i1 %76, label %84, label %77

77:                                               ; preds = %75, %81
  %78 = phi %"struct.WTF::KeyValuePair.542"* [ %82, %81 ], [ %70, %75 ]
  %79 = bitcast %"struct.WTF::KeyValuePair.542"* %78 to i64*
  %80 = load i64, i64* %79, align 8
  switch i64 %80, label %84 [
    i64 -1, label %81
    i64 0, label %81
  ]

81:                                               ; preds = %77, %77
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %78, i64 1
  %83 = icmp eq %"struct.WTF::KeyValuePair.542"* %82, %74
  br i1 %83, label %97, label %77

84:                                               ; preds = %77, %75
  %85 = phi %"struct.WTF::KeyValuePair.542"* [ %70, %75 ], [ %78, %77 ]
  %86 = icmp eq %"struct.WTF::KeyValuePair.542"* %85, %74
  br i1 %86, label %97, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"class.WTF::Vector.3011", %"class.WTF::Vector.3011"* %3, i64 0, i32 0, i32 0, i32 2
  %89 = sdiv i32 %61, 2
  %90 = sext i32 %89 to i64
  %91 = icmp slt i32 %61, -1
  %92 = select i1 %91, i32 -2147483648, i32 2147483647
  %93 = add nsw i64 %90, 2147483648
  %94 = icmp ult i64 %93, 4294967296
  %95 = bitcast %"class.WTF::String"* %6 to i8*
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  br label %98

97:                                               ; preds = %81, %108, %118, %115, %41, %84
  ret %"class.blink::protocol::ListValue"* %44

98:                                               ; preds = %87, %118
  %99 = phi %"struct.WTF::KeyValuePair.542"* [ %85, %87 ], [ %112, %118 ]
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %99, i64 0, i32 0
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %99, i64 0, i32 1, i32 0, i32 0, i32 0
  %102 = load i64*, i64** %101, align 8
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %99, i64 0, i32 1, i32 0, i32 0, i32 2
  %104 = load i32, i32* %103, align 4
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i64, i64* %102, i64 %105
  %107 = icmp eq i32 %104, 0
  br i1 %107, label %108, label %120

108:                                              ; preds = %178, %98
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %99, i64 1
  %110 = icmp eq %"struct.WTF::KeyValuePair.542"* %109, %74
  br i1 %110, label %97, label %111

111:                                              ; preds = %108, %115
  %112 = phi %"struct.WTF::KeyValuePair.542"* [ %116, %115 ], [ %109, %108 ]
  %113 = bitcast %"struct.WTF::KeyValuePair.542"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  switch i64 %114, label %118 [
    i64 -1, label %115
    i64 0, label %115
  ]

115:                                              ; preds = %111, %111
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %112, i64 1
  %117 = icmp eq %"struct.WTF::KeyValuePair.542"* %116, %74
  br i1 %117, label %97, label %111

118:                                              ; preds = %111
  %119 = icmp eq %"struct.WTF::KeyValuePair.542"* %112, %74
  br i1 %119, label %97, label %98

120:                                              ; preds = %98, %178
  %121 = phi i64* [ %180, %178 ], [ %102, %98 ]
  %122 = load i64, i64* %121, align 8
  %123 = call fastcc i32 @_ZN5blink12_GLOBAL__N_121GetPositionForTrackAtEPKNS_12LayoutObjectEmNS_24GridTrackSizingDirectionERKN3WTF6VectorINS_10LayoutUnitELj0ENS5_18PartitionAllocatorEEE(%"class.blink::LayoutObject"* %22, i64 %122, i32 %1, %"class.WTF::Vector.3011"* dereferenceable(16) %3)
  %124 = icmp eq i64 %122, 0
  br i1 %124, label %134, label %125

125:                                              ; preds = %120
  %126 = load i32, i32* %88, align 4
  %127 = add i32 %126, -1
  %128 = zext i32 %127 to i64
  %129 = icmp ult i64 %122, %128
  br i1 %129, label %130, label %134

130:                                              ; preds = %125
  %131 = call i1 @llvm.is.constant.i64(i64 %90) #19
  %132 = or i1 %131, %94
  %133 = select i1 %132, i32 %89, i32 %92
  br label %134

134:                                              ; preds = %130, %125, %120
  %135 = phi i32 [ 0, %120 ], [ 0, %125 ], [ %133, %130 ]
  br i1 %42, label %136, label %147

136:                                              ; preds = %134
  %137 = sitofp i32 %135 to float
  %138 = fmul float %137, -1.562500e-02
  %139 = fmul float %138, 6.400000e+01
  %140 = fcmp ult float %139, 0xC1E0000000000000
  %141 = fcmp ugt float %139, 0x41DFFFFFE0000000
  %142 = fcmp ogt float %139, 0xC1E0000000000000
  %143 = select i1 %142, float %139, float 0xC1E0000000000000
  %144 = fptosi float %143 to i32
  %145 = select i1 %140, i32 0, i32 2147483647
  %146 = select i1 %141, i32 %145, i32 %144
  br label %147

147:                                              ; preds = %136, %134
  %148 = phi i32 [ %146, %136 ], [ %135, %134 ]
  %149 = icmp sgt i32 %148, -1
  %150 = select i1 %149, i32 -2147483648, i32 2147483647
  %151 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %123, i32 %148) #19
  %152 = extractvalue { i32, i1 } %151, 1
  %153 = extractvalue { i32, i1 } %151, 0
  %154 = select i1 %152, i32 %150, i32 %153, !prof !2
  %155 = select i1 %62, i32 %154, i32 %65
  %156 = select i1 %62, i32 %65, i32 %154
  %157 = zext i32 %155 to i64
  %158 = shl nuw i64 %157, 32
  %159 = zext i32 %156 to i64
  %160 = or i64 %158, %159
  %161 = call fastcc i64 @_ZN5blink12_GLOBAL__N_120LocalToAbsolutePointEPNS_4NodeENS_14PhysicalOffsetEf(%"class.blink::Node"* %0, i64 %160, float %2)
  %162 = call fastcc %"class.blink::protocol::DictionaryValue"* @_ZN5blink12_GLOBAL__N_113BuildPositionENS_14PhysicalOffsetE(i64 %161)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i64 4) #19
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* %162, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* dereferenceable(8) %100) #19
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %178, label %165

165:                                              ; preds = %147
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = and i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  br i1 %169, label %172, label %174

172:                                              ; preds = %165
  %173 = add i32 %171, -1
  store i32 %173, i32* %170, align 4
  br label %174

174:                                              ; preds = %172, %165
  %175 = phi i32 [ %173, %172 ], [ %171, %165 ]
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %174
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %163) #19
  br label %178

178:                                              ; preds = %177, %174, %147
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #19
  %179 = bitcast %"class.blink::protocol::DictionaryValue"* %162 to %"class.blink::protocol::Value"*
  call void @_ZN5blink8protocol9ListValue9pushValueENSt3__110unique_ptrINS0_5ValueENS2_14default_deleteIS4_EEEE(%"class.blink::protocol::ListValue"* nonnull %44, %"class.blink::protocol::Value"* %179) #19
  %180 = getelementptr inbounds i64, i64* %121, i64 1
  %181 = icmp eq i64* %180, %106
  br i1 %181, label %108, label %120
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.round.f64(double) #8

; Function Attrs: nofree nounwind
declare float @atan2f(float, float) local_unnamed_addr #16

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.630"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_(%"class.WTF::Vector.630"* %0, i32 %5, %"class.WTF::String"* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 %10
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %13 = bitcast %"class.WTF::String"* %6 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.WTF::String"* %11 to i64*
  store i64 %14, i64* %15, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %16 = load i32, i32* %3, align 4
  %17 = add i32 %16, 1
  store i32 %17, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_(%"class.WTF::Vector.630"*, i32, %"class.WTF::String"*) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp ugt %"class.WTF::String"* %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %2
  br i1 %12, label %53, label %13

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %1
  %22 = select i1 %21, i32 %20, i32 %1
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %98, !prof !27

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %5, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #19
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #19
  br i1 %25, label %29, label %34

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.630"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  br label %98

34:                                               ; preds = %24
  %35 = lshr i64 %27, 3
  %36 = ptrtoint i8* %28 to i64
  %37 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne %"class.WTF::String"* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast %"class.WTF::String"* %37 to i8*
  br i1 %40, label %42, label %49, !prof !27

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %41, i64 %46, i1 false) #19
  %47 = bitcast %"class.WTF::Vector.630"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %42, %34
  %50 = phi i8* [ %48, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #19
  %51 = bitcast %"class.WTF::Vector.630"* %0 to i64*
  store atomic i64 %36, i64* %51 monotonic, align 8
  %52 = trunc i64 %35 to i32
  store i32 %52, i32* %14, align 8
  br label %98

53:                                               ; preds = %7
  %54 = ptrtoint %"class.WTF::String"* %2 to i64
  %55 = ptrtoint %"class.WTF::String"* %5 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 3
  %58 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = lshr i32 %59, 2
  %61 = add i32 %59, 1
  %62 = add i32 %61, %60
  %63 = icmp ugt i32 %62, 4
  %64 = select i1 %63, i32 %62, i32 4
  %65 = icmp ugt i32 %64, %1
  %66 = select i1 %65, i32 %64, i32 %1
  %67 = icmp ult i32 %59, %66
  br i1 %67, label %68, label %95, !prof !27

68:                                               ; preds = %53
  %69 = icmp eq %"class.WTF::String"* %5, null
  %70 = zext i32 %66 to i64
  %71 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %70) #19
  %72 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %71, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #19
  %73 = ptrtoint i8* %72 to i64
  br i1 %69, label %74, label %76

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::Vector.630"* %0 to i64*
  store atomic i64 %73, i64* %75 monotonic, align 8
  br label %91

76:                                               ; preds = %68
  %77 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %78 = icmp ne i8* %72, null
  %79 = icmp ne %"class.WTF::String"* %77, null
  %80 = and i1 %78, %79
  %81 = bitcast %"class.WTF::String"* %77 to i8*
  br i1 %80, label %82, label %88, !prof !27

82:                                               ; preds = %76
  %83 = load i32, i32* %8, align 4
  %84 = zext i32 %83 to i64
  %85 = shl nuw nsw i64 %84, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* nonnull align 8 %81, i64 %85, i1 false) #19
  %86 = bitcast %"class.WTF::Vector.630"* %0 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %82, %76
  %89 = phi i8* [ %87, %82 ], [ %81, %76 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #19
  %90 = bitcast %"class.WTF::Vector.630"* %0 to i64*
  store atomic i64 %73, i64* %90 monotonic, align 8
  br label %91

91:                                               ; preds = %88, %74
  %92 = lshr i64 %71, 3
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %58, align 8
  %94 = bitcast i8* %72 to %"class.WTF::String"*
  br label %95

95:                                               ; preds = %91, %53
  %96 = phi %"class.WTF::String"* [ %5, %53 ], [ %94, %91 ]
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 %57
  br label %98

98:                                               ; preds = %49, %29, %13, %95
  %99 = phi %"class.WTF::String"* [ %97, %95 ], [ %2, %13 ], [ %2, %29 ], [ %2, %49 ]
  ret %"class.WTF::String"* %99
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #19
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.68, i64 0, i64 0), i8* %11, i8* %12) #19
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.69, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #19
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #19
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #19
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6AppendIS1_EEvPKT_j(%"class.WTF::Vector.630"*, %"class.WTF::String"*, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %3
  %14 = tail call %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_(%"class.WTF::Vector.630"* %0, i32 %9, %"class.WTF::String"* %1) #19
  %15 = load i32, i32* %7, align 4
  br label %16

16:                                               ; preds = %13, %3
  %17 = phi i32 [ %15, %13 ], [ %8, %3 ]
  %18 = phi %"class.WTF::String"* [ %14, %13 ], [ %1, %3 ]
  %19 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #19
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %9, %17
  br i1 %22, label %24, label %23

23:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %20, align 8
  br label %33

24:                                               ; preds = %16
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #19
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.133, i64 0, i64 0), i8* %25, i8* %26) #19
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %20, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.63, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #19
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #19
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #19
  %34 = zext i32 %2 to i64
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 %34
  %36 = icmp eq i32 %2, 0
  br i1 %36, label %71, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::String"*, %"class.WTF::String"** %38, align 8
  %40 = load i32, i32* %7, align 4
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %39, i64 %41
  br label %43

43:                                               ; preds = %37, %67
  %44 = phi %"class.WTF::String"* [ %68, %67 ], [ %42, %37 ]
  %45 = phi %"class.WTF::String"* [ %69, %67 ], [ %18, %37 ]
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %44, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %48, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %49, label %67, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i33
  %59 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %58, i33 1) #19
  %60 = extractvalue { i33, i1 } %59, 1
  %61 = extractvalue { i33, i1 } %59, 0
  %62 = icmp slt i33 %61, 0
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %65, !prof !2

64:                                               ; preds = %55
  call void @llvm.trap() #19
  unreachable

65:                                               ; preds = %55
  %66 = trunc i33 %61 to i32
  store i32 %66, i32* %56, align 4
  br label %67

67:                                               ; preds = %65, %50, %43
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %44, i64 1
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %45, i64 1
  %70 = icmp eq %"class.WTF::String"* %69, %35
  br i1 %70, label %71, label %43

71:                                               ; preds = %67, %33
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3022"* @_ZNK3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EERKS2_EEPKS8_RKT0_(%"class.WTF::HashTable.3020"*, %"class.blink::CSSPropertyName"* dereferenceable(16)) local_unnamed_addr #6 comdat align 2 {
  %3 = alloca %"class.blink::CSSPropertyName", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.3020", %"class.WTF::HashTable.3020"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.3022"* %5, null
  br i1 %6, label %64, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::HashTable.3020", %"class.WTF::HashTable.3020"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = zext i32 %10 to i64
  %12 = tail call i32 @_ZNK5blink15CSSPropertyName7GetHashEv(%"class.blink::CSSPropertyName"* %1) #19
  %13 = and i32 %12, %10
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %5, i64 %14
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %15, i64 0, i32 0
  %17 = call zeroext i1 @_ZNK5blink15CSSPropertyNameeqERKS0_(%"class.blink::CSSPropertyName"* %16, %"class.blink::CSSPropertyName"* dereferenceable(16) %1) #19
  br i1 %17, label %64, label %18

18:                                               ; preds = %7
  %19 = bitcast %"class.blink::CSSPropertyName"* %3 to i8*
  %20 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = xor i32 %12, -1
  %23 = lshr i32 %12, 23
  %24 = add i32 %23, %22
  %25 = shl i32 %24, 12
  %26 = xor i32 %25, %24
  %27 = lshr i32 %26, 7
  %28 = xor i32 %27, %26
  %29 = shl i32 %28, 2
  %30 = xor i32 %29, %28
  %31 = lshr i32 %30, 20
  %32 = xor i32 %31, %30
  %33 = or i32 %32, 1
  %34 = zext i32 %33 to i64
  br label %35

35:                                               ; preds = %18, %56
  %36 = phi %"class.blink::CSSPropertyName"* [ %16, %18 ], [ %62, %56 ]
  %37 = phi i64 [ %14, %18 ], [ %60, %56 ]
  %38 = phi i64 [ 0, %18 ], [ %58, %56 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #19
  store i32 -1, i32* %20, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %21, align 8
  %39 = call zeroext i1 @_ZNK5blink15CSSPropertyNameeqERKS0_(%"class.blink::CSSPropertyName"* %36, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %3) #19
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #19
  br label %55

55:                                               ; preds = %35, %51, %54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #19
  br i1 %39, label %64, label %56

56:                                               ; preds = %55
  %57 = icmp eq i64 %38, 0
  %58 = select i1 %57, i64 %34, i64 %38
  %59 = add i64 %58, %37
  %60 = and i64 %59, %11
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %5, i64 %60
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %61, i64 0, i32 0
  %63 = call zeroext i1 @_ZNK5blink15CSSPropertyNameeqERKS0_(%"class.blink::CSSPropertyName"* %62, %"class.blink::CSSPropertyName"* dereferenceable(16) %1) #19
  br i1 %63, label %64, label %35

64:                                               ; preds = %56, %55, %7, %2
  %65 = phi %"struct.WTF::KeyValuePair.3022"* [ null, %2 ], [ %15, %7 ], [ %61, %56 ], [ null, %55 ]
  ret %"struct.WTF::KeyValuePair.3022"* %65
}

declare i32 @_ZNK5blink15CSSPropertyName7GetHashEv(%"class.blink::CSSPropertyName"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink15CSSPropertyNameeqERKS0_(%"class.blink::CSSPropertyName"*, %"class.blink::CSSPropertyName"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::protocol::DictionaryValue"* @_ZN5blink12_GLOBAL__N_113BuildPositionENS_14PhysicalOffsetE(i64) unnamed_addr #1 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = trunc i64 %0 to i32
  %5 = lshr i64 %0, 32
  %6 = trunc i64 %5 to i32
  %7 = tail call i8* @_Znwm(i64 80) #18
  %8 = bitcast i8* %7 to %"class.blink::protocol::DictionaryValue"*
  tail call void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"* nonnull %8) #19
  %9 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.136, i64 0, i64 0), i64 1) #19
  %10 = sitofp i32 %4 to double
  %11 = fmul double %10, 1.562500e-02
  call void @_ZN5blink8protocol15DictionaryValue9setDoubleERKN3WTF6StringEd(%"class.blink::protocol::DictionaryValue"* nonnull %8, %"class.WTF::String"* nonnull dereferenceable(8) %2, double %11) #19
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #19
  br label %28

28:                                               ; preds = %1, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #19
  %29 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.137, i64 0, i64 0), i64 1) #19
  %30 = sitofp i32 %6 to double
  %31 = fmul double %30, 1.562500e-02
  call void @_ZN5blink8protocol15DictionaryValue9setDoubleERKN3WTF6StringEd(%"class.blink::protocol::DictionaryValue"* nonnull %8, %"class.WTF::String"* nonnull dereferenceable(8) %3, double %31) #19
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #19
  br label %48

48:                                               ; preds = %28, %44, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #19
  ret %"class.blink::protocol::DictionaryValue"* %8
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN5blink12_GLOBAL__N_120LocalToAbsolutePointEPNS_4NodeENS_14PhysicalOffsetEf(%"class.blink::Node"* nocapture readonly, i64, float) unnamed_addr #4 {
  %4 = alloca <2 x float>, align 8
  %5 = alloca <2 x float>, align 8
  %6 = alloca <2 x float>, align 8
  %7 = trunc i64 %1 to i32
  %8 = lshr i64 %1, 32
  %9 = trunc i64 %8 to i32
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %13, label %19, label %15

15:                                               ; preds = %3
  %16 = bitcast %"class.blink::NodeData"** %14 to %"class.blink::NodeRareData"**
  %17 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %17, i64 0, i32 1, i32 0, i32 0
  br label %21

19:                                               ; preds = %3
  %20 = bitcast %"class.blink::NodeData"** %14 to %"class.blink::NodeRenderingData"**
  br label %21

21:                                               ; preds = %15, %19
  %22 = phi %"class.blink::NodeRenderingData"** [ %18, %15 ], [ %20, %19 ]
  %23 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %23, i64 0, i32 1
  %25 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %26 = bitcast <2 x float>* %4 to %"class.blink::FloatPoint"*
  %27 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #19
  %28 = sitofp i32 %7 to float
  %29 = fmul float %28, 1.562500e-02
  %30 = sitofp i32 %9 to float
  %31 = fmul float %30, 1.562500e-02
  %32 = insertelement <2 x float> undef, float %29, i32 0
  %33 = insertelement <2 x float> %32, float %31, i32 1
  store <2 x float> %33, <2 x float>* %4, align 8
  %34 = call <2 x float> @_ZNK5blink12LayoutObject25LocalToAncestorFloatPointERKNS_10FloatPointEPKNS_20LayoutBoxModelObjectEj(%"class.blink::LayoutObject"* %25, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %26, %"class.blink::LayoutBoxModelObject"* null, i32 0) #19
  %35 = extractelement <2 x float> %34, i32 0
  %36 = fmul float %35, 6.400000e+01
  %37 = call float @llvm.round.f32(float %36) #19
  %38 = fcmp ult float %37, 0xC1E0000000000000
  %39 = fcmp ugt float %37, 0x41DFFFFFE0000000
  %40 = fcmp ogt float %37, 0xC1E0000000000000
  %41 = select i1 %40, float %37, float 0xC1E0000000000000
  %42 = fptosi float %41 to i32
  %43 = select i1 %38, i32 0, i32 2147483647
  %44 = select i1 %39, i32 %43, i32 %42
  %45 = extractelement <2 x float> %34, i32 1
  %46 = fmul float %45, 6.400000e+01
  %47 = call float @llvm.round.f32(float %46) #19
  %48 = fcmp ult float %47, 0xC1E0000000000000
  %49 = fcmp ugt float %47, 0x41DFFFFFE0000000
  %50 = fcmp ogt float %47, 0xC1E0000000000000
  %51 = select i1 %50, float %47, float 0xC1E0000000000000
  %52 = fptosi float %51 to i32
  %53 = select i1 %48, i32 0, i32 2147483647
  %54 = select i1 %49, i32 %53, i32 %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #19
  %55 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %56 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %56, i64 0, i32 2, i32 0, i32 0
  %58 = load %"class.blink::Document"*, %"class.blink::Document"** %57, align 8
  %59 = call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %58) #19
  %60 = sitofp i32 %44 to float
  %61 = fmul float %60, 1.562500e-02
  %62 = sitofp i32 %54 to float
  %63 = fmul float %62, 1.562500e-02
  %64 = insertelement <2 x float> undef, float %61, i32 0
  %65 = insertelement <2 x float> %64, float %63, i32 1
  %66 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66)
  %67 = bitcast <2 x float>* %5 to %"class.blink::FloatPoint"*
  %68 = bitcast <2 x float>* %6 to %"class.blink::FloatPoint"*
  store <2 x float> %65, <2 x float>* %5, align 8
  %69 = bitcast <2 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #19
  %70 = call <2 x float> @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_10FloatPointE(%"class.blink::LocalFrameView"* %59, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %67) #19
  store <2 x float> %70, <2 x float>* %6, align 8
  %71 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* %59) #19
  %72 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %71) #19
  %73 = call <2 x float> @_ZNK5blink14VisualViewport19RootFrameToViewportERKNS_10FloatPointE(%"class.blink::VisualViewport"* %72, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %68) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66)
  %74 = extractelement <2 x float> %73, i32 0
  %75 = fmul float %74, 6.400000e+01
  %76 = call float @llvm.round.f32(float %75) #19
  %77 = fcmp ult float %76, 0xC1E0000000000000
  %78 = fcmp ugt float %76, 0x41DFFFFFE0000000
  %79 = fcmp ogt float %76, 0xC1E0000000000000
  %80 = select i1 %79, float %76, float 0xC1E0000000000000
  %81 = fptosi float %80 to i32
  %82 = select i1 %77, i32 0, i32 2147483647
  %83 = select i1 %78, i32 %82, i32 %81
  %84 = extractelement <2 x float> %73, i32 1
  %85 = fmul float %84, 6.400000e+01
  %86 = call float @llvm.round.f32(float %85) #19
  %87 = fcmp ult float %86, 0xC1E0000000000000
  %88 = fcmp ugt float %86, 0x41DFFFFFE0000000
  %89 = fcmp ogt float %86, 0xC1E0000000000000
  %90 = select i1 %89, float %86, float 0xC1E0000000000000
  %91 = fptosi float %90 to i32
  %92 = select i1 %87, i32 0, i32 2147483647
  %93 = select i1 %88, i32 %92, i32 %91
  %94 = sitofp i32 %83 to float
  %95 = fmul float %94, 1.562500e-02
  %96 = fmul float %95, %2
  %97 = fmul float %96, 6.400000e+01
  %98 = fcmp ult float %97, 0xC1E0000000000000
  %99 = fcmp ugt float %97, 0x41DFFFFFE0000000
  %100 = fcmp ogt float %97, 0xC1E0000000000000
  %101 = select i1 %100, float %97, float 0xC1E0000000000000
  %102 = fptosi float %101 to i32
  %103 = select i1 %98, i32 0, i32 2147483647
  %104 = select i1 %99, i32 %103, i32 %102
  %105 = sitofp i32 %93 to float
  %106 = fmul float %105, 1.562500e-02
  %107 = fmul float %106, %2
  %108 = fmul float %107, 6.400000e+01
  %109 = fcmp ult float %108, 0xC1E0000000000000
  %110 = fcmp ugt float %108, 0x41DFFFFFE0000000
  %111 = fcmp ogt float %108, 0xC1E0000000000000
  %112 = select i1 %111, float %108, float 0xC1E0000000000000
  %113 = fptosi float %112 to i32
  %114 = select i1 %109, i32 0, i32 2147483647
  %115 = select i1 %110, i32 %114, i32 %113
  %116 = zext i32 %115 to i64
  %117 = shl nuw i64 %116, 32
  %118 = zext i32 %104 to i64
  %119 = or i64 %117, %118
  ret i64 %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.630"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #19
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i64 0, i64 0), i8* %14, i8* %15) #19
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.63, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #19
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #19
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  %23 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

declare i32 @_ZNK5blink10LayoutGrid22TranslateRTLCoordinateENS_10LayoutUnitE(%"class.blink::LayoutGrid"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8GridAreaEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.549"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.549", %"class.WTF::HashTable.549"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %63

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.65, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.138, i64 0, i64 0)) #19
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #19
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 5
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEN5blink8GridAreaEEEEEPKcv, i64 0, i64 0)) #19
  %30 = bitcast i8* %29 to %"struct.WTF::KeyValuePair.552"*
  %31 = and i64 %27, 1
  %32 = sub nsw i64 %27, %31
  br label %33

33:                                               ; preds = %33, %26
  %34 = phi i64 [ 0, %26 ], [ %49, %33 ]
  %35 = phi i64 [ %32, %26 ], [ %50, %33 ]
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %30, i64 %34
  %37 = bitcast %"struct.WTF::KeyValuePair.552"* %36 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4294967296>, <2 x i64>* %37, align 8
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %30, i64 %34, i32 1, i32 0, i32 2
  store i32 2, i32* %38, align 8
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %30, i64 %34, i32 1, i32 1
  %40 = bitcast %"struct.blink::GridSpan"* %39 to i64*
  store i64 4294967296, i64* %40, align 4
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %30, i64 %34, i32 1, i32 1, i32 2
  store i32 2, i32* %41, align 4
  %42 = or i64 %34, 1
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %30, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair.552"* %43 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4294967296>, <2 x i64>* %44, align 8
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %30, i64 %42, i32 1, i32 0, i32 2
  store i32 2, i32* %45, align 8
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %30, i64 %42, i32 1, i32 1
  %47 = bitcast %"struct.blink::GridSpan"* %46 to i64*
  store i64 4294967296, i64* %47, align 4
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %30, i64 %42, i32 1, i32 1, i32 2
  store i32 2, i32* %48, align 4
  %49 = add nuw nsw i64 %34, 2
  %50 = add i64 %35, -2
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %33

52:                                               ; preds = %33
  %53 = icmp eq i64 %31, 0
  br i1 %53, label %61, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %30, i64 %49
  %56 = bitcast %"struct.WTF::KeyValuePair.552"* %55 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4294967296>, <2 x i64>* %56, align 8
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %30, i64 %49, i32 1, i32 0, i32 2
  store i32 2, i32* %57, align 8
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %30, i64 %49, i32 1, i32 1
  %59 = bitcast %"struct.blink::GridSpan"* %58 to i64*
  store i64 4294967296, i64* %59, align 4
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %30, i64 %49, i32 1, i32 1, i32 2
  store i32 2, i32* %60, align 4
  br label %61

61:                                               ; preds = %52, %54
  %62 = call %"struct.WTF::KeyValuePair.552"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8GridAreaEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.549"* %0, %"struct.WTF::KeyValuePair.552"* %30, i32 %17, %"struct.WTF::KeyValuePair.552"* null) #19
  br label %63

63:                                               ; preds = %61, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.552"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8GridAreaEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.549"*, %"struct.WTF::KeyValuePair.552"*, i32, %"struct.WTF::KeyValuePair.552"*) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.549", align 8
  %6 = bitcast %"class.WTF::HashTable.549"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #19
  %7 = getelementptr inbounds %"class.WTF::HashTable.549", %"class.WTF::HashTable.549"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.549", %"class.WTF::HashTable.549"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.549", %"class.WTF::HashTable.549"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.549", %"class.WTF::HashTable.549"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.549"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.552"* %1, %"struct.WTF::KeyValuePair.552"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.549", %"class.WTF::HashTable.549"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.549", %"class.WTF::HashTable.549"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.552"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.549"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.549"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.552"*, %"struct.WTF::KeyValuePair.552"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.552"* %22 to i64
  br label %71

24:                                               ; preds = %115
  %25 = bitcast %"class.WTF::HashTable.549"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.549"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %116, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.552"* [ null, %16 ], [ %119, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %117, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.552"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair.552"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #19
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #19
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.549", %"class.WTF::HashTable.549"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #19
  ret %"struct.WTF::KeyValuePair.552"* %33

71:                                               ; preds = %21, %115
  %72 = phi i64 [ %116, %115 ], [ %23, %21 ]
  %73 = phi i32 [ %117, %115 ], [ %13, %21 ]
  %74 = phi %"struct.WTF::KeyValuePair.552"* [ %118, %115 ], [ %22, %21 ]
  %75 = phi %"struct.WTF::KeyValuePair.552"* [ %119, %115 ], [ null, %21 ]
  %76 = phi i32 [ %120, %115 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %74, i64 %77
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = bitcast %"struct.WTF::KeyValuePair.552"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %115
    i64 0, label %115
  ]

82:                                               ; preds = %71
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %78, i64 0, i32 0
  %84 = call { %"struct.WTF::KeyValuePair.552"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8GridAreaEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.549"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %83) #19
  %85 = extractvalue { %"struct.WTF::KeyValuePair.552"*, i8 } %84, 0
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #19
  br label %102

102:                                              ; preds = %82, %98, %101
  %103 = load i64, i64* %80, align 8
  %104 = bitcast %"struct.WTF::KeyValuePair.552"* %85 to i64*
  store i64 %103, i64* %104, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %85, i64 0, i32 1
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %74, i64 %77, i32 1
  %107 = bitcast %"struct.blink::GridArea"* %105 to i8*
  %108 = bitcast %"struct.blink::GridArea"* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %108, i64 24, i1 false) #19
  %109 = load %"struct.WTF::KeyValuePair.552"*, %"struct.WTF::KeyValuePair.552"** %15, align 8
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %109, i64 %77
  %111 = icmp eq %"struct.WTF::KeyValuePair.552"* %110, %3
  %112 = select i1 %111, %"struct.WTF::KeyValuePair.552"* %85, %"struct.WTF::KeyValuePair.552"* %75
  %113 = load i32, i32* %12, align 8
  %114 = ptrtoint %"struct.WTF::KeyValuePair.552"* %109 to i64
  br label %115

115:                                              ; preds = %71, %71, %102
  %116 = phi i64 [ %72, %71 ], [ %114, %102 ], [ %72, %71 ]
  %117 = phi i32 [ %73, %71 ], [ %113, %102 ], [ %73, %71 ]
  %118 = phi %"struct.WTF::KeyValuePair.552"* [ %74, %71 ], [ %109, %102 ], [ %74, %71 ]
  %119 = phi %"struct.WTF::KeyValuePair.552"* [ %75, %71 ], [ %112, %102 ], [ %75, %71 ]
  %120 = add i32 %76, 1
  %121 = icmp eq i32 %120, %117
  br i1 %121, label %24, label %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.552"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8GridAreaEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.549"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.549", %"class.WTF::HashTable.549"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.552"*, %"struct.WTF::KeyValuePair.552"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.549", %"class.WTF::HashTable.549"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #19
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.552"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.552"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.552"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.552"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.552"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.552"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.552"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.552"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #19
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.552"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.552"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.552"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.552"*, i8 } undef, %"struct.WTF::KeyValuePair.552"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.552"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.552"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.552"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8GridAreaEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_SC_SD_EERKS1_RKS5_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.549"*, %"class.WTF::String"* dereferenceable(8), %"struct.WTF::KeyValuePair.552"* dereferenceable(32)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.549", %"class.WTF::HashTable.549"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.552"*, %"struct.WTF::KeyValuePair.552"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.552"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.552"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8GridAreaEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.549"* %0, %"struct.WTF::KeyValuePair.552"* null)
  %9 = load %"struct.WTF::KeyValuePair.552"*, %"struct.WTF::KeyValuePair.552"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.552"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.549", %"class.WTF::HashTable.549"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #19
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %82, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.552"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.552"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.552"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #19
  br i1 %57, label %139, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.552"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.552"* %59, null
  br i1 %69, label %82, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.552"* %59 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4294967296>, <2 x i64>* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %59, i64 0, i32 1, i32 0, i32 2
  store i32 2, i32* %72, align 8
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %59, i64 0, i32 1, i32 1
  %74 = bitcast %"struct.blink::GridSpan"* %73 to i64*
  store i64 4294967296, i64* %74, align 4
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %59, i64 0, i32 1, i32 1, i32 2
  store i32 2, i32* %75, align 4
  %76 = getelementptr inbounds %"class.WTF::HashTable.549", %"class.WTF::HashTable.549"* %0, i64 0, i32 3
  %77 = load i32, i32* %76, align 8
  %78 = add i32 %77, 2147483647
  %79 = and i32 %78, 2147483647
  %80 = and i32 %77, -2147483648
  %81 = or i32 %79, %80
  store i32 %81, i32* %76, align 8
  br label %82

82:                                               ; preds = %24, %68, %70
  %83 = phi %"struct.WTF::KeyValuePair.552"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %2, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %104, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %104

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = zext i32 %94 to i33
  %96 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %95, i33 1) #19
  %97 = extractvalue { i33, i1 } %96, 1
  %98 = extractvalue { i33, i1 } %96, 0
  %99 = icmp slt i33 %98, 0
  %100 = or i1 %97, %99
  br i1 %100, label %101, label %102, !prof !2

101:                                              ; preds = %92
  tail call void @llvm.trap() #19
  unreachable

102:                                              ; preds = %92
  %103 = trunc i33 %98 to i32
  store i32 %103, i32* %93, align 4
  br label %104

104:                                              ; preds = %102, %87, %82
  %105 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %106 = bitcast %"struct.WTF::KeyValuePair.552"* %83 to i64*
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %83, i64 0, i32 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  store i64 %105, i64* %106, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #19
  br label %123

123:                                              ; preds = %104, %119, %122
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %83, i64 0, i32 1
  %125 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %2, i64 0, i32 1
  %126 = bitcast %"struct.blink::GridArea"* %124 to i8*
  %127 = bitcast %"struct.blink::GridArea"* %125 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* align 8 %127, i64 24, i1 false) #19
  %128 = getelementptr inbounds %"class.WTF::HashTable.549", %"class.WTF::HashTable.549"* %0, i64 0, i32 2
  %129 = load i32, i32* %128, align 4
  %130 = add i32 %129, 1
  store i32 %130, i32* %128, align 4
  %131 = getelementptr inbounds %"class.WTF::HashTable.549", %"class.WTF::HashTable.549"* %0, i64 0, i32 3
  %132 = load i32, i32* %131, align 8
  %133 = add i32 %132, %130
  %134 = shl i32 %133, 1
  %135 = load i32, i32* %12, align 8
  %136 = icmp ult i32 %134, %135
  br i1 %136, label %139, label %137

137:                                              ; preds = %123
  %138 = tail call %"struct.WTF::KeyValuePair.552"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8GridAreaEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.549"* %0, %"struct.WTF::KeyValuePair.552"* %83)
  br label %139

139:                                              ; preds = %54, %123, %137
  %140 = phi i8 [ 1, %123 ], [ 1, %137 ], [ 0, %54 ]
  %141 = phi %"struct.WTF::KeyValuePair.552"* [ %83, %123 ], [ %138, %137 ], [ %47, %54 ]
  %142 = insertvalue { %"struct.WTF::KeyValuePair.552"*, i8 } undef, %"struct.WTF::KeyValuePair.552"* %141, 0
  %143 = insertvalue { %"struct.WTF::KeyValuePair.552"*, i8 } %142, i8 %140, 1
  ret { %"struct.WTF::KeyValuePair.552"*, i8 } %143
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.552"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8GridAreaEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.549"*, %"struct.WTF::KeyValuePair.552"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.549", %"class.WTF::HashTable.549"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.549", %"class.WTF::HashTable.549"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #19
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #19
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.64, i64 0, i64 0), i8* %22, i8* %23) #19
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.65, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #19
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #19
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #19
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 5
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEN5blink8GridAreaEEEEEPKcv, i64 0, i64 0)) #19
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.552"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %72, label %38

38:                                               ; preds = %31
  %39 = and i64 %33, 1
  %40 = icmp eq i32 %32, 1
  br i1 %40, label %62, label %41

41:                                               ; preds = %38
  %42 = sub nsw i64 %33, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %59, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %60, %43 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %36, i64 %44
  %47 = bitcast %"struct.WTF::KeyValuePair.552"* %46 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4294967296>, <2 x i64>* %47, align 8
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %36, i64 %44, i32 1, i32 0, i32 2
  store i32 2, i32* %48, align 8
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %36, i64 %44, i32 1, i32 1
  %50 = bitcast %"struct.blink::GridSpan"* %49 to i64*
  store i64 4294967296, i64* %50, align 4
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %36, i64 %44, i32 1, i32 1, i32 2
  store i32 2, i32* %51, align 4
  %52 = or i64 %44, 1
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %36, i64 %52
  %54 = bitcast %"struct.WTF::KeyValuePair.552"* %53 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4294967296>, <2 x i64>* %54, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %36, i64 %52, i32 1, i32 0, i32 2
  store i32 2, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %36, i64 %52, i32 1, i32 1
  %57 = bitcast %"struct.blink::GridSpan"* %56 to i64*
  store i64 4294967296, i64* %57, align 4
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %36, i64 %52, i32 1, i32 1, i32 2
  store i32 2, i32* %58, align 4
  %59 = add nuw nsw i64 %44, 2
  %60 = add i64 %45, -2
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %43

62:                                               ; preds = %43, %38
  %63 = phi i64 [ 0, %38 ], [ %59, %43 ]
  %64 = icmp eq i64 %39, 0
  br i1 %64, label %72, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %36, i64 %63
  %67 = bitcast %"struct.WTF::KeyValuePair.552"* %66 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4294967296>, <2 x i64>* %67, align 8
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %36, i64 %63, i32 1, i32 0, i32 2
  store i32 2, i32* %68, align 8
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %36, i64 %63, i32 1, i32 1
  %70 = bitcast %"struct.blink::GridSpan"* %69 to i64*
  store i64 4294967296, i64* %70, align 4
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %36, i64 %63, i32 1, i32 1, i32 2
  store i32 2, i32* %71, align 4
  br label %72

72:                                               ; preds = %65, %62, %31
  %73 = call %"struct.WTF::KeyValuePair.552"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8GridAreaEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.549"* %0, %"struct.WTF::KeyValuePair.552"* %36, i32 %32, %"struct.WTF::KeyValuePair.552"* %1) #19
  ret %"struct.WTF::KeyValuePair.552"* %73
}

declare <2 x float> @_ZNK5blink24PaintLayerScrollableArea15GetScrollOffsetEv(%"class.blink::PaintLayerScrollableArea"*) unnamed_addr #3

declare void @_ZN5blink27CSSComputedStyleDeclarationC1EPNS_4NodeEbRKN3WTF6StringE(%"class.blink::CSSComputedStyleDeclaration"*, %"class.blink::Node"*, i1 zeroext, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #19
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #19
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #19
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #19
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #19
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #19
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #19
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #19
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.174, i64 0, i64 0), i8* %40, i8* %41) #19
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #19
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.175, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #19
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #19
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #19
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #19
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #19
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrINS0_IdNS_9allocatorIdEEEENS_14default_deleteIS4_EEEENS2_IS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.2423"*, %"class.std::__1::unique_ptr.2425"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2423", %"class.std::__1::vector.2423"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.2425"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2423"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2423"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #21
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2423", %"class.std::__1::vector.2423"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.2425"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #21
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.2425"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.2425"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.2425"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.2425"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.std::__1::vector.2428"* null, %"class.std::__1::vector.2428"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.2425"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.2425"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.2423", %"class.std::__1::vector.2423"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.2425"*, %"class.std::__1::unique_ptr.2425"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.2425"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.2425"*, %"class.std::__1::unique_ptr.2425"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.2425"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.std::__1::vector.2428"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.2425"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.2425"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.2425"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.std::__1::vector.2428"* null, %"class.std::__1::vector.2428"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.2425"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !129

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.2425"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.2425"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.2425"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.2425"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.2425"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.2425"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.std::__1::vector.2428"* null, %"class.std::__1::vector.2428"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.2425"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.2425"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.std::__1::vector.2428"* null, %"class.std::__1::vector.2428"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.2425"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.2425"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.std::__1::vector.2428"* null, %"class.std::__1::vector.2428"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.2425"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.2425"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.std::__1::vector.2428"* null, %"class.std::__1::vector.2428"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.2425"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.2425"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.std::__1::vector.2428"* null, %"class.std::__1::vector.2428"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.2425"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.2425"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.std::__1::vector.2428"* null, %"class.std::__1::vector.2428"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.2425"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.2425"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.std::__1::vector.2428"* null, %"class.std::__1::vector.2428"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.2425"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.2425"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.std::__1::vector.2428"* null, %"class.std::__1::vector.2428"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.2425"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.2425"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.2425"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.2425"*, %"class.std::__1::unique_ptr.2425"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.2425"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.2425"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.2425"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.2425"*
  %138 = icmp eq %"class.std::__1::unique_ptr.2425"* %133, %137
  br i1 %138, label %158, label %139

139:                                              ; preds = %132, %156
  %140 = phi %"class.std::__1::unique_ptr.2425"* [ %141, %156 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2425"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.std::__1::vector.2428"*, %"class.std::__1::vector.2428"** %142, align 8
  store %"class.std::__1::vector.2428"* null, %"class.std::__1::vector.2428"** %142, align 8
  %144 = icmp eq %"class.std::__1::vector.2428"* %143, null
  br i1 %144, label %156, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.std::__1::vector.2428", %"class.std::__1::vector.2428"* %143, i64 0, i32 0, i32 0
  %147 = load double*, double** %146, align 8
  %148 = icmp eq double* %147, null
  br i1 %148, label %154, label %149

149:                                              ; preds = %145
  %150 = ptrtoint double* %147 to i64
  %151 = getelementptr inbounds %"class.std::__1::vector.2428", %"class.std::__1::vector.2428"* %143, i64 0, i32 0, i32 1
  %152 = bitcast double** %151 to i64*
  store i64 %150, i64* %152, align 8
  %153 = bitcast double* %147 to i8*
  tail call void @_ZdlPv(i8* %153) #18
  br label %154

154:                                              ; preds = %149, %145
  %155 = bitcast %"class.std::__1::vector.2428"* %143 to i8*
  tail call void @_ZdlPv(i8* %155) #18
  br label %156

156:                                              ; preds = %154, %139
  %157 = icmp eq %"class.std::__1::unique_ptr.2425"* %141, %137
  br i1 %157, label %158, label %139

158:                                              ; preds = %156, %132
  %159 = icmp eq i64 %135, 0
  br i1 %159, label %162, label %160

160:                                              ; preds = %158
  %161 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %161) #18
  br label %162

162:                                              ; preds = %158, %160
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::FloatQuad"* @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2542"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2542", %"class.WTF::Vector.2542"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #19
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i64 0, i64 0), i8* %14, i8* %15) #19
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.63, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #19
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #19
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  %23 = getelementptr inbounds %"class.WTF::Vector.2542", %"class.WTF::Vector.2542"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %24, i64 %25
  ret %"class.blink::FloatQuad"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE7reserveEm(%"class.std::__1::vector.2404"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2404", %"class.std::__1::vector.2404"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::unique_ptr.2406"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2404"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.std::__1::unique_ptr.2406"*
  br i1 %10, label %12, label %135

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.2404", %"class.std::__1::vector.2404"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr.2406"** %13 to i64*
  %15 = icmp ugt i64 %1, 2305843009213693951
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #21
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = ashr exact i64 %19, 3
  %21 = shl i64 %1, 3
  %22 = tail call i8* @_Znwm(i64 %21) #18
  %23 = bitcast i8* %22 to %"class.std::__1::unique_ptr.2406"*
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %23, i64 %20
  %25 = ptrtoint %"class.std::__1::unique_ptr.2406"* %24 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %23, i64 %1
  %27 = ptrtoint %"class.std::__1::unique_ptr.2406"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.std::__1::unique_ptr.2406"*
  %29 = icmp eq %"class.std::__1::unique_ptr.2406"* %28, %11
  br i1 %29, label %57, label %30

30:                                               ; preds = %17
  %31 = getelementptr %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %28, i64 -1, i32 0, i32 0, i32 0
  %32 = bitcast %"class.blink::protocol::Value"** %31 to i8*
  %33 = sub i64 0, %7
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 7
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %30, %40
  %41 = phi %"class.std::__1::unique_ptr.2406"* [ %44, %40 ], [ %24, %30 ]
  %42 = phi %"class.std::__1::unique_ptr.2406"* [ %45, %40 ], [ %28, %30 ]
  %43 = phi i64 [ %50, %40 ], [ %38, %30 ]
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %41, i64 -1
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %42, i64 -1
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.std::__1::unique_ptr.2406"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %46, align 8
  %49 = bitcast %"class.std::__1::unique_ptr.2406"* %44 to i64*
  store i64 %48, i64* %49, align 8
  %50 = add i64 %43, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %40, !llvm.loop !131

52:                                               ; preds = %40, %30
  %53 = phi %"class.std::__1::unique_ptr.2406"* [ undef, %30 ], [ %44, %40 ]
  %54 = phi %"class.std::__1::unique_ptr.2406"* [ %24, %30 ], [ %44, %40 ]
  %55 = phi %"class.std::__1::unique_ptr.2406"* [ %28, %30 ], [ %45, %40 ]
  %56 = icmp ult i8* %34, inttoptr (i64 56 to i8*)
  br i1 %56, label %110, label %58

57:                                               ; preds = %17
  store i64 %25, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  br label %130

58:                                               ; preds = %52, %58
  %59 = phi %"class.std::__1::unique_ptr.2406"* [ %103, %58 ], [ %54, %52 ]
  %60 = phi %"class.std::__1::unique_ptr.2406"* [ %104, %58 ], [ %55, %52 ]
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %60, i64 -1
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.std::__1::unique_ptr.2406"* %62 to i64*
  %65 = load i64, i64* %64, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %63, align 8
  %66 = bitcast %"class.std::__1::unique_ptr.2406"* %61 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %59, i64 -2
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %60, i64 -2
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.std::__1::unique_ptr.2406"* %68 to i64*
  %71 = load i64, i64* %70, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %69, align 8
  %72 = bitcast %"class.std::__1::unique_ptr.2406"* %67 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %59, i64 -3
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %60, i64 -3
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = bitcast %"class.std::__1::unique_ptr.2406"* %74 to i64*
  %77 = load i64, i64* %76, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %75, align 8
  %78 = bitcast %"class.std::__1::unique_ptr.2406"* %73 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %59, i64 -4
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %60, i64 -4
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.2406"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.2406"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %59, i64 -5
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %60, i64 -5
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.2406"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.2406"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %59, i64 -6
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %60, i64 -6
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.2406"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.2406"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %59, i64 -7
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %60, i64 -7
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.2406"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.2406"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %59, i64 -8
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %60, i64 -8
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.2406"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.2406"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = icmp eq %"class.std::__1::unique_ptr.2406"* %104, %11
  br i1 %109, label %110, label %58

110:                                              ; preds = %58, %52
  %111 = phi %"class.std::__1::unique_ptr.2406"* [ %53, %52 ], [ %103, %58 ]
  %112 = ptrtoint %"class.std::__1::unique_ptr.2406"* %111 to i64
  %113 = load i64, i64* %6, align 8
  %114 = load %"class.std::__1::unique_ptr.2406"*, %"class.std::__1::unique_ptr.2406"** %13, align 8
  %115 = inttoptr i64 %113 to %"class.std::__1::unique_ptr.2406"*
  store i64 %112, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %116 = icmp eq %"class.std::__1::unique_ptr.2406"* %114, %115
  br i1 %116, label %130, label %117

117:                                              ; preds = %110, %128
  %118 = phi %"class.std::__1::unique_ptr.2406"* [ %119, %128 ], [ %114, %110 ]
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %118, i64 -1
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %119, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.blink::protocol::Value"*, %"class.blink::protocol::Value"** %120, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %120, align 8
  %122 = icmp eq %"class.blink::protocol::Value"* %121, null
  br i1 %122, label %128, label %123

123:                                              ; preds = %117
  %124 = bitcast %"class.blink::protocol::Value"* %121 to void (%"class.blink::protocol::Value"*)***
  %125 = load void (%"class.blink::protocol::Value"*)**, void (%"class.blink::protocol::Value"*)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.blink::protocol::Value"*)*, void (%"class.blink::protocol::Value"*)** %125, i64 2
  %127 = load void (%"class.blink::protocol::Value"*)*, void (%"class.blink::protocol::Value"*)** %126, align 8
  tail call void %127(%"class.blink::protocol::Value"* nonnull %121) #19
  br label %128

128:                                              ; preds = %123, %117
  %129 = icmp eq %"class.std::__1::unique_ptr.2406"* %119, %115
  br i1 %129, label %130, label %117

130:                                              ; preds = %128, %57, %110
  %131 = phi i64 [ %7, %57 ], [ %113, %110 ], [ %113, %128 ]
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %135, label %133

133:                                              ; preds = %130
  %134 = inttoptr i64 %131 to i8*
  tail call void @_ZdlPv(i8* %134) #18
  br label %135

135:                                              ; preds = %133, %130, %2
  ret void
}

declare void @_ZN5crdtp12ErrorSupport8AddErrorEPKc(%"class.crdtp::ErrorSupport"*, i8*) local_unnamed_addr #3

declare void @_ZN5crdtp12ErrorSupport4PushEv(%"class.crdtp::ErrorSupport"*) local_unnamed_addr #3

declare void @_ZN5crdtp12ErrorSupport8SetIndexEm(%"class.crdtp::ErrorSupport"*, i64) local_unnamed_addr #3

declare %"class.blink::protocol::Value"* @_ZN5blink8protocol9ListValue2atEm(%"class.blink::protocol::ListValue"*, i64) local_unnamed_addr #3

declare void @_ZN5crdtp12ErrorSupport3PopEv(%"class.crdtp::ErrorSupport"*) local_unnamed_addr #3

declare { i8*, i64 } @_ZNK5crdtp12ErrorSupport6ErrorsEv(%"class.crdtp::ErrorSupport"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.2404"*, %"class.std::__1::unique_ptr.2406"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2404", %"class.std::__1::vector.2404"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.2406"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2404"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2404"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #21
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2404", %"class.std::__1::vector.2404"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.2406"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #21
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.2406"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.2406"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.2406"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.2406"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.2406"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.2406"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.2404", %"class.std::__1::vector.2404"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.2406"*, %"class.std::__1::unique_ptr.2406"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.2406"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.2406"*, %"class.std::__1::unique_ptr.2406"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.2406"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::Value"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.2406"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.2406"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.2406"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.2406"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !132

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.2406"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.2406"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.2406"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.2406"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.2406"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.2406"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.2406"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.2406"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.2406"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.2406"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.2406"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.2406"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.2406"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.2406"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.2406"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.2406"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.2406"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.2406"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.2406"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.2406"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.2406"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.2406"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.2406"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.2406"*, %"class.std::__1::unique_ptr.2406"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.2406"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.2406"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.2406"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.2406"*
  %138 = icmp eq %"class.std::__1::unique_ptr.2406"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.2406"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.2406", %"class.std::__1::unique_ptr.2406"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::Value"*, %"class.blink::protocol::Value"** %142, align 8
  store %"class.blink::protocol::Value"* null, %"class.blink::protocol::Value"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::Value"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::Value"* %143 to void (%"class.blink::protocol::Value"*)***
  %147 = load void (%"class.blink::protocol::Value"*)**, void (%"class.blink::protocol::Value"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::Value"*)*, void (%"class.blink::protocol::Value"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::Value"*)*, void (%"class.blink::protocol::Value"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::Value"* nonnull %143) #19
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.2406"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #18
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN5blink22BuildSnapContainerInfoEPNS1_4NodeEE3$_0PN2cc12SnapAreaDataEEEvT0_S9_T_"(%"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*) unnamed_addr #1 {
  %3 = alloca %"struct.cc::SnapAreaData", align 8
  %4 = alloca %"struct.cc::SnapAreaData", align 8
  %5 = alloca %"struct.cc::SnapAreaData", align 8
  %6 = alloca %"struct.cc::SnapAreaData", align 8
  %7 = alloca %"struct.cc::SnapAreaData", align 8
  %8 = alloca [24 x i8], align 8
  %9 = alloca %"struct.cc::SnapAreaData", align 8
  %10 = alloca %"struct.cc::SnapAreaData", align 8
  %11 = alloca %"struct.cc::SnapAreaData", align 8
  %12 = alloca %"struct.cc::SnapAreaData", align 8
  %13 = bitcast %"struct.cc::SnapAreaData"* %5 to i8*
  %14 = bitcast %"struct.cc::SnapAreaData"* %3 to i8*
  %15 = bitcast %"struct.cc::SnapAreaData"* %4 to i8*
  %16 = bitcast %"struct.cc::SnapAreaData"* %6 to i8*
  %17 = bitcast %"struct.cc::SnapAreaData"* %7 to i8*
  br label %18

18:                                               ; preds = %389, %2
  %19 = phi %"struct.cc::SnapAreaData"* [ %1, %2 ], [ %361, %389 ]
  %20 = phi %"struct.cc::SnapAreaData"* [ %0, %2 ], [ %31, %389 ]
  %21 = ptrtoint %"struct.cc::SnapAreaData"* %19 to i64
  %22 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %19, i64 -1
  %23 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %19, i64 -2
  %24 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %19, i64 -1, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %19, i64 -1, i32 1, i32 0, i32 0
  %26 = bitcast %"struct.cc::SnapAreaData"* %22 to i8*
  %27 = ptrtoint %"struct.cc::SnapAreaData"* %19 to i64
  br label %28

28:                                               ; preds = %400, %18
  %29 = phi %"struct.cc::SnapAreaData"* [ %20, %18 ], [ %401, %400 ]
  br label %30

30:                                               ; preds = %274, %28
  %31 = phi %"struct.cc::SnapAreaData"* [ %29, %28 ], [ %245, %274 ]
  %32 = ptrtoint %"struct.cc::SnapAreaData"* %31 to i64
  %33 = sub i64 %21, %32
  %34 = sdiv exact i64 %33, 40
  switch i64 %34, label %114 [
    i64 0, label %404
    i64 1, label %404
    i64 2, label %35
    i64 3, label %54
    i64 4, label %58
    i64 5, label %108
  ]

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %19, i64 -1
  %37 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %19, i64 -1, i32 1, i32 0, i32 1
  %38 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %19, i64 -1, i32 1, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %31, i64 0, i32 1, i32 0, i32 1
  %40 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %31, i64 0, i32 1, i32 0, i32 0
  %41 = load float, float* %37, align 4
  %42 = load float, float* %39, align 4
  %43 = fcmp olt float %41, %42
  br i1 %43, label %50, label %44

44:                                               ; preds = %35
  %45 = fcmp olt float %42, %41
  br i1 %45, label %404, label %46

46:                                               ; preds = %44
  %47 = load float, float* %38, align 4
  %48 = load float, float* %40, align 4
  %49 = fcmp olt float %47, %48
  br i1 %49, label %50, label %404

50:                                               ; preds = %35, %46
  %51 = bitcast %"struct.cc::SnapAreaData"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %51)
  %52 = bitcast %"struct.cc::SnapAreaData"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* align 8 %52, i64 40, i1 false) #19
  %53 = bitcast %"struct.cc::SnapAreaData"* %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 40, i1 false) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* nonnull align 8 %51, i64 40, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %51)
  br label %404

54:                                               ; preds = %30
  %55 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %31, i64 1
  %56 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %19, i64 -1
  %57 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink22BuildSnapContainerInfoEPNS1_4NodeEE3$_0PN2cc12SnapAreaDataEEEjT0_S9_S9_T_"(%"struct.cc::SnapAreaData"* %31, %"struct.cc::SnapAreaData"* %55, %"struct.cc::SnapAreaData"* %56)
  br label %404

58:                                               ; preds = %30
  %59 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %31, i64 1
  %60 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %31, i64 2
  %61 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %19, i64 -1
  %62 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink22BuildSnapContainerInfoEPNS1_4NodeEE3$_0PN2cc12SnapAreaDataEEEjT0_S9_S9_T_"(%"struct.cc::SnapAreaData"* %31, %"struct.cc::SnapAreaData"* %59, %"struct.cc::SnapAreaData"* %60) #19
  %63 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %19, i64 -1, i32 1, i32 0, i32 1
  %64 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %19, i64 -1, i32 1, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %31, i64 2, i32 1, i32 0, i32 1
  %66 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %31, i64 2, i32 1, i32 0, i32 0
  %67 = load float, float* %63, align 4
  %68 = load float, float* %65, align 4
  %69 = fcmp olt float %67, %68
  br i1 %69, label %76, label %70

70:                                               ; preds = %58
  %71 = fcmp olt float %68, %67
  br i1 %71, label %404, label %72

72:                                               ; preds = %70
  %73 = load float, float* %64, align 4
  %74 = load float, float* %66, align 4
  %75 = fcmp olt float %73, %74
  br i1 %75, label %76, label %404

76:                                               ; preds = %72, %58
  %77 = bitcast %"struct.cc::SnapAreaData"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %77)
  %78 = bitcast %"struct.cc::SnapAreaData"* %60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 8 %78, i64 40, i1 false) #19
  %79 = bitcast %"struct.cc::SnapAreaData"* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 40, i1 false) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* nonnull align 8 %77, i64 40, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %77)
  %80 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %31, i64 1, i32 1, i32 0, i32 1
  %81 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %31, i64 1, i32 1, i32 0, i32 0
  %82 = load float, float* %65, align 4
  %83 = load float, float* %80, align 4
  %84 = fcmp olt float %82, %83
  br i1 %84, label %91, label %85

85:                                               ; preds = %76
  %86 = fcmp olt float %83, %82
  br i1 %86, label %404, label %87

87:                                               ; preds = %85
  %88 = load float, float* %66, align 4
  %89 = load float, float* %81, align 4
  %90 = fcmp olt float %88, %89
  br i1 %90, label %91, label %404

91:                                               ; preds = %87, %76
  %92 = bitcast %"struct.cc::SnapAreaData"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %92)
  %93 = bitcast %"struct.cc::SnapAreaData"* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %92, i8* align 8 %93, i64 40, i1 false) #19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %78, i64 40, i1 false) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* nonnull align 8 %92, i64 40, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %92)
  %94 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %31, i64 0, i32 1, i32 0, i32 1
  %95 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %31, i64 0, i32 1, i32 0, i32 0
  %96 = load float, float* %80, align 4
  %97 = load float, float* %94, align 4
  %98 = fcmp olt float %96, %97
  br i1 %98, label %105, label %99

99:                                               ; preds = %91
  %100 = fcmp olt float %97, %96
  br i1 %100, label %404, label %101

101:                                              ; preds = %99
  %102 = load float, float* %81, align 4
  %103 = load float, float* %95, align 4
  %104 = fcmp olt float %102, %103
  br i1 %104, label %105, label %404

105:                                              ; preds = %101, %91
  %106 = bitcast %"struct.cc::SnapAreaData"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %106)
  %107 = bitcast %"struct.cc::SnapAreaData"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %106, i8* align 8 %107, i64 40, i1 false) #19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %93, i64 40, i1 false) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* nonnull align 8 %106, i64 40, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %106)
  br label %404

108:                                              ; preds = %30
  %109 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %31, i64 1
  %110 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %31, i64 2
  %111 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %31, i64 3
  %112 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %19, i64 -1
  %113 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN5blink22BuildSnapContainerInfoEPNS1_4NodeEE3$_0PN2cc12SnapAreaDataEEEjT0_S9_S9_S9_S9_T_"(%"struct.cc::SnapAreaData"* %31, %"struct.cc::SnapAreaData"* %109, %"struct.cc::SnapAreaData"* %110, %"struct.cc::SnapAreaData"* %111, %"struct.cc::SnapAreaData"* %112)
  br label %404

114:                                              ; preds = %30
  %115 = icmp slt i64 %33, 1240
  br i1 %115, label %116, label %176

116:                                              ; preds = %114
  %117 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %31, i64 2
  %118 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %31, i64 1
  %119 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink22BuildSnapContainerInfoEPNS1_4NodeEE3$_0PN2cc12SnapAreaDataEEEjT0_S9_S9_T_"(%"struct.cc::SnapAreaData"* %31, %"struct.cc::SnapAreaData"* %118, %"struct.cc::SnapAreaData"* %117) #19
  %120 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %31, i64 3
  %121 = icmp eq %"struct.cc::SnapAreaData"* %120, %19
  br i1 %121, label %404, label %122

122:                                              ; preds = %116
  %123 = getelementptr inbounds [24 x i8], [24 x i8]* %8, i64 0, i64 0
  br label %124

124:                                              ; preds = %173, %122
  %125 = phi %"struct.cc::SnapAreaData"* [ %120, %122 ], [ %174, %173 ]
  %126 = phi %"struct.cc::SnapAreaData"* [ %117, %122 ], [ %125, %173 ]
  %127 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %125, i64 0, i32 1, i32 0, i32 1
  %128 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %125, i64 0, i32 1, i32 0, i32 0
  %129 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %126, i64 0, i32 1, i32 0, i32 1
  %130 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %126, i64 0, i32 1, i32 0, i32 0
  %131 = load float, float* %127, align 4
  %132 = load float, float* %129, align 4
  %133 = fcmp olt float %131, %132
  br i1 %133, label %140, label %134

134:                                              ; preds = %124
  %135 = fcmp olt float %132, %131
  br i1 %135, label %173, label %136

136:                                              ; preds = %134
  %137 = load float, float* %128, align 4
  %138 = load float, float* %130, align 4
  %139 = fcmp olt float %137, %138
  br i1 %139, label %140, label %173

140:                                              ; preds = %136, %124
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %123)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %123, i8* align 8 bitcast (%"class.gfx::SizeF"* getelementptr inbounds ({ %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, [7 x i8], %"struct.cc::ElementId" }, { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, [7 x i8], %"struct.cc::ElementId" }* @"__const._ZNSt3__127__insertion_sort_incompleteIRZN5blink22BuildSnapContainerInfoEPNS1_4NodeEE3$_0PN2cc12SnapAreaDataEEEbT0_S9_T_.__t", i64 0, i32 1, i32 1) to i8*), i64 24, i1 false) #19
  %141 = bitcast %"struct.cc::SnapAreaData"* %125 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = load float, float* %128, align 8
  %144 = load float, float* %127, align 4
  %145 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %125, i64 0, i32 1, i32 1
  %146 = bitcast %"class.gfx::SizeF"* %145 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %123, i8* align 8 %146, i64 24, i1 false) #19
  %147 = bitcast %"struct.cc::SnapAreaData"* %125 to i8*
  %148 = bitcast %"struct.cc::SnapAreaData"* %126 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 8 %148, i64 40, i1 false) #19
  %149 = icmp eq %"struct.cc::SnapAreaData"* %126, %31
  br i1 %149, label %166, label %150

150:                                              ; preds = %140, %162
  %151 = phi %"struct.cc::SnapAreaData"* [ %152, %162 ], [ %126, %140 ]
  %152 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %151, i64 -1
  %153 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %151, i64 -1, i32 1, i32 0, i32 1
  %154 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %151, i64 -1, i32 1, i32 0, i32 0
  %155 = load float, float* %153, align 4
  %156 = fcmp olt float %144, %155
  br i1 %156, label %162, label %157

157:                                              ; preds = %150
  %158 = fcmp olt float %155, %144
  br i1 %158, label %166, label %159

159:                                              ; preds = %157
  %160 = load float, float* %154, align 4
  %161 = fcmp olt float %143, %160
  br i1 %161, label %162, label %166

162:                                              ; preds = %159, %150
  %163 = bitcast %"struct.cc::SnapAreaData"* %151 to i8*
  %164 = bitcast %"struct.cc::SnapAreaData"* %152 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %163, i8* align 8 %164, i64 40, i1 false) #19
  %165 = icmp eq %"struct.cc::SnapAreaData"* %152, %31
  br i1 %165, label %166, label %150

166:                                              ; preds = %162, %159, %157, %140
  %167 = phi %"struct.cc::SnapAreaData"* [ %31, %140 ], [ %31, %162 ], [ %151, %159 ], [ %151, %157 ]
  %168 = bitcast %"struct.cc::SnapAreaData"* %167 to i64*
  store i64 %142, i64* %168, align 8
  %169 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %167, i64 0, i32 1, i32 0, i32 0
  store float %143, float* %169, align 8
  %170 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %167, i64 0, i32 1, i32 0, i32 1
  store float %144, float* %170, align 4
  %171 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %167, i64 0, i32 1, i32 1
  %172 = bitcast %"class.gfx::SizeF"* %171 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %172, i8* nonnull align 8 %123, i64 24, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123)
  br label %173

173:                                              ; preds = %166, %136, %134
  %174 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %125, i64 1
  %175 = icmp eq %"struct.cc::SnapAreaData"* %174, %19
  br i1 %175, label %404, label %124

176:                                              ; preds = %114
  %177 = icmp sgt i64 %33, 39960
  %178 = udiv i64 %33, 80
  %179 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %31, i64 %178
  br i1 %177, label %180, label %185

180:                                              ; preds = %176
  %181 = udiv i64 %33, 160
  %182 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %31, i64 %181
  %183 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %179, i64 %181
  %184 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN5blink22BuildSnapContainerInfoEPNS1_4NodeEE3$_0PN2cc12SnapAreaDataEEEjT0_S9_S9_S9_S9_T_"(%"struct.cc::SnapAreaData"* %31, %"struct.cc::SnapAreaData"* %182, %"struct.cc::SnapAreaData"* %179, %"struct.cc::SnapAreaData"* %183, %"struct.cc::SnapAreaData"* %22)
  br label %187

185:                                              ; preds = %176
  %186 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink22BuildSnapContainerInfoEPNS1_4NodeEE3$_0PN2cc12SnapAreaDataEEEjT0_S9_S9_T_"(%"struct.cc::SnapAreaData"* %31, %"struct.cc::SnapAreaData"* %179, %"struct.cc::SnapAreaData"* %22)
  br label %187

187:                                              ; preds = %185, %180
  %188 = phi i32 [ %184, %180 ], [ %186, %185 ]
  %189 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %31, i64 0, i32 1, i32 0, i32 1
  %190 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %31, i64 0, i32 1, i32 0, i32 0
  %191 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %31, i64 %178, i32 1, i32 0, i32 1
  %192 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %31, i64 %178, i32 1, i32 0, i32 0
  %193 = load float, float* %189, align 4
  %194 = load float, float* %191, align 4
  %195 = fcmp olt float %193, %194
  br i1 %195, label %300, label %196

196:                                              ; preds = %187
  %197 = fcmp olt float %194, %193
  br i1 %197, label %202, label %198

198:                                              ; preds = %196
  %199 = load float, float* %190, align 4
  %200 = load float, float* %192, align 4
  %201 = fcmp olt float %199, %200
  br i1 %201, label %300, label %202

202:                                              ; preds = %198, %196
  %203 = icmp eq %"struct.cc::SnapAreaData"* %31, %23
  br i1 %203, label %204, label %280

204:                                              ; preds = %293, %202
  %205 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %31, i64 1
  %206 = load float, float* %24, align 4
  %207 = fcmp olt float %193, %206
  br i1 %207, label %234, label %208

208:                                              ; preds = %204
  %209 = fcmp olt float %206, %193
  br i1 %209, label %214, label %210

210:                                              ; preds = %208
  %211 = load float, float* %190, align 4
  %212 = load float, float* %25, align 4
  %213 = fcmp olt float %211, %212
  br i1 %213, label %234, label %214

214:                                              ; preds = %210, %208
  %215 = icmp eq %"struct.cc::SnapAreaData"* %205, %22
  br i1 %215, label %404, label %216

216:                                              ; preds = %214, %231
  %217 = phi %"struct.cc::SnapAreaData"* [ %232, %231 ], [ %205, %214 ]
  %218 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %217, i64 0, i32 1, i32 0, i32 1
  %219 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %217, i64 0, i32 1, i32 0, i32 0
  %220 = load float, float* %218, align 4
  %221 = fcmp olt float %193, %220
  br i1 %221, label %228, label %222

222:                                              ; preds = %216
  %223 = fcmp olt float %220, %193
  br i1 %223, label %231, label %224

224:                                              ; preds = %222
  %225 = load float, float* %190, align 4
  %226 = load float, float* %219, align 4
  %227 = fcmp olt float %225, %226
  br i1 %227, label %228, label %231

228:                                              ; preds = %216, %224
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14)
  %229 = bitcast %"struct.cc::SnapAreaData"* %217 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 %229, i64 40, i1 false) #19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %229, i8* align 8 %26, i64 40, i1 false) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* nonnull align 8 %14, i64 40, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14)
  %230 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %217, i64 1
  br label %234

231:                                              ; preds = %222, %224
  %232 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %217, i64 1
  %233 = icmp eq %"struct.cc::SnapAreaData"* %232, %22
  br i1 %233, label %404, label %216

234:                                              ; preds = %204, %210, %228
  %235 = phi %"struct.cc::SnapAreaData"* [ %230, %228 ], [ %205, %210 ], [ %205, %204 ]
  %236 = icmp eq %"struct.cc::SnapAreaData"* %235, %22
  br i1 %236, label %404, label %237

237:                                              ; preds = %234, %276
  %238 = phi %"struct.cc::SnapAreaData"* [ %279, %276 ], [ %235, %234 ]
  %239 = phi %"struct.cc::SnapAreaData"* [ %262, %276 ], [ %22, %234 ]
  %240 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %238, i64 0, i32 1, i32 0, i32 1
  %241 = load float, float* %189, align 4
  %242 = load float, float* %240, align 4
  %243 = fcmp olt float %241, %242
  br i1 %243, label %244, label %246

244:                                              ; preds = %255, %250, %237
  %245 = phi %"struct.cc::SnapAreaData"* [ %238, %237 ], [ %248, %250 ], [ %256, %255 ]
  br label %260

246:                                              ; preds = %237, %255
  %247 = phi float [ %258, %255 ], [ %242, %237 ]
  %248 = phi %"struct.cc::SnapAreaData"* [ %256, %255 ], [ %238, %237 ]
  %249 = fcmp olt float %247, %241
  br i1 %249, label %255, label %250

250:                                              ; preds = %246
  %251 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %248, i64 0, i32 1, i32 0, i32 0
  %252 = load float, float* %190, align 4
  %253 = load float, float* %251, align 4
  %254 = fcmp olt float %252, %253
  br i1 %254, label %244, label %255

255:                                              ; preds = %246, %250
  %256 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %248, i64 1
  %257 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %248, i64 1, i32 1, i32 0, i32 1
  %258 = load float, float* %257, align 4
  %259 = fcmp olt float %241, %258
  br i1 %259, label %244, label %246

260:                                              ; preds = %273, %244
  %261 = phi %"struct.cc::SnapAreaData"* [ %239, %244 ], [ %262, %273 ]
  %262 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %261, i64 -1
  %263 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %261, i64 -1, i32 1, i32 0, i32 1
  %264 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %261, i64 -1, i32 1, i32 0, i32 0
  %265 = load float, float* %263, align 4
  %266 = fcmp olt float %241, %265
  br i1 %266, label %273, label %267

267:                                              ; preds = %260
  %268 = fcmp olt float %265, %241
  br i1 %268, label %274, label %269

269:                                              ; preds = %267
  %270 = load float, float* %190, align 4
  %271 = load float, float* %264, align 4
  %272 = fcmp olt float %270, %271
  br i1 %272, label %273, label %274

273:                                              ; preds = %269, %260
  br label %260

274:                                              ; preds = %267, %269
  %275 = icmp ult %"struct.cc::SnapAreaData"* %245, %262
  br i1 %275, label %276, label %30

276:                                              ; preds = %274
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15)
  %277 = bitcast %"struct.cc::SnapAreaData"* %245 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 %277, i64 40, i1 false) #19
  %278 = bitcast %"struct.cc::SnapAreaData"* %262 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %277, i8* align 8 %278, i64 40, i1 false) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %278, i8* nonnull align 8 %15, i64 40, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15)
  %279 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %245, i64 1
  br label %237

280:                                              ; preds = %202, %293
  %281 = phi %"struct.cc::SnapAreaData"* [ %294, %293 ], [ %23, %202 ]
  %282 = phi %"struct.cc::SnapAreaData"* [ %281, %293 ], [ %22, %202 ]
  %283 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %282, i64 -1, i32 1, i32 0, i32 1
  %284 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %282, i64 -1, i32 1, i32 0, i32 0
  %285 = load float, float* %283, align 4
  %286 = fcmp olt float %285, %194
  br i1 %286, label %296, label %287

287:                                              ; preds = %280
  %288 = fcmp olt float %194, %285
  br i1 %288, label %293, label %289

289:                                              ; preds = %287
  %290 = load float, float* %284, align 4
  %291 = load float, float* %192, align 4
  %292 = fcmp olt float %290, %291
  br i1 %292, label %296, label %293

293:                                              ; preds = %289, %287
  %294 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %281, i64 -1
  %295 = icmp eq %"struct.cc::SnapAreaData"* %31, %294
  br i1 %295, label %204, label %280

296:                                              ; preds = %280, %289
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13)
  %297 = bitcast %"struct.cc::SnapAreaData"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %297, i64 40, i1 false) #19
  %298 = bitcast %"struct.cc::SnapAreaData"* %281 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %297, i8* align 8 %298, i64 40, i1 false) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %298, i8* nonnull align 8 %13, i64 40, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13)
  %299 = add i32 %188, 1
  br label %300

300:                                              ; preds = %187, %198, %296
  %301 = phi i32 [ %299, %296 ], [ %188, %198 ], [ %188, %187 ]
  %302 = phi %"struct.cc::SnapAreaData"* [ %281, %296 ], [ %22, %198 ], [ %22, %187 ]
  %303 = ptrtoint %"struct.cc::SnapAreaData"* %31 to i64
  %304 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %31, i64 1
  %305 = icmp ult %"struct.cc::SnapAreaData"* %304, %302
  br i1 %305, label %306, label %358

306:                                              ; preds = %300, %351
  %307 = phi %"struct.cc::SnapAreaData"* [ %356, %351 ], [ %179, %300 ]
  %308 = phi i32 [ %354, %351 ], [ %301, %300 ]
  %309 = phi %"struct.cc::SnapAreaData"* [ %357, %351 ], [ %304, %300 ]
  %310 = phi %"struct.cc::SnapAreaData"* [ %349, %351 ], [ %302, %300 ]
  %311 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %307, i64 0, i32 1, i32 0, i32 1
  %312 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %307, i64 0, i32 1, i32 0, i32 0
  %313 = load float, float* %311, align 4
  br label %314

314:                                              ; preds = %331, %306
  %315 = phi %"struct.cc::SnapAreaData"* [ %309, %306 ], [ %332, %331 ]
  %316 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %315, i64 0, i32 1, i32 0, i32 1
  %317 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %315, i64 0, i32 1, i32 0, i32 0
  %318 = load float, float* %316, align 4
  %319 = fcmp olt float %318, %313
  br i1 %319, label %331, label %320

320:                                              ; preds = %314
  %321 = fcmp olt float %313, %318
  br i1 %321, label %322, label %327

322:                                              ; preds = %327, %320
  %323 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %310, i64 -1
  %324 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %310, i64 -1, i32 1, i32 0, i32 1
  %325 = load float, float* %324, align 4
  %326 = fcmp olt float %325, %313
  br i1 %326, label %348, label %333

327:                                              ; preds = %320
  %328 = load float, float* %317, align 4
  %329 = load float, float* %312, align 4
  %330 = fcmp olt float %328, %329
  br i1 %330, label %331, label %322

331:                                              ; preds = %314, %327
  %332 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %315, i64 1
  br label %314

333:                                              ; preds = %322, %343
  %334 = phi float [ %346, %343 ], [ %325, %322 ]
  %335 = phi %"struct.cc::SnapAreaData"* [ %336, %343 ], [ %310, %322 ]
  %336 = phi %"struct.cc::SnapAreaData"* [ %344, %343 ], [ %323, %322 ]
  %337 = fcmp olt float %313, %334
  br i1 %337, label %343, label %338

338:                                              ; preds = %333
  %339 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %335, i64 -1, i32 1, i32 0, i32 0
  %340 = load float, float* %339, align 4
  %341 = load float, float* %312, align 4
  %342 = fcmp olt float %340, %341
  br i1 %342, label %348, label %343

343:                                              ; preds = %338, %333
  %344 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %336, i64 -1
  %345 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %336, i64 -1, i32 1, i32 0, i32 1
  %346 = load float, float* %345, align 4
  %347 = fcmp olt float %346, %313
  br i1 %347, label %348, label %333

348:                                              ; preds = %338, %343, %322
  %349 = phi %"struct.cc::SnapAreaData"* [ %323, %322 ], [ %344, %343 ], [ %336, %338 ]
  %350 = icmp ugt %"struct.cc::SnapAreaData"* %315, %349
  br i1 %350, label %358, label %351

351:                                              ; preds = %348
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16)
  %352 = bitcast %"struct.cc::SnapAreaData"* %315 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 8 %352, i64 40, i1 false) #19
  %353 = bitcast %"struct.cc::SnapAreaData"* %349 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %352, i8* align 8 %353, i64 40, i1 false) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %353, i8* nonnull align 8 %16, i64 40, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16)
  %354 = add i32 %308, 1
  %355 = icmp eq %"struct.cc::SnapAreaData"* %307, %315
  %356 = select i1 %355, %"struct.cc::SnapAreaData"* %349, %"struct.cc::SnapAreaData"* %307
  %357 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %315, i64 1
  br label %306

358:                                              ; preds = %348, %300
  %359 = phi %"struct.cc::SnapAreaData"* [ %179, %300 ], [ %307, %348 ]
  %360 = phi i32 [ %301, %300 ], [ %308, %348 ]
  %361 = phi %"struct.cc::SnapAreaData"* [ %304, %300 ], [ %315, %348 ]
  %362 = icmp eq %"struct.cc::SnapAreaData"* %361, %359
  br i1 %362, label %381, label %363

363:                                              ; preds = %358
  %364 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %359, i64 0, i32 1, i32 0, i32 1
  %365 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %359, i64 0, i32 1, i32 0, i32 0
  %366 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %361, i64 0, i32 1, i32 0, i32 1
  %367 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %361, i64 0, i32 1, i32 0, i32 0
  %368 = load float, float* %364, align 4
  %369 = load float, float* %366, align 4
  %370 = fcmp olt float %368, %369
  br i1 %370, label %377, label %371

371:                                              ; preds = %363
  %372 = fcmp olt float %369, %368
  br i1 %372, label %381, label %373

373:                                              ; preds = %371
  %374 = load float, float* %365, align 4
  %375 = load float, float* %367, align 4
  %376 = fcmp olt float %374, %375
  br i1 %376, label %377, label %381

377:                                              ; preds = %363, %373
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17)
  %378 = bitcast %"struct.cc::SnapAreaData"* %361 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 %378, i64 40, i1 false) #19
  %379 = bitcast %"struct.cc::SnapAreaData"* %359 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %378, i8* align 8 %379, i64 40, i1 false) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %379, i8* nonnull align 8 %17, i64 40, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17)
  %380 = add i32 %360, 1
  br label %381

381:                                              ; preds = %371, %358, %377, %373
  %382 = phi i32 [ %380, %377 ], [ %360, %373 ], [ %360, %358 ], [ %360, %371 ]
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %384, label %391

384:                                              ; preds = %381
  %385 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink22BuildSnapContainerInfoEPNS1_4NodeEE3$_0PN2cc12SnapAreaDataEEEbT0_S9_T_"(%"struct.cc::SnapAreaData"* %31, %"struct.cc::SnapAreaData"* %361)
  %386 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %361, i64 1
  %387 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink22BuildSnapContainerInfoEPNS1_4NodeEE3$_0PN2cc12SnapAreaDataEEEbT0_S9_T_"(%"struct.cc::SnapAreaData"* %386, %"struct.cc::SnapAreaData"* %19)
  br i1 %387, label %388, label %390

388:                                              ; preds = %384
  br i1 %385, label %404, label %389

389:                                              ; preds = %388, %402
  br label %18

390:                                              ; preds = %384
  br i1 %385, label %400, label %391

391:                                              ; preds = %390, %381
  %392 = ptrtoint %"struct.cc::SnapAreaData"* %361 to i64
  %393 = sub i64 %392, %303
  %394 = sdiv exact i64 %393, 40
  %395 = sub i64 %27, %392
  %396 = sdiv exact i64 %395, 40
  %397 = icmp slt i64 %394, %396
  br i1 %397, label %398, label %402

398:                                              ; preds = %391
  tail call fastcc void @"_ZNSt3__16__sortIRZN5blink22BuildSnapContainerInfoEPNS1_4NodeEE3$_0PN2cc12SnapAreaDataEEEvT0_S9_T_"(%"struct.cc::SnapAreaData"* %31, %"struct.cc::SnapAreaData"* %361)
  %399 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %361, i64 1
  br label %400

400:                                              ; preds = %398, %390
  %401 = phi %"struct.cc::SnapAreaData"* [ %386, %390 ], [ %399, %398 ]
  br label %28

402:                                              ; preds = %391
  %403 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %361, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN5blink22BuildSnapContainerInfoEPNS1_4NodeEE3$_0PN2cc12SnapAreaDataEEEvT0_S9_T_"(%"struct.cc::SnapAreaData"* %403, %"struct.cc::SnapAreaData"* %19)
  br label %389

404:                                              ; preds = %388, %234, %30, %30, %214, %231, %173, %44, %116, %105, %101, %99, %87, %85, %72, %70, %46, %50, %54, %108
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort3IRZN5blink22BuildSnapContainerInfoEPNS1_4NodeEE3$_0PN2cc12SnapAreaDataEEEjT0_S9_S9_T_"(%"struct.cc::SnapAreaData"* nocapture, %"struct.cc::SnapAreaData"* nocapture, %"struct.cc::SnapAreaData"* nocapture) unnamed_addr #1 {
  %4 = alloca %"struct.cc::SnapAreaData", align 8
  %5 = alloca %"struct.cc::SnapAreaData", align 8
  %6 = alloca %"struct.cc::SnapAreaData", align 8
  %7 = alloca %"struct.cc::SnapAreaData", align 8
  %8 = alloca %"struct.cc::SnapAreaData", align 8
  %9 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %1, i64 0, i32 1, i32 0, i32 1
  %10 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %1, i64 0, i32 1, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load float, float* %9, align 4
  %14 = load float, float* %11, align 4
  %15 = fcmp olt float %13, %14
  br i1 %15, label %22, label %16

16:                                               ; preds = %3
  %17 = fcmp olt float %14, %13
  br i1 %17, label %22, label %18

18:                                               ; preds = %16
  %19 = load float, float* %10, align 4
  %20 = load float, float* %12, align 4
  %21 = fcmp olt float %19, %20
  br label %22

22:                                               ; preds = %3, %16, %18
  %23 = phi i1 [ %21, %18 ], [ true, %3 ], [ false, %16 ]
  %24 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %2, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %2, i64 0, i32 1, i32 0, i32 0
  %26 = load float, float* %24, align 4
  %27 = fcmp olt float %26, %13
  br i1 %27, label %34, label %28

28:                                               ; preds = %22
  %29 = fcmp olt float %13, %26
  br i1 %29, label %34, label %30

30:                                               ; preds = %28
  %31 = load float, float* %25, align 4
  %32 = load float, float* %10, align 4
  %33 = fcmp olt float %31, %32
  br label %34

34:                                               ; preds = %22, %28, %30
  %35 = phi i1 [ %33, %30 ], [ true, %22 ], [ false, %28 ]
  br i1 %23, label %53, label %36

36:                                               ; preds = %34
  br i1 %35, label %37, label %74

37:                                               ; preds = %36
  %38 = bitcast %"struct.cc::SnapAreaData"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %38)
  %39 = bitcast %"struct.cc::SnapAreaData"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* align 8 %39, i64 40, i1 false) #19
  %40 = bitcast %"struct.cc::SnapAreaData"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 40, i1 false) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* nonnull align 8 %38, i64 40, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %38)
  %41 = load float, float* %9, align 4
  %42 = load float, float* %11, align 4
  %43 = fcmp olt float %41, %42
  br i1 %43, label %50, label %44

44:                                               ; preds = %37
  %45 = fcmp olt float %42, %41
  br i1 %45, label %74, label %46

46:                                               ; preds = %44
  %47 = load float, float* %10, align 4
  %48 = load float, float* %12, align 4
  %49 = fcmp olt float %47, %48
  br i1 %49, label %50, label %74

50:                                               ; preds = %37, %46
  %51 = bitcast %"struct.cc::SnapAreaData"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %51)
  %52 = bitcast %"struct.cc::SnapAreaData"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* align 8 %52, i64 40, i1 false) #19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %39, i64 40, i1 false) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* nonnull align 8 %51, i64 40, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %51)
  br label %74

53:                                               ; preds = %34
  br i1 %35, label %54, label %58

54:                                               ; preds = %53
  %55 = bitcast %"struct.cc::SnapAreaData"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %55)
  %56 = bitcast %"struct.cc::SnapAreaData"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %55, i8* align 8 %56, i64 40, i1 false) #19
  %57 = bitcast %"struct.cc::SnapAreaData"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 40, i1 false) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* nonnull align 8 %55, i64 40, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %55)
  br label %74

58:                                               ; preds = %53
  %59 = bitcast %"struct.cc::SnapAreaData"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %59)
  %60 = bitcast %"struct.cc::SnapAreaData"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* align 8 %60, i64 40, i1 false) #19
  %61 = bitcast %"struct.cc::SnapAreaData"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 40, i1 false) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* nonnull align 8 %59, i64 40, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %59)
  %62 = load float, float* %24, align 4
  %63 = load float, float* %9, align 4
  %64 = fcmp olt float %62, %63
  br i1 %64, label %71, label %65

65:                                               ; preds = %58
  %66 = fcmp olt float %63, %62
  br i1 %66, label %74, label %67

67:                                               ; preds = %65
  %68 = load float, float* %25, align 4
  %69 = load float, float* %10, align 4
  %70 = fcmp olt float %68, %69
  br i1 %70, label %71, label %74

71:                                               ; preds = %58, %67
  %72 = bitcast %"struct.cc::SnapAreaData"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %72)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* align 8 %61, i64 40, i1 false) #19
  %73 = bitcast %"struct.cc::SnapAreaData"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %73, i64 40, i1 false) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* nonnull align 8 %72, i64 40, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %72)
  br label %74

74:                                               ; preds = %65, %44, %67, %71, %46, %50, %36, %54
  %75 = phi i32 [ 1, %54 ], [ 0, %36 ], [ 2, %50 ], [ 1, %46 ], [ 2, %71 ], [ 1, %67 ], [ 1, %44 ], [ 1, %65 ]
  ret i32 %75
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort5IRZN5blink22BuildSnapContainerInfoEPNS1_4NodeEE3$_0PN2cc12SnapAreaDataEEEjT0_S9_S9_S9_S9_T_"(%"struct.cc::SnapAreaData"* nocapture, %"struct.cc::SnapAreaData"* nocapture, %"struct.cc::SnapAreaData"* nocapture, %"struct.cc::SnapAreaData"* nocapture, %"struct.cc::SnapAreaData"* nocapture) unnamed_addr #1 {
  %6 = alloca %"struct.cc::SnapAreaData", align 8
  %7 = alloca %"struct.cc::SnapAreaData", align 8
  %8 = alloca %"struct.cc::SnapAreaData", align 8
  %9 = alloca %"struct.cc::SnapAreaData", align 8
  %10 = alloca %"struct.cc::SnapAreaData", align 8
  %11 = alloca %"struct.cc::SnapAreaData", align 8
  %12 = alloca %"struct.cc::SnapAreaData", align 8
  %13 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink22BuildSnapContainerInfoEPNS1_4NodeEE3$_0PN2cc12SnapAreaDataEEEjT0_S9_S9_T_"(%"struct.cc::SnapAreaData"* %0, %"struct.cc::SnapAreaData"* %1, %"struct.cc::SnapAreaData"* %2) #19
  %14 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %3, i64 0, i32 1, i32 0, i32 1
  %15 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %3, i64 0, i32 1, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %2, i64 0, i32 1, i32 0, i32 1
  %17 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %2, i64 0, i32 1, i32 0, i32 0
  %18 = load float, float* %14, align 4
  %19 = load float, float* %16, align 4
  %20 = fcmp olt float %18, %19
  br i1 %20, label %27, label %21

21:                                               ; preds = %5
  %22 = fcmp olt float %19, %18
  br i1 %22, label %62, label %23

23:                                               ; preds = %21
  %24 = load float, float* %15, align 4
  %25 = load float, float* %17, align 4
  %26 = fcmp olt float %24, %25
  br i1 %26, label %27, label %62

27:                                               ; preds = %23, %5
  %28 = bitcast %"struct.cc::SnapAreaData"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %28)
  %29 = bitcast %"struct.cc::SnapAreaData"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 8 %29, i64 40, i1 false) #19
  %30 = bitcast %"struct.cc::SnapAreaData"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 40, i1 false) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* nonnull align 8 %28, i64 40, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %28)
  %31 = add i32 %13, 1
  %32 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %1, i64 0, i32 1, i32 0, i32 1
  %33 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %1, i64 0, i32 1, i32 0, i32 0
  %34 = load float, float* %16, align 4
  %35 = load float, float* %32, align 4
  %36 = fcmp olt float %34, %35
  br i1 %36, label %43, label %37

37:                                               ; preds = %27
  %38 = fcmp olt float %35, %34
  br i1 %38, label %62, label %39

39:                                               ; preds = %37
  %40 = load float, float* %17, align 4
  %41 = load float, float* %33, align 4
  %42 = fcmp olt float %40, %41
  br i1 %42, label %43, label %62

43:                                               ; preds = %39, %27
  %44 = bitcast %"struct.cc::SnapAreaData"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %44)
  %45 = bitcast %"struct.cc::SnapAreaData"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %45, i64 40, i1 false) #19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %29, i64 40, i1 false) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* nonnull align 8 %44, i64 40, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %44)
  %46 = add i32 %13, 2
  %47 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %0, i64 0, i32 1, i32 0, i32 1
  %48 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %0, i64 0, i32 1, i32 0, i32 0
  %49 = load float, float* %32, align 4
  %50 = load float, float* %47, align 4
  %51 = fcmp olt float %49, %50
  br i1 %51, label %58, label %52

52:                                               ; preds = %43
  %53 = fcmp olt float %50, %49
  br i1 %53, label %62, label %54

54:                                               ; preds = %52
  %55 = load float, float* %33, align 4
  %56 = load float, float* %48, align 4
  %57 = fcmp olt float %55, %56
  br i1 %57, label %58, label %62

58:                                               ; preds = %54, %43
  %59 = bitcast %"struct.cc::SnapAreaData"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %59)
  %60 = bitcast %"struct.cc::SnapAreaData"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* align 8 %60, i64 40, i1 false) #19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %45, i64 40, i1 false) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* nonnull align 8 %59, i64 40, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %59)
  %61 = add i32 %13, 3
  br label %62

62:                                               ; preds = %21, %23, %37, %39, %52, %54, %58
  %63 = phi i32 [ %61, %58 ], [ %46, %54 ], [ %31, %39 ], [ %13, %23 ], [ %13, %21 ], [ %31, %37 ], [ %46, %52 ]
  %64 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %4, i64 0, i32 1, i32 0, i32 1
  %65 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %4, i64 0, i32 1, i32 0, i32 0
  %66 = load float, float* %64, align 4
  %67 = load float, float* %14, align 4
  %68 = fcmp olt float %66, %67
  br i1 %68, label %75, label %69

69:                                               ; preds = %62
  %70 = fcmp olt float %67, %66
  br i1 %70, label %123, label %71

71:                                               ; preds = %69
  %72 = load float, float* %65, align 4
  %73 = load float, float* %15, align 4
  %74 = fcmp olt float %72, %73
  br i1 %74, label %75, label %123

75:                                               ; preds = %62, %71
  %76 = bitcast %"struct.cc::SnapAreaData"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %76)
  %77 = bitcast %"struct.cc::SnapAreaData"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %76, i8* align 8 %77, i64 40, i1 false) #19
  %78 = bitcast %"struct.cc::SnapAreaData"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 40, i1 false) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* nonnull align 8 %76, i64 40, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %76)
  %79 = add i32 %63, 1
  %80 = load float, float* %14, align 4
  %81 = load float, float* %16, align 4
  %82 = fcmp olt float %80, %81
  br i1 %82, label %89, label %83

83:                                               ; preds = %75
  %84 = fcmp olt float %81, %80
  br i1 %84, label %123, label %85

85:                                               ; preds = %83
  %86 = load float, float* %15, align 4
  %87 = load float, float* %17, align 4
  %88 = fcmp olt float %86, %87
  br i1 %88, label %89, label %123

89:                                               ; preds = %75, %85
  %90 = bitcast %"struct.cc::SnapAreaData"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %90)
  %91 = bitcast %"struct.cc::SnapAreaData"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* align 8 %91, i64 40, i1 false) #19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %77, i64 40, i1 false) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* nonnull align 8 %90, i64 40, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %90)
  %92 = add i32 %63, 2
  %93 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %1, i64 0, i32 1, i32 0, i32 1
  %94 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %1, i64 0, i32 1, i32 0, i32 0
  %95 = load float, float* %16, align 4
  %96 = load float, float* %93, align 4
  %97 = fcmp olt float %95, %96
  br i1 %97, label %104, label %98

98:                                               ; preds = %89
  %99 = fcmp olt float %96, %95
  br i1 %99, label %123, label %100

100:                                              ; preds = %98
  %101 = load float, float* %17, align 4
  %102 = load float, float* %94, align 4
  %103 = fcmp olt float %101, %102
  br i1 %103, label %104, label %123

104:                                              ; preds = %89, %100
  %105 = bitcast %"struct.cc::SnapAreaData"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %105)
  %106 = bitcast %"struct.cc::SnapAreaData"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %105, i8* align 8 %106, i64 40, i1 false) #19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %91, i64 40, i1 false) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* nonnull align 8 %105, i64 40, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %105)
  %107 = add i32 %63, 3
  %108 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %0, i64 0, i32 1, i32 0, i32 1
  %109 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %0, i64 0, i32 1, i32 0, i32 0
  %110 = load float, float* %93, align 4
  %111 = load float, float* %108, align 4
  %112 = fcmp olt float %110, %111
  br i1 %112, label %119, label %113

113:                                              ; preds = %104
  %114 = fcmp olt float %111, %110
  br i1 %114, label %123, label %115

115:                                              ; preds = %113
  %116 = load float, float* %94, align 4
  %117 = load float, float* %109, align 4
  %118 = fcmp olt float %116, %117
  br i1 %118, label %119, label %123

119:                                              ; preds = %104, %115
  %120 = bitcast %"struct.cc::SnapAreaData"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %120)
  %121 = bitcast %"struct.cc::SnapAreaData"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %120, i8* align 8 %121, i64 40, i1 false) #19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 8 %106, i64 40, i1 false) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* nonnull align 8 %120, i64 40, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %120)
  %122 = add i32 %63, 4
  br label %123

123:                                              ; preds = %113, %98, %83, %69, %85, %115, %119, %100, %71
  %124 = phi i32 [ %122, %119 ], [ %107, %115 ], [ %92, %100 ], [ %79, %85 ], [ %63, %71 ], [ %63, %69 ], [ %79, %83 ], [ %92, %98 ], [ %107, %113 ]
  ret i32 %124
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink22BuildSnapContainerInfoEPNS1_4NodeEE3$_0PN2cc12SnapAreaDataEEEbT0_S9_T_"(%"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*) unnamed_addr #1 {
  %3 = alloca %"struct.cc::SnapAreaData", align 8
  %4 = alloca %"struct.cc::SnapAreaData", align 8
  %5 = alloca %"struct.cc::SnapAreaData", align 8
  %6 = alloca %"struct.cc::SnapAreaData", align 8
  %7 = alloca [24 x i8], align 8
  %8 = ptrtoint %"struct.cc::SnapAreaData"* %1 to i64
  %9 = ptrtoint %"struct.cc::SnapAreaData"* %0 to i64
  %10 = sub i64 %8, %9
  %11 = sdiv exact i64 %10, 40
  switch i64 %11, label %91 [
    i64 0, label %158
    i64 1, label %158
    i64 2, label %12
    i64 3, label %31
    i64 4, label %35
    i64 5, label %85
  ]

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %1, i64 -1
  %14 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %1, i64 -1, i32 1, i32 0, i32 1
  %15 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %1, i64 -1, i32 1, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %0, i64 0, i32 1, i32 0, i32 1
  %17 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %0, i64 0, i32 1, i32 0, i32 0
  %18 = load float, float* %14, align 4
  %19 = load float, float* %16, align 4
  %20 = fcmp olt float %18, %19
  br i1 %20, label %27, label %21

21:                                               ; preds = %12
  %22 = fcmp olt float %19, %18
  br i1 %22, label %158, label %23

23:                                               ; preds = %21
  %24 = load float, float* %15, align 4
  %25 = load float, float* %17, align 4
  %26 = fcmp olt float %24, %25
  br i1 %26, label %27, label %158

27:                                               ; preds = %12, %23
  %28 = bitcast %"struct.cc::SnapAreaData"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %28)
  %29 = bitcast %"struct.cc::SnapAreaData"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 8 %29, i64 40, i1 false) #19
  %30 = bitcast %"struct.cc::SnapAreaData"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 40, i1 false) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* nonnull align 8 %28, i64 40, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %28)
  br label %158

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %0, i64 1
  %33 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %1, i64 -1
  %34 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink22BuildSnapContainerInfoEPNS1_4NodeEE3$_0PN2cc12SnapAreaDataEEEjT0_S9_S9_T_"(%"struct.cc::SnapAreaData"* %0, %"struct.cc::SnapAreaData"* %32, %"struct.cc::SnapAreaData"* %33)
  br label %158

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %0, i64 1
  %37 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %0, i64 2
  %38 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %1, i64 -1
  %39 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink22BuildSnapContainerInfoEPNS1_4NodeEE3$_0PN2cc12SnapAreaDataEEEjT0_S9_S9_T_"(%"struct.cc::SnapAreaData"* %0, %"struct.cc::SnapAreaData"* %36, %"struct.cc::SnapAreaData"* %37) #19
  %40 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %1, i64 -1, i32 1, i32 0, i32 1
  %41 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %1, i64 -1, i32 1, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %0, i64 2, i32 1, i32 0, i32 1
  %43 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %0, i64 2, i32 1, i32 0, i32 0
  %44 = load float, float* %40, align 4
  %45 = load float, float* %42, align 4
  %46 = fcmp olt float %44, %45
  br i1 %46, label %53, label %47

47:                                               ; preds = %35
  %48 = fcmp olt float %45, %44
  br i1 %48, label %158, label %49

49:                                               ; preds = %47
  %50 = load float, float* %41, align 4
  %51 = load float, float* %43, align 4
  %52 = fcmp olt float %50, %51
  br i1 %52, label %53, label %158

53:                                               ; preds = %49, %35
  %54 = bitcast %"struct.cc::SnapAreaData"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %54)
  %55 = bitcast %"struct.cc::SnapAreaData"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %54, i8* align 8 %55, i64 40, i1 false) #19
  %56 = bitcast %"struct.cc::SnapAreaData"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 40, i1 false) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* nonnull align 8 %54, i64 40, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %54)
  %57 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %0, i64 1, i32 1, i32 0, i32 1
  %58 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %0, i64 1, i32 1, i32 0, i32 0
  %59 = load float, float* %42, align 4
  %60 = load float, float* %57, align 4
  %61 = fcmp olt float %59, %60
  br i1 %61, label %68, label %62

62:                                               ; preds = %53
  %63 = fcmp olt float %60, %59
  br i1 %63, label %158, label %64

64:                                               ; preds = %62
  %65 = load float, float* %43, align 4
  %66 = load float, float* %58, align 4
  %67 = fcmp olt float %65, %66
  br i1 %67, label %68, label %158

68:                                               ; preds = %64, %53
  %69 = bitcast %"struct.cc::SnapAreaData"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %69)
  %70 = bitcast %"struct.cc::SnapAreaData"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %69, i8* align 8 %70, i64 40, i1 false) #19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %55, i64 40, i1 false) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* nonnull align 8 %69, i64 40, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %69)
  %71 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %0, i64 0, i32 1, i32 0, i32 1
  %72 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %0, i64 0, i32 1, i32 0, i32 0
  %73 = load float, float* %57, align 4
  %74 = load float, float* %71, align 4
  %75 = fcmp olt float %73, %74
  br i1 %75, label %82, label %76

76:                                               ; preds = %68
  %77 = fcmp olt float %74, %73
  br i1 %77, label %158, label %78

78:                                               ; preds = %76
  %79 = load float, float* %58, align 4
  %80 = load float, float* %72, align 4
  %81 = fcmp olt float %79, %80
  br i1 %81, label %82, label %158

82:                                               ; preds = %78, %68
  %83 = bitcast %"struct.cc::SnapAreaData"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %83)
  %84 = bitcast %"struct.cc::SnapAreaData"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %83, i8* align 8 %84, i64 40, i1 false) #19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %70, i64 40, i1 false) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* nonnull align 8 %83, i64 40, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %83)
  br label %158

85:                                               ; preds = %2
  %86 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %0, i64 1
  %87 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %0, i64 2
  %88 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %0, i64 3
  %89 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %1, i64 -1
  %90 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN5blink22BuildSnapContainerInfoEPNS1_4NodeEE3$_0PN2cc12SnapAreaDataEEEjT0_S9_S9_S9_S9_T_"(%"struct.cc::SnapAreaData"* %0, %"struct.cc::SnapAreaData"* %86, %"struct.cc::SnapAreaData"* %87, %"struct.cc::SnapAreaData"* %88, %"struct.cc::SnapAreaData"* %89)
  br label %158

91:                                               ; preds = %2
  %92 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %0, i64 2
  %93 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %0, i64 1
  %94 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink22BuildSnapContainerInfoEPNS1_4NodeEE3$_0PN2cc12SnapAreaDataEEEjT0_S9_S9_T_"(%"struct.cc::SnapAreaData"* %0, %"struct.cc::SnapAreaData"* %93, %"struct.cc::SnapAreaData"* %92)
  %95 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %0, i64 3
  %96 = icmp eq %"struct.cc::SnapAreaData"* %95, %1
  br i1 %96, label %158, label %97

97:                                               ; preds = %91
  %98 = getelementptr inbounds [24 x i8], [24 x i8]* %7, i64 0, i64 0
  br label %99

99:                                               ; preds = %97, %151
  %100 = phi %"struct.cc::SnapAreaData"* [ %95, %97 ], [ %153, %151 ]
  %101 = phi i32 [ 0, %97 ], [ %152, %151 ]
  %102 = phi %"struct.cc::SnapAreaData"* [ %92, %97 ], [ %100, %151 ]
  %103 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %100, i64 0, i32 1, i32 0, i32 1
  %104 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %100, i64 0, i32 1, i32 0, i32 0
  %105 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %102, i64 0, i32 1, i32 0, i32 1
  %106 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %102, i64 0, i32 1, i32 0, i32 0
  %107 = load float, float* %103, align 4
  %108 = load float, float* %105, align 4
  %109 = fcmp olt float %107, %108
  br i1 %109, label %116, label %110

110:                                              ; preds = %99
  %111 = fcmp olt float %108, %107
  br i1 %111, label %151, label %112

112:                                              ; preds = %110
  %113 = load float, float* %104, align 4
  %114 = load float, float* %106, align 4
  %115 = fcmp olt float %113, %114
  br i1 %115, label %116, label %151

116:                                              ; preds = %99, %112
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %98, i8* align 8 bitcast (%"class.gfx::SizeF"* getelementptr inbounds ({ %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, [7 x i8], %"struct.cc::ElementId" }, { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, [7 x i8], %"struct.cc::ElementId" }* @"__const._ZNSt3__127__insertion_sort_incompleteIRZN5blink22BuildSnapContainerInfoEPNS1_4NodeEE3$_0PN2cc12SnapAreaDataEEEbT0_S9_T_.__t", i64 0, i32 1, i32 1) to i8*), i64 24, i1 false)
  %117 = bitcast %"struct.cc::SnapAreaData"* %100 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = load float, float* %104, align 8
  %120 = load float, float* %103, align 4
  %121 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %100, i64 0, i32 1, i32 1
  %122 = bitcast %"class.gfx::SizeF"* %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %98, i8* align 8 %122, i64 24, i1 false)
  %123 = bitcast %"struct.cc::SnapAreaData"* %100 to i8*
  %124 = bitcast %"struct.cc::SnapAreaData"* %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %124, i64 40, i1 false)
  %125 = icmp eq %"struct.cc::SnapAreaData"* %102, %0
  br i1 %125, label %142, label %126

126:                                              ; preds = %116, %138
  %127 = phi %"struct.cc::SnapAreaData"* [ %128, %138 ], [ %102, %116 ]
  %128 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %127, i64 -1
  %129 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %127, i64 -1, i32 1, i32 0, i32 1
  %130 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %127, i64 -1, i32 1, i32 0, i32 0
  %131 = load float, float* %129, align 4
  %132 = fcmp olt float %120, %131
  br i1 %132, label %138, label %133

133:                                              ; preds = %126
  %134 = fcmp olt float %131, %120
  br i1 %134, label %142, label %135

135:                                              ; preds = %133
  %136 = load float, float* %130, align 4
  %137 = fcmp olt float %119, %136
  br i1 %137, label %138, label %142

138:                                              ; preds = %135, %126
  %139 = bitcast %"struct.cc::SnapAreaData"* %127 to i8*
  %140 = bitcast %"struct.cc::SnapAreaData"* %128 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 8 %140, i64 40, i1 false)
  %141 = icmp eq %"struct.cc::SnapAreaData"* %128, %0
  br i1 %141, label %142, label %126

142:                                              ; preds = %138, %135, %133, %116
  %143 = phi %"struct.cc::SnapAreaData"* [ %0, %116 ], [ %127, %133 ], [ %127, %135 ], [ %0, %138 ]
  %144 = bitcast %"struct.cc::SnapAreaData"* %143 to i64*
  store i64 %118, i64* %144, align 8
  %145 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %143, i64 0, i32 1, i32 0, i32 0
  store float %119, float* %145, align 8
  %146 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %143, i64 0, i32 1, i32 0, i32 1
  store float %120, float* %146, align 4
  %147 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %143, i64 0, i32 1, i32 1
  %148 = bitcast %"class.gfx::SizeF"* %147 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %148, i8* nonnull align 8 %98, i64 24, i1 false)
  %149 = add i32 %101, 1
  %150 = icmp eq i32 %149, 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98)
  br i1 %150, label %155, label %151

151:                                              ; preds = %142, %110, %112
  %152 = phi i32 [ %149, %142 ], [ %101, %112 ], [ %101, %110 ]
  %153 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %100, i64 1
  %154 = icmp eq %"struct.cc::SnapAreaData"* %153, %1
  br i1 %154, label %158, label %99

155:                                              ; preds = %142
  %156 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %100, i64 1
  %157 = icmp eq %"struct.cc::SnapAreaData"* %156, %1
  br label %158

158:                                              ; preds = %151, %155, %91, %21, %82, %78, %76, %64, %62, %49, %47, %23, %27, %2, %2, %85, %31
  %159 = phi i1 [ true, %85 ], [ true, %31 ], [ true, %2 ], [ true, %2 ], [ true, %27 ], [ true, %23 ], [ true, %47 ], [ true, %49 ], [ true, %62 ], [ true, %64 ], [ true, %76 ], [ true, %78 ], [ true, %82 ], [ true, %21 ], [ true, %91 ], [ %157, %155 ], [ true, %151 ]
  ret i1 %159
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind readnone }
attributes #18 = { builtin nounwind }
attributes #19 = { nounwind }
attributes #20 = { nounwind readonly }
attributes #21 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj: argument 0"}
!5 = distinct !{!5, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj"}
!6 = distinct !{!6, !7, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj: argument 0"}
!10 = distinct !{!10, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj"}
!11 = distinct !{!11, !12, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj: argument 0"}
!12 = distinct !{!12, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj"}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj: argument 0"}
!15 = distinct !{!15, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj"}
!16 = distinct !{!16, !17, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj: argument 0"}
!17 = distinct !{!17, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj"}
!18 = !{!19, !21}
!19 = distinct !{!19, !20, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj: argument 0"}
!20 = distinct !{!20, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj"}
!21 = distinct !{!21, !22, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj: argument 0"}
!22 = distinct !{!22, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN5blink12_GLOBAL__N_110QuadToPathERKNS_9FloatQuadE: argument 0"}
!25 = distinct !{!25, !"_ZN5blink12_GLOBAL__N_110QuadToPathERKNS_9FloatQuadE"}
!26 = !{i8 0, i8 2}
!27 = !{!"branch_weights", i32 2000, i32 1}
!28 = !{!"branch_weights", i32 1, i32 4001}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN5blink6Length4AutoEv: argument 0"}
!31 = distinct !{!31, !"_ZN5blink6Length4AutoEv"}
!32 = !{!33, !35}
!33 = distinct !{!33, !34, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj: argument 0"}
!34 = distinct !{!34, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj"}
!35 = distinct !{!35, !36, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj: argument 0"}
!36 = distinct !{!36, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj"}
!37 = !{!38, !40}
!38 = distinct !{!38, !39, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj: argument 0"}
!39 = distinct !{!39, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj"}
!40 = distinct !{!40, !41, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj: argument 0"}
!41 = distinct !{!41, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN5blink12_GLOBAL__N_110QuadToPathERKNS_9FloatQuadE: argument 0"}
!44 = distinct !{!44, !"_ZN5blink12_GLOBAL__N_110QuadToPathERKNS_9FloatQuadE"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN5blink12_GLOBAL__N_120GetFlexLinesAndItemsEPNS_9LayoutBoxEbb: argument 0"}
!47 = distinct !{!47, !"_ZN5blink12_GLOBAL__N_120GetFlexLinesAndItemsEPNS_9LayoutBoxEbb"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZNSt3__19make_pairIRN5blink12PhysicalRectERfEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS6_IT0_E4typeEEEOS7_OSA_: argument 0"}
!50 = distinct !{!50, !"_ZNSt3__19make_pairIRN5blink12PhysicalRectERfEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS6_IT0_E4typeEEEOS7_OSA_"}
!51 = !{!52, !54}
!52 = distinct !{!52, !53, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj: argument 0"}
!53 = distinct !{!53, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj"}
!54 = distinct !{!54, !55, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj: argument 0"}
!55 = distinct !{!55, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZN5blink12_GLOBAL__N_110QuadToPathERKNS_9FloatQuadE: argument 0"}
!58 = distinct !{!58, !"_ZN5blink12_GLOBAL__N_110QuadToPathERKNS_9FloatQuadE"}
!59 = !{!60, !62}
!60 = distinct !{!60, !61, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj: argument 0"}
!61 = distinct !{!61, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj"}
!62 = distinct !{!62, !63, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj: argument 0"}
!63 = distinct !{!63, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZN5blink12_GLOBAL__N_113RowQuadToPathERKNS_9FloatQuadEb: argument 0"}
!66 = distinct !{!66, !"_ZN5blink12_GLOBAL__N_113RowQuadToPathERKNS_9FloatQuadEb"}
!67 = !{!68, !70}
!68 = distinct !{!68, !69, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj: argument 0"}
!69 = distinct !{!69, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj"}
!70 = distinct !{!70, !71, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj: argument 0"}
!71 = distinct !{!71, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZN5blink12_GLOBAL__N_110QuadToPathERKNS_9FloatQuadE: argument 0"}
!74 = distinct !{!74, !"_ZN5blink12_GLOBAL__N_110QuadToPathERKNS_9FloatQuadE"}
!75 = !{!76, !78}
!76 = distinct !{!76, !77, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj: argument 0"}
!77 = distinct !{!77, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj"}
!78 = distinct !{!78, !79, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj: argument 0"}
!79 = distinct !{!79, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZN5blink12_GLOBAL__N_116ColumnQuadToPathERKNS_9FloatQuadEb: argument 0"}
!82 = distinct !{!82, !"_ZN5blink12_GLOBAL__N_116ColumnQuadToPathERKNS_9FloatQuadEb"}
!83 = !{!84, !86}
!84 = distinct !{!84, !85, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj: argument 0"}
!85 = distinct !{!85, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj"}
!86 = distinct !{!86, !87, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj: argument 0"}
!87 = distinct !{!87, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj"}
!88 = !{!89}
!89 = distinct !{!89, !90, !"_ZN5blink12_GLOBAL__N_110QuadToPathERKNS_9FloatQuadE: argument 0"}
!90 = distinct !{!90, !"_ZN5blink12_GLOBAL__N_110QuadToPathERKNS_9FloatQuadE"}
!91 = !{!92, !94}
!92 = distinct !{!92, !93, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj: argument 0"}
!93 = distinct !{!93, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj"}
!94 = distinct !{!94, !95, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj: argument 0"}
!95 = distinct !{!95, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj"}
!96 = !{!97}
!97 = distinct !{!97, !98, !"_ZN5blink12_GLOBAL__N_110QuadToPathERKNS_9FloatQuadE: argument 0"}
!98 = distinct !{!98, !"_ZN5blink12_GLOBAL__N_110QuadToPathERKNS_9FloatQuadE"}
!99 = !{!100, !102}
!100 = distinct !{!100, !101, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj: argument 0"}
!101 = distinct !{!101, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj"}
!102 = distinct !{!102, !103, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj: argument 0"}
!103 = distinct !{!103, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj"}
!104 = !{!105}
!105 = distinct !{!105, !106, !"_ZN5blink12_GLOBAL__N_110QuadToPathERKNS_9FloatQuadE: argument 0"}
!106 = distinct !{!106, !"_ZN5blink12_GLOBAL__N_110QuadToPathERKNS_9FloatQuadE"}
!107 = !{!108}
!108 = distinct !{!108, !109, !"_ZN5blink12_GLOBAL__N_111ToFloatQuadERKN3gfx5RectFE: argument 0"}
!109 = distinct !{!109, !"_ZN5blink12_GLOBAL__N_111ToFloatQuadERKN3gfx5RectFE"}
!110 = !{!111, !113}
!111 = distinct !{!111, !112, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj: argument 0"}
!112 = distinct !{!112, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj"}
!113 = distinct !{!113, !114, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj: argument 0"}
!114 = distinct !{!114, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj"}
!115 = !{!116}
!116 = distinct !{!116, !117, !"_ZN5blink12_GLOBAL__N_111ToFloatQuadERKN3gfx5RectFE: argument 0"}
!117 = distinct !{!117, !"_ZN5blink12_GLOBAL__N_111ToFloatQuadERKN3gfx5RectFE"}
!118 = !{!119, !121}
!119 = distinct !{!119, !120, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj: argument 0"}
!120 = distinct !{!120, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj"}
!121 = distinct !{!121, !122, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj: argument 0"}
!122 = distinct !{!122, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj"}
!123 = !{!124}
!124 = distinct !{!124, !125, !"_ZN5blink12_GLOBAL__N_110QuadToPathERKNS_9FloatQuadE: argument 0"}
!125 = distinct !{!125, !"_ZN5blink12_GLOBAL__N_110QuadToPathERKNS_9FloatQuadE"}
!126 = !{!127}
!127 = distinct !{!127, !128, !"_ZN5blink18InspectorHighlight21DefaultFlexItemConfigEv: argument 0"}
!128 = distinct !{!128, !"_ZN5blink18InspectorHighlight21DefaultFlexItemConfigEv"}
!129 = distinct !{!129, !130}
!130 = !{!"llvm.loop.unroll.disable"}
!131 = distinct !{!131, !130}
!132 = distinct !{!132, !130}
