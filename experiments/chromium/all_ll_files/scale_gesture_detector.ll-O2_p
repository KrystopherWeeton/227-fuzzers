; ModuleID = '../../ui/events/gesture_detection/scale_gesture_detector.cc'
source_filename = "../../ui/events/gesture_detection/scale_gesture_detector.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.ui::ScaleGestureDetector::Config" = type <{ float, float, float, i8, [3 x i8] }>
%"class.ui::ScaleGestureDetector" = type <{ i32 (...)**, %"class.ui::ScaleGestureListener"*, i8, [3 x i8], float, float, float, float, float, float, float, float, float, %"class.base::TimeTicks", %"class.base::TimeTicks", i8, [3 x i8], float, float, float, float, i32, i8, [7 x i8] }>
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::ScaleGestureListener" = type { i32 (...)** }
%"class.ui::MotionEvent" = type { i32 (...)** }

@_ZTVN2ui20ScaleGestureDetectorE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::ScaleGestureDetector"*)* @_ZN2ui20ScaleGestureDetectorD2Ev to i8*), i8* bitcast (void (%"class.ui::ScaleGestureDetector"*)* @_ZN2ui20ScaleGestureDetectorD0Ev to i8*)] }, align 8

@_ZN2ui20ScaleGestureDetector6ConfigC1Ev = hidden unnamed_addr alias void (%"struct.ui::ScaleGestureDetector::Config"*), void (%"struct.ui::ScaleGestureDetector::Config"*)* @_ZN2ui20ScaleGestureDetector6ConfigC2Ev
@_ZN2ui20ScaleGestureDetector6ConfigD1Ev = hidden unnamed_addr alias void (%"struct.ui::ScaleGestureDetector::Config"*), void (%"struct.ui::ScaleGestureDetector::Config"*)* @_ZN2ui20ScaleGestureDetector6ConfigD2Ev
@_ZN2ui20ScaleGestureDetectorC1ERKNS0_6ConfigEPNS_20ScaleGestureListenerE = hidden unnamed_addr alias void (%"class.ui::ScaleGestureDetector"*, %"struct.ui::ScaleGestureDetector::Config"*, %"class.ui::ScaleGestureListener"*), void (%"class.ui::ScaleGestureDetector"*, %"struct.ui::ScaleGestureDetector::Config"*, %"class.ui::ScaleGestureListener"*)* @_ZN2ui20ScaleGestureDetectorC2ERKNS0_6ConfigEPNS_20ScaleGestureListenerE
@_ZN2ui20ScaleGestureDetectorD1Ev = hidden unnamed_addr alias void (%"class.ui::ScaleGestureDetector"*), void (%"class.ui::ScaleGestureDetector"*)* @_ZN2ui20ScaleGestureDetectorD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui20ScaleGestureDetector6ConfigC2Ev(%"struct.ui::ScaleGestureDetector::Config"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.ui::ScaleGestureDetector::Config", %"struct.ui::ScaleGestureDetector::Config"* %0, i64 0, i32 0
  store float 1.600000e+01, float* %2, align 4
  %3 = getelementptr inbounds %"struct.ui::ScaleGestureDetector::Config", %"struct.ui::ScaleGestureDetector::Config"* %0, i64 0, i32 1
  store float 2.000000e+02, float* %3, align 4
  %4 = getelementptr inbounds %"struct.ui::ScaleGestureDetector::Config", %"struct.ui::ScaleGestureDetector::Config"* %0, i64 0, i32 2
  store float 0.000000e+00, float* %4, align 4
  %5 = getelementptr inbounds %"struct.ui::ScaleGestureDetector::Config", %"struct.ui::ScaleGestureDetector::Config"* %0, i64 0, i32 3
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui20ScaleGestureDetector6ConfigD2Ev(%"struct.ui::ScaleGestureDetector::Config"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2ui20ScaleGestureDetectorC2ERKNS0_6ConfigEPNS_20ScaleGestureListenerE(%"class.ui::ScaleGestureDetector"*, %"struct.ui::ScaleGestureDetector::Config"* nocapture readonly dereferenceable(16), %"class.ui::ScaleGestureListener"*) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2ui20ScaleGestureDetectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 1
  store %"class.ui::ScaleGestureListener"* %2, %"class.ui::ScaleGestureListener"** %5, align 8
  %6 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.ui::ScaleGestureDetector::Config", %"struct.ui::ScaleGestureDetector::Config"* %1, i64 0, i32 3
  %8 = load i8, i8* %7, align 4, !range !2
  store i8 %8, i8* %6, align 8
  %9 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 4
  %10 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 17
  %11 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 18
  %12 = bitcast %"struct.ui::ScaleGestureDetector::Config"* %1 to i32*
  %13 = bitcast float* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 53, i1 false)
  %14 = bitcast float* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 21, i1 false)
  %15 = load i32, i32* %12, align 4
  %16 = bitcast float* %10 to i32*
  store i32 %15, i32* %16, align 4
  %17 = getelementptr inbounds %"struct.ui::ScaleGestureDetector::Config", %"struct.ui::ScaleGestureDetector::Config"* %1, i64 0, i32 1
  %18 = bitcast float* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = bitcast float* %11 to i32*
  store i32 %19, i32* %20, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui20ScaleGestureDetectorD2Ev(%"class.ui::ScaleGestureDetector"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui20ScaleGestureDetectorD0Ev(%"class.ui::ScaleGestureDetector"*) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.ui::ScaleGestureDetector"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui20ScaleGestureDetector12OnTouchEventERKNS_11MotionEventE(%"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"* dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = alloca float, align 4
  %4 = alloca float, align 4
  %5 = bitcast %"class.ui::MotionEvent"* %1 to i64 (%"class.ui::MotionEvent"*)***
  %6 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %6, i64 22
  %8 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %7, align 8
  %9 = tail call i64 %8(%"class.ui::MotionEvent"* %1) #11
  %10 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 13, i32 0, i32 0
  store i64 %9, i64* %10, align 8
  %11 = bitcast %"class.ui::MotionEvent"* %1 to i32 (%"class.ui::MotionEvent"*)***
  %12 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %11, align 8
  %13 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %12, i64 3
  %14 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %13, align 8
  %15 = tail call i32 %14(%"class.ui::MotionEvent"* %1) #11
  %16 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %5, align 8
  %17 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %16, i64 5
  %18 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %17, align 8
  %19 = tail call i64 %18(%"class.ui::MotionEvent"* %1) #11
  %20 = trunc i64 %19 to i32
  %21 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %11, align 8
  %22 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %21, i64 20
  %23 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %22, align 8
  %24 = tail call i32 %23(%"class.ui::MotionEvent"* %1) #11
  %25 = and i32 %24, 32
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 21
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 2
  %30 = and i1 %29, %26
  br i1 %30, label %38, label %31

31:                                               ; preds = %2
  switch i32 %15, label %34 [
    i32 4, label %38
    i32 2, label %38
    i32 5, label %32
  ]

32:                                               ; preds = %31
  %33 = icmp ne i32 %28, 0
  br label %34

34:                                               ; preds = %31, %32
  %35 = phi i1 [ %33, %32 ], [ false, %31 ]
  %36 = icmp eq i32 %15, 1
  %37 = or i1 %36, %35
  br i1 %37, label %38, label %60

38:                                               ; preds = %2, %31, %31, %34
  %39 = phi i1 [ %35, %34 ], [ true, %31 ], [ true, %31 ], [ true, %2 ]
  %40 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 15
  %41 = load i8, i8* %40, align 8, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %50, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 1
  %45 = load %"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureListener"** %44, align 8
  %46 = bitcast %"class.ui::ScaleGestureListener"* %45 to void (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)***
  %47 = load void (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)**, void (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)*, void (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)** %47, i64 4
  %49 = load void (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)*, void (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)** %48, align 8
  tail call void %49(%"class.ui::ScaleGestureListener"* %45, %"class.ui::ScaleGestureDetector"* dereferenceable(104) %0, %"class.ui::MotionEvent"* dereferenceable(8) %1) #11
  br label %54

50:                                               ; preds = %38
  %51 = icmp eq i32 %28, 0
  %52 = xor i1 %39, true
  %53 = or i1 %51, %52
  br i1 %53, label %56, label %54

54:                                               ; preds = %50, %43
  store i8 0, i8* %40, align 8
  %55 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 8
  store float 0.000000e+00, float* %55, align 4
  store i32 0, i32* %27, align 4
  br label %56

56:                                               ; preds = %54, %50
  %57 = phi i32 [ %28, %50 ], [ 0, %54 ]
  br i1 %39, label %344, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 15
  br label %65

60:                                               ; preds = %34
  %61 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 15
  %62 = load i8, i8* %61, align 8, !range !2
  %63 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 15
  %64 = icmp eq i8 %62, 0
  br i1 %64, label %65, label %87

65:                                               ; preds = %58, %60
  %66 = phi i8* [ %59, %58 ], [ %63, %60 ]
  %67 = phi i32 [ %57, %58 ], [ %28, %60 ]
  %68 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 2
  %69 = load i8, i8* %68, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  %71 = icmp ne i32 %67, 0
  %72 = or i1 %26, %71
  %73 = or i1 %70, %72
  br i1 %73, label %87, label %74

74:                                               ; preds = %65
  %75 = bitcast %"class.ui::MotionEvent"* %1 to float (%"class.ui::MotionEvent"*, i64)***
  %76 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %75, align 8
  %77 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %76, i64 7
  %78 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %77, align 8
  %79 = tail call float %78(%"class.ui::MotionEvent"* %1, i64 0) #11
  %80 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 19
  store float %79, float* %80, align 4
  %81 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %75, align 8
  %82 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %81, i64 8
  %83 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %82, align 8
  %84 = tail call float %83(%"class.ui::MotionEvent"* %1, i64 0) #11
  %85 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 20
  store float %84, float* %85, align 8
  store i32 2, i32* %27, align 4
  %86 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 8
  store float 0.000000e+00, float* %86, align 4
  br label %87

87:                                               ; preds = %65, %60, %74
  %88 = phi i8* [ %66, %65 ], [ %63, %60 ], [ %66, %74 ]
  %89 = phi i32 [ %67, %65 ], [ %28, %60 ], [ 2, %74 ]
  %90 = icmp eq i32 %15, 6
  switch i32 %15, label %91 [
    i32 6, label %92
    i32 5, label %92
    i32 1, label %92
  ]

91:                                               ; preds = %87
  br label %92

92:                                               ; preds = %87, %87, %87, %91
  %93 = phi i1 [ true, %87 ], [ %30, %91 ], [ true, %87 ], [ true, %87 ]
  br i1 %90, label %94, label %101

94:                                               ; preds = %92
  %95 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %11, align 8
  %96 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %95, i64 4
  %97 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %96, align 8
  %98 = tail call i32 %97(%"class.ui::MotionEvent"* %1) #11
  %99 = load i32, i32* %27, align 4
  %100 = zext i32 %98 to i64
  br label %101

101:                                              ; preds = %92, %94
  %102 = phi i32 [ %99, %94 ], [ %89, %92 ]
  %103 = phi i64 [ %100, %94 ], [ 4294967295, %92 ]
  %104 = zext i1 %90 to i32
  %105 = sub i32 %20, %104
  %106 = sitofp i32 %105 to float
  %107 = fdiv float 1.000000e+00, %106
  %108 = icmp eq i32 %102, 0
  br i1 %108, label %109, label %114

109:                                              ; preds = %101
  %110 = icmp sgt i32 %20, 0
  br i1 %110, label %111, label %128

111:                                              ; preds = %109
  %112 = bitcast %"class.ui::MotionEvent"* %1 to float (%"class.ui::MotionEvent"*, i64)***
  %113 = and i64 %19, 4294967295
  br label %133

114:                                              ; preds = %101
  %115 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 19
  %116 = bitcast float* %115 to <2 x float>*
  %117 = load <2 x float>, <2 x float>* %116, align 4
  %118 = bitcast %"class.ui::MotionEvent"* %1 to float (%"class.ui::MotionEvent"*, i64)***
  %119 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %118, align 8
  %120 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %119, i64 8
  %121 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %120, align 8
  %122 = tail call float %121(%"class.ui::MotionEvent"* %1, i64 0) #11
  %123 = extractelement <2 x float> %117, i32 1
  %124 = fcmp olt float %122, %123
  %125 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 22
  br i1 %124, label %126, label %127

126:                                              ; preds = %114
  store i8 1, i8* %125, align 8
  br label %153

127:                                              ; preds = %114
  store i8 0, i8* %125, align 8
  br label %153

128:                                              ; preds = %149, %109
  %129 = phi <2 x float> [ zeroinitializer, %109 ], [ %150, %149 ]
  %130 = insertelement <2 x float> undef, float %107, i32 0
  %131 = shufflevector <2 x float> %130, <2 x float> undef, <2 x i32> zeroinitializer
  %132 = fmul <2 x float> %131, %129
  br label %153

133:                                              ; preds = %149, %111
  %134 = phi i64 [ 0, %111 ], [ %151, %149 ]
  %135 = phi <2 x float> [ zeroinitializer, %111 ], [ %150, %149 ]
  %136 = icmp eq i64 %103, %134
  br i1 %136, label %149, label %137

137:                                              ; preds = %133
  %138 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %112, align 8
  %139 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %138, i64 7
  %140 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %139, align 8
  %141 = tail call float %140(%"class.ui::MotionEvent"* %1, i64 %134) #11
  %142 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %112, align 8
  %143 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %142, i64 8
  %144 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %143, align 8
  %145 = tail call float %144(%"class.ui::MotionEvent"* %1, i64 %134) #11
  %146 = insertelement <2 x float> undef, float %141, i32 0
  %147 = insertelement <2 x float> %146, float %145, i32 1
  %148 = fadd <2 x float> %135, %147
  br label %149

149:                                              ; preds = %133, %137
  %150 = phi <2 x float> [ %135, %133 ], [ %148, %137 ]
  %151 = add nuw nsw i64 %134, 1
  %152 = icmp eq i64 %151, %113
  br i1 %152, label %128, label %133

153:                                              ; preds = %126, %127, %128
  %154 = phi <2 x float> [ %117, %126 ], [ %117, %127 ], [ %132, %128 ]
  %155 = icmp sgt i32 %20, 0
  br i1 %155, label %156, label %159

156:                                              ; preds = %153
  %157 = bitcast %"class.ui::MotionEvent"* %1 to float (%"class.ui::MotionEvent"*, i64)***
  %158 = and i64 %19, 4294967295
  br label %169

159:                                              ; preds = %187, %153
  %160 = phi <2 x float> [ zeroinitializer, %153 ], [ %188, %187 ]
  %161 = insertelement <2 x float> undef, float %107, i32 0
  %162 = shufflevector <2 x float> %161, <2 x float> undef, <2 x i32> zeroinitializer
  %163 = fmul <2 x float> %162, %160
  %164 = fmul <2 x float> %163, <float 2.000000e+00, float 2.000000e+00>
  %165 = shufflevector <2 x float> %164, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %166 = load i32, i32* %27, align 4
  %167 = icmp eq i32 %166, 0
  %168 = extractelement <2 x float> %164, i32 1
  br i1 %167, label %191, label %198

169:                                              ; preds = %187, %156
  %170 = phi i64 [ 0, %156 ], [ %189, %187 ]
  %171 = phi <2 x float> [ zeroinitializer, %156 ], [ %188, %187 ]
  %172 = icmp eq i64 %103, %170
  br i1 %172, label %187, label %173

173:                                              ; preds = %169
  %174 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %157, align 8
  %175 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %174, i64 7
  %176 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %175, align 8
  %177 = tail call float %176(%"class.ui::MotionEvent"* %1, i64 %170) #11
  %178 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %157, align 8
  %179 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %178, i64 8
  %180 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %179, align 8
  %181 = tail call float %180(%"class.ui::MotionEvent"* %1, i64 %170) #11
  %182 = insertelement <2 x float> undef, float %177, i32 0
  %183 = insertelement <2 x float> %182, float %181, i32 1
  %184 = fsub <2 x float> %183, %154
  %185 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %184)
  %186 = fadd <2 x float> %171, %185
  br label %187

187:                                              ; preds = %169, %173
  %188 = phi <2 x float> [ %171, %169 ], [ %186, %173 ]
  %189 = add nuw nsw i64 %170, 1
  %190 = icmp eq i64 %189, %158
  br i1 %190, label %159, label %169

191:                                              ; preds = %159
  %192 = extractelement <2 x float> %164, i32 0
  %193 = fmul float %192, %192
  %194 = fmul float %168, %168
  %195 = fadd float %193, %194
  %196 = tail call float @sqrtf(float %195) #11
  %197 = load i32, i32* %27, align 4
  br label %198

198:                                              ; preds = %159, %191
  %199 = phi i32 [ %197, %191 ], [ %166, %159 ]
  %200 = phi float [ %196, %191 ], [ %168, %159 ]
  %201 = load i8, i8* %88, align 8, !range !2
  %202 = icmp eq i8 %201, 0
  %203 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 4
  %204 = extractelement <2 x float> %154, i32 0
  store float %204, float* %203, align 4
  %205 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 5
  %206 = extractelement <2 x float> %154, i32 1
  store float %206, float* %205, align 8
  %207 = icmp ne i32 %199, 0
  %208 = xor i1 %93, true
  %209 = or i1 %202, %208
  %210 = or i1 %209, %207
  br i1 %210, label %219, label %211

211:                                              ; preds = %198
  %212 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 1
  %213 = load %"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureListener"** %212, align 8
  %214 = bitcast %"class.ui::ScaleGestureListener"* %213 to void (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)***
  %215 = load void (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)**, void (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)*** %214, align 8
  %216 = getelementptr inbounds void (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)*, void (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)** %215, i64 4
  %217 = load void (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)*, void (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)** %216, align 8
  tail call void %217(%"class.ui::ScaleGestureListener"* %213, %"class.ui::ScaleGestureDetector"* dereferenceable(104) %0, %"class.ui::MotionEvent"* dereferenceable(8) %1) #11
  store i8 0, i8* %88, align 8
  %218 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 8
  store float %200, float* %218, align 4
  store i32 0, i32* %27, align 4
  br label %219

219:                                              ; preds = %211, %198
  %220 = phi i8 [ 0, %211 ], [ %201, %198 ]
  br i1 %93, label %221, label %230

221:                                              ; preds = %219
  %222 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 9
  %223 = extractelement <2 x float> %164, i32 0
  store float %223, float* %222, align 8
  %224 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 11
  store float %223, float* %224, align 8
  %225 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 10
  store float %168, float* %225, align 4
  %226 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 12
  store float %168, float* %226, align 4
  %227 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 6
  store float %200, float* %227, align 4
  %228 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 7
  store float %200, float* %228, align 8
  %229 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 8
  store float %200, float* %229, align 4
  br label %230

230:                                              ; preds = %221, %219
  %231 = bitcast float* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %231)
  %232 = icmp eq i32 %199, 0
  %233 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 17
  %234 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 18
  %235 = select i1 %232, float* %234, float* %233
  %236 = load float, float* %235, align 4
  store float %236, float* %3, align 4
  %237 = fadd float %236, 0x3FA99999A0000000
  %238 = fcmp ult float %200, %237
  br i1 %238, label %239, label %243

239:                                              ; preds = %230
  %240 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 8
  %241 = load float, float* %240, align 4
  %242 = fcmp ult float %241, %237
  br label %243

243:                                              ; preds = %230, %239
  %244 = phi i1 [ false, %230 ], [ %242, %239 ]
  %245 = icmp ne i8 %220, 0
  %246 = or i1 %244, %245
  br i1 %246, label %284, label %247

247:                                              ; preds = %243
  %248 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 8
  %249 = load float, float* %248, align 4
  br i1 %202, label %252, label %250

250:                                              ; preds = %247
  %251 = load float, float* %233, align 4
  br label %258

252:                                              ; preds = %247
  %253 = fsub float %200, %249
  %254 = tail call float @llvm.fabs.f32(float %253) #11
  %255 = load float, float* %233, align 4
  %256 = fadd float %255, 0x3FA99999A0000000
  %257 = fcmp ogt float %254, %256
  br i1 %257, label %258, label %284

258:                                              ; preds = %250, %252
  %259 = phi float [ %251, %250 ], [ %255, %252 ]
  %260 = fcmp ogt float %200, %249
  %261 = select i1 %260, float 1.000000e+00, float -1.000000e+00
  %262 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 9
  %263 = bitcast float* %262 to <4 x float>*
  store <4 x float> %165, <4 x float>* %263, align 8
  %264 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 6
  store float %200, float* %264, align 4
  %265 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %265)
  %266 = fmul float %261, %259
  %267 = fadd float %249, %266
  store float %267, float* %4, align 4
  %268 = fcmp olt float %267, %236
  %269 = select i1 %268, float* %3, float* %4
  %270 = bitcast float* %269 to i32*
  %271 = load i32, i32* %270, align 4
  %272 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 7
  %273 = bitcast float* %272 to i32*
  store i32 %271, i32* %273, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %265)
  %274 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 14, i32 0, i32 0
  %275 = load i64, i64* %10, align 8
  store i64 %275, i64* %274, align 8
  %276 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 1
  %277 = load %"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureListener"** %276, align 8
  %278 = bitcast %"class.ui::ScaleGestureListener"* %277 to i1 (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)***
  %279 = load i1 (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)**, i1 (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)*** %278, align 8
  %280 = getelementptr inbounds i1 (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)*, i1 (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)** %279, i64 3
  %281 = load i1 (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)*, i1 (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)** %280, align 8
  %282 = tail call zeroext i1 %281(%"class.ui::ScaleGestureListener"* %277, %"class.ui::ScaleGestureDetector"* dereferenceable(104) %0, %"class.ui::MotionEvent"* dereferenceable(8) %1) #11
  %283 = zext i1 %282 to i8
  store i8 %283, i8* %88, align 8
  br label %284

284:                                              ; preds = %243, %258, %252
  %285 = phi i8 [ %220, %243 ], [ %283, %258 ], [ 0, %252 ]
  %286 = icmp eq i32 %15, 3
  br i1 %286, label %287, label %325

287:                                              ; preds = %284
  %288 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 9
  %289 = extractelement <2 x float> %164, i32 0
  store float %289, float* %288, align 8
  %290 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 10
  store float %168, float* %290, align 4
  %291 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 6
  store float %200, float* %291, align 4
  %292 = icmp eq i8 %285, 0
  br i1 %292, label %293, label %298

293:                                              ; preds = %287
  %294 = bitcast float %200 to i32
  %295 = bitcast float %168 to i32
  %296 = bitcast <2 x float> %164 to <2 x i32>
  %297 = extractelement <2 x i32> %296, i32 0
  br label %313

298:                                              ; preds = %287
  %299 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 1
  %300 = load %"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureListener"** %299, align 8
  %301 = bitcast %"class.ui::ScaleGestureListener"* %300 to i1 (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)***
  %302 = load i1 (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)**, i1 (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)*** %301, align 8
  %303 = getelementptr inbounds i1 (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)*, i1 (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)** %302, i64 2
  %304 = load i1 (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)*, i1 (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)** %303, align 8
  %305 = tail call zeroext i1 %304(%"class.ui::ScaleGestureListener"* %300, %"class.ui::ScaleGestureDetector"* dereferenceable(104) %0, %"class.ui::MotionEvent"* dereferenceable(8) %1) #11
  br i1 %305, label %306, label %325

306:                                              ; preds = %298
  %307 = bitcast float* %288 to i32*
  %308 = load i32, i32* %307, align 8
  %309 = bitcast float* %290 to i32*
  %310 = load i32, i32* %309, align 4
  %311 = bitcast float* %291 to i32*
  %312 = load i32, i32* %311, align 4
  br label %313

313:                                              ; preds = %293, %306
  %314 = phi i32 [ %312, %306 ], [ %294, %293 ]
  %315 = phi i32 [ %310, %306 ], [ %295, %293 ]
  %316 = phi i32 [ %308, %306 ], [ %297, %293 ]
  %317 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 11
  %318 = bitcast float* %317 to i32*
  store i32 %316, i32* %318, align 8
  %319 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 12
  %320 = bitcast float* %319 to i32*
  store i32 %315, i32* %320, align 4
  %321 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 7
  %322 = bitcast float* %321 to i32*
  store i32 %314, i32* %322, align 8
  %323 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 14, i32 0, i32 0
  %324 = load i64, i64* %10, align 8
  store i64 %324, i64* %323, align 8
  br label %325

325:                                              ; preds = %298, %313, %284
  %326 = load i32, i32* %27, align 4
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %328, label %343

328:                                              ; preds = %325
  %329 = load i8, i8* %88, align 8, !range !2
  %330 = icmp eq i8 %329, 0
  br i1 %330, label %343, label %331

331:                                              ; preds = %328
  %332 = load float, float* %234, align 8
  %333 = fadd float %332, 0x3FA99999A0000000
  %334 = fcmp olt float %200, %333
  br i1 %334, label %335, label %343

335:                                              ; preds = %331
  %336 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 1
  %337 = load %"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureListener"** %336, align 8
  %338 = bitcast %"class.ui::ScaleGestureListener"* %337 to void (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)***
  %339 = load void (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)**, void (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)*** %338, align 8
  %340 = getelementptr inbounds void (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)*, void (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)** %339, i64 4
  %341 = load void (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)*, void (%"class.ui::ScaleGestureListener"*, %"class.ui::ScaleGestureDetector"*, %"class.ui::MotionEvent"*)** %340, align 8
  tail call void %341(%"class.ui::ScaleGestureListener"* %337, %"class.ui::ScaleGestureDetector"* dereferenceable(104) %0, %"class.ui::MotionEvent"* dereferenceable(8) %1) #11
  store i8 0, i8* %88, align 8
  %342 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 8
  store float %200, float* %342, align 4
  store i32 0, i32* %27, align 4
  br label %343

343:                                              ; preds = %325, %328, %335, %331
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %231)
  br label %344

344:                                              ; preds = %56, %343
  ret i1 true
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui20ScaleGestureDetector19InAnchoredScaleModeEv(%"class.ui::ScaleGestureDetector"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 21
  %3 = load i32, i32* %2, align 4
  %4 = icmp ne i32 %3, 0
  ret i1 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui20ScaleGestureDetector18ResetScaleWithSpanEf(%"class.ui::ScaleGestureDetector"* nocapture, float) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 15
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 8
  store float %1, float* %4, align 4
  %5 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 21
  store i32 0, i32* %5, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui20ScaleGestureDetector12IsInProgressEv(%"class.ui::ScaleGestureDetector"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 15
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK2ui20ScaleGestureDetector9GetFocusXEv(%"class.ui::ScaleGestureDetector"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 4
  %3 = load float, float* %2, align 4
  ret float %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK2ui20ScaleGestureDetector9GetFocusYEv(%"class.ui::ScaleGestureDetector"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 5
  %3 = load float, float* %2, align 8
  ret float %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK2ui20ScaleGestureDetector14GetCurrentSpanEv(%"class.ui::ScaleGestureDetector"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 6
  %3 = load float, float* %2, align 4
  ret float %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK2ui20ScaleGestureDetector15GetCurrentSpanXEv(%"class.ui::ScaleGestureDetector"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 9
  %3 = load float, float* %2, align 8
  ret float %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK2ui20ScaleGestureDetector15GetCurrentSpanYEv(%"class.ui::ScaleGestureDetector"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 10
  %3 = load float, float* %2, align 4
  ret float %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK2ui20ScaleGestureDetector15GetPreviousSpanEv(%"class.ui::ScaleGestureDetector"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 7
  %3 = load float, float* %2, align 8
  ret float %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK2ui20ScaleGestureDetector16GetPreviousSpanXEv(%"class.ui::ScaleGestureDetector"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 11
  %3 = load float, float* %2, align 8
  ret float %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK2ui20ScaleGestureDetector16GetPreviousSpanYEv(%"class.ui::ScaleGestureDetector"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 12
  %3 = load float, float* %2, align 4
  ret float %3
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden float @_ZNK2ui20ScaleGestureDetector14GetScaleFactorEv(%"class.ui::ScaleGestureDetector"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 6
  %3 = load float, float* %2, align 4
  %4 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 21
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %29, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 22
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 7
  %12 = load float, float* %11, align 8
  br i1 %10, label %16, label %13

13:                                               ; preds = %7
  %14 = fcmp olt float %3, %12
  br i1 %14, label %18, label %15

15:                                               ; preds = %13
  br label %18

16:                                               ; preds = %7
  %17 = fcmp ogt float %3, %12
  br label %18

18:                                               ; preds = %15, %16, %13
  %19 = phi i1 [ true, %13 ], [ false, %15 ], [ %17, %16 ]
  %20 = fdiv float %3, %12
  %21 = fsub float 1.000000e+00, %20
  %22 = tail call float @llvm.fabs.f32(float %21) #11
  %23 = fmul float %22, 5.000000e-01
  %24 = fcmp ugt float %12, 0.000000e+00
  br i1 %24, label %25, label %40

25:                                               ; preds = %18
  %26 = fsub float -0.000000e+00, %23
  %27 = select i1 %19, float %23, float %26
  %28 = fadd float %27, 1.000000e+00
  br label %40

29:                                               ; preds = %1
  %30 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 18
  %31 = load float, float* %30, align 8
  %32 = fadd float %31, 0x3FA99999A0000000
  %33 = fcmp olt float %3, %32
  %34 = select i1 %33, float %31, float %3
  %35 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 7
  %36 = load float, float* %35, align 8
  %37 = fcmp ogt float %36, 0.000000e+00
  %38 = fdiv float %34, %36
  %39 = select i1 %37, float %38, float 1.000000e+00
  br label %40

40:                                               ; preds = %29, %25, %18
  %41 = phi float [ 1.000000e+00, %18 ], [ %28, %25 ], [ %39, %29 ]
  ret float %41
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2ui20ScaleGestureDetector12GetTimeDeltaEv(%"class.ui::ScaleGestureDetector"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = sub nsw i64 %5, %3
  ret i64 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2ui20ScaleGestureDetector12GetEventTimeEv(%"class.ui::ScaleGestureDetector"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 13, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui20ScaleGestureDetector11OnDoubleTapERKNS_11MotionEventE(%"class.ui::ScaleGestureDetector"* nocapture, %"class.ui::MotionEvent"* dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = bitcast %"class.ui::MotionEvent"* %1 to float (%"class.ui::MotionEvent"*, i64)***
  %4 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %3, align 8
  %5 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %4, i64 7
  %6 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %5, align 8
  %7 = tail call float %6(%"class.ui::MotionEvent"* %1, i64 0) #11
  %8 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 19
  store float %7, float* %8, align 4
  %9 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %3, align 8
  %10 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %9, i64 8
  %11 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %10, align 8
  %12 = tail call float %11(%"class.ui::MotionEvent"* %1, i64 0) #11
  %13 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 20
  store float %12, float* %13, align 8
  %14 = getelementptr inbounds %"class.ui::ScaleGestureDetector", %"class.ui::ScaleGestureDetector"* %0, i64 0, i32 21
  store i32 1, i32* %14, align 4
  ret i1 true
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #8

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind readnone speculatable
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #8

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
