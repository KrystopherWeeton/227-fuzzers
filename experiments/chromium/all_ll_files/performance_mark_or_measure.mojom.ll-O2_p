; ModuleID = 'gen/third_party/blink/public/mojom/timing/performance_mark_or_measure.mojom.cc'
source_filename = "gen/third_party/blink/public/mojom/timing/performance_mark_or_measure.mojom.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::PerformanceMarkOrMeasure" = type { %"class.std::__1::basic_string", i32, double, double, %"class.absl::optional" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.mojo_base::BigBuffer" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr", i64, %"class.absl::optional.5" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i8* }
%"class.absl::optional.5" = type { %"class.absl::optional_internal::optional_data.6" }
%"class.absl::optional_internal::optional_data.6" = type { %"class.absl::optional_internal::optional_data_base.7" }
%"class.absl::optional_internal::optional_data_base.7" = type { %"class.absl::optional_internal::optional_data_dtor_base.8" }
%"class.absl::optional_internal::optional_data_dtor_base.8" = type { i8, %union.anon.9 }
%union.anon.9 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase", %"class.std::__1::unique_ptr.10" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i8* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.14" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i64 }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.perfetto::TracedDictionary" = type <{ %"class.protozero::Message"*, i32, %"class.perfetto::internal::CheckedScope", [3 x i8] }>
%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase.19", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.26", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase.19" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.20"*, %"class.mojo::ScopedHandleBase.20"*, %"class.std::__1::__compressed_pair.21" }
%"class.mojo::ScopedHandleBase.20" = type { %"class.mojo::Handle" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.mojo::ScopedHandleBase.20"* }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.28" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.33 }
%class.scoped_refptr.33 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.37, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.39", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.35 }
%class.scoped_refptr.35 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.36", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.36" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.37 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.38" }>
%"class.base::RefCountedThreadSafe.38" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__cxx_atomic_impl.42" }
%"struct.std::__1::__cxx_atomic_impl.42" = type { %"struct.std::__1::__cxx_atomic_base_impl.43" }
%"struct.std::__1::__cxx_atomic_base_impl.43" = type { i32 }
%"class.blink::mojom::internal::PerformanceMarkOrMeasure_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer", i32, [4 x i8], double, double, %"class.mojo_base::mojom::internal::BigBuffer_Data" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"class.mojo_base::mojom::internal::BigBuffer_Data" = type { i32, i32, %"union.mojo_base::mojom::internal::BigBuffer_Data::Union_" }
%"union.mojo_base::mojom::internal::BigBuffer_Data::Union_" = type { %"struct.mojo::internal::Pointer.44" }
%"struct.mojo::internal::Pointer.44" = type { i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.46" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::mojom::PerformanceMarkOrMeasure"* }

@.str = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"<value>\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"entry_type\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"start_time\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"duration\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"detail\00", align 1

@_ZN5blink5mojom24PerformanceMarkOrMeasureC1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::PerformanceMarkOrMeasure"*), void (%"class.blink::mojom::PerformanceMarkOrMeasure"*)* @_ZN5blink5mojom24PerformanceMarkOrMeasureC2Ev
@_ZN5blink5mojom24PerformanceMarkOrMeasureC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS0_34PerformanceMarkOrMeasure_EntryTypeEddN4absl8optionalIN9mojo_base9BigBufferEEE = hidden unnamed_addr alias void (%"class.blink::mojom::PerformanceMarkOrMeasure"*, %"class.std::__1::basic_string"*, i32, double, double, %"class.absl::optional"*), void (%"class.blink::mojom::PerformanceMarkOrMeasure"*, %"class.std::__1::basic_string"*, i32, double, double, %"class.absl::optional"*)* @_ZN5blink5mojom24PerformanceMarkOrMeasureC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS0_34PerformanceMarkOrMeasure_EntryTypeEddN4absl8optionalIN9mojo_base9BigBufferEEE
@_ZN5blink5mojom24PerformanceMarkOrMeasureD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::PerformanceMarkOrMeasure"*), void (%"class.blink::mojom::PerformanceMarkOrMeasure"*)* @_ZN5blink5mojom24PerformanceMarkOrMeasureD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom24PerformanceMarkOrMeasureC2Ev(%"class.blink::mojom::PerformanceMarkOrMeasure"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::mojom::PerformanceMarkOrMeasure", %"class.blink::mojom::PerformanceMarkOrMeasure"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.blink::mojom::PerformanceMarkOrMeasure", %"class.blink::mojom::PerformanceMarkOrMeasure"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %4 = bitcast %union.anon.1* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 56, i1 false) #7
  %5 = bitcast %"class.blink::mojom::PerformanceMarkOrMeasure"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 28, i1 false)
  %6 = bitcast double* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 17, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom24PerformanceMarkOrMeasureC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS0_34PerformanceMarkOrMeasure_EntryTypeEddN4absl8optionalIN9mojo_base9BigBufferEEE(%"class.blink::mojom::PerformanceMarkOrMeasure"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i32, double, double, %"class.absl::optional"*) unnamed_addr #0 align 2 {
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::mojom::PerformanceMarkOrMeasure"* %0 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #7
  br label %20

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.blink::mojom::PerformanceMarkOrMeasure", %"class.blink::mojom::PerformanceMarkOrMeasure"* %0, i64 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %15, i8* %17, i64 %19) #7
  br label %20

20:                                               ; preds = %11, %14
  %21 = getelementptr inbounds %"class.blink::mojom::PerformanceMarkOrMeasure", %"class.blink::mojom::PerformanceMarkOrMeasure"* %0, i64 0, i32 1
  store i32 %2, i32* %21, align 8
  %22 = getelementptr inbounds %"class.blink::mojom::PerformanceMarkOrMeasure", %"class.blink::mojom::PerformanceMarkOrMeasure"* %0, i64 0, i32 2
  store double %3, double* %22, align 8
  %23 = getelementptr inbounds %"class.blink::mojom::PerformanceMarkOrMeasure", %"class.blink::mojom::PerformanceMarkOrMeasure"* %0, i64 0, i32 3
  store double %4, double* %23, align 8
  %24 = getelementptr inbounds %"class.blink::mojom::PerformanceMarkOrMeasure", %"class.blink::mojom::PerformanceMarkOrMeasure"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 64, i1 false) #7
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %30 = getelementptr inbounds %"class.blink::mojom::PerformanceMarkOrMeasure", %"class.blink::mojom::PerformanceMarkOrMeasure"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN9mojo_base9BigBufferC1EOS0_(%"class.mojo_base::BigBuffer"* %30, %"class.mojo_base::BigBuffer"* dereferenceable(56) %29) #7
  store i8 1, i8* %24, align 8
  br label %31

31:                                               ; preds = %20, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom24PerformanceMarkOrMeasureD2Ev(%"class.blink::mojom::PerformanceMarkOrMeasure"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::mojom::PerformanceMarkOrMeasure", %"class.blink::mojom::PerformanceMarkOrMeasure"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::mojom::PerformanceMarkOrMeasure", %"class.blink::mojom::PerformanceMarkOrMeasure"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* %6) #7
  store i8 0, i8* %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  %8 = bitcast %"class.blink::mojom::PerformanceMarkOrMeasure"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::mojom::PerformanceMarkOrMeasure", %"class.blink::mojom::PerformanceMarkOrMeasure"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  tail call void @_ZdlPv(i8* %14) #8
  br label %15

15:                                               ; preds = %7, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5mojom24PerformanceMarkOrMeasure14WriteIntoTraceEN8perfetto11TracedValueE(%"class.blink::mojom::PerformanceMarkOrMeasure"*, %"class.perfetto::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedValue", align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.perfetto::TracedDictionary", align 8
  %8 = alloca %"class.perfetto::TracedValue", align 8
  %9 = alloca %"class.perfetto::TracedValue", align 8
  %10 = alloca %"class.perfetto::TracedValue", align 8
  %11 = alloca %"class.perfetto::TracedValue", align 8
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = bitcast %"class.perfetto::TracedDictionary"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #7
  %15 = bitcast %"class.perfetto::TracedDictionary"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %7, %"class.perfetto::TracedValue"* %1) #7
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %8, %"class.perfetto::TracedDictionary"* nonnull %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #7
  %16 = getelementptr inbounds %"class.blink::mojom::PerformanceMarkOrMeasure", %"class.blink::mojom::PerformanceMarkOrMeasure"* %0, i64 0, i32 0
  %17 = bitcast %"class.perfetto::TracedValue"* %8 to i8*
  %18 = bitcast %"class.perfetto::TracedValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* nonnull align 8 %17, i64 16, i1 false) #7
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %6, %"class.std::__1::basic_string"* dereferenceable(24) %16) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #7
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %9, %"class.perfetto::TracedDictionary"* nonnull %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0)) #7
  %19 = getelementptr inbounds %"class.blink::mojom::PerformanceMarkOrMeasure", %"class.blink::mojom::PerformanceMarkOrMeasure"* %0, i64 0, i32 1
  %20 = bitcast %"class.perfetto::TracedValue"* %9 to i8*
  %21 = bitcast %"class.perfetto::TracedValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* nonnull align 8 %20, i64 16, i1 false) #7
  %22 = load i32, i32* %19, align 4
  call void @_ZN8perfetto17TraceFormatTraitsIN5blink5mojom34PerformanceMarkOrMeasure_EntryTypeEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"* nonnull %5, i32 %22) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #7
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %10, %"class.perfetto::TracedDictionary"* nonnull %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0)) #7
  %23 = getelementptr inbounds %"class.blink::mojom::PerformanceMarkOrMeasure", %"class.blink::mojom::PerformanceMarkOrMeasure"* %0, i64 0, i32 2
  %24 = bitcast %"class.perfetto::TracedValue"* %10 to i8*
  %25 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* nonnull align 8 %24, i64 16, i1 false) #7
  %26 = load double, double* %23, align 8
  call void @_ZNO8perfetto11TracedValue11WriteDoubleEd(%"class.perfetto::TracedValue"* nonnull %4, double %26) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #7
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %11, %"class.perfetto::TracedDictionary"* nonnull %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0)) #7
  %27 = getelementptr inbounds %"class.blink::mojom::PerformanceMarkOrMeasure", %"class.blink::mojom::PerformanceMarkOrMeasure"* %0, i64 0, i32 3
  %28 = bitcast %"class.perfetto::TracedValue"* %11 to i8*
  %29 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* nonnull align 8 %28, i64 16, i1 false) #7
  %30 = load double, double* %27, align 8
  call void @_ZNO8perfetto11TracedValue11WriteDoubleEd(%"class.perfetto::TracedValue"* nonnull %3, double %30) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #7
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %12, %"class.perfetto::TracedDictionary"* nonnull %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0)) #7
  %31 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #7
  %32 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  store i8 7, i8* %33, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #7
  %34 = getelementptr inbounds i8, i8* %31, i64 7
  store i8 0, i8* %34, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %12, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %13) #7
  %35 = load i8, i8* %33, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %2
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %39) #8
  br label %40

40:                                               ; preds = %2, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #2

declare void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedDictionary"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink5mojom24PerformanceMarkOrMeasure8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN5blink5mojom8internal29PerformanceMarkOrMeasure_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8* %0, %"class.mojo::internal::ValidationContext"* %1) #7
  ret i1 %3
}

declare zeroext i1 @_ZN5blink5mojom8internal29PerformanceMarkOrMeasure_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom32PerformanceMarkOrMeasureDataViewENS_9StructPtrINS2_24PerformanceMarkOrMeasureEEEE4ReadES3_PS6_(%"class.blink::mojom::internal::PerformanceMarkOrMeasure_Data"*, %"class.mojo::Message"*, %"class.mojo::StructPtr"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 112) #8, !noalias !3
  %5 = getelementptr inbounds i8, i8* %4, i64 32
  %6 = getelementptr inbounds i8, i8* %4, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 56, i1 false) #7, !noalias !3
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 28, i1 false) #7, !noalias !3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 17, i1 false) #7, !noalias !3
  %7 = ptrtoint i8* %4 to i64
  %8 = bitcast i8* %4 to %"class.std::__1::basic_string"*
  %9 = getelementptr inbounds %"class.blink::mojom::internal::PerformanceMarkOrMeasure_Data", %"class.blink::mojom::internal::PerformanceMarkOrMeasure_Data"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %9, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  %13 = bitcast %"struct.mojo::internal::Pointer"* %9 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 %11
  br i1 %12, label %47, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds i8, i8* %14, i64 8
  %17 = getelementptr inbounds i8, i8* %14, i64 4
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 1
  %20 = zext i32 %19 to i64
  %21 = tail call i1 @llvm.is.constant.i64(i64 %20) #7
  %22 = icmp ult i32 %19, 23
  %23 = and i1 %22, %21
  br i1 %23, label %24, label %31

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %4, i64 23
  %26 = trunc i32 %19 to i8
  store i8 %26, i8* %25, align 1
  %27 = icmp eq i32 %19, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %4, i8* align 1 %16, i64 %20, i1 false) #7
  br label %29

29:                                               ; preds = %28, %24
  %30 = getelementptr inbounds i8, i8* %4, i64 %20
  store i8 0, i8* %30, align 1
  br label %33

31:                                               ; preds = %15
  %32 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* nonnull %8, i8* %16, i64 %20) #7
  br label %33

33:                                               ; preds = %31, %29
  %34 = getelementptr inbounds i8, i8* %4, i64 23
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = bitcast i8* %4 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = select i1 %36, i8* %38, i8* %4
  %40 = getelementptr inbounds i8, i8* %4, i64 8
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = zext i8 %35 to i64
  %44 = select i1 %36, i64 %42, i64 %43
  %45 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %39, i64 %44) #7
  br i1 %45, label %47, label %46

46:                                               ; preds = %33
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #7
  br label %47

47:                                               ; preds = %46, %33, %3
  %48 = getelementptr inbounds i8, i8* %4, i64 24
  %49 = bitcast i8* %48 to i32*
  %50 = getelementptr inbounds %"class.blink::mojom::internal::PerformanceMarkOrMeasure_Data", %"class.blink::mojom::internal::PerformanceMarkOrMeasure_Data"* %0, i64 0, i32 2
  %51 = load i32, i32* %50, align 1
  store i32 %51, i32* %49, align 4
  %52 = getelementptr inbounds %"class.blink::mojom::internal::PerformanceMarkOrMeasure_Data", %"class.blink::mojom::internal::PerformanceMarkOrMeasure_Data"* %0, i64 0, i32 4
  %53 = bitcast double* %52 to <2 x i64>*
  %54 = load <2 x i64>, <2 x i64>* %53, align 1
  %55 = bitcast i8* %5 to <2 x i64>*
  store <2 x i64> %54, <2 x i64>* %55, align 8
  %56 = getelementptr inbounds i8, i8* %4, i64 48
  %57 = getelementptr inbounds %"class.blink::mojom::internal::PerformanceMarkOrMeasure_Data", %"class.blink::mojom::internal::PerformanceMarkOrMeasure_Data"* %0, i64 0, i32 6
  %58 = getelementptr inbounds %"class.mojo_base::mojom::internal::BigBuffer_Data", %"class.mojo_base::mojom::internal::BigBuffer_Data"* %57, i64 0, i32 0
  %59 = load i32, i32* %58, align 1
  %60 = icmp eq i32 %59, 0
  %61 = load i8, i8* %56, align 8, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %60, label %63, label %64

63:                                               ; preds = %47
  br i1 %62, label %73, label %66

64:                                               ; preds = %47
  %65 = bitcast i8* %6 to %"class.mojo_base::BigBuffer"*
  br i1 %62, label %68, label %71

66:                                               ; preds = %63
  %67 = bitcast i8* %6 to %"class.mojo_base::BigBuffer"*
  tail call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* %67) #7
  store i8 0, i8* %56, align 8
  br label %73

68:                                               ; preds = %64
  tail call void @_ZN9mojo_base9BigBufferC1Ev(%"class.mojo_base::BigBuffer"* %65) #7
  store i8 1, i8* %56, align 8
  %69 = load i32, i32* %58, align 1
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %73, label %71

71:                                               ; preds = %64, %68
  %72 = tail call zeroext i1 @_ZN4mojo11UnionTraitsIN9mojo_base5mojom17BigBufferDataViewENS1_9BigBufferEE4ReadES3_PS4_(%"class.mojo_base::mojom::internal::BigBuffer_Data"* nonnull %57, %"class.mojo::Message"* %1, %"class.mojo_base::BigBuffer"* %65) #7
  br i1 %72, label %73, label %74

73:                                               ; preds = %63, %68, %66, %71
  br label %74

74:                                               ; preds = %73, %71
  %75 = phi i8 [ 1, %73 ], [ 0, %71 ]
  %76 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = load %"class.blink::mojom::PerformanceMarkOrMeasure"*, %"class.blink::mojom::PerformanceMarkOrMeasure"** %76, align 8
  store %"class.blink::mojom::PerformanceMarkOrMeasure"* null, %"class.blink::mojom::PerformanceMarkOrMeasure"** %76, align 8
  %78 = icmp eq %"class.blink::mojom::PerformanceMarkOrMeasure"* %77, null
  br i1 %78, label %79, label %82

79:                                               ; preds = %74
  %80 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  store i64 %7, i64* %80, align 8
  %81 = icmp ne i8 %75, 0
  br label %118

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.blink::mojom::PerformanceMarkOrMeasure", %"class.blink::mojom::PerformanceMarkOrMeasure"* %77, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %84 = load i8, i8* %83, align 8, !range !2
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %88, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.blink::mojom::PerformanceMarkOrMeasure", %"class.blink::mojom::PerformanceMarkOrMeasure"* %77, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* %87) #7
  store i8 0, i8* %83, align 8
  br label %88

88:                                               ; preds = %86, %82
  %89 = bitcast %"class.blink::mojom::PerformanceMarkOrMeasure"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.blink::mojom::PerformanceMarkOrMeasure", %"class.blink::mojom::PerformanceMarkOrMeasure"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  tail call void @_ZdlPv(i8* %95) #8
  br label %96

96:                                               ; preds = %88, %93
  %97 = bitcast %"class.blink::mojom::PerformanceMarkOrMeasure"* %77 to i8*
  tail call void @_ZdlPv(i8* %97) #8
  %98 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %99 = load %"class.blink::mojom::PerformanceMarkOrMeasure"*, %"class.blink::mojom::PerformanceMarkOrMeasure"** %76, align 8
  store i64 %7, i64* %98, align 8
  %100 = icmp ne i8 %75, 0
  %101 = icmp eq %"class.blink::mojom::PerformanceMarkOrMeasure"* %99, null
  br i1 %101, label %118, label %102

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.blink::mojom::PerformanceMarkOrMeasure", %"class.blink::mojom::PerformanceMarkOrMeasure"* %99, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %104 = load i8, i8* %103, align 8, !range !2
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.blink::mojom::PerformanceMarkOrMeasure", %"class.blink::mojom::PerformanceMarkOrMeasure"* %99, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* %107) #7
  store i8 0, i8* %103, align 8
  br label %108

108:                                              ; preds = %106, %102
  %109 = bitcast %"class.blink::mojom::PerformanceMarkOrMeasure"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %109, i64 0, i32 1, i32 0
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.blink::mojom::PerformanceMarkOrMeasure", %"class.blink::mojom::PerformanceMarkOrMeasure"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8
  tail call void @_ZdlPv(i8* %115) #8
  br label %116

116:                                              ; preds = %113, %108
  %117 = bitcast %"class.blink::mojom::PerformanceMarkOrMeasure"* %99 to i8*
  tail call void @_ZdlPv(i8* %117) #8
  br label %118

118:                                              ; preds = %79, %96, %116
  %119 = phi i1 [ %81, %79 ], [ %100, %96 ], [ %100, %116 ]
  ret i1 %119
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN9mojo_base9BigBufferC1EOS0_(%"class.mojo_base::BigBuffer"*, %"class.mojo_base::BigBuffer"* dereferenceable(56)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN8perfetto17TraceFormatTraitsIN5blink5mojom34PerformanceMarkOrMeasure_EntryTypeEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"*, i32) local_unnamed_addr #2

declare void @_ZNO8perfetto11TracedValue11WriteDoubleEd(%"class.perfetto::TracedValue"*, double) local_unnamed_addr #2

declare void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #6

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

declare void @_ZN9mojo_base9BigBufferC1Ev(%"class.mojo_base::BigBuffer"*) unnamed_addr #2

declare zeroext i1 @_ZN4mojo11UnionTraitsIN9mojo_base5mojom17BigBufferDataViewENS1_9BigBufferEE4ReadES3_PS4_(%"class.mojo_base::mojom::internal::BigBuffer_Data"*, %"class.mojo::Message"*, %"class.mojo_base::BigBuffer"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink5mojom24PerformanceMarkOrMeasure3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZN5blink5mojom24PerformanceMarkOrMeasure3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
