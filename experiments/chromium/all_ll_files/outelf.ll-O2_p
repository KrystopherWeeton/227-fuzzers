; ModuleID = '../../third_party/nasm/output/outelf.c'
source_filename = "../../third_party/nasm/output/outelf.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.dfmt = type { i8*, i8*, void ()*, void (i8*, i32, i32)*, void (i8*, i32, i64, i32, i8*)*, void (i8*, i8*)*, void (i32)*, void (i32, i8*)*, void ()*, %struct.pragma_facility* }
%struct.pragma_facility = type { i8*, i32 (%struct.pragma*)* }
%struct.pragma = type { %struct.pragma_facility*, i8*, i8*, i8*, i32 }
%struct.ofmt = type { i8*, i8*, i8*, i32, i32, %struct.dfmt**, %struct.dfmt*, i8*, void ()*, void ()*, void (%struct.out_data*)*, void (i32, i8*, i32, i64, i32, i32)*, void (i8*, i32, i64, i32, i8*)*, i32 (i8*, i32*)*, i32 (i8*, i32, i32, i32*, i8*)*, void (i32, i32)*, i32 (i32)*, i32 (i32, i8*)*, void ()*, %struct.pragma_facility* }
%struct.out_data = type { i64, i32, i32, i32, i32, i32, i32, i64, %struct.itemplate*, i8*, i64, i32, i32, i64, %struct.src_location }
%struct.itemplate = type opaque
%struct.src_location = type { i8*, i32 }
%struct.dwarf_format = type { i16, [10 x i16] }
%struct.elf_symbol = type { %struct.rbtree, i32, i32, i32, i32, i32, i32, %struct.elf_symbol*, i8* }
%struct.rbtree = type { i64, %struct.rbtree*, %struct.rbtree*, i8 }
%struct.elf_section = type { %struct.SAA*, i64, i64, i64, i32, i32, i32, i64, i64, i64, i64, i8*, %struct.SAA*, %struct.elf_reloc*, %struct.elf_reloc**, %struct.rbtree* }
%struct.SAA = type { i64, i64, i64, i64, i64, i64, i8**, i64, i64, i8**, i64, i64, i8** }
%struct.elf_reloc = type { %struct.elf_reloc*, i64, i64, i64, i32 }
%struct.linelist = type { %struct.linelist*, %struct.linelist*, %struct.symlininfo, i8*, i32 }
%struct.symlininfo = type { i32, i32, i32, i8* }
%struct.sectlist = type { %struct.SAA*, i32, i32, i32, i32, %struct.sectlist*, %struct.sectlist* }
%struct.elf_format_info = type { i64, i64, i64, i64, i64, i64, [8 x i8], i32, i16, i8, i8, void (%struct.elf_symbol*)*, %struct.SAA* (%struct.elf_reloc*)* }
%struct.RAA = type opaque
%struct.hash_table = type { %struct.hash_node*, i64, i64, i64 }
%struct.hash_node = type { i64, i8*, i64, i8* }
%struct.elf_known_section = type { i8*, i32, i32, i32, i32 }
%struct.size_unit = type { [8 x i8], i32, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.ELF_SECTDATA = type { i8*, i64, i8 }
%struct.tokenval = type { i8*, i64, i64, i32, i8 }
%struct.expr = type { i32, i64 }
%struct.eval_hints = type { i64, i32 }
%struct.hash_insert = type { %struct.hash_table*, %struct.hash_node*, %struct.hash_node }
%struct.elf32_sym = type { i32, i32, i32, i8, i8, i16 }
%struct.elf32_rel = type { i32, i32 }
%struct.elf32_shdr = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.elf64_shdr = type { i32, i32, i64, i64, i64, i64, i32, i32, i64, i64 }
%union.ehdr = type { %struct.elf64_hdr }
%struct.elf64_hdr = type { [16 x i8], i16, i16, i32, i64, i64, i64, i32, i16, i16, i16, i16, i16, i16 }
%struct.elf32_hdr = type { [16 x i8], i16, i16, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16 }
%struct.elf64_sym = type { i32, i8, i8, i16, i64, i64 }
%struct.elf64_rela = type { i64, i64, i64 }
%struct.elf32_rela = type { i32, i32, i32 }

@elf_osabi = hidden local_unnamed_addr global i8 0, align 1
@elf_abiver = hidden local_unnamed_addr global i8 0, align 1
@.str = private unnamed_addr constant [41 x i8] c"ELF32 (i386) (Linux, most Unix variants)\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"elf32\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c".o\00", align 1
@elf32_debugs_arr = internal constant [3 x %struct.dfmt*] [%struct.dfmt* @elf32_df_dwarf, %struct.dfmt* @elf32_df_stabs, %struct.dfmt* null], align 16
@elf32_df_dwarf = internal constant %struct.dfmt { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i32 0, i32 0), void ()* @dwarf32_init, void (i8*, i32, i32)* @dwarf_linenum, void (i8*, i32, i64, i32, i8*)* @null_debug_deflabel, void (i8*, i8*)* @null_debug_directive, void (i32)* @debug_typevalue, void (i32, i8*)* @dwarf_output, void ()* @dwarf_cleanup, %struct.pragma_facility* null }, align 8
@elf_stdmac = external constant [0 x i8], align 1
@elf_pragma_list = internal constant [2 x %struct.pragma_facility] [%struct.pragma_facility { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.113, i32 0, i32 0), i32 (%struct.pragma*)* null }, %struct.pragma_facility zeroinitializer], align 16
@of_elf32 = hidden constant %struct.ofmt { i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i32 0, i32 0), i32 0, i32 32, %struct.dfmt** getelementptr inbounds ([3 x %struct.dfmt*], [3 x %struct.dfmt*]* @elf32_debugs_arr, i32 0, i32 0), %struct.dfmt* @elf32_df_dwarf, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @elf_stdmac, i32 0, i32 0), void ()* @elf32_init, void ()* @null_reset, void (%struct.out_data*)* @nasm_do_legacy_output, void (i32, i8*, i32, i64, i32, i32)* @elf32_out, void (i8*, i32, i64, i32, i8*)* @elf_deflabel, i32 (i8*, i32*)* @elf_section_names, i32 (i8*, i32, i32, i32*, i8*)* null, void (i32, i32)* @elf_sectalign, i32 (i32)* @null_segbase, i32 (i32, i8*)* @elf_directive, void ()* @elf_cleanup, %struct.pragma_facility* getelementptr inbounds ([2 x %struct.pragma_facility], [2 x %struct.pragma_facility]* @elf_pragma_list, i32 0, i32 0) }, align 8
@.str.3 = private unnamed_addr constant [43 x i8] c"ELF64 (x86-64) (Linux, most Unix variants)\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"elf64\00", align 1
@elf64_debugs_arr = internal constant [3 x %struct.dfmt*] [%struct.dfmt* @elf64_df_dwarf, %struct.dfmt* @elf64_df_stabs, %struct.dfmt* null], align 16
@elf64_df_dwarf = internal constant %struct.dfmt { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i32 0, i32 0), void ()* @dwarf64_init, void (i8*, i32, i32)* @dwarf_linenum, void (i8*, i32, i64, i32, i8*)* @null_debug_deflabel, void (i8*, i8*)* @null_debug_directive, void (i32)* @debug_typevalue, void (i32, i8*)* @dwarf_output, void ()* @dwarf_cleanup, %struct.pragma_facility* null }, align 8
@of_elf64 = hidden constant %struct.ofmt { i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i32 0, i32 0), i32 0, i32 64, %struct.dfmt** getelementptr inbounds ([3 x %struct.dfmt*], [3 x %struct.dfmt*]* @elf64_debugs_arr, i32 0, i32 0), %struct.dfmt* @elf64_df_dwarf, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @elf_stdmac, i32 0, i32 0), void ()* @elf64_init, void ()* @null_reset, void (%struct.out_data*)* @nasm_do_legacy_output, void (i32, i8*, i32, i64, i32, i32)* @elf64_out, void (i8*, i32, i64, i32, i8*)* @elf_deflabel, i32 (i8*, i32*)* @elf_section_names, i32 (i8*, i32, i32, i32*, i8*)* null, void (i32, i32)* @elf_sectalign, i32 (i32)* @null_segbase, i32 (i32, i8*)* @elf_directive, void ()* @elf_cleanup, %struct.pragma_facility* getelementptr inbounds ([2 x %struct.pragma_facility], [2 x %struct.pragma_facility]* @elf_pragma_list, i32 0, i32 0) }, align 8
@.str.5 = private unnamed_addr constant [34 x i8] c"ELFx32 (ELF32 for x86-64) (Linux)\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"elfx32\00", align 1
@elfx32_debugs_arr = internal constant [3 x %struct.dfmt*] [%struct.dfmt* @elfx32_df_dwarf, %struct.dfmt* @elfx32_df_stabs, %struct.dfmt* null], align 16
@elfx32_df_dwarf = internal constant %struct.dfmt { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i32 0, i32 0), void ()* @dwarfx32_init, void (i8*, i32, i32)* @dwarf_linenum, void (i8*, i32, i64, i32, i8*)* @null_debug_deflabel, void (i8*, i8*)* @null_debug_directive, void (i32)* @debug_typevalue, void (i32, i8*)* @dwarf_output, void ()* @dwarf_cleanup, %struct.pragma_facility* null }, align 8
@of_elfx32 = hidden constant %struct.ofmt { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i32 0, i32 0), i32 0, i32 64, %struct.dfmt** getelementptr inbounds ([3 x %struct.dfmt*], [3 x %struct.dfmt*]* @elfx32_debugs_arr, i32 0, i32 0), %struct.dfmt* @elfx32_df_dwarf, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @elf_stdmac, i32 0, i32 0), void ()* @elfx32_init, void ()* @null_reset, void (%struct.out_data*)* @nasm_do_legacy_output, void (i32, i8*, i32, i64, i32, i32)* @elfx32_out, void (i8*, i32, i64, i32, i8*)* @elf_deflabel, i32 (i8*, i32*)* @elf_section_names, i32 (i8*, i32, i32, i32*, i8*)* null, void (i32, i32)* @elf_sectalign, i32 (i32)* @null_segbase, i32 (i32, i8*)* @elf_directive, void ()* @elf_cleanup, %struct.pragma_facility* null }, align 8
@dwfmt = common hidden local_unnamed_addr global %struct.dwarf_format* null, align 8
@elf32_df_stabs = internal constant %struct.dfmt { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), void ()* @null_debug_init, void (i8*, i32, i32)* @stabs_linenum, void (i8*, i32, i64, i32, i8*)* @null_debug_deflabel, void (i8*, i8*)* @null_debug_directive, void (i32)* @debug_typevalue, void (i32, i8*)* @stabs_output, void ()* @stabs_cleanup, %struct.pragma_facility* null }, align 8
@.str.7 = private unnamed_addr constant [27 x i8] c"ELF32 (i386) stabs (older)\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"stabs\00", align 1
@stabs_filename = internal unnamed_addr global i8* null, align 8
@debug_immcall = internal unnamed_addr global i1 false, align 4
@currentline = internal unnamed_addr global i32 1, align 4
@lastsym = internal unnamed_addr global %struct.elf_symbol* null, align 8
@sects = internal unnamed_addr global %struct.elf_section** null, align 8
@numlinestabs = internal unnamed_addr global i32 0, align 4
@stabslines = internal unnamed_addr global %struct.linelist* null, align 8
@stabbuf = internal unnamed_addr global i8* null, align 8
@stabrelbuf = internal unnamed_addr global i8* null, align 8
@stabstrbuf = internal unnamed_addr global i8* null, align 8
@.str.9 = private unnamed_addr constant [27 x i8] c"ELF32 (i386) dwarf (newer)\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"dwarf\00", align 1
@dwarf32_init.dwfmt32 = internal constant %struct.dwarf_format { i16 2, [10 x i16] [i16 2, i16 0, i16 2, i16 2, i16 0, i16 0, i16 2, i16 0, i16 1, i16 0] }, align 2
@ndebugs = internal unnamed_addr global i1 false, align 4
@dwarf_clist = internal unnamed_addr global %struct.linelist* null, align 8
@dwarf_flist = internal unnamed_addr global %struct.linelist* null, align 8
@dwarf_numfiles = internal unnamed_addr global i32 0, align 4
@dwarf_elist = internal unnamed_addr global %struct.linelist* null, align 8
@dwarf_csect = internal unnamed_addr global %struct.sectlist* null, align 8
@dwarf_fsect = internal unnamed_addr global %struct.sectlist* null, align 8
@dwarf_nsections = internal unnamed_addr global i32 0, align 4
@dwarf_esect = internal unnamed_addr global %struct.sectlist* null, align 8
@ofmt = external local_unnamed_addr global %struct.ofmt*, align 8
@arangesbuf = internal unnamed_addr global i8* null, align 8
@arangesrelbuf = internal unnamed_addr global i8* null, align 8
@infobuf = internal unnamed_addr global i8* null, align 8
@inforelbuf = internal unnamed_addr global i8* null, align 8
@abbrevbuf = internal unnamed_addr global i8* null, align 8
@linebuf = internal unnamed_addr global i8* null, align 8
@linerelbuf = internal unnamed_addr global i8* null, align 8
@elf32_init.ef_elf32 = internal constant %struct.elf_format_info { i64 4, i64 52, i64 40, i64 16, i64 8, i64 12, [8 x i8] c".rel\00\00\00\00", i32 9, i16 3, i8 1, i8 0, void (%struct.elf_symbol*)* @elf32_sym, %struct.SAA* (%struct.elf_reloc*)* @elf32_build_reltab }, align 8
@efmt = internal unnamed_addr global %struct.elf_format_info* null, align 8
@symtab = internal unnamed_addr global %struct.SAA* null, align 8
@nsects = internal unnamed_addr global i32 0, align 4
@nlocals = internal unnamed_addr global i32 0, align 4
@.str.11 = private unnamed_addr constant [10 x i8] c".shstrtab\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c".strtab\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c".symtab\00", align 1
@.str.14 = private unnamed_addr constant [14 x i8] c".symtab_shndx\00", align 1
@elf_module = internal global [4096 x i8] zeroinitializer, align 16
@inname = external local_unnamed_addr global i8*, align 8
@sectlen = internal unnamed_addr global i32 0, align 4
@syms = internal unnamed_addr global %struct.SAA* null, align 8
@nglobs = internal unnamed_addr global i32 0, align 4
@bsym = internal unnamed_addr global %struct.RAA* null, align 8
@strs = internal unnamed_addr global %struct.SAA* null, align 8
@.str.15 = private unnamed_addr constant [2 x i8] zeroinitializer, align 1
@strslen = internal unnamed_addr global i32 0, align 4
@shstrtab = internal unnamed_addr global i8* null, align 8
@shstrtabsize = internal unnamed_addr global i32 0, align 4
@shstrtablen = internal unnamed_addr global i32 0, align 4
@fwds = internal unnamed_addr global %struct.elf_symbol* null, align 8
@section_by_index = internal unnamed_addr global %struct.RAA* null, align 8
@section_by_name = internal global %struct.hash_table zeroinitializer, align 8
@elf_gotpc_sect = internal unnamed_addr global i32 0, align 4
@.str.17 = private unnamed_addr constant [8 x i8] c"..gotpc\00", align 1
@elf_gotoff_sect = internal unnamed_addr global i32 0, align 4
@.str.18 = private unnamed_addr constant [9 x i8] c"..gotoff\00", align 1
@elf_got_sect = internal unnamed_addr global i32 0, align 4
@.str.19 = private unnamed_addr constant [6 x i8] c"..got\00", align 1
@elf_plt_sect = internal unnamed_addr global i32 0, align 4
@.str.20 = private unnamed_addr constant [6 x i8] c"..plt\00", align 1
@elf_sym_sect = internal unnamed_addr global i32 0, align 4
@.str.21 = private unnamed_addr constant [6 x i8] c"..sym\00", align 1
@elf_gottpoff_sect = internal unnamed_addr global i32 0, align 4
@.str.22 = private unnamed_addr constant [11 x i8] c"..gottpoff\00", align 1
@elf_tlsie_sect = internal unnamed_addr global i32 0, align 4
@.str.23 = private unnamed_addr constant [8 x i8] c"..tlsie\00", align 1
@def_seg = internal unnamed_addr global i32 0, align 4
@nsections = internal unnamed_addr global i32 0, align 4
@elf32_out.sinfo = internal global %struct.symlininfo zeroinitializer, align 8
@.str.24 = private unnamed_addr constant [45 x i8] c"attempt to assemble code in [ABSOLUTE] space\00", align 1
@.str.25 = private unnamed_addr constant [6 x i8] c".text\00", align 1
@.str.26 = private unnamed_addr constant [41 x i8] c"strange segment conditions in ELF driver\00", align 1
@dfmt = external local_unnamed_addr global %struct.dfmt*, align 8
@.str.27 = private unnamed_addr constant [58 x i8] c"attempt to initialize memory in BSS section `%s': ignored\00", align 1
@.str.28 = private unnamed_addr constant [62 x i8] c"uninitialized space declared in non-BSS section `%s': zeroing\00", align 1
@.str.29 = private unnamed_addr constant [52 x i8] c"ELF format does not support segment base references\00", align 1
@.str.30 = private unnamed_addr constant [57 x i8] c"ELF format cannot produce non-PC-relative PLT references\00", align 1
@.str.31 = private unnamed_addr constant [44 x i8] c"ELF format does not support this use of WRT\00", align 1
@.str.32 = private unnamed_addr constant [34 x i8] c"Unsupported %d-bit ELF relocation\00", align 1
@.str.33 = private unnamed_addr constant [39 x i8] c"../../third_party/nasm/output/outelf.c\00", align 1
@.str.34 = private unnamed_addr constant [17 x i8] c"segment != segto\00", align 1
@.str.35 = private unnamed_addr constant [26 x i8] c"intra-segment OUT_REL4ADR\00", align 1
@.str.36 = private unnamed_addr constant [53 x i8] c"ELF format cannot produce PC-relative GOT references\00", align 1
@.str.37 = private unnamed_addr constant [54 x i8] c"32-bit ELF format does not support 64-bit relocations\00", align 1
@.str.38 = private unnamed_addr constant [37 x i8] c"invalid access to an external symbol\00", align 1
@.str.39 = private unnamed_addr constant [59 x i8] c"unable to find a suitable global symbol for this reference\00", align 1
@.str.40 = private unnamed_addr constant [54 x i8] c" elf_deflabel: %s, seg=%x, off=%lx, is_global=%d, %s\0A\00", align 1
@.str.41 = private unnamed_addr constant [33 x i8] c"unrecognised special symbol `%s'\00", align 1
@.str.42 = private unnamed_addr constant [49 x i8] c"cannot use relocatable expression as symbol size\00", align 1
@.str.43 = private unnamed_addr constant [48 x i8] c"alignment constraint `%s' is not a valid number\00", align 1
@.str.44 = private unnamed_addr constant [48 x i8] c"alignment constraint `%s' is not a power of two\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"weak\00", align 1
@.str.47 = private unnamed_addr constant [7 x i8] c"notype\00", align 1
@.str.48 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@.str.49 = private unnamed_addr constant [7 x i8] c"hidden\00", align 1
@.str.50 = private unnamed_addr constant [7 x i8] c"strong\00", align 1
@.str.51 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.52 = private unnamed_addr constant [9 x i8] c"function\00", align 1
@.str.53 = private unnamed_addr constant [9 x i8] c"internal\00", align 1
@.str.54 = private unnamed_addr constant [10 x i8] c"protected\00", align 1
@.str.55 = private unnamed_addr constant [47 x i8] c"weak and strong only applies to global symbols\00", align 1
@debug_nasm = external local_unnamed_addr global i32, align 4
@.str.57 = private unnamed_addr constant [47 x i8] c"attempt to redefine reserved section name `%s'\00", align 1
@elf_known_sections = internal unnamed_addr constant [15 x %struct.elf_known_section] [%struct.elf_known_section { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i32 0, i32 0), i32 1, i32 6, i32 16, i32 0 }, %struct.elf_known_section { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.83, i32 0, i32 0), i32 1, i32 2, i32 4, i32 0 }, %struct.elf_known_section { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.84, i32 0, i32 0), i32 1, i32 2, i32 4, i32 0 }, %struct.elf_known_section { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.85, i32 0, i32 0), i32 1, i32 3, i32 4, i32 0 }, %struct.elf_known_section { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.86, i32 0, i32 0), i32 1, i32 3, i32 4, i32 0 }, %struct.elf_known_section { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0), i32 8, i32 3, i32 4, i32 0 }, %struct.elf_known_section { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.88, i32 0, i32 0), i32 8, i32 3, i32 4, i32 0 }, %struct.elf_known_section { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.89, i32 0, i32 0), i32 1, i32 1027, i32 4, i32 0 }, %struct.elf_known_section { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.90, i32 0, i32 0), i32 8, i32 1027, i32 4, i32 0 }, %struct.elf_known_section { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.91, i32 0, i32 0), i32 1, i32 0, i32 1, i32 0 }, %struct.elf_known_section { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.92, i32 0, i32 0), i32 16, i32 2, i32 -1, i32 -1 }, %struct.elf_known_section { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.93, i32 0, i32 0), i32 14, i32 2, i32 -1, i32 -1 }, %struct.elf_known_section { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.94, i32 0, i32 0), i32 15, i32 2, i32 -1, i32 -1 }, %struct.elf_known_section { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.95, i32 0, i32 0), i32 7, i32 0, i32 4, i32 0 }, %struct.elf_known_section { i8* null, i32 1, i32 2, i32 1, i32 0 }], align 16
@.str.58 = private unnamed_addr constant [73 x i8] c"incompatible section attributes ignored on redeclaration of section `%s'\00", align 1
@.str.59 = private unnamed_addr constant [69 x i8] c"section attribute merge specified without an entry size or `strings'\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"align\00", align 1
@.str.61 = private unnamed_addr constant [38 x i8] c"section align without value specified\00", align 1
@.str.62 = private unnamed_addr constant [44 x i8] c"section alignment %ld is not a power of two\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c"alloc\00", align 1
@.str.64 = private unnamed_addr constant [8 x i8] c"noalloc\00", align 1
@.str.65 = private unnamed_addr constant [5 x i8] c"exec\00", align 1
@.str.66 = private unnamed_addr constant [7 x i8] c"noexec\00", align 1
@.str.67 = private unnamed_addr constant [6 x i8] c"write\00", align 1
@.str.68 = private unnamed_addr constant [8 x i8] c"nowrite\00", align 1
@.str.69 = private unnamed_addr constant [9 x i8] c"readonly\00", align 1
@.str.70 = private unnamed_addr constant [4 x i8] c"tls\00", align 1
@.str.71 = private unnamed_addr constant [6 x i8] c"notls\00", align 1
@.str.72 = private unnamed_addr constant [6 x i8] c"merge\00", align 1
@.str.73 = private unnamed_addr constant [8 x i8] c"nomerge\00", align 1
@.str.74 = private unnamed_addr constant [8 x i8] c"strings\00", align 1
@.str.75 = private unnamed_addr constant [10 x i8] c"nostrings\00", align 1
@.str.76 = private unnamed_addr constant [9 x i8] c"progbits\00", align 1
@.str.77 = private unnamed_addr constant [7 x i8] c"nobits\00", align 1
@.str.78 = private unnamed_addr constant [5 x i8] c"note\00", align 1
@.str.79 = private unnamed_addr constant [14 x i8] c"preinit_array\00", align 1
@.str.80 = private unnamed_addr constant [11 x i8] c"init_array\00", align 1
@.str.81 = private unnamed_addr constant [11 x i8] c"fini_array\00", align 1
@size_units = internal constant [12 x %struct.size_unit] [%struct.size_unit { [8 x i8] c"byte\00\00\00\00", i32 1, i32 1 }, %struct.size_unit { [8 x i8] c"word\00\00\00\00", i32 2, i32 2 }, %struct.size_unit { [8 x i8] c"dword\00\00\00", i32 4, i32 4 }, %struct.size_unit { [8 x i8] c"qword\00\00\00", i32 8, i32 8 }, %struct.size_unit { [8 x i8] c"tword\00\00\00", i32 10, i32 2 }, %struct.size_unit { [8 x i8] c"tbyte\00\00\00", i32 10, i32 2 }, %struct.size_unit { [8 x i8] c"oword\00\00\00", i32 16, i32 16 }, %struct.size_unit { [8 x i8] c"xword\00\00\00", i32 16, i32 16 }, %struct.size_unit { [8 x i8] c"yword\00\00\00", i32 32, i32 32 }, %struct.size_unit { [8 x i8] c"zword\00\00\00", i32 64, i32 64 }, %struct.size_unit { [8 x i8] c"pointer\00", i32 -1, i32 -1 }, %struct.size_unit zeroinitializer], align 16
@.str.82 = private unnamed_addr constant [70 x i8] c"unknown section attribute '%s' ignored on declaration of section `%s'\00", align 1
@.str.83 = private unnamed_addr constant [8 x i8] c".rodata\00", align 1
@.str.84 = private unnamed_addr constant [9 x i8] c".lrodata\00", align 1
@.str.85 = private unnamed_addr constant [6 x i8] c".data\00", align 1
@.str.86 = private unnamed_addr constant [7 x i8] c".ldata\00", align 1
@.str.87 = private unnamed_addr constant [5 x i8] c".bss\00", align 1
@.str.88 = private unnamed_addr constant [6 x i8] c".lbss\00", align 1
@.str.89 = private unnamed_addr constant [7 x i8] c".tdata\00", align 1
@.str.90 = private unnamed_addr constant [6 x i8] c".tbss\00", align 1
@.str.91 = private unnamed_addr constant [9 x i8] c".comment\00", align 1
@.str.92 = private unnamed_addr constant [15 x i8] c".preinit_array\00", align 1
@.str.93 = private unnamed_addr constant [12 x i8] c".init_array\00", align 1
@.str.94 = private unnamed_addr constant [12 x i8] c".fini_array\00", align 1
@.str.95 = private unnamed_addr constant [6 x i8] c".note\00", align 1
@.str.96 = private unnamed_addr constant [39 x i8] c"`osabi' directive requires a parameter\00", align 1
@.str.97 = private unnamed_addr constant [33 x i8] c"valid osabi numbers are 0 to 255\00", align 1
@.str.98 = private unnamed_addr constant [45 x i8] c"invalid ABI version number (valid: 0 to 255)\00", align 1
@_pass_type = external local_unnamed_addr global i32, align 4
@sec_debug = internal unnamed_addr global i32 0, align 4
@.str.99 = private unnamed_addr constant [6 x i8] c".stab\00", align 1
@.str.100 = private unnamed_addr constant [9 x i8] c".stabstr\00", align 1
@.str.101 = private unnamed_addr constant [15 x i8] c".debug_aranges\00", align 1
@.str.102 = private unnamed_addr constant [6 x i8] c".rela\00", align 1
@.str.103 = private unnamed_addr constant [16 x i8] c".debug_pubnames\00", align 1
@.str.104 = private unnamed_addr constant [12 x i8] c".debug_info\00", align 1
@.str.105 = private unnamed_addr constant [14 x i8] c".debug_abbrev\00", align 1
@.str.106 = private unnamed_addr constant [12 x i8] c".debug_line\00", align 1
@.str.107 = private unnamed_addr constant [13 x i8] c".debug_frame\00", align 1
@.str.108 = private unnamed_addr constant [11 x i8] c".debug_loc\00", align 1
@symtab_shndx = internal unnamed_addr global %struct.SAA* null, align 8
@ofile = external local_unnamed_addr global %struct._IO_FILE*, align 8
@elf_foffs = internal unnamed_addr global i64 0, align 8
@elf_nsect = internal unnamed_addr global i32 0, align 4
@elf_sects = internal unnamed_addr global %struct.ELF_SECTDATA* null, align 8
@stabstrlen = internal unnamed_addr global i32 0, align 4
@stabrellen = internal unnamed_addr global i32 0, align 4
@arangeslen = internal unnamed_addr global i32 0, align 4
@arangesrellen = internal unnamed_addr global i32 0, align 4
@infolen = internal unnamed_addr global i32 0, align 4
@inforellen = internal unnamed_addr global i32 0, align 4
@abbrevlen = internal unnamed_addr global i32 0, align 4
@linelen = internal unnamed_addr global i32 0, align 4
@linerellen = internal unnamed_addr global i32 0, align 4
@elfx32_df_stabs = internal constant %struct.dfmt { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), void ()* @null_debug_init, void (i8*, i32, i32)* @stabs_linenum, void (i8*, i32, i64, i32, i8*)* @null_debug_deflabel, void (i8*, i8*)* @null_debug_directive, void (i32)* @debug_typevalue, void (i32, i8*)* @stabs_output, void ()* @stabs_cleanup, %struct.pragma_facility* getelementptr inbounds ([2 x %struct.pragma_facility], [2 x %struct.pragma_facility]* @elf_pragma_list, i32 0, i32 0) }, align 8
@elf64_df_stabs = internal constant %struct.dfmt { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.111, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), void ()* @null_debug_init, void (i8*, i32, i32)* @stabs_linenum, void (i8*, i32, i64, i32, i8*)* @null_debug_deflabel, void (i8*, i8*)* @null_debug_directive, void (i32)* @debug_typevalue, void (i32, i8*)* @stabs_output, void ()* @stabs_cleanup, %struct.pragma_facility* null }, align 8
@.str.110 = private unnamed_addr constant [30 x i8] c"ELFx32 (x86-64) stabs (older)\00", align 1
@.str.111 = private unnamed_addr constant [29 x i8] c"ELF64 (x86-64) stabs (older)\00", align 1
@nsyms = internal unnamed_addr global i64 0, align 8
@dwarf_infosym = internal unnamed_addr global i64 0, align 8
@dwarf_abbrevsym = internal unnamed_addr global i64 0, align 8
@dwarf_linesym = internal unnamed_addr global i64 0, align 8
@.str.112 = private unnamed_addr constant [11 x i8] c"is_elf64()\00", align 1
@.str.113 = private unnamed_addr constant [4 x i8] c"elf\00", align 1
@.str.114 = private unnamed_addr constant [29 x i8] c"ELF64 (x86-64) dwarf (newer)\00", align 1
@dwarf64_init.dwfmt64 = internal constant %struct.dwarf_format { i16 3, [10 x i16] [i16 2, i16 0, i16 2, i16 3, i16 0, i16 0, i16 3, i16 0, i16 3, i16 0] }, align 2
@elf64_init.ef_elf64 = internal constant %struct.elf_format_info { i64 8, i64 64, i64 64, i64 24, i64 24, i64 24, [8 x i8] c".rela\00\00\00", i32 4, i16 62, i8 2, i8 1, void (%struct.elf_symbol*)* @elf64_sym, %struct.SAA* (%struct.elf_reloc*)* @elf64_build_reltab }, align 8
@elf64_out.sinfo = internal global %struct.symlininfo zeroinitializer, align 8
@.str.115 = private unnamed_addr constant [35 x i8] c"OUT_RAWDATA with other than NO_SEG\00", align 1
@.str.116 = private unnamed_addr constant [29 x i8] c"internal error elf64-hpa-871\00", align 1
@.str.117 = private unnamed_addr constant [47 x i8] c"ELF64 requires ..gotoff references to be qword\00", align 1
@.str.118 = private unnamed_addr constant [24 x i8] c"invalid ..got reference\00", align 1
@.str.119 = private unnamed_addr constant [29 x i8] c"internal error elf64-hpa-903\00", align 1
@.str.120 = private unnamed_addr constant [26 x i8] c"intra-segment OUT_REL1ADR\00", align 1
@.str.121 = private unnamed_addr constant [54 x i8] c"ELF64 format does not support segment base references\00", align 1
@.str.122 = private unnamed_addr constant [56 x i8] c"ELF64 requires ..gotoff references to be qword absolute\00", align 1
@.str.123 = private unnamed_addr constant [46 x i8] c"ELF64 format does not support this use of WRT\00", align 1
@.str.124 = private unnamed_addr constant [26 x i8] c"intra-segment OUT_REL8ADR\00", align 1
@.str.125 = private unnamed_addr constant [50 x i8] c"ELF64 requires ..gotoff references to be absolute\00", align 1
@.str.126 = private unnamed_addr constant [49 x i8] c"ELF64 requires ..gottpoff references to be dword\00", align 1
@.str.127 = private unnamed_addr constant [30 x i8] c"ELFx32 (x86-64) dwarf (newer)\00", align 1
@dwarfx32_init.dwfmtx32 = internal constant %struct.dwarf_format { i16 3, [10 x i16] [i16 2, i16 0, i16 2, i16 3, i16 0, i16 0, i16 3, i16 0, i16 3, i16 0] }, align 2
@elfx32_init.ef_elfx32 = internal constant %struct.elf_format_info { i64 4, i64 52, i64 40, i64 16, i64 12, i64 12, [8 x i8] c".rela\00\00\00", i32 4, i16 62, i8 1, i8 0, void (%struct.elf_symbol*)* @elf32_sym, %struct.SAA* (%struct.elf_reloc*)* @elfx32_build_reltab }, align 8
@elfx32_out.sinfo = internal global %struct.symlininfo zeroinitializer, align 8
@.str.128 = private unnamed_addr constant [30 x i8] c"internal error elfx32-hpa-871\00", align 1
@.str.129 = private unnamed_addr constant [41 x i8] c"ELFX32 doesn't support R_X86_64_GOTOFF64\00", align 1
@.str.130 = private unnamed_addr constant [30 x i8] c"internal error elfx32-hpa-903\00", align 1
@.str.131 = private unnamed_addr constant [34 x i8] c"unsupported %d-bit ELF relocation\00", align 1
@.str.132 = private unnamed_addr constant [55 x i8] c"ELFX32 format does not support segment base references\00", align 1
@.str.133 = private unnamed_addr constant [27 x i8] c"invalid ..gotoff reference\00", align 1
@.str.134 = private unnamed_addr constant [47 x i8] c"ELFX32 format does not support this use of WRT\00", align 1
@switch.table.debug_typevalue = private unnamed_addr constant [9 x i32] [i32 1, i32 2, i32 4, i32 4, i32 8, i32 10, i32 16, i32 32, i32 64], align 4

; Function Attrs: nounwind ssp uwtable
define internal void @elf32_init() #0 {
  store %struct.elf_format_info* @elf32_init.ef_elf32, %struct.elf_format_info** @efmt, align 8
  tail call fastcc void @elf_init()
  ret void
}

declare void @null_reset() #1

declare void @nasm_do_legacy_output(%struct.out_data*) #1

; Function Attrs: nounwind ssp uwtable
define internal void @elf32_out(i32, i8*, i32, i64, i32, i32) #0 {
  %7 = alloca i32, align 4
  %8 = icmp eq i32 %0, -1
  br i1 %8, label %9, label %12

9:                                                ; preds = %6
  %10 = icmp eq i32 %2, 1
  br i1 %10, label %501, label %11

11:                                               ; preds = %9
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.24, i64 0, i64 0)) #13
  br label %501

12:                                               ; preds = %6
  %13 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %14 = ashr i32 %0, 1
  %15 = sext i32 %14 to i64
  %16 = tail call i8* @raa_read_ptr(%struct.RAA* %13, i64 %15) #13
  %17 = bitcast i8* %16 to %struct.elf_section*
  %18 = icmp eq i8* %16, null
  br i1 %18, label %19, label %31

19:                                               ; preds = %12
  %20 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #13
  store i32 -1431655766, i32* %7, align 4
  %21 = call i32 @elf_section_names(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0), i32* nonnull %7)
  %22 = icmp eq i32 %21, %0
  br i1 %22, label %24, label %23

23:                                               ; preds = %19
  tail call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26, i64 0, i64 0)) #14
  unreachable

24:                                               ; preds = %19
  %25 = load %struct.elf_section**, %struct.elf_section*** @sects, align 8
  %26 = load i32, i32* @nsects, align 4
  %27 = add nsw i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %struct.elf_section*, %struct.elf_section** %25, i64 %28
  %30 = load %struct.elf_section*, %struct.elf_section** %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #13
  br label %31

31:                                               ; preds = %12, %24
  %32 = phi %struct.elf_section* [ %17, %12 ], [ %30, %24 ]
  %33 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = trunc i64 %34 to i32
  store i32 %35, i32* getelementptr inbounds (%struct.symlininfo, %struct.symlininfo* @elf32_out.sinfo, i64 0, i32 0), align 8
  %36 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = add nsw i32 %37, -1
  store i32 %38, i32* getelementptr inbounds (%struct.symlininfo, %struct.symlininfo* @elf32_out.sinfo, i64 0, i32 1), align 4
  store i32 %0, i32* getelementptr inbounds (%struct.symlininfo, %struct.symlininfo* @elf32_out.sinfo, i64 0, i32 2), align 8
  %39 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 11
  %40 = bitcast i8** %39 to i64*
  %41 = load i64, i64* %40, align 8
  store i64 %41, i64* bitcast (i8** getelementptr inbounds (%struct.symlininfo, %struct.symlininfo* @elf32_out.sinfo, i64 0, i32 3) to i64*), align 8
  %42 = load %struct.dfmt*, %struct.dfmt** @dfmt, align 8
  %43 = getelementptr inbounds %struct.dfmt, %struct.dfmt* %42, i64 0, i32 7
  %44 = load void (i32, i8*)*, void (i32, i8*)** %43, align 8
  tail call void %44(i32 64, i8* bitcast (%struct.symlininfo* @elf32_out.sinfo to i8*)) #13
  %45 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 6
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 8
  %48 = icmp ne i32 %2, 1
  %49 = and i1 %48, %47
  br i1 %49, label %50, label %55

50:                                               ; preds = %31
  %51 = load i8*, i8** %39, align 8
  tail call void (i32, i8*, ...) @nasm_warn(i32 2228224, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.27, i64 0, i64 0), i8* %51) #13
  %52 = tail call i64 @realsize(i32 %2, i64 %3) #13
  %53 = load i64, i64* %33, align 8
  %54 = add i64 %53, %52
  store i64 %54, i64* %33, align 8
  br label %501

55:                                               ; preds = %31
  switch i32 %2, label %500 [
    i32 1, label %56
    i32 0, label %66
    i32 3, label %71
    i32 6, label %320
    i32 7, label %319
    i32 8, label %382
    i32 9, label %495
  ]

56:                                               ; preds = %55
  br i1 %47, label %63, label %57

57:                                               ; preds = %56
  %58 = load i8*, i8** %39, align 8
  tail call void (i32, i8*, ...) @nasm_warn(i32 2097152, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.28, i64 0, i64 0), i8* %58) #13
  %59 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 0
  %60 = load %struct.SAA*, %struct.SAA** %59, align 8
  tail call void @saa_wbytes(%struct.SAA* %60, i8* null, i64 %3) #13
  %61 = load i64, i64* %33, align 8
  %62 = add i64 %61, %3
  store i64 %62, i64* %33, align 8
  br label %501

63:                                               ; preds = %56
  %64 = load i64, i64* %33, align 8
  %65 = add i64 %64, %3
  store i64 %65, i64* %33, align 8
  br label %501

66:                                               ; preds = %55
  %67 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 0
  %68 = load %struct.SAA*, %struct.SAA** %67, align 8
  tail call void @saa_wbytes(%struct.SAA* %68, i8* %1, i64 %3) #13
  %69 = load i64, i64* %33, align 8
  %70 = add i64 %69, %3
  store i64 %70, i64* %33, align 8
  br label %501

71:                                               ; preds = %55
  %72 = trunc i64 %3 to i32
  %73 = icmp slt i32 %72, 0
  %74 = sub nsw i32 0, %72
  %75 = select i1 %73, i32 %74, i32 %72
  %76 = bitcast i8* %1 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = icmp eq i32 %4, -1
  br i1 %78, label %312, label %79

79:                                               ; preds = %71
  %80 = and i32 %4, 1
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %83, label %82

82:                                               ; preds = %79
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.29, i64 0, i64 0)) #13
  br label %312

83:                                               ; preds = %79
  %84 = icmp eq i32 %5, -1
  br i1 %84, label %85, label %194

85:                                               ; preds = %83
  switch i32 %75, label %309 [
    i32 1, label %86
    i32 2, label %122
    i32 4, label %158
  ]

86:                                               ; preds = %85
  %87 = tail call noalias i8* @nasm_zalloc(i64 40) #15
  %88 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 14
  %89 = bitcast %struct.elf_reloc*** %88 to i8***
  %90 = load i8**, i8*** %89, align 8
  store i8* %87, i8** %90, align 8
  %91 = bitcast %struct.elf_reloc*** %88 to i8**
  store i8* %87, i8** %91, align 8
  %92 = load i64, i64* %33, align 8
  %93 = getelementptr inbounds i8, i8* %87, i64 8
  %94 = bitcast i8* %93 to i64*
  store i64 %92, i64* %94, align 8
  %95 = getelementptr inbounds i8, i8* %87, i64 24
  %96 = bitcast i8* %95 to i64*
  store i64 0, i64* %96, align 8
  %97 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %98 = ashr i32 %4, 1
  %99 = sext i32 %98 to i64
  %100 = tail call i8* @raa_read_ptr(%struct.RAA* %97, i64 %99) #13
  %101 = icmp eq i8* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %86
  %103 = getelementptr inbounds i8, i8* %100, i64 36
  %104 = bitcast i8* %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = add nsw i32 %105, 1
  %107 = sext i32 %106 to i64
  br label %113

108:                                              ; preds = %86
  %109 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %110 = sext i32 %4 to i64
  %111 = tail call i64 @raa_read(%struct.RAA* %109, i64 %110) #13
  %112 = add nsw i64 %111, 1073741824
  br label %113

113:                                              ; preds = %102, %108
  %114 = phi i64 [ %107, %102 ], [ %112, %108 ]
  %115 = getelementptr inbounds i8, i8* %87, i64 16
  %116 = bitcast i8* %115 to i64*
  store i64 %114, i64* %116, align 8
  %117 = getelementptr inbounds i8, i8* %87, i64 32
  %118 = bitcast i8* %117 to i32*
  store i32 22, i32* %118, align 8
  %119 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 3
  %120 = load i64, i64* %119, align 8
  %121 = add i64 %120, 1
  store i64 %121, i64* %119, align 8
  br label %312

122:                                              ; preds = %85
  %123 = tail call noalias i8* @nasm_zalloc(i64 40) #15
  %124 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 14
  %125 = bitcast %struct.elf_reloc*** %124 to i8***
  %126 = load i8**, i8*** %125, align 8
  store i8* %123, i8** %126, align 8
  %127 = bitcast %struct.elf_reloc*** %124 to i8**
  store i8* %123, i8** %127, align 8
  %128 = load i64, i64* %33, align 8
  %129 = getelementptr inbounds i8, i8* %123, i64 8
  %130 = bitcast i8* %129 to i64*
  store i64 %128, i64* %130, align 8
  %131 = getelementptr inbounds i8, i8* %123, i64 24
  %132 = bitcast i8* %131 to i64*
  store i64 0, i64* %132, align 8
  %133 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %134 = ashr i32 %4, 1
  %135 = sext i32 %134 to i64
  %136 = tail call i8* @raa_read_ptr(%struct.RAA* %133, i64 %135) #13
  %137 = icmp eq i8* %136, null
  br i1 %137, label %144, label %138

138:                                              ; preds = %122
  %139 = getelementptr inbounds i8, i8* %136, i64 36
  %140 = bitcast i8* %139 to i32*
  %141 = load i32, i32* %140, align 4
  %142 = add nsw i32 %141, 1
  %143 = sext i32 %142 to i64
  br label %149

144:                                              ; preds = %122
  %145 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %146 = sext i32 %4 to i64
  %147 = tail call i64 @raa_read(%struct.RAA* %145, i64 %146) #13
  %148 = add nsw i64 %147, 1073741824
  br label %149

149:                                              ; preds = %138, %144
  %150 = phi i64 [ %143, %138 ], [ %148, %144 ]
  %151 = getelementptr inbounds i8, i8* %123, i64 16
  %152 = bitcast i8* %151 to i64*
  store i64 %150, i64* %152, align 8
  %153 = getelementptr inbounds i8, i8* %123, i64 32
  %154 = bitcast i8* %153 to i32*
  store i32 20, i32* %154, align 8
  %155 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 3
  %156 = load i64, i64* %155, align 8
  %157 = add i64 %156, 1
  store i64 %157, i64* %155, align 8
  br label %312

158:                                              ; preds = %85
  %159 = tail call noalias i8* @nasm_zalloc(i64 40) #15
  %160 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 14
  %161 = bitcast %struct.elf_reloc*** %160 to i8***
  %162 = load i8**, i8*** %161, align 8
  store i8* %159, i8** %162, align 8
  %163 = bitcast %struct.elf_reloc*** %160 to i8**
  store i8* %159, i8** %163, align 8
  %164 = load i64, i64* %33, align 8
  %165 = getelementptr inbounds i8, i8* %159, i64 8
  %166 = bitcast i8* %165 to i64*
  store i64 %164, i64* %166, align 8
  %167 = getelementptr inbounds i8, i8* %159, i64 24
  %168 = bitcast i8* %167 to i64*
  store i64 0, i64* %168, align 8
  %169 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %170 = ashr i32 %4, 1
  %171 = sext i32 %170 to i64
  %172 = tail call i8* @raa_read_ptr(%struct.RAA* %169, i64 %171) #13
  %173 = icmp eq i8* %172, null
  br i1 %173, label %180, label %174

174:                                              ; preds = %158
  %175 = getelementptr inbounds i8, i8* %172, i64 36
  %176 = bitcast i8* %175 to i32*
  %177 = load i32, i32* %176, align 4
  %178 = add nsw i32 %177, 1
  %179 = sext i32 %178 to i64
  br label %185

180:                                              ; preds = %158
  %181 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %182 = sext i32 %4 to i64
  %183 = tail call i64 @raa_read(%struct.RAA* %181, i64 %182) #13
  %184 = add nsw i64 %183, 1073741824
  br label %185

185:                                              ; preds = %174, %180
  %186 = phi i64 [ %179, %174 ], [ %184, %180 ]
  %187 = getelementptr inbounds i8, i8* %159, i64 16
  %188 = bitcast i8* %187 to i64*
  store i64 %186, i64* %188, align 8
  %189 = getelementptr inbounds i8, i8* %159, i64 32
  %190 = bitcast i8* %189 to i32*
  store i32 1, i32* %190, align 8
  %191 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 3
  %192 = load i64, i64* %191, align 8
  %193 = add i64 %192, 1
  store i64 %193, i64* %191, align 8
  br label %312

194:                                              ; preds = %83
  %195 = load i32, i32* @elf_gotpc_sect, align 4
  %196 = add nsw i32 %195, 1
  %197 = icmp eq i32 %196, %5
  br i1 %197, label %198, label %237

198:                                              ; preds = %194
  %199 = icmp eq i32 %75, 4
  %200 = load i64, i64* %33, align 8
  %201 = add i64 %200, %77
  %202 = tail call noalias i8* @nasm_zalloc(i64 40) #15
  %203 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 14
  %204 = bitcast %struct.elf_reloc*** %203 to i8***
  %205 = load i8**, i8*** %204, align 8
  store i8* %202, i8** %205, align 8
  %206 = bitcast %struct.elf_reloc*** %203 to i8**
  store i8* %202, i8** %206, align 8
  %207 = load i64, i64* %33, align 8
  %208 = getelementptr inbounds i8, i8* %202, i64 8
  %209 = bitcast i8* %208 to i64*
  store i64 %207, i64* %209, align 8
  %210 = getelementptr inbounds i8, i8* %202, i64 24
  %211 = bitcast i8* %210 to i64*
  store i64 0, i64* %211, align 8
  %212 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %213 = ashr i32 %4, 1
  %214 = sext i32 %213 to i64
  %215 = tail call i8* @raa_read_ptr(%struct.RAA* %212, i64 %214) #13
  %216 = icmp eq i8* %215, null
  br i1 %216, label %223, label %217

217:                                              ; preds = %198
  %218 = getelementptr inbounds i8, i8* %215, i64 36
  %219 = bitcast i8* %218 to i32*
  %220 = load i32, i32* %219, align 4
  %221 = add nsw i32 %220, 1
  %222 = sext i32 %221 to i64
  br label %228

223:                                              ; preds = %198
  %224 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %225 = sext i32 %4 to i64
  %226 = tail call i64 @raa_read(%struct.RAA* %224, i64 %225) #13
  %227 = add nsw i64 %226, 1073741824
  br label %228

228:                                              ; preds = %217, %223
  %229 = phi i64 [ %222, %217 ], [ %227, %223 ]
  %230 = getelementptr inbounds i8, i8* %202, i64 16
  %231 = bitcast i8* %230 to i64*
  store i64 %229, i64* %231, align 8
  %232 = getelementptr inbounds i8, i8* %202, i64 32
  %233 = bitcast i8* %232 to i32*
  store i32 10, i32* %233, align 8
  %234 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 3
  %235 = load i64, i64* %234, align 8
  %236 = add i64 %235, 1
  store i64 %236, i64* %234, align 8
  br i1 %199, label %312, label %309

237:                                              ; preds = %194
  %238 = load i32, i32* @elf_gotoff_sect, align 4
  %239 = add nsw i32 %238, 1
  %240 = icmp eq i32 %239, %5
  br i1 %240, label %241, label %278

241:                                              ; preds = %237
  %242 = icmp eq i32 %75, 4
  %243 = tail call noalias i8* @nasm_zalloc(i64 40) #15
  %244 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 14
  %245 = bitcast %struct.elf_reloc*** %244 to i8***
  %246 = load i8**, i8*** %245, align 8
  store i8* %243, i8** %246, align 8
  %247 = bitcast %struct.elf_reloc*** %244 to i8**
  store i8* %243, i8** %247, align 8
  %248 = load i64, i64* %33, align 8
  %249 = getelementptr inbounds i8, i8* %243, i64 8
  %250 = bitcast i8* %249 to i64*
  store i64 %248, i64* %250, align 8
  %251 = getelementptr inbounds i8, i8* %243, i64 24
  %252 = bitcast i8* %251 to i64*
  store i64 0, i64* %252, align 8
  %253 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %254 = ashr i32 %4, 1
  %255 = sext i32 %254 to i64
  %256 = tail call i8* @raa_read_ptr(%struct.RAA* %253, i64 %255) #13
  %257 = icmp eq i8* %256, null
  br i1 %257, label %264, label %258

258:                                              ; preds = %241
  %259 = getelementptr inbounds i8, i8* %256, i64 36
  %260 = bitcast i8* %259 to i32*
  %261 = load i32, i32* %260, align 4
  %262 = add nsw i32 %261, 1
  %263 = sext i32 %262 to i64
  br label %269

264:                                              ; preds = %241
  %265 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %266 = sext i32 %4 to i64
  %267 = tail call i64 @raa_read(%struct.RAA* %265, i64 %266) #13
  %268 = add nsw i64 %267, 1073741824
  br label %269

269:                                              ; preds = %258, %264
  %270 = phi i64 [ %263, %258 ], [ %268, %264 ]
  %271 = getelementptr inbounds i8, i8* %243, i64 16
  %272 = bitcast i8* %271 to i64*
  store i64 %270, i64* %272, align 8
  %273 = getelementptr inbounds i8, i8* %243, i64 32
  %274 = bitcast i8* %273 to i32*
  store i32 9, i32* %274, align 8
  %275 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 3
  %276 = load i64, i64* %275, align 8
  %277 = add i64 %276, 1
  store i64 %277, i64* %275, align 8
  br i1 %242, label %312, label %309

278:                                              ; preds = %237
  %279 = load i32, i32* @elf_tlsie_sect, align 4
  %280 = add nsw i32 %279, 1
  %281 = icmp eq i32 %280, %5
  br i1 %281, label %282, label %285

282:                                              ; preds = %278
  %283 = icmp eq i32 %75, 4
  %284 = tail call fastcc i64 @elf_add_gsym_reloc(%struct.elf_section* %32, i32 %4, i64 %77, i64 0, i32 15, i1 zeroext true)
  br i1 %283, label %312, label %309

285:                                              ; preds = %278
  %286 = load i32, i32* @elf_got_sect, align 4
  %287 = add nsw i32 %286, 1
  %288 = icmp eq i32 %287, %5
  br i1 %288, label %306, label %289

289:                                              ; preds = %285
  %290 = load i32, i32* @elf_sym_sect, align 4
  %291 = add nsw i32 %290, 1
  %292 = icmp eq i32 %291, %5
  br i1 %292, label %293, label %300

293:                                              ; preds = %289
  switch i32 %75, label %309 [
    i32 1, label %294
    i32 2, label %296
    i32 4, label %298
  ]

294:                                              ; preds = %293
  %295 = tail call fastcc i64 @elf_add_gsym_reloc(%struct.elf_section* %32, i32 %4, i64 %77, i64 0, i32 22, i1 zeroext false)
  br label %312

296:                                              ; preds = %293
  %297 = tail call fastcc i64 @elf_add_gsym_reloc(%struct.elf_section* %32, i32 %4, i64 %77, i64 0, i32 20, i1 zeroext false)
  br label %312

298:                                              ; preds = %293
  %299 = tail call fastcc i64 @elf_add_gsym_reloc(%struct.elf_section* %32, i32 %4, i64 %77, i64 0, i32 1, i1 zeroext false)
  br label %312

300:                                              ; preds = %289
  %301 = load i32, i32* @elf_plt_sect, align 4
  %302 = add nsw i32 %301, 1
  %303 = icmp eq i32 %302, %5
  br i1 %303, label %304, label %305

304:                                              ; preds = %300
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.30, i64 0, i64 0)) #13
  br label %312

305:                                              ; preds = %300
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.31, i64 0, i64 0)) #13
  br label %312

306:                                              ; preds = %285
  %307 = icmp eq i32 %75, 4
  %308 = tail call fastcc i64 @elf_add_gsym_reloc(%struct.elf_section* %32, i32 %4, i64 %77, i64 0, i32 3, i1 zeroext true)
  br i1 %307, label %312, label %309

309:                                              ; preds = %228, %269, %282, %306, %293, %85
  %310 = phi i64 [ %308, %306 ], [ %201, %228 ], [ %77, %269 ], [ %284, %282 ], [ %77, %85 ], [ %77, %293 ]
  %311 = shl i32 %75, 3
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.32, i64 0, i64 0), i32 %311) #13
  br label %312

312:                                              ; preds = %228, %269, %282, %306, %71, %305, %304, %294, %296, %298, %113, %149, %185, %82, %309
  %313 = phi i64 [ %310, %309 ], [ %308, %306 ], [ %201, %228 ], [ %77, %269 ], [ %284, %282 ], [ %77, %71 ], [ %77, %305 ], [ %77, %304 ], [ %295, %294 ], [ %297, %296 ], [ %299, %298 ], [ %77, %113 ], [ %77, %149 ], [ %77, %185 ], [ %77, %82 ]
  %314 = zext i32 %75 to i64
  %315 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 0
  %316 = load %struct.SAA*, %struct.SAA** %315, align 8
  tail call void @saa_writeaddr(%struct.SAA* %316, i64 %313, i64 %314) #13
  %317 = load i64, i64* %33, align 8
  %318 = add i64 %317, %314
  store i64 %318, i64* %33, align 8
  br label %501

319:                                              ; preds = %55
  br label %320

320:                                              ; preds = %55, %319
  %321 = phi i32 [ 21, %319 ], [ 23, %55 ]
  %322 = phi i32 [ 2, %319 ], [ 1, %55 ]
  %323 = bitcast i8* %1 to i64*
  %324 = load i64, i64* %323, align 8
  %325 = sub i64 %324, %3
  %326 = icmp eq i32 %4, %0
  br i1 %326, label %327, label %328, !prof !2

327:                                              ; preds = %320
  tail call void @nasm_assert_failed(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.33, i64 0, i64 0), i32 1262, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34, i64 0, i64 0)) #14
  unreachable

328:                                              ; preds = %320
  %329 = icmp eq i32 %4, -1
  %330 = and i32 %4, 1
  %331 = icmp eq i32 %330, 0
  %332 = or i1 %329, %331
  br i1 %332, label %334, label %333

333:                                              ; preds = %328
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.29, i64 0, i64 0)) #13
  br label %376

334:                                              ; preds = %328
  %335 = icmp eq i32 %5, -1
  br i1 %335, label %336, label %374

336:                                              ; preds = %334
  %337 = tail call noalias i8* @nasm_zalloc(i64 40) #15
  %338 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 14
  %339 = bitcast %struct.elf_reloc*** %338 to i8***
  %340 = load i8**, i8*** %339, align 8
  store i8* %337, i8** %340, align 8
  %341 = bitcast %struct.elf_reloc*** %338 to i8**
  store i8* %337, i8** %341, align 8
  %342 = load i64, i64* %33, align 8
  %343 = getelementptr inbounds i8, i8* %337, i64 8
  %344 = bitcast i8* %343 to i64*
  store i64 %342, i64* %344, align 8
  %345 = getelementptr inbounds i8, i8* %337, i64 24
  %346 = bitcast i8* %345 to i64*
  store i64 0, i64* %346, align 8
  br i1 %329, label %368, label %347

347:                                              ; preds = %336
  %348 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %349 = ashr i32 %4, 1
  %350 = sext i32 %349 to i64
  %351 = tail call i8* @raa_read_ptr(%struct.RAA* %348, i64 %350) #13
  %352 = icmp eq i8* %351, null
  br i1 %352, label %359, label %353

353:                                              ; preds = %347
  %354 = getelementptr inbounds i8, i8* %351, i64 36
  %355 = bitcast i8* %354 to i32*
  %356 = load i32, i32* %355, align 4
  %357 = add nsw i32 %356, 1
  %358 = sext i32 %357 to i64
  br label %364

359:                                              ; preds = %347
  %360 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %361 = sext i32 %4 to i64
  %362 = tail call i64 @raa_read(%struct.RAA* %360, i64 %361) #13
  %363 = add nsw i64 %362, 1073741824
  br label %364

364:                                              ; preds = %359, %353
  %365 = phi i64 [ %358, %353 ], [ %363, %359 ]
  %366 = getelementptr inbounds i8, i8* %337, i64 16
  %367 = bitcast i8* %366 to i64*
  store i64 %365, i64* %367, align 8
  br label %368

368:                                              ; preds = %364, %336
  %369 = getelementptr inbounds i8, i8* %337, i64 32
  %370 = bitcast i8* %369 to i32*
  store i32 %321, i32* %370, align 8
  %371 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 3
  %372 = load i64, i64* %371, align 8
  %373 = add i64 %372, 1
  store i64 %373, i64* %371, align 8
  br label %376

374:                                              ; preds = %334
  %375 = shl nuw nsw i32 %322, 3
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.32, i64 0, i64 0), i32 %375) #13
  br label %376

376:                                              ; preds = %368, %374, %333
  %377 = zext i32 %322 to i64
  %378 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 0
  %379 = load %struct.SAA*, %struct.SAA** %378, align 8
  tail call void @saa_writeaddr(%struct.SAA* %379, i64 %325, i64 %377) #13
  %380 = load i64, i64* %33, align 8
  %381 = add i64 %380, %377
  store i64 %381, i64* %33, align 8
  br label %501

382:                                              ; preds = %55
  %383 = bitcast i8* %1 to i64*
  %384 = load i64, i64* %383, align 8
  %385 = sub i64 %384, %3
  %386 = icmp eq i32 %4, %0
  br i1 %386, label %387, label %388

387:                                              ; preds = %382
  tail call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.35, i64 0, i64 0)) #14
  unreachable

388:                                              ; preds = %382
  %389 = icmp eq i32 %4, -1
  %390 = and i32 %4, 1
  %391 = icmp eq i32 %390, 0
  %392 = or i1 %389, %391
  br i1 %392, label %394, label %393

393:                                              ; preds = %388
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.29, i64 0, i64 0)) #13
  br label %490

394:                                              ; preds = %388
  %395 = icmp eq i32 %5, -1
  br i1 %395, label %396, label %434

396:                                              ; preds = %394
  %397 = tail call noalias i8* @nasm_zalloc(i64 40) #15
  %398 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 14
  %399 = bitcast %struct.elf_reloc*** %398 to i8***
  %400 = load i8**, i8*** %399, align 8
  store i8* %397, i8** %400, align 8
  %401 = bitcast %struct.elf_reloc*** %398 to i8**
  store i8* %397, i8** %401, align 8
  %402 = load i64, i64* %33, align 8
  %403 = getelementptr inbounds i8, i8* %397, i64 8
  %404 = bitcast i8* %403 to i64*
  store i64 %402, i64* %404, align 8
  %405 = getelementptr inbounds i8, i8* %397, i64 24
  %406 = bitcast i8* %405 to i64*
  store i64 0, i64* %406, align 8
  br i1 %389, label %428, label %407

407:                                              ; preds = %396
  %408 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %409 = ashr i32 %4, 1
  %410 = sext i32 %409 to i64
  %411 = tail call i8* @raa_read_ptr(%struct.RAA* %408, i64 %410) #13
  %412 = icmp eq i8* %411, null
  br i1 %412, label %419, label %413

413:                                              ; preds = %407
  %414 = getelementptr inbounds i8, i8* %411, i64 36
  %415 = bitcast i8* %414 to i32*
  %416 = load i32, i32* %415, align 4
  %417 = add nsw i32 %416, 1
  %418 = sext i32 %417 to i64
  br label %424

419:                                              ; preds = %407
  %420 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %421 = sext i32 %4 to i64
  %422 = tail call i64 @raa_read(%struct.RAA* %420, i64 %421) #13
  %423 = add nsw i64 %422, 1073741824
  br label %424

424:                                              ; preds = %419, %413
  %425 = phi i64 [ %418, %413 ], [ %423, %419 ]
  %426 = getelementptr inbounds i8, i8* %397, i64 16
  %427 = bitcast i8* %426 to i64*
  store i64 %425, i64* %427, align 8
  br label %428

428:                                              ; preds = %424, %396
  %429 = getelementptr inbounds i8, i8* %397, i64 32
  %430 = bitcast i8* %429 to i32*
  store i32 2, i32* %430, align 8
  %431 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 3
  %432 = load i64, i64* %431, align 8
  %433 = add i64 %432, 1
  store i64 %433, i64* %431, align 8
  br label %490

434:                                              ; preds = %394
  %435 = load i32, i32* @elf_plt_sect, align 4
  %436 = add nsw i32 %435, 1
  %437 = icmp eq i32 %436, %5
  br i1 %437, label %438, label %476

438:                                              ; preds = %434
  %439 = tail call noalias i8* @nasm_zalloc(i64 40) #15
  %440 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 14
  %441 = bitcast %struct.elf_reloc*** %440 to i8***
  %442 = load i8**, i8*** %441, align 8
  store i8* %439, i8** %442, align 8
  %443 = bitcast %struct.elf_reloc*** %440 to i8**
  store i8* %439, i8** %443, align 8
  %444 = load i64, i64* %33, align 8
  %445 = getelementptr inbounds i8, i8* %439, i64 8
  %446 = bitcast i8* %445 to i64*
  store i64 %444, i64* %446, align 8
  %447 = getelementptr inbounds i8, i8* %439, i64 24
  %448 = bitcast i8* %447 to i64*
  store i64 0, i64* %448, align 8
  br i1 %389, label %470, label %449

449:                                              ; preds = %438
  %450 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %451 = ashr i32 %4, 1
  %452 = sext i32 %451 to i64
  %453 = tail call i8* @raa_read_ptr(%struct.RAA* %450, i64 %452) #13
  %454 = icmp eq i8* %453, null
  br i1 %454, label %461, label %455

455:                                              ; preds = %449
  %456 = getelementptr inbounds i8, i8* %453, i64 36
  %457 = bitcast i8* %456 to i32*
  %458 = load i32, i32* %457, align 4
  %459 = add nsw i32 %458, 1
  %460 = sext i32 %459 to i64
  br label %466

461:                                              ; preds = %449
  %462 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %463 = sext i32 %4 to i64
  %464 = tail call i64 @raa_read(%struct.RAA* %462, i64 %463) #13
  %465 = add nsw i64 %464, 1073741824
  br label %466

466:                                              ; preds = %461, %455
  %467 = phi i64 [ %460, %455 ], [ %465, %461 ]
  %468 = getelementptr inbounds i8, i8* %439, i64 16
  %469 = bitcast i8* %468 to i64*
  store i64 %467, i64* %469, align 8
  br label %470

470:                                              ; preds = %466, %438
  %471 = getelementptr inbounds i8, i8* %439, i64 32
  %472 = bitcast i8* %471 to i32*
  store i32 4, i32* %472, align 8
  %473 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 3
  %474 = load i64, i64* %473, align 8
  %475 = add i64 %474, 1
  store i64 %475, i64* %473, align 8
  br label %490

476:                                              ; preds = %434
  %477 = load i32, i32* @elf_gotpc_sect, align 4
  %478 = add nsw i32 %477, 1
  %479 = icmp eq i32 %478, %5
  br i1 %479, label %488, label %480

480:                                              ; preds = %476
  %481 = load i32, i32* @elf_gotoff_sect, align 4
  %482 = add nsw i32 %481, 1
  %483 = icmp eq i32 %482, %5
  br i1 %483, label %488, label %484

484:                                              ; preds = %480
  %485 = load i32, i32* @elf_got_sect, align 4
  %486 = add nsw i32 %485, 1
  %487 = icmp eq i32 %486, %5
  br i1 %487, label %488, label %489

488:                                              ; preds = %484, %480, %476
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.36, i64 0, i64 0)) #13
  br label %490

489:                                              ; preds = %484
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.31, i64 0, i64 0)) #13
  br label %490

490:                                              ; preds = %428, %488, %489, %470, %393
  %491 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 0
  %492 = load %struct.SAA*, %struct.SAA** %491, align 8
  tail call void @saa_writeaddr(%struct.SAA* %492, i64 %385, i64 4) #13
  %493 = load i64, i64* %33, align 8
  %494 = add i64 %493, 4
  store i64 %494, i64* %33, align 8
  br label %501

495:                                              ; preds = %55
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.37, i64 0, i64 0)) #13
  %496 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 0
  %497 = load %struct.SAA*, %struct.SAA** %496, align 8
  tail call void @saa_writeaddr(%struct.SAA* %497, i64 0, i64 8) #13
  %498 = load i64, i64* %33, align 8
  %499 = add i64 %498, 8
  store i64 %499, i64* %33, align 8
  br label %501

500:                                              ; preds = %55
  tail call void @nasm_panic_from_macro(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.33, i64 0, i64 0), i32 1309) #14
  unreachable

501:                                              ; preds = %66, %312, %376, %490, %495, %63, %57, %11, %9, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @elf_deflabel(i8*, i32, i64, i32, i8*) #0 {
  %6 = alloca %struct.tokenval, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8, align 1
  %9 = alloca %struct.tokenval, align 8
  %10 = alloca i32, align 4
  %11 = load i32, i32* @strslen, align 4
  %12 = tail call i8* @nasm_skip_spaces(i8* %4) #13
  %13 = load i32, i32* @debug_nasm, align 4
  %14 = icmp ugt i32 %13, 1
  br i1 %14, label %15, label %16

15:                                               ; preds = %5
  tail call void (i8*, ...) @nasm_debug(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.40, i64 0, i64 0), i8* %0, i32 %1, i64 %2, i32 %3, i8* %4) #13
  br label %16

16:                                               ; preds = %15, %5
  %17 = load i8, i8* %0, align 1
  %18 = icmp eq i8 %17, 46
  br i1 %18, label %19, label %49

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i64 1
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 46
  br i1 %22, label %23, label %49

23:                                               ; preds = %19
  %24 = getelementptr inbounds i8, i8* %0, i64 2
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 64
  br i1 %26, label %49, label %27

27:                                               ; preds = %23
  %28 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0)) #16
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %321, label %30

30:                                               ; preds = %27
  %31 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i64 0, i64 0)) #16
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %321, label %33

33:                                               ; preds = %30
  %34 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0)) #16
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %321, label %36

36:                                               ; preds = %33
  %37 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0)) #16
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %321, label %39

39:                                               ; preds = %36
  %40 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0)) #16
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %321, label %42

42:                                               ; preds = %39
  %43 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0)) #16
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %321, label %45

45:                                               ; preds = %42
  %46 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #16
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %321, label %48

48:                                               ; preds = %45
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.41, i64 0, i64 0), i8* %0) #13
  br label %321

49:                                               ; preds = %23, %19, %16
  %50 = icmp eq i32 %3, 3
  br i1 %50, label %51, label %96

51:                                               ; preds = %49
  %52 = load %struct.elf_symbol*, %struct.elf_symbol** @fwds, align 8
  %53 = icmp eq %struct.elf_symbol* %52, null
  br i1 %53, label %321, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct.elf_symbol, %struct.elf_symbol* %52, i64 0, i32 8
  %56 = load i8*, i8** %55, align 8
  %57 = tail call i32 @strcmp(i8* %56, i8* %0) #16
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %54, %64
  %60 = phi %struct.elf_symbol* [ %62, %64 ], [ %52, %54 ]
  %61 = getelementptr inbounds %struct.elf_symbol, %struct.elf_symbol* %60, i64 0, i32 7
  %62 = load %struct.elf_symbol*, %struct.elf_symbol** %61, align 8
  %63 = icmp eq %struct.elf_symbol* %62, null
  br i1 %63, label %321, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %struct.elf_symbol, %struct.elf_symbol* %62, i64 0, i32 8
  %66 = load i8*, i8** %65, align 8
  %67 = tail call i32 @strcmp(i8* %66, i8* %0) #16
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %59

69:                                               ; preds = %64
  %70 = getelementptr inbounds %struct.elf_symbol, %struct.elf_symbol* %60, i64 0, i32 7
  br label %71

71:                                               ; preds = %69, %54
  %72 = phi %struct.elf_symbol** [ @fwds, %54 ], [ %70, %69 ]
  %73 = bitcast %struct.tokenval* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %73) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 32, i1 false)
  %74 = tail call i8* @nasm_skip_word(i8* %4) #13
  %75 = tail call i8* @nasm_skip_spaces(i8* %74) #13
  tail call void @stdscan_reset() #13
  tail call void @stdscan_set(i8* %75) #13
  %76 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %6, i64 0, i32 3
  store i32 -1, i32* %76, align 8
  %77 = call %struct.expr* @evaluate(i32 (i8*, %struct.tokenval*)* nonnull @stdscan, i8* null, %struct.tokenval* nonnull %6, i32* null, i1 zeroext true, %struct.eval_hints* null) #13
  %78 = icmp eq %struct.expr* %77, null
  br i1 %78, label %87, label %79

79:                                               ; preds = %71
  %80 = call zeroext i1 @is_simple(%struct.expr* nonnull %77) #13
  br i1 %80, label %82, label %81

81:                                               ; preds = %79
  call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.42, i64 0, i64 0)) #13
  br label %87

82:                                               ; preds = %79
  %83 = call i64 @reloc_value(%struct.expr* nonnull %77) #13
  %84 = trunc i64 %83 to i32
  %85 = load %struct.elf_symbol*, %struct.elf_symbol** %72, align 8
  %86 = getelementptr inbounds %struct.elf_symbol, %struct.elf_symbol* %85, i64 0, i32 5
  store i32 %84, i32* %86, align 8
  br label %87

87:                                               ; preds = %71, %81, %82
  %88 = load %struct.elf_symbol*, %struct.elf_symbol** %72, align 8
  %89 = getelementptr inbounds %struct.elf_symbol, %struct.elf_symbol* %88, i64 0, i32 8
  %90 = load i8*, i8** %89, align 8
  call void @nasm_free(i8* %90) #13
  %91 = load %struct.elf_symbol*, %struct.elf_symbol** %72, align 8
  %92 = getelementptr inbounds %struct.elf_symbol, %struct.elf_symbol* %91, i64 0, i32 7
  %93 = bitcast %struct.elf_symbol** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %struct.elf_symbol** %72 to i64*
  store i64 %94, i64* %95, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %73) #13
  br label %321

96:                                               ; preds = %49
  %97 = load %struct.SAA*, %struct.SAA** @strs, align 8
  %98 = tail call i64 @strlen(i8* %0) #16
  %99 = shl i64 %98, 32
  %100 = add i64 %99, 4294967296
  %101 = ashr exact i64 %100, 32
  tail call void @saa_wbytes(%struct.SAA* %97, i8* %0, i64 %101) #13
  %102 = tail call i64 @strlen(i8* %0) #16
  %103 = load i32, i32* @strslen, align 4
  %104 = trunc i64 %102 to i32
  %105 = add i32 %104, 1
  %106 = add i32 %105, %103
  store i32 %106, i32* @strslen, align 4
  %107 = load %struct.SAA*, %struct.SAA** @syms, align 8
  %108 = tail call i8* @saa_wstruct(%struct.SAA* %107) #13
  store i8* %108, i8** bitcast (%struct.elf_symbol** @lastsym to i8**), align 8
  %109 = bitcast i8* %108 to %struct.rbtree*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %108, i8 0, i64 32, i1 false)
  %110 = getelementptr inbounds i8, i8* %108, i64 32
  %111 = bitcast i8* %110 to i32*
  store i32 %11, i32* %111, align 8
  %112 = icmp ne i32 %3, 0
  %113 = zext i1 %112 to i32
  %114 = getelementptr inbounds i8, i8* %108, i64 44
  %115 = bitcast i8* %114 to i32*
  store i32 0, i32* %115, align 4
  %116 = getelementptr inbounds i8, i8* %108, i64 48
  %117 = bitcast i8* %116 to i32*
  store i32 0, i32* %117, align 8
  %118 = icmp eq i32 %1, -1
  %119 = getelementptr inbounds i8, i8* %108, i64 36
  %120 = bitcast i8* %119 to i32*
  br i1 %118, label %141, label %121

121:                                              ; preds = %96
  store i32 0, i32* %120, align 4
  %122 = load i32, i32* @def_seg, align 4
  %123 = icmp eq i32 %122, %1
  br i1 %123, label %124, label %130

124:                                              ; preds = %121
  %125 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %125) #13
  store i32 -1431655766, i32* %7, align 4
  %126 = call i32 @elf_section_names(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0), i32* nonnull %7)
  %127 = icmp eq i32 %126, %1
  br i1 %127, label %129, label %128

128:                                              ; preds = %124
  tail call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26, i64 0, i64 0)) #14
  unreachable

129:                                              ; preds = %124
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %125) #13
  br label %130

130:                                              ; preds = %129, %121
  %131 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %132 = ashr i32 %1, 1
  %133 = sext i32 %132 to i64
  %134 = tail call i8* @raa_read_ptr(%struct.RAA* %131, i64 %133) #13
  %135 = icmp eq i8* %134, null
  br i1 %135, label %144, label %136

136:                                              ; preds = %130
  %137 = bitcast i8* %134 to %struct.elf_section*
  %138 = getelementptr inbounds i8, i8* %134, i64 36
  %139 = bitcast i8* %138 to i32*
  %140 = load i32, i32* %139, align 4
  br label %141

141:                                              ; preds = %96, %136
  %142 = phi i32 [ %140, %136 ], [ -15, %96 ]
  %143 = phi %struct.elf_section* [ %137, %136 ], [ null, %96 ]
  store i32 %142, i32* %120, align 4
  br label %144

144:                                              ; preds = %141, %130
  %145 = phi %struct.elf_section* [ null, %130 ], [ %143, %141 ]
  %146 = icmp eq i32 %3, 2
  br i1 %146, label %147, label %163

147:                                              ; preds = %144
  %148 = trunc i64 %2 to i32
  store i32 %148, i32* %117, align 8
  %149 = bitcast i8* %108 to i64*
  store i64 0, i64* %149, align 8
  store i32 -14, i32* %120, align 4
  %150 = icmp eq i8* %12, null
  br i1 %150, label %271, label %151

151:                                              ; preds = %147
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #13
  store i8 -86, i8* %8, align 1
  %152 = call i64 @readnum(i8* nonnull %12, i8* nonnull %8) #13
  store i64 %152, i64* %149, align 8
  %153 = load i8, i8* %8, align 1, !range !3
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %155, label %158

155:                                              ; preds = %151
  %156 = call i64 @llvm.ctpop.i64(i64 %152), !range !4
  %157 = icmp eq i64 %156, 1
  br i1 %157, label %160, label %158

158:                                              ; preds = %155, %151
  %159 = phi i8* [ getelementptr inbounds ([48 x i8], [48 x i8]* @.str.43, i64 0, i64 0), %151 ], [ getelementptr inbounds ([48 x i8], [48 x i8]* @.str.44, i64 0, i64 0), %155 ]
  call void (i8*, ...) @nasm_nonfatal(i8* %159, i8* %4) #13
  br label %160

160:                                              ; preds = %158, %155
  %161 = call i8* @nasm_skip_word(i8* nonnull %12) #13
  %162 = call i8* @nasm_skip_spaces(i8* %161) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #13
  br label %168

163:                                              ; preds = %144
  %164 = load i32, i32* %120, align 4
  %165 = icmp eq i32 %164, 0
  %166 = select i1 %165, i64 0, i64 %2
  %167 = bitcast i8* %108 to i64*
  store i64 %166, i64* %167, align 8
  br label %168

168:                                              ; preds = %160, %163
  %169 = phi i8* [ %162, %160 ], [ %12, %163 ]
  %170 = icmp eq i8* %169, null
  br i1 %170, label %271, label %171

171:                                              ; preds = %168
  %172 = load i8, i8* %169, align 1
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %271, label %174

174:                                              ; preds = %171, %229
  %175 = phi i8 [ %224, %229 ], [ 1, %171 ]
  %176 = phi i32 [ %223, %229 ], [ 0, %171 ]
  %177 = phi i32 [ %222, %229 ], [ %113, %171 ]
  %178 = phi i8* [ %230, %229 ], [ %169, %171 ]
  %179 = call i8* @nasm_skip_word(i8* %178) #13
  %180 = ptrtoint i8* %179 to i64
  %181 = ptrtoint i8* %178 to i64
  %182 = sub i64 %180, %181
  switch i64 %182, label %233 [
    i64 4, label %183
    i64 6, label %191
    i64 7, label %206
    i64 8, label %210
    i64 9, label %217
  ]

183:                                              ; preds = %174
  %184 = call i32 @strncasecmp(i8* %178, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0), i64 4) #16
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %221, label %186

186:                                              ; preds = %183
  %187 = call i32 @strncasecmp(i8* %178, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0), i64 4) #16
  %188 = icmp eq i32 %187, 0
  %189 = select i1 %188, i32 2, i32 %177
  %190 = select i1 %188, i8 %175, i8 0
  br label %221

191:                                              ; preds = %174
  %192 = call i32 @strncasecmp(i8* %178, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i64 0, i64 0), i64 6) #16
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %221, label %194

194:                                              ; preds = %191
  %195 = call i32 @strncasecmp(i8* %178, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i64 0, i64 0), i64 6) #16
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %221, label %197

197:                                              ; preds = %194
  %198 = call i32 @strncasecmp(i8* %178, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49, i64 0, i64 0), i64 6) #16
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %197
  store i32 2, i32* %115, align 4
  br label %221

201:                                              ; preds = %197
  %202 = call i32 @strncasecmp(i8* %178, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i64 0, i64 0), i64 6) #16
  %203 = icmp eq i32 %202, 0
  %204 = select i1 %203, i32 1, i32 %177
  %205 = select i1 %203, i8 %175, i8 0
  br label %221

206:                                              ; preds = %174
  %207 = call i32 @strncasecmp(i8* %178, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i64 0, i64 0), i64 7) #16
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %233

209:                                              ; preds = %206
  store i32 0, i32* %115, align 4
  br label %221

210:                                              ; preds = %174
  %211 = call i32 @strncasecmp(i8* %178, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i64 0, i64 0), i64 8) #16
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %221, label %213

213:                                              ; preds = %210
  %214 = call i32 @strcasecmp(i8* %178, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.53, i64 0, i64 0)) #16
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %233

216:                                              ; preds = %213
  store i32 1, i32* %115, align 4
  br label %221

217:                                              ; preds = %174
  %218 = call i32 @strncasecmp(i8* %178, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.54, i64 0, i64 0), i64 9) #16
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %233

220:                                              ; preds = %217
  store i32 3, i32* %115, align 4
  br label %221

221:                                              ; preds = %210, %201, %194, %191, %186, %183, %220, %216, %209, %200
  %222 = phi i32 [ %177, %220 ], [ %177, %216 ], [ %177, %209 ], [ %177, %200 ], [ %177, %183 ], [ %189, %186 ], [ %177, %191 ], [ %177, %194 ], [ %204, %201 ], [ %177, %210 ]
  %223 = phi i32 [ %176, %220 ], [ %176, %216 ], [ %176, %209 ], [ %176, %200 ], [ 1, %183 ], [ %176, %186 ], [ 0, %191 ], [ 1, %194 ], [ %176, %201 ], [ 2, %210 ]
  %224 = phi i8 [ %175, %220 ], [ %175, %216 ], [ %175, %209 ], [ %175, %200 ], [ %175, %183 ], [ %190, %186 ], [ %175, %191 ], [ %175, %194 ], [ %205, %201 ], [ %175, %210 ]
  %225 = and i8 %224, 1
  %226 = icmp eq i8 %225, 0
  br i1 %226, label %229, label %227

227:                                              ; preds = %221
  %228 = call i8* @nasm_skip_spaces(i8* %179) #13
  br label %229

229:                                              ; preds = %221, %227
  %230 = phi i8* [ %228, %227 ], [ %178, %221 ]
  %231 = and i8 %224, 1
  %232 = icmp eq i8 %231, 0
  br i1 %232, label %233, label %174

233:                                              ; preds = %174, %217, %213, %206, %229
  %234 = phi i8* [ %230, %229 ], [ %178, %206 ], [ %178, %213 ], [ %178, %217 ], [ %178, %174 ]
  %235 = phi i32 [ %222, %229 ], [ %177, %206 ], [ %177, %213 ], [ %177, %217 ], [ %177, %174 ]
  %236 = phi i32 [ %223, %229 ], [ %176, %206 ], [ %176, %213 ], [ %176, %217 ], [ %176, %174 ]
  %237 = icmp eq i32 %3, 0
  %238 = icmp ne i32 %235, 0
  %239 = and i1 %237, %238
  br i1 %239, label %240, label %241

240:                                              ; preds = %233
  call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.55, i64 0, i64 0)) #13
  br label %241

241:                                              ; preds = %233, %240
  %242 = phi i32 [ 0, %240 ], [ %235, %233 ]
  %243 = icmp eq i8* %234, null
  br i1 %243, label %271, label %244

244:                                              ; preds = %241
  %245 = load i8, i8* %234, align 1
  %246 = icmp eq i8 %245, 0
  br i1 %246, label %271, label %247

247:                                              ; preds = %244
  %248 = bitcast %struct.tokenval* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %248) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %248, i8 -86, i64 32, i1 false)
  %249 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %249) #13
  store i32 0, i32* %10, align 4
  %250 = call i8* @stdscan_get() #13
  call void @stdscan_reset() #13
  call void @stdscan_set(i8* nonnull %234) #13
  %251 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %9, i64 0, i32 3
  store i32 -1, i32* %251, align 8
  %252 = call %struct.expr* @evaluate(i32 (i8*, %struct.tokenval*)* nonnull @stdscan, i8* null, %struct.tokenval* nonnull %9, i32* nonnull %10, i1 zeroext false, %struct.eval_hints* null) #13
  %253 = load i32, i32* %10, align 4
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %262, label %255

255:                                              ; preds = %247
  %256 = load i64, i64* bitcast (%struct.elf_symbol** @fwds to i64*), align 8
  %257 = getelementptr inbounds i8, i8* %108, i64 56
  %258 = bitcast i8* %257 to i64*
  store i64 %256, i64* %258, align 8
  store i8* %108, i8** bitcast (%struct.elf_symbol** @fwds to i8**), align 8
  %259 = call noalias i8* @nasm_strdup(i8* %0) #13
  %260 = getelementptr inbounds i8, i8* %108, i64 64
  %261 = bitcast i8* %260 to i8**
  store i8* %259, i8** %261, align 8
  br label %270

262:                                              ; preds = %247
  %263 = icmp eq %struct.expr* %252, null
  br i1 %263, label %270, label %264

264:                                              ; preds = %262
  %265 = call zeroext i1 @is_simple(%struct.expr* nonnull %252) #13
  br i1 %265, label %267, label %266

266:                                              ; preds = %264
  call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.42, i64 0, i64 0)) #13
  br label %270

267:                                              ; preds = %264
  %268 = call i64 @reloc_value(%struct.expr* nonnull %252) #13
  %269 = trunc i64 %268 to i32
  store i32 %269, i32* %117, align 8
  br label %270

270:                                              ; preds = %262, %267, %266, %255
  call void @stdscan_set(i8* %250) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %249) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %248) #13
  br label %271

271:                                              ; preds = %147, %270, %241, %244, %171, %168
  %272 = phi i32 [ %113, %171 ], [ %113, %168 ], [ %242, %244 ], [ %242, %241 ], [ %242, %270 ], [ %113, %147 ]
  %273 = phi i32 [ 0, %171 ], [ 0, %168 ], [ %236, %244 ], [ %236, %241 ], [ %236, %270 ], [ 0, %147 ]
  %274 = icmp eq %struct.elf_section* %145, null
  br i1 %274, label %281, label %275

275:                                              ; preds = %271
  %276 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %145, i64 0, i32 8
  %277 = load i64, i64* %276, align 8
  %278 = and i64 %277, 1024
  %279 = icmp eq i64 %278, 0
  %280 = select i1 %279, i32 %273, i32 6
  br label %281

281:                                              ; preds = %275, %271
  %282 = phi i32 [ %273, %271 ], [ %280, %275 ]
  %283 = shl i32 %272, 4
  %284 = and i32 %282, 15
  %285 = or i32 %284, %283
  %286 = getelementptr inbounds i8, i8* %108, i64 40
  %287 = bitcast i8* %286 to i32*
  store i32 %285, i32* %287, align 8
  %288 = icmp ult i32 %285, 16
  br i1 %288, label %289, label %292

289:                                              ; preds = %281
  %290 = load i32, i32* @nlocals, align 4
  %291 = add i32 %290, 1
  store i32 %291, i32* @nlocals, align 4
  br label %321

292:                                              ; preds = %281
  %293 = load i32, i32* %120, align 4
  switch i32 %293, label %300 [
    i32 0, label %294
    i32 -14, label %294
    i32 -15, label %316
  ]

294:                                              ; preds = %292, %292
  %295 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %296 = sext i32 %1 to i64
  %297 = load i32, i32* @nglobs, align 4
  %298 = zext i32 %297 to i64
  %299 = call %struct.RAA* @raa_write(%struct.RAA* %295, i64 %296, i64 %298) #13
  store %struct.RAA* %299, %struct.RAA** @bsym, align 8
  br label %316

300:                                              ; preds = %292
  %301 = load %struct.elf_section**, %struct.elf_section*** @sects, align 8
  %302 = add nsw i32 %293, -1
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds %struct.elf_section*, %struct.elf_section** %301, i64 %303
  %305 = load %struct.elf_section*, %struct.elf_section** %304, align 8
  %306 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %305, i64 0, i32 15
  %307 = load %struct.rbtree*, %struct.rbtree** %306, align 8
  %308 = call %struct.rbtree* @rb_insert(%struct.rbtree* %307, %struct.rbtree* %109) #13
  %309 = load %struct.elf_section**, %struct.elf_section*** @sects, align 8
  %310 = load i32, i32* %120, align 4
  %311 = add nsw i32 %310, -1
  %312 = sext i32 %311 to i64
  %313 = getelementptr inbounds %struct.elf_section*, %struct.elf_section** %309, i64 %312
  %314 = load %struct.elf_section*, %struct.elf_section** %313, align 8
  %315 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %314, i64 0, i32 15
  store %struct.rbtree* %308, %struct.rbtree** %315, align 8
  br label %316

316:                                              ; preds = %292, %300, %294
  %317 = load i32, i32* @nglobs, align 4
  %318 = getelementptr inbounds i8, i8* %108, i64 52
  %319 = bitcast i8* %318 to i32*
  store i32 %317, i32* %319, align 4
  %320 = add i32 %317, 1
  store i32 %320, i32* @nglobs, align 4
  br label %321

321:                                              ; preds = %59, %51, %289, %316, %87, %48, %27, %30, %33, %36, %39, %42, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @elf_section_names(i8*, i32* nocapture) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.hash_insert, align 8
  %8 = bitcast %struct.hash_insert* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #13
  %9 = icmp eq i8* %0, null
  %10 = bitcast %struct.hash_insert* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false)
  br i1 %9, label %11, label %16

11:                                               ; preds = %2
  %12 = load %struct.ofmt*, %struct.ofmt** @ofmt, align 8
  %13 = getelementptr inbounds %struct.ofmt, %struct.ofmt* %12, i64 0, i32 4
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %1, align 4
  %15 = load i32, i32* @def_seg, align 4
  br label %475

16:                                               ; preds = %2
  %17 = tail call i8* @nasm_skip_word(i8* nonnull %0) #13
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds i8, i8* %17, i64 1
  store i8 0, i8* %17, align 1
  br label %22

22:                                               ; preds = %16, %20
  %23 = phi i8* [ %21, %20 ], [ %17, %16 ]
  %24 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %25 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %26 = tail call i8* @nasm_skip_spaces(i8* %23) #13
  %27 = icmp eq i8* %26, null
  br i1 %27, label %268, label %28

28:                                               ; preds = %22
  %29 = load i8, i8* %26, align 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %268, label %31

31:                                               ; preds = %28
  %32 = call i8* @nasm_opt_val(i8* nonnull %26, i8** nonnull %3, i8** nonnull %4) #13
  %33 = icmp eq i8* %32, null
  br i1 %33, label %226, label %34

34:                                               ; preds = %31, %196
  %35 = phi i32 [ %197, %196 ], [ 0, %31 ]
  %36 = phi i32 [ %198, %196 ], [ 0, %31 ]
  %37 = phi i64 [ %199, %196 ], [ 0, %31 ]
  %38 = phi i32 [ %200, %196 ], [ 0, %31 ]
  %39 = phi i8* [ %204, %196 ], [ %32, %31 ]
  %40 = phi i64 [ %202, %196 ], [ 0, %31 ]
  %41 = phi i64 [ %201, %196 ], [ 0, %31 ]
  %42 = call i32 @strcasecmp(i8* nonnull %39, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i64 0, i64 0)) #16
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %60

44:                                               ; preds = %34
  %45 = load i8*, i8** %3, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.61, i64 0, i64 0)) #13
  br label %196

48:                                               ; preds = %44
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #13
  store i8 -86, i8* %5, align 1
  %49 = call i64 @readnum(i8* nonnull %45, i8* nonnull %5) #13
  %50 = icmp eq i64 %49, 0
  %51 = call i64 @llvm.ctpop.i64(i64 %49) #13, !range !4
  %52 = icmp ult i64 %51, 2
  %53 = or i1 %50, %52
  br i1 %53, label %55, label %54

54:                                               ; preds = %48
  call void (i32, i8*, ...) @nasm_error(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.62, i64 0, i64 0), i64 %49) #13
  br label %58

55:                                               ; preds = %48
  %56 = icmp ugt i64 %49, %41
  %57 = select i1 %56, i64 %49, i64 %41
  br label %58

58:                                               ; preds = %55, %54
  %59 = phi i64 [ %41, %54 ], [ %57, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #13
  br label %196

60:                                               ; preds = %34
  %61 = call i32 @strcasecmp(i8* nonnull %39, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i64 0, i64 0)) #16
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %60
  %64 = or i32 %35, 2
  %65 = or i32 %36, 2
  br label %196

66:                                               ; preds = %60
  %67 = call i32 @strcasecmp(i8* nonnull %39, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.64, i64 0, i64 0)) #16
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %66
  %70 = or i32 %35, 2
  %71 = and i32 %36, -3
  br label %196

72:                                               ; preds = %66
  %73 = call i32 @strcasecmp(i8* nonnull %39, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i64 0, i64 0)) #16
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %72
  %76 = or i32 %35, 4
  %77 = or i32 %36, 4
  br label %196

78:                                               ; preds = %72
  %79 = call i32 @strcasecmp(i8* nonnull %39, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.66, i64 0, i64 0)) #16
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %78
  %82 = or i32 %35, 4
  %83 = and i32 %36, -5
  br label %196

84:                                               ; preds = %78
  %85 = call i32 @strcasecmp(i8* nonnull %39, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.67, i64 0, i64 0)) #16
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %84
  %88 = or i32 %35, 1
  %89 = or i32 %36, 1
  br label %196

90:                                               ; preds = %84
  %91 = call i32 @strcasecmp(i8* nonnull %39, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.68, i64 0, i64 0)) #16
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %90
  %94 = call i32 @strcasecmp(i8* nonnull %39, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.69, i64 0, i64 0)) #16
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %93, %90
  %97 = or i32 %35, 1
  %98 = and i32 %36, -2
  br label %196

99:                                               ; preds = %93
  %100 = call i32 @strcasecmp(i8* nonnull %39, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70, i64 0, i64 0)) #16
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %105

102:                                              ; preds = %99
  %103 = or i32 %35, 1024
  %104 = or i32 %36, 1024
  br label %196

105:                                              ; preds = %99
  %106 = call i32 @strcasecmp(i8* nonnull %39, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.71, i64 0, i64 0)) #16
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %111

108:                                              ; preds = %105
  %109 = or i32 %35, 1024
  %110 = and i32 %36, -1025
  br label %196

111:                                              ; preds = %105
  %112 = call i32 @strcasecmp(i8* nonnull %39, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.72, i64 0, i64 0)) #16
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %111
  %115 = or i32 %35, 16
  %116 = or i32 %36, 16
  br label %196

117:                                              ; preds = %111
  %118 = call i32 @strcasecmp(i8* nonnull %39, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i64 0, i64 0)) #16
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %117
  %121 = or i32 %35, 16
  %122 = and i32 %36, -17
  br label %196

123:                                              ; preds = %117
  %124 = call i32 @strcasecmp(i8* nonnull %39, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.74, i64 0, i64 0)) #16
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %129

126:                                              ; preds = %123
  %127 = or i32 %35, 32
  %128 = or i32 %36, 32
  br label %196

129:                                              ; preds = %123
  %130 = call i32 @strcasecmp(i8* nonnull %39, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.75, i64 0, i64 0)) #16
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %135

132:                                              ; preds = %129
  %133 = or i32 %35, 32
  %134 = and i32 %36, -33
  br label %196

135:                                              ; preds = %129
  %136 = call i32 @strcasecmp(i8* nonnull %39, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76, i64 0, i64 0)) #16
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %196, label %138

138:                                              ; preds = %135
  %139 = call i32 @strcasecmp(i8* nonnull %39, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.77, i64 0, i64 0)) #16
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %196, label %141

141:                                              ; preds = %138
  %142 = call i32 @strcasecmp(i8* nonnull %39, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i64 0, i64 0)) #16
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %196, label %144

144:                                              ; preds = %141
  %145 = call i32 @strcasecmp(i8* nonnull %39, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.79, i64 0, i64 0)) #16
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %196, label %147

147:                                              ; preds = %144
  %148 = call i32 @strcasecmp(i8* nonnull %39, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.80, i64 0, i64 0)) #16
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %196, label %150

150:                                              ; preds = %147
  %151 = call i32 @strcasecmp(i8* nonnull %39, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.81, i64 0, i64 0)) #16
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %196, label %153

153:                                              ; preds = %150
  %154 = call i8* @strchr(i8* nonnull %39, i32 42) #16
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #13
  store i8 -86, i8* %6, align 1
  %155 = icmp eq i8* %154, null
  br i1 %155, label %163, label %156

156:                                              ; preds = %153
  %157 = ptrtoint i8* %154 to i64
  %158 = ptrtoint i8* %39 to i64
  %159 = xor i64 %158, -1
  %160 = add i64 %157, %159
  %161 = getelementptr inbounds i8, i8* %154, i64 1
  %162 = call i64 @readnum(i8* %161, i8* nonnull %6) #13
  br label %165

163:                                              ; preds = %153
  %164 = call i64 @strlen(i8* nonnull %39) #16
  br label %165

165:                                              ; preds = %163, %156
  %166 = phi i64 [ %162, %156 ], [ 1, %163 ]
  %167 = phi i64 [ %160, %156 ], [ %164, %163 ]
  %168 = call i32 @strncasecmp(i8* nonnull %39, i8* getelementptr inbounds ([12 x %struct.size_unit], [12 x %struct.size_unit]* @size_units, i64 0, i64 0, i32 0, i64 0), i64 %167) #16
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %177, label %170

170:                                              ; preds = %165
  %171 = call i32 @strncasecmp(i8* nonnull %39, i8* getelementptr inbounds ([12 x %struct.size_unit], [12 x %struct.size_unit]* @size_units, i64 0, i64 1, i32 0, i64 0), i64 %167) #16
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %177, label %240

173:                                              ; preds = %264
  %174 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %175 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %174, i64 0, i32 0
  %176 = load i64, i64* %175, align 8
  br label %177

177:                                              ; preds = %165, %170, %240, %243, %246, %249, %252, %255, %258, %261, %173
  %178 = phi %struct.size_unit* [ getelementptr inbounds ([12 x %struct.size_unit], [12 x %struct.size_unit]* @size_units, i64 0, i64 10), %173 ], [ getelementptr inbounds ([12 x %struct.size_unit], [12 x %struct.size_unit]* @size_units, i64 0, i64 9), %261 ], [ getelementptr inbounds ([12 x %struct.size_unit], [12 x %struct.size_unit]* @size_units, i64 0, i64 8), %258 ], [ getelementptr inbounds ([12 x %struct.size_unit], [12 x %struct.size_unit]* @size_units, i64 0, i64 7), %255 ], [ getelementptr inbounds ([12 x %struct.size_unit], [12 x %struct.size_unit]* @size_units, i64 0, i64 6), %252 ], [ getelementptr inbounds ([12 x %struct.size_unit], [12 x %struct.size_unit]* @size_units, i64 0, i64 5), %249 ], [ getelementptr inbounds ([12 x %struct.size_unit], [12 x %struct.size_unit]* @size_units, i64 0, i64 4), %246 ], [ getelementptr inbounds ([12 x %struct.size_unit], [12 x %struct.size_unit]* @size_units, i64 0, i64 3), %243 ], [ getelementptr inbounds ([12 x %struct.size_unit], [12 x %struct.size_unit]* @size_units, i64 0, i64 2), %240 ], [ getelementptr inbounds ([12 x %struct.size_unit], [12 x %struct.size_unit]* @size_units, i64 0, i64 1), %170 ], [ getelementptr inbounds ([12 x %struct.size_unit], [12 x %struct.size_unit]* @size_units, i64 0, i64 0), %165 ]
  %179 = phi i64 [ %176, %173 ], [ 64, %261 ], [ 32, %258 ], [ 16, %255 ], [ 16, %252 ], [ 10, %249 ], [ 10, %246 ], [ 8, %243 ], [ 4, %240 ], [ 2, %170 ], [ 1, %165 ]
  %180 = mul i64 %179, %166
  %181 = getelementptr inbounds %struct.size_unit, %struct.size_unit* %178, i64 0, i32 2
  %182 = load i32, i32* %181, align 4
  %183 = icmp sgt i32 %182, -1
  br i1 %183, label %184, label %186

184:                                              ; preds = %177
  %185 = sext i32 %182 to i64
  br label %193

186:                                              ; preds = %177
  %187 = sub nsw i32 0, %182
  %188 = sext i32 %187 to i64
  %189 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %190 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %189, i64 0, i32 0
  %191 = load i64, i64* %190, align 8
  %192 = mul i64 %191, %188
  br label %193

193:                                              ; preds = %267, %186, %184
  %194 = phi i64 [ %180, %184 ], [ %180, %186 ], [ %37, %267 ]
  %195 = phi i64 [ %185, %184 ], [ %192, %186 ], [ %40, %267 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #13
  br label %196

196:                                              ; preds = %150, %147, %144, %141, %138, %135, %193, %132, %126, %120, %114, %108, %102, %96, %87, %81, %75, %69, %63, %58, %47
  %197 = phi i32 [ %35, %47 ], [ %35, %58 ], [ %64, %63 ], [ %70, %69 ], [ %76, %75 ], [ %82, %81 ], [ %88, %87 ], [ %97, %96 ], [ %103, %102 ], [ %109, %108 ], [ %115, %114 ], [ %121, %120 ], [ %127, %126 ], [ %133, %132 ], [ %35, %193 ], [ %35, %135 ], [ %35, %138 ], [ %35, %141 ], [ %35, %144 ], [ %35, %147 ], [ %35, %150 ]
  %198 = phi i32 [ %36, %47 ], [ %36, %58 ], [ %65, %63 ], [ %71, %69 ], [ %77, %75 ], [ %83, %81 ], [ %89, %87 ], [ %98, %96 ], [ %104, %102 ], [ %110, %108 ], [ %116, %114 ], [ %122, %120 ], [ %128, %126 ], [ %134, %132 ], [ %36, %193 ], [ %36, %135 ], [ %36, %138 ], [ %36, %141 ], [ %36, %144 ], [ %36, %147 ], [ %36, %150 ]
  %199 = phi i64 [ %37, %47 ], [ %37, %58 ], [ %37, %63 ], [ %37, %69 ], [ %37, %75 ], [ %37, %81 ], [ %37, %87 ], [ %37, %96 ], [ %37, %102 ], [ %37, %108 ], [ %37, %114 ], [ %37, %120 ], [ %37, %126 ], [ %37, %132 ], [ %194, %193 ], [ %37, %135 ], [ %37, %138 ], [ %37, %141 ], [ %37, %144 ], [ %37, %147 ], [ %37, %150 ]
  %200 = phi i32 [ %38, %47 ], [ %38, %58 ], [ %38, %63 ], [ %38, %69 ], [ %38, %75 ], [ %38, %81 ], [ %38, %87 ], [ %38, %96 ], [ %38, %102 ], [ %38, %108 ], [ %38, %114 ], [ %38, %120 ], [ %38, %126 ], [ %38, %132 ], [ %38, %193 ], [ 1, %135 ], [ 8, %138 ], [ 7, %141 ], [ 16, %144 ], [ 14, %147 ], [ 15, %150 ]
  %201 = phi i64 [ %41, %47 ], [ %59, %58 ], [ %41, %63 ], [ %41, %69 ], [ %41, %75 ], [ %41, %81 ], [ %41, %87 ], [ %41, %96 ], [ %41, %102 ], [ %41, %108 ], [ %41, %114 ], [ %41, %120 ], [ %41, %126 ], [ %41, %132 ], [ %41, %193 ], [ %41, %135 ], [ %41, %138 ], [ %41, %141 ], [ %41, %144 ], [ %41, %147 ], [ %41, %150 ]
  %202 = phi i64 [ %40, %47 ], [ %40, %58 ], [ %40, %63 ], [ %40, %69 ], [ %40, %75 ], [ %40, %81 ], [ %40, %87 ], [ %40, %96 ], [ %40, %102 ], [ %40, %108 ], [ %40, %114 ], [ %40, %120 ], [ %40, %126 ], [ %40, %132 ], [ %195, %193 ], [ %40, %135 ], [ %40, %138 ], [ %40, %141 ], [ %40, %144 ], [ %40, %147 ], [ %40, %150 ]
  %203 = load i8*, i8** %4, align 8
  %204 = call i8* @nasm_opt_val(i8* %203, i8** nonnull %3, i8** nonnull %4) #13
  %205 = icmp eq i8* %204, null
  br i1 %205, label %206, label %34

206:                                              ; preds = %196
  %207 = add i32 %200, -14
  %208 = icmp ult i32 %207, 3
  br i1 %208, label %209, label %222

209:                                              ; preds = %206
  %210 = icmp eq i64 %202, 0
  br i1 %210, label %211, label %215

211:                                              ; preds = %209
  %212 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %213 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %212, i64 0, i32 0
  %214 = load i64, i64* %213, align 8
  br label %215

215:                                              ; preds = %211, %209
  %216 = phi i64 [ %202, %209 ], [ %214, %211 ]
  %217 = icmp eq i64 %199, 0
  br i1 %217, label %218, label %222

218:                                              ; preds = %215
  %219 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %220 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %219, i64 0, i32 0
  %221 = load i64, i64* %220, align 8
  br label %222

222:                                              ; preds = %218, %215, %206
  %223 = phi i64 [ %221, %218 ], [ %199, %215 ], [ %199, %206 ]
  %224 = phi i64 [ %216, %218 ], [ %216, %215 ], [ %202, %206 ]
  %225 = icmp eq i64 %201, 0
  br i1 %225, label %226, label %232

226:                                              ; preds = %31, %222
  %227 = phi i64 [ %224, %222 ], [ 0, %31 ]
  %228 = phi i64 [ %223, %222 ], [ 0, %31 ]
  %229 = phi i32 [ %197, %222 ], [ 0, %31 ]
  %230 = phi i32 [ %198, %222 ], [ 0, %31 ]
  %231 = phi i32 [ %200, %222 ], [ 0, %31 ]
  br label %232

232:                                              ; preds = %222, %226
  %233 = phi i64 [ %228, %226 ], [ %223, %222 ]
  %234 = phi i32 [ %229, %226 ], [ %197, %222 ]
  %235 = phi i32 [ %230, %226 ], [ %198, %222 ]
  %236 = phi i32 [ %231, %226 ], [ %200, %222 ]
  %237 = phi i64 [ %227, %226 ], [ %201, %222 ]
  %238 = icmp eq i64 %237, 0
  %239 = select i1 %238, i64 1, i64 %237
  br label %268

240:                                              ; preds = %170
  %241 = call i32 @strncasecmp(i8* nonnull %39, i8* getelementptr inbounds ([12 x %struct.size_unit], [12 x %struct.size_unit]* @size_units, i64 0, i64 2, i32 0, i64 0), i64 %167) #16
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %177, label %243

243:                                              ; preds = %240
  %244 = call i32 @strncasecmp(i8* nonnull %39, i8* getelementptr inbounds ([12 x %struct.size_unit], [12 x %struct.size_unit]* @size_units, i64 0, i64 3, i32 0, i64 0), i64 %167) #16
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %177, label %246

246:                                              ; preds = %243
  %247 = call i32 @strncasecmp(i8* nonnull %39, i8* getelementptr inbounds ([12 x %struct.size_unit], [12 x %struct.size_unit]* @size_units, i64 0, i64 4, i32 0, i64 0), i64 %167) #16
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %177, label %249

249:                                              ; preds = %246
  %250 = call i32 @strncasecmp(i8* nonnull %39, i8* getelementptr inbounds ([12 x %struct.size_unit], [12 x %struct.size_unit]* @size_units, i64 0, i64 5, i32 0, i64 0), i64 %167) #16
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %177, label %252

252:                                              ; preds = %249
  %253 = call i32 @strncasecmp(i8* nonnull %39, i8* getelementptr inbounds ([12 x %struct.size_unit], [12 x %struct.size_unit]* @size_units, i64 0, i64 6, i32 0, i64 0), i64 %167) #16
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %177, label %255

255:                                              ; preds = %252
  %256 = call i32 @strncasecmp(i8* nonnull %39, i8* getelementptr inbounds ([12 x %struct.size_unit], [12 x %struct.size_unit]* @size_units, i64 0, i64 7, i32 0, i64 0), i64 %167) #16
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %177, label %258

258:                                              ; preds = %255
  %259 = call i32 @strncasecmp(i8* nonnull %39, i8* getelementptr inbounds ([12 x %struct.size_unit], [12 x %struct.size_unit]* @size_units, i64 0, i64 8, i32 0, i64 0), i64 %167) #16
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %177, label %261

261:                                              ; preds = %258
  %262 = call i32 @strncasecmp(i8* nonnull %39, i8* getelementptr inbounds ([12 x %struct.size_unit], [12 x %struct.size_unit]* @size_units, i64 0, i64 9, i32 0, i64 0), i64 %167) #16
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %177, label %264

264:                                              ; preds = %261
  %265 = call i32 @strncasecmp(i8* nonnull %39, i8* getelementptr inbounds ([12 x %struct.size_unit], [12 x %struct.size_unit]* @size_units, i64 0, i64 10, i32 0, i64 0), i64 %167) #16
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %173, label %267

267:                                              ; preds = %264
  call void (i32, i8*, ...) @nasm_warn(i32 2228224, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.82, i64 0, i64 0), i8* nonnull %39, i8* nonnull %0) #13
  br label %193

268:                                              ; preds = %22, %28, %232
  %269 = phi i32 [ 0, %22 ], [ 0, %28 ], [ %234, %232 ]
  %270 = phi i32 [ 0, %22 ], [ 0, %28 ], [ %235, %232 ]
  %271 = phi i64 [ 0, %22 ], [ 0, %28 ], [ %239, %232 ]
  %272 = phi i64 [ 0, %22 ], [ 0, %28 ], [ %233, %232 ]
  %273 = phi i32 [ 0, %22 ], [ 0, %28 ], [ %236, %232 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  %274 = call i8** @hash_find(%struct.hash_table* nonnull @section_by_name, i8* nonnull %0, %struct.hash_insert* nonnull %7) #13
  %275 = icmp eq i8** %274, null
  br i1 %275, label %276, label %279

276:                                              ; preds = %268
  %277 = call i32 @strcmp(i8* nonnull %0, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0)) #16
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %287, label %284

279:                                              ; preds = %268
  %280 = bitcast i8** %274 to %struct.elf_section**
  %281 = load %struct.elf_section*, %struct.elf_section** %280, align 8
  %282 = icmp eq %struct.elf_section* %281, null
  br i1 %282, label %283, label %420

283:                                              ; preds = %279
  call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.57, i64 0, i64 0), i8* nonnull %0) #13
  br label %475

284:                                              ; preds = %276
  %285 = call i32 @strcmp(i8* nonnull %0, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.83, i64 0, i64 0)) #16
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %477

287:                                              ; preds = %510, %507, %504, %501, %498, %495, %492, %489, %486, %483, %480, %477, %284, %276
  %288 = phi %struct.elf_known_section* [ getelementptr inbounds ([15 x %struct.elf_known_section], [15 x %struct.elf_known_section]* @elf_known_sections, i64 0, i64 0), %276 ], [ getelementptr inbounds ([15 x %struct.elf_known_section], [15 x %struct.elf_known_section]* @elf_known_sections, i64 0, i64 1), %284 ], [ getelementptr inbounds ([15 x %struct.elf_known_section], [15 x %struct.elf_known_section]* @elf_known_sections, i64 0, i64 2), %477 ], [ getelementptr inbounds ([15 x %struct.elf_known_section], [15 x %struct.elf_known_section]* @elf_known_sections, i64 0, i64 3), %480 ], [ getelementptr inbounds ([15 x %struct.elf_known_section], [15 x %struct.elf_known_section]* @elf_known_sections, i64 0, i64 4), %483 ], [ getelementptr inbounds ([15 x %struct.elf_known_section], [15 x %struct.elf_known_section]* @elf_known_sections, i64 0, i64 5), %486 ], [ getelementptr inbounds ([15 x %struct.elf_known_section], [15 x %struct.elf_known_section]* @elf_known_sections, i64 0, i64 6), %489 ], [ getelementptr inbounds ([15 x %struct.elf_known_section], [15 x %struct.elf_known_section]* @elf_known_sections, i64 0, i64 7), %492 ], [ getelementptr inbounds ([15 x %struct.elf_known_section], [15 x %struct.elf_known_section]* @elf_known_sections, i64 0, i64 8), %495 ], [ getelementptr inbounds ([15 x %struct.elf_known_section], [15 x %struct.elf_known_section]* @elf_known_sections, i64 0, i64 9), %498 ], [ getelementptr inbounds ([15 x %struct.elf_known_section], [15 x %struct.elf_known_section]* @elf_known_sections, i64 0, i64 10), %501 ], [ getelementptr inbounds ([15 x %struct.elf_known_section], [15 x %struct.elf_known_section]* @elf_known_sections, i64 0, i64 11), %504 ], [ getelementptr inbounds ([15 x %struct.elf_known_section], [15 x %struct.elf_known_section]* @elf_known_sections, i64 0, i64 12), %507 ], [ %513, %510 ]
  %289 = icmp eq i32 %273, 0
  br i1 %289, label %290, label %293

290:                                              ; preds = %287
  %291 = getelementptr inbounds %struct.elf_known_section, %struct.elf_known_section* %288, i64 0, i32 1
  %292 = load i32, i32* %291, align 8
  br label %293

293:                                              ; preds = %287, %290
  %294 = phi i32 [ %292, %290 ], [ %273, %287 ]
  %295 = icmp eq i64 %271, 0
  br i1 %295, label %296, label %309

296:                                              ; preds = %293
  %297 = getelementptr inbounds %struct.elf_known_section, %struct.elf_known_section* %288, i64 0, i32 3
  %298 = load i32, i32* %297, align 8
  %299 = icmp sgt i32 %298, -1
  br i1 %299, label %300, label %302

300:                                              ; preds = %296
  %301 = sext i32 %298 to i64
  br label %309

302:                                              ; preds = %296
  %303 = sub nsw i32 0, %298
  %304 = sext i32 %303 to i64
  %305 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %306 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %305, i64 0, i32 0
  %307 = load i64, i64* %306, align 8
  %308 = mul i64 %307, %304
  br label %309

309:                                              ; preds = %302, %300, %293
  %310 = phi i64 [ %271, %293 ], [ %301, %300 ], [ %308, %302 ]
  %311 = icmp eq i64 %272, 0
  br i1 %311, label %312, label %325

312:                                              ; preds = %309
  %313 = getelementptr inbounds %struct.elf_known_section, %struct.elf_known_section* %288, i64 0, i32 4
  %314 = load i32, i32* %313, align 4
  %315 = icmp sgt i32 %314, -1
  br i1 %315, label %316, label %318

316:                                              ; preds = %312
  %317 = sext i32 %314 to i64
  br label %325

318:                                              ; preds = %312
  %319 = sub nsw i32 0, %314
  %320 = sext i32 %319 to i64
  %321 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %322 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %321, i64 0, i32 0
  %323 = load i64, i64* %322, align 8
  %324 = mul i64 %323, %320
  br label %325

325:                                              ; preds = %318, %316, %309
  %326 = phi i64 [ %272, %309 ], [ %317, %316 ], [ %324, %318 ]
  %327 = getelementptr inbounds %struct.elf_known_section, %struct.elf_known_section* %288, i64 0, i32 2
  %328 = load i32, i32* %327, align 4
  %329 = xor i32 %269, -1
  %330 = and i32 %328, %329
  %331 = or i32 %330, %270
  %332 = call noalias i8* @nasm_zalloc(i64 120) #15
  %333 = bitcast i8* %332 to %struct.elf_section*
  %334 = icmp eq i32 %294, 8
  br i1 %334, label %338, label %335

335:                                              ; preds = %325
  %336 = call %struct.SAA* @saa_init(i64 1) #13
  %337 = bitcast i8* %332 to %struct.SAA**
  store %struct.SAA* %336, %struct.SAA** %337, align 8
  br label %338

338:                                              ; preds = %335, %325
  %339 = getelementptr inbounds i8, i8* %332, i64 96
  %340 = getelementptr inbounds i8, i8* %332, i64 104
  %341 = bitcast i8* %340 to i8**
  store i8* %339, i8** %341, align 8
  %342 = call i32 @strcmp(i8* nonnull %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0)) #16
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %344, label %346

344:                                              ; preds = %338
  %345 = load i32, i32* @def_seg, align 4
  br label %348

346:                                              ; preds = %338
  %347 = call i32 @seg_alloc() #13
  br label %348

348:                                              ; preds = %346, %344
  %349 = phi i32 [ %347, %346 ], [ %345, %344 ]
  %350 = getelementptr inbounds i8, i8* %332, i64 32
  %351 = bitcast i8* %350 to i32*
  store i32 %349, i32* %351, align 8
  %352 = call noalias i8* @nasm_strdup(i8* nonnull %0) #13
  %353 = getelementptr inbounds i8, i8* %332, i64 80
  %354 = bitcast i8* %353 to i8**
  store i8* %352, i8** %354, align 8
  %355 = getelementptr inbounds i8, i8* %332, i64 40
  %356 = bitcast i8* %355 to i32*
  store i32 %294, i32* %356, align 8
  %357 = sext i32 %331 to i64
  %358 = getelementptr inbounds i8, i8* %332, i64 56
  %359 = bitcast i8* %358 to i64*
  store i64 %357, i64* %359, align 8
  %360 = getelementptr inbounds i8, i8* %332, i64 48
  %361 = bitcast i8* %360 to i64*
  store i64 %310, i64* %361, align 8
  %362 = call i64 @strlen(i8* nonnull %0) #16
  %363 = trunc i64 %362 to i32
  %364 = load i32, i32* @shstrtablen, align 4
  %365 = add nsw i32 %364, %363
  %366 = load i32, i32* @shstrtabsize, align 4
  %367 = icmp slt i32 %365, %366
  %368 = load i8*, i8** @shstrtab, align 8
  br i1 %367, label %379, label %369

369:                                              ; preds = %348, %369
  %370 = phi i8* [ %374, %369 ], [ %368, %348 ]
  %371 = phi i32 [ %377, %369 ], [ %366, %348 ]
  %372 = add nsw i32 %371, 256
  store i32 %372, i32* @shstrtabsize, align 4
  %373 = sext i32 %372 to i64
  %374 = call i8* @nasm_realloc(i8* %370, i64 %373) #17
  store i8* %374, i8** @shstrtab, align 8
  %375 = load i32, i32* @shstrtablen, align 4
  %376 = add nsw i32 %375, %363
  %377 = load i32, i32* @shstrtabsize, align 4
  %378 = icmp slt i32 %376, %377
  br i1 %378, label %379, label %369

379:                                              ; preds = %369, %348
  %380 = phi i32 [ %364, %348 ], [ %375, %369 ]
  %381 = phi i8* [ %368, %348 ], [ %374, %369 ]
  %382 = sext i32 %380 to i64
  %383 = getelementptr inbounds i8, i8* %381, i64 %382
  %384 = add nsw i32 %363, 1
  %385 = sext i32 %384 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %383, i8* nonnull align 1 %0, i64 %385, i1 false) #13
  %386 = add nsw i32 %380, %384
  store i32 %386, i32* @shstrtablen, align 4
  %387 = load i32, i32* @nsections, align 4
  %388 = add nsw i32 %387, 1
  store i32 %388, i32* @nsections, align 4
  %389 = getelementptr inbounds i8, i8* %332, i64 36
  %390 = bitcast i8* %389 to i32*
  store i32 %387, i32* %390, align 4
  %391 = load i32, i32* @nsects, align 4
  %392 = load i32, i32* @sectlen, align 4
  %393 = icmp slt i32 %391, %392
  br i1 %393, label %394, label %396

394:                                              ; preds = %379
  %395 = load %struct.elf_section**, %struct.elf_section*** @sects, align 8
  br label %404

396:                                              ; preds = %379
  %397 = load i8*, i8** bitcast (%struct.elf_section*** @sects to i8**), align 8
  %398 = add nsw i32 %392, 32
  store i32 %398, i32* @sectlen, align 4
  %399 = sext i32 %398 to i64
  %400 = shl nsw i64 %399, 3
  %401 = call i8* @nasm_realloc(i8* %397, i64 %400) #17
  store i8* %401, i8** bitcast (%struct.elf_section*** @sects to i8**), align 8
  %402 = bitcast i8* %401 to %struct.elf_section**
  %403 = load i32, i32* @nsects, align 4
  br label %404

404:                                              ; preds = %394, %396
  %405 = phi i32 [ %391, %394 ], [ %403, %396 ]
  %406 = phi %struct.elf_section** [ %395, %394 ], [ %402, %396 ]
  %407 = add nsw i32 %405, 1
  store i32 %407, i32* @nsects, align 4
  %408 = sext i32 %405 to i64
  %409 = getelementptr inbounds %struct.elf_section*, %struct.elf_section** %406, i64 %408
  %410 = bitcast %struct.elf_section** %409 to i8**
  store i8* %332, i8** %410, align 8
  %411 = load i8*, i8** %354, align 8
  %412 = call i8** @hash_add(%struct.hash_insert* nonnull %7, i8* %411, i8* %332) #13
  %413 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %414 = getelementptr inbounds i8, i8* %332, i64 32
  %415 = bitcast i8* %414 to i32*
  %416 = load i32, i32* %415, align 8
  %417 = ashr i32 %416, 1
  %418 = sext i32 %417 to i64
  %419 = call %struct.RAA* @raa_write_ptr(%struct.RAA* %413, i64 %418, i8* %332) #13
  store %struct.RAA* %419, %struct.RAA** @section_by_index, align 8
  br label %420

420:                                              ; preds = %279, %404
  %421 = phi i64 [ %310, %404 ], [ %271, %279 ]
  %422 = phi i64 [ %326, %404 ], [ %272, %279 ]
  %423 = phi i32 [ %294, %404 ], [ %273, %279 ]
  %424 = phi %struct.elf_section* [ %333, %404 ], [ %281, %279 ]
  %425 = icmp eq i32 %423, 0
  br i1 %425, label %430, label %426

426:                                              ; preds = %420
  %427 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %424, i64 0, i32 6
  %428 = load i32, i32* %427, align 8
  %429 = icmp eq i32 %428, %423
  br i1 %429, label %430, label %445

430:                                              ; preds = %426, %420
  %431 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %424, i64 0, i32 8
  %432 = load i64, i64* %431, align 8
  %433 = zext i32 %269 to i64
  %434 = and i64 %432, %433
  %435 = zext i32 %270 to i64
  %436 = icmp eq i64 %434, %435
  br i1 %436, label %437, label %445

437:                                              ; preds = %430
  %438 = icmp eq i64 %422, 0
  br i1 %438, label %446, label %439

439:                                              ; preds = %437
  %440 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %424, i64 0, i32 10
  %441 = load i64, i64* %440, align 8
  %442 = icmp eq i64 %441, 0
  %443 = icmp eq i64 %422, %441
  %444 = or i1 %442, %443
  br i1 %444, label %446, label %445

445:                                              ; preds = %439, %426, %430
  call void (i32, i8*, ...) @nasm_warn(i32 2228224, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.58, i64 0, i64 0), i8* nonnull %0) #13
  br label %446

446:                                              ; preds = %439, %437, %445
  %447 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %424, i64 0, i32 7
  %448 = load i64, i64* %447, align 8
  %449 = icmp ugt i64 %421, %448
  br i1 %449, label %450, label %451

450:                                              ; preds = %446
  store i64 %421, i64* %447, align 8
  br label %451

451:                                              ; preds = %450, %446
  %452 = icmp eq i64 %422, 0
  br i1 %452, label %458, label %453

453:                                              ; preds = %451
  %454 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %424, i64 0, i32 10
  %455 = load i64, i64* %454, align 8
  %456 = icmp eq i64 %455, 0
  br i1 %456, label %457, label %458

457:                                              ; preds = %453
  store i64 %422, i64* %454, align 8
  br label %458

458:                                              ; preds = %453, %451, %457
  %459 = and i32 %270, 16
  %460 = icmp eq i32 %459, 0
  br i1 %460, label %472, label %461

461:                                              ; preds = %458
  %462 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %424, i64 0, i32 10
  %463 = load i64, i64* %462, align 8
  %464 = icmp eq i64 %463, 0
  br i1 %464, label %465, label %472

465:                                              ; preds = %461
  %466 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %424, i64 0, i32 8
  %467 = load i64, i64* %466, align 8
  %468 = and i64 %467, 32
  %469 = icmp eq i64 %468, 0
  br i1 %469, label %470, label %471

470:                                              ; preds = %465
  call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.59, i64 0, i64 0)) #13
  br label %471

471:                                              ; preds = %465, %470
  store i64 1, i64* %462, align 8
  br label %472

472:                                              ; preds = %458, %471, %461
  %473 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %424, i64 0, i32 4
  %474 = load i32, i32* %473, align 8
  br label %475

475:                                              ; preds = %472, %283, %11
  %476 = phi i32 [ %474, %472 ], [ -1, %283 ], [ %15, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #13
  ret i32 %476

477:                                              ; preds = %284
  %478 = call i32 @strcmp(i8* nonnull %0, i8* nonnull getelementptr inbounds ([9 x i8], [9 x i8]* @.str.84, i64 0, i64 0)) #16
  %479 = icmp eq i32 %478, 0
  br i1 %479, label %287, label %480

480:                                              ; preds = %477
  %481 = call i32 @strcmp(i8* nonnull %0, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.85, i64 0, i64 0)) #16
  %482 = icmp eq i32 %481, 0
  br i1 %482, label %287, label %483

483:                                              ; preds = %480
  %484 = call i32 @strcmp(i8* nonnull %0, i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @.str.86, i64 0, i64 0)) #16
  %485 = icmp eq i32 %484, 0
  br i1 %485, label %287, label %486

486:                                              ; preds = %483
  %487 = call i32 @strcmp(i8* nonnull %0, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i64 0, i64 0)) #16
  %488 = icmp eq i32 %487, 0
  br i1 %488, label %287, label %489

489:                                              ; preds = %486
  %490 = call i32 @strcmp(i8* nonnull %0, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.88, i64 0, i64 0)) #16
  %491 = icmp eq i32 %490, 0
  br i1 %491, label %287, label %492

492:                                              ; preds = %489
  %493 = call i32 @strcmp(i8* nonnull %0, i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @.str.89, i64 0, i64 0)) #16
  %494 = icmp eq i32 %493, 0
  br i1 %494, label %287, label %495

495:                                              ; preds = %492
  %496 = call i32 @strcmp(i8* nonnull %0, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.90, i64 0, i64 0)) #16
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %287, label %498

498:                                              ; preds = %495
  %499 = call i32 @strcmp(i8* nonnull %0, i8* nonnull getelementptr inbounds ([9 x i8], [9 x i8]* @.str.91, i64 0, i64 0)) #16
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %287, label %501

501:                                              ; preds = %498
  %502 = call i32 @strcmp(i8* nonnull %0, i8* nonnull getelementptr inbounds ([15 x i8], [15 x i8]* @.str.92, i64 0, i64 0)) #16
  %503 = icmp eq i32 %502, 0
  br i1 %503, label %287, label %504

504:                                              ; preds = %501
  %505 = call i32 @strcmp(i8* nonnull %0, i8* nonnull getelementptr inbounds ([12 x i8], [12 x i8]* @.str.93, i64 0, i64 0)) #16
  %506 = icmp eq i32 %505, 0
  br i1 %506, label %287, label %507

507:                                              ; preds = %504
  %508 = call i32 @strcmp(i8* nonnull %0, i8* nonnull getelementptr inbounds ([12 x i8], [12 x i8]* @.str.94, i64 0, i64 0)) #16
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %287, label %510

510:                                              ; preds = %507
  %511 = call i32 @strcmp(i8* nonnull %0, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.95, i64 0, i64 0)) #16
  %512 = icmp eq i32 %511, 0
  %513 = select i1 %512, %struct.elf_known_section* getelementptr inbounds ([15 x %struct.elf_known_section], [15 x %struct.elf_known_section]* @elf_known_sections, i64 0, i64 13), %struct.elf_known_section* getelementptr inbounds ([15 x %struct.elf_known_section], [15 x %struct.elf_known_section]* @elf_known_sections, i64 0, i64 14)
  br label %287
}

; Function Attrs: nounwind ssp uwtable
define internal void @elf_sectalign(i32, i32) #0 {
  %3 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %4 = ashr i32 %0, 1
  %5 = sext i32 %4 to i64
  %6 = tail call i8* @raa_read_ptr(%struct.RAA* %3, i64 %5) #13
  %7 = icmp ne i8* %6, null
  %8 = tail call i32 @llvm.ctpop.i32(i32 %1), !range !5
  %9 = icmp eq i32 %8, 1
  %10 = and i1 %9, %7
  br i1 %10, label %11, label %18

11:                                               ; preds = %2
  %12 = zext i32 %1 to i64
  %13 = getelementptr inbounds i8, i8* %6, i64 48
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, %12
  br i1 %16, label %17, label %18

17:                                               ; preds = %11
  store i64 %12, i64* %14, align 8
  br label %18

18:                                               ; preds = %11, %17, %2
  ret void
}

declare i32 @null_segbase(i32) #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @elf_directive(i32, i8*) #0 {
  %3 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #13
  store i8 -86, i8* %3, align 1
  %4 = icmp eq i32 %0, 27
  br i1 %4, label %5, label %30

5:                                                ; preds = %2
  %6 = load i32, i32* @_pass_type, align 4
  %7 = icmp ult i32 %6, 3
  br i1 %7, label %8, label %30

8:                                                ; preds = %5
  %9 = call i64 @readnum(i8* %1, i8* nonnull %3) #13
  %10 = load i8, i8* %3, align 1, !range !3
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.96, i64 0, i64 0)) #13
  br label %30

13:                                               ; preds = %8
  %14 = icmp ugt i64 %9, 255
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.97, i64 0, i64 0)) #13
  br label %30

16:                                               ; preds = %13
  %17 = trunc i64 %9 to i8
  store i8 %17, i8* @elf_osabi, align 1
  store i8 0, i8* @elf_abiver, align 1
  %18 = call i8* @strchr(i8* %1, i32 44) #16
  %19 = icmp eq i8* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds i8, i8* %18, i64 1
  %22 = call i64 @readnum(i8* %21, i8* nonnull %3) #13
  %23 = load i8, i8* %3, align 1, !range !3
  %24 = icmp ne i8 %23, 0
  %25 = icmp ugt i64 %22, 255
  %26 = or i1 %25, %24
  br i1 %26, label %27, label %28

27:                                               ; preds = %20
  call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.98, i64 0, i64 0)) #13
  br label %30

28:                                               ; preds = %20
  %29 = trunc i64 %22 to i8
  store i8 %29, i8* @elf_abiver, align 1
  br label %30

30:                                               ; preds = %2, %16, %5, %28, %27, %15, %12
  %31 = phi i32 [ 2, %12 ], [ 2, %15 ], [ 2, %27 ], [ 1, %28 ], [ 1, %5 ], [ 1, %16 ], [ 0, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #13
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define internal void @elf_cleanup() #0 {
  tail call fastcc void @elf_write()
  %1 = load i32, i32* @nsects, align 4
  %2 = icmp sgt i32 %1, 0
  br i1 %2, label %3, label %53

3:                                                ; preds = %0
  %4 = load %struct.elf_section**, %struct.elf_section*** @sects, align 8
  br label %5

5:                                                ; preds = %3, %47
  %6 = phi %struct.elf_section** [ %4, %3 ], [ %48, %47 ]
  %7 = phi i64 [ 0, %3 ], [ %49, %47 ]
  %8 = getelementptr inbounds %struct.elf_section*, %struct.elf_section** %6, i64 %7
  %9 = load %struct.elf_section*, %struct.elf_section** %8, align 8
  %10 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %9, i64 0, i32 6
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 8
  br i1 %12, label %19, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %9, i64 0, i32 0
  %15 = load %struct.SAA*, %struct.SAA** %14, align 8
  tail call void @saa_free(%struct.SAA* %15) #13
  %16 = load %struct.elf_section**, %struct.elf_section*** @sects, align 8
  %17 = getelementptr inbounds %struct.elf_section*, %struct.elf_section** %16, i64 %7
  %18 = load %struct.elf_section*, %struct.elf_section** %17, align 8
  br label %19

19:                                               ; preds = %5, %13
  %20 = phi %struct.elf_section** [ %6, %5 ], [ %16, %13 ]
  %21 = phi %struct.elf_section* [ %9, %5 ], [ %18, %13 ]
  %22 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %21, i64 0, i32 12
  %23 = load %struct.SAA*, %struct.SAA** %22, align 8
  %24 = icmp eq %struct.SAA* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %19
  tail call void @saa_free(%struct.SAA* nonnull %23) #13
  %26 = load %struct.elf_section**, %struct.elf_section*** @sects, align 8
  br label %27

27:                                               ; preds = %19, %25
  %28 = phi %struct.elf_section** [ %20, %19 ], [ %26, %25 ]
  %29 = getelementptr inbounds %struct.elf_section*, %struct.elf_section** %28, i64 %7
  %30 = load %struct.elf_section*, %struct.elf_section** %29, align 8
  %31 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %30, i64 0, i32 13
  %32 = load %struct.elf_reloc*, %struct.elf_reloc** %31, align 8
  %33 = icmp eq %struct.elf_reloc* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %27, %34
  %35 = phi %struct.elf_reloc* [ %45, %34 ], [ %32, %27 ]
  %36 = phi %struct.elf_reloc** [ %44, %34 ], [ %31, %27 ]
  %37 = bitcast %struct.elf_reloc* %35 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %struct.elf_reloc** %36 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %struct.elf_reloc* %35 to i8*
  tail call void @nasm_free(i8* nonnull %40) #13
  %41 = load %struct.elf_section**, %struct.elf_section*** @sects, align 8
  %42 = getelementptr inbounds %struct.elf_section*, %struct.elf_section** %41, i64 %7
  %43 = load %struct.elf_section*, %struct.elf_section** %42, align 8
  %44 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %43, i64 0, i32 13
  %45 = load %struct.elf_reloc*, %struct.elf_reloc** %44, align 8
  %46 = icmp eq %struct.elf_reloc* %45, null
  br i1 %46, label %47, label %34

47:                                               ; preds = %34, %27
  %48 = phi %struct.elf_section** [ %28, %27 ], [ %41, %34 ]
  %49 = add nuw nsw i64 %7, 1
  %50 = load i32, i32* @nsects, align 4
  %51 = sext i32 %50 to i64
  %52 = icmp slt i64 %49, %51
  br i1 %52, label %5, label %53

53:                                               ; preds = %47, %0
  tail call void @hash_free(%struct.hash_table* nonnull @section_by_name) #13
  %54 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  tail call void @raa_free(%struct.RAA* %54) #13
  %55 = load i8*, i8** bitcast (%struct.elf_section*** @sects to i8**), align 8
  tail call void @nasm_free(i8* %55) #13
  %56 = load %struct.SAA*, %struct.SAA** @syms, align 8
  tail call void @saa_free(%struct.SAA* %56) #13
  %57 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  tail call void @raa_free(%struct.RAA* %57) #13
  %58 = load %struct.SAA*, %struct.SAA** @strs, align 8
  tail call void @saa_free(%struct.SAA* %58) #13
  %59 = load %struct.dfmt*, %struct.dfmt** @dfmt, align 8
  %60 = getelementptr inbounds %struct.dfmt, %struct.dfmt* %59, i64 0, i32 8
  %61 = load void ()*, void ()** %60, align 8
  tail call void %61() #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @elf64_init() #0 {
  store %struct.elf_format_info* @elf64_init.ef_elf64, %struct.elf_format_info** @efmt, align 8
  tail call fastcc void @elf_init()
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @elf64_out(i32, i8*, i32, i64, i32, i32) #0 {
  %7 = alloca i32, align 4
  %8 = icmp eq i32 %0, -1
  br i1 %8, label %9, label %12

9:                                                ; preds = %6
  %10 = icmp eq i32 %2, 1
  br i1 %10, label %618, label %11

11:                                               ; preds = %9
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.24, i64 0, i64 0)) #13
  br label %618

12:                                               ; preds = %6
  %13 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %14 = ashr i32 %0, 1
  %15 = sext i32 %14 to i64
  %16 = tail call i8* @raa_read_ptr(%struct.RAA* %13, i64 %15) #13
  %17 = bitcast i8* %16 to %struct.elf_section*
  %18 = icmp eq i8* %16, null
  br i1 %18, label %19, label %31

19:                                               ; preds = %12
  %20 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #13
  store i32 -1431655766, i32* %7, align 4
  %21 = call i32 @elf_section_names(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0), i32* nonnull %7)
  %22 = icmp eq i32 %21, %0
  br i1 %22, label %24, label %23

23:                                               ; preds = %19
  tail call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26, i64 0, i64 0)) #14
  unreachable

24:                                               ; preds = %19
  %25 = load %struct.elf_section**, %struct.elf_section*** @sects, align 8
  %26 = load i32, i32* @nsects, align 4
  %27 = add nsw i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %struct.elf_section*, %struct.elf_section** %25, i64 %28
  %30 = load %struct.elf_section*, %struct.elf_section** %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #13
  br label %31

31:                                               ; preds = %12, %24
  %32 = phi %struct.elf_section* [ %17, %12 ], [ %30, %24 ]
  %33 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = trunc i64 %34 to i32
  store i32 %35, i32* getelementptr inbounds (%struct.symlininfo, %struct.symlininfo* @elf64_out.sinfo, i64 0, i32 0), align 8
  %36 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = add nsw i32 %37, -1
  store i32 %38, i32* getelementptr inbounds (%struct.symlininfo, %struct.symlininfo* @elf64_out.sinfo, i64 0, i32 1), align 4
  store i32 %0, i32* getelementptr inbounds (%struct.symlininfo, %struct.symlininfo* @elf64_out.sinfo, i64 0, i32 2), align 8
  %39 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 11
  %40 = bitcast i8** %39 to i64*
  %41 = load i64, i64* %40, align 8
  store i64 %41, i64* bitcast (i8** getelementptr inbounds (%struct.symlininfo, %struct.symlininfo* @elf64_out.sinfo, i64 0, i32 3) to i64*), align 8
  %42 = load %struct.dfmt*, %struct.dfmt** @dfmt, align 8
  %43 = getelementptr inbounds %struct.dfmt, %struct.dfmt* %42, i64 0, i32 7
  %44 = load void (i32, i8*)*, void (i32, i8*)** %43, align 8
  tail call void %44(i32 64, i8* bitcast (%struct.symlininfo* @elf64_out.sinfo to i8*)) #13
  %45 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 6
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 8
  %48 = icmp ne i32 %2, 1
  %49 = and i1 %48, %47
  br i1 %49, label %50, label %55

50:                                               ; preds = %31
  %51 = load i8*, i8** %39, align 8
  tail call void (i32, i8*, ...) @nasm_warn(i32 2228224, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.27, i64 0, i64 0), i8* %51) #13
  %52 = tail call i64 @realsize(i32 %2, i64 %3) #13
  %53 = load i64, i64* %33, align 8
  %54 = add i64 %53, %52
  store i64 %54, i64* %33, align 8
  br label %618

55:                                               ; preds = %31
  switch i32 %2, label %617 [
    i32 1, label %56
    i32 0, label %66
    i32 3, label %74
    i32 6, label %395
    i32 7, label %394
    i32 8, label %456
    i32 9, label %540
  ]

56:                                               ; preds = %55
  br i1 %47, label %63, label %57

57:                                               ; preds = %56
  %58 = load i8*, i8** %39, align 8
  tail call void (i32, i8*, ...) @nasm_warn(i32 2097152, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.28, i64 0, i64 0), i8* %58) #13
  %59 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 0
  %60 = load %struct.SAA*, %struct.SAA** %59, align 8
  tail call void @saa_wbytes(%struct.SAA* %60, i8* null, i64 %3) #13
  %61 = load i64, i64* %33, align 8
  %62 = add i64 %61, %3
  store i64 %62, i64* %33, align 8
  br label %618

63:                                               ; preds = %56
  %64 = load i64, i64* %33, align 8
  %65 = add i64 %64, %3
  store i64 %65, i64* %33, align 8
  br label %618

66:                                               ; preds = %55
  %67 = icmp eq i32 %4, -1
  br i1 %67, label %69, label %68

68:                                               ; preds = %66
  tail call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.115, i64 0, i64 0)) #14
  unreachable

69:                                               ; preds = %66
  %70 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 0
  %71 = load %struct.SAA*, %struct.SAA** %70, align 8
  tail call void @saa_wbytes(%struct.SAA* %71, i8* %1, i64 %3) #13
  %72 = load i64, i64* %33, align 8
  %73 = add i64 %72, %3
  store i64 %73, i64* %33, align 8
  br label %618

74:                                               ; preds = %55
  %75 = trunc i64 %3 to i32
  %76 = icmp slt i32 %75, 0
  %77 = sub nsw i32 0, %75
  %78 = select i1 %76, i32 %77, i32 %75
  %79 = bitcast i8* %1 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = icmp eq i32 %4, -1
  br i1 %81, label %387, label %82

82:                                               ; preds = %74
  %83 = and i32 %4, 1
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %86, label %85

85:                                               ; preds = %82
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.29, i64 0, i64 0)) #13
  br label %387

86:                                               ; preds = %82
  %87 = icmp eq i32 %5, -1
  br i1 %87, label %88, label %270

88:                                               ; preds = %86
  switch i32 %75, label %269 [
    i32 1, label %89
    i32 -1, label %89
    i32 2, label %125
    i32 -2, label %125
    i32 4, label %161
    i32 -4, label %197
    i32 8, label %233
    i32 -8, label %233
  ]

89:                                               ; preds = %88, %88
  %90 = tail call noalias i8* @nasm_zalloc(i64 40) #15
  %91 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 14
  %92 = bitcast %struct.elf_reloc*** %91 to i8***
  %93 = load i8**, i8*** %92, align 8
  store i8* %90, i8** %93, align 8
  %94 = bitcast %struct.elf_reloc*** %91 to i8**
  store i8* %90, i8** %94, align 8
  %95 = load i64, i64* %33, align 8
  %96 = getelementptr inbounds i8, i8* %90, i64 8
  %97 = bitcast i8* %96 to i64*
  store i64 %95, i64* %97, align 8
  %98 = getelementptr inbounds i8, i8* %90, i64 24
  %99 = bitcast i8* %98 to i64*
  store i64 %80, i64* %99, align 8
  %100 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %101 = ashr i32 %4, 1
  %102 = sext i32 %101 to i64
  %103 = tail call i8* @raa_read_ptr(%struct.RAA* %100, i64 %102) #13
  %104 = icmp eq i8* %103, null
  br i1 %104, label %111, label %105

105:                                              ; preds = %89
  %106 = getelementptr inbounds i8, i8* %103, i64 36
  %107 = bitcast i8* %106 to i32*
  %108 = load i32, i32* %107, align 4
  %109 = add nsw i32 %108, 1
  %110 = sext i32 %109 to i64
  br label %116

111:                                              ; preds = %89
  %112 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %113 = sext i32 %4 to i64
  %114 = tail call i64 @raa_read(%struct.RAA* %112, i64 %113) #13
  %115 = add nsw i64 %114, 1073741824
  br label %116

116:                                              ; preds = %105, %111
  %117 = phi i64 [ %110, %105 ], [ %115, %111 ]
  %118 = getelementptr inbounds i8, i8* %90, i64 16
  %119 = bitcast i8* %118 to i64*
  store i64 %117, i64* %119, align 8
  %120 = getelementptr inbounds i8, i8* %90, i64 32
  %121 = bitcast i8* %120 to i32*
  store i32 14, i32* %121, align 8
  %122 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 3
  %123 = load i64, i64* %122, align 8
  %124 = add i64 %123, 1
  store i64 %124, i64* %122, align 8
  br label %387

125:                                              ; preds = %88, %88
  %126 = tail call noalias i8* @nasm_zalloc(i64 40) #15
  %127 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 14
  %128 = bitcast %struct.elf_reloc*** %127 to i8***
  %129 = load i8**, i8*** %128, align 8
  store i8* %126, i8** %129, align 8
  %130 = bitcast %struct.elf_reloc*** %127 to i8**
  store i8* %126, i8** %130, align 8
  %131 = load i64, i64* %33, align 8
  %132 = getelementptr inbounds i8, i8* %126, i64 8
  %133 = bitcast i8* %132 to i64*
  store i64 %131, i64* %133, align 8
  %134 = getelementptr inbounds i8, i8* %126, i64 24
  %135 = bitcast i8* %134 to i64*
  store i64 %80, i64* %135, align 8
  %136 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %137 = ashr i32 %4, 1
  %138 = sext i32 %137 to i64
  %139 = tail call i8* @raa_read_ptr(%struct.RAA* %136, i64 %138) #13
  %140 = icmp eq i8* %139, null
  br i1 %140, label %147, label %141

141:                                              ; preds = %125
  %142 = getelementptr inbounds i8, i8* %139, i64 36
  %143 = bitcast i8* %142 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = add nsw i32 %144, 1
  %146 = sext i32 %145 to i64
  br label %152

147:                                              ; preds = %125
  %148 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %149 = sext i32 %4 to i64
  %150 = tail call i64 @raa_read(%struct.RAA* %148, i64 %149) #13
  %151 = add nsw i64 %150, 1073741824
  br label %152

152:                                              ; preds = %141, %147
  %153 = phi i64 [ %146, %141 ], [ %151, %147 ]
  %154 = getelementptr inbounds i8, i8* %126, i64 16
  %155 = bitcast i8* %154 to i64*
  store i64 %153, i64* %155, align 8
  %156 = getelementptr inbounds i8, i8* %126, i64 32
  %157 = bitcast i8* %156 to i32*
  store i32 12, i32* %157, align 8
  %158 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 3
  %159 = load i64, i64* %158, align 8
  %160 = add i64 %159, 1
  store i64 %160, i64* %158, align 8
  br label %387

161:                                              ; preds = %88
  %162 = tail call noalias i8* @nasm_zalloc(i64 40) #15
  %163 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 14
  %164 = bitcast %struct.elf_reloc*** %163 to i8***
  %165 = load i8**, i8*** %164, align 8
  store i8* %162, i8** %165, align 8
  %166 = bitcast %struct.elf_reloc*** %163 to i8**
  store i8* %162, i8** %166, align 8
  %167 = load i64, i64* %33, align 8
  %168 = getelementptr inbounds i8, i8* %162, i64 8
  %169 = bitcast i8* %168 to i64*
  store i64 %167, i64* %169, align 8
  %170 = getelementptr inbounds i8, i8* %162, i64 24
  %171 = bitcast i8* %170 to i64*
  store i64 %80, i64* %171, align 8
  %172 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %173 = ashr i32 %4, 1
  %174 = sext i32 %173 to i64
  %175 = tail call i8* @raa_read_ptr(%struct.RAA* %172, i64 %174) #13
  %176 = icmp eq i8* %175, null
  br i1 %176, label %183, label %177

177:                                              ; preds = %161
  %178 = getelementptr inbounds i8, i8* %175, i64 36
  %179 = bitcast i8* %178 to i32*
  %180 = load i32, i32* %179, align 4
  %181 = add nsw i32 %180, 1
  %182 = sext i32 %181 to i64
  br label %188

183:                                              ; preds = %161
  %184 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %185 = sext i32 %4 to i64
  %186 = tail call i64 @raa_read(%struct.RAA* %184, i64 %185) #13
  %187 = add nsw i64 %186, 1073741824
  br label %188

188:                                              ; preds = %177, %183
  %189 = phi i64 [ %182, %177 ], [ %187, %183 ]
  %190 = getelementptr inbounds i8, i8* %162, i64 16
  %191 = bitcast i8* %190 to i64*
  store i64 %189, i64* %191, align 8
  %192 = getelementptr inbounds i8, i8* %162, i64 32
  %193 = bitcast i8* %192 to i32*
  store i32 10, i32* %193, align 8
  %194 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 3
  %195 = load i64, i64* %194, align 8
  %196 = add i64 %195, 1
  store i64 %196, i64* %194, align 8
  br label %387

197:                                              ; preds = %88
  %198 = tail call noalias i8* @nasm_zalloc(i64 40) #15
  %199 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 14
  %200 = bitcast %struct.elf_reloc*** %199 to i8***
  %201 = load i8**, i8*** %200, align 8
  store i8* %198, i8** %201, align 8
  %202 = bitcast %struct.elf_reloc*** %199 to i8**
  store i8* %198, i8** %202, align 8
  %203 = load i64, i64* %33, align 8
  %204 = getelementptr inbounds i8, i8* %198, i64 8
  %205 = bitcast i8* %204 to i64*
  store i64 %203, i64* %205, align 8
  %206 = getelementptr inbounds i8, i8* %198, i64 24
  %207 = bitcast i8* %206 to i64*
  store i64 %80, i64* %207, align 8
  %208 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %209 = ashr i32 %4, 1
  %210 = sext i32 %209 to i64
  %211 = tail call i8* @raa_read_ptr(%struct.RAA* %208, i64 %210) #13
  %212 = icmp eq i8* %211, null
  br i1 %212, label %219, label %213

213:                                              ; preds = %197
  %214 = getelementptr inbounds i8, i8* %211, i64 36
  %215 = bitcast i8* %214 to i32*
  %216 = load i32, i32* %215, align 4
  %217 = add nsw i32 %216, 1
  %218 = sext i32 %217 to i64
  br label %224

219:                                              ; preds = %197
  %220 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %221 = sext i32 %4 to i64
  %222 = tail call i64 @raa_read(%struct.RAA* %220, i64 %221) #13
  %223 = add nsw i64 %222, 1073741824
  br label %224

224:                                              ; preds = %213, %219
  %225 = phi i64 [ %218, %213 ], [ %223, %219 ]
  %226 = getelementptr inbounds i8, i8* %198, i64 16
  %227 = bitcast i8* %226 to i64*
  store i64 %225, i64* %227, align 8
  %228 = getelementptr inbounds i8, i8* %198, i64 32
  %229 = bitcast i8* %228 to i32*
  store i32 11, i32* %229, align 8
  %230 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 3
  %231 = load i64, i64* %230, align 8
  %232 = add i64 %231, 1
  store i64 %232, i64* %230, align 8
  br label %387

233:                                              ; preds = %88, %88
  %234 = tail call noalias i8* @nasm_zalloc(i64 40) #15
  %235 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 14
  %236 = bitcast %struct.elf_reloc*** %235 to i8***
  %237 = load i8**, i8*** %236, align 8
  store i8* %234, i8** %237, align 8
  %238 = bitcast %struct.elf_reloc*** %235 to i8**
  store i8* %234, i8** %238, align 8
  %239 = load i64, i64* %33, align 8
  %240 = getelementptr inbounds i8, i8* %234, i64 8
  %241 = bitcast i8* %240 to i64*
  store i64 %239, i64* %241, align 8
  %242 = getelementptr inbounds i8, i8* %234, i64 24
  %243 = bitcast i8* %242 to i64*
  store i64 %80, i64* %243, align 8
  %244 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %245 = ashr i32 %4, 1
  %246 = sext i32 %245 to i64
  %247 = tail call i8* @raa_read_ptr(%struct.RAA* %244, i64 %246) #13
  %248 = icmp eq i8* %247, null
  br i1 %248, label %255, label %249

249:                                              ; preds = %233
  %250 = getelementptr inbounds i8, i8* %247, i64 36
  %251 = bitcast i8* %250 to i32*
  %252 = load i32, i32* %251, align 4
  %253 = add nsw i32 %252, 1
  %254 = sext i32 %253 to i64
  br label %260

255:                                              ; preds = %233
  %256 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %257 = sext i32 %4 to i64
  %258 = tail call i64 @raa_read(%struct.RAA* %256, i64 %257) #13
  %259 = add nsw i64 %258, 1073741824
  br label %260

260:                                              ; preds = %249, %255
  %261 = phi i64 [ %254, %249 ], [ %259, %255 ]
  %262 = getelementptr inbounds i8, i8* %234, i64 16
  %263 = bitcast i8* %262 to i64*
  store i64 %261, i64* %263, align 8
  %264 = getelementptr inbounds i8, i8* %234, i64 32
  %265 = bitcast i8* %264 to i32*
  store i32 1, i32* %265, align 8
  %266 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 3
  %267 = load i64, i64* %266, align 8
  %268 = add i64 %267, 1
  store i64 %268, i64* %266, align 8
  br label %387

269:                                              ; preds = %88
  tail call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.116, i64 0, i64 0)) #14
  unreachable

270:                                              ; preds = %86
  %271 = load i32, i32* @elf_gotpc_sect, align 4
  %272 = add nsw i32 %271, 1
  %273 = icmp eq i32 %272, %5
  br i1 %273, label %274, label %312

274:                                              ; preds = %270
  %275 = load i64, i64* %33, align 8
  %276 = add i64 %275, %80
  %277 = tail call noalias i8* @nasm_zalloc(i64 40) #15
  %278 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 14
  %279 = bitcast %struct.elf_reloc*** %278 to i8***
  %280 = load i8**, i8*** %279, align 8
  store i8* %277, i8** %280, align 8
  %281 = bitcast %struct.elf_reloc*** %278 to i8**
  store i8* %277, i8** %281, align 8
  %282 = load i64, i64* %33, align 8
  %283 = getelementptr inbounds i8, i8* %277, i64 8
  %284 = bitcast i8* %283 to i64*
  store i64 %282, i64* %284, align 8
  %285 = getelementptr inbounds i8, i8* %277, i64 24
  %286 = bitcast i8* %285 to i64*
  store i64 %276, i64* %286, align 8
  %287 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %288 = ashr i32 %4, 1
  %289 = sext i32 %288 to i64
  %290 = tail call i8* @raa_read_ptr(%struct.RAA* %287, i64 %289) #13
  %291 = icmp eq i8* %290, null
  br i1 %291, label %298, label %292

292:                                              ; preds = %274
  %293 = getelementptr inbounds i8, i8* %290, i64 36
  %294 = bitcast i8* %293 to i32*
  %295 = load i32, i32* %294, align 4
  %296 = add nsw i32 %295, 1
  %297 = sext i32 %296 to i64
  br label %303

298:                                              ; preds = %274
  %299 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %300 = sext i32 %4 to i64
  %301 = tail call i64 @raa_read(%struct.RAA* %299, i64 %300) #13
  %302 = add nsw i64 %301, 1073741824
  br label %303

303:                                              ; preds = %292, %298
  %304 = phi i64 [ %297, %292 ], [ %302, %298 ]
  %305 = getelementptr inbounds i8, i8* %277, i64 16
  %306 = bitcast i8* %305 to i64*
  store i64 %304, i64* %306, align 8
  %307 = getelementptr inbounds i8, i8* %277, i64 32
  %308 = bitcast i8* %307 to i32*
  store i32 26, i32* %308, align 8
  %309 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 3
  %310 = load i64, i64* %309, align 8
  %311 = add i64 %310, 1
  store i64 %311, i64* %309, align 8
  br label %387

312:                                              ; preds = %270
  %313 = load i32, i32* @elf_gotoff_sect, align 4
  %314 = add nsw i32 %313, 1
  %315 = icmp eq i32 %314, %5
  br i1 %315, label %316, label %355

316:                                              ; preds = %312
  %317 = icmp eq i32 %78, 8
  br i1 %317, label %319, label %318

318:                                              ; preds = %316
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.117, i64 0, i64 0)) #13
  br label %387

319:                                              ; preds = %316
  %320 = tail call noalias i8* @nasm_zalloc(i64 40) #15
  %321 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 14
  %322 = bitcast %struct.elf_reloc*** %321 to i8***
  %323 = load i8**, i8*** %322, align 8
  store i8* %320, i8** %323, align 8
  %324 = bitcast %struct.elf_reloc*** %321 to i8**
  store i8* %320, i8** %324, align 8
  %325 = load i64, i64* %33, align 8
  %326 = getelementptr inbounds i8, i8* %320, i64 8
  %327 = bitcast i8* %326 to i64*
  store i64 %325, i64* %327, align 8
  %328 = getelementptr inbounds i8, i8* %320, i64 24
  %329 = bitcast i8* %328 to i64*
  store i64 %80, i64* %329, align 8
  %330 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %331 = ashr i32 %4, 1
  %332 = sext i32 %331 to i64
  %333 = tail call i8* @raa_read_ptr(%struct.RAA* %330, i64 %332) #13
  %334 = icmp eq i8* %333, null
  br i1 %334, label %341, label %335

335:                                              ; preds = %319
  %336 = getelementptr inbounds i8, i8* %333, i64 36
  %337 = bitcast i8* %336 to i32*
  %338 = load i32, i32* %337, align 4
  %339 = add nsw i32 %338, 1
  %340 = sext i32 %339 to i64
  br label %346

341:                                              ; preds = %319
  %342 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %343 = sext i32 %4 to i64
  %344 = tail call i64 @raa_read(%struct.RAA* %342, i64 %343) #13
  %345 = add nsw i64 %344, 1073741824
  br label %346

346:                                              ; preds = %335, %341
  %347 = phi i64 [ %340, %335 ], [ %345, %341 ]
  %348 = getelementptr inbounds i8, i8* %320, i64 16
  %349 = bitcast i8* %348 to i64*
  store i64 %347, i64* %349, align 8
  %350 = getelementptr inbounds i8, i8* %320, i64 32
  %351 = bitcast i8* %350 to i32*
  store i32 25, i32* %351, align 8
  %352 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 3
  %353 = load i64, i64* %352, align 8
  %354 = add i64 %353, 1
  store i64 %354, i64* %352, align 8
  br label %387

355:                                              ; preds = %312
  %356 = load i32, i32* @elf_got_sect, align 4
  %357 = add nsw i32 %356, 1
  %358 = icmp eq i32 %357, %5
  br i1 %358, label %359, label %365

359:                                              ; preds = %355
  switch i32 %78, label %364 [
    i32 4, label %360
    i32 8, label %362
  ]

360:                                              ; preds = %359
  %361 = tail call fastcc i64 @elf_add_gsym_reloc(%struct.elf_section* %32, i32 %4, i64 %80, i64 0, i32 3, i1 zeroext true)
  br label %387

362:                                              ; preds = %359
  %363 = tail call fastcc i64 @elf_add_gsym_reloc(%struct.elf_section* %32, i32 %4, i64 %80, i64 0, i32 27, i1 zeroext true)
  br label %387

364:                                              ; preds = %359
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.118, i64 0, i64 0)) #13
  br label %387

365:                                              ; preds = %355
  %366 = load i32, i32* @elf_sym_sect, align 4
  %367 = add nsw i32 %366, 1
  %368 = icmp eq i32 %367, %5
  br i1 %368, label %369, label %381

369:                                              ; preds = %365
  switch i32 %75, label %380 [
    i32 1, label %370
    i32 -1, label %370
    i32 2, label %372
    i32 -2, label %372
    i32 4, label %374
    i32 -4, label %376
    i32 8, label %378
    i32 -8, label %378
  ]

370:                                              ; preds = %369, %369
  %371 = tail call fastcc i64 @elf_add_gsym_reloc(%struct.elf_section* %32, i32 %4, i64 %80, i64 0, i32 14, i1 zeroext false)
  br label %387

372:                                              ; preds = %369, %369
  %373 = tail call fastcc i64 @elf_add_gsym_reloc(%struct.elf_section* %32, i32 %4, i64 %80, i64 0, i32 12, i1 zeroext false)
  br label %387

374:                                              ; preds = %369
  %375 = tail call fastcc i64 @elf_add_gsym_reloc(%struct.elf_section* %32, i32 %4, i64 %80, i64 0, i32 10, i1 zeroext false)
  br label %387

376:                                              ; preds = %369
  %377 = tail call fastcc i64 @elf_add_gsym_reloc(%struct.elf_section* %32, i32 %4, i64 %80, i64 0, i32 11, i1 zeroext false)
  br label %387

378:                                              ; preds = %369, %369
  %379 = tail call fastcc i64 @elf_add_gsym_reloc(%struct.elf_section* %32, i32 %4, i64 %80, i64 0, i32 1, i1 zeroext false)
  br label %387

380:                                              ; preds = %369
  tail call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.119, i64 0, i64 0)) #14
  unreachable

381:                                              ; preds = %365
  %382 = load i32, i32* @elf_plt_sect, align 4
  %383 = add nsw i32 %382, 1
  %384 = icmp eq i32 %383, %5
  br i1 %384, label %385, label %386

385:                                              ; preds = %381
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.30, i64 0, i64 0)) #13
  br label %387

386:                                              ; preds = %381
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.31, i64 0, i64 0)) #13
  br label %387

387:                                              ; preds = %116, %152, %188, %224, %260, %85, %303, %364, %362, %360, %385, %386, %370, %372, %374, %376, %378, %318, %346, %74
  %388 = phi i64 [ %80, %74 ], [ %80, %85 ], [ 0, %303 ], [ %80, %318 ], [ 0, %346 ], [ %80, %364 ], [ 0, %362 ], [ 0, %360 ], [ 0, %378 ], [ 0, %376 ], [ 0, %374 ], [ 0, %372 ], [ 0, %370 ], [ %80, %385 ], [ %80, %386 ], [ 0, %260 ], [ 0, %224 ], [ 0, %188 ], [ 0, %152 ], [ 0, %116 ]
  %389 = zext i32 %78 to i64
  %390 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 0
  %391 = load %struct.SAA*, %struct.SAA** %390, align 8
  tail call void @saa_writeaddr(%struct.SAA* %391, i64 %388, i64 %389) #13
  %392 = load i64, i64* %33, align 8
  %393 = add i64 %392, %389
  store i64 %393, i64* %33, align 8
  br label %618

394:                                              ; preds = %55
  br label %395

395:                                              ; preds = %55, %394
  %396 = phi i32 [ 13, %394 ], [ 15, %55 ]
  %397 = phi i32 [ 2, %394 ], [ 1, %55 ]
  %398 = bitcast i8* %1 to i64*
  %399 = load i64, i64* %398, align 8
  %400 = sub i64 %399, %3
  %401 = icmp eq i32 %4, %0
  br i1 %401, label %402, label %403

402:                                              ; preds = %395
  tail call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.120, i64 0, i64 0)) #14
  unreachable

403:                                              ; preds = %395
  %404 = icmp eq i32 %4, -1
  br i1 %404, label %449, label %405

405:                                              ; preds = %403
  %406 = and i32 %4, 1
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %409, label %408

408:                                              ; preds = %405
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.29, i64 0, i64 0)) #13
  br label %449

409:                                              ; preds = %405
  %410 = icmp eq i32 %5, -1
  br i1 %410, label %411, label %447

411:                                              ; preds = %409
  %412 = tail call noalias i8* @nasm_zalloc(i64 40) #15
  %413 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 14
  %414 = bitcast %struct.elf_reloc*** %413 to i8***
  %415 = load i8**, i8*** %414, align 8
  store i8* %412, i8** %415, align 8
  %416 = bitcast %struct.elf_reloc*** %413 to i8**
  store i8* %412, i8** %416, align 8
  %417 = load i64, i64* %33, align 8
  %418 = getelementptr inbounds i8, i8* %412, i64 8
  %419 = bitcast i8* %418 to i64*
  store i64 %417, i64* %419, align 8
  %420 = getelementptr inbounds i8, i8* %412, i64 24
  %421 = bitcast i8* %420 to i64*
  store i64 %400, i64* %421, align 8
  %422 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %423 = ashr i32 %4, 1
  %424 = sext i32 %423 to i64
  %425 = tail call i8* @raa_read_ptr(%struct.RAA* %422, i64 %424) #13
  %426 = icmp eq i8* %425, null
  br i1 %426, label %433, label %427

427:                                              ; preds = %411
  %428 = getelementptr inbounds i8, i8* %425, i64 36
  %429 = bitcast i8* %428 to i32*
  %430 = load i32, i32* %429, align 4
  %431 = add nsw i32 %430, 1
  %432 = sext i32 %431 to i64
  br label %438

433:                                              ; preds = %411
  %434 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %435 = sext i32 %4 to i64
  %436 = tail call i64 @raa_read(%struct.RAA* %434, i64 %435) #13
  %437 = add nsw i64 %436, 1073741824
  br label %438

438:                                              ; preds = %427, %433
  %439 = phi i64 [ %432, %427 ], [ %437, %433 ]
  %440 = getelementptr inbounds i8, i8* %412, i64 16
  %441 = bitcast i8* %440 to i64*
  store i64 %439, i64* %441, align 8
  %442 = getelementptr inbounds i8, i8* %412, i64 32
  %443 = bitcast i8* %442 to i32*
  store i32 %396, i32* %443, align 8
  %444 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 3
  %445 = load i64, i64* %444, align 8
  %446 = add i64 %445, 1
  store i64 %446, i64* %444, align 8
  br label %449

447:                                              ; preds = %409
  %448 = shl nuw nsw i32 %397, 3
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.32, i64 0, i64 0), i32 %448) #13
  br label %449

449:                                              ; preds = %408, %447, %438, %403
  %450 = phi i64 [ %400, %403 ], [ %400, %408 ], [ 0, %438 ], [ %400, %447 ]
  %451 = zext i32 %397 to i64
  %452 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 0
  %453 = load %struct.SAA*, %struct.SAA** %452, align 8
  tail call void @saa_writeaddr(%struct.SAA* %453, i64 %450, i64 %451) #13
  %454 = load i64, i64* %33, align 8
  %455 = add i64 %454, %451
  store i64 %455, i64* %33, align 8
  br label %618

456:                                              ; preds = %55
  %457 = bitcast i8* %1 to i64*
  %458 = load i64, i64* %457, align 8
  %459 = sub i64 %458, %3
  %460 = icmp eq i32 %4, %0
  br i1 %460, label %461, label %462

461:                                              ; preds = %456
  tail call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.35, i64 0, i64 0)) #14
  unreachable

462:                                              ; preds = %456
  %463 = icmp eq i32 %4, -1
  br i1 %463, label %534, label %464

464:                                              ; preds = %462
  %465 = and i32 %4, 1
  %466 = icmp eq i32 %465, 0
  br i1 %466, label %468, label %467

467:                                              ; preds = %464
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.121, i64 0, i64 0)) #13
  br label %534

468:                                              ; preds = %464
  %469 = icmp eq i32 %5, -1
  br i1 %469, label %470, label %506

470:                                              ; preds = %468
  %471 = tail call noalias i8* @nasm_zalloc(i64 40) #15
  %472 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 14
  %473 = bitcast %struct.elf_reloc*** %472 to i8***
  %474 = load i8**, i8*** %473, align 8
  store i8* %471, i8** %474, align 8
  %475 = bitcast %struct.elf_reloc*** %472 to i8**
  store i8* %471, i8** %475, align 8
  %476 = load i64, i64* %33, align 8
  %477 = getelementptr inbounds i8, i8* %471, i64 8
  %478 = bitcast i8* %477 to i64*
  store i64 %476, i64* %478, align 8
  %479 = getelementptr inbounds i8, i8* %471, i64 24
  %480 = bitcast i8* %479 to i64*
  store i64 %459, i64* %480, align 8
  %481 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %482 = ashr i32 %4, 1
  %483 = sext i32 %482 to i64
  %484 = tail call i8* @raa_read_ptr(%struct.RAA* %481, i64 %483) #13
  %485 = icmp eq i8* %484, null
  br i1 %485, label %492, label %486

486:                                              ; preds = %470
  %487 = getelementptr inbounds i8, i8* %484, i64 36
  %488 = bitcast i8* %487 to i32*
  %489 = load i32, i32* %488, align 4
  %490 = add nsw i32 %489, 1
  %491 = sext i32 %490 to i64
  br label %497

492:                                              ; preds = %470
  %493 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %494 = sext i32 %4 to i64
  %495 = tail call i64 @raa_read(%struct.RAA* %493, i64 %494) #13
  %496 = add nsw i64 %495, 1073741824
  br label %497

497:                                              ; preds = %486, %492
  %498 = phi i64 [ %491, %486 ], [ %496, %492 ]
  %499 = getelementptr inbounds i8, i8* %471, i64 16
  %500 = bitcast i8* %499 to i64*
  store i64 %498, i64* %500, align 8
  %501 = getelementptr inbounds i8, i8* %471, i64 32
  %502 = bitcast i8* %501 to i32*
  store i32 2, i32* %502, align 8
  %503 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 3
  %504 = load i64, i64* %503, align 8
  %505 = add i64 %504, 1
  store i64 %505, i64* %503, align 8
  br label %534

506:                                              ; preds = %468
  %507 = load i32, i32* @elf_plt_sect, align 4
  %508 = add nsw i32 %507, 1
  %509 = icmp eq i32 %508, %5
  br i1 %509, label %510, label %512

510:                                              ; preds = %506
  %511 = tail call fastcc i64 @elf_add_gsym_reloc(%struct.elf_section* %32, i32 %4, i64 %458, i64 %3, i32 4, i1 zeroext true)
  br label %534

512:                                              ; preds = %506
  %513 = load i32, i32* @elf_gotpc_sect, align 4
  %514 = add nsw i32 %513, 1
  %515 = icmp eq i32 %514, %5
  br i1 %515, label %520, label %516

516:                                              ; preds = %512
  %517 = load i32, i32* @elf_got_sect, align 4
  %518 = add nsw i32 %517, 1
  %519 = icmp eq i32 %518, %5
  br i1 %519, label %520, label %522

520:                                              ; preds = %516, %512
  %521 = tail call fastcc i64 @elf_add_gsym_reloc(%struct.elf_section* %32, i32 %4, i64 %458, i64 %3, i32 9, i1 zeroext true)
  br label %534

522:                                              ; preds = %516
  %523 = load i32, i32* @elf_gotoff_sect, align 4
  %524 = add nsw i32 %523, 1
  %525 = icmp eq i32 %524, %5
  br i1 %525, label %526, label %527

526:                                              ; preds = %522
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.122, i64 0, i64 0)) #13
  br label %534

527:                                              ; preds = %522
  %528 = load i32, i32* @elf_gottpoff_sect, align 4
  %529 = add nsw i32 %528, 1
  %530 = icmp eq i32 %529, %5
  br i1 %530, label %531, label %533

531:                                              ; preds = %527
  %532 = tail call fastcc i64 @elf_add_gsym_reloc(%struct.elf_section* %32, i32 %4, i64 %458, i64 %3, i32 22, i1 zeroext true)
  br label %534

533:                                              ; preds = %527
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.123, i64 0, i64 0)) #13
  br label %534

534:                                              ; preds = %467, %510, %526, %533, %531, %520, %497, %462
  %535 = phi i64 [ %459, %462 ], [ %459, %467 ], [ 0, %497 ], [ 0, %510 ], [ 0, %520 ], [ %459, %526 ], [ 0, %531 ], [ %459, %533 ]
  %536 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 0
  %537 = load %struct.SAA*, %struct.SAA** %536, align 8
  tail call void @saa_writeaddr(%struct.SAA* %537, i64 %535, i64 4) #13
  %538 = load i64, i64* %33, align 8
  %539 = add i64 %538, 4
  store i64 %539, i64* %33, align 8
  br label %618

540:                                              ; preds = %55
  %541 = bitcast i8* %1 to i64*
  %542 = load i64, i64* %541, align 8
  %543 = sub i64 %542, %3
  %544 = icmp eq i32 %4, %0
  br i1 %544, label %545, label %546

545:                                              ; preds = %540
  tail call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.124, i64 0, i64 0)) #14
  unreachable

546:                                              ; preds = %540
  %547 = icmp eq i32 %4, -1
  br i1 %547, label %611, label %548

548:                                              ; preds = %546
  %549 = and i32 %4, 1
  %550 = icmp eq i32 %549, 0
  br i1 %550, label %552, label %551

551:                                              ; preds = %548
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.121, i64 0, i64 0)) #13
  br label %611

552:                                              ; preds = %548
  %553 = icmp eq i32 %5, -1
  br i1 %553, label %554, label %590

554:                                              ; preds = %552
  %555 = tail call noalias i8* @nasm_zalloc(i64 40) #15
  %556 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 14
  %557 = bitcast %struct.elf_reloc*** %556 to i8***
  %558 = load i8**, i8*** %557, align 8
  store i8* %555, i8** %558, align 8
  %559 = bitcast %struct.elf_reloc*** %556 to i8**
  store i8* %555, i8** %559, align 8
  %560 = load i64, i64* %33, align 8
  %561 = getelementptr inbounds i8, i8* %555, i64 8
  %562 = bitcast i8* %561 to i64*
  store i64 %560, i64* %562, align 8
  %563 = getelementptr inbounds i8, i8* %555, i64 24
  %564 = bitcast i8* %563 to i64*
  store i64 %543, i64* %564, align 8
  %565 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %566 = ashr i32 %4, 1
  %567 = sext i32 %566 to i64
  %568 = tail call i8* @raa_read_ptr(%struct.RAA* %565, i64 %567) #13
  %569 = icmp eq i8* %568, null
  br i1 %569, label %576, label %570

570:                                              ; preds = %554
  %571 = getelementptr inbounds i8, i8* %568, i64 36
  %572 = bitcast i8* %571 to i32*
  %573 = load i32, i32* %572, align 4
  %574 = add nsw i32 %573, 1
  %575 = sext i32 %574 to i64
  br label %581

576:                                              ; preds = %554
  %577 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %578 = sext i32 %4 to i64
  %579 = tail call i64 @raa_read(%struct.RAA* %577, i64 %578) #13
  %580 = add nsw i64 %579, 1073741824
  br label %581

581:                                              ; preds = %570, %576
  %582 = phi i64 [ %575, %570 ], [ %580, %576 ]
  %583 = getelementptr inbounds i8, i8* %555, i64 16
  %584 = bitcast i8* %583 to i64*
  store i64 %582, i64* %584, align 8
  %585 = getelementptr inbounds i8, i8* %555, i64 32
  %586 = bitcast i8* %585 to i32*
  store i32 24, i32* %586, align 8
  %587 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 3
  %588 = load i64, i64* %587, align 8
  %589 = add i64 %588, 1
  store i64 %589, i64* %587, align 8
  br label %611

590:                                              ; preds = %552
  %591 = load i32, i32* @elf_gotpc_sect, align 4
  %592 = add nsw i32 %591, 1
  %593 = icmp eq i32 %592, %5
  br i1 %593, label %598, label %594

594:                                              ; preds = %590
  %595 = load i32, i32* @elf_got_sect, align 4
  %596 = add nsw i32 %595, 1
  %597 = icmp eq i32 %596, %5
  br i1 %597, label %598, label %600

598:                                              ; preds = %594, %590
  %599 = tail call fastcc i64 @elf_add_gsym_reloc(%struct.elf_section* %32, i32 %4, i64 %542, i64 %3, i32 28, i1 zeroext true)
  br label %611

600:                                              ; preds = %594
  %601 = load i32, i32* @elf_gotoff_sect, align 4
  %602 = add nsw i32 %601, 1
  %603 = icmp eq i32 %602, %5
  br i1 %603, label %604, label %605

604:                                              ; preds = %600
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.125, i64 0, i64 0)) #13
  br label %611

605:                                              ; preds = %600
  %606 = load i32, i32* @elf_gottpoff_sect, align 4
  %607 = add nsw i32 %606, 1
  %608 = icmp eq i32 %607, %5
  br i1 %608, label %609, label %610

609:                                              ; preds = %605
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.126, i64 0, i64 0)) #13
  br label %611

610:                                              ; preds = %605
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.123, i64 0, i64 0)) #13
  br label %611

611:                                              ; preds = %551, %598, %609, %610, %604, %581, %546
  %612 = phi i64 [ %543, %546 ], [ %543, %551 ], [ 0, %581 ], [ 0, %598 ], [ %543, %604 ], [ %543, %609 ], [ %543, %610 ]
  %613 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 0
  %614 = load %struct.SAA*, %struct.SAA** %613, align 8
  tail call void @saa_writeaddr(%struct.SAA* %614, i64 %612, i64 8) #13
  %615 = load i64, i64* %33, align 8
  %616 = add i64 %615, 8
  store i64 %616, i64* %33, align 8
  br label %618

617:                                              ; preds = %55
  tail call void @nasm_panic_from_macro(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.33, i64 0, i64 0), i32 1589) #14
  unreachable

618:                                              ; preds = %69, %387, %449, %534, %611, %63, %57, %11, %9, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @elfx32_init() #0 {
  store %struct.elf_format_info* @elfx32_init.ef_elfx32, %struct.elf_format_info** @efmt, align 8
  tail call fastcc void @elf_init()
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @elfx32_out(i32, i8*, i32, i64, i32, i32) #0 {
  %7 = alloca i32, align 4
  %8 = icmp eq i32 %0, -1
  br i1 %8, label %9, label %12

9:                                                ; preds = %6
  %10 = icmp eq i32 %2, 1
  br i1 %10, label %507, label %11

11:                                               ; preds = %9
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.24, i64 0, i64 0)) #13
  br label %507

12:                                               ; preds = %6
  %13 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %14 = ashr i32 %0, 1
  %15 = sext i32 %14 to i64
  %16 = tail call i8* @raa_read_ptr(%struct.RAA* %13, i64 %15) #13
  %17 = bitcast i8* %16 to %struct.elf_section*
  %18 = icmp eq i8* %16, null
  br i1 %18, label %19, label %31

19:                                               ; preds = %12
  %20 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #13
  store i32 -1431655766, i32* %7, align 4
  %21 = call i32 @elf_section_names(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0), i32* nonnull %7)
  %22 = icmp eq i32 %21, %0
  br i1 %22, label %24, label %23

23:                                               ; preds = %19
  tail call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26, i64 0, i64 0)) #14
  unreachable

24:                                               ; preds = %19
  %25 = load %struct.elf_section**, %struct.elf_section*** @sects, align 8
  %26 = load i32, i32* @nsects, align 4
  %27 = add nsw i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %struct.elf_section*, %struct.elf_section** %25, i64 %28
  %30 = load %struct.elf_section*, %struct.elf_section** %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #13
  br label %31

31:                                               ; preds = %12, %24
  %32 = phi %struct.elf_section* [ %17, %12 ], [ %30, %24 ]
  %33 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = trunc i64 %34 to i32
  store i32 %35, i32* getelementptr inbounds (%struct.symlininfo, %struct.symlininfo* @elfx32_out.sinfo, i64 0, i32 0), align 8
  %36 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = add nsw i32 %37, -1
  store i32 %38, i32* getelementptr inbounds (%struct.symlininfo, %struct.symlininfo* @elfx32_out.sinfo, i64 0, i32 1), align 4
  store i32 %0, i32* getelementptr inbounds (%struct.symlininfo, %struct.symlininfo* @elfx32_out.sinfo, i64 0, i32 2), align 8
  %39 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 11
  %40 = bitcast i8** %39 to i64*
  %41 = load i64, i64* %40, align 8
  store i64 %41, i64* bitcast (i8** getelementptr inbounds (%struct.symlininfo, %struct.symlininfo* @elfx32_out.sinfo, i64 0, i32 3) to i64*), align 8
  %42 = load %struct.dfmt*, %struct.dfmt** @dfmt, align 8
  %43 = getelementptr inbounds %struct.dfmt, %struct.dfmt* %42, i64 0, i32 7
  %44 = load void (i32, i8*)*, void (i32, i8*)** %43, align 8
  tail call void %44(i32 64, i8* bitcast (%struct.symlininfo* @elfx32_out.sinfo to i8*)) #13
  %45 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 6
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 8
  %48 = icmp ne i32 %2, 1
  %49 = and i1 %48, %47
  br i1 %49, label %50, label %55

50:                                               ; preds = %31
  %51 = load i8*, i8** %39, align 8
  tail call void (i32, i8*, ...) @nasm_warn(i32 2228224, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.27, i64 0, i64 0), i8* %51) #13
  %52 = tail call i64 @realsize(i32 %2, i64 %3) #13
  %53 = load i64, i64* %33, align 8
  %54 = add i64 %53, %52
  store i64 %54, i64* %33, align 8
  br label %507

55:                                               ; preds = %31
  switch i32 %2, label %506 [
    i32 1, label %56
    i32 0, label %66
    i32 3, label %74
    i32 6, label %356
    i32 7, label %355
    i32 8, label %417
    i32 9, label %501
  ]

56:                                               ; preds = %55
  br i1 %47, label %63, label %57

57:                                               ; preds = %56
  %58 = load i8*, i8** %39, align 8
  tail call void (i32, i8*, ...) @nasm_warn(i32 2097152, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.28, i64 0, i64 0), i8* %58) #13
  %59 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 0
  %60 = load %struct.SAA*, %struct.SAA** %59, align 8
  tail call void @saa_wbytes(%struct.SAA* %60, i8* null, i64 %3) #13
  %61 = load i64, i64* %33, align 8
  %62 = add i64 %61, %3
  store i64 %62, i64* %33, align 8
  br label %507

63:                                               ; preds = %56
  %64 = load i64, i64* %33, align 8
  %65 = add i64 %64, %3
  store i64 %65, i64* %33, align 8
  br label %507

66:                                               ; preds = %55
  %67 = icmp eq i32 %4, -1
  br i1 %67, label %69, label %68

68:                                               ; preds = %66
  tail call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.115, i64 0, i64 0)) #14
  unreachable

69:                                               ; preds = %66
  %70 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 0
  %71 = load %struct.SAA*, %struct.SAA** %70, align 8
  tail call void @saa_wbytes(%struct.SAA* %71, i8* %1, i64 %3) #13
  %72 = load i64, i64* %33, align 8
  %73 = add i64 %72, %3
  store i64 %73, i64* %33, align 8
  br label %507

74:                                               ; preds = %55
  %75 = trunc i64 %3 to i32
  %76 = icmp slt i32 %75, 0
  %77 = sub nsw i32 0, %75
  %78 = select i1 %76, i32 %77, i32 %75
  %79 = bitcast i8* %1 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = icmp eq i32 %4, -1
  br i1 %81, label %348, label %82

82:                                               ; preds = %74
  %83 = and i32 %4, 1
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %86, label %85

85:                                               ; preds = %82
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.29, i64 0, i64 0)) #13
  br label %348

86:                                               ; preds = %82
  %87 = icmp eq i32 %5, -1
  br i1 %87, label %88, label %270

88:                                               ; preds = %86
  switch i32 %75, label %269 [
    i32 1, label %89
    i32 -1, label %89
    i32 2, label %125
    i32 -2, label %125
    i32 4, label %161
    i32 -4, label %197
    i32 8, label %233
    i32 -8, label %233
  ]

89:                                               ; preds = %88, %88
  %90 = tail call noalias i8* @nasm_zalloc(i64 40) #15
  %91 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 14
  %92 = bitcast %struct.elf_reloc*** %91 to i8***
  %93 = load i8**, i8*** %92, align 8
  store i8* %90, i8** %93, align 8
  %94 = bitcast %struct.elf_reloc*** %91 to i8**
  store i8* %90, i8** %94, align 8
  %95 = load i64, i64* %33, align 8
  %96 = getelementptr inbounds i8, i8* %90, i64 8
  %97 = bitcast i8* %96 to i64*
  store i64 %95, i64* %97, align 8
  %98 = getelementptr inbounds i8, i8* %90, i64 24
  %99 = bitcast i8* %98 to i64*
  store i64 %80, i64* %99, align 8
  %100 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %101 = ashr i32 %4, 1
  %102 = sext i32 %101 to i64
  %103 = tail call i8* @raa_read_ptr(%struct.RAA* %100, i64 %102) #13
  %104 = icmp eq i8* %103, null
  br i1 %104, label %111, label %105

105:                                              ; preds = %89
  %106 = getelementptr inbounds i8, i8* %103, i64 36
  %107 = bitcast i8* %106 to i32*
  %108 = load i32, i32* %107, align 4
  %109 = add nsw i32 %108, 1
  %110 = sext i32 %109 to i64
  br label %116

111:                                              ; preds = %89
  %112 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %113 = sext i32 %4 to i64
  %114 = tail call i64 @raa_read(%struct.RAA* %112, i64 %113) #13
  %115 = add nsw i64 %114, 1073741824
  br label %116

116:                                              ; preds = %105, %111
  %117 = phi i64 [ %110, %105 ], [ %115, %111 ]
  %118 = getelementptr inbounds i8, i8* %90, i64 16
  %119 = bitcast i8* %118 to i64*
  store i64 %117, i64* %119, align 8
  %120 = getelementptr inbounds i8, i8* %90, i64 32
  %121 = bitcast i8* %120 to i32*
  store i32 14, i32* %121, align 8
  %122 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 3
  %123 = load i64, i64* %122, align 8
  %124 = add i64 %123, 1
  store i64 %124, i64* %122, align 8
  br label %348

125:                                              ; preds = %88, %88
  %126 = tail call noalias i8* @nasm_zalloc(i64 40) #15
  %127 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 14
  %128 = bitcast %struct.elf_reloc*** %127 to i8***
  %129 = load i8**, i8*** %128, align 8
  store i8* %126, i8** %129, align 8
  %130 = bitcast %struct.elf_reloc*** %127 to i8**
  store i8* %126, i8** %130, align 8
  %131 = load i64, i64* %33, align 8
  %132 = getelementptr inbounds i8, i8* %126, i64 8
  %133 = bitcast i8* %132 to i64*
  store i64 %131, i64* %133, align 8
  %134 = getelementptr inbounds i8, i8* %126, i64 24
  %135 = bitcast i8* %134 to i64*
  store i64 %80, i64* %135, align 8
  %136 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %137 = ashr i32 %4, 1
  %138 = sext i32 %137 to i64
  %139 = tail call i8* @raa_read_ptr(%struct.RAA* %136, i64 %138) #13
  %140 = icmp eq i8* %139, null
  br i1 %140, label %147, label %141

141:                                              ; preds = %125
  %142 = getelementptr inbounds i8, i8* %139, i64 36
  %143 = bitcast i8* %142 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = add nsw i32 %144, 1
  %146 = sext i32 %145 to i64
  br label %152

147:                                              ; preds = %125
  %148 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %149 = sext i32 %4 to i64
  %150 = tail call i64 @raa_read(%struct.RAA* %148, i64 %149) #13
  %151 = add nsw i64 %150, 1073741824
  br label %152

152:                                              ; preds = %141, %147
  %153 = phi i64 [ %146, %141 ], [ %151, %147 ]
  %154 = getelementptr inbounds i8, i8* %126, i64 16
  %155 = bitcast i8* %154 to i64*
  store i64 %153, i64* %155, align 8
  %156 = getelementptr inbounds i8, i8* %126, i64 32
  %157 = bitcast i8* %156 to i32*
  store i32 12, i32* %157, align 8
  %158 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 3
  %159 = load i64, i64* %158, align 8
  %160 = add i64 %159, 1
  store i64 %160, i64* %158, align 8
  br label %348

161:                                              ; preds = %88
  %162 = tail call noalias i8* @nasm_zalloc(i64 40) #15
  %163 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 14
  %164 = bitcast %struct.elf_reloc*** %163 to i8***
  %165 = load i8**, i8*** %164, align 8
  store i8* %162, i8** %165, align 8
  %166 = bitcast %struct.elf_reloc*** %163 to i8**
  store i8* %162, i8** %166, align 8
  %167 = load i64, i64* %33, align 8
  %168 = getelementptr inbounds i8, i8* %162, i64 8
  %169 = bitcast i8* %168 to i64*
  store i64 %167, i64* %169, align 8
  %170 = getelementptr inbounds i8, i8* %162, i64 24
  %171 = bitcast i8* %170 to i64*
  store i64 %80, i64* %171, align 8
  %172 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %173 = ashr i32 %4, 1
  %174 = sext i32 %173 to i64
  %175 = tail call i8* @raa_read_ptr(%struct.RAA* %172, i64 %174) #13
  %176 = icmp eq i8* %175, null
  br i1 %176, label %183, label %177

177:                                              ; preds = %161
  %178 = getelementptr inbounds i8, i8* %175, i64 36
  %179 = bitcast i8* %178 to i32*
  %180 = load i32, i32* %179, align 4
  %181 = add nsw i32 %180, 1
  %182 = sext i32 %181 to i64
  br label %188

183:                                              ; preds = %161
  %184 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %185 = sext i32 %4 to i64
  %186 = tail call i64 @raa_read(%struct.RAA* %184, i64 %185) #13
  %187 = add nsw i64 %186, 1073741824
  br label %188

188:                                              ; preds = %177, %183
  %189 = phi i64 [ %182, %177 ], [ %187, %183 ]
  %190 = getelementptr inbounds i8, i8* %162, i64 16
  %191 = bitcast i8* %190 to i64*
  store i64 %189, i64* %191, align 8
  %192 = getelementptr inbounds i8, i8* %162, i64 32
  %193 = bitcast i8* %192 to i32*
  store i32 10, i32* %193, align 8
  %194 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 3
  %195 = load i64, i64* %194, align 8
  %196 = add i64 %195, 1
  store i64 %196, i64* %194, align 8
  br label %348

197:                                              ; preds = %88
  %198 = tail call noalias i8* @nasm_zalloc(i64 40) #15
  %199 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 14
  %200 = bitcast %struct.elf_reloc*** %199 to i8***
  %201 = load i8**, i8*** %200, align 8
  store i8* %198, i8** %201, align 8
  %202 = bitcast %struct.elf_reloc*** %199 to i8**
  store i8* %198, i8** %202, align 8
  %203 = load i64, i64* %33, align 8
  %204 = getelementptr inbounds i8, i8* %198, i64 8
  %205 = bitcast i8* %204 to i64*
  store i64 %203, i64* %205, align 8
  %206 = getelementptr inbounds i8, i8* %198, i64 24
  %207 = bitcast i8* %206 to i64*
  store i64 %80, i64* %207, align 8
  %208 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %209 = ashr i32 %4, 1
  %210 = sext i32 %209 to i64
  %211 = tail call i8* @raa_read_ptr(%struct.RAA* %208, i64 %210) #13
  %212 = icmp eq i8* %211, null
  br i1 %212, label %219, label %213

213:                                              ; preds = %197
  %214 = getelementptr inbounds i8, i8* %211, i64 36
  %215 = bitcast i8* %214 to i32*
  %216 = load i32, i32* %215, align 4
  %217 = add nsw i32 %216, 1
  %218 = sext i32 %217 to i64
  br label %224

219:                                              ; preds = %197
  %220 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %221 = sext i32 %4 to i64
  %222 = tail call i64 @raa_read(%struct.RAA* %220, i64 %221) #13
  %223 = add nsw i64 %222, 1073741824
  br label %224

224:                                              ; preds = %213, %219
  %225 = phi i64 [ %218, %213 ], [ %223, %219 ]
  %226 = getelementptr inbounds i8, i8* %198, i64 16
  %227 = bitcast i8* %226 to i64*
  store i64 %225, i64* %227, align 8
  %228 = getelementptr inbounds i8, i8* %198, i64 32
  %229 = bitcast i8* %228 to i32*
  store i32 11, i32* %229, align 8
  %230 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 3
  %231 = load i64, i64* %230, align 8
  %232 = add i64 %231, 1
  store i64 %232, i64* %230, align 8
  br label %348

233:                                              ; preds = %88, %88
  %234 = tail call noalias i8* @nasm_zalloc(i64 40) #15
  %235 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 14
  %236 = bitcast %struct.elf_reloc*** %235 to i8***
  %237 = load i8**, i8*** %236, align 8
  store i8* %234, i8** %237, align 8
  %238 = bitcast %struct.elf_reloc*** %235 to i8**
  store i8* %234, i8** %238, align 8
  %239 = load i64, i64* %33, align 8
  %240 = getelementptr inbounds i8, i8* %234, i64 8
  %241 = bitcast i8* %240 to i64*
  store i64 %239, i64* %241, align 8
  %242 = getelementptr inbounds i8, i8* %234, i64 24
  %243 = bitcast i8* %242 to i64*
  store i64 %80, i64* %243, align 8
  %244 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %245 = ashr i32 %4, 1
  %246 = sext i32 %245 to i64
  %247 = tail call i8* @raa_read_ptr(%struct.RAA* %244, i64 %246) #13
  %248 = icmp eq i8* %247, null
  br i1 %248, label %255, label %249

249:                                              ; preds = %233
  %250 = getelementptr inbounds i8, i8* %247, i64 36
  %251 = bitcast i8* %250 to i32*
  %252 = load i32, i32* %251, align 4
  %253 = add nsw i32 %252, 1
  %254 = sext i32 %253 to i64
  br label %260

255:                                              ; preds = %233
  %256 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %257 = sext i32 %4 to i64
  %258 = tail call i64 @raa_read(%struct.RAA* %256, i64 %257) #13
  %259 = add nsw i64 %258, 1073741824
  br label %260

260:                                              ; preds = %249, %255
  %261 = phi i64 [ %254, %249 ], [ %259, %255 ]
  %262 = getelementptr inbounds i8, i8* %234, i64 16
  %263 = bitcast i8* %262 to i64*
  store i64 %261, i64* %263, align 8
  %264 = getelementptr inbounds i8, i8* %234, i64 32
  %265 = bitcast i8* %264 to i32*
  store i32 1, i32* %265, align 8
  %266 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 3
  %267 = load i64, i64* %266, align 8
  %268 = add i64 %267, 1
  store i64 %268, i64* %266, align 8
  br label %348

269:                                              ; preds = %88
  tail call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.128, i64 0, i64 0)) #14
  unreachable

270:                                              ; preds = %86
  %271 = load i32, i32* @elf_gotpc_sect, align 4
  %272 = add nsw i32 %271, 1
  %273 = icmp eq i32 %272, %5
  br i1 %273, label %274, label %312

274:                                              ; preds = %270
  %275 = load i64, i64* %33, align 8
  %276 = add i64 %275, %80
  %277 = tail call noalias i8* @nasm_zalloc(i64 40) #15
  %278 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 14
  %279 = bitcast %struct.elf_reloc*** %278 to i8***
  %280 = load i8**, i8*** %279, align 8
  store i8* %277, i8** %280, align 8
  %281 = bitcast %struct.elf_reloc*** %278 to i8**
  store i8* %277, i8** %281, align 8
  %282 = load i64, i64* %33, align 8
  %283 = getelementptr inbounds i8, i8* %277, i64 8
  %284 = bitcast i8* %283 to i64*
  store i64 %282, i64* %284, align 8
  %285 = getelementptr inbounds i8, i8* %277, i64 24
  %286 = bitcast i8* %285 to i64*
  store i64 %276, i64* %286, align 8
  %287 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %288 = ashr i32 %4, 1
  %289 = sext i32 %288 to i64
  %290 = tail call i8* @raa_read_ptr(%struct.RAA* %287, i64 %289) #13
  %291 = icmp eq i8* %290, null
  br i1 %291, label %298, label %292

292:                                              ; preds = %274
  %293 = getelementptr inbounds i8, i8* %290, i64 36
  %294 = bitcast i8* %293 to i32*
  %295 = load i32, i32* %294, align 4
  %296 = add nsw i32 %295, 1
  %297 = sext i32 %296 to i64
  br label %303

298:                                              ; preds = %274
  %299 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %300 = sext i32 %4 to i64
  %301 = tail call i64 @raa_read(%struct.RAA* %299, i64 %300) #13
  %302 = add nsw i64 %301, 1073741824
  br label %303

303:                                              ; preds = %292, %298
  %304 = phi i64 [ %297, %292 ], [ %302, %298 ]
  %305 = getelementptr inbounds i8, i8* %277, i64 16
  %306 = bitcast i8* %305 to i64*
  store i64 %304, i64* %306, align 8
  %307 = getelementptr inbounds i8, i8* %277, i64 32
  %308 = bitcast i8* %307 to i32*
  store i32 26, i32* %308, align 8
  %309 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 3
  %310 = load i64, i64* %309, align 8
  %311 = add i64 %310, 1
  store i64 %311, i64* %309, align 8
  br label %348

312:                                              ; preds = %270
  %313 = load i32, i32* @elf_gotoff_sect, align 4
  %314 = add nsw i32 %313, 1
  %315 = icmp eq i32 %314, %5
  br i1 %315, label %316, label %317

316:                                              ; preds = %312
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.129, i64 0, i64 0)) #13
  br label %348

317:                                              ; preds = %312
  %318 = load i32, i32* @elf_got_sect, align 4
  %319 = add nsw i32 %318, 1
  %320 = icmp eq i32 %319, %5
  br i1 %320, label %321, label %326

321:                                              ; preds = %317
  %322 = icmp eq i32 %78, 4
  br i1 %322, label %323, label %325

323:                                              ; preds = %321
  %324 = tail call fastcc i64 @elf_add_gsym_reloc(%struct.elf_section* %32, i32 %4, i64 %80, i64 0, i32 3, i1 zeroext true)
  br label %348

325:                                              ; preds = %321
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.118, i64 0, i64 0)) #13
  br label %348

326:                                              ; preds = %317
  %327 = load i32, i32* @elf_sym_sect, align 4
  %328 = add nsw i32 %327, 1
  %329 = icmp eq i32 %328, %5
  br i1 %329, label %330, label %342

330:                                              ; preds = %326
  switch i32 %75, label %341 [
    i32 1, label %331
    i32 -1, label %331
    i32 2, label %333
    i32 -2, label %333
    i32 4, label %335
    i32 -4, label %337
    i32 8, label %339
    i32 -8, label %339
  ]

331:                                              ; preds = %330, %330
  %332 = tail call fastcc i64 @elf_add_gsym_reloc(%struct.elf_section* %32, i32 %4, i64 %80, i64 0, i32 14, i1 zeroext false)
  br label %348

333:                                              ; preds = %330, %330
  %334 = tail call fastcc i64 @elf_add_gsym_reloc(%struct.elf_section* %32, i32 %4, i64 %80, i64 0, i32 12, i1 zeroext false)
  br label %348

335:                                              ; preds = %330
  %336 = tail call fastcc i64 @elf_add_gsym_reloc(%struct.elf_section* %32, i32 %4, i64 %80, i64 0, i32 10, i1 zeroext false)
  br label %348

337:                                              ; preds = %330
  %338 = tail call fastcc i64 @elf_add_gsym_reloc(%struct.elf_section* %32, i32 %4, i64 %80, i64 0, i32 11, i1 zeroext false)
  br label %348

339:                                              ; preds = %330, %330
  %340 = tail call fastcc i64 @elf_add_gsym_reloc(%struct.elf_section* %32, i32 %4, i64 %80, i64 0, i32 1, i1 zeroext false)
  br label %348

341:                                              ; preds = %330
  tail call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.130, i64 0, i64 0)) #14
  unreachable

342:                                              ; preds = %326
  %343 = load i32, i32* @elf_plt_sect, align 4
  %344 = add nsw i32 %343, 1
  %345 = icmp eq i32 %344, %5
  br i1 %345, label %346, label %347

346:                                              ; preds = %342
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.30, i64 0, i64 0)) #13
  br label %348

347:                                              ; preds = %342
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.31, i64 0, i64 0)) #13
  br label %348

348:                                              ; preds = %116, %152, %188, %224, %260, %85, %303, %325, %323, %346, %347, %331, %333, %335, %337, %339, %316, %74
  %349 = phi i64 [ %80, %74 ], [ %80, %85 ], [ 0, %303 ], [ %80, %316 ], [ 0, %323 ], [ %80, %325 ], [ 0, %339 ], [ 0, %337 ], [ 0, %335 ], [ 0, %333 ], [ 0, %331 ], [ %80, %346 ], [ %80, %347 ], [ 0, %260 ], [ 0, %224 ], [ 0, %188 ], [ 0, %152 ], [ 0, %116 ]
  %350 = zext i32 %78 to i64
  %351 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 0
  %352 = load %struct.SAA*, %struct.SAA** %351, align 8
  tail call void @saa_writeaddr(%struct.SAA* %352, i64 %349, i64 %350) #13
  %353 = load i64, i64* %33, align 8
  %354 = add i64 %353, %350
  store i64 %354, i64* %33, align 8
  br label %507

355:                                              ; preds = %55
  br label %356

356:                                              ; preds = %55, %355
  %357 = phi i32 [ 13, %355 ], [ 15, %55 ]
  %358 = phi i32 [ 2, %355 ], [ 1, %55 ]
  %359 = bitcast i8* %1 to i64*
  %360 = load i64, i64* %359, align 8
  %361 = sub i64 %360, %3
  %362 = icmp eq i32 %4, %0
  br i1 %362, label %363, label %364

363:                                              ; preds = %356
  tail call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.120, i64 0, i64 0)) #14
  unreachable

364:                                              ; preds = %356
  %365 = icmp eq i32 %4, -1
  br i1 %365, label %410, label %366

366:                                              ; preds = %364
  %367 = and i32 %4, 1
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %370, label %369

369:                                              ; preds = %366
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.29, i64 0, i64 0)) #13
  br label %410

370:                                              ; preds = %366
  %371 = icmp eq i32 %5, -1
  br i1 %371, label %372, label %408

372:                                              ; preds = %370
  %373 = tail call noalias i8* @nasm_zalloc(i64 40) #15
  %374 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 14
  %375 = bitcast %struct.elf_reloc*** %374 to i8***
  %376 = load i8**, i8*** %375, align 8
  store i8* %373, i8** %376, align 8
  %377 = bitcast %struct.elf_reloc*** %374 to i8**
  store i8* %373, i8** %377, align 8
  %378 = load i64, i64* %33, align 8
  %379 = getelementptr inbounds i8, i8* %373, i64 8
  %380 = bitcast i8* %379 to i64*
  store i64 %378, i64* %380, align 8
  %381 = getelementptr inbounds i8, i8* %373, i64 24
  %382 = bitcast i8* %381 to i64*
  store i64 %361, i64* %382, align 8
  %383 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %384 = ashr i32 %4, 1
  %385 = sext i32 %384 to i64
  %386 = tail call i8* @raa_read_ptr(%struct.RAA* %383, i64 %385) #13
  %387 = icmp eq i8* %386, null
  br i1 %387, label %394, label %388

388:                                              ; preds = %372
  %389 = getelementptr inbounds i8, i8* %386, i64 36
  %390 = bitcast i8* %389 to i32*
  %391 = load i32, i32* %390, align 4
  %392 = add nsw i32 %391, 1
  %393 = sext i32 %392 to i64
  br label %399

394:                                              ; preds = %372
  %395 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %396 = sext i32 %4 to i64
  %397 = tail call i64 @raa_read(%struct.RAA* %395, i64 %396) #13
  %398 = add nsw i64 %397, 1073741824
  br label %399

399:                                              ; preds = %388, %394
  %400 = phi i64 [ %393, %388 ], [ %398, %394 ]
  %401 = getelementptr inbounds i8, i8* %373, i64 16
  %402 = bitcast i8* %401 to i64*
  store i64 %400, i64* %402, align 8
  %403 = getelementptr inbounds i8, i8* %373, i64 32
  %404 = bitcast i8* %403 to i32*
  store i32 %357, i32* %404, align 8
  %405 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 3
  %406 = load i64, i64* %405, align 8
  %407 = add i64 %406, 1
  store i64 %407, i64* %405, align 8
  br label %410

408:                                              ; preds = %370
  %409 = shl nuw nsw i32 %358, 3
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.131, i64 0, i64 0), i32 %409) #13
  br label %410

410:                                              ; preds = %369, %408, %399, %364
  %411 = phi i64 [ %361, %364 ], [ %361, %369 ], [ 0, %399 ], [ %361, %408 ]
  %412 = zext i32 %358 to i64
  %413 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 0
  %414 = load %struct.SAA*, %struct.SAA** %413, align 8
  tail call void @saa_writeaddr(%struct.SAA* %414, i64 %411, i64 %412) #13
  %415 = load i64, i64* %33, align 8
  %416 = add i64 %415, %412
  store i64 %416, i64* %33, align 8
  br label %507

417:                                              ; preds = %55
  %418 = bitcast i8* %1 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = sub i64 %419, %3
  %421 = icmp eq i32 %4, %0
  br i1 %421, label %422, label %423

422:                                              ; preds = %417
  tail call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.35, i64 0, i64 0)) #14
  unreachable

423:                                              ; preds = %417
  %424 = icmp eq i32 %4, -1
  br i1 %424, label %495, label %425

425:                                              ; preds = %423
  %426 = and i32 %4, 1
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %429, label %428

428:                                              ; preds = %425
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.132, i64 0, i64 0)) #13
  br label %495

429:                                              ; preds = %425
  %430 = icmp eq i32 %5, -1
  br i1 %430, label %431, label %467

431:                                              ; preds = %429
  %432 = tail call noalias i8* @nasm_zalloc(i64 40) #15
  %433 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 14
  %434 = bitcast %struct.elf_reloc*** %433 to i8***
  %435 = load i8**, i8*** %434, align 8
  store i8* %432, i8** %435, align 8
  %436 = bitcast %struct.elf_reloc*** %433 to i8**
  store i8* %432, i8** %436, align 8
  %437 = load i64, i64* %33, align 8
  %438 = getelementptr inbounds i8, i8* %432, i64 8
  %439 = bitcast i8* %438 to i64*
  store i64 %437, i64* %439, align 8
  %440 = getelementptr inbounds i8, i8* %432, i64 24
  %441 = bitcast i8* %440 to i64*
  store i64 %420, i64* %441, align 8
  %442 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %443 = ashr i32 %4, 1
  %444 = sext i32 %443 to i64
  %445 = tail call i8* @raa_read_ptr(%struct.RAA* %442, i64 %444) #13
  %446 = icmp eq i8* %445, null
  br i1 %446, label %453, label %447

447:                                              ; preds = %431
  %448 = getelementptr inbounds i8, i8* %445, i64 36
  %449 = bitcast i8* %448 to i32*
  %450 = load i32, i32* %449, align 4
  %451 = add nsw i32 %450, 1
  %452 = sext i32 %451 to i64
  br label %458

453:                                              ; preds = %431
  %454 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %455 = sext i32 %4 to i64
  %456 = tail call i64 @raa_read(%struct.RAA* %454, i64 %455) #13
  %457 = add nsw i64 %456, 1073741824
  br label %458

458:                                              ; preds = %447, %453
  %459 = phi i64 [ %452, %447 ], [ %457, %453 ]
  %460 = getelementptr inbounds i8, i8* %432, i64 16
  %461 = bitcast i8* %460 to i64*
  store i64 %459, i64* %461, align 8
  %462 = getelementptr inbounds i8, i8* %432, i64 32
  %463 = bitcast i8* %462 to i32*
  store i32 2, i32* %463, align 8
  %464 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 3
  %465 = load i64, i64* %464, align 8
  %466 = add i64 %465, 1
  store i64 %466, i64* %464, align 8
  br label %495

467:                                              ; preds = %429
  %468 = load i32, i32* @elf_plt_sect, align 4
  %469 = add nsw i32 %468, 1
  %470 = icmp eq i32 %469, %5
  br i1 %470, label %471, label %473

471:                                              ; preds = %467
  %472 = tail call fastcc i64 @elf_add_gsym_reloc(%struct.elf_section* %32, i32 %4, i64 %419, i64 %3, i32 4, i1 zeroext true)
  br label %495

473:                                              ; preds = %467
  %474 = load i32, i32* @elf_gotpc_sect, align 4
  %475 = add nsw i32 %474, 1
  %476 = icmp eq i32 %475, %5
  br i1 %476, label %481, label %477

477:                                              ; preds = %473
  %478 = load i32, i32* @elf_got_sect, align 4
  %479 = add nsw i32 %478, 1
  %480 = icmp eq i32 %479, %5
  br i1 %480, label %481, label %483

481:                                              ; preds = %477, %473
  %482 = tail call fastcc i64 @elf_add_gsym_reloc(%struct.elf_section* %32, i32 %4, i64 %419, i64 %3, i32 9, i1 zeroext true)
  br label %495

483:                                              ; preds = %477
  %484 = load i32, i32* @elf_gotoff_sect, align 4
  %485 = add nsw i32 %484, 1
  %486 = icmp eq i32 %485, %5
  br i1 %486, label %487, label %488

487:                                              ; preds = %483
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.133, i64 0, i64 0)) #13
  br label %495

488:                                              ; preds = %483
  %489 = load i32, i32* @elf_gottpoff_sect, align 4
  %490 = add nsw i32 %489, 1
  %491 = icmp eq i32 %490, %5
  br i1 %491, label %492, label %494

492:                                              ; preds = %488
  %493 = tail call fastcc i64 @elf_add_gsym_reloc(%struct.elf_section* %32, i32 %4, i64 %419, i64 %3, i32 22, i1 zeroext true)
  br label %495

494:                                              ; preds = %488
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.134, i64 0, i64 0)) #13
  br label %495

495:                                              ; preds = %428, %471, %487, %494, %492, %481, %458, %423
  %496 = phi i64 [ %420, %423 ], [ %420, %428 ], [ 0, %458 ], [ 0, %471 ], [ 0, %481 ], [ %420, %487 ], [ 0, %492 ], [ %420, %494 ]
  %497 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 0
  %498 = load %struct.SAA*, %struct.SAA** %497, align 8
  tail call void @saa_writeaddr(%struct.SAA* %498, i64 %496, i64 4) #13
  %499 = load i64, i64* %33, align 8
  %500 = add i64 %499, 4
  store i64 %500, i64* %33, align 8
  br label %507

501:                                              ; preds = %55
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.37, i64 0, i64 0)) #13
  %502 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %32, i64 0, i32 0
  %503 = load %struct.SAA*, %struct.SAA** %502, align 8
  tail call void @saa_writeaddr(%struct.SAA* %503, i64 0, i64 8) #13
  %504 = load i64, i64* %33, align 8
  %505 = add i64 %504, 8
  store i64 %505, i64* %33, align 8
  br label %507

506:                                              ; preds = %55
  tail call void @nasm_panic_from_macro(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.33, i64 0, i64 0), i32 1831) #14
  unreachable

507:                                              ; preds = %69, %348, %410, %495, %501, %63, %57, %11, %9, %50
  ret void
}

declare void @null_debug_init() #1

; Function Attrs: nounwind ssp uwtable
define internal void @stabs_linenum(i8* nocapture readonly, i32, i32) #0 {
  %4 = load i8*, i8** @stabs_filename, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = tail call i32 @strcmp(i8* nonnull %4, i8* %0) #16
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %6, %3
  %10 = tail call i64 @strlen(i8* %0) #16
  %11 = add i64 %10, 1
  %12 = tail call noalias i8* @nasm_malloc(i64 %11) #15
  store i8* %12, i8** @stabs_filename, align 8
  %13 = tail call i8* @strcpy(i8* %12, i8* %0) #13
  br label %14

14:                                               ; preds = %9, %6
  store i1 true, i1* @debug_immcall, align 4
  store i32 %1, i32* @currentline, align 4
  ret void
}

declare void @null_debug_deflabel(i8*, i32, i64, i32, i8*) #1

declare void @null_debug_directive(i8*, i8*) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @debug_typevalue(i32) #2 {
  %2 = and i32 %0, 248
  %3 = add nsw i32 %2, -8
  %4 = lshr exact i32 %3, 3
  %5 = add nsw i32 %4, -1
  %6 = icmp ult i32 %5, 9
  br i1 %6, label %7, label %19

7:                                                ; preds = %1
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds [9 x i32], [9 x i32]* @switch.table.debug_typevalue, i64 0, i64 %8
  %10 = load i32, i32* %9, align 4
  %11 = load %struct.elf_symbol*, %struct.elf_symbol** @lastsym, align 8
  %12 = icmp eq %struct.elf_symbol* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.elf_symbol, %struct.elf_symbol* %11, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.elf_symbol, %struct.elf_symbol* %11, i64 0, i32 5
  store i32 %10, i32* %18, align 8
  store i32 1, i32* %14, align 8
  br label %19

19:                                               ; preds = %1, %7, %13, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @stabs_output(i32, i8* nocapture readonly) #0 {
  %3 = icmp eq i32 %0, 64
  %4 = load i1, i1* @debug_immcall, align 4
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %53

6:                                                ; preds = %2
  %7 = load %struct.elf_section**, %struct.elf_section*** @sects, align 8
  %8 = getelementptr inbounds i8, i8* %1, i64 4
  %9 = bitcast i8* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %struct.elf_section*, %struct.elf_section** %7, i64 %11
  %13 = load %struct.elf_section*, %struct.elf_section** %12, align 8
  %14 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %13, i64 0, i32 8
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, 4
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %54, label %18

18:                                               ; preds = %6
  %19 = load i32, i32* @numlinestabs, align 4
  %20 = add nsw i32 %19, 1
  store i32 %20, i32* @numlinestabs, align 4
  %21 = tail call noalias i8* @nasm_malloc(i64 56) #15
  %22 = bitcast i8* %1 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds i8, i8* %21, i64 16
  %25 = bitcast i8* %24 to i32*
  store i32 %23, i32* %25, align 8
  %26 = load i32, i32* %9, align 4
  %27 = getelementptr inbounds i8, i8* %21, i64 20
  %28 = bitcast i8* %27 to i32*
  store i32 %26, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %1, i64 16
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds i8, i8* %21, i64 32
  %33 = bitcast i8* %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = load i32, i32* @currentline, align 4
  %35 = getelementptr inbounds i8, i8* %21, i64 48
  %36 = bitcast i8* %35 to i32*
  store i32 %34, i32* %36, align 8
  %37 = load i64, i64* bitcast (i8** @stabs_filename to i64*), align 8
  %38 = getelementptr inbounds i8, i8* %21, i64 40
  %39 = bitcast i8* %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast i8* %21 to %struct.linelist**
  store %struct.linelist* null, %struct.linelist** %40, align 8
  %41 = load %struct.linelist*, %struct.linelist** @stabslines, align 8
  %42 = icmp eq %struct.linelist* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %18
  %44 = getelementptr inbounds %struct.linelist, %struct.linelist* %41, i64 0, i32 1
  %45 = bitcast %struct.linelist** %44 to i8***
  %46 = load i8**, i8*** %45, align 8
  store i8* %21, i8** %46, align 8
  %47 = bitcast %struct.linelist** %44 to i8**
  br label %51

48:                                               ; preds = %18
  store i8* %21, i8** bitcast (%struct.linelist** @stabslines to i8**), align 8
  %49 = getelementptr inbounds i8, i8* %21, i64 8
  %50 = bitcast i8* %49 to i8**
  br label %51

51:                                               ; preds = %43, %48
  %52 = phi i8** [ %50, %48 ], [ %47, %43 ]
  store i8* %21, i8** %52, align 8
  br label %53

53:                                               ; preds = %51, %2
  store i1 false, i1* @debug_immcall, align 4
  br label %54

54:                                               ; preds = %6, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @stabs_cleanup() #0 {
  %1 = load %struct.linelist*, %struct.linelist** @stabslines, align 8
  %2 = icmp eq %struct.linelist* %1, null
  br i1 %2, label %13, label %3

3:                                                ; preds = %0, %3
  %4 = phi %struct.linelist* [ %6, %3 ], [ %1, %0 ]
  %5 = getelementptr inbounds %struct.linelist, %struct.linelist* %4, i64 0, i32 0
  %6 = load %struct.linelist*, %struct.linelist** %5, align 8
  %7 = bitcast %struct.linelist* %4 to i8*
  tail call void @nasm_free(i8* nonnull %7) #13
  %8 = icmp eq %struct.linelist* %6, null
  br i1 %8, label %9, label %3

9:                                                ; preds = %3
  %10 = load i8*, i8** @stabbuf, align 8
  tail call void @nasm_free(i8* %10) #13
  %11 = load i8*, i8** @stabrelbuf, align 8
  tail call void @nasm_free(i8* %11) #13
  %12 = load i8*, i8** @stabstrbuf, align 8
  tail call void @nasm_free(i8* %12) #13
  br label %13

13:                                               ; preds = %0, %9
  ret void
}

; Function Attrs: allocsize(0)
declare noalias i8* @nasm_malloc(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i8* @strcpy(i8* returned, i8* nocapture readonly) local_unnamed_addr #5

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

declare void @nasm_free(i8*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @dwarf32_init() #8 {
  store %struct.dwarf_format* @dwarf32_init.dwfmt32, %struct.dwarf_format** @dwfmt, align 8
  store i1 true, i1* @ndebugs, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @dwarf_linenum(i8* nocapture readonly, i32, i32) #0 {
  %4 = load %struct.linelist*, %struct.linelist** @dwarf_clist, align 8
  %5 = icmp eq %struct.linelist* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.linelist, %struct.linelist* %4, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = tail call i32 @strcmp(i8* %0, i8* %8) #16
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %51, label %11

11:                                               ; preds = %6, %3
  %12 = load %struct.linelist*, %struct.linelist** @dwarf_flist, align 8
  %13 = icmp ne %struct.linelist* %12, null
  %14 = load i32, i32* @dwarf_numfiles, align 4
  %15 = icmp sgt i32 %14, 0
  %16 = and i1 %13, %15
  br i1 %16, label %17, label %30

17:                                               ; preds = %11, %25
  %18 = phi %struct.linelist* [ %27, %25 ], [ %12, %11 ]
  %19 = phi i32 [ %28, %25 ], [ 0, %11 ]
  %20 = getelementptr inbounds %struct.linelist, %struct.linelist* %18, i64 0, i32 3
  %21 = load i8*, i8** %20, align 8
  %22 = tail call i32 @strcmp(i8* %0, i8* %21) #16
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %17
  store %struct.linelist* %18, %struct.linelist** @dwarf_clist, align 8
  br label %51

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.linelist, %struct.linelist* %18, i64 0, i32 0
  %27 = load %struct.linelist*, %struct.linelist** %26, align 8
  %28 = add nuw nsw i32 %19, 1
  %29 = icmp eq i32 %28, %14
  br i1 %29, label %30, label %17

30:                                               ; preds = %25, %11
  %31 = tail call noalias i8* @nasm_malloc(i64 56) #15
  store i8* %31, i8** bitcast (%struct.linelist** @dwarf_clist to i8**), align 8
  %32 = load i32, i32* @dwarf_numfiles, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* @dwarf_numfiles, align 4
  %34 = getelementptr inbounds i8, i8* %31, i64 48
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 8
  %36 = tail call i64 @strlen(i8* %0) #16
  %37 = add i64 %36, 1
  %38 = tail call noalias i8* @nasm_malloc(i64 %37) #15
  %39 = load %struct.linelist*, %struct.linelist** @dwarf_clist, align 8
  %40 = getelementptr inbounds %struct.linelist, %struct.linelist* %39, i64 0, i32 3
  store i8* %38, i8** %40, align 8
  %41 = tail call i8* @strcpy(i8* %38, i8* %0) #13
  %42 = load %struct.linelist*, %struct.linelist** @dwarf_clist, align 8
  %43 = getelementptr inbounds %struct.linelist, %struct.linelist* %42, i64 0, i32 0
  store %struct.linelist* null, %struct.linelist** %43, align 8
  %44 = load %struct.linelist*, %struct.linelist** @dwarf_flist, align 8
  %45 = icmp eq %struct.linelist* %44, null
  %46 = ptrtoint %struct.linelist* %42 to i64
  br i1 %45, label %47, label %49

47:                                               ; preds = %30
  store i64 %46, i64* bitcast (%struct.linelist** @dwarf_elist to i64*), align 8
  store i64 %46, i64* bitcast (%struct.linelist** @dwarf_flist to i64*), align 8
  %48 = getelementptr inbounds %struct.linelist, %struct.linelist* %42, i64 0, i32 1
  store %struct.linelist* null, %struct.linelist** %48, align 8
  br label %51

49:                                               ; preds = %30
  %50 = load i64*, i64** bitcast (%struct.linelist** @dwarf_elist to i64**), align 8
  store i64 %46, i64* %50, align 8
  store i64 %46, i64* bitcast (%struct.linelist** @dwarf_elist to i64*), align 8
  br label %51

51:                                               ; preds = %6, %24, %47, %49
  store i1 true, i1* @debug_immcall, align 4
  store i32 %1, i32* @currentline, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @dwarf_output(i32, i8* nocapture readonly) #0 {
  %3 = load %struct.elf_section**, %struct.elf_section*** @sects, align 8
  %4 = getelementptr inbounds i8, i8* %1, i64 4
  %5 = bitcast i8* %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %struct.elf_section*, %struct.elf_section** %3, i64 %7
  %9 = load %struct.elf_section*, %struct.elf_section** %8, align 8
  %10 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %9, i64 0, i32 8
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 4
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %118, label %14

14:                                               ; preds = %2
  %15 = load %struct.sectlist*, %struct.sectlist** @dwarf_csect, align 8
  %16 = icmp eq %struct.sectlist* %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, %6
  br i1 %20, label %69, label %21

21:                                               ; preds = %17, %14
  %22 = load %struct.sectlist*, %struct.sectlist** @dwarf_fsect, align 8
  %23 = icmp ne %struct.sectlist* %22, null
  %24 = load i32, i32* @dwarf_nsections, align 4
  %25 = icmp sgt i32 %24, 0
  %26 = and i1 %23, %25
  br i1 %26, label %27, label %39

27:                                               ; preds = %21, %34
  %28 = phi %struct.sectlist* [ %36, %34 ], [ %22, %21 ]
  %29 = phi i32 [ %37, %34 ], [ 0, %21 ]
  %30 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %28, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, %6
  br i1 %32, label %33, label %34

33:                                               ; preds = %27
  store %struct.sectlist* %28, %struct.sectlist** @dwarf_csect, align 8
  br label %69

34:                                               ; preds = %27
  %35 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %28, i64 0, i32 5
  %36 = load %struct.sectlist*, %struct.sectlist** %35, align 8
  %37 = add nuw nsw i32 %29, 1
  %38 = icmp eq i32 %37, %24
  br i1 %38, label %39, label %27

39:                                               ; preds = %34, %21
  %40 = tail call noalias i8* @nasm_malloc(i64 40) #15
  store i8* %40, i8** bitcast (%struct.sectlist** @dwarf_csect to i8**), align 8
  %41 = load i32, i32* @dwarf_nsections, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* @dwarf_nsections, align 4
  %43 = tail call %struct.SAA* @saa_init(i64 1) #13
  %44 = load %struct.sectlist*, %struct.sectlist** @dwarf_csect, align 8
  %45 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %44, i64 0, i32 0
  store %struct.SAA* %43, %struct.SAA** %45, align 8
  %46 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %44, i64 0, i32 2
  store i32 1, i32* %46, align 4
  %47 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %44, i64 0, i32 3
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %44, i64 0, i32 4
  store i32 1, i32* %48, align 4
  %49 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %44, i64 0, i32 1
  store i32 %6, i32* %49, align 8
  %50 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %44, i64 0, i32 5
  store %struct.sectlist* null, %struct.sectlist** %50, align 8
  tail call void @saa_write8(%struct.SAA* %43, i8 zeroext 0) #13
  %51 = load %struct.ofmt*, %struct.ofmt** @ofmt, align 8
  %52 = icmp eq %struct.ofmt* %51, @of_elf64
  %53 = select i1 %52, i8 9, i8 5
  tail call void @saa_write8(%struct.SAA* %43, i8 zeroext %53) #13
  tail call void @saa_write8(%struct.SAA* %43, i8 zeroext 2) #13
  %54 = load %struct.ofmt*, %struct.ofmt** @ofmt, align 8
  %55 = icmp eq %struct.ofmt* %54, @of_elf64
  br i1 %55, label %56, label %57

56:                                               ; preds = %39
  tail call void @saa_write64(%struct.SAA* %43, i64 0) #13
  br label %58

57:                                               ; preds = %39
  tail call void @saa_write32(%struct.SAA* %43, i32 0) #13
  br label %58

58:                                               ; preds = %57, %56
  %59 = load %struct.sectlist*, %struct.sectlist** @dwarf_fsect, align 8
  %60 = icmp eq %struct.sectlist* %59, null
  %61 = load i64, i64* bitcast (%struct.sectlist** @dwarf_csect to i64*), align 8
  %62 = inttoptr i64 %61 to %struct.sectlist*
  br i1 %60, label %63, label %65

63:                                               ; preds = %58
  store i64 %61, i64* bitcast (%struct.sectlist** @dwarf_esect to i64*), align 8
  store i64 %61, i64* bitcast (%struct.sectlist** @dwarf_fsect to i64*), align 8
  %64 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %62, i64 0, i32 6
  store %struct.sectlist* null, %struct.sectlist** %64, align 8
  br label %69

65:                                               ; preds = %58
  %66 = load %struct.sectlist*, %struct.sectlist** @dwarf_esect, align 8
  %67 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %66, i64 0, i32 5
  %68 = bitcast %struct.sectlist** %67 to i64*
  store i64 %61, i64* %68, align 8
  store i64 %61, i64* bitcast (%struct.sectlist** @dwarf_esect to i64*), align 8
  br label %69

69:                                               ; preds = %65, %63, %33, %17
  %70 = phi %struct.sectlist* [ %62, %65 ], [ %62, %63 ], [ %28, %33 ], [ %15, %17 ]
  %71 = load i1, i1* @debug_immcall, align 4
  br i1 %71, label %72, label %118

72:                                               ; preds = %69
  %73 = load i32, i32* @currentline, align 4
  %74 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %70, i64 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = sub nsw i32 %73, %75
  %77 = bitcast i8* %1 to i32*
  %78 = load i32, i32* %77, align 8
  %79 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %70, i64 0, i32 3
  %80 = load i32, i32* %79, align 8
  %81 = sub nsw i32 %78, %80
  %82 = load %struct.linelist*, %struct.linelist** @dwarf_clist, align 8
  %83 = getelementptr inbounds %struct.linelist, %struct.linelist* %82, i64 0, i32 4
  %84 = load i32, i32* %83, align 8
  %85 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %70, i64 0, i32 0
  %86 = load %struct.SAA*, %struct.SAA** %85, align 8
  %87 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %70, i64 0, i32 4
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %84, %88
  br i1 %89, label %94, label %90

90:                                               ; preds = %72
  tail call void @saa_write8(%struct.SAA* %86, i8 zeroext 4) #13
  %91 = trunc i32 %84 to i8
  tail call void @saa_write8(%struct.SAA* %86, i8 zeroext %91) #13
  %92 = load %struct.sectlist*, %struct.sectlist** @dwarf_csect, align 8
  %93 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %92, i64 0, i32 4
  store i32 %84, i32* %93, align 4
  br label %94

94:                                               ; preds = %90, %72
  %95 = icmp eq i32 %76, 0
  br i1 %95, label %117, label %96

96:                                               ; preds = %94
  %97 = mul nsw i32 %81, 14
  %98 = add i32 %76, 18
  %99 = add i32 %98, %97
  %100 = icmp sgt i32 %76, -6
  br i1 %100, label %101, label %107

101:                                              ; preds = %96
  %102 = icmp slt i32 %76, 9
  %103 = icmp slt i32 %99, 256
  %104 = and i1 %102, %103
  br i1 %104, label %105, label %107

105:                                              ; preds = %101
  %106 = trunc i32 %99 to i8
  br label %110

107:                                              ; preds = %101, %96
  tail call void @saa_write8(%struct.SAA* %86, i8 zeroext 3) #13
  tail call void @saa_wleb128s(%struct.SAA* %86, i32 %76) #13
  %108 = icmp eq i32 %81, 0
  br i1 %108, label %110, label %109

109:                                              ; preds = %107
  tail call void @saa_write8(%struct.SAA* %86, i8 zeroext 2) #13
  tail call void @saa_wleb128u(%struct.SAA* %86, i32 %81) #13
  br label %110

110:                                              ; preds = %109, %107, %105
  %111 = phi i8 [ %106, %105 ], [ 1, %107 ], [ 1, %109 ]
  tail call void @saa_write8(%struct.SAA* %86, i8 zeroext %111) #13
  %112 = load i32, i32* @currentline, align 4
  %113 = load %struct.sectlist*, %struct.sectlist** @dwarf_csect, align 8
  %114 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %113, i64 0, i32 2
  store i32 %112, i32* %114, align 4
  %115 = load i32, i32* %77, align 8
  %116 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %113, i64 0, i32 3
  store i32 %115, i32* %116, align 8
  br label %117

117:                                              ; preds = %94, %110
  store i1 false, i1* @debug_immcall, align 4
  br label %118

118:                                              ; preds = %69, %2, %117
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @dwarf_cleanup() #0 {
  %1 = load i8*, i8** @arangesbuf, align 8
  tail call void @nasm_free(i8* %1) #13
  %2 = load i8*, i8** @arangesrelbuf, align 8
  tail call void @nasm_free(i8* %2) #13
  tail call void @nasm_free(i8* null) #13
  %3 = load i8*, i8** @infobuf, align 8
  tail call void @nasm_free(i8* %3) #13
  %4 = load i8*, i8** @inforelbuf, align 8
  tail call void @nasm_free(i8* %4) #13
  %5 = load i8*, i8** @abbrevbuf, align 8
  tail call void @nasm_free(i8* %5) #13
  %6 = load i8*, i8** @linebuf, align 8
  tail call void @nasm_free(i8* %6) #13
  %7 = load i8*, i8** @linerelbuf, align 8
  tail call void @nasm_free(i8* %7) #13
  tail call void @nasm_free(i8* null) #13
  tail call void @nasm_free(i8* null) #13
  ret void
}

declare void @saa_write8(%struct.SAA*, i8 zeroext) local_unnamed_addr #1

declare void @saa_wleb128s(%struct.SAA*, i32) local_unnamed_addr #1

declare void @saa_wleb128u(%struct.SAA*, i32) local_unnamed_addr #1

declare %struct.SAA* @saa_init(i64) local_unnamed_addr #1

declare void @saa_write64(%struct.SAA*, i64) local_unnamed_addr #1

declare void @saa_write32(%struct.SAA*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @elf32_sym(%struct.elf_symbol* nocapture readonly) #0 {
  %2 = alloca %struct.elf32_sym, align 4
  %3 = bitcast %struct.elf32_sym* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #13
  %4 = getelementptr inbounds %struct.elf32_sym, %struct.elf32_sym* %2, i64 0, i32 0
  %5 = getelementptr inbounds %struct.elf32_sym, %struct.elf32_sym* %2, i64 0, i32 1
  %6 = getelementptr inbounds %struct.elf32_sym, %struct.elf32_sym* %2, i64 0, i32 2
  %7 = getelementptr inbounds %struct.elf32_sym, %struct.elf32_sym* %2, i64 0, i32 3
  %8 = getelementptr inbounds %struct.elf32_sym, %struct.elf32_sym* %2, i64 0, i32 4
  %9 = getelementptr inbounds %struct.elf32_sym, %struct.elf32_sym* %2, i64 0, i32 5
  %10 = getelementptr inbounds %struct.elf_symbol, %struct.elf_symbol* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  store i32 %11, i32* %4, align 4
  %12 = getelementptr inbounds %struct.elf_symbol, %struct.elf_symbol* %0, i64 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %13 to i32
  store i32 %14, i32* %5, align 4
  %15 = getelementptr inbounds %struct.elf_symbol, %struct.elf_symbol* %0, i64 0, i32 5
  %16 = load i32, i32* %15, align 8
  store i32 %16, i32* %6, align 4
  %17 = getelementptr inbounds %struct.elf_symbol, %struct.elf_symbol* %0, i64 0, i32 3
  %18 = load i32, i32* %17, align 8
  %19 = trunc i32 %18 to i8
  store i8 %19, i8* %7, align 4
  %20 = getelementptr inbounds %struct.elf_symbol, %struct.elf_symbol* %0, i64 0, i32 4
  %21 = load i32, i32* %20, align 4
  %22 = trunc i32 %21 to i8
  store i8 %22, i8* %8, align 1
  %23 = getelementptr inbounds %struct.elf_symbol, %struct.elf_symbol* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %24, 65280
  %26 = select i1 %25, i32 %24, i32 65535
  %27 = trunc i32 %26 to i16
  store i16 %27, i16* %9, align 2
  %28 = load %struct.SAA*, %struct.SAA** @symtab, align 8
  call void @saa_wbytes(%struct.SAA* %28, i8* nonnull %3, i64 16) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %struct.SAA* @elf32_build_reltab(%struct.elf_reloc* readonly) #0 {
  %2 = alloca %struct.elf32_rel, align 4
  %3 = bitcast %struct.elf32_rel* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #13
  %4 = getelementptr inbounds %struct.elf32_rel, %struct.elf32_rel* %2, i64 0, i32 0
  store i32 -1431655766, i32* %4, align 4
  %5 = getelementptr inbounds %struct.elf32_rel, %struct.elf32_rel* %2, i64 0, i32 1
  store i32 -1431655766, i32* %5, align 4
  %6 = icmp eq %struct.elf_reloc* %0, null
  br i1 %6, label %35, label %7

7:                                                ; preds = %1
  %8 = tail call %struct.SAA* @saa_init(i64 1) #13
  %9 = load i32, i32* @nsects, align 4
  %10 = load i32, i32* @nlocals, align 4
  %11 = load i1, i1* @ndebugs, align 4
  %12 = select i1 %11, i32 3, i32 0
  %13 = add i32 %9, 2
  %14 = add i32 %13, %10
  %15 = add i32 %14, %12
  br label %16

16:                                               ; preds = %7, %16
  %17 = phi %struct.elf_reloc* [ %0, %7 ], [ %33, %16 ]
  %18 = getelementptr inbounds %struct.elf_reloc, %struct.elf_reloc* %17, i64 0, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %19 to i32
  %21 = icmp sgt i32 %20, 1073741823
  %22 = select i1 %21, i32 %15, i32 0
  %23 = add i32 %22, %20
  %24 = getelementptr inbounds %struct.elf_reloc, %struct.elf_reloc* %17, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = trunc i64 %25 to i32
  store i32 %26, i32* %4, align 4
  %27 = shl i32 %23, 8
  %28 = getelementptr inbounds %struct.elf_reloc, %struct.elf_reloc* %17, i64 0, i32 4
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 255
  %31 = or i32 %27, %30
  store i32 %31, i32* %5, align 4
  call void @saa_wbytes(%struct.SAA* %8, i8* nonnull %3, i64 8) #13
  %32 = getelementptr inbounds %struct.elf_reloc, %struct.elf_reloc* %17, i64 0, i32 0
  %33 = load %struct.elf_reloc*, %struct.elf_reloc** %32, align 8
  %34 = icmp eq %struct.elf_reloc* %33, null
  br i1 %34, label %35, label %16

35:                                               ; preds = %16, %1
  %36 = phi %struct.SAA* [ null, %1 ], [ %8, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #13
  ret %struct.SAA* %36
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @elf_init() unnamed_addr #0 {
  %1 = alloca %struct.hash_insert, align 8
  %2 = load i8*, i8** @inname, align 8
  %3 = tail call i64 @strlcpy(i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @elf_module, i64 0, i64 0), i8* %2, i64 4096) #13
  store %struct.elf_section** null, %struct.elf_section*** @sects, align 8
  store i32 0, i32* @sectlen, align 4
  store i32 0, i32* @nsects, align 4
  %4 = tail call %struct.SAA* @saa_init(i64 72) #13
  store %struct.SAA* %4, %struct.SAA** @syms, align 8
  store i1 false, i1* @ndebugs, align 4
  store i32 0, i32* @nglobs, align 4
  store i32 0, i32* @nlocals, align 4
  store %struct.RAA* null, %struct.RAA** @bsym, align 8
  %5 = tail call %struct.SAA* @saa_init(i64 1) #13
  store %struct.SAA* %5, %struct.SAA** @strs, align 8
  tail call void @saa_wbytes(%struct.SAA* %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i64 1) #13
  %6 = load %struct.SAA*, %struct.SAA** @strs, align 8
  %7 = tail call i64 @strlen(i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @elf_module, i64 0, i64 0)) #16
  %8 = add i64 %7, 1
  tail call void @saa_wbytes(%struct.SAA* %6, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @elf_module, i64 0, i64 0), i64 %8) #13
  %9 = tail call i64 @strlen(i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @elf_module, i64 0, i64 0)) #16
  %10 = trunc i64 %9 to i32
  %11 = add i32 %10, 2
  store i32 %11, i32* @strslen, align 4
  store i8* null, i8** @shstrtab, align 8
  store i32 0, i32* @shstrtabsize, align 4
  store i32 0, i32* @shstrtablen, align 4
  br label %12

12:                                               ; preds = %0, %12
  %13 = phi i8* [ %17, %12 ], [ null, %0 ]
  %14 = phi i32 [ %19, %12 ], [ 0, %0 ]
  %15 = add nsw i32 %14, 256
  store i32 %15, i32* @shstrtabsize, align 4
  %16 = sext i32 %15 to i64
  %17 = tail call i8* @nasm_realloc(i8* %13, i64 %16) #17
  store i8* %17, i8** @shstrtab, align 8
  %18 = load i32, i32* @shstrtablen, align 4
  %19 = load i32, i32* @shstrtabsize, align 4
  %20 = icmp slt i32 %18, %19
  br i1 %20, label %21, label %12

21:                                               ; preds = %12
  %22 = sext i32 %18 to i64
  %23 = getelementptr inbounds i8, i8* %17, i64 %22
  store i8 0, i8* %23, align 1
  %24 = add nsw i32 %18, 1
  store i32 %24, i32* @shstrtablen, align 4
  %25 = load i32, i32* @nsections, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* @nsections, align 4
  store %struct.elf_symbol* null, %struct.elf_symbol** @fwds, align 8
  store %struct.RAA* null, %struct.RAA** @section_by_index, align 8
  %27 = bitcast %struct.hash_insert* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %27) #13
  %28 = bitcast %struct.hash_insert* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 48, i1 false)
  %29 = call i8** @hash_find(%struct.hash_table* nonnull @section_by_name, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), %struct.hash_insert* nonnull %1) #13
  %30 = call i8** @hash_add(%struct.hash_insert* nonnull %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i8* null) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %27) #13
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %27) #13
  %31 = bitcast %struct.hash_insert* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 48, i1 false)
  %32 = call i8** @hash_find(%struct.hash_table* nonnull @section_by_name, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), %struct.hash_insert* nonnull %1) #13
  %33 = call i8** @hash_add(%struct.hash_insert* nonnull %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i8* null) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %27) #13
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %27) #13
  %34 = bitcast %struct.hash_insert* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 48, i1 false)
  %35 = call i8** @hash_find(%struct.hash_table* nonnull @section_by_name, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), %struct.hash_insert* nonnull %1) #13
  %36 = call i8** @hash_add(%struct.hash_insert* nonnull %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i8* null) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %27) #13
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %27) #13
  %37 = bitcast %struct.hash_insert* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 48, i1 false)
  %38 = call i8** @hash_find(%struct.hash_table* nonnull @section_by_name, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0), %struct.hash_insert* nonnull %1) #13
  %39 = call i8** @hash_add(%struct.hash_insert* nonnull %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0), i8* null) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %27) #13
  %40 = call i32 @seg_alloc() #13
  store i32 %40, i32* @elf_gotpc_sect, align 4
  %41 = add nsw i32 %40, 1
  call void @backend_label(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0), i32 %41, i64 0) #13
  %42 = call i32 @seg_alloc() #13
  store i32 %42, i32* @elf_gotoff_sect, align 4
  %43 = add nsw i32 %42, 1
  call void @backend_label(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i64 0, i64 0), i32 %43, i64 0) #13
  %44 = call i32 @seg_alloc() #13
  store i32 %44, i32* @elf_got_sect, align 4
  %45 = add nsw i32 %44, 1
  call void @backend_label(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0), i32 %45, i64 0) #13
  %46 = call i32 @seg_alloc() #13
  store i32 %46, i32* @elf_plt_sect, align 4
  %47 = add nsw i32 %46, 1
  call void @backend_label(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0), i32 %47, i64 0) #13
  %48 = call i32 @seg_alloc() #13
  store i32 %48, i32* @elf_sym_sect, align 4
  %49 = add nsw i32 %48, 1
  call void @backend_label(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0), i32 %49, i64 0) #13
  %50 = call i32 @seg_alloc() #13
  store i32 %50, i32* @elf_gottpoff_sect, align 4
  %51 = add nsw i32 %50, 1
  call void @backend_label(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0), i32 %51, i64 0) #13
  %52 = call i32 @seg_alloc() #13
  store i32 %52, i32* @elf_tlsie_sect, align 4
  %53 = add nsw i32 %52, 1
  call void @backend_label(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0), i32 %53, i64 0) #13
  %54 = call i32 @seg_alloc() #13
  store i32 %54, i32* @def_seg, align 4
  ret void
}

declare void @saa_wbytes(%struct.SAA*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nofree
declare i64 @strlcpy(i8*, i8*, i64) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

declare i8** @hash_find(%struct.hash_table*, i8*, %struct.hash_insert*) local_unnamed_addr #1

declare i8** @hash_add(%struct.hash_insert*, i8*, i8*) local_unnamed_addr #1

declare i32 @seg_alloc() local_unnamed_addr #1

declare void @backend_label(i8*, i32, i64) local_unnamed_addr #1

; Function Attrs: allocsize(1)
declare i8* @nasm_realloc(i8*, i64) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #7

declare void @nasm_nonfatal(i8*, ...) local_unnamed_addr #1

declare i8* @raa_read_ptr(%struct.RAA*, i64) local_unnamed_addr #1

; Function Attrs: cold noreturn
declare void @nasm_panic(i8*, ...) local_unnamed_addr #11

declare void @nasm_warn(i32, i8*, ...) local_unnamed_addr #1

declare i64 @realsize(i32, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @elf_add_gsym_reloc(%struct.elf_section* nocapture, i32, i64, i64, i32, i1 zeroext) unnamed_addr #0 {
  %7 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %8 = ashr i32 %1, 1
  %9 = sext i32 %8 to i64
  %10 = tail call i8* @raa_read_ptr(%struct.RAA* %7, i64 %9) #13
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %55

12:                                               ; preds = %6
  %13 = icmp ne i64 %2, 0
  %14 = and i1 %13, %5
  br i1 %14, label %15, label %16

15:                                               ; preds = %12
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.38, i64 0, i64 0)) #13
  br label %96

16:                                               ; preds = %12
  %17 = sub i64 %2, %3
  %18 = tail call noalias i8* @nasm_zalloc(i64 40) #15
  %19 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %0, i64 0, i32 14
  %20 = bitcast %struct.elf_reloc*** %19 to i8***
  %21 = load i8**, i8*** %20, align 8
  store i8* %18, i8** %21, align 8
  %22 = bitcast %struct.elf_reloc*** %19 to i8**
  store i8* %18, i8** %22, align 8
  %23 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %0, i64 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds i8, i8* %18, i64 8
  %26 = bitcast i8* %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %18, i64 24
  %28 = bitcast i8* %27 to i64*
  store i64 %17, i64* %28, align 8
  %29 = icmp eq i32 %1, -1
  br i1 %29, label %49, label %30

30:                                               ; preds = %16
  %31 = load %struct.RAA*, %struct.RAA** @section_by_index, align 8
  %32 = tail call i8* @raa_read_ptr(%struct.RAA* %31, i64 %9) #13
  %33 = icmp eq i8* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds i8, i8* %32, i64 36
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = add nsw i32 %37, 1
  %39 = sext i32 %38 to i64
  br label %45

40:                                               ; preds = %30
  %41 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %42 = sext i32 %1 to i64
  %43 = tail call i64 @raa_read(%struct.RAA* %41, i64 %42) #13
  %44 = add nsw i64 %43, 1073741824
  br label %45

45:                                               ; preds = %40, %34
  %46 = phi i64 [ %39, %34 ], [ %44, %40 ]
  %47 = getelementptr inbounds i8, i8* %18, i64 16
  %48 = bitcast i8* %47 to i64*
  store i64 %46, i64* %48, align 8
  br label %49

49:                                               ; preds = %45, %16
  %50 = getelementptr inbounds i8, i8* %18, i64 32
  %51 = bitcast i8* %50 to i32*
  store i32 %4, i32* %51, align 8
  %52 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %0, i64 0, i32 3
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, 1
  store i64 %54, i64* %52, align 8
  br label %96

55:                                               ; preds = %6
  %56 = getelementptr inbounds i8, i8* %10, i64 112
  %57 = bitcast i8* %56 to %struct.rbtree**
  %58 = load %struct.rbtree*, %struct.rbtree** %57, align 8
  %59 = tail call %struct.rbtree* @rb_search(%struct.rbtree* %58, i64 %2) #13
  %60 = icmp eq %struct.rbtree* %59, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %55
  br i1 %5, label %62, label %67

62:                                               ; preds = %61
  %63 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %59, i64 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, %2
  br i1 %65, label %67, label %66

66:                                               ; preds = %62, %55
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.39, i64 0, i64 0)) #13
  br label %96

67:                                               ; preds = %62, %61
  %68 = bitcast %struct.rbtree* %59 to %struct.elf_symbol*
  %69 = tail call noalias i8* @nasm_malloc(i64 40) #15
  %70 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %0, i64 0, i32 14
  %71 = bitcast %struct.elf_reloc*** %70 to i8***
  %72 = load i8**, i8*** %71, align 8
  store i8* %69, i8** %72, align 8
  %73 = bitcast i8* %69 to %struct.elf_reloc**
  %74 = bitcast %struct.elf_reloc*** %70 to i8**
  store i8* %69, i8** %74, align 8
  store %struct.elf_reloc* null, %struct.elf_reloc** %73, align 8
  %75 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %0, i64 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds i8, i8* %69, i64 8
  %78 = bitcast i8* %77 to i64*
  store i64 %76, i64* %78, align 8
  %79 = sub i64 %2, %3
  %80 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %59, i64 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = sub i64 %79, %81
  %83 = getelementptr inbounds i8, i8* %69, i64 24
  %84 = bitcast i8* %83 to i64*
  store i64 %82, i64* %84, align 8
  %85 = getelementptr inbounds %struct.elf_symbol, %struct.elf_symbol* %68, i64 0, i32 6
  %86 = load i32, i32* %85, align 4
  %87 = add nsw i32 %86, 1073741824
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i8, i8* %69, i64 16
  %90 = bitcast i8* %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds i8, i8* %69, i64 32
  %92 = bitcast i8* %91 to i32*
  store i32 %4, i32* %92, align 8
  %93 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %0, i64 0, i32 3
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, 1
  store i64 %95, i64* %93, align 8
  br label %96

96:                                               ; preds = %15, %49, %67, %66
  %97 = phi i64 [ 0, %66 ], [ %82, %67 ], [ 0, %49 ], [ 0, %15 ]
  ret i64 %97
}

; Function Attrs: cold noreturn
declare void @nasm_assert_failed(i8*, i32, i8*) local_unnamed_addr #11

; Function Attrs: cold noreturn
declare void @nasm_panic_from_macro(i8*, i32) local_unnamed_addr #11

; Function Attrs: allocsize(0)
declare noalias i8* @nasm_zalloc(i64) local_unnamed_addr #3

declare i64 @raa_read(%struct.RAA*, i64) local_unnamed_addr #1

declare %struct.rbtree* @rb_search(%struct.rbtree*, i64) local_unnamed_addr #1

declare void @saa_writeaddr(%struct.SAA*, i64, i64) local_unnamed_addr #1

declare i8* @nasm_skip_spaces(i8*) local_unnamed_addr #1

declare void @nasm_debug(i8*, ...) local_unnamed_addr #1

declare i8* @nasm_skip_word(i8*) local_unnamed_addr #1

declare void @stdscan_reset() local_unnamed_addr #1

declare void @stdscan_set(i8*) local_unnamed_addr #1

declare %struct.expr* @evaluate(i32 (i8*, %struct.tokenval*)*, i8*, %struct.tokenval*, i32*, i1 zeroext, %struct.eval_hints*) local_unnamed_addr #1

declare i32 @stdscan(i8*, %struct.tokenval*) #1

declare zeroext i1 @is_simple(%struct.expr*) local_unnamed_addr #1

declare i64 @reloc_value(%struct.expr*) local_unnamed_addr #1

declare i8* @saa_wstruct(%struct.SAA*) local_unnamed_addr #1

declare i64 @readnum(i8*, i8*) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @strncasecmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

; Function Attrs: nofree nounwind readonly
declare i32 @strcasecmp(i8* nocapture, i8* nocapture) local_unnamed_addr #6

declare i8* @stdscan_get() local_unnamed_addr #1

declare noalias i8* @nasm_strdup(i8*) local_unnamed_addr #1

declare %struct.RAA* @raa_write(%struct.RAA*, i64, i64) local_unnamed_addr #1

declare %struct.rbtree* @rb_insert(%struct.rbtree*, %struct.rbtree*) local_unnamed_addr #1

declare %struct.RAA* @raa_write_ptr(%struct.RAA*, i64, i8*) local_unnamed_addr #1

declare i8* @nasm_opt_val(i8*, i8**, i8**) local_unnamed_addr #1

declare void @nasm_error(i32, i8*, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @elf_write() unnamed_addr #0 {
  %1 = alloca %struct.elf32_shdr, align 4
  %2 = alloca %struct.elf64_shdr, align 8
  %3 = alloca %struct.elf32_shdr, align 4
  %4 = alloca %struct.elf64_shdr, align 8
  %5 = alloca %struct.elf32_shdr, align 4
  %6 = alloca %struct.elf64_shdr, align 8
  %7 = alloca %struct.elf32_shdr, align 4
  %8 = alloca %struct.elf64_shdr, align 8
  %9 = alloca %struct.elf_symbol, align 8
  %10 = alloca %union.ehdr, align 8
  %11 = getelementptr inbounds %union.ehdr, %union.ehdr* %10, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %11) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 64, i1 false)
  %12 = load i32, i32* @nsections, align 4
  store i32 %12, i32* @sec_debug, align 4
  %13 = load %struct.dfmt*, %struct.dfmt** @dfmt, align 8
  %14 = icmp eq %struct.dfmt* %13, @elf32_df_stabs
  %15 = icmp eq %struct.dfmt* %13, @elfx32_df_stabs
  %16 = or i1 %14, %15
  %17 = icmp eq %struct.dfmt* %13, @elf64_df_stabs
  %18 = or i1 %17, %16
  br i1 %18, label %19, label %103

19:                                               ; preds = %0
  %20 = load i32, i32* @shstrtablen, align 4
  %21 = add nsw i32 %20, 5
  %22 = load i32, i32* @shstrtabsize, align 4
  %23 = icmp slt i32 %21, %22
  %24 = load i8*, i8** @shstrtab, align 8
  br i1 %23, label %37, label %25

25:                                               ; preds = %19, %25
  %26 = phi i8* [ %30, %25 ], [ %24, %19 ]
  %27 = phi i32 [ %33, %25 ], [ %22, %19 ]
  %28 = add nsw i32 %27, 256
  store i32 %28, i32* @shstrtabsize, align 4
  %29 = sext i32 %28 to i64
  %30 = tail call i8* @nasm_realloc(i8* %26, i64 %29) #17
  store i8* %30, i8** @shstrtab, align 8
  %31 = load i32, i32* @shstrtablen, align 4
  %32 = add nsw i32 %31, 5
  %33 = load i32, i32* @shstrtabsize, align 4
  %34 = icmp slt i32 %32, %33
  br i1 %34, label %35, label %25

35:                                               ; preds = %25
  %36 = load i32, i32* @nsections, align 4
  br label %37

37:                                               ; preds = %35, %19
  %38 = phi i32 [ %22, %19 ], [ %33, %35 ]
  %39 = phi i32 [ %12, %19 ], [ %36, %35 ]
  %40 = phi i32 [ %20, %19 ], [ %31, %35 ]
  %41 = phi i8* [ %24, %19 ], [ %30, %35 ]
  %42 = sext i32 %40 to i64
  %43 = getelementptr inbounds i8, i8* %41, i64 %42
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %43, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.99, i64 0, i64 0), i64 6, i1 false) #13
  %44 = add nsw i32 %40, 6
  store i32 %44, i32* @shstrtablen, align 4
  %45 = add nsw i32 %39, 1
  store i32 %45, i32* @nsections, align 4
  %46 = add nsw i32 %40, 14
  %47 = icmp slt i32 %46, %38
  br i1 %47, label %60, label %48

48:                                               ; preds = %37, %48
  %49 = phi i8* [ %53, %48 ], [ %41, %37 ]
  %50 = phi i32 [ %56, %48 ], [ %38, %37 ]
  %51 = add nsw i32 %50, 256
  store i32 %51, i32* @shstrtabsize, align 4
  %52 = sext i32 %51 to i64
  %53 = tail call i8* @nasm_realloc(i8* %49, i64 %52) #17
  store i8* %53, i8** @shstrtab, align 8
  %54 = load i32, i32* @shstrtablen, align 4
  %55 = add nsw i32 %54, 8
  %56 = load i32, i32* @shstrtabsize, align 4
  %57 = icmp slt i32 %55, %56
  br i1 %57, label %58, label %48

58:                                               ; preds = %48
  %59 = load i32, i32* @nsections, align 4
  br label %60

60:                                               ; preds = %58, %37
  %61 = phi i32 [ %38, %37 ], [ %56, %58 ]
  %62 = phi i32 [ %45, %37 ], [ %59, %58 ]
  %63 = phi i32 [ %44, %37 ], [ %54, %58 ]
  %64 = phi i8* [ %41, %37 ], [ %53, %58 ]
  %65 = sext i32 %63 to i64
  %66 = getelementptr inbounds i8, i8* %64, i64 %65
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %66, i8* align 1 getelementptr inbounds ([9 x i8], [9 x i8]* @.str.100, i64 0, i64 0), i64 9, i1 false) #13
  %67 = add nsw i32 %63, 9
  store i32 %67, i32* @shstrtablen, align 4
  %68 = add nsw i32 %62, 1
  store i32 %68, i32* @nsections, align 4
  %69 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %70 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %69, i64 0, i32 6, i64 0
  %71 = tail call i64 @strlen(i8* %70) #16
  %72 = trunc i64 %71 to i32
  %73 = add nsw i32 %67, %72
  %74 = add nsw i32 %73, 5
  %75 = icmp slt i32 %74, %61
  br i1 %75, label %89, label %76

76:                                               ; preds = %60, %76
  %77 = phi i8* [ %81, %76 ], [ %64, %60 ]
  %78 = phi i32 [ %85, %76 ], [ %61, %60 ]
  %79 = add nsw i32 %78, 256
  store i32 %79, i32* @shstrtabsize, align 4
  %80 = sext i32 %79 to i64
  %81 = tail call i8* @nasm_realloc(i8* %77, i64 %80) #17
  store i8* %81, i8** @shstrtab, align 8
  %82 = load i32, i32* @shstrtablen, align 4
  %83 = add nsw i32 %82, %72
  %84 = add nsw i32 %83, 5
  %85 = load i32, i32* @shstrtabsize, align 4
  %86 = icmp slt i32 %84, %85
  br i1 %86, label %87, label %76

87:                                               ; preds = %76
  %88 = load i32, i32* @nsections, align 4
  br label %89

89:                                               ; preds = %87, %60
  %90 = phi i32 [ %61, %60 ], [ %85, %87 ]
  %91 = phi i32 [ %68, %60 ], [ %88, %87 ]
  %92 = phi i32 [ %67, %60 ], [ %82, %87 ]
  %93 = phi i32 [ %73, %60 ], [ %83, %87 ]
  %94 = phi i8* [ %64, %60 ], [ %81, %87 ]
  %95 = sext i32 %92 to i64
  %96 = getelementptr inbounds i8, i8* %94, i64 %95
  %97 = shl i64 %71, 32
  %98 = ashr exact i64 %97, 32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %96, i8* align 1 %70, i64 %98, i1 false) #13
  %99 = sext i32 %93 to i64
  %100 = getelementptr inbounds i8, i8* %94, i64 %99
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %100, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.99, i64 0, i64 0), i64 6, i1 false) #13
  %101 = add nsw i32 %93, 6
  store i32 %101, i32* @shstrtablen, align 4
  %102 = add nsw i32 %91, 1
  store i32 %102, i32* @nsections, align 4
  br label %362

103:                                              ; preds = %0
  %104 = icmp eq %struct.dfmt* %13, @elf32_df_dwarf
  %105 = icmp eq %struct.dfmt* %13, @elfx32_df_dwarf
  %106 = or i1 %104, %105
  %107 = icmp eq %struct.dfmt* %13, @elf64_df_dwarf
  %108 = or i1 %107, %106
  %109 = load i32, i32* @shstrtablen, align 4
  br i1 %108, label %113, label %110

110:                                              ; preds = %103
  %111 = load i32, i32* @shstrtabsize, align 4
  %112 = load i8*, i8** @shstrtab, align 8
  br label %362

113:                                              ; preds = %103
  %114 = add nsw i32 %109, 14
  %115 = load i32, i32* @shstrtabsize, align 4
  %116 = icmp slt i32 %114, %115
  %117 = load i8*, i8** @shstrtab, align 8
  br i1 %116, label %130, label %118

118:                                              ; preds = %113, %118
  %119 = phi i8* [ %123, %118 ], [ %117, %113 ]
  %120 = phi i32 [ %126, %118 ], [ %115, %113 ]
  %121 = add nsw i32 %120, 256
  store i32 %121, i32* @shstrtabsize, align 4
  %122 = sext i32 %121 to i64
  %123 = tail call i8* @nasm_realloc(i8* %119, i64 %122) #17
  store i8* %123, i8** @shstrtab, align 8
  %124 = load i32, i32* @shstrtablen, align 4
  %125 = add nsw i32 %124, 14
  %126 = load i32, i32* @shstrtabsize, align 4
  %127 = icmp slt i32 %125, %126
  br i1 %127, label %128, label %118

128:                                              ; preds = %118
  %129 = load i32, i32* @nsections, align 4
  br label %130

130:                                              ; preds = %128, %113
  %131 = phi i32 [ %115, %113 ], [ %126, %128 ]
  %132 = phi i32 [ %12, %113 ], [ %129, %128 ]
  %133 = phi i32 [ %109, %113 ], [ %124, %128 ]
  %134 = phi i8* [ %117, %113 ], [ %123, %128 ]
  %135 = sext i32 %133 to i64
  %136 = getelementptr inbounds i8, i8* %134, i64 %135
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %136, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.101, i64 0, i64 0), i64 15, i1 false) #13
  %137 = add nsw i32 %133, 15
  store i32 %137, i32* @shstrtablen, align 4
  %138 = add nsw i32 %132, 1
  store i32 %138, i32* @nsections, align 4
  %139 = add nsw i32 %133, 20
  %140 = add nsw i32 %133, 34
  %141 = icmp slt i32 %140, %131
  br i1 %141, label %155, label %142

142:                                              ; preds = %130, %142
  %143 = phi i8* [ %147, %142 ], [ %134, %130 ]
  %144 = phi i32 [ %150, %142 ], [ %131, %130 ]
  %145 = add nsw i32 %144, 256
  store i32 %145, i32* @shstrtabsize, align 4
  %146 = sext i32 %145 to i64
  %147 = tail call i8* @nasm_realloc(i8* %143, i64 %146) #17
  store i8* %147, i8** @shstrtab, align 8
  %148 = load i32, i32* @shstrtablen, align 4
  %149 = add nsw i32 %148, 19
  %150 = load i32, i32* @shstrtabsize, align 4
  %151 = icmp slt i32 %149, %150
  br i1 %151, label %152, label %142

152:                                              ; preds = %142
  %153 = add nsw i32 %148, 5
  %154 = load i32, i32* @nsections, align 4
  br label %155

155:                                              ; preds = %152, %130
  %156 = phi i32 [ %131, %130 ], [ %150, %152 ]
  %157 = phi i32 [ %138, %130 ], [ %154, %152 ]
  %158 = phi i32 [ %137, %130 ], [ %148, %152 ]
  %159 = phi i32 [ %139, %130 ], [ %153, %152 ]
  %160 = phi i8* [ %134, %130 ], [ %147, %152 ]
  %161 = sext i32 %158 to i64
  %162 = getelementptr inbounds i8, i8* %160, i64 %161
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %162, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.102, i64 0, i64 0), i64 5, i1 false) #13
  %163 = sext i32 %159 to i64
  %164 = getelementptr inbounds i8, i8* %160, i64 %163
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %164, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.101, i64 0, i64 0), i64 15, i1 false) #13
  %165 = add nsw i32 %159, 15
  store i32 %165, i32* @shstrtablen, align 4
  %166 = add nsw i32 %157, 1
  store i32 %166, i32* @nsections, align 4
  %167 = add nsw i32 %159, 30
  %168 = icmp slt i32 %167, %156
  br i1 %168, label %181, label %169

169:                                              ; preds = %155, %169
  %170 = phi i8* [ %174, %169 ], [ %160, %155 ]
  %171 = phi i32 [ %177, %169 ], [ %156, %155 ]
  %172 = add nsw i32 %171, 256
  store i32 %172, i32* @shstrtabsize, align 4
  %173 = sext i32 %172 to i64
  %174 = tail call i8* @nasm_realloc(i8* %170, i64 %173) #17
  store i8* %174, i8** @shstrtab, align 8
  %175 = load i32, i32* @shstrtablen, align 4
  %176 = add nsw i32 %175, 15
  %177 = load i32, i32* @shstrtabsize, align 4
  %178 = icmp slt i32 %176, %177
  br i1 %178, label %179, label %169

179:                                              ; preds = %169
  %180 = load i32, i32* @nsections, align 4
  br label %181

181:                                              ; preds = %179, %155
  %182 = phi i32 [ %156, %155 ], [ %177, %179 ]
  %183 = phi i32 [ %166, %155 ], [ %180, %179 ]
  %184 = phi i32 [ %165, %155 ], [ %175, %179 ]
  %185 = phi i8* [ %160, %155 ], [ %174, %179 ]
  %186 = sext i32 %184 to i64
  %187 = getelementptr inbounds i8, i8* %185, i64 %186
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %187, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.103, i64 0, i64 0), i64 16, i1 false) #13
  %188 = add nsw i32 %184, 16
  store i32 %188, i32* @shstrtablen, align 4
  %189 = add nsw i32 %183, 1
  store i32 %189, i32* @nsections, align 4
  %190 = add nsw i32 %184, 27
  %191 = icmp slt i32 %190, %182
  br i1 %191, label %204, label %192

192:                                              ; preds = %181, %192
  %193 = phi i8* [ %197, %192 ], [ %185, %181 ]
  %194 = phi i32 [ %200, %192 ], [ %182, %181 ]
  %195 = add nsw i32 %194, 256
  store i32 %195, i32* @shstrtabsize, align 4
  %196 = sext i32 %195 to i64
  %197 = tail call i8* @nasm_realloc(i8* %193, i64 %196) #17
  store i8* %197, i8** @shstrtab, align 8
  %198 = load i32, i32* @shstrtablen, align 4
  %199 = add nsw i32 %198, 11
  %200 = load i32, i32* @shstrtabsize, align 4
  %201 = icmp slt i32 %199, %200
  br i1 %201, label %202, label %192

202:                                              ; preds = %192
  %203 = load i32, i32* @nsections, align 4
  br label %204

204:                                              ; preds = %202, %181
  %205 = phi i32 [ %182, %181 ], [ %200, %202 ]
  %206 = phi i32 [ %189, %181 ], [ %203, %202 ]
  %207 = phi i32 [ %188, %181 ], [ %198, %202 ]
  %208 = phi i8* [ %185, %181 ], [ %197, %202 ]
  %209 = sext i32 %207 to i64
  %210 = getelementptr inbounds i8, i8* %208, i64 %209
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %210, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.104, i64 0, i64 0), i64 12, i1 false) #13
  %211 = add nsw i32 %207, 12
  store i32 %211, i32* @shstrtablen, align 4
  %212 = add nsw i32 %206, 1
  store i32 %212, i32* @nsections, align 4
  %213 = add nsw i32 %207, 17
  %214 = add nsw i32 %207, 28
  %215 = icmp slt i32 %214, %205
  br i1 %215, label %229, label %216

216:                                              ; preds = %204, %216
  %217 = phi i8* [ %221, %216 ], [ %208, %204 ]
  %218 = phi i32 [ %224, %216 ], [ %205, %204 ]
  %219 = add nsw i32 %218, 256
  store i32 %219, i32* @shstrtabsize, align 4
  %220 = sext i32 %219 to i64
  %221 = tail call i8* @nasm_realloc(i8* %217, i64 %220) #17
  store i8* %221, i8** @shstrtab, align 8
  %222 = load i32, i32* @shstrtablen, align 4
  %223 = add nsw i32 %222, 16
  %224 = load i32, i32* @shstrtabsize, align 4
  %225 = icmp slt i32 %223, %224
  br i1 %225, label %226, label %216

226:                                              ; preds = %216
  %227 = add nsw i32 %222, 5
  %228 = load i32, i32* @nsections, align 4
  br label %229

229:                                              ; preds = %226, %204
  %230 = phi i32 [ %205, %204 ], [ %224, %226 ]
  %231 = phi i32 [ %212, %204 ], [ %228, %226 ]
  %232 = phi i32 [ %211, %204 ], [ %222, %226 ]
  %233 = phi i32 [ %213, %204 ], [ %227, %226 ]
  %234 = phi i8* [ %208, %204 ], [ %221, %226 ]
  %235 = sext i32 %232 to i64
  %236 = getelementptr inbounds i8, i8* %234, i64 %235
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %236, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.102, i64 0, i64 0), i64 5, i1 false) #13
  %237 = sext i32 %233 to i64
  %238 = getelementptr inbounds i8, i8* %234, i64 %237
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %238, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.104, i64 0, i64 0), i64 12, i1 false) #13
  %239 = add nsw i32 %233, 12
  store i32 %239, i32* @shstrtablen, align 4
  %240 = add nsw i32 %231, 1
  store i32 %240, i32* @nsections, align 4
  %241 = add nsw i32 %233, 25
  %242 = icmp slt i32 %241, %230
  br i1 %242, label %255, label %243

243:                                              ; preds = %229, %243
  %244 = phi i8* [ %248, %243 ], [ %234, %229 ]
  %245 = phi i32 [ %251, %243 ], [ %230, %229 ]
  %246 = add nsw i32 %245, 256
  store i32 %246, i32* @shstrtabsize, align 4
  %247 = sext i32 %246 to i64
  %248 = tail call i8* @nasm_realloc(i8* %244, i64 %247) #17
  store i8* %248, i8** @shstrtab, align 8
  %249 = load i32, i32* @shstrtablen, align 4
  %250 = add nsw i32 %249, 13
  %251 = load i32, i32* @shstrtabsize, align 4
  %252 = icmp slt i32 %250, %251
  br i1 %252, label %253, label %243

253:                                              ; preds = %243
  %254 = load i32, i32* @nsections, align 4
  br label %255

255:                                              ; preds = %253, %229
  %256 = phi i32 [ %230, %229 ], [ %251, %253 ]
  %257 = phi i32 [ %240, %229 ], [ %254, %253 ]
  %258 = phi i32 [ %239, %229 ], [ %249, %253 ]
  %259 = phi i8* [ %234, %229 ], [ %248, %253 ]
  %260 = sext i32 %258 to i64
  %261 = getelementptr inbounds i8, i8* %259, i64 %260
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %261, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.105, i64 0, i64 0), i64 14, i1 false) #13
  %262 = add nsw i32 %258, 14
  store i32 %262, i32* @shstrtablen, align 4
  %263 = add nsw i32 %257, 1
  store i32 %263, i32* @nsections, align 4
  %264 = add nsw i32 %258, 25
  %265 = icmp slt i32 %264, %256
  br i1 %265, label %278, label %266

266:                                              ; preds = %255, %266
  %267 = phi i8* [ %271, %266 ], [ %259, %255 ]
  %268 = phi i32 [ %274, %266 ], [ %256, %255 ]
  %269 = add nsw i32 %268, 256
  store i32 %269, i32* @shstrtabsize, align 4
  %270 = sext i32 %269 to i64
  %271 = tail call i8* @nasm_realloc(i8* %267, i64 %270) #17
  store i8* %271, i8** @shstrtab, align 8
  %272 = load i32, i32* @shstrtablen, align 4
  %273 = add nsw i32 %272, 11
  %274 = load i32, i32* @shstrtabsize, align 4
  %275 = icmp slt i32 %273, %274
  br i1 %275, label %276, label %266

276:                                              ; preds = %266
  %277 = load i32, i32* @nsections, align 4
  br label %278

278:                                              ; preds = %276, %255
  %279 = phi i32 [ %256, %255 ], [ %274, %276 ]
  %280 = phi i32 [ %263, %255 ], [ %277, %276 ]
  %281 = phi i32 [ %262, %255 ], [ %272, %276 ]
  %282 = phi i8* [ %259, %255 ], [ %271, %276 ]
  %283 = sext i32 %281 to i64
  %284 = getelementptr inbounds i8, i8* %282, i64 %283
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %284, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.106, i64 0, i64 0), i64 12, i1 false) #13
  %285 = add nsw i32 %281, 12
  store i32 %285, i32* @shstrtablen, align 4
  %286 = add nsw i32 %280, 1
  store i32 %286, i32* @nsections, align 4
  %287 = add nsw i32 %281, 17
  %288 = add nsw i32 %281, 28
  %289 = icmp slt i32 %288, %279
  br i1 %289, label %303, label %290

290:                                              ; preds = %278, %290
  %291 = phi i8* [ %295, %290 ], [ %282, %278 ]
  %292 = phi i32 [ %298, %290 ], [ %279, %278 ]
  %293 = add nsw i32 %292, 256
  store i32 %293, i32* @shstrtabsize, align 4
  %294 = sext i32 %293 to i64
  %295 = tail call i8* @nasm_realloc(i8* %291, i64 %294) #17
  store i8* %295, i8** @shstrtab, align 8
  %296 = load i32, i32* @shstrtablen, align 4
  %297 = add nsw i32 %296, 16
  %298 = load i32, i32* @shstrtabsize, align 4
  %299 = icmp slt i32 %297, %298
  br i1 %299, label %300, label %290

300:                                              ; preds = %290
  %301 = add nsw i32 %296, 5
  %302 = load i32, i32* @nsections, align 4
  br label %303

303:                                              ; preds = %300, %278
  %304 = phi i32 [ %279, %278 ], [ %298, %300 ]
  %305 = phi i32 [ %286, %278 ], [ %302, %300 ]
  %306 = phi i32 [ %285, %278 ], [ %296, %300 ]
  %307 = phi i32 [ %287, %278 ], [ %301, %300 ]
  %308 = phi i8* [ %282, %278 ], [ %295, %300 ]
  %309 = sext i32 %306 to i64
  %310 = getelementptr inbounds i8, i8* %308, i64 %309
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %310, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.102, i64 0, i64 0), i64 5, i1 false) #13
  %311 = sext i32 %307 to i64
  %312 = getelementptr inbounds i8, i8* %308, i64 %311
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %312, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.106, i64 0, i64 0), i64 12, i1 false) #13
  %313 = add nsw i32 %307, 12
  store i32 %313, i32* @shstrtablen, align 4
  %314 = add nsw i32 %305, 1
  store i32 %314, i32* @nsections, align 4
  %315 = add nsw i32 %307, 24
  %316 = icmp slt i32 %315, %304
  %317 = load i8*, i8** @shstrtab, align 8
  br i1 %316, label %330, label %318

318:                                              ; preds = %303, %318
  %319 = phi i8* [ %323, %318 ], [ %317, %303 ]
  %320 = phi i32 [ %326, %318 ], [ %304, %303 ]
  %321 = add nsw i32 %320, 256
  store i32 %321, i32* @shstrtabsize, align 4
  %322 = sext i32 %321 to i64
  %323 = tail call i8* @nasm_realloc(i8* %319, i64 %322) #17
  store i8* %323, i8** @shstrtab, align 8
  %324 = load i32, i32* @shstrtablen, align 4
  %325 = add nsw i32 %324, 12
  %326 = load i32, i32* @shstrtabsize, align 4
  %327 = icmp slt i32 %325, %326
  br i1 %327, label %328, label %318

328:                                              ; preds = %318
  %329 = load i32, i32* @nsections, align 4
  br label %330

330:                                              ; preds = %328, %303
  %331 = phi i32 [ %304, %303 ], [ %326, %328 ]
  %332 = phi i32 [ %314, %303 ], [ %329, %328 ]
  %333 = phi i32 [ %313, %303 ], [ %324, %328 ]
  %334 = phi i8* [ %317, %303 ], [ %323, %328 ]
  %335 = sext i32 %333 to i64
  %336 = getelementptr inbounds i8, i8* %334, i64 %335
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %336, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.107, i64 0, i64 0), i64 13, i1 false) #13
  %337 = add nsw i32 %333, 13
  store i32 %337, i32* @shstrtablen, align 4
  %338 = add nsw i32 %332, 1
  store i32 %338, i32* @nsections, align 4
  %339 = add nsw i32 %333, 23
  %340 = icmp slt i32 %339, %331
  br i1 %340, label %353, label %341

341:                                              ; preds = %330, %341
  %342 = phi i8* [ %346, %341 ], [ %334, %330 ]
  %343 = phi i32 [ %349, %341 ], [ %331, %330 ]
  %344 = add nsw i32 %343, 256
  store i32 %344, i32* @shstrtabsize, align 4
  %345 = sext i32 %344 to i64
  %346 = tail call i8* @nasm_realloc(i8* %342, i64 %345) #17
  store i8* %346, i8** @shstrtab, align 8
  %347 = load i32, i32* @shstrtablen, align 4
  %348 = add nsw i32 %347, 10
  %349 = load i32, i32* @shstrtabsize, align 4
  %350 = icmp slt i32 %348, %349
  br i1 %350, label %351, label %341

351:                                              ; preds = %341
  %352 = load i32, i32* @nsections, align 4
  br label %353

353:                                              ; preds = %351, %330
  %354 = phi i32 [ %331, %330 ], [ %349, %351 ]
  %355 = phi i32 [ %338, %330 ], [ %352, %351 ]
  %356 = phi i32 [ %337, %330 ], [ %347, %351 ]
  %357 = phi i8* [ %334, %330 ], [ %346, %351 ]
  %358 = sext i32 %356 to i64
  %359 = getelementptr inbounds i8, i8* %357, i64 %358
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %359, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.108, i64 0, i64 0), i64 11, i1 false) #13
  %360 = add nsw i32 %356, 11
  store i32 %360, i32* @shstrtablen, align 4
  %361 = add nsw i32 %355, 1
  store i32 %361, i32* @nsections, align 4
  br label %362

362:                                              ; preds = %110, %353, %89
  %363 = phi i32 [ %12, %110 ], [ %361, %353 ], [ %102, %89 ]
  %364 = phi i8* [ %112, %110 ], [ %357, %353 ], [ %94, %89 ]
  %365 = phi i32 [ %111, %110 ], [ %354, %353 ], [ %90, %89 ]
  %366 = phi i32 [ %109, %110 ], [ %360, %353 ], [ %101, %89 ]
  %367 = add nsw i32 %366, 9
  %368 = icmp slt i32 %367, %365
  br i1 %368, label %381, label %369

369:                                              ; preds = %362, %369
  %370 = phi i8* [ %374, %369 ], [ %364, %362 ]
  %371 = phi i32 [ %377, %369 ], [ %365, %362 ]
  %372 = add nsw i32 %371, 256
  store i32 %372, i32* @shstrtabsize, align 4
  %373 = sext i32 %372 to i64
  %374 = tail call i8* @nasm_realloc(i8* %370, i64 %373) #17
  store i8* %374, i8** @shstrtab, align 8
  %375 = load i32, i32* @shstrtablen, align 4
  %376 = add nsw i32 %375, 9
  %377 = load i32, i32* @shstrtabsize, align 4
  %378 = icmp slt i32 %376, %377
  br i1 %378, label %379, label %369

379:                                              ; preds = %369
  %380 = load i32, i32* @nsections, align 4
  br label %381

381:                                              ; preds = %379, %362
  %382 = phi i32 [ %365, %362 ], [ %377, %379 ]
  %383 = phi i32 [ %363, %362 ], [ %380, %379 ]
  %384 = phi i32 [ %366, %362 ], [ %375, %379 ]
  %385 = phi i8* [ %364, %362 ], [ %374, %379 ]
  %386 = sext i32 %384 to i64
  %387 = getelementptr inbounds i8, i8* %385, i64 %386
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %387, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i64 10, i1 false) #13
  %388 = add nsw i32 %384, 10
  store i32 %388, i32* @shstrtablen, align 4
  %389 = add nsw i32 %383, 1
  store i32 %389, i32* @nsections, align 4
  %390 = add nsw i32 %384, 17
  %391 = icmp slt i32 %390, %382
  br i1 %391, label %404, label %392

392:                                              ; preds = %381, %392
  %393 = phi i8* [ %397, %392 ], [ %385, %381 ]
  %394 = phi i32 [ %400, %392 ], [ %382, %381 ]
  %395 = add nsw i32 %394, 256
  store i32 %395, i32* @shstrtabsize, align 4
  %396 = sext i32 %395 to i64
  %397 = tail call i8* @nasm_realloc(i8* %393, i64 %396) #17
  store i8* %397, i8** @shstrtab, align 8
  %398 = load i32, i32* @shstrtablen, align 4
  %399 = add nsw i32 %398, 7
  %400 = load i32, i32* @shstrtabsize, align 4
  %401 = icmp slt i32 %399, %400
  br i1 %401, label %402, label %392

402:                                              ; preds = %392
  %403 = load i32, i32* @nsections, align 4
  br label %404

404:                                              ; preds = %402, %381
  %405 = phi i32 [ %382, %381 ], [ %400, %402 ]
  %406 = phi i32 [ %389, %381 ], [ %403, %402 ]
  %407 = phi i32 [ %388, %381 ], [ %398, %402 ]
  %408 = phi i8* [ %385, %381 ], [ %397, %402 ]
  %409 = sext i32 %407 to i64
  %410 = getelementptr inbounds i8, i8* %408, i64 %409
  %411 = bitcast i8* %410 to i64*
  store i64 27691700398420782, i64* %411, align 1
  %412 = add nsw i32 %407, 8
  store i32 %412, i32* @shstrtablen, align 4
  %413 = add nsw i32 %406, 1
  store i32 %413, i32* @nsections, align 4
  %414 = add nsw i32 %407, 15
  %415 = icmp slt i32 %414, %405
  %416 = load i8*, i8** @shstrtab, align 8
  br i1 %415, label %429, label %417

417:                                              ; preds = %404, %417
  %418 = phi i8* [ %422, %417 ], [ %416, %404 ]
  %419 = phi i32 [ %425, %417 ], [ %405, %404 ]
  %420 = add nsw i32 %419, 256
  store i32 %420, i32* @shstrtabsize, align 4
  %421 = sext i32 %420 to i64
  %422 = tail call i8* @nasm_realloc(i8* %418, i64 %421) #17
  store i8* %422, i8** @shstrtab, align 8
  %423 = load i32, i32* @shstrtablen, align 4
  %424 = add nsw i32 %423, 7
  %425 = load i32, i32* @shstrtabsize, align 4
  %426 = icmp slt i32 %424, %425
  br i1 %426, label %427, label %417

427:                                              ; preds = %417
  %428 = load i32, i32* @nsections, align 4
  br label %429

429:                                              ; preds = %427, %404
  %430 = phi i32 [ %413, %404 ], [ %428, %427 ]
  %431 = phi i32 [ %412, %404 ], [ %423, %427 ]
  %432 = phi i8* [ %416, %404 ], [ %422, %427 ]
  %433 = sext i32 %431 to i64
  %434 = getelementptr inbounds i8, i8* %432, i64 %433
  %435 = bitcast i8* %434 to i64*
  store i64 27691700481979182, i64* %435, align 1
  %436 = add nsw i32 %431, 8
  store i32 %436, i32* @shstrtablen, align 4
  %437 = add nsw i32 %430, 1
  store i32 %437, i32* @nsections, align 4
  %438 = bitcast %struct.elf_symbol* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %438) #13
  %439 = tail call %struct.SAA* @saa_init(i64 1) #13
  store %struct.SAA* %439, %struct.SAA** @symtab, align 8
  store %struct.SAA* null, %struct.SAA** @symtab_shndx, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %438, i8 0, i64 72, i1 false) #13
  %440 = getelementptr inbounds %struct.elf_symbol, %struct.elf_symbol* %9, i64 0, i32 2
  %441 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %442 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %441, i64 0, i32 11
  %443 = load void (%struct.elf_symbol*)*, void (%struct.elf_symbol*)** %442, align 8
  call void %443(%struct.elf_symbol* nonnull %9) #13
  %444 = load i64, i64* @nsyms, align 8
  %445 = add i64 %444, 1
  store i64 %445, i64* @nsyms, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %438, i8 0, i64 72, i1 false) #13
  %446 = getelementptr inbounds %struct.elf_symbol, %struct.elf_symbol* %9, i64 0, i32 1
  store i32 1, i32* %446, align 8
  %447 = getelementptr inbounds %struct.elf_symbol, %struct.elf_symbol* %9, i64 0, i32 3
  store i32 4, i32* %447, align 8
  store i32 -15, i32* %440, align 4
  %448 = load %struct.SAA*, %struct.SAA** @symtab_shndx, align 8
  %449 = icmp eq %struct.SAA* %448, null
  br i1 %449, label %451, label %450

450:                                              ; preds = %429
  call void @saa_write32(%struct.SAA* nonnull %448, i32 0) #13
  br label %451

451:                                              ; preds = %450, %429
  %452 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %453 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %452, i64 0, i32 11
  %454 = load void (%struct.elf_symbol*)*, void (%struct.elf_symbol*)** %453, align 8
  call void %454(%struct.elf_symbol* nonnull %9) #13
  %455 = load i64, i64* @nsyms, align 8
  %456 = add i64 %455, 1
  store i64 %456, i64* @nsyms, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %438, i8 0, i64 72, i1 false) #13
  %457 = load i32, i32* @nsects, align 4
  %458 = icmp slt i32 %457, 1
  br i1 %458, label %485, label %459

459:                                              ; preds = %451, %476
  %460 = phi i32 [ %482, %476 ], [ 1, %451 ]
  store i32 3, i32* %447, align 8
  store i32 %460, i32* %440, align 4
  %461 = icmp ugt i32 %460, 65279
  br i1 %461, label %462, label %469

462:                                              ; preds = %459
  %463 = load %struct.SAA*, %struct.SAA** @symtab_shndx, align 8
  %464 = icmp eq %struct.SAA* %463, null
  br i1 %464, label %465, label %473, !prof !2

465:                                              ; preds = %462
  %466 = call %struct.SAA* @saa_init(i64 1) #13
  store %struct.SAA* %466, %struct.SAA** @symtab_shndx, align 8
  %467 = load i64, i64* @nsyms, align 8
  %468 = shl i64 %467, 2
  call void @saa_wbytes(%struct.SAA* %466, i8* null, i64 %468) #13
  br label %469

469:                                              ; preds = %465, %459
  %470 = phi i32 [ 0, %459 ], [ %460, %465 ]
  %471 = load %struct.SAA*, %struct.SAA** @symtab_shndx, align 8
  %472 = icmp eq %struct.SAA* %471, null
  br i1 %472, label %476, label %473

473:                                              ; preds = %469, %462
  %474 = phi i32 [ %470, %469 ], [ %460, %462 ]
  %475 = phi %struct.SAA* [ %471, %469 ], [ %463, %462 ]
  call void @saa_write32(%struct.SAA* nonnull %475, i32 %474) #13
  br label %476

476:                                              ; preds = %473, %469
  %477 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %478 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %477, i64 0, i32 11
  %479 = load void (%struct.elf_symbol*)*, void (%struct.elf_symbol*)** %478, align 8
  call void %479(%struct.elf_symbol* nonnull %9) #13
  %480 = load i64, i64* @nsyms, align 8
  %481 = add i64 %480, 1
  store i64 %481, i64* @nsyms, align 8
  %482 = add nuw nsw i32 %460, 1
  %483 = load i32, i32* @nsects, align 4
  %484 = icmp slt i32 %460, %483
  br i1 %484, label %459, label %485

485:                                              ; preds = %476, %451
  %486 = phi i64 [ %456, %451 ], [ %481, %476 ]
  %487 = load %struct.dfmt*, %struct.dfmt** @dfmt, align 8
  %488 = icmp eq %struct.dfmt* %487, @elf32_df_dwarf
  %489 = icmp eq %struct.dfmt* %487, @elfx32_df_dwarf
  %490 = or i1 %488, %489
  %491 = icmp eq %struct.dfmt* %487, @elf64_df_dwarf
  %492 = or i1 %491, %490
  br i1 %492, label %493, label %563

493:                                              ; preds = %485
  store i64 %486, i64* @dwarf_infosym, align 8
  %494 = load i32, i32* @sec_debug, align 4
  %495 = add nsw i32 %494, 3
  store i32 %495, i32* %440, align 4
  %496 = icmp sgt i32 %495, 65279
  br i1 %496, label %497, label %504

497:                                              ; preds = %493
  %498 = load %struct.SAA*, %struct.SAA** @symtab_shndx, align 8
  %499 = icmp eq %struct.SAA* %498, null
  br i1 %499, label %500, label %508, !prof !2

500:                                              ; preds = %497
  %501 = call %struct.SAA* @saa_init(i64 1) #13
  store %struct.SAA* %501, %struct.SAA** @symtab_shndx, align 8
  %502 = load i64, i64* @nsyms, align 8
  %503 = shl i64 %502, 2
  call void @saa_wbytes(%struct.SAA* %501, i8* null, i64 %503) #13
  br label %504

504:                                              ; preds = %500, %493
  %505 = phi i32 [ 0, %493 ], [ %495, %500 ]
  %506 = load %struct.SAA*, %struct.SAA** @symtab_shndx, align 8
  %507 = icmp eq %struct.SAA* %506, null
  br i1 %507, label %511, label %508

508:                                              ; preds = %504, %497
  %509 = phi i32 [ %505, %504 ], [ %495, %497 ]
  %510 = phi %struct.SAA* [ %506, %504 ], [ %498, %497 ]
  call void @saa_write32(%struct.SAA* nonnull %510, i32 %509) #13
  br label %511

511:                                              ; preds = %508, %504
  %512 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %513 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %512, i64 0, i32 11
  %514 = load void (%struct.elf_symbol*)*, void (%struct.elf_symbol*)** %513, align 8
  call void %514(%struct.elf_symbol* nonnull %9) #13
  %515 = load i64, i64* @nsyms, align 8
  %516 = add i64 %515, 1
  store i64 %516, i64* @nsyms, align 8
  store i64 %516, i64* @dwarf_abbrevsym, align 8
  %517 = load i32, i32* @sec_debug, align 4
  %518 = add nsw i32 %517, 5
  store i32 %518, i32* %440, align 4
  %519 = icmp sgt i32 %518, 65279
  br i1 %519, label %520, label %527

520:                                              ; preds = %511
  %521 = load %struct.SAA*, %struct.SAA** @symtab_shndx, align 8
  %522 = icmp eq %struct.SAA* %521, null
  br i1 %522, label %523, label %531, !prof !2

523:                                              ; preds = %520
  %524 = call %struct.SAA* @saa_init(i64 1) #13
  store %struct.SAA* %524, %struct.SAA** @symtab_shndx, align 8
  %525 = load i64, i64* @nsyms, align 8
  %526 = shl i64 %525, 2
  call void @saa_wbytes(%struct.SAA* %524, i8* null, i64 %526) #13
  br label %527

527:                                              ; preds = %523, %511
  %528 = phi i32 [ 0, %511 ], [ %518, %523 ]
  %529 = load %struct.SAA*, %struct.SAA** @symtab_shndx, align 8
  %530 = icmp eq %struct.SAA* %529, null
  br i1 %530, label %534, label %531

531:                                              ; preds = %527, %520
  %532 = phi i32 [ %528, %527 ], [ %518, %520 ]
  %533 = phi %struct.SAA* [ %529, %527 ], [ %521, %520 ]
  call void @saa_write32(%struct.SAA* nonnull %533, i32 %532) #13
  br label %534

534:                                              ; preds = %531, %527
  %535 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %536 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %535, i64 0, i32 11
  %537 = load void (%struct.elf_symbol*)*, void (%struct.elf_symbol*)** %536, align 8
  call void %537(%struct.elf_symbol* nonnull %9) #13
  %538 = load i64, i64* @nsyms, align 8
  %539 = add i64 %538, 1
  store i64 %539, i64* @nsyms, align 8
  store i64 %539, i64* @dwarf_linesym, align 8
  %540 = load i32, i32* @sec_debug, align 4
  %541 = add nsw i32 %540, 6
  store i32 %541, i32* %440, align 4
  %542 = icmp sgt i32 %541, 65279
  br i1 %542, label %543, label %550

543:                                              ; preds = %534
  %544 = load %struct.SAA*, %struct.SAA** @symtab_shndx, align 8
  %545 = icmp eq %struct.SAA* %544, null
  br i1 %545, label %546, label %554, !prof !2

546:                                              ; preds = %543
  %547 = call %struct.SAA* @saa_init(i64 1) #13
  store %struct.SAA* %547, %struct.SAA** @symtab_shndx, align 8
  %548 = load i64, i64* @nsyms, align 8
  %549 = shl i64 %548, 2
  call void @saa_wbytes(%struct.SAA* %547, i8* null, i64 %549) #13
  br label %550

550:                                              ; preds = %546, %534
  %551 = phi i32 [ 0, %534 ], [ %541, %546 ]
  %552 = load %struct.SAA*, %struct.SAA** @symtab_shndx, align 8
  %553 = icmp eq %struct.SAA* %552, null
  br i1 %553, label %557, label %554

554:                                              ; preds = %550, %543
  %555 = phi i32 [ %551, %550 ], [ %541, %543 ]
  %556 = phi %struct.SAA* [ %552, %550 ], [ %544, %543 ]
  call void @saa_write32(%struct.SAA* nonnull %556, i32 %555) #13
  br label %557

557:                                              ; preds = %554, %550
  %558 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %559 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %558, i64 0, i32 11
  %560 = load void (%struct.elf_symbol*)*, void (%struct.elf_symbol*)** %559, align 8
  call void %560(%struct.elf_symbol* nonnull %9) #13
  %561 = load i64, i64* @nsyms, align 8
  %562 = add i64 %561, 1
  store i64 %562, i64* @nsyms, align 8
  br label %563

563:                                              ; preds = %557, %485
  %564 = load %struct.SAA*, %struct.SAA** @syms, align 8
  call void @saa_rewind(%struct.SAA* %564) #13
  %565 = load %struct.SAA*, %struct.SAA** @syms, align 8
  %566 = call i8* @saa_rstruct(%struct.SAA* %565) #13
  %567 = icmp eq i8* %566, null
  br i1 %567, label %604, label %568

568:                                              ; preds = %563, %600
  %569 = phi i8* [ %602, %600 ], [ %566, %563 ]
  %570 = bitcast i8* %569 to %struct.elf_symbol*
  %571 = getelementptr inbounds i8, i8* %569, i64 40
  %572 = bitcast i8* %571 to i32*
  %573 = load i32, i32* %572, align 8
  %574 = icmp ult i32 %573, 16
  br i1 %574, label %575, label %600

575:                                              ; preds = %568
  %576 = getelementptr inbounds i8, i8* %569, i64 36
  %577 = bitcast i8* %576 to i32*
  %578 = load i32, i32* %577, align 4
  %579 = icmp sgt i32 %578, 65279
  br i1 %579, label %580, label %587

580:                                              ; preds = %575
  %581 = load %struct.SAA*, %struct.SAA** @symtab_shndx, align 8
  %582 = icmp eq %struct.SAA* %581, null
  br i1 %582, label %583, label %591, !prof !2

583:                                              ; preds = %580
  %584 = call %struct.SAA* @saa_init(i64 1) #13
  store %struct.SAA* %584, %struct.SAA** @symtab_shndx, align 8
  %585 = load i64, i64* @nsyms, align 8
  %586 = shl i64 %585, 2
  call void @saa_wbytes(%struct.SAA* %584, i8* null, i64 %586) #13
  br label %587

587:                                              ; preds = %583, %575
  %588 = phi i32 [ 0, %575 ], [ %578, %583 ]
  %589 = load %struct.SAA*, %struct.SAA** @symtab_shndx, align 8
  %590 = icmp eq %struct.SAA* %589, null
  br i1 %590, label %594, label %591

591:                                              ; preds = %587, %580
  %592 = phi i32 [ %588, %587 ], [ %578, %580 ]
  %593 = phi %struct.SAA* [ %589, %587 ], [ %581, %580 ]
  call void @saa_write32(%struct.SAA* nonnull %593, i32 %592) #13
  br label %594

594:                                              ; preds = %591, %587
  %595 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %596 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %595, i64 0, i32 11
  %597 = load void (%struct.elf_symbol*)*, void (%struct.elf_symbol*)** %596, align 8
  call void %597(%struct.elf_symbol* nonnull %570) #13
  %598 = load i64, i64* @nsyms, align 8
  %599 = add i64 %598, 1
  store i64 %599, i64* @nsyms, align 8
  br label %600

600:                                              ; preds = %594, %568
  %601 = load %struct.SAA*, %struct.SAA** @syms, align 8
  %602 = call i8* @saa_rstruct(%struct.SAA* %601) #13
  %603 = icmp eq i8* %602, null
  br i1 %603, label %604, label %568

604:                                              ; preds = %600, %563
  %605 = load i64, i64* @nsyms, align 8
  %606 = load %struct.SAA*, %struct.SAA** @syms, align 8
  call void @saa_rewind(%struct.SAA* %606) #13
  %607 = load %struct.SAA*, %struct.SAA** @syms, align 8
  %608 = call i8* @saa_rstruct(%struct.SAA* %607) #13
  %609 = icmp eq i8* %608, null
  br i1 %609, label %646, label %610

610:                                              ; preds = %604, %642
  %611 = phi i8* [ %644, %642 ], [ %608, %604 ]
  %612 = bitcast i8* %611 to %struct.elf_symbol*
  %613 = getelementptr inbounds i8, i8* %611, i64 40
  %614 = bitcast i8* %613 to i32*
  %615 = load i32, i32* %614, align 8
  %616 = icmp ult i32 %615, 16
  br i1 %616, label %642, label %617

617:                                              ; preds = %610
  %618 = getelementptr inbounds i8, i8* %611, i64 36
  %619 = bitcast i8* %618 to i32*
  %620 = load i32, i32* %619, align 4
  %621 = icmp sgt i32 %620, 65279
  br i1 %621, label %622, label %629

622:                                              ; preds = %617
  %623 = load %struct.SAA*, %struct.SAA** @symtab_shndx, align 8
  %624 = icmp eq %struct.SAA* %623, null
  br i1 %624, label %625, label %633, !prof !2

625:                                              ; preds = %622
  %626 = call %struct.SAA* @saa_init(i64 1) #13
  store %struct.SAA* %626, %struct.SAA** @symtab_shndx, align 8
  %627 = load i64, i64* @nsyms, align 8
  %628 = shl i64 %627, 2
  call void @saa_wbytes(%struct.SAA* %626, i8* null, i64 %628) #13
  br label %629

629:                                              ; preds = %625, %617
  %630 = phi i32 [ 0, %617 ], [ %620, %625 ]
  %631 = load %struct.SAA*, %struct.SAA** @symtab_shndx, align 8
  %632 = icmp eq %struct.SAA* %631, null
  br i1 %632, label %636, label %633

633:                                              ; preds = %629, %622
  %634 = phi i32 [ %630, %629 ], [ %620, %622 ]
  %635 = phi %struct.SAA* [ %631, %629 ], [ %623, %622 ]
  call void @saa_write32(%struct.SAA* nonnull %635, i32 %634) #13
  br label %636

636:                                              ; preds = %633, %629
  %637 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %638 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %637, i64 0, i32 11
  %639 = load void (%struct.elf_symbol*)*, void (%struct.elf_symbol*)** %638, align 8
  call void %639(%struct.elf_symbol* nonnull %612) #13
  %640 = load i64, i64* @nsyms, align 8
  %641 = add i64 %640, 1
  store i64 %641, i64* @nsyms, align 8
  br label %642

642:                                              ; preds = %636, %610
  %643 = load %struct.SAA*, %struct.SAA** @syms, align 8
  %644 = call i8* @saa_rstruct(%struct.SAA* %643) #13
  %645 = icmp eq i8* %644, null
  br i1 %645, label %646, label %610

646:                                              ; preds = %642, %604
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %438) #13
  %647 = load %struct.SAA*, %struct.SAA** @symtab_shndx, align 8
  %648 = icmp eq %struct.SAA* %647, null
  br i1 %648, label %673, label %649

649:                                              ; preds = %646
  %650 = load i32, i32* @shstrtablen, align 4
  %651 = add nsw i32 %650, 13
  %652 = load i32, i32* @shstrtabsize, align 4
  %653 = icmp slt i32 %651, %652
  %654 = load i8*, i8** @shstrtab, align 8
  br i1 %653, label %665, label %655

655:                                              ; preds = %649, %655
  %656 = phi i8* [ %660, %655 ], [ %654, %649 ]
  %657 = phi i32 [ %663, %655 ], [ %652, %649 ]
  %658 = add nsw i32 %657, 256
  store i32 %658, i32* @shstrtabsize, align 4
  %659 = sext i32 %658 to i64
  %660 = call i8* @nasm_realloc(i8* %656, i64 %659) #17
  store i8* %660, i8** @shstrtab, align 8
  %661 = load i32, i32* @shstrtablen, align 4
  %662 = add nsw i32 %661, 13
  %663 = load i32, i32* @shstrtabsize, align 4
  %664 = icmp slt i32 %662, %663
  br i1 %664, label %665, label %655

665:                                              ; preds = %655, %649
  %666 = phi i32 [ %650, %649 ], [ %661, %655 ]
  %667 = phi i8* [ %654, %649 ], [ %660, %655 ]
  %668 = sext i32 %666 to i64
  %669 = getelementptr inbounds i8, i8* %667, i64 %668
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %669, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0), i64 14, i1 false) #13
  %670 = add nsw i32 %666, 14
  store i32 %670, i32* @shstrtablen, align 4
  %671 = load i32, i32* @nsections, align 4
  %672 = add nsw i32 %671, 1
  store i32 %672, i32* @nsections, align 4
  br label %673

673:                                              ; preds = %646, %665
  %674 = load i32, i32* @nsects, align 4
  %675 = icmp sgt i32 %674, 0
  br i1 %675, label %676, label %751

676:                                              ; preds = %673
  %677 = load %struct.elf_section**, %struct.elf_section*** @sects, align 8
  br label %678

678:                                              ; preds = %676, %745
  %679 = phi i32 [ %674, %676 ], [ %746, %745 ]
  %680 = phi %struct.elf_section** [ %677, %676 ], [ %747, %745 ]
  %681 = phi i64 [ 0, %676 ], [ %748, %745 ]
  %682 = getelementptr inbounds %struct.elf_section*, %struct.elf_section** %680, i64 %681
  %683 = load %struct.elf_section*, %struct.elf_section** %682, align 8
  %684 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %683, i64 0, i32 13
  %685 = load %struct.elf_reloc*, %struct.elf_reloc** %684, align 8
  %686 = icmp eq %struct.elf_reloc* %685, null
  br i1 %686, label %745, label %687

687:                                              ; preds = %678
  %688 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %689 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %688, i64 0, i32 6, i64 0
  %690 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %683, i64 0, i32 11
  %691 = load i8*, i8** %690, align 8
  %692 = call i64 @strlen(i8* %689) #16
  %693 = trunc i64 %692 to i32
  %694 = call i64 @strlen(i8* %691) #16
  %695 = trunc i64 %694 to i32
  %696 = load i32, i32* @shstrtablen, align 4
  %697 = add nsw i32 %696, %693
  %698 = add nsw i32 %697, %695
  %699 = load i32, i32* @shstrtabsize, align 4
  %700 = icmp slt i32 %698, %699
  %701 = load i8*, i8** @shstrtab, align 8
  br i1 %700, label %716, label %702

702:                                              ; preds = %687, %702
  %703 = phi i8* [ %707, %702 ], [ %701, %687 ]
  %704 = phi i32 [ %711, %702 ], [ %699, %687 ]
  %705 = add nsw i32 %704, 256
  store i32 %705, i32* @shstrtabsize, align 4
  %706 = sext i32 %705 to i64
  %707 = call i8* @nasm_realloc(i8* %703, i64 %706) #17
  store i8* %707, i8** @shstrtab, align 8
  %708 = load i32, i32* @shstrtablen, align 4
  %709 = add nsw i32 %708, %693
  %710 = add nsw i32 %709, %695
  %711 = load i32, i32* @shstrtabsize, align 4
  %712 = icmp slt i32 %710, %711
  br i1 %712, label %713, label %702

713:                                              ; preds = %702
  %714 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %715 = load %struct.elf_section**, %struct.elf_section*** @sects, align 8
  br label %716

716:                                              ; preds = %713, %687
  %717 = phi %struct.elf_section** [ %680, %687 ], [ %715, %713 ]
  %718 = phi %struct.elf_format_info* [ %688, %687 ], [ %714, %713 ]
  %719 = phi i32 [ %696, %687 ], [ %708, %713 ]
  %720 = phi i32 [ %697, %687 ], [ %709, %713 ]
  %721 = phi i8* [ %701, %687 ], [ %707, %713 ]
  %722 = sext i32 %719 to i64
  %723 = getelementptr inbounds i8, i8* %721, i64 %722
  %724 = shl i64 %692, 32
  %725 = ashr exact i64 %724, 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %723, i8* align 1 %689, i64 %725, i1 false) #13
  %726 = sext i32 %720 to i64
  %727 = getelementptr inbounds i8, i8* %721, i64 %726
  %728 = add nsw i32 %695, 1
  %729 = sext i32 %728 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %727, i8* align 1 %691, i64 %729, i1 false) #13
  %730 = add nsw i32 %720, %728
  store i32 %730, i32* @shstrtablen, align 4
  %731 = load i32, i32* @nsections, align 4
  %732 = add nsw i32 %731, 1
  store i32 %732, i32* @nsections, align 4
  %733 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %718, i64 0, i32 12
  %734 = load %struct.SAA* (%struct.elf_reloc*)*, %struct.SAA* (%struct.elf_reloc*)** %733, align 8
  %735 = getelementptr inbounds %struct.elf_section*, %struct.elf_section** %717, i64 %681
  %736 = load %struct.elf_section*, %struct.elf_section** %735, align 8
  %737 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %736, i64 0, i32 13
  %738 = load %struct.elf_reloc*, %struct.elf_reloc** %737, align 8
  %739 = call %struct.SAA* %734(%struct.elf_reloc* %738) #13
  %740 = load %struct.elf_section**, %struct.elf_section*** @sects, align 8
  %741 = getelementptr inbounds %struct.elf_section*, %struct.elf_section** %740, i64 %681
  %742 = load %struct.elf_section*, %struct.elf_section** %741, align 8
  %743 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %742, i64 0, i32 12
  store %struct.SAA* %739, %struct.SAA** %743, align 8
  %744 = load i32, i32* @nsects, align 4
  br label %745

745:                                              ; preds = %678, %716
  %746 = phi i32 [ %679, %678 ], [ %744, %716 ]
  %747 = phi %struct.elf_section** [ %680, %678 ], [ %740, %716 ]
  %748 = add nuw nsw i64 %681, 1
  %749 = sext i32 %746 to i64
  %750 = icmp slt i64 %748, %749
  br i1 %750, label %678, label %751

751:                                              ; preds = %745, %673
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 64, i1 false)
  %752 = bitcast %union.ehdr* %10 to i32*
  store i32 1179403647, i32* %752, align 8
  %753 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %754 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %753, i64 0, i32 9
  %755 = load i8, i8* %754, align 2
  %756 = getelementptr inbounds %union.ehdr, %union.ehdr* %10, i64 0, i32 0, i32 0, i64 4
  store i8 %755, i8* %756, align 4
  %757 = getelementptr inbounds %union.ehdr, %union.ehdr* %10, i64 0, i32 0, i32 0, i64 5
  store i8 1, i8* %757, align 1
  %758 = getelementptr inbounds %union.ehdr, %union.ehdr* %10, i64 0, i32 0, i32 0, i64 6
  store i8 1, i8* %758, align 2
  %759 = load i8, i8* @elf_osabi, align 1
  %760 = getelementptr inbounds %union.ehdr, %union.ehdr* %10, i64 0, i32 0, i32 0, i64 7
  store i8 %759, i8* %760, align 1
  %761 = load i8, i8* @elf_abiver, align 1
  %762 = getelementptr inbounds %union.ehdr, %union.ehdr* %10, i64 0, i32 0, i32 0, i64 8
  store i8 %761, i8* %762, align 8
  %763 = getelementptr inbounds %union.ehdr, %union.ehdr* %10, i64 0, i32 0, i32 1
  store i16 1, i16* %763, align 8
  %764 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %753, i64 0, i32 8
  %765 = load i16, i16* %764, align 4
  %766 = getelementptr inbounds %union.ehdr, %union.ehdr* %10, i64 0, i32 0, i32 2
  store i16 %765, i16* %766, align 2
  %767 = getelementptr inbounds %union.ehdr, %union.ehdr* %10, i64 0, i32 0, i32 3
  store i32 1, i32* %767, align 4
  %768 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %753, i64 0, i32 10
  %769 = load i8, i8* %768, align 1, !range !3
  %770 = icmp eq i8 %769, 0
  br i1 %770, label %771, label %788

771:                                              ; preds = %751
  %772 = bitcast %union.ehdr* %10 to %struct.elf32_hdr*
  %773 = getelementptr inbounds %union.ehdr, %union.ehdr* %10, i64 0, i32 0, i32 5
  %774 = bitcast i64* %773 to i32*
  store i32 64, i32* %774, align 8
  %775 = getelementptr inbounds %union.ehdr, %union.ehdr* %10, i64 0, i32 0, i32 6
  %776 = bitcast i64* %775 to i16*
  store i16 52, i16* %776, align 8
  %777 = getelementptr inbounds %struct.elf32_hdr, %struct.elf32_hdr* %772, i64 0, i32 11
  store i16 40, i16* %777, align 2
  %778 = load i32, i32* @nsections, align 4
  %779 = icmp slt i32 %778, 65280
  %780 = select i1 %779, i32 %778, i32 0
  %781 = trunc i32 %780 to i16
  %782 = getelementptr inbounds %union.ehdr, %union.ehdr* %10, i64 0, i32 0, i32 7
  %783 = bitcast i32* %782 to i16*
  store i16 %781, i16* %783, align 8
  %784 = icmp slt i32 %383, 65280
  %785 = select i1 %784, i32 %383, i32 65535
  %786 = trunc i32 %785 to i16
  %787 = getelementptr inbounds %struct.elf32_hdr, %struct.elf32_hdr* %772, i64 0, i32 13
  store i16 %786, i16* %787, align 2
  br label %801

788:                                              ; preds = %751
  %789 = getelementptr inbounds %union.ehdr, %union.ehdr* %10, i64 0, i32 0, i32 6
  store i64 64, i64* %789, align 8
  %790 = getelementptr inbounds %union.ehdr, %union.ehdr* %10, i64 0, i32 0, i32 8
  store i16 64, i16* %790, align 4
  %791 = getelementptr inbounds %union.ehdr, %union.ehdr* %10, i64 0, i32 0, i32 11
  store i16 64, i16* %791, align 2
  %792 = load i32, i32* @nsections, align 4
  %793 = icmp slt i32 %792, 65280
  %794 = select i1 %793, i32 %792, i32 0
  %795 = trunc i32 %794 to i16
  %796 = getelementptr inbounds %union.ehdr, %union.ehdr* %10, i64 0, i32 0, i32 12
  store i16 %795, i16* %796, align 4
  %797 = icmp slt i32 %383, 65280
  %798 = select i1 %797, i32 %383, i32 65535
  %799 = trunc i32 %798 to i16
  %800 = getelementptr inbounds %union.ehdr, %union.ehdr* %10, i64 0, i32 0, i32 13
  store i16 %799, i16* %800, align 2
  br label %801

801:                                              ; preds = %788, %771
  %802 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @nasm_write(i8* nonnull %11, i64 64, %struct._IO_FILE* %802) #13
  %803 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %804 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %803, i64 0, i32 2
  %805 = load i64, i64* %804, align 8
  %806 = load i32, i32* @nsections, align 4
  %807 = sext i32 %806 to i64
  %808 = mul i64 %805, %807
  %809 = add i64 %808, 64
  %810 = add i64 %808, 79
  %811 = and i64 %810, 4294967280
  %812 = sub i64 %811, %809
  %813 = shl i64 %812, 32
  %814 = ashr exact i64 %813, 32
  %815 = add nsw i64 %814, %809
  store i64 %815, i64* @elf_foffs, align 8
  store i32 0, i32* @elf_nsect, align 4
  %816 = mul nsw i64 %807, 24
  %817 = call noalias i8* @nasm_malloc(i64 %816) #15
  store i8* %817, i8** bitcast (%struct.ELF_SECTDATA** @elf_sects to i8**), align 8
  %818 = load i32, i32* @nsections, align 4
  %819 = icmp sgt i32 %818, 65280
  %820 = select i1 %819, i32 %818, i32 0
  %821 = sext i32 %820 to i64
  %822 = icmp sgt i32 %383, 65279
  %823 = select i1 %822, i32 %383, i32 0
  %824 = bitcast i8* %817 to %struct.ELF_SECTDATA*
  %825 = load i32, i32* @elf_nsect, align 4
  %826 = sext i32 %825 to i64
  %827 = getelementptr inbounds %struct.ELF_SECTDATA, %struct.ELF_SECTDATA* %824, i64 %826, i32 0
  store i8* null, i8** %827, align 8
  %828 = getelementptr inbounds %struct.ELF_SECTDATA, %struct.ELF_SECTDATA* %824, i64 %826, i32 1
  store i64 %821, i64* %828, align 8
  %829 = getelementptr inbounds %struct.ELF_SECTDATA, %struct.ELF_SECTDATA* %824, i64 %826, i32 2
  store i8 0, i8* %829, align 8
  %830 = add nsw i32 %825, 1
  store i32 %830, i32* @elf_nsect, align 4
  %831 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %832 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %831, i64 0, i32 10
  %833 = load i8, i8* %832, align 1, !range !3
  %834 = icmp eq i8 %833, 0
  br i1 %834, label %835, label %844

835:                                              ; preds = %801
  %836 = bitcast %struct.elf32_shdr* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %836) #13
  %837 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %7, i64 0, i32 6
  %838 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %7, i64 0, i32 5
  %839 = bitcast %struct.elf32_shdr* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %839, i8 0, i64 20, i1 false)
  store i32 %820, i32* %838, align 4
  store i32 %823, i32* %837, align 4
  %840 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %7, i64 0, i32 7
  store i32 0, i32* %840, align 4
  %841 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %7, i64 0, i32 8
  store i32 0, i32* %841, align 4
  %842 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %7, i64 0, i32 9
  store i32 0, i32* %842, align 4
  %843 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @nasm_write(i8* nonnull %836, i64 40, %struct._IO_FILE* %843) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %836) #13
  br label %852

844:                                              ; preds = %801
  %845 = bitcast %struct.elf64_shdr* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %845) #13
  %846 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %8, i64 0, i32 6
  %847 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %8, i64 0, i32 5
  %848 = bitcast %struct.elf64_shdr* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %848, i8 0, i64 32, i1 false)
  store i64 %821, i64* %847, align 8
  store i32 %823, i32* %846, align 8
  %849 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %8, i64 0, i32 7
  %850 = bitcast i32* %849 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %850, i8 0, i64 20, i1 false)
  %851 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @nasm_write(i8* nonnull %845, i64 64, %struct._IO_FILE* %851) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %845) #13
  br label %852

852:                                              ; preds = %835, %844
  %853 = load i8*, i8** @shstrtab, align 8
  %854 = getelementptr inbounds i8, i8* %853, i64 1
  %855 = load i32, i32* @nsects, align 4
  %856 = icmp sgt i32 %855, 0
  br i1 %856, label %857, label %890

857:                                              ; preds = %852
  %858 = ptrtoint i8* %853 to i64
  br label %859

859:                                              ; preds = %888, %857
  %860 = phi i64 [ %858, %857 ], [ %889, %888 ]
  %861 = phi i64 [ 0, %857 ], [ %884, %888 ]
  %862 = phi i8* [ %854, %857 ], [ %883, %888 ]
  %863 = ptrtoint i8* %862 to i64
  %864 = sub i64 %863, %860
  %865 = trunc i64 %864 to i32
  %866 = load %struct.elf_section**, %struct.elf_section*** @sects, align 8
  %867 = getelementptr inbounds %struct.elf_section*, %struct.elf_section** %866, i64 %861
  %868 = load %struct.elf_section*, %struct.elf_section** %867, align 8
  %869 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %868, i64 0, i32 6
  %870 = load i32, i32* %869, align 8
  %871 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %868, i64 0, i32 8
  %872 = load i64, i64* %871, align 8
  %873 = bitcast %struct.elf_section* %868 to i8**
  %874 = load i8*, i8** %873, align 8
  %875 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %868, i64 0, i32 1
  %876 = load i64, i64* %875, align 8
  %877 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %868, i64 0, i32 7
  %878 = load i64, i64* %877, align 8
  %879 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %868, i64 0, i32 10
  %880 = load i64, i64* %879, align 8
  call fastcc void @elf_section_header(i32 %865, i32 %870, i64 %872, i8* %874, i1 zeroext true, i64 %876, i32 0, i32 0, i64 %878, i64 %880)
  %881 = call i64 @strlen(i8* %862) #16
  %882 = add i64 %881, 1
  %883 = getelementptr inbounds i8, i8* %862, i64 %882
  %884 = add nuw nsw i64 %861, 1
  %885 = load i32, i32* @nsects, align 4
  %886 = sext i32 %885 to i64
  %887 = icmp slt i64 %884, %886
  br i1 %887, label %888, label %890

888:                                              ; preds = %859
  %889 = load i64, i64* bitcast (i8** @shstrtab to i64*), align 8
  br label %859

890:                                              ; preds = %859, %852
  %891 = phi i8* [ %854, %852 ], [ %883, %859 ]
  %892 = load %struct.dfmt*, %struct.dfmt** @dfmt, align 8
  %893 = icmp eq %struct.dfmt* %892, @elf32_df_stabs
  %894 = icmp eq %struct.dfmt* %892, @elfx32_df_stabs
  %895 = or i1 %893, %894
  %896 = icmp eq %struct.dfmt* %892, @elf64_df_stabs
  %897 = or i1 %896, %895
  br i1 %897, label %898, label %1444

898:                                              ; preds = %890
  %899 = load %struct.linelist*, %struct.linelist** @stabslines, align 8
  %900 = load i32, i32* @numlinestabs, align 4
  %901 = sext i32 %900 to i64
  %902 = shl nsw i64 %901, 3
  %903 = call noalias i8* @nasm_zalloc(i64 %902) #15
  %904 = bitcast i8* %903 to i8**
  %905 = icmp eq %struct.linelist* %899, null
  br i1 %905, label %947, label %906

906:                                              ; preds = %898
  %907 = bitcast i8* %903 to i64*
  br label %908

908:                                              ; preds = %942, %906
  %909 = phi i32 [ 0, %906 ], [ %943, %942 ]
  %910 = phi %struct.linelist* [ %899, %906 ], [ %945, %942 ]
  %911 = icmp eq i32 %909, 0
  br i1 %911, label %922, label %912

912:                                              ; preds = %908
  %913 = icmp sgt i32 %909, 0
  %914 = getelementptr inbounds %struct.linelist, %struct.linelist* %910, i64 0, i32 3
  br i1 %913, label %918, label %915

915:                                              ; preds = %912
  %916 = bitcast i8** %914 to i64*
  %917 = load i64, i64* %916, align 8
  br label %935

918:                                              ; preds = %912
  %919 = load i8*, i8** %914, align 8
  %920 = zext i32 %909 to i64
  %921 = ptrtoint i8* %919 to i64
  br label %926

922:                                              ; preds = %908
  %923 = getelementptr inbounds %struct.linelist, %struct.linelist* %910, i64 0, i32 3
  %924 = bitcast i8** %923 to i64*
  %925 = load i64, i64* %924, align 8
  store i64 %925, i64* %907, align 8
  br label %942

926:                                              ; preds = %932, %918
  %927 = phi i64 [ 0, %918 ], [ %933, %932 ]
  %928 = getelementptr inbounds i8*, i8** %904, i64 %927
  %929 = load i8*, i8** %928, align 8
  %930 = call i32 @strcmp(i8* %929, i8* %919) #16
  %931 = icmp eq i32 %930, 0
  br i1 %931, label %942, label %932

932:                                              ; preds = %926
  %933 = add nuw nsw i64 %927, 1
  %934 = icmp eq i64 %933, %920
  br i1 %934, label %935, label %926

935:                                              ; preds = %932, %915
  %936 = phi i64 [ %917, %915 ], [ %921, %932 ]
  %937 = phi i32 [ 0, %915 ], [ %909, %932 ]
  %938 = zext i32 %937 to i64
  %939 = getelementptr inbounds i8*, i8** %904, i64 %938
  %940 = bitcast i8** %939 to i64*
  store i64 %936, i64* %940, align 8
  %941 = add nsw i32 %909, 1
  br label %942

942:                                              ; preds = %926, %935, %922
  %943 = phi i32 [ 1, %922 ], [ %941, %935 ], [ %909, %926 ]
  %944 = getelementptr inbounds %struct.linelist, %struct.linelist* %910, i64 0, i32 0
  %945 = load %struct.linelist*, %struct.linelist** %944, align 8
  %946 = icmp eq %struct.linelist* %945, null
  br i1 %946, label %947, label %908

947:                                              ; preds = %942, %898
  %948 = phi i32 [ 0, %898 ], [ %943, %942 ]
  %949 = sext i32 %948 to i64
  %950 = shl nsw i64 %949, 2
  %951 = call noalias i8* @nasm_malloc(i64 %950) #15
  %952 = bitcast i8* %951 to i32*
  %953 = icmp sgt i32 %948, 0
  br i1 %953, label %954, label %979

954:                                              ; preds = %947
  %955 = zext i32 %948 to i64
  br label %956

956:                                              ; preds = %956, %954
  %957 = phi i64 [ 0, %954 ], [ %966, %956 ]
  %958 = phi i32 [ 1, %954 ], [ %965, %956 ]
  %959 = getelementptr inbounds i32, i32* %952, i64 %957
  store i32 %958, i32* %959, align 4
  %960 = getelementptr inbounds i8*, i8** %904, i64 %957
  %961 = load i8*, i8** %960, align 8
  %962 = call i64 @strlen(i8* %961) #16
  %963 = trunc i64 %962 to i32
  %964 = add i32 %958, 1
  %965 = add i32 %964, %963
  %966 = add nuw nsw i64 %957, 1
  %967 = icmp eq i64 %966, %955
  br i1 %967, label %968, label %956

968:                                              ; preds = %956, %974
  %969 = phi i64 [ %975, %974 ], [ 0, %956 ]
  %970 = getelementptr inbounds i8*, i8** %904, i64 %969
  %971 = load i8*, i8** %970, align 8
  %972 = call i32 @strcmp(i8* %971, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @elf_module, i64 0, i64 0)) #16
  %973 = icmp eq i32 %972, 0
  br i1 %973, label %977, label %974

974:                                              ; preds = %968
  %975 = add nuw nsw i64 %969, 1
  %976 = icmp eq i64 %975, %955
  br i1 %976, label %979, label %968

977:                                              ; preds = %968
  %978 = trunc i64 %969 to i32
  br label %979

979:                                              ; preds = %974, %977, %947
  %980 = phi i32 [ 1, %947 ], [ %965, %977 ], [ %965, %974 ]
  %981 = phi i32 [ 0, %947 ], [ %978, %977 ], [ 0, %974 ]
  %982 = load i32, i32* @numlinestabs, align 4
  %983 = shl i32 %982, 1
  %984 = add nsw i32 %983, 4
  %985 = sext i32 %984 to i64
  %986 = mul nsw i64 %985, 12
  %987 = call noalias i8* @nasm_malloc(i64 %986) #15
  %988 = sext i32 %980 to i64
  %989 = call noalias i8* @nasm_malloc(i64 %988) #15
  %990 = load i32, i32* @numlinestabs, align 4
  %991 = load %struct.ofmt*, %struct.ofmt** @ofmt, align 8
  %992 = icmp eq %struct.ofmt* %991, @of_elf64
  %993 = select i1 %992, i32 16, i32 8
  %994 = mul i32 %990, 5
  %995 = mul i32 %994, %993
  %996 = sext i32 %995 to i64
  %997 = call noalias i8* @nasm_malloc(i64 %996) #15
  br i1 %953, label %998, label %1011

998:                                              ; preds = %979
  %999 = zext i32 %948 to i64
  br label %1000

1000:                                             ; preds = %1000, %998
  %1001 = phi i64 [ 0, %998 ], [ %1009, %1000 ]
  %1002 = getelementptr inbounds i32, i32* %952, i64 %1001
  %1003 = load i32, i32* %1002, align 4
  %1004 = sext i32 %1003 to i64
  %1005 = getelementptr inbounds i8, i8* %989, i64 %1004
  %1006 = getelementptr inbounds i8*, i8** %904, i64 %1001
  %1007 = load i8*, i8** %1006, align 8
  %1008 = call i8* @strcpy(i8* %1005, i8* %1007) #13
  %1009 = add nuw nsw i64 %1001, 1
  %1010 = icmp eq i64 %1009, %999
  br i1 %1010, label %1011, label %1000

1011:                                             ; preds = %1000, %979
  store i8 0, i8* %989, align 1
  store i32 %980, i32* @stabstrlen, align 4
  %1012 = load %struct.linelist*, %struct.linelist** @stabslines, align 8
  %1013 = icmp eq %struct.linelist* %1012, null
  br i1 %1013, label %1042, label %1014

1014:                                             ; preds = %1011
  %1015 = bitcast i8* %987 to i32*
  %1016 = load i32, i32* %952, align 4
  %1017 = getelementptr inbounds i8, i8* %987, i64 4
  store i32 %1016, i32* %1015, align 4
  %1018 = getelementptr inbounds i8, i8* %987, i64 5
  store i8 0, i8* %1017, align 1
  %1019 = getelementptr inbounds i8, i8* %987, i64 6
  store i8 0, i8* %1018, align 1
  %1020 = bitcast i8* %1019 to i16*
  %1021 = getelementptr inbounds i8, i8* %987, i64 8
  store i16 0, i16* %1020, align 2
  %1022 = bitcast i8* %1021 to i32*
  %1023 = getelementptr inbounds i8, i8* %987, i64 12
  %1024 = bitcast i8* %1023 to i32*
  store i32 %980, i32* %1022, align 4
  %1025 = zext i32 %981 to i64
  %1026 = getelementptr inbounds i32, i32* %952, i64 %1025
  %1027 = load i32, i32* %1026, align 4
  %1028 = getelementptr inbounds i8, i8* %987, i64 16
  store i32 %1027, i32* %1024, align 4
  %1029 = getelementptr inbounds i8, i8* %987, i64 17
  store i8 100, i8* %1028, align 1
  %1030 = getelementptr inbounds i8, i8* %987, i64 18
  store i8 0, i8* %1029, align 1
  %1031 = bitcast i8* %1030 to i16*
  %1032 = getelementptr inbounds i8, i8* %987, i64 20
  store i16 0, i16* %1031, align 2
  %1033 = bitcast i8* %1032 to i32*
  %1034 = getelementptr inbounds i8, i8* %987, i64 24
  store i32 0, i32* %1033, align 4
  %1035 = load %struct.ofmt*, %struct.ofmt** @ofmt, align 8
  %1036 = icmp eq %struct.ofmt* %1035, @of_elf32
  br i1 %1036, label %1051, label %1037

1037:                                             ; preds = %1014
  %1038 = icmp eq %struct.ofmt* %1035, @of_elfx32
  br i1 %1038, label %1154, label %1039

1039:                                             ; preds = %1037
  %1040 = icmp eq %struct.ofmt* %1035, @of_elf64
  br i1 %1040, label %1265, label %1041, !prof !6

1041:                                             ; preds = %1039
  call void @nasm_assert_failed(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.33, i64 0, i64 0), i32 2835, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.112, i64 0, i64 0)) #14
  unreachable

1042:                                             ; preds = %1011
  %1043 = load %struct.ofmt*, %struct.ofmt** @ofmt, align 8
  %1044 = icmp eq %struct.ofmt* %1043, @of_elf32
  %1045 = icmp eq %struct.ofmt* %1043, @of_elfx32
  %1046 = or i1 %1044, %1045
  %1047 = icmp eq %struct.ofmt* %1043, @of_elf64
  %1048 = or i1 %1047, %1046
  br i1 %1048, label %1049, label %1280, !prof !7

1049:                                             ; preds = %1042
  %1050 = ptrtoint i8* %987 to i64
  br label %1376

1051:                                             ; preds = %1014
  %1052 = bitcast i8* %997 to i32*
  %1053 = getelementptr inbounds i8, i8* %997, i64 4
  %1054 = bitcast i8* %1053 to i32*
  store i32 20, i32* %1052, align 4
  %1055 = getelementptr inbounds %struct.linelist, %struct.linelist* %1012, i64 0, i32 2, i32 1
  %1056 = load i32, i32* %1055, align 4
  %1057 = shl i32 %1056, 8
  %1058 = add i32 %1057, 512
  %1059 = or i32 %1058, 1
  %1060 = getelementptr inbounds i8, i8* %997, i64 8
  store i32 %1059, i32* %1054, align 4
  %1061 = ptrtoint i8* %987 to i64
  %1062 = zext i32 %948 to i64
  br label %1063

1063:                                             ; preds = %1119, %1051
  %1064 = phi i32 [ 1, %1051 ], [ %1137, %1119 ]
  %1065 = phi i32 [ %981, %1051 ], [ %1122, %1119 ]
  %1066 = phi i8* [ %1034, %1051 ], [ %1136, %1119 ]
  %1067 = phi i8* [ %1060, %1051 ], [ %1150, %1119 ]
  %1068 = phi %struct.linelist* [ %1012, %1051 ], [ %1152, %1119 ]
  %1069 = sext i32 %1065 to i64
  %1070 = getelementptr inbounds i8*, i8** %904, i64 %1069
  %1071 = load i8*, i8** %1070, align 8
  %1072 = getelementptr inbounds %struct.linelist, %struct.linelist* %1068, i64 0, i32 3
  %1073 = load i8*, i8** %1072, align 8
  %1074 = call i32 @strcmp(i8* %1071, i8* %1073) #16
  %1075 = icmp eq i32 %1074, 0
  br i1 %1075, label %1119, label %1076

1076:                                             ; preds = %1063
  br i1 %953, label %1077, label %1090

1077:                                             ; preds = %1076, %1084
  %1078 = phi i64 [ %1085, %1084 ], [ 0, %1076 ]
  %1079 = phi i32 [ %1086, %1084 ], [ 0, %1076 ]
  %1080 = getelementptr inbounds i8*, i8** %904, i64 %1078
  %1081 = load i8*, i8** %1080, align 8
  %1082 = call i32 @strcmp(i8* %1081, i8* %1073) #16
  %1083 = icmp eq i32 %1082, 0
  br i1 %1083, label %1088, label %1084

1084:                                             ; preds = %1077
  %1085 = add nuw nsw i64 %1078, 1
  %1086 = add nuw nsw i32 %1079, 1
  %1087 = icmp eq i64 %1085, %1062
  br i1 %1087, label %1090, label %1077

1088:                                             ; preds = %1077
  %1089 = trunc i64 %1078 to i32
  br label %1090

1090:                                             ; preds = %1084, %1088, %1076
  %1091 = phi i32 [ 0, %1076 ], [ %1089, %1088 ], [ %1086, %1084 ]
  %1092 = bitcast i8* %1066 to i32*
  %1093 = zext i32 %1091 to i64
  %1094 = getelementptr inbounds i32, i32* %952, i64 %1093
  %1095 = load i32, i32* %1094, align 4
  %1096 = getelementptr inbounds i8, i8* %1066, i64 4
  store i32 %1095, i32* %1092, align 4
  %1097 = getelementptr inbounds i8, i8* %1066, i64 5
  store i8 -124, i8* %1096, align 1
  %1098 = getelementptr inbounds i8, i8* %1066, i64 6
  store i8 0, i8* %1097, align 1
  %1099 = bitcast i8* %1098 to i16*
  %1100 = getelementptr inbounds i8, i8* %1066, i64 8
  store i16 0, i16* %1099, align 2
  %1101 = bitcast i8* %1100 to i32*
  %1102 = getelementptr inbounds %struct.linelist, %struct.linelist* %1068, i64 0, i32 2, i32 0
  %1103 = load i32, i32* %1102, align 8
  %1104 = getelementptr inbounds i8, i8* %1066, i64 12
  store i32 %1103, i32* %1101, align 4
  %1105 = add nsw i32 %1064, 1
  %1106 = bitcast i8* %1067 to i32*
  %1107 = ptrtoint i8* %1104 to i64
  %1108 = sub i64 %1107, %1061
  %1109 = trunc i64 %1108 to i32
  %1110 = add i32 %1109, -4
  %1111 = getelementptr inbounds i8, i8* %1067, i64 4
  %1112 = bitcast i8* %1111 to i32*
  store i32 %1110, i32* %1106, align 4
  %1113 = getelementptr inbounds %struct.linelist, %struct.linelist* %1068, i64 0, i32 2, i32 1
  %1114 = load i32, i32* %1113, align 4
  %1115 = shl i32 %1114, 8
  %1116 = add i32 %1115, 512
  %1117 = or i32 %1116, 1
  %1118 = getelementptr inbounds i8, i8* %1067, i64 8
  store i32 %1117, i32* %1112, align 4
  br label %1119

1119:                                             ; preds = %1090, %1063
  %1120 = phi i8* [ %1118, %1090 ], [ %1067, %1063 ]
  %1121 = phi i8* [ %1104, %1090 ], [ %1066, %1063 ]
  %1122 = phi i32 [ %1091, %1090 ], [ %1065, %1063 ]
  %1123 = phi i32 [ %1105, %1090 ], [ %1064, %1063 ]
  %1124 = bitcast i8* %1121 to i32*
  %1125 = getelementptr inbounds i8, i8* %1121, i64 4
  store i32 0, i32* %1124, align 4
  %1126 = getelementptr inbounds i8, i8* %1121, i64 5
  store i8 68, i8* %1125, align 1
  %1127 = getelementptr inbounds i8, i8* %1121, i64 6
  store i8 0, i8* %1126, align 1
  %1128 = bitcast i8* %1127 to i16*
  %1129 = getelementptr inbounds %struct.linelist, %struct.linelist* %1068, i64 0, i32 4
  %1130 = load i32, i32* %1129, align 8
  %1131 = trunc i32 %1130 to i16
  %1132 = getelementptr inbounds i8, i8* %1121, i64 8
  store i16 %1131, i16* %1128, align 2
  %1133 = bitcast i8* %1132 to i32*
  %1134 = getelementptr inbounds %struct.linelist, %struct.linelist* %1068, i64 0, i32 2, i32 0
  %1135 = load i32, i32* %1134, align 8
  %1136 = getelementptr inbounds i8, i8* %1121, i64 12
  store i32 %1135, i32* %1133, align 4
  %1137 = add nsw i32 %1123, 1
  %1138 = bitcast i8* %1120 to i32*
  %1139 = ptrtoint i8* %1136 to i64
  %1140 = sub i64 %1139, %1061
  %1141 = trunc i64 %1140 to i32
  %1142 = add i32 %1141, -4
  %1143 = getelementptr inbounds i8, i8* %1120, i64 4
  %1144 = bitcast i8* %1143 to i32*
  store i32 %1142, i32* %1138, align 4
  %1145 = getelementptr inbounds %struct.linelist, %struct.linelist* %1068, i64 0, i32 2, i32 1
  %1146 = load i32, i32* %1145, align 4
  %1147 = shl i32 %1146, 8
  %1148 = add i32 %1147, 512
  %1149 = or i32 %1148, 1
  %1150 = getelementptr inbounds i8, i8* %1120, i64 8
  store i32 %1149, i32* %1144, align 4
  %1151 = getelementptr inbounds %struct.linelist, %struct.linelist* %1068, i64 0, i32 0
  %1152 = load %struct.linelist*, %struct.linelist** %1151, align 8
  %1153 = icmp eq %struct.linelist* %1152, null
  br i1 %1153, label %1376, label %1063

1154:                                             ; preds = %1037
  %1155 = bitcast i8* %997 to i32*
  %1156 = getelementptr inbounds i8, i8* %997, i64 4
  %1157 = bitcast i8* %1156 to i32*
  store i32 20, i32* %1155, align 4
  %1158 = getelementptr inbounds %struct.linelist, %struct.linelist* %1012, i64 0, i32 2, i32 1
  %1159 = load i32, i32* %1158, align 4
  %1160 = shl i32 %1159, 8
  %1161 = add i32 %1160, 512
  %1162 = or i32 %1161, 10
  %1163 = getelementptr inbounds i8, i8* %997, i64 8
  %1164 = bitcast i8* %1163 to i32*
  store i32 %1162, i32* %1157, align 4
  %1165 = getelementptr inbounds i8, i8* %997, i64 12
  store i32 0, i32* %1164, align 4
  %1166 = ptrtoint i8* %987 to i64
  %1167 = zext i32 %948 to i64
  br label %1168

1168:                                             ; preds = %1227, %1154
  %1169 = phi i32 [ 1, %1154 ], [ %1245, %1227 ]
  %1170 = phi i32 [ %981, %1154 ], [ %1230, %1227 ]
  %1171 = phi i8* [ %1034, %1154 ], [ %1244, %1227 ]
  %1172 = phi i8* [ %1165, %1154 ], [ %1261, %1227 ]
  %1173 = phi %struct.linelist* [ %1012, %1154 ], [ %1263, %1227 ]
  %1174 = sext i32 %1170 to i64
  %1175 = getelementptr inbounds i8*, i8** %904, i64 %1174
  %1176 = load i8*, i8** %1175, align 8
  %1177 = getelementptr inbounds %struct.linelist, %struct.linelist* %1173, i64 0, i32 3
  %1178 = load i8*, i8** %1177, align 8
  %1179 = call i32 @strcmp(i8* %1176, i8* %1178) #16
  %1180 = icmp eq i32 %1179, 0
  br i1 %1180, label %1227, label %1181

1181:                                             ; preds = %1168
  br i1 %953, label %1182, label %1195

1182:                                             ; preds = %1181, %1189
  %1183 = phi i64 [ %1190, %1189 ], [ 0, %1181 ]
  %1184 = phi i32 [ %1191, %1189 ], [ 0, %1181 ]
  %1185 = getelementptr inbounds i8*, i8** %904, i64 %1183
  %1186 = load i8*, i8** %1185, align 8
  %1187 = call i32 @strcmp(i8* %1186, i8* %1178) #16
  %1188 = icmp eq i32 %1187, 0
  br i1 %1188, label %1193, label %1189

1189:                                             ; preds = %1182
  %1190 = add nuw nsw i64 %1183, 1
  %1191 = add nuw nsw i32 %1184, 1
  %1192 = icmp eq i64 %1190, %1167
  br i1 %1192, label %1195, label %1182

1193:                                             ; preds = %1182
  %1194 = trunc i64 %1183 to i32
  br label %1195

1195:                                             ; preds = %1189, %1193, %1181
  %1196 = phi i32 [ 0, %1181 ], [ %1194, %1193 ], [ %1191, %1189 ]
  %1197 = bitcast i8* %1171 to i32*
  %1198 = zext i32 %1196 to i64
  %1199 = getelementptr inbounds i32, i32* %952, i64 %1198
  %1200 = load i32, i32* %1199, align 4
  %1201 = getelementptr inbounds i8, i8* %1171, i64 4
  store i32 %1200, i32* %1197, align 4
  %1202 = getelementptr inbounds i8, i8* %1171, i64 5
  store i8 -124, i8* %1201, align 1
  %1203 = getelementptr inbounds i8, i8* %1171, i64 6
  store i8 0, i8* %1202, align 1
  %1204 = bitcast i8* %1203 to i16*
  %1205 = getelementptr inbounds i8, i8* %1171, i64 8
  store i16 0, i16* %1204, align 2
  %1206 = bitcast i8* %1205 to i32*
  %1207 = getelementptr inbounds %struct.linelist, %struct.linelist* %1173, i64 0, i32 2, i32 0
  %1208 = load i32, i32* %1207, align 8
  %1209 = getelementptr inbounds i8, i8* %1171, i64 12
  store i32 %1208, i32* %1206, align 4
  %1210 = add nsw i32 %1169, 1
  %1211 = bitcast i8* %1172 to i32*
  %1212 = ptrtoint i8* %1209 to i64
  %1213 = sub i64 %1212, %1166
  %1214 = trunc i64 %1213 to i32
  %1215 = add i32 %1214, -4
  %1216 = getelementptr inbounds i8, i8* %1172, i64 4
  %1217 = bitcast i8* %1216 to i32*
  store i32 %1215, i32* %1211, align 4
  %1218 = getelementptr inbounds %struct.linelist, %struct.linelist* %1173, i64 0, i32 2, i32 1
  %1219 = load i32, i32* %1218, align 4
  %1220 = shl i32 %1219, 8
  %1221 = add i32 %1220, 512
  %1222 = or i32 %1221, 10
  %1223 = getelementptr inbounds i8, i8* %1172, i64 8
  %1224 = bitcast i8* %1223 to i32*
  store i32 %1222, i32* %1217, align 4
  %1225 = load i32, i32* %1207, align 8
  %1226 = getelementptr inbounds i8, i8* %1172, i64 12
  store i32 %1225, i32* %1224, align 4
  br label %1227

1227:                                             ; preds = %1195, %1168
  %1228 = phi i8* [ %1226, %1195 ], [ %1172, %1168 ]
  %1229 = phi i8* [ %1209, %1195 ], [ %1171, %1168 ]
  %1230 = phi i32 [ %1196, %1195 ], [ %1170, %1168 ]
  %1231 = phi i32 [ %1210, %1195 ], [ %1169, %1168 ]
  %1232 = bitcast i8* %1229 to i32*
  %1233 = getelementptr inbounds i8, i8* %1229, i64 4
  store i32 0, i32* %1232, align 4
  %1234 = getelementptr inbounds i8, i8* %1229, i64 5
  store i8 68, i8* %1233, align 1
  %1235 = getelementptr inbounds i8, i8* %1229, i64 6
  store i8 0, i8* %1234, align 1
  %1236 = bitcast i8* %1235 to i16*
  %1237 = getelementptr inbounds %struct.linelist, %struct.linelist* %1173, i64 0, i32 4
  %1238 = load i32, i32* %1237, align 8
  %1239 = trunc i32 %1238 to i16
  %1240 = getelementptr inbounds i8, i8* %1229, i64 8
  store i16 %1239, i16* %1236, align 2
  %1241 = bitcast i8* %1240 to i32*
  %1242 = getelementptr inbounds %struct.linelist, %struct.linelist* %1173, i64 0, i32 2, i32 0
  %1243 = load i32, i32* %1242, align 8
  %1244 = getelementptr inbounds i8, i8* %1229, i64 12
  store i32 %1243, i32* %1241, align 4
  %1245 = add nsw i32 %1231, 1
  %1246 = bitcast i8* %1228 to i32*
  %1247 = ptrtoint i8* %1244 to i64
  %1248 = sub i64 %1247, %1166
  %1249 = trunc i64 %1248 to i32
  %1250 = add i32 %1249, -4
  %1251 = getelementptr inbounds i8, i8* %1228, i64 4
  %1252 = bitcast i8* %1251 to i32*
  store i32 %1250, i32* %1246, align 4
  %1253 = getelementptr inbounds %struct.linelist, %struct.linelist* %1173, i64 0, i32 2, i32 1
  %1254 = load i32, i32* %1253, align 4
  %1255 = shl i32 %1254, 8
  %1256 = add i32 %1255, 512
  %1257 = or i32 %1256, 10
  %1258 = getelementptr inbounds i8, i8* %1228, i64 8
  %1259 = bitcast i8* %1258 to i32*
  store i32 %1257, i32* %1252, align 4
  %1260 = load i32, i32* %1242, align 8
  %1261 = getelementptr inbounds i8, i8* %1228, i64 12
  store i32 %1260, i32* %1259, align 4
  %1262 = getelementptr inbounds %struct.linelist, %struct.linelist* %1173, i64 0, i32 0
  %1263 = load %struct.linelist*, %struct.linelist** %1262, align 8
  %1264 = icmp eq %struct.linelist* %1263, null
  br i1 %1264, label %1376, label %1168

1265:                                             ; preds = %1039
  %1266 = bitcast i8* %997 to i64*
  %1267 = getelementptr inbounds i8, i8* %997, i64 8
  store i64 20, i64* %1266, align 8
  %1268 = bitcast i8* %1267 to i32*
  %1269 = getelementptr inbounds i8, i8* %997, i64 12
  %1270 = bitcast i8* %1269 to i32*
  store i32 10, i32* %1268, align 4
  %1271 = getelementptr inbounds %struct.linelist, %struct.linelist* %1012, i64 0, i32 2, i32 1
  %1272 = load i32, i32* %1271, align 4
  %1273 = add nsw i32 %1272, 2
  %1274 = getelementptr inbounds i8, i8* %997, i64 16
  store i32 %1273, i32* %1270, align 4
  %1275 = bitcast i8* %1274 to i64*
  %1276 = getelementptr inbounds i8, i8* %997, i64 24
  store i64 0, i64* %1275, align 8
  %1277 = ptrtoint i8* %987 to i64
  %1278 = sub i64 -4, %1277
  %1279 = zext i32 %948 to i64
  br label %1281

1280:                                             ; preds = %1042
  call void @nasm_assert_failed(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.33, i64 0, i64 0), i32 2899, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.112, i64 0, i64 0)) #14
  unreachable

1281:                                             ; preds = %1339, %1265
  %1282 = phi i32 [ 1, %1265 ], [ %1357, %1339 ]
  %1283 = phi i32 [ %981, %1265 ], [ %1342, %1339 ]
  %1284 = phi i8* [ %1034, %1265 ], [ %1356, %1339 ]
  %1285 = phi i8* [ %1276, %1265 ], [ %1372, %1339 ]
  %1286 = phi %struct.linelist* [ %1012, %1265 ], [ %1374, %1339 ]
  %1287 = sext i32 %1283 to i64
  %1288 = getelementptr inbounds i8*, i8** %904, i64 %1287
  %1289 = load i8*, i8** %1288, align 8
  %1290 = getelementptr inbounds %struct.linelist, %struct.linelist* %1286, i64 0, i32 3
  %1291 = load i8*, i8** %1290, align 8
  %1292 = call i32 @strcmp(i8* %1289, i8* %1291) #16
  %1293 = icmp eq i32 %1292, 0
  br i1 %1293, label %1339, label %1294

1294:                                             ; preds = %1281
  br i1 %953, label %1295, label %1308

1295:                                             ; preds = %1294, %1302
  %1296 = phi i64 [ %1303, %1302 ], [ 0, %1294 ]
  %1297 = phi i32 [ %1304, %1302 ], [ 0, %1294 ]
  %1298 = getelementptr inbounds i8*, i8** %904, i64 %1296
  %1299 = load i8*, i8** %1298, align 8
  %1300 = call i32 @strcmp(i8* %1299, i8* %1291) #16
  %1301 = icmp eq i32 %1300, 0
  br i1 %1301, label %1306, label %1302

1302:                                             ; preds = %1295
  %1303 = add nuw nsw i64 %1296, 1
  %1304 = add nuw nsw i32 %1297, 1
  %1305 = icmp eq i64 %1303, %1279
  br i1 %1305, label %1308, label %1295

1306:                                             ; preds = %1295
  %1307 = trunc i64 %1296 to i32
  br label %1308

1308:                                             ; preds = %1302, %1306, %1294
  %1309 = phi i32 [ 0, %1294 ], [ %1307, %1306 ], [ %1304, %1302 ]
  %1310 = bitcast i8* %1284 to i32*
  %1311 = zext i32 %1309 to i64
  %1312 = getelementptr inbounds i32, i32* %952, i64 %1311
  %1313 = load i32, i32* %1312, align 4
  %1314 = getelementptr inbounds i8, i8* %1284, i64 4
  store i32 %1313, i32* %1310, align 4
  %1315 = getelementptr inbounds i8, i8* %1284, i64 5
  store i8 -124, i8* %1314, align 1
  %1316 = getelementptr inbounds i8, i8* %1284, i64 6
  store i8 0, i8* %1315, align 1
  %1317 = bitcast i8* %1316 to i16*
  %1318 = getelementptr inbounds i8, i8* %1284, i64 8
  store i16 0, i16* %1317, align 2
  %1319 = bitcast i8* %1318 to i32*
  %1320 = getelementptr inbounds %struct.linelist, %struct.linelist* %1286, i64 0, i32 2, i32 0
  %1321 = load i32, i32* %1320, align 8
  %1322 = getelementptr inbounds i8, i8* %1284, i64 12
  store i32 %1321, i32* %1319, align 4
  %1323 = add nsw i32 %1282, 1
  %1324 = bitcast i8* %1285 to i64*
  %1325 = ptrtoint i8* %1322 to i64
  %1326 = add i64 %1278, %1325
  %1327 = getelementptr inbounds i8, i8* %1285, i64 8
  store i64 %1326, i64* %1324, align 8
  %1328 = bitcast i8* %1327 to i32*
  %1329 = getelementptr inbounds i8, i8* %1285, i64 12
  %1330 = bitcast i8* %1329 to i32*
  store i32 10, i32* %1328, align 4
  %1331 = getelementptr inbounds %struct.linelist, %struct.linelist* %1286, i64 0, i32 2, i32 1
  %1332 = load i32, i32* %1331, align 4
  %1333 = add nsw i32 %1332, 2
  %1334 = getelementptr inbounds i8, i8* %1285, i64 16
  store i32 %1333, i32* %1330, align 4
  %1335 = bitcast i8* %1334 to i64*
  %1336 = load i32, i32* %1320, align 8
  %1337 = sext i32 %1336 to i64
  %1338 = getelementptr inbounds i8, i8* %1285, i64 24
  store i64 %1337, i64* %1335, align 8
  br label %1339

1339:                                             ; preds = %1308, %1281
  %1340 = phi i8* [ %1338, %1308 ], [ %1285, %1281 ]
  %1341 = phi i8* [ %1322, %1308 ], [ %1284, %1281 ]
  %1342 = phi i32 [ %1309, %1308 ], [ %1283, %1281 ]
  %1343 = phi i32 [ %1323, %1308 ], [ %1282, %1281 ]
  %1344 = bitcast i8* %1341 to i32*
  %1345 = getelementptr inbounds i8, i8* %1341, i64 4
  store i32 0, i32* %1344, align 4
  %1346 = getelementptr inbounds i8, i8* %1341, i64 5
  store i8 68, i8* %1345, align 1
  %1347 = getelementptr inbounds i8, i8* %1341, i64 6
  store i8 0, i8* %1346, align 1
  %1348 = bitcast i8* %1347 to i16*
  %1349 = getelementptr inbounds %struct.linelist, %struct.linelist* %1286, i64 0, i32 4
  %1350 = load i32, i32* %1349, align 8
  %1351 = trunc i32 %1350 to i16
  %1352 = getelementptr inbounds i8, i8* %1341, i64 8
  store i16 %1351, i16* %1348, align 2
  %1353 = bitcast i8* %1352 to i32*
  %1354 = getelementptr inbounds %struct.linelist, %struct.linelist* %1286, i64 0, i32 2, i32 0
  %1355 = load i32, i32* %1354, align 8
  %1356 = getelementptr inbounds i8, i8* %1341, i64 12
  store i32 %1355, i32* %1353, align 4
  %1357 = add nsw i32 %1343, 1
  %1358 = bitcast i8* %1340 to i64*
  %1359 = ptrtoint i8* %1356 to i64
  %1360 = add i64 %1278, %1359
  %1361 = getelementptr inbounds i8, i8* %1340, i64 8
  store i64 %1360, i64* %1358, align 8
  %1362 = bitcast i8* %1361 to i32*
  %1363 = getelementptr inbounds i8, i8* %1340, i64 12
  %1364 = bitcast i8* %1363 to i32*
  store i32 10, i32* %1362, align 4
  %1365 = getelementptr inbounds %struct.linelist, %struct.linelist* %1286, i64 0, i32 2, i32 1
  %1366 = load i32, i32* %1365, align 4
  %1367 = add nsw i32 %1366, 2
  %1368 = getelementptr inbounds i8, i8* %1340, i64 16
  store i32 %1367, i32* %1364, align 4
  %1369 = bitcast i8* %1368 to i64*
  %1370 = load i32, i32* %1354, align 8
  %1371 = sext i32 %1370 to i64
  %1372 = getelementptr inbounds i8, i8* %1340, i64 24
  store i64 %1371, i64* %1369, align 8
  %1373 = getelementptr inbounds %struct.linelist, %struct.linelist* %1286, i64 0, i32 0
  %1374 = load %struct.linelist*, %struct.linelist** %1373, align 8
  %1375 = icmp eq %struct.linelist* %1374, null
  br i1 %1375, label %1376, label %1281

1376:                                             ; preds = %1339, %1227, %1119, %1049
  %1377 = phi i64 [ %1050, %1049 ], [ %1061, %1119 ], [ %1166, %1227 ], [ %1277, %1339 ]
  %1378 = phi i8* [ %997, %1049 ], [ %1150, %1119 ], [ %1261, %1227 ], [ %1372, %1339 ]
  %1379 = phi i8* [ %987, %1049 ], [ %1136, %1119 ], [ %1244, %1227 ], [ %1356, %1339 ]
  %1380 = phi i32 [ 0, %1049 ], [ %1137, %1119 ], [ %1245, %1227 ], [ %1357, %1339 ]
  %1381 = bitcast i8* %1379 to i32*
  %1382 = getelementptr inbounds i8, i8* %1379, i64 4
  store i32 0, i32* %1381, align 4
  %1383 = getelementptr inbounds i8, i8* %1379, i64 5
  store i8 100, i8* %1382, align 1
  %1384 = getelementptr inbounds i8, i8* %1379, i64 6
  store i8 0, i8* %1383, align 1
  %1385 = bitcast i8* %1384 to i16*
  %1386 = getelementptr inbounds i8, i8* %1379, i64 8
  store i16 0, i16* %1385, align 2
  %1387 = bitcast i8* %1386 to i32*
  store i32 0, i32* %1387, align 4
  %1388 = trunc i32 %1380 to i16
  %1389 = add i16 %1388, 1
  %1390 = getelementptr inbounds i8, i8* %987, i64 6
  %1391 = bitcast i8* %1390 to i16*
  store i16 %1389, i16* %1391, align 2
  call void @nasm_free(i8* %903) #13
  call void @nasm_free(i8* %951) #13
  %1392 = ptrtoint i8* %1378 to i64
  %1393 = ptrtoint i8* %997 to i64
  %1394 = sub i64 %1392, %1393
  %1395 = trunc i64 %1394 to i32
  store i32 %1395, i32* @stabrellen, align 4
  store i8* %997, i8** @stabrelbuf, align 8
  store i8* %987, i8** @stabbuf, align 8
  store i8* %989, i8** @stabstrbuf, align 8
  %1396 = icmp ne i8* %987, null
  %1397 = icmp ne i8* %989, null
  %1398 = and i1 %1396, %1397
  %1399 = icmp ne i8* %997, null
  %1400 = and i1 %1398, %1399
  br i1 %1400, label %1401, label %2242

1401:                                             ; preds = %1376
  %1402 = getelementptr inbounds i8, i8* %1379, i64 12
  %1403 = ptrtoint i8* %1402 to i64
  %1404 = sub i64 %1403, %1377
  %1405 = load i64, i64* bitcast (i8** @shstrtab to i64*), align 8
  %1406 = ptrtoint i8* %891 to i64
  %1407 = sub i64 %1406, %1405
  %1408 = trunc i64 %1407 to i32
  %1409 = shl i64 %1404, 32
  %1410 = ashr exact i64 %1409, 32
  %1411 = load i32, i32* @sec_debug, align 4
  %1412 = add nsw i32 %1411, 1
  call fastcc void @elf_section_header(i32 %1408, i32 1, i64 0, i8* nonnull %987, i1 zeroext false, i64 %1410, i32 %1412, i32 0, i64 4, i64 12)
  %1413 = call i64 @strlen(i8* %891) #16
  %1414 = add i64 %1413, 1
  %1415 = getelementptr inbounds i8, i8* %891, i64 %1414
  %1416 = load i64, i64* bitcast (i8** @shstrtab to i64*), align 8
  %1417 = ptrtoint i8* %1415 to i64
  %1418 = sub i64 %1417, %1416
  %1419 = trunc i64 %1418 to i32
  %1420 = load i8*, i8** @stabstrbuf, align 8
  %1421 = load i32, i32* @stabstrlen, align 4
  %1422 = sext i32 %1421 to i64
  call fastcc void @elf_section_header(i32 %1419, i32 3, i64 0, i8* %1420, i1 zeroext false, i64 %1422, i32 0, i32 0, i64 4, i64 0)
  %1423 = call i64 @strlen(i8* %1415) #16
  %1424 = add i64 %1423, 1
  %1425 = getelementptr inbounds i8, i8* %1415, i64 %1424
  %1426 = load i64, i64* bitcast (i8** @shstrtab to i64*), align 8
  %1427 = ptrtoint i8* %1425 to i64
  %1428 = sub i64 %1427, %1426
  %1429 = trunc i64 %1428 to i32
  %1430 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %1431 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %1430, i64 0, i32 7
  %1432 = load i32, i32* %1431, align 8
  %1433 = load i8*, i8** @stabrelbuf, align 8
  %1434 = load i32, i32* @stabrellen, align 4
  %1435 = sext i32 %1434 to i64
  %1436 = load i32, i32* @sec_debug, align 4
  %1437 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %1430, i64 0, i32 0
  %1438 = load i64, i64* %1437, align 8
  %1439 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %1430, i64 0, i32 4
  %1440 = load i64, i64* %1439, align 8
  call fastcc void @elf_section_header(i32 %1429, i32 %1432, i64 0, i8* %1433, i1 zeroext false, i64 %1435, i32 %406, i32 %1436, i64 %1438, i64 %1440)
  %1441 = call i64 @strlen(i8* %1425) #16
  %1442 = add i64 %1441, 1
  %1443 = getelementptr inbounds i8, i8* %1425, i64 %1442
  br label %2242

1444:                                             ; preds = %890
  %1445 = icmp eq %struct.dfmt* %892, @elf32_df_dwarf
  %1446 = icmp eq %struct.dfmt* %892, @elfx32_df_dwarf
  %1447 = or i1 %1445, %1446
  %1448 = icmp eq %struct.dfmt* %892, @elf64_df_dwarf
  %1449 = or i1 %1448, %1447
  br i1 %1449, label %1450, label %2242

1450:                                             ; preds = %1444
  %1451 = load %struct.sectlist*, %struct.sectlist** @dwarf_fsect, align 8
  %1452 = icmp eq %struct.sectlist* %1451, null
  br i1 %1452, label %2019, label %1453

1453:                                             ; preds = %1450
  %1454 = load %struct.ofmt*, %struct.ofmt** @ofmt, align 8
  %1455 = icmp eq %struct.ofmt* %1454, @of_elf32
  br i1 %1455, label %1456, label %1532

1456:                                             ; preds = %1453
  %1457 = call %struct.SAA* @saa_init(i64 1) #13
  %1458 = call %struct.SAA* @saa_init(i64 1) #13
  %1459 = load %struct.dwarf_format*, %struct.dwarf_format** @dwfmt, align 8
  %1460 = getelementptr inbounds %struct.dwarf_format, %struct.dwarf_format* %1459, i64 0, i32 1, i64 0
  %1461 = load i16, i16* %1460, align 2
  call void @saa_write16(%struct.SAA* %1457, i16 zeroext %1461) #13
  %1462 = getelementptr inbounds %struct.SAA, %struct.SAA* %1457, i64 0, i32 5
  %1463 = load i64, i64* %1462, align 8
  %1464 = trunc i64 %1463 to i32
  %1465 = add i32 %1464, 4
  call void @saa_write32(%struct.SAA* %1458, i32 %1465) #13
  %1466 = load i64, i64* @dwarf_infosym, align 8
  %1467 = trunc i64 %1466 to i32
  %1468 = shl i32 %1467, 8
  %1469 = or i32 %1468, 1
  call void @saa_write32(%struct.SAA* %1458, i32 %1469) #13
  call void @saa_write32(%struct.SAA* %1458, i32 0) #13
  call void @saa_write32(%struct.SAA* %1457, i32 0) #13
  call void @saa_write8(%struct.SAA* %1457, i8 zeroext 4) #13
  call void @saa_write8(%struct.SAA* %1457, i8 zeroext 0) #13
  call void @saa_write32(%struct.SAA* %1457, i32 0) #13
  %1470 = load i32, i32* @dwarf_nsections, align 4
  %1471 = icmp sgt i32 %1470, 0
  br i1 %1471, label %1472, label %1522

1472:                                             ; preds = %1456, %1472
  %1473 = phi %struct.sectlist** [ %1518, %1472 ], [ @dwarf_fsect, %1456 ]
  %1474 = phi i32 [ %1519, %1472 ], [ 0, %1456 ]
  %1475 = phi i64 [ %1517, %1472 ], [ 0, %1456 ]
  %1476 = phi i64 [ %1495, %1472 ], [ 0, %1456 ]
  %1477 = load %struct.sectlist*, %struct.sectlist** %1473, align 8
  %1478 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1477, i64 0, i32 0
  %1479 = load %struct.SAA*, %struct.SAA** %1478, align 8
  call void @saa_write8(%struct.SAA* %1479, i8 zeroext 2) #13
  %1480 = load %struct.elf_section**, %struct.elf_section*** @sects, align 8
  %1481 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1477, i64 0, i32 1
  %1482 = load i32, i32* %1481, align 8
  %1483 = sext i32 %1482 to i64
  %1484 = getelementptr inbounds %struct.elf_section*, %struct.elf_section** %1480, i64 %1483
  %1485 = load %struct.elf_section*, %struct.elf_section** %1484, align 8
  %1486 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %1485, i64 0, i32 1
  %1487 = load i64, i64* %1486, align 8
  %1488 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1477, i64 0, i32 3
  %1489 = load i32, i32* %1488, align 8
  %1490 = zext i32 %1489 to i64
  %1491 = sub i64 %1487, %1490
  %1492 = trunc i64 %1491 to i8
  call void @saa_write8(%struct.SAA* %1479, i8 zeroext %1492) #13
  call void @saa_write8(%struct.SAA* %1479, i8 zeroext 0) #13
  call void @saa_write8(%struct.SAA* %1479, i8 zeroext 1) #13
  call void @saa_write8(%struct.SAA* %1479, i8 zeroext 1) #13
  %1493 = getelementptr inbounds %struct.SAA, %struct.SAA* %1479, i64 0, i32 5
  %1494 = load i64, i64* %1493, align 8
  %1495 = add i64 %1494, %1476
  %1496 = load i64, i64* %1462, align 8
  %1497 = trunc i64 %1496 to i32
  %1498 = add i32 %1497, 4
  call void @saa_write32(%struct.SAA* %1458, i32 %1498) #13
  %1499 = load i32, i32* %1481, align 8
  %1500 = shl i32 %1499, 8
  %1501 = add i32 %1500, 513
  call void @saa_write32(%struct.SAA* %1458, i32 %1501) #13
  call void @saa_write32(%struct.SAA* %1458, i32 0) #13
  call void @saa_write32(%struct.SAA* %1457, i32 0) #13
  %1502 = load %struct.elf_section**, %struct.elf_section*** @sects, align 8
  %1503 = load i32, i32* %1481, align 8
  %1504 = sext i32 %1503 to i64
  %1505 = getelementptr inbounds %struct.elf_section*, %struct.elf_section** %1502, i64 %1504
  %1506 = load %struct.elf_section*, %struct.elf_section** %1505, align 8
  %1507 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %1506, i64 0, i32 1
  %1508 = load i64, i64* %1507, align 8
  %1509 = trunc i64 %1508 to i32
  call void @saa_write32(%struct.SAA* %1457, i32 %1509) #13
  %1510 = load %struct.elf_section**, %struct.elf_section*** @sects, align 8
  %1511 = load i32, i32* %1481, align 8
  %1512 = sext i32 %1511 to i64
  %1513 = getelementptr inbounds %struct.elf_section*, %struct.elf_section** %1510, i64 %1512
  %1514 = load %struct.elf_section*, %struct.elf_section** %1513, align 8
  %1515 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %1514, i64 0, i32 1
  %1516 = load i64, i64* %1515, align 8
  %1517 = add i64 %1516, %1475
  %1518 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1477, i64 0, i32 5
  %1519 = add nuw nsw i32 %1474, 1
  %1520 = load i32, i32* @dwarf_nsections, align 4
  %1521 = icmp slt i32 %1519, %1520
  br i1 %1521, label %1472, label %1522

1522:                                             ; preds = %1472, %1456
  %1523 = phi i64 [ 0, %1456 ], [ %1495, %1472 ]
  %1524 = phi i64 [ 0, %1456 ], [ %1517, %1472 ]
  call void @saa_write32(%struct.SAA* %1457, i32 0) #13
  call void @saa_write32(%struct.SAA* %1457, i32 0) #13
  %1525 = load i64, i64* %1462, align 8
  %1526 = trunc i64 %1525 to i32
  %1527 = add i32 %1526, 4
  store i32 %1527, i32* @arangeslen, align 4
  %1528 = sext i32 %1527 to i64
  %1529 = call noalias i8* @nasm_malloc(i64 %1528) #15
  store i8* %1529, i8** @arangesbuf, align 8
  %1530 = bitcast i8* %1529 to i32*
  %1531 = getelementptr inbounds i8, i8* %1529, i64 4
  store i32 %1526, i32* %1530, align 4
  call void @saa_rnbytes(%struct.SAA* %1457, i8* %1531, i64 %1525) #13
  br label %1687

1532:                                             ; preds = %1453
  %1533 = icmp eq %struct.ofmt* %1454, @of_elfx32
  br i1 %1533, label %1534, label %1610

1534:                                             ; preds = %1532
  %1535 = call %struct.SAA* @saa_init(i64 1) #13
  %1536 = call %struct.SAA* @saa_init(i64 1) #13
  %1537 = load %struct.dwarf_format*, %struct.dwarf_format** @dwfmt, align 8
  %1538 = getelementptr inbounds %struct.dwarf_format, %struct.dwarf_format* %1537, i64 0, i32 1, i64 0
  %1539 = load i16, i16* %1538, align 2
  call void @saa_write16(%struct.SAA* %1535, i16 zeroext %1539) #13
  %1540 = getelementptr inbounds %struct.SAA, %struct.SAA* %1535, i64 0, i32 5
  %1541 = load i64, i64* %1540, align 8
  %1542 = trunc i64 %1541 to i32
  %1543 = add i32 %1542, 4
  call void @saa_write32(%struct.SAA* %1536, i32 %1543) #13
  %1544 = load i64, i64* @dwarf_infosym, align 8
  %1545 = trunc i64 %1544 to i32
  %1546 = shl i32 %1545, 8
  %1547 = or i32 %1546, 10
  call void @saa_write32(%struct.SAA* %1536, i32 %1547) #13
  call void @saa_write32(%struct.SAA* %1536, i32 0) #13
  call void @saa_write32(%struct.SAA* %1535, i32 0) #13
  call void @saa_write8(%struct.SAA* %1535, i8 zeroext 4) #13
  call void @saa_write8(%struct.SAA* %1535, i8 zeroext 0) #13
  call void @saa_write32(%struct.SAA* %1535, i32 0) #13
  %1548 = load i32, i32* @dwarf_nsections, align 4
  %1549 = icmp sgt i32 %1548, 0
  br i1 %1549, label %1550, label %1600

1550:                                             ; preds = %1534, %1550
  %1551 = phi %struct.sectlist** [ %1596, %1550 ], [ @dwarf_fsect, %1534 ]
  %1552 = phi i32 [ %1597, %1550 ], [ 0, %1534 ]
  %1553 = phi i64 [ %1595, %1550 ], [ 0, %1534 ]
  %1554 = phi i64 [ %1573, %1550 ], [ 0, %1534 ]
  %1555 = load %struct.sectlist*, %struct.sectlist** %1551, align 8
  %1556 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1555, i64 0, i32 0
  %1557 = load %struct.SAA*, %struct.SAA** %1556, align 8
  call void @saa_write8(%struct.SAA* %1557, i8 zeroext 2) #13
  %1558 = load %struct.elf_section**, %struct.elf_section*** @sects, align 8
  %1559 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1555, i64 0, i32 1
  %1560 = load i32, i32* %1559, align 8
  %1561 = sext i32 %1560 to i64
  %1562 = getelementptr inbounds %struct.elf_section*, %struct.elf_section** %1558, i64 %1561
  %1563 = load %struct.elf_section*, %struct.elf_section** %1562, align 8
  %1564 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %1563, i64 0, i32 1
  %1565 = load i64, i64* %1564, align 8
  %1566 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1555, i64 0, i32 3
  %1567 = load i32, i32* %1566, align 8
  %1568 = zext i32 %1567 to i64
  %1569 = sub i64 %1565, %1568
  %1570 = trunc i64 %1569 to i8
  call void @saa_write8(%struct.SAA* %1557, i8 zeroext %1570) #13
  call void @saa_write8(%struct.SAA* %1557, i8 zeroext 0) #13
  call void @saa_write8(%struct.SAA* %1557, i8 zeroext 1) #13
  call void @saa_write8(%struct.SAA* %1557, i8 zeroext 1) #13
  %1571 = getelementptr inbounds %struct.SAA, %struct.SAA* %1557, i64 0, i32 5
  %1572 = load i64, i64* %1571, align 8
  %1573 = add i64 %1572, %1554
  %1574 = load i64, i64* %1540, align 8
  %1575 = trunc i64 %1574 to i32
  %1576 = add i32 %1575, 4
  call void @saa_write32(%struct.SAA* %1536, i32 %1576) #13
  %1577 = load i32, i32* %1559, align 8
  %1578 = shl i32 %1577, 8
  %1579 = add i32 %1578, 522
  call void @saa_write32(%struct.SAA* %1536, i32 %1579) #13
  call void @saa_write32(%struct.SAA* %1536, i32 0) #13
  call void @saa_write32(%struct.SAA* %1535, i32 0) #13
  %1580 = load %struct.elf_section**, %struct.elf_section*** @sects, align 8
  %1581 = load i32, i32* %1559, align 8
  %1582 = sext i32 %1581 to i64
  %1583 = getelementptr inbounds %struct.elf_section*, %struct.elf_section** %1580, i64 %1582
  %1584 = load %struct.elf_section*, %struct.elf_section** %1583, align 8
  %1585 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %1584, i64 0, i32 1
  %1586 = load i64, i64* %1585, align 8
  %1587 = trunc i64 %1586 to i32
  call void @saa_write32(%struct.SAA* %1535, i32 %1587) #13
  %1588 = load %struct.elf_section**, %struct.elf_section*** @sects, align 8
  %1589 = load i32, i32* %1559, align 8
  %1590 = sext i32 %1589 to i64
  %1591 = getelementptr inbounds %struct.elf_section*, %struct.elf_section** %1588, i64 %1590
  %1592 = load %struct.elf_section*, %struct.elf_section** %1591, align 8
  %1593 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %1592, i64 0, i32 1
  %1594 = load i64, i64* %1593, align 8
  %1595 = add i64 %1594, %1553
  %1596 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1555, i64 0, i32 5
  %1597 = add nuw nsw i32 %1552, 1
  %1598 = load i32, i32* @dwarf_nsections, align 4
  %1599 = icmp slt i32 %1597, %1598
  br i1 %1599, label %1550, label %1600

1600:                                             ; preds = %1550, %1534
  %1601 = phi i64 [ 0, %1534 ], [ %1573, %1550 ]
  %1602 = phi i64 [ 0, %1534 ], [ %1595, %1550 ]
  call void @saa_write32(%struct.SAA* %1535, i32 0) #13
  call void @saa_write32(%struct.SAA* %1535, i32 0) #13
  %1603 = load i64, i64* %1540, align 8
  %1604 = trunc i64 %1603 to i32
  %1605 = add i32 %1604, 4
  store i32 %1605, i32* @arangeslen, align 4
  %1606 = sext i32 %1605 to i64
  %1607 = call noalias i8* @nasm_malloc(i64 %1606) #15
  store i8* %1607, i8** @arangesbuf, align 8
  %1608 = bitcast i8* %1607 to i32*
  %1609 = getelementptr inbounds i8, i8* %1607, i64 4
  store i32 %1604, i32* %1608, align 4
  call void @saa_rnbytes(%struct.SAA* %1535, i8* %1609, i64 %1603) #13
  br label %1687

1610:                                             ; preds = %1532
  %1611 = icmp eq %struct.ofmt* %1454, @of_elf64
  br i1 %1611, label %1613, label %1612, !prof !6

1612:                                             ; preds = %1610
  call void @nasm_assert_failed(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.33, i64 0, i64 0), i32 3198, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.112, i64 0, i64 0)) #14
  unreachable

1613:                                             ; preds = %1610
  %1614 = call %struct.SAA* @saa_init(i64 1) #13
  %1615 = call %struct.SAA* @saa_init(i64 1) #13
  %1616 = load %struct.dwarf_format*, %struct.dwarf_format** @dwfmt, align 8
  %1617 = getelementptr inbounds %struct.dwarf_format, %struct.dwarf_format* %1616, i64 0, i32 1, i64 0
  %1618 = load i16, i16* %1617, align 2
  call void @saa_write16(%struct.SAA* %1614, i16 zeroext %1618) #13
  %1619 = getelementptr inbounds %struct.SAA, %struct.SAA* %1614, i64 0, i32 5
  %1620 = load i64, i64* %1619, align 8
  %1621 = add i64 %1620, 4
  call void @saa_write64(%struct.SAA* %1615, i64 %1621) #13
  %1622 = load i64, i64* @dwarf_infosym, align 8
  %1623 = shl i64 %1622, 32
  %1624 = or i64 %1623, 10
  call void @saa_write64(%struct.SAA* %1615, i64 %1624) #13
  call void @saa_write64(%struct.SAA* %1615, i64 0) #13
  call void @saa_write32(%struct.SAA* %1614, i32 0) #13
  call void @saa_write8(%struct.SAA* %1614, i8 zeroext 8) #13
  call void @saa_write8(%struct.SAA* %1614, i8 zeroext 0) #13
  call void @saa_write32(%struct.SAA* %1614, i32 0) #13
  %1625 = load i32, i32* @dwarf_nsections, align 4
  %1626 = icmp sgt i32 %1625, 0
  br i1 %1626, label %1627, label %1677

1627:                                             ; preds = %1613, %1627
  %1628 = phi %struct.sectlist** [ %1673, %1627 ], [ @dwarf_fsect, %1613 ]
  %1629 = phi i32 [ %1674, %1627 ], [ 0, %1613 ]
  %1630 = phi i64 [ %1672, %1627 ], [ 0, %1613 ]
  %1631 = phi i64 [ %1650, %1627 ], [ 0, %1613 ]
  %1632 = load %struct.sectlist*, %struct.sectlist** %1628, align 8
  %1633 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1632, i64 0, i32 0
  %1634 = load %struct.SAA*, %struct.SAA** %1633, align 8
  call void @saa_write8(%struct.SAA* %1634, i8 zeroext 2) #13
  %1635 = load %struct.elf_section**, %struct.elf_section*** @sects, align 8
  %1636 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1632, i64 0, i32 1
  %1637 = load i32, i32* %1636, align 8
  %1638 = sext i32 %1637 to i64
  %1639 = getelementptr inbounds %struct.elf_section*, %struct.elf_section** %1635, i64 %1638
  %1640 = load %struct.elf_section*, %struct.elf_section** %1639, align 8
  %1641 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %1640, i64 0, i32 1
  %1642 = load i64, i64* %1641, align 8
  %1643 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1632, i64 0, i32 3
  %1644 = load i32, i32* %1643, align 8
  %1645 = zext i32 %1644 to i64
  %1646 = sub i64 %1642, %1645
  %1647 = trunc i64 %1646 to i8
  call void @saa_write8(%struct.SAA* %1634, i8 zeroext %1647) #13
  call void @saa_write8(%struct.SAA* %1634, i8 zeroext 0) #13
  call void @saa_write8(%struct.SAA* %1634, i8 zeroext 1) #13
  call void @saa_write8(%struct.SAA* %1634, i8 zeroext 1) #13
  %1648 = getelementptr inbounds %struct.SAA, %struct.SAA* %1634, i64 0, i32 5
  %1649 = load i64, i64* %1648, align 8
  %1650 = add i64 %1649, %1631
  %1651 = load i64, i64* %1619, align 8
  %1652 = add i64 %1651, 4
  call void @saa_write64(%struct.SAA* %1615, i64 %1652) #13
  %1653 = load i32, i32* %1636, align 8
  %1654 = add nsw i32 %1653, 2
  %1655 = zext i32 %1654 to i64
  %1656 = shl nuw i64 %1655, 32
  %1657 = or i64 %1656, 1
  call void @saa_write64(%struct.SAA* %1615, i64 %1657) #13
  call void @saa_write64(%struct.SAA* %1615, i64 0) #13
  call void @saa_write64(%struct.SAA* %1614, i64 0) #13
  %1658 = load %struct.elf_section**, %struct.elf_section*** @sects, align 8
  %1659 = load i32, i32* %1636, align 8
  %1660 = sext i32 %1659 to i64
  %1661 = getelementptr inbounds %struct.elf_section*, %struct.elf_section** %1658, i64 %1660
  %1662 = load %struct.elf_section*, %struct.elf_section** %1661, align 8
  %1663 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %1662, i64 0, i32 1
  %1664 = load i64, i64* %1663, align 8
  call void @saa_write64(%struct.SAA* %1614, i64 %1664) #13
  %1665 = load %struct.elf_section**, %struct.elf_section*** @sects, align 8
  %1666 = load i32, i32* %1636, align 8
  %1667 = sext i32 %1666 to i64
  %1668 = getelementptr inbounds %struct.elf_section*, %struct.elf_section** %1665, i64 %1667
  %1669 = load %struct.elf_section*, %struct.elf_section** %1668, align 8
  %1670 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %1669, i64 0, i32 1
  %1671 = load i64, i64* %1670, align 8
  %1672 = add i64 %1671, %1630
  %1673 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1632, i64 0, i32 5
  %1674 = add nuw nsw i32 %1629, 1
  %1675 = load i32, i32* @dwarf_nsections, align 4
  %1676 = icmp slt i32 %1674, %1675
  br i1 %1676, label %1627, label %1677

1677:                                             ; preds = %1627, %1613
  %1678 = phi i64 [ 0, %1613 ], [ %1650, %1627 ]
  %1679 = phi i64 [ 0, %1613 ], [ %1672, %1627 ]
  call void @saa_write64(%struct.SAA* %1614, i64 0) #13
  call void @saa_write64(%struct.SAA* %1614, i64 0) #13
  %1680 = load i64, i64* %1619, align 8
  %1681 = trunc i64 %1680 to i32
  %1682 = add i32 %1681, 4
  store i32 %1682, i32* @arangeslen, align 4
  %1683 = sext i32 %1682 to i64
  %1684 = call noalias i8* @nasm_malloc(i64 %1683) #15
  store i8* %1684, i8** @arangesbuf, align 8
  %1685 = bitcast i8* %1684 to i32*
  %1686 = getelementptr inbounds i8, i8* %1684, i64 4
  store i32 %1681, i32* %1685, align 4
  call void @saa_rnbytes(%struct.SAA* %1614, i8* %1686, i64 %1680) #13
  br label %1687

1687:                                             ; preds = %1677, %1600, %1522
  %1688 = phi %struct.SAA* [ %1614, %1677 ], [ %1535, %1600 ], [ %1457, %1522 ]
  %1689 = phi i64 [ %1678, %1677 ], [ %1601, %1600 ], [ %1523, %1522 ]
  %1690 = phi i64 [ %1679, %1677 ], [ %1602, %1600 ], [ %1524, %1522 ]
  %1691 = phi %struct.SAA* [ %1615, %1677 ], [ %1536, %1600 ], [ %1458, %1522 ]
  call void @saa_free(%struct.SAA* %1688) #13
  %1692 = getelementptr inbounds %struct.SAA, %struct.SAA* %1691, i64 0, i32 5
  %1693 = load i64, i64* %1692, align 8
  %1694 = trunc i64 %1693 to i32
  store i32 %1694, i32* @arangesrellen, align 4
  %1695 = shl i64 %1693, 32
  %1696 = ashr exact i64 %1695, 32
  %1697 = call noalias i8* @nasm_malloc(i64 %1696) #15
  store i8* %1697, i8** @arangesrelbuf, align 8
  call void @saa_rnbytes(%struct.SAA* %1691, i8* %1697, i64 %1693) #13
  call void @saa_free(%struct.SAA* %1691) #13
  %1698 = load %struct.ofmt*, %struct.ofmt** @ofmt, align 8
  %1699 = icmp eq %struct.ofmt* %1698, @of_elf32
  br i1 %1699, label %1700, label %1758

1700:                                             ; preds = %1687
  %1701 = call %struct.SAA* @saa_init(i64 1) #13
  %1702 = call %struct.SAA* @saa_init(i64 1) #13
  %1703 = load %struct.dwarf_format*, %struct.dwarf_format** @dwfmt, align 8
  %1704 = getelementptr inbounds %struct.dwarf_format, %struct.dwarf_format* %1703, i64 0, i32 1, i64 3
  %1705 = load i16, i16* %1704, align 2
  call void @saa_write16(%struct.SAA* %1701, i16 zeroext %1705) #13
  %1706 = getelementptr inbounds %struct.SAA, %struct.SAA* %1701, i64 0, i32 5
  %1707 = load i64, i64* %1706, align 8
  %1708 = trunc i64 %1707 to i32
  %1709 = add i32 %1708, 4
  call void @saa_write32(%struct.SAA* %1702, i32 %1709) #13
  %1710 = load i64, i64* @dwarf_abbrevsym, align 8
  %1711 = trunc i64 %1710 to i32
  %1712 = shl i32 %1711, 8
  %1713 = or i32 %1712, 1
  call void @saa_write32(%struct.SAA* %1702, i32 %1713) #13
  call void @saa_write32(%struct.SAA* %1702, i32 0) #13
  call void @saa_write32(%struct.SAA* %1701, i32 0) #13
  call void @saa_write8(%struct.SAA* %1701, i8 zeroext 4) #13
  call void @saa_write8(%struct.SAA* %1701, i8 zeroext 1) #13
  %1714 = load i64, i64* %1706, align 8
  %1715 = trunc i64 %1714 to i32
  %1716 = add i32 %1715, 4
  call void @saa_write32(%struct.SAA* %1702, i32 %1716) #13
  %1717 = load %struct.sectlist*, %struct.sectlist** @dwarf_fsect, align 8
  %1718 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1717, i64 0, i32 1
  %1719 = load i32, i32* %1718, align 8
  %1720 = shl i32 %1719, 8
  %1721 = add i32 %1720, 513
  call void @saa_write32(%struct.SAA* %1702, i32 %1721) #13
  call void @saa_write32(%struct.SAA* %1702, i32 0) #13
  call void @saa_write32(%struct.SAA* %1701, i32 0) #13
  %1722 = load i64, i64* %1706, align 8
  %1723 = trunc i64 %1722 to i32
  %1724 = add i32 %1723, 4
  call void @saa_write32(%struct.SAA* %1702, i32 %1724) #13
  %1725 = load %struct.sectlist*, %struct.sectlist** @dwarf_fsect, align 8
  %1726 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1725, i64 0, i32 1
  %1727 = load i32, i32* %1726, align 8
  %1728 = shl i32 %1727, 8
  %1729 = add i32 %1728, 513
  call void @saa_write32(%struct.SAA* %1702, i32 %1729) #13
  call void @saa_write32(%struct.SAA* %1702, i32 0) #13
  %1730 = trunc i64 %1690 to i32
  call void @saa_write32(%struct.SAA* %1701, i32 %1730) #13
  %1731 = load i64, i64* %1706, align 8
  %1732 = trunc i64 %1731 to i32
  %1733 = add i32 %1732, 4
  call void @saa_write32(%struct.SAA* %1702, i32 %1733) #13
  %1734 = load i64, i64* @dwarf_linesym, align 8
  %1735 = trunc i64 %1734 to i32
  %1736 = shl i32 %1735, 8
  %1737 = or i32 %1736, 1
  call void @saa_write32(%struct.SAA* %1702, i32 %1737) #13
  call void @saa_write32(%struct.SAA* %1702, i32 0) #13
  call void @saa_write32(%struct.SAA* %1701, i32 0) #13
  %1738 = call i64 @strlen(i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @elf_module, i64 0, i64 0)) #16
  %1739 = add i64 %1738, 1
  call void @saa_wbytes(%struct.SAA* %1701, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @elf_module, i64 0, i64 0), i64 %1739) #13
  %1740 = call i8* @nasm_signature() #13
  %1741 = call i64 @nasm_signature_len() #13
  %1742 = add i64 %1741, 1
  call void @saa_wbytes(%struct.SAA* %1701, i8* %1740, i64 %1742) #13
  call void @saa_write16(%struct.SAA* %1701, i16 zeroext -32767) #13
  call void @saa_write8(%struct.SAA* %1701, i8 zeroext 2) #13
  %1743 = load i64, i64* %1706, align 8
  %1744 = trunc i64 %1743 to i32
  %1745 = add i32 %1744, 4
  call void @saa_write32(%struct.SAA* %1702, i32 %1745) #13
  %1746 = load %struct.sectlist*, %struct.sectlist** @dwarf_fsect, align 8
  %1747 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1746, i64 0, i32 1
  %1748 = load i32, i32* %1747, align 8
  %1749 = shl i32 %1748, 8
  %1750 = add i32 %1749, 513
  call void @saa_write32(%struct.SAA* %1702, i32 %1750) #13
  call void @saa_write32(%struct.SAA* %1702, i32 0) #13
  call void @saa_write32(%struct.SAA* %1701, i32 0) #13
  call void @saa_write32(%struct.SAA* %1701, i32 0) #13
  call void @saa_write8(%struct.SAA* %1701, i8 zeroext 0) #13
  %1751 = load i64, i64* %1706, align 8
  %1752 = trunc i64 %1751 to i32
  %1753 = add i32 %1752, 4
  store i32 %1753, i32* @infolen, align 4
  %1754 = sext i32 %1753 to i64
  %1755 = call noalias i8* @nasm_malloc(i64 %1754) #15
  store i8* %1755, i8** @infobuf, align 8
  %1756 = bitcast i8* %1755 to i32*
  %1757 = getelementptr inbounds i8, i8* %1755, i64 4
  store i32 %1752, i32* %1756, align 4
  call void @saa_rnbytes(%struct.SAA* %1701, i8* %1757, i64 %1751) #13
  br label %1877

1758:                                             ; preds = %1687
  %1759 = icmp eq %struct.ofmt* %1698, @of_elfx32
  br i1 %1759, label %1760, label %1818

1760:                                             ; preds = %1758
  %1761 = call %struct.SAA* @saa_init(i64 1) #13
  %1762 = call %struct.SAA* @saa_init(i64 1) #13
  %1763 = load %struct.dwarf_format*, %struct.dwarf_format** @dwfmt, align 8
  %1764 = getelementptr inbounds %struct.dwarf_format, %struct.dwarf_format* %1763, i64 0, i32 1, i64 3
  %1765 = load i16, i16* %1764, align 2
  call void @saa_write16(%struct.SAA* %1761, i16 zeroext %1765) #13
  %1766 = getelementptr inbounds %struct.SAA, %struct.SAA* %1761, i64 0, i32 5
  %1767 = load i64, i64* %1766, align 8
  %1768 = trunc i64 %1767 to i32
  %1769 = add i32 %1768, 4
  call void @saa_write32(%struct.SAA* %1762, i32 %1769) #13
  %1770 = load i64, i64* @dwarf_abbrevsym, align 8
  %1771 = trunc i64 %1770 to i32
  %1772 = shl i32 %1771, 8
  %1773 = or i32 %1772, 10
  call void @saa_write32(%struct.SAA* %1762, i32 %1773) #13
  call void @saa_write32(%struct.SAA* %1762, i32 0) #13
  call void @saa_write32(%struct.SAA* %1761, i32 0) #13
  call void @saa_write8(%struct.SAA* %1761, i8 zeroext 4) #13
  call void @saa_write8(%struct.SAA* %1761, i8 zeroext 1) #13
  %1774 = load i64, i64* %1766, align 8
  %1775 = trunc i64 %1774 to i32
  %1776 = add i32 %1775, 4
  call void @saa_write32(%struct.SAA* %1762, i32 %1776) #13
  %1777 = load %struct.sectlist*, %struct.sectlist** @dwarf_fsect, align 8
  %1778 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1777, i64 0, i32 1
  %1779 = load i32, i32* %1778, align 8
  %1780 = shl i32 %1779, 8
  %1781 = add i32 %1780, 522
  call void @saa_write32(%struct.SAA* %1762, i32 %1781) #13
  call void @saa_write32(%struct.SAA* %1762, i32 0) #13
  call void @saa_write32(%struct.SAA* %1761, i32 0) #13
  %1782 = load i64, i64* %1766, align 8
  %1783 = trunc i64 %1782 to i32
  %1784 = add i32 %1783, 4
  call void @saa_write32(%struct.SAA* %1762, i32 %1784) #13
  %1785 = load %struct.sectlist*, %struct.sectlist** @dwarf_fsect, align 8
  %1786 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1785, i64 0, i32 1
  %1787 = load i32, i32* %1786, align 8
  %1788 = shl i32 %1787, 8
  %1789 = add i32 %1788, 522
  call void @saa_write32(%struct.SAA* %1762, i32 %1789) #13
  call void @saa_write32(%struct.SAA* %1762, i32 0) #13
  %1790 = trunc i64 %1690 to i32
  call void @saa_write32(%struct.SAA* %1761, i32 %1790) #13
  %1791 = load i64, i64* %1766, align 8
  %1792 = trunc i64 %1791 to i32
  %1793 = add i32 %1792, 4
  call void @saa_write32(%struct.SAA* %1762, i32 %1793) #13
  %1794 = load i64, i64* @dwarf_linesym, align 8
  %1795 = trunc i64 %1794 to i32
  %1796 = shl i32 %1795, 8
  %1797 = or i32 %1796, 10
  call void @saa_write32(%struct.SAA* %1762, i32 %1797) #13
  call void @saa_write32(%struct.SAA* %1762, i32 0) #13
  call void @saa_write32(%struct.SAA* %1761, i32 0) #13
  %1798 = call i64 @strlen(i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @elf_module, i64 0, i64 0)) #16
  %1799 = add i64 %1798, 1
  call void @saa_wbytes(%struct.SAA* %1761, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @elf_module, i64 0, i64 0), i64 %1799) #13
  %1800 = call i8* @nasm_signature() #13
  %1801 = call i64 @nasm_signature_len() #13
  %1802 = add i64 %1801, 1
  call void @saa_wbytes(%struct.SAA* %1761, i8* %1800, i64 %1802) #13
  call void @saa_write16(%struct.SAA* %1761, i16 zeroext -32767) #13
  call void @saa_write8(%struct.SAA* %1761, i8 zeroext 2) #13
  %1803 = load i64, i64* %1766, align 8
  %1804 = trunc i64 %1803 to i32
  %1805 = add i32 %1804, 4
  call void @saa_write32(%struct.SAA* %1762, i32 %1805) #13
  %1806 = load %struct.sectlist*, %struct.sectlist** @dwarf_fsect, align 8
  %1807 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1806, i64 0, i32 1
  %1808 = load i32, i32* %1807, align 8
  %1809 = shl i32 %1808, 8
  %1810 = add i32 %1809, 522
  call void @saa_write32(%struct.SAA* %1762, i32 %1810) #13
  call void @saa_write32(%struct.SAA* %1762, i32 0) #13
  call void @saa_write32(%struct.SAA* %1761, i32 0) #13
  call void @saa_write32(%struct.SAA* %1761, i32 0) #13
  call void @saa_write8(%struct.SAA* %1761, i8 zeroext 0) #13
  %1811 = load i64, i64* %1766, align 8
  %1812 = trunc i64 %1811 to i32
  %1813 = add i32 %1812, 4
  store i32 %1813, i32* @infolen, align 4
  %1814 = sext i32 %1813 to i64
  %1815 = call noalias i8* @nasm_malloc(i64 %1814) #15
  store i8* %1815, i8** @infobuf, align 8
  %1816 = bitcast i8* %1815 to i32*
  %1817 = getelementptr inbounds i8, i8* %1815, i64 4
  store i32 %1812, i32* %1816, align 4
  call void @saa_rnbytes(%struct.SAA* %1761, i8* %1817, i64 %1811) #13
  br label %1877

1818:                                             ; preds = %1758
  %1819 = icmp eq %struct.ofmt* %1698, @of_elf64
  br i1 %1819, label %1821, label %1820, !prof !6

1820:                                             ; preds = %1818
  call void @nasm_assert_failed(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.33, i64 0, i64 0), i32 3348, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.112, i64 0, i64 0)) #14
  unreachable

1821:                                             ; preds = %1818
  %1822 = call %struct.SAA* @saa_init(i64 1) #13
  %1823 = call %struct.SAA* @saa_init(i64 1) #13
  %1824 = load %struct.dwarf_format*, %struct.dwarf_format** @dwfmt, align 8
  %1825 = getelementptr inbounds %struct.dwarf_format, %struct.dwarf_format* %1824, i64 0, i32 1, i64 3
  %1826 = load i16, i16* %1825, align 2
  call void @saa_write16(%struct.SAA* %1822, i16 zeroext %1826) #13
  %1827 = getelementptr inbounds %struct.SAA, %struct.SAA* %1822, i64 0, i32 5
  %1828 = load i64, i64* %1827, align 8
  %1829 = add i64 %1828, 4
  call void @saa_write64(%struct.SAA* %1823, i64 %1829) #13
  %1830 = load i64, i64* @dwarf_abbrevsym, align 8
  %1831 = shl i64 %1830, 32
  %1832 = or i64 %1831, 10
  call void @saa_write64(%struct.SAA* %1823, i64 %1832) #13
  call void @saa_write64(%struct.SAA* %1823, i64 0) #13
  call void @saa_write32(%struct.SAA* %1822, i32 0) #13
  call void @saa_write8(%struct.SAA* %1822, i8 zeroext 8) #13
  call void @saa_write8(%struct.SAA* %1822, i8 zeroext 1) #13
  %1833 = load i64, i64* %1827, align 8
  %1834 = add i64 %1833, 4
  call void @saa_write64(%struct.SAA* %1823, i64 %1834) #13
  %1835 = load %struct.sectlist*, %struct.sectlist** @dwarf_fsect, align 8
  %1836 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1835, i64 0, i32 1
  %1837 = load i32, i32* %1836, align 8
  %1838 = add nsw i32 %1837, 2
  %1839 = zext i32 %1838 to i64
  %1840 = shl nuw i64 %1839, 32
  %1841 = or i64 %1840, 1
  call void @saa_write64(%struct.SAA* %1823, i64 %1841) #13
  call void @saa_write64(%struct.SAA* %1823, i64 0) #13
  call void @saa_write64(%struct.SAA* %1822, i64 0) #13
  %1842 = load i64, i64* %1827, align 8
  %1843 = add i64 %1842, 4
  call void @saa_write64(%struct.SAA* %1823, i64 %1843) #13
  %1844 = load %struct.sectlist*, %struct.sectlist** @dwarf_fsect, align 8
  %1845 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1844, i64 0, i32 1
  %1846 = load i32, i32* %1845, align 8
  %1847 = add nsw i32 %1846, 2
  %1848 = zext i32 %1847 to i64
  %1849 = shl nuw i64 %1848, 32
  %1850 = or i64 %1849, 1
  call void @saa_write64(%struct.SAA* %1823, i64 %1850) #13
  call void @saa_write64(%struct.SAA* %1823, i64 0) #13
  call void @saa_write64(%struct.SAA* %1822, i64 %1690) #13
  %1851 = load i64, i64* %1827, align 8
  %1852 = add i64 %1851, 4
  call void @saa_write64(%struct.SAA* %1823, i64 %1852) #13
  %1853 = load i64, i64* @dwarf_linesym, align 8
  %1854 = shl i64 %1853, 32
  %1855 = or i64 %1854, 10
  call void @saa_write64(%struct.SAA* %1823, i64 %1855) #13
  call void @saa_write64(%struct.SAA* %1823, i64 0) #13
  call void @saa_write32(%struct.SAA* %1822, i32 0) #13
  %1856 = call i64 @strlen(i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @elf_module, i64 0, i64 0)) #16
  %1857 = add i64 %1856, 1
  call void @saa_wbytes(%struct.SAA* %1822, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @elf_module, i64 0, i64 0), i64 %1857) #13
  %1858 = call i8* @nasm_signature() #13
  %1859 = call i64 @nasm_signature_len() #13
  %1860 = add i64 %1859, 1
  call void @saa_wbytes(%struct.SAA* %1822, i8* %1858, i64 %1860) #13
  call void @saa_write16(%struct.SAA* %1822, i16 zeroext -32767) #13
  call void @saa_write8(%struct.SAA* %1822, i8 zeroext 2) #13
  %1861 = load i64, i64* %1827, align 8
  %1862 = add i64 %1861, 4
  call void @saa_write64(%struct.SAA* %1823, i64 %1862) #13
  %1863 = load %struct.sectlist*, %struct.sectlist** @dwarf_fsect, align 8
  %1864 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1863, i64 0, i32 1
  %1865 = load i32, i32* %1864, align 8
  %1866 = add nsw i32 %1865, 2
  %1867 = zext i32 %1866 to i64
  %1868 = shl nuw i64 %1867, 32
  %1869 = or i64 %1868, 1
  call void @saa_write64(%struct.SAA* %1823, i64 %1869) #13
  call void @saa_write64(%struct.SAA* %1823, i64 0) #13
  call void @saa_write64(%struct.SAA* %1822, i64 0) #13
  call void @saa_write64(%struct.SAA* %1822, i64 0) #13
  call void @saa_write8(%struct.SAA* %1822, i8 zeroext 0) #13
  %1870 = load i64, i64* %1827, align 8
  %1871 = trunc i64 %1870 to i32
  %1872 = add i32 %1871, 4
  store i32 %1872, i32* @infolen, align 4
  %1873 = sext i32 %1872 to i64
  %1874 = call noalias i8* @nasm_malloc(i64 %1873) #15
  store i8* %1874, i8** @infobuf, align 8
  %1875 = bitcast i8* %1874 to i32*
  %1876 = getelementptr inbounds i8, i8* %1874, i64 4
  store i32 %1871, i32* %1875, align 4
  call void @saa_rnbytes(%struct.SAA* %1822, i8* %1876, i64 %1870) #13
  br label %1877

1877:                                             ; preds = %1821, %1760, %1700
  %1878 = phi %struct.SAA* [ %1822, %1821 ], [ %1761, %1760 ], [ %1701, %1700 ]
  %1879 = phi %struct.SAA* [ %1823, %1821 ], [ %1762, %1760 ], [ %1702, %1700 ]
  call void @saa_free(%struct.SAA* %1878) #13
  %1880 = getelementptr inbounds %struct.SAA, %struct.SAA* %1879, i64 0, i32 5
  %1881 = load i64, i64* %1880, align 8
  %1882 = trunc i64 %1881 to i32
  store i32 %1882, i32* @inforellen, align 4
  %1883 = shl i64 %1881, 32
  %1884 = ashr exact i64 %1883, 32
  %1885 = call noalias i8* @nasm_malloc(i64 %1884) #15
  store i8* %1885, i8** @inforelbuf, align 8
  call void @saa_rnbytes(%struct.SAA* %1879, i8* %1885, i64 %1881) #13
  call void @saa_free(%struct.SAA* %1879) #13
  %1886 = call %struct.SAA* @saa_init(i64 1) #13
  call void @saa_write8(%struct.SAA* %1886, i8 zeroext 1) #13
  call void @saa_write8(%struct.SAA* %1886, i8 zeroext 17) #13
  call void @saa_write8(%struct.SAA* %1886, i8 zeroext 1) #13
  call void @saa_write8(%struct.SAA* %1886, i8 zeroext 17) #13
  call void @saa_write8(%struct.SAA* %1886, i8 zeroext 1) #13
  call void @saa_write8(%struct.SAA* %1886, i8 zeroext 18) #13
  call void @saa_write8(%struct.SAA* %1886, i8 zeroext 1) #13
  call void @saa_write8(%struct.SAA* %1886, i8 zeroext 16) #13
  call void @saa_write8(%struct.SAA* %1886, i8 zeroext 6) #13
  call void @saa_write8(%struct.SAA* %1886, i8 zeroext 3) #13
  call void @saa_write8(%struct.SAA* %1886, i8 zeroext 8) #13
  call void @saa_write8(%struct.SAA* %1886, i8 zeroext 37) #13
  call void @saa_write8(%struct.SAA* %1886, i8 zeroext 8) #13
  call void @saa_write8(%struct.SAA* %1886, i8 zeroext 19) #13
  call void @saa_write8(%struct.SAA* %1886, i8 zeroext 5) #13
  call void @saa_write16(%struct.SAA* %1886, i16 zeroext 0) #13
  call void @saa_write8(%struct.SAA* %1886, i8 zeroext 2) #13
  call void @saa_write8(%struct.SAA* %1886, i8 zeroext 46) #13
  call void @saa_write8(%struct.SAA* %1886, i8 zeroext 0) #13
  call void @saa_write8(%struct.SAA* %1886, i8 zeroext 17) #13
  call void @saa_write8(%struct.SAA* %1886, i8 zeroext 1) #13
  call void @saa_write8(%struct.SAA* %1886, i8 zeroext 64) #13
  call void @saa_write8(%struct.SAA* %1886, i8 zeroext 6) #13
  call void @saa_write16(%struct.SAA* %1886, i16 zeroext 0) #13
  call void @saa_write8(%struct.SAA* %1886, i8 zeroext 0) #13
  %1887 = getelementptr inbounds %struct.SAA, %struct.SAA* %1886, i64 0, i32 5
  %1888 = load i64, i64* %1887, align 8
  %1889 = trunc i64 %1888 to i32
  store i32 %1889, i32* @abbrevlen, align 4
  %1890 = call noalias i8* @nasm_malloc(i64 %1888) #15
  store i8* %1890, i8** @abbrevbuf, align 8
  call void @saa_rnbytes(%struct.SAA* %1886, i8* %1890, i64 %1888) #13
  call void @saa_free(%struct.SAA* %1886) #13
  %1891 = call %struct.SAA* @saa_init(i64 1) #13
  call void @saa_write8(%struct.SAA* %1891, i8 zeroext 1) #13
  call void @saa_write8(%struct.SAA* %1891, i8 zeroext 1) #13
  call void @saa_write8(%struct.SAA* %1891, i8 zeroext -5) #13
  call void @saa_write8(%struct.SAA* %1891, i8 zeroext 14) #13
  call void @saa_write8(%struct.SAA* %1891, i8 zeroext 13) #13
  call void @saa_write8(%struct.SAA* %1891, i8 zeroext 0) #13
  call void @saa_write8(%struct.SAA* %1891, i8 zeroext 1) #13
  call void @saa_write8(%struct.SAA* %1891, i8 zeroext 1) #13
  call void @saa_write8(%struct.SAA* %1891, i8 zeroext 1) #13
  call void @saa_write8(%struct.SAA* %1891, i8 zeroext 1) #13
  call void @saa_write8(%struct.SAA* %1891, i8 zeroext 0) #13
  call void @saa_write8(%struct.SAA* %1891, i8 zeroext 0) #13
  call void @saa_write8(%struct.SAA* %1891, i8 zeroext 0) #13
  call void @saa_write8(%struct.SAA* %1891, i8 zeroext 1) #13
  call void @saa_write8(%struct.SAA* %1891, i8 zeroext 0) #13
  call void @saa_write8(%struct.SAA* %1891, i8 zeroext 0) #13
  call void @saa_write8(%struct.SAA* %1891, i8 zeroext 1) #13
  call void @saa_write8(%struct.SAA* %1891, i8 zeroext 0) #13
  %1892 = load i32, i32* @dwarf_numfiles, align 4
  %1893 = icmp sgt i32 %1892, 0
  br i1 %1893, label %1894, label %1908

1894:                                             ; preds = %1877, %1894
  %1895 = phi %struct.linelist** [ %1904, %1894 ], [ @dwarf_flist, %1877 ]
  %1896 = phi i32 [ %1905, %1894 ], [ 0, %1877 ]
  %1897 = load %struct.linelist*, %struct.linelist** %1895, align 8
  %1898 = getelementptr inbounds %struct.linelist, %struct.linelist* %1897, i64 0, i32 3
  %1899 = load i8*, i8** %1898, align 8
  %1900 = call i64 @strlen(i8* %1899) #16
  %1901 = shl i64 %1900, 32
  %1902 = add i64 %1901, 4294967296
  %1903 = ashr exact i64 %1902, 32
  call void @saa_wbytes(%struct.SAA* %1891, i8* %1899, i64 %1903) #13
  call void @saa_write8(%struct.SAA* %1891, i8 zeroext 0) #13
  call void @saa_write8(%struct.SAA* %1891, i8 zeroext 0) #13
  call void @saa_write8(%struct.SAA* %1891, i8 zeroext 0) #13
  %1904 = getelementptr inbounds %struct.linelist, %struct.linelist* %1897, i64 0, i32 0
  %1905 = add nuw nsw i32 %1896, 1
  %1906 = load i32, i32* @dwarf_numfiles, align 4
  %1907 = icmp slt i32 %1905, %1906
  br i1 %1907, label %1894, label %1908

1908:                                             ; preds = %1894, %1877
  call void @saa_write8(%struct.SAA* %1891, i8 zeroext 0) #13
  %1909 = getelementptr inbounds %struct.SAA, %struct.SAA* %1891, i64 0, i32 5
  %1910 = load i64, i64* %1909, align 8
  %1911 = add i64 %1910, %1689
  %1912 = trunc i64 %1911 to i32
  %1913 = add i32 %1912, 10
  store i32 %1913, i32* @linelen, align 4
  %1914 = sext i32 %1913 to i64
  %1915 = call noalias i8* @nasm_malloc(i64 %1914) #15
  store i8* %1915, i8** @linebuf, align 8
  %1916 = bitcast i8* %1915 to i32*
  %1917 = load i32, i32* @linelen, align 4
  %1918 = add nsw i32 %1917, -4
  %1919 = getelementptr inbounds i8, i8* %1915, i64 4
  store i32 %1918, i32* %1916, align 4
  %1920 = bitcast i8* %1919 to i16*
  %1921 = load %struct.dwarf_format*, %struct.dwarf_format** @dwfmt, align 8
  %1922 = getelementptr inbounds %struct.dwarf_format, %struct.dwarf_format* %1921, i64 0, i32 1, i64 6
  %1923 = load i16, i16* %1922, align 2
  %1924 = getelementptr inbounds i8, i8* %1915, i64 6
  store i16 %1923, i16* %1920, align 2
  %1925 = bitcast i8* %1924 to i32*
  %1926 = trunc i64 %1910 to i32
  %1927 = getelementptr inbounds i8, i8* %1915, i64 10
  store i32 %1926, i32* %1925, align 4
  call void @saa_rnbytes(%struct.SAA* %1891, i8* %1927, i64 %1910) #13
  %1928 = getelementptr inbounds i8, i8* %1927, i64 %1910
  call void @saa_free(%struct.SAA* %1891) #13
  %1929 = add i64 %1910, 13
  %1930 = call %struct.SAA* @saa_init(i64 1) #13
  %1931 = load %struct.sectlist*, %struct.sectlist** @dwarf_fsect, align 8
  %1932 = load %struct.ofmt*, %struct.ofmt** @ofmt, align 8
  %1933 = icmp eq %struct.ofmt* %1932, @of_elf32
  br i1 %1933, label %1934, label %1958

1934:                                             ; preds = %1908
  %1935 = load i32, i32* @dwarf_nsections, align 4
  %1936 = icmp sgt i32 %1935, 0
  br i1 %1936, label %1937, label %2012

1937:                                             ; preds = %1934, %1937
  %1938 = phi i8* [ %1951, %1937 ], [ %1928, %1934 ]
  %1939 = phi i32 [ %1955, %1937 ], [ 0, %1934 ]
  %1940 = phi i64 [ %1952, %1937 ], [ %1929, %1934 ]
  %1941 = phi %struct.sectlist* [ %1954, %1937 ], [ %1931, %1934 ]
  %1942 = trunc i64 %1940 to i32
  call void @saa_write32(%struct.SAA* %1930, i32 %1942) #13
  %1943 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1941, i64 0, i32 1
  %1944 = load i32, i32* %1943, align 8
  %1945 = shl i32 %1944, 8
  %1946 = add i32 %1945, 513
  call void @saa_write32(%struct.SAA* %1930, i32 %1946) #13
  call void @saa_write32(%struct.SAA* %1930, i32 0) #13
  %1947 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1941, i64 0, i32 0
  %1948 = load %struct.SAA*, %struct.SAA** %1947, align 8
  %1949 = getelementptr inbounds %struct.SAA, %struct.SAA* %1948, i64 0, i32 5
  %1950 = load i64, i64* %1949, align 8
  call void @saa_rnbytes(%struct.SAA* %1948, i8* %1938, i64 %1950) #13
  %1951 = getelementptr inbounds i8, i8* %1938, i64 %1950
  %1952 = add i64 %1950, %1940
  call void @saa_free(%struct.SAA* %1948) #13
  %1953 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1941, i64 0, i32 5
  %1954 = load %struct.sectlist*, %struct.sectlist** %1953, align 8
  %1955 = add nuw nsw i32 %1939, 1
  %1956 = load i32, i32* @dwarf_nsections, align 4
  %1957 = icmp slt i32 %1955, %1956
  br i1 %1957, label %1937, label %2012

1958:                                             ; preds = %1908
  %1959 = icmp eq %struct.ofmt* %1932, @of_elfx32
  br i1 %1959, label %1960, label %1984

1960:                                             ; preds = %1958
  %1961 = load i32, i32* @dwarf_nsections, align 4
  %1962 = icmp sgt i32 %1961, 0
  br i1 %1962, label %1963, label %2012

1963:                                             ; preds = %1960, %1963
  %1964 = phi i8* [ %1977, %1963 ], [ %1928, %1960 ]
  %1965 = phi i32 [ %1981, %1963 ], [ 0, %1960 ]
  %1966 = phi i64 [ %1978, %1963 ], [ %1929, %1960 ]
  %1967 = phi %struct.sectlist* [ %1980, %1963 ], [ %1931, %1960 ]
  %1968 = trunc i64 %1966 to i32
  call void @saa_write32(%struct.SAA* %1930, i32 %1968) #13
  %1969 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1967, i64 0, i32 1
  %1970 = load i32, i32* %1969, align 8
  %1971 = shl i32 %1970, 8
  %1972 = add i32 %1971, 522
  call void @saa_write32(%struct.SAA* %1930, i32 %1972) #13
  call void @saa_write32(%struct.SAA* %1930, i32 0) #13
  %1973 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1967, i64 0, i32 0
  %1974 = load %struct.SAA*, %struct.SAA** %1973, align 8
  %1975 = getelementptr inbounds %struct.SAA, %struct.SAA* %1974, i64 0, i32 5
  %1976 = load i64, i64* %1975, align 8
  call void @saa_rnbytes(%struct.SAA* %1974, i8* %1964, i64 %1976) #13
  %1977 = getelementptr inbounds i8, i8* %1964, i64 %1976
  %1978 = add i64 %1976, %1966
  call void @saa_free(%struct.SAA* %1974) #13
  %1979 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1967, i64 0, i32 5
  %1980 = load %struct.sectlist*, %struct.sectlist** %1979, align 8
  %1981 = add nuw nsw i32 %1965, 1
  %1982 = load i32, i32* @dwarf_nsections, align 4
  %1983 = icmp slt i32 %1981, %1982
  br i1 %1983, label %1963, label %2012

1984:                                             ; preds = %1958
  %1985 = icmp eq %struct.ofmt* %1932, @of_elf64
  br i1 %1985, label %1986, label %1989, !prof !6

1986:                                             ; preds = %1984
  %1987 = load i32, i32* @dwarf_nsections, align 4
  %1988 = icmp sgt i32 %1987, 0
  br i1 %1988, label %1990, label %2012

1989:                                             ; preds = %1984
  call void @nasm_assert_failed(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.33, i64 0, i64 0), i32 3507, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.112, i64 0, i64 0)) #14
  unreachable

1990:                                             ; preds = %1986, %1990
  %1991 = phi i8* [ %2005, %1990 ], [ %1928, %1986 ]
  %1992 = phi i32 [ %2009, %1990 ], [ 0, %1986 ]
  %1993 = phi i64 [ %2006, %1990 ], [ %1929, %1986 ]
  %1994 = phi %struct.sectlist* [ %2008, %1990 ], [ %1931, %1986 ]
  call void @saa_write64(%struct.SAA* %1930, i64 %1993) #13
  %1995 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1994, i64 0, i32 1
  %1996 = load i32, i32* %1995, align 8
  %1997 = add nsw i32 %1996, 2
  %1998 = zext i32 %1997 to i64
  %1999 = shl nuw i64 %1998, 32
  %2000 = or i64 %1999, 1
  call void @saa_write64(%struct.SAA* %1930, i64 %2000) #13
  call void @saa_write64(%struct.SAA* %1930, i64 0) #13
  %2001 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1994, i64 0, i32 0
  %2002 = load %struct.SAA*, %struct.SAA** %2001, align 8
  %2003 = getelementptr inbounds %struct.SAA, %struct.SAA* %2002, i64 0, i32 5
  %2004 = load i64, i64* %2003, align 8
  call void @saa_rnbytes(%struct.SAA* %2002, i8* %1991, i64 %2004) #13
  %2005 = getelementptr inbounds i8, i8* %1991, i64 %2004
  %2006 = add i64 %2004, %1993
  call void @saa_free(%struct.SAA* %2002) #13
  %2007 = getelementptr inbounds %struct.sectlist, %struct.sectlist* %1994, i64 0, i32 5
  %2008 = load %struct.sectlist*, %struct.sectlist** %2007, align 8
  %2009 = add nuw nsw i32 %1992, 1
  %2010 = load i32, i32* @dwarf_nsections, align 4
  %2011 = icmp slt i32 %2009, %2010
  br i1 %2011, label %1990, label %2012

2012:                                             ; preds = %1990, %1963, %1937, %1934, %1960, %1986
  %2013 = getelementptr inbounds %struct.SAA, %struct.SAA* %1930, i64 0, i32 5
  %2014 = load i64, i64* %2013, align 8
  %2015 = trunc i64 %2014 to i32
  store i32 %2015, i32* @linerellen, align 4
  %2016 = shl i64 %2014, 32
  %2017 = ashr exact i64 %2016, 32
  %2018 = call noalias i8* @nasm_malloc(i64 %2017) #15
  store i8* %2018, i8** @linerelbuf, align 8
  call void @saa_rnbytes(%struct.SAA* %1930, i8* %2018, i64 %2014) #13
  call void @saa_free(%struct.SAA* %1930) #13
  br label %2019

2019:                                             ; preds = %1450, %2012
  %2020 = load i64, i64* bitcast (i8** @shstrtab to i64*), align 8
  %2021 = ptrtoint i8* %891 to i64
  %2022 = sub i64 %2021, %2020
  %2023 = trunc i64 %2022 to i32
  %2024 = load i8*, i8** @arangesbuf, align 8
  %2025 = load i32, i32* @arangeslen, align 4
  %2026 = sext i32 %2025 to i64
  call fastcc void @elf_section_header(i32 %2023, i32 1, i64 0, i8* %2024, i1 zeroext false, i64 %2026, i32 0, i32 0, i64 1, i64 0)
  %2027 = call i64 @strlen(i8* %891) #16
  %2028 = add i64 %2027, 1
  %2029 = getelementptr inbounds i8, i8* %891, i64 %2028
  %2030 = load i64, i64* bitcast (i8** @shstrtab to i64*), align 8
  %2031 = ptrtoint i8* %2029 to i64
  %2032 = sub i64 %2031, %2030
  %2033 = trunc i64 %2032 to i32
  %2034 = load i8*, i8** @arangesrelbuf, align 8
  %2035 = load i32, i32* @arangesrellen, align 4
  %2036 = sext i32 %2035 to i64
  %2037 = load i32, i32* @sec_debug, align 4
  %2038 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %2039 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %2038, i64 0, i32 0
  %2040 = load i64, i64* %2039, align 8
  %2041 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %2038, i64 0, i32 5
  %2042 = load i64, i64* %2041, align 8
  call fastcc void @elf_section_header(i32 %2033, i32 4, i64 0, i8* %2034, i1 zeroext false, i64 %2036, i32 %406, i32 %2037, i64 %2040, i64 %2042)
  %2043 = call i64 @strlen(i8* %2029) #16
  %2044 = add i64 %2043, 1
  %2045 = getelementptr inbounds i8, i8* %2029, i64 %2044
  %2046 = load i64, i64* bitcast (i8** @shstrtab to i64*), align 8
  %2047 = ptrtoint i8* %2045 to i64
  %2048 = sub i64 %2047, %2046
  %2049 = trunc i64 %2048 to i32
  %2050 = load %struct.ELF_SECTDATA*, %struct.ELF_SECTDATA** @elf_sects, align 8
  %2051 = load i32, i32* @elf_nsect, align 4
  %2052 = sext i32 %2051 to i64
  %2053 = getelementptr inbounds %struct.ELF_SECTDATA, %struct.ELF_SECTDATA* %2050, i64 %2052, i32 0
  %2054 = add nsw i32 %2051, 1
  %2055 = bitcast i8** %2053 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2055, i8 0, i64 17, i1 false)
  store i32 %2054, i32* @elf_nsect, align 4
  %2056 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %2057 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %2056, i64 0, i32 10
  %2058 = load i8, i8* %2057, align 1, !range !3
  %2059 = icmp eq i8 %2058, 0
  br i1 %2059, label %2060, label %2073

2060:                                             ; preds = %2019
  %2061 = bitcast %struct.elf32_shdr* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %2061) #13
  %2062 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %5, i64 0, i32 0
  store i32 %2049, i32* %2062, align 4
  %2063 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %5, i64 0, i32 1
  store i32 1, i32* %2063, align 4
  %2064 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %5, i64 0, i32 2
  store i32 0, i32* %2064, align 4
  %2065 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %5, i64 0, i32 3
  store i32 0, i32* %2065, align 4
  %2066 = load i64, i64* @elf_foffs, align 8
  %2067 = trunc i64 %2066 to i32
  %2068 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %5, i64 0, i32 4
  store i32 %2067, i32* %2068, align 4
  %2069 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %5, i64 0, i32 5
  %2070 = bitcast i32* %2069 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %2070, align 4
  %2071 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %5, i64 0, i32 9
  store i32 0, i32* %2071, align 4
  %2072 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @nasm_write(i8* nonnull %2061, i64 40, %struct._IO_FILE* %2072) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %2061) #13
  br label %2086

2073:                                             ; preds = %2019
  %2074 = bitcast %struct.elf64_shdr* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %2074) #13
  %2075 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %6, i64 0, i32 0
  store i32 %2049, i32* %2075, align 8
  %2076 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %6, i64 0, i32 1
  store i32 1, i32* %2076, align 4
  %2077 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %6, i64 0, i32 2
  %2078 = bitcast i64* %2077 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2078, i8 0, i64 16, i1 false)
  %2079 = load i64, i64* @elf_foffs, align 8
  %2080 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %6, i64 0, i32 4
  store i64 %2079, i64* %2080, align 8
  %2081 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %6, i64 0, i32 5
  %2082 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %6, i64 0, i32 8
  %2083 = bitcast i64* %2081 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2083, i8 0, i64 16, i1 false)
  %2084 = bitcast i64* %2082 to <2 x i64>*
  store <2 x i64> <i64 1, i64 0>, <2 x i64>* %2084, align 8
  %2085 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @nasm_write(i8* nonnull %2074, i64 64, %struct._IO_FILE* %2085) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %2074) #13
  br label %2086

2086:                                             ; preds = %2060, %2073
  %2087 = call i64 @strlen(i8* %2045) #16
  %2088 = add i64 %2087, 1
  %2089 = getelementptr inbounds i8, i8* %2045, i64 %2088
  %2090 = load i64, i64* bitcast (i8** @shstrtab to i64*), align 8
  %2091 = ptrtoint i8* %2089 to i64
  %2092 = sub i64 %2091, %2090
  %2093 = trunc i64 %2092 to i32
  %2094 = load i8*, i8** @infobuf, align 8
  %2095 = load i32, i32* @infolen, align 4
  %2096 = sext i32 %2095 to i64
  call fastcc void @elf_section_header(i32 %2093, i32 1, i64 0, i8* %2094, i1 zeroext false, i64 %2096, i32 0, i32 0, i64 1, i64 0)
  %2097 = call i64 @strlen(i8* %2089) #16
  %2098 = add i64 %2097, 1
  %2099 = getelementptr inbounds i8, i8* %2089, i64 %2098
  %2100 = load i64, i64* bitcast (i8** @shstrtab to i64*), align 8
  %2101 = ptrtoint i8* %2099 to i64
  %2102 = sub i64 %2101, %2100
  %2103 = trunc i64 %2102 to i32
  %2104 = load i8*, i8** @inforelbuf, align 8
  %2105 = load i32, i32* @inforellen, align 4
  %2106 = sext i32 %2105 to i64
  %2107 = load i32, i32* @sec_debug, align 4
  %2108 = add nsw i32 %2107, 3
  %2109 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %2110 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %2109, i64 0, i32 0
  %2111 = load i64, i64* %2110, align 8
  %2112 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %2109, i64 0, i32 5
  %2113 = load i64, i64* %2112, align 8
  call fastcc void @elf_section_header(i32 %2103, i32 4, i64 0, i8* %2104, i1 zeroext false, i64 %2106, i32 %406, i32 %2108, i64 %2111, i64 %2113)
  %2114 = call i64 @strlen(i8* %2099) #16
  %2115 = add i64 %2114, 1
  %2116 = getelementptr inbounds i8, i8* %2099, i64 %2115
  %2117 = load i64, i64* bitcast (i8** @shstrtab to i64*), align 8
  %2118 = ptrtoint i8* %2116 to i64
  %2119 = sub i64 %2118, %2117
  %2120 = trunc i64 %2119 to i32
  %2121 = load i8*, i8** @abbrevbuf, align 8
  %2122 = load i32, i32* @abbrevlen, align 4
  %2123 = sext i32 %2122 to i64
  call fastcc void @elf_section_header(i32 %2120, i32 1, i64 0, i8* %2121, i1 zeroext false, i64 %2123, i32 0, i32 0, i64 1, i64 0)
  %2124 = call i64 @strlen(i8* %2116) #16
  %2125 = add i64 %2124, 1
  %2126 = getelementptr inbounds i8, i8* %2116, i64 %2125
  %2127 = load i64, i64* bitcast (i8** @shstrtab to i64*), align 8
  %2128 = ptrtoint i8* %2126 to i64
  %2129 = sub i64 %2128, %2127
  %2130 = trunc i64 %2129 to i32
  %2131 = load i8*, i8** @linebuf, align 8
  %2132 = load i32, i32* @linelen, align 4
  %2133 = sext i32 %2132 to i64
  call fastcc void @elf_section_header(i32 %2130, i32 1, i64 0, i8* %2131, i1 zeroext false, i64 %2133, i32 0, i32 0, i64 1, i64 0)
  %2134 = call i64 @strlen(i8* %2126) #16
  %2135 = add i64 %2134, 1
  %2136 = getelementptr inbounds i8, i8* %2126, i64 %2135
  %2137 = load i64, i64* bitcast (i8** @shstrtab to i64*), align 8
  %2138 = ptrtoint i8* %2136 to i64
  %2139 = sub i64 %2138, %2137
  %2140 = trunc i64 %2139 to i32
  %2141 = load i8*, i8** @linerelbuf, align 8
  %2142 = load i32, i32* @linerellen, align 4
  %2143 = sext i32 %2142 to i64
  %2144 = load i32, i32* @sec_debug, align 4
  %2145 = add nsw i32 %2144, 6
  %2146 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %2147 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %2146, i64 0, i32 0
  %2148 = load i64, i64* %2147, align 8
  %2149 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %2146, i64 0, i32 5
  %2150 = load i64, i64* %2149, align 8
  call fastcc void @elf_section_header(i32 %2140, i32 4, i64 0, i8* %2141, i1 zeroext false, i64 %2143, i32 %406, i32 %2145, i64 %2148, i64 %2150)
  %2151 = call i64 @strlen(i8* %2136) #16
  %2152 = add i64 %2151, 1
  %2153 = getelementptr inbounds i8, i8* %2136, i64 %2152
  %2154 = load i64, i64* bitcast (i8** @shstrtab to i64*), align 8
  %2155 = ptrtoint i8* %2153 to i64
  %2156 = sub i64 %2155, %2154
  %2157 = trunc i64 %2156 to i32
  %2158 = load %struct.ELF_SECTDATA*, %struct.ELF_SECTDATA** @elf_sects, align 8
  %2159 = load i32, i32* @elf_nsect, align 4
  %2160 = sext i32 %2159 to i64
  %2161 = getelementptr inbounds %struct.ELF_SECTDATA, %struct.ELF_SECTDATA* %2158, i64 %2160, i32 0
  %2162 = add nsw i32 %2159, 1
  %2163 = bitcast i8** %2161 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2163, i8 0, i64 17, i1 false)
  store i32 %2162, i32* @elf_nsect, align 4
  %2164 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %2165 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %2164, i64 0, i32 10
  %2166 = load i8, i8* %2165, align 1, !range !3
  %2167 = icmp eq i8 %2166, 0
  br i1 %2167, label %2168, label %2181

2168:                                             ; preds = %2086
  %2169 = bitcast %struct.elf32_shdr* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %2169) #13
  %2170 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %3, i64 0, i32 0
  store i32 %2157, i32* %2170, align 4
  %2171 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %3, i64 0, i32 1
  store i32 1, i32* %2171, align 4
  %2172 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %3, i64 0, i32 2
  store i32 0, i32* %2172, align 4
  %2173 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %3, i64 0, i32 3
  store i32 0, i32* %2173, align 4
  %2174 = load i64, i64* @elf_foffs, align 8
  %2175 = trunc i64 %2174 to i32
  %2176 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %3, i64 0, i32 4
  store i32 %2175, i32* %2176, align 4
  %2177 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %3, i64 0, i32 5
  %2178 = bitcast i32* %2177 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 8>, <4 x i32>* %2178, align 4
  %2179 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %3, i64 0, i32 9
  store i32 0, i32* %2179, align 4
  %2180 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @nasm_write(i8* nonnull %2169, i64 40, %struct._IO_FILE* %2180) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %2169) #13
  br label %2194

2181:                                             ; preds = %2086
  %2182 = bitcast %struct.elf64_shdr* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %2182) #13
  %2183 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %4, i64 0, i32 0
  store i32 %2157, i32* %2183, align 8
  %2184 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %4, i64 0, i32 1
  store i32 1, i32* %2184, align 4
  %2185 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %4, i64 0, i32 2
  %2186 = bitcast i64* %2185 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2186, i8 0, i64 16, i1 false)
  %2187 = load i64, i64* @elf_foffs, align 8
  %2188 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %4, i64 0, i32 4
  store i64 %2187, i64* %2188, align 8
  %2189 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %4, i64 0, i32 5
  %2190 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %4, i64 0, i32 8
  %2191 = bitcast i64* %2189 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2191, i8 0, i64 16, i1 false)
  %2192 = bitcast i64* %2190 to <2 x i64>*
  store <2 x i64> <i64 8, i64 0>, <2 x i64>* %2192, align 8
  %2193 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @nasm_write(i8* nonnull %2182, i64 64, %struct._IO_FILE* %2193) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %2182) #13
  br label %2194

2194:                                             ; preds = %2168, %2181
  %2195 = call i64 @strlen(i8* %2153) #16
  %2196 = add i64 %2195, 1
  %2197 = getelementptr inbounds i8, i8* %2153, i64 %2196
  %2198 = load i64, i64* bitcast (i8** @shstrtab to i64*), align 8
  %2199 = ptrtoint i8* %2197 to i64
  %2200 = sub i64 %2199, %2198
  %2201 = trunc i64 %2200 to i32
  %2202 = load %struct.ELF_SECTDATA*, %struct.ELF_SECTDATA** @elf_sects, align 8
  %2203 = load i32, i32* @elf_nsect, align 4
  %2204 = sext i32 %2203 to i64
  %2205 = getelementptr inbounds %struct.ELF_SECTDATA, %struct.ELF_SECTDATA* %2202, i64 %2204, i32 0
  %2206 = add nsw i32 %2203, 1
  %2207 = bitcast i8** %2205 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2207, i8 0, i64 17, i1 false)
  store i32 %2206, i32* @elf_nsect, align 4
  %2208 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %2209 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %2208, i64 0, i32 10
  %2210 = load i8, i8* %2209, align 1, !range !3
  %2211 = icmp eq i8 %2210, 0
  br i1 %2211, label %2212, label %2225

2212:                                             ; preds = %2194
  %2213 = bitcast %struct.elf32_shdr* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %2213) #13
  %2214 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %1, i64 0, i32 0
  store i32 %2201, i32* %2214, align 4
  %2215 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %1, i64 0, i32 1
  store i32 1, i32* %2215, align 4
  %2216 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %1, i64 0, i32 2
  store i32 0, i32* %2216, align 4
  %2217 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %1, i64 0, i32 3
  store i32 0, i32* %2217, align 4
  %2218 = load i64, i64* @elf_foffs, align 8
  %2219 = trunc i64 %2218 to i32
  %2220 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %1, i64 0, i32 4
  store i32 %2219, i32* %2220, align 4
  %2221 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %1, i64 0, i32 5
  %2222 = bitcast i32* %2221 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %2222, align 4
  %2223 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %1, i64 0, i32 9
  store i32 0, i32* %2223, align 4
  %2224 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @nasm_write(i8* nonnull %2213, i64 40, %struct._IO_FILE* %2224) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %2213) #13
  br label %2238

2225:                                             ; preds = %2194
  %2226 = bitcast %struct.elf64_shdr* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %2226) #13
  %2227 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %2, i64 0, i32 0
  store i32 %2201, i32* %2227, align 8
  %2228 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %2, i64 0, i32 1
  store i32 1, i32* %2228, align 4
  %2229 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %2, i64 0, i32 2
  %2230 = bitcast i64* %2229 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2230, i8 0, i64 16, i1 false)
  %2231 = load i64, i64* @elf_foffs, align 8
  %2232 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %2, i64 0, i32 4
  store i64 %2231, i64* %2232, align 8
  %2233 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %2, i64 0, i32 5
  %2234 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %2, i64 0, i32 8
  %2235 = bitcast i64* %2233 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2235, i8 0, i64 16, i1 false)
  %2236 = bitcast i64* %2234 to <2 x i64>*
  store <2 x i64> <i64 1, i64 0>, <2 x i64>* %2236, align 8
  %2237 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @nasm_write(i8* nonnull %2226, i64 64, %struct._IO_FILE* %2237) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %2226) #13
  br label %2238

2238:                                             ; preds = %2212, %2225
  %2239 = call i64 @strlen(i8* %2197) #16
  %2240 = add i64 %2239, 1
  %2241 = getelementptr inbounds i8, i8* %2197, i64 %2240
  br label %2242

2242:                                             ; preds = %1444, %2238, %1376, %1401
  %2243 = phi i8* [ %1443, %1401 ], [ %891, %1376 ], [ %2241, %2238 ], [ %891, %1444 ]
  %2244 = load i8*, i8** @shstrtab, align 8
  %2245 = ptrtoint i8* %2243 to i64
  %2246 = ptrtoint i8* %2244 to i64
  %2247 = sub i64 %2245, %2246
  %2248 = trunc i64 %2247 to i32
  %2249 = load i32, i32* @shstrtablen, align 4
  %2250 = sext i32 %2249 to i64
  call fastcc void @elf_section_header(i32 %2248, i32 3, i64 0, i8* %2244, i1 zeroext false, i64 %2250, i32 0, i32 0, i64 1, i64 0)
  %2251 = call i64 @strlen(i8* %2243) #16
  %2252 = add i64 %2251, 1
  %2253 = getelementptr inbounds i8, i8* %2243, i64 %2252
  %2254 = load i64, i64* bitcast (i8** @shstrtab to i64*), align 8
  %2255 = ptrtoint i8* %2253 to i64
  %2256 = sub i64 %2255, %2254
  %2257 = trunc i64 %2256 to i32
  %2258 = load %struct.SAA*, %struct.SAA** @symtab, align 8
  %2259 = bitcast %struct.SAA* %2258 to i8*
  %2260 = getelementptr inbounds %struct.SAA, %struct.SAA* %2258, i64 0, i32 5
  %2261 = load i64, i64* %2260, align 8
  %2262 = trunc i64 %605 to i32
  %2263 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %2264 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %2263, i64 0, i32 0
  %2265 = load i64, i64* %2264, align 8
  %2266 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %2263, i64 0, i32 3
  %2267 = load i64, i64* %2266, align 8
  call fastcc void @elf_section_header(i32 %2257, i32 2, i64 0, i8* %2259, i1 zeroext true, i64 %2261, i32 %430, i32 %2262, i64 %2265, i64 %2267)
  %2268 = call i64 @strlen(i8* %2253) #16
  %2269 = add i64 %2268, 1
  %2270 = getelementptr inbounds i8, i8* %2253, i64 %2269
  %2271 = load i64, i64* bitcast (i8** @shstrtab to i64*), align 8
  %2272 = ptrtoint i8* %2270 to i64
  %2273 = sub i64 %2272, %2271
  %2274 = trunc i64 %2273 to i32
  %2275 = load i8*, i8** bitcast (%struct.SAA** @strs to i8**), align 8
  %2276 = load i32, i32* @strslen, align 4
  %2277 = zext i32 %2276 to i64
  call fastcc void @elf_section_header(i32 %2274, i32 3, i64 0, i8* %2275, i1 zeroext true, i64 %2277, i32 0, i32 0, i64 1, i64 0)
  %2278 = call i64 @strlen(i8* %2270) #16
  %2279 = add i64 %2278, 1
  %2280 = getelementptr inbounds i8, i8* %2270, i64 %2279
  %2281 = load %struct.SAA*, %struct.SAA** @symtab_shndx, align 8
  %2282 = icmp eq %struct.SAA* %2281, null
  br i1 %2282, label %2294, label %2283

2283:                                             ; preds = %2242
  %2284 = load i64, i64* bitcast (i8** @shstrtab to i64*), align 8
  %2285 = ptrtoint i8* %2280 to i64
  %2286 = sub i64 %2285, %2284
  %2287 = trunc i64 %2286 to i32
  %2288 = bitcast %struct.SAA* %2281 to i8*
  %2289 = getelementptr inbounds %struct.SAA, %struct.SAA* %2281, i64 0, i32 5
  %2290 = load i64, i64* %2289, align 8
  call fastcc void @elf_section_header(i32 %2287, i32 18, i64 0, i8* nonnull %2288, i1 zeroext true, i64 %2290, i32 %406, i32 0, i64 1, i64 0)
  %2291 = call i64 @strlen(i8* %2280) #16
  %2292 = add i64 %2291, 1
  %2293 = getelementptr inbounds i8, i8* %2280, i64 %2292
  br label %2294

2294:                                             ; preds = %2242, %2283
  %2295 = phi i8* [ %2293, %2283 ], [ %2280, %2242 ]
  %2296 = load i32, i32* @nsects, align 4
  %2297 = icmp sgt i32 %2296, 0
  br i1 %2297, label %2298, label %2335

2298:                                             ; preds = %2294, %2329
  %2299 = phi i32 [ %2330, %2329 ], [ %2296, %2294 ]
  %2300 = phi i64 [ %2332, %2329 ], [ 0, %2294 ]
  %2301 = phi i8* [ %2331, %2329 ], [ %2295, %2294 ]
  %2302 = load %struct.elf_section**, %struct.elf_section*** @sects, align 8
  %2303 = getelementptr inbounds %struct.elf_section*, %struct.elf_section** %2302, i64 %2300
  %2304 = load %struct.elf_section*, %struct.elf_section** %2303, align 8
  %2305 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %2304, i64 0, i32 12
  %2306 = load %struct.SAA*, %struct.SAA** %2305, align 8
  %2307 = icmp eq %struct.SAA* %2306, null
  br i1 %2307, label %2329, label %2308

2308:                                             ; preds = %2298
  %2309 = load i64, i64* bitcast (i8** @shstrtab to i64*), align 8
  %2310 = ptrtoint i8* %2301 to i64
  %2311 = sub i64 %2310, %2309
  %2312 = trunc i64 %2311 to i32
  %2313 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %2314 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %2313, i64 0, i32 7
  %2315 = load i32, i32* %2314, align 8
  %2316 = bitcast %struct.SAA* %2306 to i8*
  %2317 = getelementptr inbounds %struct.SAA, %struct.SAA* %2306, i64 0, i32 5
  %2318 = load i64, i64* %2317, align 8
  %2319 = getelementptr inbounds %struct.elf_section, %struct.elf_section* %2304, i64 0, i32 5
  %2320 = load i32, i32* %2319, align 4
  %2321 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %2313, i64 0, i32 0
  %2322 = load i64, i64* %2321, align 8
  %2323 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %2313, i64 0, i32 4
  %2324 = load i64, i64* %2323, align 8
  call fastcc void @elf_section_header(i32 %2312, i32 %2315, i64 0, i8* nonnull %2316, i1 zeroext true, i64 %2318, i32 %406, i32 %2320, i64 %2322, i64 %2324)
  %2325 = call i64 @strlen(i8* %2301) #16
  %2326 = add i64 %2325, 1
  %2327 = getelementptr inbounds i8, i8* %2301, i64 %2326
  %2328 = load i32, i32* @nsects, align 4
  br label %2329

2329:                                             ; preds = %2298, %2308
  %2330 = phi i32 [ %2328, %2308 ], [ %2299, %2298 ]
  %2331 = phi i8* [ %2327, %2308 ], [ %2301, %2298 ]
  %2332 = add nuw nsw i64 %2300, 1
  %2333 = sext i32 %2330 to i64
  %2334 = icmp slt i64 %2332, %2333
  br i1 %2334, label %2298, label %2335

2335:                                             ; preds = %2329, %2294
  %2336 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwritezero(i64 %814, %struct._IO_FILE* %2336) #13
  %2337 = load i32, i32* @elf_nsect, align 4
  %2338 = icmp sgt i32 %2337, 0
  br i1 %2338, label %2339, label %2372

2339:                                             ; preds = %2335, %2367
  %2340 = phi i32 [ %2368, %2367 ], [ %2337, %2335 ]
  %2341 = phi i64 [ %2369, %2367 ], [ 0, %2335 ]
  %2342 = load %struct.ELF_SECTDATA*, %struct.ELF_SECTDATA** @elf_sects, align 8
  %2343 = getelementptr inbounds %struct.ELF_SECTDATA, %struct.ELF_SECTDATA* %2342, i64 %2341, i32 0
  %2344 = load i8*, i8** %2343, align 8
  %2345 = icmp eq i8* %2344, null
  br i1 %2345, label %2367, label %2346

2346:                                             ; preds = %2339
  %2347 = getelementptr inbounds %struct.ELF_SECTDATA, %struct.ELF_SECTDATA* %2342, i64 %2341, i32 1
  %2348 = load i64, i64* %2347, align 8
  %2349 = add i64 %2348, 15
  %2350 = and i64 %2349, 4294967280
  %2351 = sub i64 %2350, %2348
  %2352 = getelementptr inbounds %struct.ELF_SECTDATA, %struct.ELF_SECTDATA* %2342, i64 %2341, i32 2
  %2353 = load i8, i8* %2352, align 8, !range !3
  %2354 = icmp eq i8 %2353, 0
  br i1 %2354, label %2358, label %2355

2355:                                             ; preds = %2346
  %2356 = bitcast i8* %2344 to %struct.SAA*
  %2357 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @saa_fpwrite(%struct.SAA* nonnull %2356, %struct._IO_FILE* %2357) #13
  br label %2362

2358:                                             ; preds = %2346
  %2359 = shl i64 %2348, 32
  %2360 = ashr exact i64 %2359, 32
  %2361 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @nasm_write(i8* nonnull %2344, i64 %2360, %struct._IO_FILE* %2361) #13
  br label %2362

2362:                                             ; preds = %2358, %2355
  %2363 = shl i64 %2351, 32
  %2364 = ashr exact i64 %2363, 32
  %2365 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwritezero(i64 %2364, %struct._IO_FILE* %2365) #13
  %2366 = load i32, i32* @elf_nsect, align 4
  br label %2367

2367:                                             ; preds = %2362, %2339
  %2368 = phi i32 [ %2340, %2339 ], [ %2366, %2362 ]
  %2369 = add nuw nsw i64 %2341, 1
  %2370 = sext i32 %2368 to i64
  %2371 = icmp slt i64 %2369, %2370
  br i1 %2371, label %2339, label %2372

2372:                                             ; preds = %2367, %2335
  %2373 = load i8*, i8** bitcast (%struct.ELF_SECTDATA** @elf_sects to i8**), align 8
  call void @nasm_free(i8* %2373) #13
  %2374 = load %struct.SAA*, %struct.SAA** @symtab, align 8
  call void @saa_free(%struct.SAA* %2374) #13
  %2375 = load %struct.SAA*, %struct.SAA** @symtab_shndx, align 8
  %2376 = icmp eq %struct.SAA* %2375, null
  br i1 %2376, label %2378, label %2377

2377:                                             ; preds = %2372
  call void @saa_free(%struct.SAA* nonnull %2375) #13
  br label %2378

2378:                                             ; preds = %2372, %2377
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %11) #13
  ret void
}

declare void @saa_free(%struct.SAA*) local_unnamed_addr #1

declare void @hash_free(%struct.hash_table*) local_unnamed_addr #1

declare void @raa_free(%struct.RAA*) local_unnamed_addr #1

declare void @nasm_write(i8*, i64, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @elf_section_header(i32, i32, i64, i8*, i1 zeroext, i64, i32, i32, i64, i64) unnamed_addr #0 {
  %11 = alloca %struct.elf32_shdr, align 4
  %12 = alloca %struct.elf64_shdr, align 8
  %13 = zext i1 %4 to i8
  %14 = load %struct.ELF_SECTDATA*, %struct.ELF_SECTDATA** @elf_sects, align 8
  %15 = load i32, i32* @elf_nsect, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.ELF_SECTDATA, %struct.ELF_SECTDATA* %14, i64 %16, i32 0
  store i8* %3, i8** %17, align 8
  %18 = getelementptr inbounds %struct.ELF_SECTDATA, %struct.ELF_SECTDATA* %14, i64 %16, i32 1
  store i64 %5, i64* %18, align 8
  %19 = getelementptr inbounds %struct.ELF_SECTDATA, %struct.ELF_SECTDATA* %14, i64 %16, i32 2
  store i8 %13, i8* %19, align 8
  %20 = add nsw i32 %15, 1
  store i32 %20, i32* @elf_nsect, align 4
  %21 = load %struct.elf_format_info*, %struct.elf_format_info** @efmt, align 8
  %22 = getelementptr inbounds %struct.elf_format_info, %struct.elf_format_info* %21, i64 0, i32 10
  %23 = load i8, i8* %22, align 1, !range !3
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %54

25:                                               ; preds = %10
  %26 = bitcast %struct.elf32_shdr* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %26) #13
  %27 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %11, i64 0, i32 6
  %28 = bitcast i32* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %28, i8 -86, i64 16, i1 false)
  %29 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %11, i64 0, i32 0
  store i32 %0, i32* %29, align 4
  %30 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %11, i64 0, i32 1
  store i32 %1, i32* %30, align 4
  %31 = trunc i64 %2 to i32
  %32 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %11, i64 0, i32 2
  store i32 %31, i32* %32, align 4
  %33 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %11, i64 0, i32 3
  store i32 0, i32* %33, align 4
  %34 = icmp eq i32 %1, 0
  %35 = load i64, i64* @elf_foffs, align 8
  %36 = trunc i64 %35 to i32
  %37 = select i1 %34, i32 0, i32 %36
  %38 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %11, i64 0, i32 4
  store i32 %37, i32* %38, align 4
  %39 = trunc i64 %5 to i32
  %40 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %11, i64 0, i32 5
  store i32 %39, i32* %40, align 4
  %41 = icmp eq i8* %3, null
  br i1 %41, label %46, label %42

42:                                               ; preds = %25
  %43 = add i64 %5, 15
  %44 = and i64 %43, -16
  %45 = add i64 %35, %44
  store i64 %45, i64* @elf_foffs, align 8
  br label %46

46:                                               ; preds = %25, %42
  %47 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %11, i64 0, i32 6
  store i32 %6, i32* %47, align 4
  %48 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %11, i64 0, i32 7
  store i32 %7, i32* %48, align 4
  %49 = trunc i64 %8 to i32
  %50 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %11, i64 0, i32 8
  store i32 %49, i32* %50, align 4
  %51 = trunc i64 %9 to i32
  %52 = getelementptr inbounds %struct.elf32_shdr, %struct.elf32_shdr* %11, i64 0, i32 9
  store i32 %51, i32* %52, align 4
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @nasm_write(i8* nonnull %26, i64 40, %struct._IO_FILE* %53) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %26) #13
  br label %78

54:                                               ; preds = %10
  %55 = bitcast %struct.elf64_shdr* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %55) #13
  %56 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %12, i64 0, i32 6
  %57 = bitcast i32* %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 24, i1 false)
  %58 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %12, i64 0, i32 0
  store i32 %0, i32* %58, align 8
  %59 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %12, i64 0, i32 1
  store i32 %1, i32* %59, align 4
  %60 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %12, i64 0, i32 2
  store i64 %2, i64* %60, align 8
  %61 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %12, i64 0, i32 3
  store i64 0, i64* %61, align 8
  %62 = icmp eq i32 %1, 0
  %63 = load i64, i64* @elf_foffs, align 8
  %64 = select i1 %62, i64 0, i64 %63
  %65 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %12, i64 0, i32 4
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %12, i64 0, i32 5
  store i64 %5, i64* %66, align 8
  %67 = icmp eq i8* %3, null
  br i1 %67, label %72, label %68

68:                                               ; preds = %54
  %69 = add i64 %5, 15
  %70 = and i64 %69, -16
  %71 = add i64 %63, %70
  store i64 %71, i64* @elf_foffs, align 8
  br label %72

72:                                               ; preds = %54, %68
  %73 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %12, i64 0, i32 6
  store i32 %6, i32* %73, align 8
  %74 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %12, i64 0, i32 7
  store i32 %7, i32* %74, align 4
  %75 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %12, i64 0, i32 8
  store i64 %8, i64* %75, align 8
  %76 = getelementptr inbounds %struct.elf64_shdr, %struct.elf64_shdr* %12, i64 0, i32 9
  store i64 %9, i64* %76, align 8
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @nasm_write(i8* nonnull %55, i64 64, %struct._IO_FILE* %77) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %55) #13
  br label %78

78:                                               ; preds = %72, %46
  ret void
}

declare void @fwritezero(i64, %struct._IO_FILE*) local_unnamed_addr #1

declare void @saa_rewind(%struct.SAA*) local_unnamed_addr #1

declare i8* @saa_rstruct(%struct.SAA*) local_unnamed_addr #1

declare void @saa_write16(%struct.SAA*, i16 zeroext) local_unnamed_addr #1

declare void @saa_rnbytes(%struct.SAA*, i8*, i64) local_unnamed_addr #1

declare i8* @nasm_signature() local_unnamed_addr #1

declare i64 @nasm_signature_len() local_unnamed_addr #1

declare void @saa_fpwrite(%struct.SAA*, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @dwarf64_init() #8 {
  store %struct.dwarf_format* @dwarf64_init.dwfmt64, %struct.dwarf_format** @dwfmt, align 8
  store i1 true, i1* @ndebugs, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @elf64_sym(%struct.elf_symbol* nocapture readonly) #0 {
  %2 = alloca %struct.elf64_sym, align 8
  %3 = bitcast %struct.elf64_sym* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #13
  %4 = getelementptr inbounds %struct.elf64_sym, %struct.elf64_sym* %2, i64 0, i32 0
  %5 = getelementptr inbounds %struct.elf64_sym, %struct.elf64_sym* %2, i64 0, i32 1
  %6 = getelementptr inbounds %struct.elf64_sym, %struct.elf64_sym* %2, i64 0, i32 2
  %7 = getelementptr inbounds %struct.elf64_sym, %struct.elf64_sym* %2, i64 0, i32 3
  %8 = getelementptr inbounds %struct.elf64_sym, %struct.elf64_sym* %2, i64 0, i32 4
  %9 = getelementptr inbounds %struct.elf64_sym, %struct.elf64_sym* %2, i64 0, i32 5
  %10 = getelementptr inbounds %struct.elf_symbol, %struct.elf_symbol* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  store i32 %11, i32* %4, align 8
  %12 = getelementptr inbounds %struct.elf_symbol, %struct.elf_symbol* %0, i64 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %8, align 8
  %14 = getelementptr inbounds %struct.elf_symbol, %struct.elf_symbol* %0, i64 0, i32 5
  %15 = load i32, i32* %14, align 8
  %16 = sext i32 %15 to i64
  store i64 %16, i64* %9, align 8
  %17 = getelementptr inbounds %struct.elf_symbol, %struct.elf_symbol* %0, i64 0, i32 3
  %18 = load i32, i32* %17, align 8
  %19 = trunc i32 %18 to i8
  store i8 %19, i8* %5, align 4
  %20 = getelementptr inbounds %struct.elf_symbol, %struct.elf_symbol* %0, i64 0, i32 4
  %21 = load i32, i32* %20, align 4
  %22 = trunc i32 %21 to i8
  store i8 %22, i8* %6, align 1
  %23 = getelementptr inbounds %struct.elf_symbol, %struct.elf_symbol* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %24, 65280
  %26 = select i1 %25, i32 %24, i32 65535
  %27 = trunc i32 %26 to i16
  store i16 %27, i16* %7, align 2
  %28 = load %struct.SAA*, %struct.SAA** @symtab, align 8
  call void @saa_wbytes(%struct.SAA* %28, i8* nonnull %3, i64 24) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %struct.SAA* @elf64_build_reltab(%struct.elf_reloc* readonly) #0 {
  %2 = alloca %struct.elf64_rela, align 8
  %3 = bitcast %struct.elf64_rela* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #13
  %4 = getelementptr inbounds %struct.elf64_rela, %struct.elf64_rela* %2, i64 0, i32 0
  %5 = getelementptr inbounds %struct.elf64_rela, %struct.elf64_rela* %2, i64 0, i32 1
  %6 = getelementptr inbounds %struct.elf64_rela, %struct.elf64_rela* %2, i64 0, i32 2
  %7 = icmp eq %struct.elf_reloc* %0, null
  %8 = bitcast %struct.elf64_rela* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  br i1 %7, label %39, label %9

9:                                                ; preds = %1
  %10 = tail call %struct.SAA* @saa_init(i64 1) #13
  %11 = load i32, i32* @nsects, align 4
  %12 = load i32, i32* @nlocals, align 4
  %13 = load i1, i1* @ndebugs, align 4
  %14 = select i1 %13, i32 3, i32 0
  %15 = add i32 %11, -1073741822
  %16 = add i32 %15, %12
  %17 = add i32 %16, %14
  br label %18

18:                                               ; preds = %9, %18
  %19 = phi %struct.elf_reloc* [ %0, %9 ], [ %37, %18 ]
  %20 = getelementptr inbounds %struct.elf_reloc, %struct.elf_reloc* %19, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = trunc i64 %21 to i32
  %23 = icmp sgt i32 %22, 1073741823
  %24 = select i1 %23, i32 %17, i32 0
  %25 = add nsw i32 %24, %22
  %26 = getelementptr inbounds %struct.elf_reloc, %struct.elf_reloc* %19, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %4, align 8
  %28 = zext i32 %25 to i64
  %29 = shl nuw i64 %28, 32
  %30 = getelementptr inbounds %struct.elf_reloc, %struct.elf_reloc* %19, i64 0, i32 4
  %31 = load i32, i32* %30, align 8
  %32 = zext i32 %31 to i64
  %33 = or i64 %29, %32
  store i64 %33, i64* %5, align 8
  %34 = getelementptr inbounds %struct.elf_reloc, %struct.elf_reloc* %19, i64 0, i32 3
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %6, align 8
  call void @saa_wbytes(%struct.SAA* %10, i8* nonnull %3, i64 24) #13
  %36 = getelementptr inbounds %struct.elf_reloc, %struct.elf_reloc* %19, i64 0, i32 0
  %37 = load %struct.elf_reloc*, %struct.elf_reloc** %36, align 8
  %38 = icmp eq %struct.elf_reloc* %37, null
  br i1 %38, label %39, label %18

39:                                               ; preds = %18, %1
  %40 = phi %struct.SAA* [ null, %1 ], [ %10, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #13
  ret %struct.SAA* %40
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @dwarfx32_init() #8 {
  store %struct.dwarf_format* @dwarfx32_init.dwfmtx32, %struct.dwarf_format** @dwfmt, align 8
  store i1 true, i1* @ndebugs, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %struct.SAA* @elfx32_build_reltab(%struct.elf_reloc* readonly) #0 {
  %2 = alloca %struct.elf32_rela, align 4
  %3 = bitcast %struct.elf32_rela* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %3) #13
  %4 = getelementptr inbounds %struct.elf32_rela, %struct.elf32_rela* %2, i64 0, i32 0
  store i32 -1431655766, i32* %4, align 4
  %5 = getelementptr inbounds %struct.elf32_rela, %struct.elf32_rela* %2, i64 0, i32 1
  store i32 -1431655766, i32* %5, align 4
  %6 = getelementptr inbounds %struct.elf32_rela, %struct.elf32_rela* %2, i64 0, i32 2
  store i32 -1431655766, i32* %6, align 4
  %7 = icmp eq %struct.elf_reloc* %0, null
  br i1 %7, label %39, label %8

8:                                                ; preds = %1
  %9 = tail call %struct.SAA* @saa_init(i64 1) #13
  %10 = load i32, i32* @nsects, align 4
  %11 = load i32, i32* @nlocals, align 4
  %12 = load i1, i1* @ndebugs, align 4
  %13 = select i1 %12, i32 3, i32 0
  %14 = add i32 %10, 2
  %15 = add i32 %14, %11
  %16 = add i32 %15, %13
  br label %17

17:                                               ; preds = %8, %17
  %18 = phi %struct.elf_reloc* [ %0, %8 ], [ %37, %17 ]
  %19 = getelementptr inbounds %struct.elf_reloc, %struct.elf_reloc* %18, i64 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = trunc i64 %20 to i32
  %22 = icmp sgt i32 %21, 1073741823
  %23 = select i1 %22, i32 %16, i32 0
  %24 = add i32 %23, %21
  %25 = getelementptr inbounds %struct.elf_reloc, %struct.elf_reloc* %18, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  store i32 %27, i32* %4, align 4
  %28 = shl i32 %24, 8
  %29 = getelementptr inbounds %struct.elf_reloc, %struct.elf_reloc* %18, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 255
  %32 = or i32 %28, %31
  store i32 %32, i32* %5, align 4
  %33 = getelementptr inbounds %struct.elf_reloc, %struct.elf_reloc* %18, i64 0, i32 3
  %34 = load i64, i64* %33, align 8
  %35 = trunc i64 %34 to i32
  store i32 %35, i32* %6, align 4
  call void @saa_wbytes(%struct.SAA* %9, i8* nonnull %3, i64 12) #13
  %36 = getelementptr inbounds %struct.elf_reloc, %struct.elf_reloc* %18, i64 0, i32 0
  %37 = load %struct.elf_reloc*, %struct.elf_reloc** %36, align 8
  %38 = icmp eq %struct.elf_reloc* %37, null
  br i1 %38, label %39, label %17

39:                                               ; preds = %17, %1
  %40 = phi %struct.SAA* [ null, %1 ], [ %9, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %3) #13
  ret %struct.SAA* %40
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #12

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctpop.i32(i32) #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { allocsize(1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { cold noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { nounwind }
attributes #14 = { cold noreturn nounwind }
attributes #15 = { nounwind allocsize(0) }
attributes #16 = { nounwind readonly }
attributes #17 = { nounwind allocsize(1) }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{i64 0, i64 65}
!5 = !{i32 0, i32 33}
!6 = !{!"branch_weights", i32 2000, i32 1}
!7 = !{!"branch_weights", i32 4001, i32 1}
