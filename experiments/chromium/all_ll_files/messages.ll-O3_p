; ModuleID = '../../v8/src/execution/messages.cc'
source_filename = "../../v8/src/execution/messages.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.1291" = type { %"struct.std::__1::__atomic_base.1292" }
%"struct.std::__1::__atomic_base.1292" = type { %"struct.std::__1::__atomic_base.1293" }
%"struct.std::__1::__atomic_base.1293" = type { %"struct.std::__1::__cxx_atomic_impl.1294" }
%"struct.std::__1::__cxx_atomic_impl.1294" = type { %"struct.std::__1::__cxx_atomic_base_impl.1295" }
%"struct.std::__1::__cxx_atomic_base_impl.1295" = type { i32 }
%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.543" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.141", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.21", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.21", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.21", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.21", i64, i64, %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.31", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.148", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.163", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.21", i64, i8, %"struct.std::__1::atomic.21", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.167", %"class.std::__1::vector.167", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.174", %"class.std::__1::unique_ptr.180", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.322", %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.430", %"class.std::__1::unique_ptr.436", %"class.std::__1::unique_ptr.446", %"class.std::__1::unique_ptr.452", %"class.std::__1::unique_ptr.452", %"class.std::__1::unique_ptr.458", %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.470", %"class.std::__1::unique_ptr.476", %"class.std::__1::shared_ptr.482", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.505", %"class.std::__1::unique_ptr.531", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.537", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.550", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.332", i8, [7 x i8], %"class.std::__1::unordered_map.556", %"class.std::__1::unordered_map.582", %"class.std::__1::unordered_map.556", %"class.std::__1::unordered_map.606", %"class.std::__1::vector.634", i8, %"class.std::__1::unique_ptr.641", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.4", %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.18", [4 x i8] }>
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.26", %"struct.std::__1::atomic.26", %"struct.std::__1::atomic.26" }
%"struct.std::__1::atomic.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl.29" }
%"struct.std::__1::__cxx_atomic_impl.29" = type { %"struct.std::__1::__cxx_atomic_base_impl.30" }
%"struct.std::__1::__cxx_atomic_base_impl.30" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.647", %"class.std::__1::unique_ptr.668", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.678", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.866", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.879", void (i32, %"class.v8::SharedArrayBuffer"*, i64, i64, double, %"class.v8::Isolate::AtomicsWaitWakeHandle"*, i8*)*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.889", void (%"class.v8::Context"*, %"class.v8::Module"*, %"class.v8::Object"*)*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.900", %"struct.std::__1::atomic.154", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.975", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.1024"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1035", i32, i8, i8, i32, i32, %"class.std::__1::vector.1041", %"class.std::__1::vector.1041", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1048", i64, %"class.std::__1::unordered_map.1049", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.543", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.162", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1105", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1143", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, %"class.v8::Value"* (%"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Array"*)*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1177", %"class.std::__1::vector.1181", %"class.std::__1::vector.1181", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.1", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.1" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.647" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.141", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.648", %"class.std::__1::unique_ptr.662" }
%"class.std::__1::unique_ptr.648" = type { %"class.std::__1::__compressed_pair.649" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.650" }
%"struct.std::__1::__compressed_pair_elem.650" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.651" }
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.std::__1::unique_ptr.653"*, %"class.std::__1::unique_ptr.653"*, %"class.std::__1::__compressed_pair.654" }
%"class.std::__1::unique_ptr.653" = type { %"class.std::__1::__compressed_pair.1268" }
%"class.std::__1::__compressed_pair.1268" = type { %"struct.std::__1::__compressed_pair_elem.1269" }
%"struct.std::__1::__compressed_pair_elem.1269" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"class.std::__1::unique_ptr.653"* }
%"class.std::__1::unique_ptr.662" = type { %"class.std::__1::__compressed_pair.663" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.668" = type { %"class.std::__1::__compressed_pair.669" }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.670" }
%"struct.std::__1::__compressed_pair_elem.670" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.671", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.671" = type { %"struct.std::__1::__atomic_base.672" }
%"struct.std::__1::__atomic_base.672" = type { %"struct.std::__1::__cxx_atomic_impl.673" }
%"struct.std::__1::__cxx_atomic_impl.673" = type { %"struct.std::__1::__cxx_atomic_base_impl.674" }
%"struct.std::__1::__cxx_atomic_base_impl.674" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.678" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.679", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.679" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.680", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.680" = type { %"class.std::__1::__vector_base.681" }
%"class.std::__1::__vector_base.681" = type { %"class.std::__1::unique_ptr.682"*, %"class.std::__1::unique_ptr.682"*, %"class.std::__1::__compressed_pair.683" }
%"class.std::__1::unique_ptr.682" = type opaque
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"class.std::__1::unique_ptr.682"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.688", %"class.std::__1::unique_ptr.694", %"struct.std::__1::atomic.154", %"class.std::__1::unique_ptr.700", %"class.std::__1::unique_ptr.706", %"class.std::__1::unique_ptr.712", %"class.std::__1::unique_ptr.718", %"class.std::__1::unique_ptr.724", %"class.std::__1::set.730", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.688" = type { %"class.std::__1::__compressed_pair.689" }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem.690" }
%"struct.std::__1::__compressed_pair_elem.690" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.700" = type { %"class.std::__1::__compressed_pair.701" }
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.702" }
%"struct.std::__1::__compressed_pair_elem.702" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.706" = type { %"class.std::__1::__compressed_pair.707" }
%"class.std::__1::__compressed_pair.707" = type { %"struct.std::__1::__compressed_pair_elem.708" }
%"struct.std::__1::__compressed_pair_elem.708" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.712" = type { %"class.std::__1::__compressed_pair.713" }
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.714" }
%"struct.std::__1::__compressed_pair_elem.714" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.718" = type { %"class.std::__1::__compressed_pair.719" }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.720" }
%"struct.std::__1::__compressed_pair_elem.720" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.730" = type { %"class.std::__1::__tree.731" }
%"class.std::__1::__tree.731" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.732", %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.732" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.739" }
%"class.v8::internal::TaggedImpl.739" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.738" }
%"class.v8::internal::TaggedImpl.738" = type { i32 }
%"class.v8::internal::Deoptimizer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::JSFunction", %"class.v8::internal::Code", i32, i8, i64, i32, i8, i32, i32, %"class.v8::internal::FrameDescription"*, i32, %"class.v8::internal::FrameDescription"**, i64, i64, i64, i64, i32, i64, %"class.v8::internal::TranslatedState", %"class.std::__1::vector.776", %"class.std::__1::unique_ptr.783" }
%"class.v8::internal::JSFunction" = type { %"class.v8::internal::JSFunctionOrBoundFunction" }
%"class.v8::internal::JSFunctionOrBoundFunction" = type { %"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" }
%"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Code" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FrameDescription" = type { i64, i32, %"class.v8::internal::RegisterValues", i64, i64, i64, i64, i64, i64, [1 x i64] }
%"class.v8::internal::RegisterValues" = type { [16 x i64], [16 x %"class.v8::internal::Float64"] }
%"class.v8::internal::Float64" = type { i64 }
%"class.v8::internal::TranslatedState" = type <{ i32, [4 x i8], %"class.std::__1::vector.740", %"class.v8::internal::Isolate"*, i64, i32, i32, %"class.std::__1::deque.763", %"class.v8::internal::Handle.775", %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.std::__1::vector.740" = type { %"class.std::__1::__vector_base.741" }
%"class.std::__1::__vector_base.741" = type { %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"*, %"class.std::__1::__compressed_pair.758" }
%"class.v8::internal::TranslatedFrame" = type <{ i32, %"class.v8::internal::BytecodeOffset", %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::Handle.0", i32, i32, i32, [4 x i8], %"class.std::__1::deque", %"class.v8::base::Optional.753", [6 x i8] }>
%"class.v8::internal::BytecodeOffset" = type { i32 }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle.0" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.749" }
%"struct.std::__1::__split_buffer" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.std::__1::__compressed_pair.744" }
%"class.v8::internal::TranslatedValue" = type { i8, i8, %"class.v8::internal::TranslatedState"*, %"class.v8::internal::Handle.742", %union.anon.743 }
%"class.v8::internal::Handle.742" = type { %"class.v8::internal::HandleBase" }
%union.anon.743 = type { %"class.v8::internal::Object" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.745" }
%"struct.std::__1::__compressed_pair_elem.745" = type { %"class.v8::internal::TranslatedValue"** }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::base::Optional.753" = type { %"class.v8::base::internal::OptionalBase.754" }
%"class.v8::base::internal::OptionalBase.754" = type { %"struct.v8::base::internal::OptionalStorage.755" }
%"struct.v8::base::internal::OptionalStorage.755" = type { %"struct.v8::base::internal::OptionalStorageBase.756" }
%"struct.v8::base::internal::OptionalStorageBase.756" = type { i8, %union.anon.757 }
%union.anon.757 = type { i8 }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.v8::internal::TranslatedFrame"* }
%"class.std::__1::deque.763" = type { %"class.std::__1::__deque_base.764" }
%"class.std::__1::__deque_base.764" = type { %"struct.std::__1::__split_buffer.765", i64, %"class.std::__1::__compressed_pair.771" }
%"struct.std::__1::__split_buffer.765" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"class.std::__1::__compressed_pair.766" }
%"struct.v8::internal::TranslatedState::ObjectPosition" = type { i32, i32 }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"** }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::Handle.775" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackVector" = type { %"class.v8::internal::TorqueGeneratedFeedbackVector" }
%"class.v8::internal::TorqueGeneratedFeedbackVector" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FeedbackSlot" = type { i32 }
%"class.std::__1::vector.776" = type { %"class.std::__1::__vector_base.777" }
%"class.std::__1::__vector_base.777" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"class.std::__1::__compressed_pair.778" }
%"struct.v8::internal::Deoptimizer::ValueToMaterialize" = type { i64, %"class.v8::internal::TranslatedFrame::iterator" }
%"class.v8::internal::TranslatedFrame::iterator" = type <{ %"class.std::__1::__deque_iterator", i32, [4 x i8] }>
%"class.std::__1::__deque_iterator" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"* }
%"class.std::__1::__compressed_pair.778" = type { %"struct.std::__1::__compressed_pair_elem.779" }
%"struct.std::__1::__compressed_pair_elem.779" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"* }
%"class.std::__1::unique_ptr.783" = type { %"class.std::__1::__compressed_pair.784" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.785" }
%"struct.std::__1::__compressed_pair_elem.785" = type { %"class.v8::internal::CodeTracer::Scope"* }
%"class.v8::internal::CodeTracer::Scope" = type { %"class.v8::internal::CodeTracer"* }
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.795", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.795" = type { %"class.std::__1::__compressed_pair.796" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.801", %"class.v8::internal::DetachableVector.802", %"class.v8::internal::DetachableVector.801", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.802" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.801" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", %"class.std::__1::unique_ptr.789", %"class.std::__1::unique_ptr.483" }
%"class.std::__1::unique_ptr.789" = type { %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.791" }
%"struct.std::__1::__compressed_pair_elem.791" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.486", %"class.std::__1::set.494" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.486" = type { %"class.std::__1::__tree.487" }
%"class.std::__1::__tree.487" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.488", %"class.std::__1::__compressed_pair.492" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::set.494" = type { %"class.std::__1::__tree.495" }
%"class.std::__1::__tree.495" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.488", %"class.std::__1::__compressed_pair.496" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::InnerPointerToCodeCache" = type { %"class.v8::internal::Isolate"*, [1024 x %"struct.v8::internal::InnerPointerToCodeCache::InnerPointerToCodeCacheEntry"] }
%"struct.v8::internal::InnerPointerToCodeCache::InnerPointerToCodeCacheEntry" = type { i64, %"class.v8::internal::Code", %"class.v8::internal::SafepointEntry" }
%"class.v8::internal::SafepointEntry" = type <{ i32, [4 x i8], i8*, i8*, i32, [4 x i8] }>
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.803", %"class.std::__1::vector.809", %"class.std::__1::unique_ptr.816", %"class.std::__1::vector.823", %"class.std::__1::unique_ptr.830", i64, %"class.std::__1::vector.836", %"class.std::__1::vector.844", %"class.std::__1::vector.852", i8, i8, i32 }
%"class.std::__1::unique_ptr.803" = type { %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.809" = type { %"class.std::__1::__vector_base.810" }
%"class.std::__1::__vector_base.810" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.811" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812" }
%"struct.std::__1::__compressed_pair_elem.812" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.816" = type { %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { %"class.v8::internal::GlobalHandles::NodeSpace.819"* }
%"class.v8::internal::GlobalHandles::NodeSpace.819" = type opaque
%"class.std::__1::vector.823" = type { %"class.std::__1::__vector_base.824" }
%"class.std::__1::__vector_base.824" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.825" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.825" = type { %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.830" = type { %"class.std::__1::__compressed_pair.831" }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.836" = type { %"class.std::__1::__vector_base.837" }
%"class.std::__1::__vector_base.837" = type { %"struct.std::__1::pair.838"*, %"struct.std::__1::pair.838"*, %"class.std::__1::__compressed_pair.839" }
%"struct.std::__1::pair.838" = type opaque
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"struct.std::__1::pair.838"* }
%"class.std::__1::vector.844" = type { %"class.std::__1::__vector_base.845" }
%"class.std::__1::__vector_base.845" = type { %"struct.std::__1::pair.846"*, %"struct.std::__1::pair.846"*, %"class.std::__1::__compressed_pair.847" }
%"struct.std::__1::pair.846" = type opaque
%"class.std::__1::__compressed_pair.847" = type { %"struct.std::__1::__compressed_pair_elem.848" }
%"struct.std::__1::__compressed_pair_elem.848" = type { %"struct.std::__1::pair.846"* }
%"class.std::__1::vector.852" = type { %"class.std::__1::__vector_base.853" }
%"class.std::__1::__vector_base.853" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.854" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.854" = type { %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.859", %"class.std::__1::vector.866" }
%"class.std::__1::vector.859" = type { %"class.std::__1::__vector_base.860" }
%"class.std::__1::__vector_base.860" = type { i64**, i64**, %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.873" }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.866" = type { %"class.std::__1::__vector_base.867" }
%"class.std::__1::__vector_base.867" = type { i32*, i32*, %"class.std::__1::__compressed_pair.868" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.869" }
%"struct.std::__1::__compressed_pair_elem.869" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.879" = type { %"struct.std::__1::__atomic_base.880" }
%"struct.std::__1::__atomic_base.880" = type { %"struct.std::__1::__cxx_atomic_impl.881" }
%"struct.std::__1::__cxx_atomic_impl.881" = type { %"struct.std::__1::__cxx_atomic_base_impl.882" }
%"struct.std::__1::__cxx_atomic_base_impl.882" = type { i32 }
%"class.v8::SharedArrayBuffer" = type { i8 }
%"class.v8::Isolate::AtomicsWaitWakeHandle" = type { i8 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.889" = type { %"struct.std::__1::__atomic_base.890" }
%"struct.std::__1::__atomic_base.890" = type { %"struct.std::__1::__cxx_atomic_impl.891" }
%"struct.std::__1::__cxx_atomic_impl.891" = type { %"struct.std::__1::__cxx_atomic_base_impl.892" }
%"struct.std::__1::__cxx_atomic_base_impl.892" = type { i32 }
%"class.v8::Context" = type { i8 }
%"class.v8::Module" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.894" }
%"class.std::__1::__compressed_pair.894" = type { %"struct.std::__1::__compressed_pair_elem.895" }
%"struct.std::__1::__compressed_pair_elem.895" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.896 }
%union.anon.896 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.900" = type { %"class.std::__1::__hash_table.901" }
%"class.std::__1::__hash_table.901" = type <{ %"class.std::__1::unique_ptr.902", %"class.std::__1::__compressed_pair.912", %"class.std::__1::__compressed_pair.917", %"class.std::__1::__compressed_pair.920", [4 x i8] }>
%"class.std::__1::unique_ptr.902" = type { %"class.std::__1::__compressed_pair.903" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.904", %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.904" = type { %"struct.std::__1::__hash_node_base.905"** }
%"struct.std::__1::__hash_node_base.905" = type { %"struct.std::__1::__hash_node_base.905"* }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"class.std::__1::__bucket_list_deallocator.907" }
%"class.std::__1::__bucket_list_deallocator.907" = type { %"class.std::__1::__compressed_pair.908" }
%"class.std::__1::__compressed_pair.908" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"struct.std::__1::__hash_node_base.905" }
%"class.std::__1::__compressed_pair.917" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::atomic.154" = type { %"struct.std::__1::__atomic_base.155" }
%"struct.std::__1::__atomic_base.155" = type { %"struct.std::__1::__cxx_atomic_impl.156" }
%"struct.std::__1::__cxx_atomic_impl.156" = type { %"struct.std::__1::__cxx_atomic_base_impl.157" }
%"struct.std::__1::__cxx_atomic_base_impl.157" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.926", %"class.v8::internal::Handle.932", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.933", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.926" = type { %"class.std::__1::__compressed_pair.927" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.928" }
%"struct.std::__1::__compressed_pair_elem.928" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.932" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.933" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.934", %"class.std::__1::vector.940", %"class.std::__1::unique_ptr.948", %"class.std::__1::unique_ptr.954", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.960", %"class.std::__1::vector.966", %"struct.std::__1::pair.974" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.936" }
%"struct.std::__1::__compressed_pair_elem.936" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.940" = type { %"class.std::__1::__vector_base.941" }
%"class.std::__1::__vector_base.941" = type { %"class.std::__1::unique_ptr.942"*, %"class.std::__1::unique_ptr.942"*, %"class.std::__1::__compressed_pair.943" }
%"class.std::__1::unique_ptr.942" = type opaque
%"class.std::__1::__compressed_pair.943" = type { %"struct.std::__1::__compressed_pair_elem.944" }
%"struct.std::__1::__compressed_pair_elem.944" = type { %"class.std::__1::unique_ptr.942"* }
%"class.std::__1::unique_ptr.948" = type { %"class.std::__1::__compressed_pair.949" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.950" }
%"struct.std::__1::__compressed_pair_elem.950" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.954" = type { %"class.std::__1::__compressed_pair.955" }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.956" }
%"struct.std::__1::__compressed_pair_elem.956" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.960" = type { %"class.std::__1::__compressed_pair.961" }
%"class.std::__1::__compressed_pair.961" = type { %"struct.std::__1::__compressed_pair_elem.962" }
%"struct.std::__1::__compressed_pair_elem.962" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.966" = type { %"class.std::__1::__vector_base.967" }
%"class.std::__1::__vector_base.967" = type { %"struct.std::__1::pair.968"*, %"struct.std::__1::pair.968"*, %"class.std::__1::__compressed_pair.969" }
%"struct.std::__1::pair.968" = type opaque
%"class.std::__1::__compressed_pair.969" = type { %"struct.std::__1::__compressed_pair_elem.970" }
%"struct.std::__1::__compressed_pair_elem.970" = type { %"struct.std::__1::pair.968"* }
%"struct.std::__1::pair.974" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.2"*, i16, i8*)*, i8* }
%"class.v8::Local.2" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.975" = type { %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.978", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.978" = type { %"class.std::__1::__hash_table.979" }
%"class.std::__1::__hash_table.979" = type <{ %"class.std::__1::unique_ptr.980", %"class.std::__1::__compressed_pair.990", %"class.std::__1::__compressed_pair.995", %"class.std::__1::__compressed_pair.999", [4 x i8] }>
%"class.std::__1::unique_ptr.980" = type { %"class.std::__1::__compressed_pair.981" }
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.982", %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.982" = type { %"struct.std::__1::__hash_node_base.983"** }
%"struct.std::__1::__hash_node_base.983" = type { %"struct.std::__1::__hash_node_base.983"* }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"class.std::__1::__bucket_list_deallocator.985" }
%"class.std::__1::__bucket_list_deallocator.985" = type { %"class.std::__1::__compressed_pair.986" }
%"class.std::__1::__compressed_pair.986" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.991" }
%"struct.std::__1::__compressed_pair_elem.991" = type { %"struct.std::__1::__hash_node_base.983" }
%"class.std::__1::__compressed_pair.995" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.999" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::internal::AstStringConstants" = type { %"class.v8::internal::Zone", %"class.v8::base::TemplateHashMapImpl", i64, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry" = type <{ %union.anon.1273, i32, [4 x i8] }>
%union.anon.1273 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::AstRawString" = type <{ %union.anon.1007, %"class.v8::internal::Vector.1009", i32, i8, [3 x i8] }>
%union.anon.1007 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Vector.1009" = type { i8*, i64 }
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque.1010" }
%"class.std::__1::deque.1010" = type { %"class.std::__1::__deque_base.1011" }
%"class.std::__1::__deque_base.1011" = type { %"struct.std::__1::__split_buffer.1012", i64, %"class.std::__1::__compressed_pair.1019" }
%"struct.std::__1::__split_buffer.1012" = type { %"struct.std::__1::pair.1013"**, %"struct.std::__1::pair.1013"**, %"struct.std::__1::pair.1013"**, %"class.std::__1::__compressed_pair.1014" }
%"struct.std::__1::pair.1013" = type opaque
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.1015" }
%"struct.std::__1::__compressed_pair_elem.1015" = type { %"struct.std::__1::pair.1013"** }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::String" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.1024" = type { %"class.std::__1::__vector_base.1025" }
%"class.std::__1::__vector_base.1025" = type { %"class.v8::internal::Handle.742"*, %"class.v8::internal::Handle.742"*, %"class.std::__1::__compressed_pair.1026" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"class.v8::internal::Handle.742"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type { %"class.v8::MicrotaskQueue", i64, i64, i64, i64*, i64, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"*, i32, i32, i32, i8, %"class.std::__1::vector.1031" }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.std::__1::vector.1031" = type { %"class.std::__1::__vector_base.1032" }
%"class.std::__1::__vector_base.1032" = type { %"struct.std::__1::pair.1013"*, %"struct.std::__1::pair.1013"*, %"class.std::__1::__compressed_pair.1033" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.1034" }
%"struct.std::__1::__compressed_pair_elem.1034" = type { %"struct.std::__1::pair.1013"* }
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.884", i32, %"class.v8::Local.2" }
%"class.v8::Local.884" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1035" = type { %"class.std::__1::__compressed_pair.1036" }
%"class.std::__1::__compressed_pair.1036" = type { %"struct.std::__1::__compressed_pair_elem.1037" }
%"struct.std::__1::__compressed_pair_elem.1037" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.859", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1041" = type { %"class.std::__1::__vector_base.1042" }
%"class.std::__1::__vector_base.1042" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1043" }
%"class.std::__1::__compressed_pair.1043" = type { %"struct.std::__1::__compressed_pair_elem.1044" }
%"struct.std::__1::__compressed_pair_elem.1044" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1048" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1049" = type { %"class.std::__1::__hash_table.1050" }
%"class.std::__1::__hash_table.1050" = type <{ %"class.std::__1::unique_ptr.1051", %"class.std::__1::__compressed_pair.1061", %"class.std::__1::__compressed_pair.1066", %"class.std::__1::__compressed_pair.1069", [4 x i8] }>
%"class.std::__1::unique_ptr.1051" = type { %"class.std::__1::__compressed_pair.1052" }
%"class.std::__1::__compressed_pair.1052" = type { %"struct.std::__1::__compressed_pair_elem.1053", %"struct.std::__1::__compressed_pair_elem.1055" }
%"struct.std::__1::__compressed_pair_elem.1053" = type { %"struct.std::__1::__hash_node_base.1054"** }
%"struct.std::__1::__hash_node_base.1054" = type { %"struct.std::__1::__hash_node_base.1054"* }
%"struct.std::__1::__compressed_pair_elem.1055" = type { %"class.std::__1::__bucket_list_deallocator.1056" }
%"class.std::__1::__bucket_list_deallocator.1056" = type { %"class.std::__1::__compressed_pair.1057" }
%"class.std::__1::__compressed_pair.1057" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.1062" }
%"struct.std::__1::__compressed_pair_elem.1062" = type { %"struct.std::__1::__hash_node_base.1054" }
%"class.std::__1::__compressed_pair.1066" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1069" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.162" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1073", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1102", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1103", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1073" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1098, %union.anon.1100, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1098 = type { i64 }
%union.anon.1100 = type { i64 }
%"class.std::__1::weak_ptr.1102" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.21", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.162" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1103" = type { %"class.v8::PersistentBase.1104" }
%"class.v8::PersistentBase.1104" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1074", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1074" = type { %"class.std::__1::__hash_table.1075" }
%"class.std::__1::__hash_table.1075" = type <{ %"class.std::__1::unique_ptr.1076", %"class.std::__1::__compressed_pair.1086", %"class.std::__1::__compressed_pair.1091", %"class.std::__1::__compressed_pair.1094", [4 x i8] }>
%"class.std::__1::unique_ptr.1076" = type { %"class.std::__1::__compressed_pair.1077" }
%"class.std::__1::__compressed_pair.1077" = type { %"struct.std::__1::__compressed_pair_elem.1078", %"struct.std::__1::__compressed_pair_elem.1080" }
%"struct.std::__1::__compressed_pair_elem.1078" = type { %"struct.std::__1::__hash_node_base.1079"** }
%"struct.std::__1::__hash_node_base.1079" = type { %"struct.std::__1::__hash_node_base.1079"* }
%"struct.std::__1::__compressed_pair_elem.1080" = type { %"class.std::__1::__bucket_list_deallocator.1081" }
%"class.std::__1::__bucket_list_deallocator.1081" = type { %"class.std::__1::__compressed_pair.1082" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1086" = type { %"struct.std::__1::__compressed_pair_elem.1087" }
%"struct.std::__1::__compressed_pair_elem.1087" = type { %"struct.std::__1::__hash_node_base.1079" }
%"class.std::__1::__compressed_pair.1091" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1105" = type { %"class.std::__1::__compressed_pair.1106" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.1107" }
%"struct.std::__1::__compressed_pair_elem.1107" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1134", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1110", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1114", %"class.std::__1::unique_ptr.1120", %"class.std::__1::unique_ptr.476", %"class.std::__1::vector.1126", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1110" = type { %"struct.std::__1::__atomic_base.1111" }
%"struct.std::__1::__atomic_base.1111" = type { %"struct.std::__1::__cxx_atomic_impl.1112" }
%"struct.std::__1::__cxx_atomic_impl.1112" = type { %"struct.std::__1::__cxx_atomic_base_impl.1113" }
%"struct.std::__1::__cxx_atomic_base_impl.1113" = type { i32 }
%"class.std::__1::unique_ptr.1114" = type { %"class.std::__1::__compressed_pair.1115" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.1116" }
%"struct.std::__1::__compressed_pair_elem.1116" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.859" }
%"class.std::__1::unique_ptr.1120" = type { %"class.std::__1::__compressed_pair.1121" }
%"class.std::__1::__compressed_pair.1121" = type { %"struct.std::__1::__compressed_pair_elem.1122" }
%"struct.std::__1::__compressed_pair_elem.1122" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1126" = type { %"class.std::__1::__vector_base.1127" }
%"class.std::__1::__vector_base.1127" = type { %"struct.std::__1::pair.1128"*, %"struct.std::__1::pair.1128"*, %"class.std::__1::__compressed_pair.1129" }
%"struct.std::__1::pair.1128" = type opaque
%"class.std::__1::__compressed_pair.1129" = type { %"struct.std::__1::__compressed_pair_elem.1130" }
%"struct.std::__1::__compressed_pair_elem.1130" = type { %"struct.std::__1::pair.1128"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.21"*, %"class.std::__1::unique_ptr.99" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.40", %"class.std::__1::vector.40", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.42" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.47" }
%"class.std::__1::__hash_table.47" = type <{ %"class.std::__1::unique_ptr.48", %"class.std::__1::__compressed_pair.58", %"class.std::__1::__compressed_pair.63", %"class.std::__1::__compressed_pair.65", [4 x i8] }>
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50", %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.std::__1::__hash_node_base.51"** }
%"struct.std::__1::__hash_node_base.51" = type { %"struct.std::__1::__hash_node_base.51"* }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.std::__1::__bucket_list_deallocator.53" }
%"class.std::__1::__bucket_list_deallocator.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"struct.std::__1::__hash_node_base.51" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.26", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.88", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.21"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.26", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.26", %"struct.std::__1::atomic.70", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.70" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__cxx_atomic_impl.72" }
%"struct.std::__1::__cxx_atomic_impl.72" = type { %"struct.std::__1::__cxx_atomic_base_impl.73" }
%"struct.std::__1::__cxx_atomic_base_impl.73" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.74" }
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.76" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.81", %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::atomic.88" = type { %"struct.std::__1::__atomic_base.89" }
%"struct.std::__1::__atomic_base.89" = type { %"struct.std::__1::__cxx_atomic_impl.90" }
%"struct.std::__1::__cxx_atomic_impl.90" = type { %"struct.std::__1::__cxx_atomic_base_impl.91" }
%"struct.std::__1::__cxx_atomic_base_impl.91" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.92", i8, [7 x i8] }>
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { i64*, i64*, %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.21", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1134" = type { %"class.std::__1::__compressed_pair.1135" }
%"class.std::__1::__compressed_pair.1135" = type { %"struct.std::__1::__compressed_pair_elem.1136" }
%"struct.std::__1::__compressed_pair_elem.1136" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1143" = type { %"class.std::__1::__compressed_pair.1144" }
%"class.std::__1::__compressed_pair.1144" = type { %"struct.std::__1::__compressed_pair_elem.1145" }
%"struct.std::__1::__compressed_pair_elem.1145" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.885", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.885" = type { %"class.v8::Context"* }
%"class.v8::Array" = type { i8 }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1151" }
%"class.std::__1::unordered_map.1151" = type { %"class.std::__1::__hash_table.1152" }
%"class.std::__1::__hash_table.1152" = type <{ %"class.std::__1::unique_ptr.1153", %"class.std::__1::__compressed_pair.1163", %"class.std::__1::__compressed_pair.1168", %"class.std::__1::__compressed_pair.1171", [4 x i8] }>
%"class.std::__1::unique_ptr.1153" = type { %"class.std::__1::__compressed_pair.1154" }
%"class.std::__1::__compressed_pair.1154" = type { %"struct.std::__1::__compressed_pair_elem.1155", %"struct.std::__1::__compressed_pair_elem.1157" }
%"struct.std::__1::__compressed_pair_elem.1155" = type { %"struct.std::__1::__hash_node_base.1156"** }
%"struct.std::__1::__hash_node_base.1156" = type { %"struct.std::__1::__hash_node_base.1156"* }
%"struct.std::__1::__compressed_pair_elem.1157" = type { %"class.std::__1::__bucket_list_deallocator.1158" }
%"class.std::__1::__bucket_list_deallocator.1158" = type { %"class.std::__1::__compressed_pair.1159" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1163" = type { %"struct.std::__1::__compressed_pair_elem.1164" }
%"struct.std::__1::__compressed_pair_elem.1164" = type { %"struct.std::__1::__hash_node_base.1156" }
%"class.std::__1::__compressed_pair.1168" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1171" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::atomic.1177" = type { %"struct.std::__1::__atomic_base.1178" }
%"struct.std::__1::__atomic_base.1178" = type { %"struct.std::__1::__cxx_atomic_impl.1179" }
%"struct.std::__1::__cxx_atomic_impl.1179" = type { %"struct.std::__1::__cxx_atomic_base_impl.1180" }
%"struct.std::__1::__cxx_atomic_base_impl.1180" = type { %"class.std::__1::vector.1181"* }
%"class.std::__1::vector.1181" = type { %"class.std::__1::__vector_base.1182" }
%"class.std::__1::__vector_base.1182" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1183" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1183" = type { %"struct.std::__1::__compressed_pair_elem.1184" }
%"struct.std::__1::__compressed_pair_elem.1184" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.31" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__cxx_atomic_impl.33" }
%"struct.std::__1::__cxx_atomic_impl.33" = type { %"struct.std::__1::__cxx_atomic_base_impl.34" }
%"struct.std::__1::__cxx_atomic_base_impl.34" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.35" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.105" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.105" = type { %"class.std::__1::__vector_base.106" }
%"class.std::__1::__vector_base.106" = type { %"struct.std::__1::pair.107"*, %"struct.std::__1::pair.107"*, %"class.std::__1::__compressed_pair.108" }
%"struct.std::__1::pair.107" = type { i32, i64 }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.std::__1::pair.107"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.21", i32, %"struct.std::__1::atomic.21", %"class.v8::base::Mutex", %"struct.std::__1::atomic.21" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.113" }
%"class.std::__1::unordered_map.113" = type { %"class.std::__1::__hash_table.114" }
%"class.std::__1::__hash_table.114" = type <{ %"class.std::__1::unique_ptr.115", %"class.std::__1::__compressed_pair.125", %"class.std::__1::__compressed_pair.130", %"class.std::__1::__compressed_pair.135", [4 x i8] }>
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117", %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"struct.std::__1::__hash_node_base.118"** }
%"struct.std::__1::__hash_node_base.118" = type { %"struct.std::__1::__hash_node_base.118"* }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.std::__1::__bucket_list_deallocator.120" }
%"class.std::__1::__bucket_list_deallocator.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.std::__1::__hash_node_base.118" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.154", %"struct.std::__1::atomic.158", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.21" }
%"struct.std::__1::atomic.158" = type { %"struct.std::__1::__atomic_base.159" }
%"struct.std::__1::__atomic_base.159" = type { %"struct.std::__1::__cxx_atomic_impl.160" }
%"struct.std::__1::__cxx_atomic_impl.160" = type { %"struct.std::__1::__cxx_atomic_base_impl.161" }
%"struct.std::__1::__cxx_atomic_base_impl.161" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.163" = type { %"struct.std::__1::__atomic_base.164" }
%"struct.std::__1::__atomic_base.164" = type { %"struct.std::__1::__cxx_atomic_impl.165" }
%"struct.std::__1::__cxx_atomic_impl.165" = type { %"struct.std::__1::__cxx_atomic_base_impl.166" }
%"struct.std::__1::__cxx_atomic_base_impl.166" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.167" = type { %"class.std::__1::__vector_base.168" }
%"class.std::__1::__vector_base.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.169" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.228", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.282", %"class.std::__1::vector.282", %"class.std::__1::vector.282", %"class.std::__1::vector.289", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.183", %"class.std::__1::vector.184", %"class.std::__1::vector.191", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.183" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.184" = type { %"class.std::__1::__vector_base.185" }
%"class.std::__1::__vector_base.185" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.186" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.191" = type { %"class.std::__1::__vector_base.192" }
%"class.std::__1::__vector_base.192" = type { %"class.std::__1::unique_ptr.193"*, %"class.std::__1::unique_ptr.193"*, %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::unique_ptr.193" = type opaque
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.std::__1::unique_ptr.193"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211", %"class.v8::internal::Worklist.213" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.213" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.215", i8, i64 }
%"class.std::__1::vector.215" = type { %"class.std::__1::__vector_base.216" }
%"class.std::__1::__vector_base.216" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.231" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.183"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.231" = type { %"class.std::__1::__hash_table.232" }
%"class.std::__1::__hash_table.232" = type <{ %"class.std::__1::unique_ptr.233", %"class.std::__1::__compressed_pair.243", %"class.std::__1::__compressed_pair.248", %"class.std::__1::__compressed_pair.251", [4 x i8] }>
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235", %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"struct.std::__1::__hash_node_base.236"** }
%"struct.std::__1::__hash_node_base.236" = type { %"struct.std::__1::__hash_node_base.236"* }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.std::__1::__bucket_list_deallocator.238" }
%"class.std::__1::__bucket_list_deallocator.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.std::__1::__hash_node_base.236" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.258" }
%"class.std::__1::unordered_map.258" = type { %"class.std::__1::__hash_table.259" }
%"class.std::__1::__hash_table.259" = type <{ %"class.std::__1::unique_ptr.260", %"class.std::__1::__compressed_pair.270", %"class.std::__1::__compressed_pair.275", %"class.std::__1::__compressed_pair.278", [4 x i8] }>
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262", %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.263"** }
%"struct.std::__1::__hash_node_base.263" = type { %"struct.std::__1::__hash_node_base.263"* }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.std::__1::__bucket_list_deallocator.265" }
%"class.std::__1::__bucket_list_deallocator.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.std::__1::__hash_node_base.263" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::vector.282" = type { %"class.std::__1::__vector_base.283" }
%"class.std::__1::__vector_base.283" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.289" = type { %"class.std::__1::__vector_base.290" }
%"class.std::__1::__vector_base.290" = type { %"struct.std::__1::pair.291"*, %"struct.std::__1::pair.291"*, %"class.std::__1::__compressed_pair.292" }
%"struct.std::__1::pair.291" = type opaque
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"struct.std::__1::pair.291"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.297", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.282"], [3 x %"class.std::__1::vector.282"], i8, %"struct.std::__1::atomic.154", [6 x i8], %"class.std::__1::vector.282", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.307"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.282", %"class.std::__1::vector.282", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.307" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.332", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.325"], %"class.std::__1::unique_ptr.297" }
%"class.std::__1::vector.325" = type { %"class.std::__1::__vector_base.326" }
%"class.std::__1::__vector_base.326" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.364", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.368", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.373" }
%"struct.std::__1::atomic.364" = type { %"struct.std::__1::__atomic_base.365" }
%"struct.std::__1::__atomic_base.365" = type { %"struct.std::__1::__cxx_atomic_impl.366" }
%"struct.std::__1::__cxx_atomic_impl.366" = type { %"struct.std::__1::__cxx_atomic_base_impl.367" }
%"struct.std::__1::__cxx_atomic_base_impl.367" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.368" = type { %"struct.std::__1::__atomic_base.369" }
%"struct.std::__1::__atomic_base.369" = type { %"struct.std::__1::__cxx_atomic_impl.370" }
%"struct.std::__1::__cxx_atomic_impl.370" = type { %"struct.std::__1::__cxx_atomic_base_impl.371" }
%"struct.std::__1::__cxx_atomic_base_impl.371" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.393", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.297", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.154", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.403", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.436" = type { %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.439" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.482" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.501", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.483", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.501" = type { %"struct.std::__1::__atomic_base.502" }
%"struct.std::__1::__atomic_base.502" = type { %"struct.std::__1::__cxx_atomic_impl.503" }
%"struct.std::__1::__cxx_atomic_impl.503" = type { %"struct.std::__1::__cxx_atomic_base_impl.504" }
%"struct.std::__1::__cxx_atomic_base_impl.504" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.505" = type { %"class.std::__1::__hash_table.506" }
%"class.std::__1::__hash_table.506" = type <{ %"class.std::__1::unique_ptr.507", %"class.std::__1::__compressed_pair.517", %"class.std::__1::__compressed_pair.522", %"class.std::__1::__compressed_pair.525", [4 x i8] }>
%"class.std::__1::unique_ptr.507" = type { %"class.std::__1::__compressed_pair.508" }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.509", %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"struct.std::__1::__hash_node_base.510"** }
%"struct.std::__1::__hash_node_base.510" = type { %"struct.std::__1::__hash_node_base.510"* }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"class.std::__1::__bucket_list_deallocator.512" }
%"class.std::__1::__bucket_list_deallocator.512" = type { %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"struct.std::__1::__hash_node_base.510" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.531" = type { %"class.std::__1::__compressed_pair.532" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.533" }
%"struct.std::__1::__compressed_pair_elem.533" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.537" = type { %"class.std::__1::__compressed_pair.538" }
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.543", %"class.std::__1::vector.543" }
%"class.std::__1::unique_ptr.550" = type { %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.552" }
%"struct.std::__1::__compressed_pair_elem.552" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.332" = type { %"class.std::__1::__hash_table.333" }
%"class.std::__1::__hash_table.333" = type <{ %"class.std::__1::unique_ptr.334", %"class.std::__1::__compressed_pair.344", %"class.std::__1::__compressed_pair.349", %"class.std::__1::__compressed_pair.353", [4 x i8] }>
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336", %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"struct.std::__1::__hash_node_base.337"** }
%"struct.std::__1::__hash_node_base.337" = type { %"struct.std::__1::__hash_node_base.337"* }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.std::__1::__bucket_list_deallocator.339" }
%"class.std::__1::__bucket_list_deallocator.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"struct.std::__1::__hash_node_base.337" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_map.582" = type { %"class.std::__1::__hash_table.583" }
%"class.std::__1::__hash_table.583" = type <{ %"class.std::__1::unique_ptr.584", %"class.std::__1::__compressed_pair.594", %"class.std::__1::__compressed_pair.599", %"class.std::__1::__compressed_pair.602", [4 x i8] }>
%"class.std::__1::unique_ptr.584" = type { %"class.std::__1::__compressed_pair.585" }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.586", %"struct.std::__1::__compressed_pair_elem.588" }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"struct.std::__1::__hash_node_base.587"** }
%"struct.std::__1::__hash_node_base.587" = type { %"struct.std::__1::__hash_node_base.587"* }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"class.std::__1::__bucket_list_deallocator.589" }
%"class.std::__1::__bucket_list_deallocator.589" = type { %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"struct.std::__1::__hash_node_base.587" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_map.556" = type { %"class.std::__1::__hash_table.557" }
%"class.std::__1::__hash_table.557" = type <{ %"class.std::__1::unique_ptr.558", %"class.std::__1::__compressed_pair.568", %"class.std::__1::__compressed_pair.573", %"class.std::__1::__compressed_pair.576", [4 x i8] }>
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560", %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"struct.std::__1::__hash_node_base.561"** }
%"struct.std::__1::__hash_node_base.561" = type { %"struct.std::__1::__hash_node_base.561"* }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.std::__1::__bucket_list_deallocator.563" }
%"class.std::__1::__bucket_list_deallocator.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"struct.std::__1::__hash_node_base.561" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_map.606" = type { %"class.std::__1::__hash_table.607" }
%"class.std::__1::__hash_table.607" = type <{ %"class.std::__1::unique_ptr.608", %"class.std::__1::__compressed_pair.618", %"class.std::__1::__compressed_pair.623", %"class.std::__1::__compressed_pair.628", [4 x i8] }>
%"class.std::__1::unique_ptr.608" = type { %"class.std::__1::__compressed_pair.609" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.610", %"struct.std::__1::__compressed_pair_elem.612" }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"struct.std::__1::__hash_node_base.611"** }
%"struct.std::__1::__hash_node_base.611" = type { %"struct.std::__1::__hash_node_base.611"* }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"class.std::__1::__bucket_list_deallocator.613" }
%"class.std::__1::__bucket_list_deallocator.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.619" }
%"struct.std::__1::__compressed_pair_elem.619" = type { %"struct.std::__1::__hash_node_base.611" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::vector.634" = type { %"class.std::__1::__vector_base.635" }
%"class.std::__1::__vector_base.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.636" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.637" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__cxx_atomic_impl.24" }
%"struct.std::__1::__cxx_atomic_impl.24" = type { %"struct.std::__1::__cxx_atomic_base_impl.25" }
%"struct.std::__1::__cxx_atomic_base_impl.25" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.21", i64, %"struct.std::__1::atomic.21" }
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.143" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.543" = type { %"class.std::__1::__vector_base.544" }
%"class.std::__1::__vector_base.544" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.545" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.546" }
%"struct.std::__1::__compressed_pair_elem.546" = type { %"class.v8::internal::Object"* }
%"struct.std::nothrow_t" = type { i8 }
%"class.v8::internal::MessageLocation" = type { %"class.v8::internal::Handle", i32, i32, i32, %"class.v8::internal::Handle.0" }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle<v8::internal::String>::ObjectRef" = type { %"class.v8::internal::String" }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::Message" = type { i8 }
%"class.v8::internal::RuntimeCallTimerScope" = type { %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer" }
%"class.v8::internal::RuntimeCallTimer" = type { %"class.v8::internal::RuntimeCallCounter"*, %"class.v8::base::AtomicValue", %"class.v8::base::TimeTicks", %"class.v8::base::TimeDelta" }
%"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::IncrementalStringBuilder" = type { %"class.v8::internal::Isolate"*, i32, i8, i32, i32, %"class.v8::internal::Handle.1008", %"class.v8::internal::Handle.1008" }
%"class.v8::internal::Handle.1008" = type { %"class.v8::internal::HandleBase" }
%"class.v8::Platform" = type { i32 (...)** }
%"class.v8::internal::Handle.1188" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Vector.1209" = type { i8*, i64 }
%"class.v8::internal::LookupIterator" = type { i32, i32, i8, i32, %"class.v8::internal::PropertyDetails", %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1212", %"class.v8::internal::Handle.1188", %"class.v8::internal::Handle.1188", %"class.v8::internal::Handle.1206", %"class.v8::internal::Handle.1188", i64, %"class.v8::internal::InternalIndex" }
%"class.v8::internal::PropertyDetails" = type { i32 }
%"class.v8::internal::Handle.1212" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1206" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::InternalIndex" = type { i64 }
%"class.v8::internal::LookupIterator::Key" = type { %"class.v8::internal::Handle.1212", i64 }
%"class.v8::internal::Handle<v8::internal::NativeContext>::ObjectRef" = type { %"class.v8::internal::NativeContext" }
%"class.v8::internal::NativeContext" = type { %"class.v8::internal::Context" }
%"class.v8::internal::Script" = type { %"class.v8::internal::TorqueGeneratedScript" }
%"class.v8::internal::TorqueGeneratedScript" = type { %"class.v8::internal::Struct" }
%"class.v8::internal::Struct" = type { %"class.v8::internal::TorqueGeneratedStruct" }
%"class.v8::internal::TorqueGeneratedStruct" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::UnoptimizedCompileState" = type { i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::PendingCompilationErrorHandler", %"class.v8::internal::Logger"*, %"class.std::__1::unique_ptr.1221" }
%"class.v8::internal::PendingCompilationErrorHandler" = type { i8, i8, i8, [5 x i8], %"class.v8::internal::PendingCompilationErrorHandler::MessageDetails", %"class.std::__1::forward_list" }
%"class.v8::internal::PendingCompilationErrorHandler::MessageDetails" = type <{ i32, i32, i32, [4 x i8], %union.anon.1215, i32, [4 x i8] }>
%union.anon.1215 = type { %"class.v8::internal::AstRawString"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.1216" }
%"class.std::__1::__compressed_pair.1216" = type { %"struct.std::__1::__compressed_pair_elem.1217" }
%"struct.std::__1::__compressed_pair_elem.1217" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.v8::internal::PendingCompilationErrorHandler::MessageDetails" }
%"class.std::__1::unique_ptr.1221" = type { %"class.std::__1::__compressed_pair.1222" }
%"class.std::__1::__compressed_pair.1222" = type { %"struct.std::__1::__compressed_pair_elem.1223" }
%"struct.std::__1::__compressed_pair_elem.1223" = type { %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* }
%"class.v8::internal::UnoptimizedCompileState::ParallelTasks" = type { %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::forward_list.1224" }
%"class.std::__1::forward_list.1224" = type { %"class.std::__1::__forward_list_base.1225" }
%"class.std::__1::__forward_list_base.1225" = type { %"class.std::__1::__compressed_pair.1226" }
%"class.std::__1::__compressed_pair.1226" = type { %"struct.std::__1::__compressed_pair_elem.1227" }
%"struct.std::__1::__compressed_pair_elem.1227" = type { %"struct.std::__1::__forward_begin_node.1228" }
%"struct.std::__1::__forward_begin_node.1228" = type { %"struct.std::__1::__forward_list_node.1229"* }
%"struct.std::__1::__forward_list_node.1229" = type { %"struct.std::__1::__forward_begin_node.1228", %"struct.std::__1::pair.1267" }
%"struct.std::__1::pair.1267" = type { %"class.v8::internal::FunctionLiteral"*, i64 }
%"class.v8::internal::FunctionLiteral" = type { %"class.v8::internal::Expression", i32, i32, i32, i32, i32, i32, %"class.v8::internal::AstConsString"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::ZoneList", %"class.v8::internal::AstConsString"*, %"class.v8::internal::Handle.1008", %"class.v8::internal::ProducedPreparseData"* }
%"class.v8::internal::Expression" = type { %"class.v8::internal::AstNode" }
%"class.v8::internal::AstNode" = type { i32, i32 }
%"class.v8::internal::DeclarationScope" = type opaque
%"class.v8::internal::ZoneList" = type { %"class.v8::internal::Statement"**, i32, i32 }
%"class.v8::internal::Statement" = type { %"class.v8::internal::AstNode" }
%"class.v8::internal::AstConsString" = type { %"class.v8::internal::Handle.1008", %"struct.v8::internal::AstConsString::Segment" }
%"struct.v8::internal::AstConsString::Segment" = type { %"class.v8::internal::AstRawString"*, %"struct.v8::internal::AstConsString::Segment"* }
%"class.v8::internal::ProducedPreparseData" = type { i32 (...)** }
%"class.v8::internal::ParseInfo" = type <{ %"class.v8::internal::UnoptimizedCompileFlags", [4 x i8], %"class.v8::internal::UnoptimizedCompileState"*, %"class.std::__1::unique_ptr.1236", %"class.v8::Extension"*, %"class.v8::internal::DeclarationScope"*, i64, i32, i32, %"class.std::__1::unique_ptr.1242", %"class.std::__1::unique_ptr.1248", %"class.std::__1::unique_ptr.1254", %"class.v8::internal::AstRawString"*, %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::SourceRangeMap"*, %"class.v8::internal::FunctionLiteral"*, i8, [7 x i8] }>
%"class.v8::internal::UnoptimizedCompileFlags" = type <{ i32, i32, i8, i8, [2 x i8] }>
%"class.std::__1::unique_ptr.1236" = type { %"class.std::__1::__compressed_pair.1237" }
%"class.std::__1::__compressed_pair.1237" = type { %"struct.std::__1::__compressed_pair_elem.1238" }
%"struct.std::__1::__compressed_pair_elem.1238" = type { %"class.v8::internal::Zone"* }
%"class.v8::Extension" = type <{ i32 (...)**, i8*, i64, %"class.v8::String::ExternalOneByteStringResource"*, i32, [4 x i8], i8**, i8, [7 x i8] }>
%"class.v8::String::ExternalOneByteStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i8* }
%"class.v8::String::ExternalStringResourceBase" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1242" = type { %"class.std::__1::__compressed_pair.1243" }
%"class.std::__1::__compressed_pair.1243" = type { %"struct.std::__1::__compressed_pair_elem.1244" }
%"struct.std::__1::__compressed_pair_elem.1244" = type { %"class.v8::internal::Utf16CharacterStream"* }
%"class.v8::internal::Utf16CharacterStream" = type <{ i32 (...)**, i16*, i16*, i16*, i64, %"class.v8::internal::RuntimeCallStats"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1248" = type { %"class.std::__1::__compressed_pair.1249" }
%"class.std::__1::__compressed_pair.1249" = type { %"struct.std::__1::__compressed_pair_elem.1250" }
%"struct.std::__1::__compressed_pair_elem.1250" = type { %"class.v8::internal::ConsumedPreparseData"* }
%"class.v8::internal::ConsumedPreparseData" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1254" = type { %"class.std::__1::__compressed_pair.1255" }
%"class.std::__1::__compressed_pair.1255" = type { %"struct.std::__1::__compressed_pair_elem.1256" }
%"struct.std::__1::__compressed_pair_elem.1256" = type { %"class.v8::internal::AstValueFactory"* }
%"class.v8::internal::AstValueFactory" = type { %"class.v8::base::TemplateHashMapImpl", %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"**, %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::AstConsString"*, [128 x %"class.v8::internal::AstRawString"*], %"class.v8::internal::Zone"*, i64 }
%"class.v8::internal::SourceRangeMap" = type opaque
%"class.v8::internal::CallPrinter" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8], %"class.std::__1::unique_ptr.1260", i32, i8, i8, i8, i8, i8, i8, [2 x i8], i32, %"class.v8::internal::ObjectLiteralProperty"*, %"class.v8::internal::Assignment"*, %"class.v8::internal::Expression"*, i8, [7 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1260" = type { %"class.std::__1::__compressed_pair.1261" }
%"class.std::__1::__compressed_pair.1261" = type { %"struct.std::__1::__compressed_pair_elem.1262" }
%"struct.std::__1::__compressed_pair_elem.1262" = type { %"class.v8::internal::IncrementalStringBuilder"* }
%"class.v8::internal::ObjectLiteralProperty" = type <{ %"class.v8::internal::LiteralProperty", i8, i8, [6 x i8] }>
%"class.v8::internal::LiteralProperty" = type { %"class.v8::internal::PointerWithPayload", %"class.v8::internal::Expression"* }
%"class.v8::internal::PointerWithPayload" = type { i64 }
%"class.v8::internal::Assignment" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"* }
%"class.v8::internal::JavaScriptFrameIterator" = type { %"class.v8::internal::StackFrameIterator" }
%"class.v8::internal::StackFrameIterator" = type { %"class.v8::internal::StackFrameIteratorBase.base", [7 x i8] }
%"class.v8::internal::StackFrameIteratorBase.base" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::EntryFrame", %"class.v8::internal::ConstructEntryFrame", %"class.v8::internal::ExitFrame", %"class.v8::internal::WasmFrame", %"class.v8::internal::WasmToJsFrame", %"class.v8::internal::JsToWasmFrame", %"class.v8::internal::WasmDebugBreakFrame", %"class.v8::internal::CWasmEntryFrame", %"class.v8::internal::WasmExitFrame", %"class.v8::internal::WasmCompileLazyFrame", %"class.v8::internal::InterpretedFrame", %"class.v8::internal::BaselineFrame", %"class.v8::internal::OptimizedFrame", %"class.v8::internal::StubFrame", %"class.v8::internal::BuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame", %"class.v8::internal::InternalFrame", %"class.v8::internal::ConstructFrame", %"class.v8::internal::BuiltinFrame", %"class.v8::internal::BuiltinExitFrame", %"class.v8::internal::NativeFrame", %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackHandler"*, i8 }>
%"class.v8::internal::EntryFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::TypedFrame" = type { %"class.v8::internal::CommonFrame" }
%"class.v8::internal::CommonFrame" = type { %"class.v8::internal::StackFrame" }
%"class.v8::internal::StackFrame" = type { i32 (...)**, %"class.v8::internal::StackFrameIteratorBase"*, %"class.v8::internal::Isolate"*, %"struct.v8::internal::StackFrame::State" }
%"class.v8::internal::StackFrameIteratorBase" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::EntryFrame", %"class.v8::internal::ConstructEntryFrame", %"class.v8::internal::ExitFrame", %"class.v8::internal::WasmFrame", %"class.v8::internal::WasmToJsFrame", %"class.v8::internal::JsToWasmFrame", %"class.v8::internal::WasmDebugBreakFrame", %"class.v8::internal::CWasmEntryFrame", %"class.v8::internal::WasmExitFrame", %"class.v8::internal::WasmCompileLazyFrame", %"class.v8::internal::InterpretedFrame", %"class.v8::internal::BaselineFrame", %"class.v8::internal::OptimizedFrame", %"class.v8::internal::StubFrame", %"class.v8::internal::BuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame", %"class.v8::internal::InternalFrame", %"class.v8::internal::ConstructFrame", %"class.v8::internal::BuiltinFrame", %"class.v8::internal::BuiltinExitFrame", %"class.v8::internal::NativeFrame", %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackHandler"*, i8, [7 x i8] }>
%"struct.v8::internal::StackFrame::State" = type { i64, i64, i64*, i64, i64*, i64* }
%"class.v8::internal::ConstructEntryFrame" = type { %"class.v8::internal::EntryFrame" }
%"class.v8::internal::ExitFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::WasmFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::WasmToJsFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::JsToWasmFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::WasmDebugBreakFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::CWasmEntryFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::WasmExitFrame" = type { %"class.v8::internal::WasmFrame" }
%"class.v8::internal::WasmCompileLazyFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::InterpretedFrame" = type { %"class.v8::internal::UnoptimizedFrame" }
%"class.v8::internal::UnoptimizedFrame" = type { %"class.v8::internal::JavaScriptFrame" }
%"class.v8::internal::JavaScriptFrame" = type { %"class.v8::internal::CommonFrameWithJSLinkage" }
%"class.v8::internal::CommonFrameWithJSLinkage" = type { %"class.v8::internal::CommonFrame" }
%"class.v8::internal::BaselineFrame" = type { %"class.v8::internal::UnoptimizedFrame" }
%"class.v8::internal::OptimizedFrame" = type { %"class.v8::internal::JavaScriptFrame" }
%"class.v8::internal::StubFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::BuiltinContinuationFrame" = type { %"class.v8::internal::InternalFrame" }
%"class.v8::internal::JavaScriptBuiltinContinuationFrame" = type { %"class.v8::internal::TypedFrameWithJSLinkage" }
%"class.v8::internal::TypedFrameWithJSLinkage" = type { %"class.v8::internal::CommonFrameWithJSLinkage" }
%"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame" = type { %"class.v8::internal::JavaScriptBuiltinContinuationFrame" }
%"class.v8::internal::InternalFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::ConstructFrame" = type { %"class.v8::internal::InternalFrame" }
%"class.v8::internal::BuiltinFrame" = type { %"class.v8::internal::TypedFrameWithJSLinkage" }
%"class.v8::internal::BuiltinExitFrame" = type { %"class.v8::internal::ExitFrame" }
%"class.v8::internal::NativeFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::StackHandler" = type { i8 }
%"class.std::__1::vector.1300" = type { %"class.std::__1::__vector_base.1301" }
%"class.std::__1::__vector_base.1301" = type { %"class.v8::internal::FrameSummary"*, %"class.v8::internal::FrameSummary"*, %"class.std::__1::__compressed_pair.1579" }
%"class.v8::internal::FrameSummary" = type { %union.anon.1302 }
%union.anon.1302 = type { %"class.v8::internal::FrameSummary::JavaScriptFrameSummary" }
%"class.v8::internal::FrameSummary::JavaScriptFrameSummary" = type { %"class.v8::internal::FrameSummary::FrameSummaryBase.base", %"class.v8::internal::Handle.1188", %"class.v8::internal::Handle.1205", %"class.v8::internal::Handle.1303", i32, i8, %"class.v8::internal::Handle.1196" }
%"class.v8::internal::FrameSummary::FrameSummaryBase.base" = type <{ %"class.v8::internal::Isolate"*, i32 }>
%"class.v8::internal::Handle.1205" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1303" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1196" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1579" = type { %"struct.std::__1::__compressed_pair_elem.1580" }
%"struct.std::__1::__compressed_pair_elem.1580" = type { %"class.v8::internal::FrameSummary"* }
%"class.v8::internal::Handle<v8::internal::AbstractCode>::ObjectRef" = type { %"class.v8::internal::AbstractCode" }
%"class.v8::internal::AbstractCode" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Literal" = type { %"class.v8::internal::Expression", %union.anon.1266 }
%union.anon.1266 = type { %"class.v8::internal::AstRawString"* }

$_ZN2v88internal10JSReceiver11GetPropertyEPNS0_7IsolateENS0_6HandleIS1_EEPKc = comdat any

$_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE = comdat any

$_ZN2v88internal10JSReceiver11HasPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE = comdat any

$_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE = comdat any

@.str = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"%s:%i: %s\0A\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"<unknown>\00", align 1
@_ZN2v88internal36FLAG_correctness_fuzzer_suppressionsE = external local_unnamed_addr global i8, align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"exception\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"prepareStackTrace\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"<error>\00", align 1
@.str.8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"Cyclic __proto__ value\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"Debugger: %\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"Error loading debugger\00", align 1
@.str.12 = private unnamed_addr constant [47 x i8] c"Internal % error. Default options are missing.\00", align 1
@.str.13 = private unnamed_addr constant [34 x i8] c"Private fields can not be deleted\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"Uncaught %\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c"Not supported\00", align 1
@.str.16 = private unnamed_addr constant [38 x i8] c"Internal error, wrong service type: %\00", align 1
@.str.17 = private unnamed_addr constant [34 x i8] c"Internal error. Wrong value type.\00", align 1
@.str.18 = private unnamed_addr constant [27 x i8] c"Internal error. Icu error.\00", align 1
@.str.19 = private unnamed_addr constant [74 x i8] c"Function.prototype.apply was called on %, which is a % and not a function\00", align 1
@.str.20 = private unnamed_addr constant [85 x i8] c"'arguments' is not allowed in class field initializer or static initialization block\00", align 1
@.str.21 = private unnamed_addr constant [69 x i8] c"Derived ArrayBuffer constructor created a buffer which was too small\00", align 1
@.str.22 = private unnamed_addr constant [60 x i8] c"ArrayBuffer subclass returned this from species constructor\00", align 1
@.str.23 = private unnamed_addr constant [75 x i8] c"await is only valid in async functions and the top level bodies of modules\00", align 1
@.str.24 = private unnamed_addr constant [38 x i8] c"await is only valid in async function\00", align 1
@.str.25 = private unnamed_addr constant [46 x i8] c"Atomics.wait cannot be called in this context\00", align 1
@.str.26 = private unnamed_addr constant [63 x i8] c"The comparison function must be either a function or undefined\00", align 1
@.str.27 = private unnamed_addr constant [74 x i8] c"The number % cannot be converted to a BigInt because it is not an integer\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"Cannot convert % to a BigInt\00", align 1
@.str.29 = private unnamed_addr constant [60 x i8] c"Cannot mix BigInt and other types, use explicit conversions\00", align 1
@.str.30 = private unnamed_addr constant [38 x i8] c"Do not know how to serialize a BigInt\00", align 1
@.str.31 = private unnamed_addr constant [53 x i8] c"BigInts have no unsigned right shift, use >> instead\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"Cannot convert a BigInt value to a number\00", align 1
@.str.33 = private unnamed_addr constant [20 x i8] c"% is not a function\00", align 1
@.str.34 = private unnamed_addr constant [23 x i8] c"% called on non-object\00", align 1
@.str.35 = private unnamed_addr constant [30 x i8] c"% called on null or undefined\00", align 1
@.str.36 = private unnamed_addr constant [81 x i8] c"CallSite expects wasm object as first or function as second argument, got <%, %>\00", align 1
@.str.37 = private unnamed_addr constant [47 x i8] c"CallSite method % expects CallSite as receiver\00", align 1
@.str.38 = private unnamed_addr constant [41 x i8] c"Cannot convert object to primitive value\00", align 1
@.str.39 = private unnamed_addr constant [26 x i8] c"Cannot prevent extensions\00", align 1
@.str.40 = private unnamed_addr constant [14 x i8] c"Cannot freeze\00", align 1
@.str.41 = private unnamed_addr constant [47 x i8] c"Cannot freeze array buffer views with elements\00", align 1
@.str.42 = private unnamed_addr constant [12 x i8] c"Cannot seal\00", align 1
@.str.43 = private unnamed_addr constant [39 x i8] c"Converting circular structure to JSON%\00", align 1
@.str.44 = private unnamed_addr constant [44 x i8] c"Abstract class % not directly constructable\00", align 1
@.str.45 = private unnamed_addr constant [33 x i8] c"Assignment to constant variable.\00", align 1
@.str.46 = private unnamed_addr constant [49 x i8] c"Classes may not have a field named 'constructor'\00", align 1
@.str.47 = private unnamed_addr constant [52 x i8] c"Class constructor % cannot be invoked without 'new'\00", align 1
@.str.48 = private unnamed_addr constant [51 x i8] c"Class constructors cannot be invoked without 'new'\00", align 1
@.str.49 = private unnamed_addr constant [29 x i8] c"Constructor % requires 'new'\00", align 1
@.str.50 = private unnamed_addr constant [43 x i8] c"The .constructor property is not an object\00", align 1
@.str.51 = private unnamed_addr constant [47 x i8] c"Currency code is required with currency style.\00", align 1
@.str.52 = private unnamed_addr constant [47 x i8] c"Detected cycle while resolving name '%' in '%'\00", align 1
@.str.53 = private unnamed_addr constant [62 x i8] c"First argument to DataView constructor must be an ArrayBuffer\00", align 1
@.str.54 = private unnamed_addr constant [27 x i8] c"this is not a Date object.\00", align 1
@.str.55 = private unnamed_addr constant [31 x i8] c"Debugger: Invalid frame index.\00", align 1
@.str.56 = private unnamed_addr constant [39 x i8] c"Debugger: Parameters have wrong types.\00", align 1
@.str.57 = private unnamed_addr constant [37 x i8] c"Missing initializer in % declaration\00", align 1
@.str.58 = private unnamed_addr constant [51 x i8] c"Cannot define property %, object is not extensible\00", align 1
@.str.59 = private unnamed_addr constant [43 x i8] c"Cannot perform % on a detached ArrayBuffer\00", align 1
@.str.60 = private unnamed_addr constant [43 x i8] c"Object template has duplicate property '%'\00", align 1
@.str.61 = private unnamed_addr constant [51 x i8] c"Class extends value % is not a constructor or null\00", align 1
@.str.62 = private unnamed_addr constant [53 x i8] c"First argument to % must not be a regular expression\00", align 1
@.str.63 = private unnamed_addr constant [34 x i8] c"Bind must be called on a function\00", align 1
@.str.64 = private unnamed_addr constant [29 x i8] c"Generator is already running\00", align 1
@.str.65 = private unnamed_addr constant [19 x i8] c"Illegal invocation\00", align 1
@.str.66 = private unnamed_addr constant [63 x i8] c"Immutable prototype object '%' cannot have their prototype set\00", align 1
@.str.67 = private unnamed_addr constant [39 x i8] c"Import assertion has duplicate key '%'\00", align 1
@.str.68 = private unnamed_addr constant [27 x i8] c"Cannot use new with import\00", align 1
@.str.69 = private unnamed_addr constant [45 x i8] c"Cannot use import statement outside a module\00", align 1
@.str.70 = private unnamed_addr constant [42 x i8] c"Cannot use 'import.meta' outside a module\00", align 1
@.str.71 = private unnamed_addr constant [30 x i8] c"import() requires a specifier\00", align 1
@.str.72 = private unnamed_addr constant [43 x i8] c"Method % called on incompatible receiver %\00", align 1
@.str.73 = private unnamed_addr constant [58 x i8] c"Function has non-object prototype '%' in instanceof check\00", align 1
@.str.74 = private unnamed_addr constant [17 x i8] c"invalid_argument\00", align 1
@.str.75 = private unnamed_addr constant [48 x i8] c"Cannot use 'in' operator to search for '%' in %\00", align 1
@.str.76 = private unnamed_addr constant [67 x i8] c"RegExp exec method returned something other than an Object or null\00", align 1
@.str.77 = private unnamed_addr constant [34 x i8] c"Invalid unit argument for %() '%'\00", align 1
@.str.78 = private unnamed_addr constant [41 x i8] c"Iterable yielded % which is not a string\00", align 1
@.str.79 = private unnamed_addr constant [35 x i8] c"Iterator result % is not an object\00", align 1
@.str.80 = private unnamed_addr constant [30 x i8] c"Found non-callable @@iterator\00", align 1
@.str.81 = private unnamed_addr constant [40 x i8] c"Iterator value % is not an entry object\00", align 1
@.str.82 = private unnamed_addr constant [40 x i8] c"Language ID should be string or object.\00", align 1
@.str.83 = private unnamed_addr constant [68 x i8] c"First argument to Intl.Locale constructor can't be empty or missing\00", align 1
@.str.84 = private unnamed_addr constant [38 x i8] c"Incorrect locale information provided\00", align 1
@.str.85 = private unnamed_addr constant [42 x i8] c"Incorrect ListFormat information provided\00", align 1
@.str.86 = private unnamed_addr constant [40 x i8] c"flatMap mapper function is not callable\00", align 1
@.str.87 = private unnamed_addr constant [62 x i8] c"Method % called on a non-object or on a wrong type of object.\00", align 1
@.str.88 = private unnamed_addr constant [43 x i8] c"Method invoked on an object that is not %.\00", align 1
@.str.89 = private unnamed_addr constant [10 x i8] c"no access\00", align 1
@.str.90 = private unnamed_addr constant [48 x i8] c"Right-hand side of 'instanceof' is not callable\00", align 1
@.str.91 = private unnamed_addr constant [35 x i8] c"Cannot destructure '%' as it is %.\00", align 1
@.str.92 = private unnamed_addr constant [51 x i8] c"Cannot destructure property '%' of '%' as it is %.\00", align 1
@.str.93 = private unnamed_addr constant [20 x i8] c"% is not extensible\00", align 1
@.str.94 = private unnamed_addr constant [38 x i8] c"The 'assert' option must be an object\00", align 1
@.str.95 = private unnamed_addr constant [49 x i8] c"Right-hand side of 'instanceof' is not an object\00", align 1
@.str.96 = private unnamed_addr constant [30 x i8] c"Cannot read property '%' of %\00", align 1
@.str.97 = private unnamed_addr constant [29 x i8] c"Cannot set property '%' of %\00", align 1
@.str.98 = private unnamed_addr constant [50 x i8] c"The second argument to import() must be an object\00", align 1
@.str.99 = private unnamed_addr constant [40 x i8] c"Import assertion value must be a string\00", align 1
@.str.100 = private unnamed_addr constant [51 x i8] c"Cannot set property % of % which has only a getter\00", align 1
@.str.101 = private unnamed_addr constant [21 x i8] c"% is not an iterator\00", align 1
@.str.102 = private unnamed_addr constant [19 x i8] c"% is not a promise\00", align 1
@.str.103 = private unnamed_addr constant [23 x i8] c"% is not a constructor\00", align 1
@.str.104 = private unnamed_addr constant [30 x i8] c"% requires that 'this' be a %\00", align 1
@.str.105 = private unnamed_addr constant [56 x i8] c"% is not a function or its return value is not iterable\00", align 1
@.str.106 = private unnamed_addr constant [62 x i8] c"% is not a function or its return value is not async iterable\00", align 1
@.str.107 = private unnamed_addr constant [39 x i8] c"Value need to be finite number for %()\00", align 1
@.str.108 = private unnamed_addr constant [18 x i8] c"% is not iterable\00", align 1
@.str.109 = private unnamed_addr constant [43 x i8] c"% is not iterable (cannot read property %)\00", align 1
@.str.110 = private unnamed_addr constant [24 x i8] c"% is not async iterable\00", align 1
@.str.111 = private unnamed_addr constant [31 x i8] c"% is not a valid property name\00", align 1
@.str.112 = private unnamed_addr constant [27 x i8] c"this is not a typed array.\00", align 1
@.str.113 = private unnamed_addr constant [46 x i8] c"Super constructor % of % is not a constructor\00", align 1
@.str.114 = private unnamed_addr constant [60 x i8] c"Super constructor % of anonymous class is not a constructor\00", align 1
@.str.115 = private unnamed_addr constant [33 x i8] c"% is not an integer typed array.\00", align 1
@.str.116 = private unnamed_addr constant [43 x i8] c"% is not an int32 or BigInt64 typed array.\00", align 1
@.str.117 = private unnamed_addr constant [31 x i8] c"% is not a shared typed array.\00", align 1
@.str.118 = private unnamed_addr constant [54 x i8] c"Object.prototype.__defineGetter__: Expecting function\00", align 1
@.str.119 = private unnamed_addr constant [29 x i8] c"Getter must be a function: %\00", align 1
@.str.120 = private unnamed_addr constant [48 x i8] c"Cannot add property %, object is not extensible\00", align 1
@.str.121 = private unnamed_addr constant [54 x i8] c"Object.prototype.__defineSetter__: Expecting function\00", align 1
@.str.122 = private unnamed_addr constant [29 x i8] c"Setter must be a function: %\00", align 1
@.str.123 = private unnamed_addr constant [62 x i8] c"Function object that's not a constructor was created with new\00", align 1
@.str.124 = private unnamed_addr constant [38 x i8] c"Chaining cycle detected for promise %\00", align 1
@.str.125 = private unnamed_addr constant [71 x i8] c"Promise executor has already been invoked with non-undefined arguments\00", align 1
@.str.126 = private unnamed_addr constant [51 x i8] c"Promise resolve or reject function is not callable\00", align 1
@.str.127 = private unnamed_addr constant [42 x i8] c"Property description must be an object: %\00", align 1
@.str.128 = private unnamed_addr constant [62 x i8] c"'%' returned for property '%' of object '%' is not a function\00", align 1
@.str.129 = private unnamed_addr constant [50 x i8] c"Object prototype may only be an Object or null: %\00", align 1
@.str.130 = private unnamed_addr constant [61 x i8] c"Class extends value does not have valid prototype property %\00", align 1
@.str.131 = private unnamed_addr constant [53 x i8] c"'construct' on proxy: trap returned non-object ('%')\00", align 1
@.str.132 = private unnamed_addr constant [156 x i8] c"'defineProperty' on proxy: trap returned truish for defining non-configurable property '%' which is either non-existent or configurable in the proxy target\00", align 1
@.str.133 = private unnamed_addr constant [223 x i8] c"'defineProperty' on proxy: trap returned truish for defining non-configurable property '%' which cannot be non-writable, unless there exists a corresponding non-configurable, non-writable own property of the target object.\00", align 1
@.str.134 = private unnamed_addr constant [108 x i8] c"'defineProperty' on proxy: trap returned truish for adding property '%'  to the non-extensible proxy target\00", align 1
@.str.135 = private unnamed_addr constant [141 x i8] c"'defineProperty' on proxy: trap returned truish for adding property '%'  that is incompatible with the existing property in the proxy target\00", align 1
@.str.136 = private unnamed_addr constant [111 x i8] c"'deleteProperty' on proxy: trap returned truish for property '%' which is non-configurable in the proxy target\00", align 1
@.str.137 = private unnamed_addr constant [104 x i8] c"'deleteProperty' on proxy: trap returned truish for property '%' but the proxy target is non-extensible\00", align 1
@.str.138 = private unnamed_addr constant [172 x i8] c"'get' on proxy: property '%' is a read-only and non-configurable data property on the proxy target but the proxy did not return its actual value (expected '%' but got '%')\00", align 1
@.str.139 = private unnamed_addr constant [176 x i8] c"'get' on proxy: property '%' is a non-configurable accessor property on the proxy target and does not have a getter function, but the trap did not return 'undefined' (got '%')\00", align 1
@.str.140 = private unnamed_addr constant [147 x i8] c"'getOwnPropertyDescriptor' on proxy: trap returned descriptor for property '%' that is incompatible with the existing property in the proxy target\00", align 1
@.str.141 = private unnamed_addr constant [97 x i8] c"'getOwnPropertyDescriptor' on proxy: trap returned neither object nor undefined for property '%'\00", align 1
@.str.142 = private unnamed_addr constant [153 x i8] c"'getOwnPropertyDescriptor' on proxy: trap reported non-configurability for property '%' which is either non-existent or configurable in the proxy target\00", align 1
@.str.143 = private unnamed_addr constant [158 x i8] c"'getOwnPropertyDescriptor' on proxy: trap reported non-configurable and writable for property '%' which is non-configurable, non-writable in the proxy target\00", align 1
@.str.144 = private unnamed_addr constant [126 x i8] c"'getOwnPropertyDescriptor' on proxy: trap returned undefined for property '%' which exists in the non-extensible proxy target\00", align 1
@.str.145 = private unnamed_addr constant [124 x i8] c"'getOwnPropertyDescriptor' on proxy: trap returned undefined for property '%' which is non-configurable in the proxy target\00", align 1
@.str.146 = private unnamed_addr constant [65 x i8] c"'getPrototypeOf' on proxy: trap returned neither object nor null\00", align 1
@.str.147 = private unnamed_addr constant [107 x i8] c"'getPrototypeOf' on proxy: proxy target is non-extensible but the trap did not return its actual prototype\00", align 1
@.str.148 = private unnamed_addr constant [108 x i8] c"'has' on proxy: trap returned falsish for property '%' which exists in the proxy target as non-configurable\00", align 1
@.str.149 = private unnamed_addr constant [94 x i8] c"'has' on proxy: trap returned falsish for property '%' but the proxy target is not extensible\00", align 1
@.str.150 = private unnamed_addr constant [99 x i8] c"'isExtensible' on proxy: trap result does not reflect extensibility of proxy target (which is '%')\00", align 1
@.str.151 = private unnamed_addr constant [59 x i8] c"Cannot create proxy with a non-object as target or handler\00", align 1
@.str.152 = private unnamed_addr constant [52 x i8] c"'ownKeys' on proxy: trap result did not include '%'\00", align 1
@.str.153 = private unnamed_addr constant [80 x i8] c"'ownKeys' on proxy: trap returned extra keys but proxy target is non-extensible\00", align 1
@.str.154 = private unnamed_addr constant [52 x i8] c"'ownKeys' on proxy: trap returned duplicate entries\00", align 1
@.str.155 = private unnamed_addr constant [86 x i8] c"'preventExtensions' on proxy: trap returned truish but the proxy target is extensible\00", align 1
@.str.156 = private unnamed_addr constant [48 x i8] c"Cannot pass private property name to proxy trap\00", align 1
@.str.157 = private unnamed_addr constant [52 x i8] c"Cannot perform '%' on a proxy that has been revoked\00", align 1
@.str.158 = private unnamed_addr constant [163 x i8] c"'set' on proxy: trap returned truish for property '%' which exists in the proxy target as a non-configurable and non-writable data property with a different value\00", align 1
@.str.159 = private unnamed_addr constant [161 x i8] c"'set' on proxy: trap returned truish for property '%' which exists in the proxy target as a non-configurable and non-writable accessor property without a setter\00", align 1
@.str.160 = private unnamed_addr constant [111 x i8] c"'setPrototypeOf' on proxy: trap returned truish for setting a new prototype on the non-extensible proxy target\00", align 1
@.str.161 = private unnamed_addr constant [36 x i8] c"'%' on proxy: trap returned falsish\00", align 1
@.str.162 = private unnamed_addr constant [53 x i8] c"'%' on proxy: trap returned falsish for property '%'\00", align 1
@.str.163 = private unnamed_addr constant [28 x i8] c"Cannot redefine property: %\00", align 1
@.str.164 = private unnamed_addr constant [69 x i8] c"Cannot redefine a property of an object with external array elements\00", align 1
@.str.165 = private unnamed_addr constant [44 x i8] c"Reduce of empty array with no initial value\00", align 1
@.str.166 = private unnamed_addr constant [62 x i8] c"Cannot supply flags when constructing one RegExp from another\00", align 1
@.str.167 = private unnamed_addr constant [32 x i8] c"% getter called on non-object %\00", align 1
@.str.168 = private unnamed_addr constant [37 x i8] c"% getter called on non-RegExp object\00", align 1
@.str.169 = private unnamed_addr constant [43 x i8] c"% called with a non-global RegExp argument\00", align 1
@.str.170 = private unnamed_addr constant [45 x i8] c"Incorrect RelativeDateTimeFormatter provided\00", align 1
@.str.171 = private unnamed_addr constant [37 x i8] c"Promise resolver % is not a function\00", align 1
@.str.172 = private unnamed_addr constant [47 x i8] c"The iterator's 'return' method is not callable\00", align 1
@.str.173 = private unnamed_addr constant [75 x i8] c"Derived SharedArrayBuffer constructor created a buffer which was too small\00", align 1
@.str.174 = private unnamed_addr constant [66 x i8] c"SharedArrayBuffer subclass returned this from species constructor\00", align 1
@.str.175 = private unnamed_addr constant [57 x i8] c"Classes may not have a static property named 'prototype'\00", align 1
@.str.176 = private unnamed_addr constant [32 x i8] c"Cannot delete property '%' of %\00", align 1
@.str.177 = private unnamed_addr constant [135 x i8] c"'caller', 'callee', and 'arguments' properties may not be accessed on strict mode functions or the arguments objects for calls to them\00", align 1
@.str.178 = private unnamed_addr constant [49 x i8] c"Cannot assign to read only property '%' of % '%'\00", align 1
@.str.179 = private unnamed_addr constant [36 x i8] c"Cannot create property '%' on % '%'\00", align 1
@.str.180 = private unnamed_addr constant [93 x i8] c"The .flags property of the argument to String.prototype.matchAll cannot be null or undefined\00", align 1
@.str.181 = private unnamed_addr constant [54 x i8] c"Result of the Symbol.iterator method is not an object\00", align 1
@.str.182 = private unnamed_addr constant [59 x i8] c"Result of the Symbol.asyncIterator method is not an object\00", align 1
@.str.183 = private unnamed_addr constant [18 x i8] c"% is not a symbol\00", align 1
@.str.184 = private unnamed_addr constant [42 x i8] c"Cannot convert a Symbol value to a number\00", align 1
@.str.185 = private unnamed_addr constant [42 x i8] c"Cannot convert a Symbol value to a string\00", align 1
@.str.186 = private unnamed_addr constant [48 x i8] c"The iterator does not provide a 'throw' method.\00", align 1
@.str.187 = private unnamed_addr constant [43 x i8] c"Cannot convert undefined or null to object\00", align 1
@.str.188 = private unnamed_addr constant [96 x i8] c"Invalid property descriptor. Cannot both specify accessors and a value or writable attribute, %\00", align 1
@.str.189 = private unnamed_addr constant [41 x i8] c"Identifier '%' has already been declared\00", align 1
@.str.190 = private unnamed_addr constant [33 x i8] c"%: Arguments list has wrong type\00", align 1
@.str.191 = private unnamed_addr constant [17 x i8] c"% is not defined\00", align 1
@.str.192 = private unnamed_addr constant [42 x i8] c"Super constructor may only be called once\00", align 1
@.str.193 = private unnamed_addr constant [40 x i8] c"Cannot access '%' before initialization\00", align 1
@.str.194 = private unnamed_addr constant [33 x i8] c"Unsupported reference to 'super'\00", align 1
@.str.195 = private unnamed_addr constant [17 x i8] c"Division by zero\00", align 1
@.str.196 = private unnamed_addr constant [26 x i8] c"Exponent must be positive\00", align 1
@.str.197 = private unnamed_addr constant [29 x i8] c"Maximum BigInt size exceeded\00", align 1
@.str.198 = private unnamed_addr constant [34 x i8] c"Can't set option % when % is used\00", align 1
@.str.199 = private unnamed_addr constant [37 x i8] c"Provided date is not in valid range.\00", align 1
@.str.200 = private unnamed_addr constant [88 x i8] c"Expected letters optionally connected with underscores or hyphens for a location, got %\00", align 1
@.str.201 = private unnamed_addr constant [28 x i8] c"Invalid array buffer length\00", align 1
@.str.202 = private unnamed_addr constant [32 x i8] c"Invalid array buffer max length\00", align 1
@.str.203 = private unnamed_addr constant [28 x i8] c"%: Invalid length parameter\00", align 1
@.str.204 = private unnamed_addr constant [31 x i8] c"Array buffer allocation failed\00", align 1
@.str.205 = private unnamed_addr constant [14 x i8] c"Invalid % : %\00", align 1
@.str.206 = private unnamed_addr constant [21 x i8] c"Invalid array length\00", align 1
@.str.207 = private unnamed_addr constant [28 x i8] c"Invalid atomic access index\00", align 1
@.str.208 = private unnamed_addr constant [21 x i8] c"Invalid code point %\00", align 1
@.str.209 = private unnamed_addr constant [20 x i8] c"Invalid count value\00", align 1
@.str.210 = private unnamed_addr constant [45 x i8] c"Offset is outside the bounds of the DataView\00", align 1
@.str.211 = private unnamed_addr constant [26 x i8] c"Invalid DataView length %\00", align 1
@.str.212 = private unnamed_addr constant [51 x i8] c"Start offset % is outside the bounds of the buffer\00", align 1
@.str.213 = private unnamed_addr constant [16 x i8] c"Invalid hint: %\00", align 1
@.str.214 = private unnamed_addr constant [51 x i8] c"Invalid value: not (convertible to) a safe integer\00", align 1
@.str.215 = private unnamed_addr constant [24 x i8] c"Invalid language tag: %\00", align 1
@.str.216 = private unnamed_addr constant [35 x i8] c"Invalid value used as weak map key\00", align 1
@.str.217 = private unnamed_addr constant [31 x i8] c"Invalid value used in weak set\00", align 1
@.str.218 = private unnamed_addr constant [22 x i8] c"Invalid string length\00", align 1
@.str.219 = private unnamed_addr constant [19 x i8] c"Invalid time value\00", align 1
@.str.220 = private unnamed_addr constant [31 x i8] c"Invalid time zone specified: %\00", align 1
@.str.221 = private unnamed_addr constant [33 x i8] c"% of % should be a multiple of %\00", align 1
@.str.222 = private unnamed_addr constant [26 x i8] c"Invalid typed array index\00", align 1
@.str.223 = private unnamed_addr constant [30 x i8] c"Invalid typed array length: %\00", align 1
@.str.224 = private unnamed_addr constant [44 x i8] c"let is disallowed as a lexically bound name\00", align 1
@.str.225 = private unnamed_addr constant [34 x i8] c"Illegal value for localeMatcher:%\00", align 1
@.str.226 = private unnamed_addr constant [43 x i8] c"The normalization form should be one of %.\00", align 1
@.str.227 = private unnamed_addr constant [17 x i8] c"%: Out of memory\00", align 1
@.str.228 = private unnamed_addr constant [51 x i8] c"Paramenter % of function %() is % and out of range\00", align 1
@.str.229 = private unnamed_addr constant [51 x i8] c"Numeric separator can not be used after leading 0.\00", align 1
@.str.230 = private unnamed_addr constant [37 x i8] c"% argument must be between 0 and 100\00", align 1
@.str.231 = private unnamed_addr constant [66 x i8] c"Numeric separators are not allowed at the end of numeric literals\00", align 1
@.str.232 = private unnamed_addr constant [52 x i8] c"Only one underscore is allowed as numeric separator\00", align 1
@.str.233 = private unnamed_addr constant [25 x i8] c"% value is out of range.\00", align 1
@.str.234 = private unnamed_addr constant [33 x i8] c"Maximum call stack size exceeded\00", align 1
@.str.235 = private unnamed_addr constant [49 x i8] c"toPrecision() argument must be between 1 and 100\00", align 1
@.str.236 = private unnamed_addr constant [51 x i8] c"toString() radix argument must be between 2 and 36\00", align 1
@.str.237 = private unnamed_addr constant [24 x i8] c"offset is out of bounds\00", align 1
@.str.238 = private unnamed_addr constant [20 x i8] c"Source is too large\00", align 1
@.str.239 = private unnamed_addr constant [52 x i8] c"Custom comparefn not supported for huge TypedArrays\00", align 1
@.str.240 = private unnamed_addr constant [46 x i8] c"Value % out of range for % options property %\00", align 1
@.str.241 = private unnamed_addr constant [72 x i8] c"The requested module '%' contains conflicting star exports for name '%'\00", align 1
@.str.242 = private unnamed_addr constant [44 x i8] c"Getter must not have any formal parameters.\00", align 1
@.str.243 = private unnamed_addr constant [47 x i8] c"Setter must have exactly one formal parameter.\00", align 1
@.str.244 = private unnamed_addr constant [22 x i8] c"Invalid BigInt string\00", align 1
@.str.245 = private unnamed_addr constant [41 x i8] c"Class constructor may not be an accessor\00", align 1
@.str.246 = private unnamed_addr constant [41 x i8] c"Class constructor may not be a generator\00", align 1
@.str.247 = private unnamed_addr constant [45 x i8] c"Class constructor may not be an async method\00", align 1
@.str.248 = private unnamed_addr constant [46 x i8] c"Class constructor may not be a private method\00", align 1
@.str.249 = private unnamed_addr constant [57 x i8] c"Derived constructors may only return object or undefined\00", align 1
@.str.250 = private unnamed_addr constant [38 x i8] c"A class may only have one constructor\00", align 1
@.str.251 = private unnamed_addr constant [24 x i8] c"Duplicate export of '%'\00", align 1
@.str.252 = private unnamed_addr constant [62 x i8] c"Duplicate __proto__ fields are not allowed in object literals\00", align 1
@.str.253 = private unnamed_addr constant [57 x i8] c"% loop variable declaration may not have an initializer.\00", align 1
@.str.254 = private unnamed_addr constant [62 x i8] c"The left-hand side of a for-of loop may not start with 'let'.\00", align 1
@.str.255 = private unnamed_addr constant [56 x i8] c"The left-hand side of a for-of loop may not be 'async'.\00", align 1
@.str.256 = private unnamed_addr constant [62 x i8] c"Invalid left-hand side in % loop: Must have a single binding.\00", align 1
@.str.257 = private unnamed_addr constant [68 x i8] c"Generators can only be declared at the top level or inside a block.\00", align 1
@.str.258 = private unnamed_addr constant [73 x i8] c"Async functions can only be declared at the top level or inside a block.\00", align 1
@.str.259 = private unnamed_addr constant [24 x i8] c"Illegal break statement\00", align 1
@.str.260 = private unnamed_addr constant [71 x i8] c"String literal module export names must be followed by a 'from' clause\00", align 1
@.str.261 = private unnamed_addr constant [63 x i8] c"Illegal continue statement: no surrounding iteration statement\00", align 1
@.str.262 = private unnamed_addr constant [71 x i8] c"Illegal continue statement: '%' does not denote an iteration statement\00", align 1
@.str.263 = private unnamed_addr constant [65 x i8] c"Illegal '%' directive in function with non-simple parameter list\00", align 1
@.str.264 = private unnamed_addr constant [25 x i8] c"Illegal return statement\00", align 1
@.str.265 = private unnamed_addr constant [48 x i8] c"Intrinsic calls do not support spread arguments\00", align 1
@.str.266 = private unnamed_addr constant [64 x i8] c"`...` must be followed by an identifier in declaration contexts\00", align 1
@.str.267 = private unnamed_addr constant [40 x i8] c"Illegal property in declaration context\00", align 1
@.str.268 = private unnamed_addr constant [73 x i8] c"`...` must be followed by an assignable reference in assignment contexts\00", align 1
@.str.269 = private unnamed_addr constant [44 x i8] c"Keyword must not contain escaped characters\00", align 1
@.str.270 = private unnamed_addr constant [40 x i8] c"'%' must not contain escaped characters\00", align 1
@.str.271 = private unnamed_addr constant [37 x i8] c"Invalid left-hand side in assignment\00", align 1
@.str.272 = private unnamed_addr constant [39 x i8] c"Invalid shorthand property initializer\00", align 1
@.str.273 = private unnamed_addr constant [40 x i8] c"Invalid destructuring assignment target\00", align 1
@.str.274 = private unnamed_addr constant [35 x i8] c"Invalid left-hand side in for-loop\00", align 1
@.str.275 = private unnamed_addr constant [55 x i8] c"Invalid left-hand side expression in postfix operation\00", align 1
@.str.276 = private unnamed_addr constant [54 x i8] c"Invalid left-hand side expression in prefix operation\00", align 1
@.str.277 = private unnamed_addr constant [56 x i8] c"Invalid module export name: contains unpaired surrogate\00", align 1
@.str.278 = private unnamed_addr constant [49 x i8] c"Invalid flags supplied to RegExp constructor '%'\00", align 1
@.str.279 = private unnamed_addr constant [28 x i8] c"Invalid or unexpected token\00", align 1
@.str.280 = private unnamed_addr constant [38 x i8] c"Object must be an instance of class %\00", align 1
@.str.281 = private unnamed_addr constant [57 x i8] c"Private field '%' must be declared in an enclosing class\00", align 1
@.str.282 = private unnamed_addr constant [75 x i8] c"Cannot read private member % from an object whose class did not declare it\00", align 1
@.str.283 = private unnamed_addr constant [74 x i8] c"Cannot write private member % to an object whose class did not declare it\00", align 1
@.str.284 = private unnamed_addr constant [35 x i8] c"Private method '%' is not writable\00", align 1
@.str.285 = private unnamed_addr constant [33 x i8] c"'%' was defined without a getter\00", align 1
@.str.286 = private unnamed_addr constant [33 x i8] c"'%' was defined without a setter\00", align 1
@.str.287 = private unnamed_addr constant [66 x i8] c"Unused static private method '%' cannot be accessed at debug time\00", align 1
@.str.288 = private unnamed_addr constant [29 x i8] c"Unexpected end of JSON input\00", align 1
@.str.289 = private unnamed_addr constant [41 x i8] c"Unexpected token % in JSON at position %\00", align 1
@.str.290 = private unnamed_addr constant [40 x i8] c"Unexpected number in JSON at position %\00", align 1
@.str.291 = private unnamed_addr constant [40 x i8] c"Unexpected string in JSON at position %\00", align 1
@.str.292 = private unnamed_addr constant [36 x i8] c"Label '%' has already been declared\00", align 1
@.str.293 = private unnamed_addr constant [82 x i8] c"Labelled function declaration not allowed as the body of a control flow structure\00", align 1
@.str.294 = private unnamed_addr constant [40 x i8] c"Malformed arrow function parameter list\00", align 1
@.str.295 = private unnamed_addr constant [35 x i8] c"Invalid regular expression: /%/: %\00", align 1
@.str.296 = private unnamed_addr constant [33 x i8] c"Invalid regular expression flags\00", align 1
@.str.297 = private unnamed_addr constant [36 x i8] c"Export '%' is not defined in module\00", align 1
@.str.298 = private unnamed_addr constant [44 x i8] c"Function statements require a function name\00", align 1
@.str.299 = private unnamed_addr constant [41 x i8] c"HTML comments are not allowed in modules\00", align 1
@.str.300 = private unnamed_addr constant [49 x i8] c"More than one default clause in switch statement\00", align 1
@.str.301 = private unnamed_addr constant [28 x i8] c"Illegal newline after throw\00", align 1
@.str.302 = private unnamed_addr constant [35 x i8] c"Missing catch or finally after try\00", align 1
@.str.303 = private unnamed_addr constant [45 x i8] c"Rest parameter must be last formal parameter\00", align 1
@.str.304 = private unnamed_addr constant [97 x i8] c"Flattening % elements on an array-like of length % is disallowed, as the total surpasses 2**53-1\00", align 1
@.str.305 = private unnamed_addr constant [94 x i8] c"Pushing % elements on an array-like of length % is disallowed, as the total surpasses 2**53-1\00", align 1
@.str.306 = private unnamed_addr constant [34 x i8] c"Rest element must be last element\00", align 1
@.str.307 = private unnamed_addr constant [54 x i8] c"Setter function argument must not be a rest parameter\00", align 1
@.str.308 = private unnamed_addr constant [53 x i8] c"Duplicate parameter name not allowed in this context\00", align 1
@.str.309 = private unnamed_addr constant [39 x i8] c"Arg string terminates parameters early\00", align 1
@.str.310 = private unnamed_addr constant [29 x i8] c"Unexpected end of arg string\00", align 1
@.str.311 = private unnamed_addr constant [50 x i8] c"Rest parameter may not have a default initializer\00", align 1
@.str.312 = private unnamed_addr constant [49 x i8] c"Runtime function given wrong number of arguments\00", align 1
@.str.313 = private unnamed_addr constant [107 x i8] c"Must call super constructor in derived class before accessing 'this' or returning from derived constructor\00", align 1
@.str.314 = private unnamed_addr constant [33 x i8] c"Single function literal required\00", align 1
@.str.315 = private unnamed_addr constant [121 x i8] c"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\00", align 1
@.str.316 = private unnamed_addr constant [56 x i8] c"object.constructor[Symbol.species] is not a constructor\00", align 1
@.str.317 = private unnamed_addr constant [52 x i8] c"Delete of an unqualified identifier in strict mode.\00", align 1
@.str.318 = private unnamed_addr constant [44 x i8] c"Unexpected eval or arguments in strict mode\00", align 1
@.str.319 = private unnamed_addr constant [84 x i8] c"In strict mode code, functions can only be declared at top level or inside a block.\00", align 1
@.str.320 = private unnamed_addr constant [47 x i8] c"Octal literals are not allowed in strict mode.\00", align 1
@.str.321 = private unnamed_addr constant [60 x i8] c"Decimals with leading zeros are not allowed in strict mode.\00", align 1
@.str.322 = private unnamed_addr constant [55 x i8] c"Octal escape sequences are not allowed in strict mode.\00", align 1
@.str.323 = private unnamed_addr constant [42 x i8] c"\5C8 and \5C9 are not allowed in strict mode.\00", align 1
@.str.324 = private unnamed_addr constant [50 x i8] c"Strict mode code may not include a with statement\00", align 1
@.str.325 = private unnamed_addr constant [60 x i8] c"Octal escape sequences are not allowed in template strings.\00", align 1
@.str.326 = private unnamed_addr constant [47 x i8] c"\5C8 and \5C9 are not allowed in template strings.\00", align 1
@.str.327 = private unnamed_addr constant [44 x i8] c"'this' is not a valid formal parameter name\00", align 1
@.str.328 = private unnamed_addr constant [60 x i8] c"'await' is not a valid identifier name in an async function\00", align 1
@.str.329 = private unnamed_addr constant [64 x i8] c"Illegal await-expression in formal parameters of async function\00", align 1
@.str.330 = private unnamed_addr constant [57 x i8] c"Too many arguments in function call (only 65535 allowed)\00", align 1
@.str.331 = private unnamed_addr constant [64 x i8] c"Too many parameters in function definition (only 65534 allowed)\00", align 1
@.str.332 = private unnamed_addr constant [33 x i8] c"Too many properties to enumerate\00", align 1
@.str.333 = private unnamed_addr constant [65 x i8] c"Literal containing too many nested spreads (up to 65534 allowed)\00", align 1
@.str.334 = private unnamed_addr constant [51 x i8] c"Too many variables declared (only 4194303 allowed)\00", align 1
@.str.335 = private unnamed_addr constant [38 x i8] c"Too many elements passed to Promise.%\00", align 1
@.str.336 = private unnamed_addr constant [68 x i8] c"Derived TypedArray constructor created an array which was too small\00", align 1
@.str.337 = private unnamed_addr constant [24 x i8] c"Unexpected end of input\00", align 1
@.str.338 = private unnamed_addr constant [25 x i8] c"Unexpected private field\00", align 1
@.str.339 = private unnamed_addr constant [25 x i8] c"Unexpected reserved word\00", align 1
@.str.340 = private unnamed_addr constant [37 x i8] c"Unexpected strict mode reserved word\00", align 1
@.str.341 = private unnamed_addr constant [32 x i8] c"'super' keyword unexpected here\00", align 1
@.str.342 = private unnamed_addr constant [42 x i8] c"new.target expression is not allowed here\00", align 1
@.str.343 = private unnamed_addr constant [27 x i8] c"Unexpected template string\00", align 1
@.str.344 = private unnamed_addr constant [21 x i8] c"Unexpected token '%'\00", align 1
@.str.345 = private unnamed_addr constant [127 x i8] c"Unary operator used immediately before exponentiation expression. Parenthesis must be used to disambiguate operator precedence\00", align 1
@.str.346 = private unnamed_addr constant [22 x i8] c"Unexpected identifier\00", align 1
@.str.347 = private unnamed_addr constant [18 x i8] c"Unexpected number\00", align 1
@.str.348 = private unnamed_addr constant [18 x i8] c"Unexpected string\00", align 1
@.str.349 = private unnamed_addr constant [30 x i8] c"Unexpected regular expression\00", align 1
@.str.350 = private unnamed_addr constant [64 x i8] c"Lexical declaration cannot appear in a single-statement context\00", align 1
@.str.351 = private unnamed_addr constant [20 x i8] c"Undefined label '%'\00", align 1
@.str.352 = private unnamed_addr constant [62 x i8] c"The requested module '%' does not provide an export named '%'\00", align 1
@.str.353 = private unnamed_addr constant [30 x i8] c"missing ) after argument list\00", align 1
@.str.354 = private unnamed_addr constant [38 x i8] c"Invalid regular expression: missing /\00", align 1
@.str.355 = private unnamed_addr constant [30 x i8] c"Unterminated template literal\00", align 1
@.str.356 = private unnamed_addr constant [33 x i8] c"Missing } in template expression\00", align 1
@.str.357 = private unnamed_addr constant [33 x i8] c"Found non-callable @@hasInstance\00", align 1
@.str.358 = private unnamed_addr constant [36 x i8] c"Invalid hexadecimal escape sequence\00", align 1
@.str.359 = private unnamed_addr constant [32 x i8] c"Invalid Unicode escape sequence\00", align 1
@.str.360 = private unnamed_addr constant [29 x i8] c"Undefined Unicode code-point\00", align 1
@.str.361 = private unnamed_addr constant [49 x i8] c"Yield expression not allowed in formal parameter\00", align 1
@.str.362 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@.str.363 = private unnamed_addr constant [39 x i8] c"Possible side-effect in debug-evaluate\00", align 1
@.str.364 = private unnamed_addr constant [14 x i8] c"URI malformed\00", align 1
@.str.365 = private unnamed_addr constant [12 x i8] c"unreachable\00", align 1
@.str.366 = private unnamed_addr constant [28 x i8] c"memory access out of bounds\00", align 1
@.str.367 = private unnamed_addr constant [46 x i8] c"operation does not support unaligned accesses\00", align 1
@.str.368 = private unnamed_addr constant [15 x i8] c"divide by zero\00", align 1
@.str.369 = private unnamed_addr constant [30 x i8] c"divide result unrepresentable\00", align 1
@.str.370 = private unnamed_addr constant [18 x i8] c"remainder by zero\00", align 1
@.str.371 = private unnamed_addr constant [39 x i8] c"float unrepresentable in integer range\00", align 1
@.str.372 = private unnamed_addr constant [29 x i8] c"table index is out of bounds\00", align 1
@.str.373 = private unnamed_addr constant [45 x i8] c"null function or function signature mismatch\00", align 1
@.str.374 = private unnamed_addr constant [29 x i8] c"multi-return length mismatch\00", align 1
@.str.375 = private unnamed_addr constant [50 x i8] c"type incompatibility when transforming from/to JS\00", align 1
@.str.376 = private unnamed_addr constant [30 x i8] c"data segment has been dropped\00", align 1
@.str.377 = private unnamed_addr constant [33 x i8] c"element segment has been dropped\00", align 1
@.str.378 = private unnamed_addr constant [22 x i8] c"rethrowing null value\00", align 1
@.str.379 = private unnamed_addr constant [29 x i8] c"dereferencing a null pointer\00", align 1
@.str.380 = private unnamed_addr constant [13 x i8] c"illegal cast\00", align 1
@.str.381 = private unnamed_addr constant [35 x i8] c"array element access out of bounds\00", align 1
@.str.382 = private unnamed_addr constant [15 x i8] c"wasm exception\00", align 1
@.str.383 = private unnamed_addr constant [18 x i8] c"Invalid asm.js: %\00", align 1
@.str.384 = private unnamed_addr constant [35 x i8] c"Converted asm.js to WebAssembly: %\00", align 1
@.str.385 = private unnamed_addr constant [23 x i8] c"Instantiated asm.js: %\00", align 1
@.str.386 = private unnamed_addr constant [29 x i8] c"Linking failure in asm.js: %\00", align 1
@.str.387 = private unnamed_addr constant [23 x i8] c"% could not be cloned.\00", align 1
@.str.388 = private unnamed_addr constant [38 x i8] c"Data cannot be cloned, out of memory.\00", align 1
@.str.389 = private unnamed_addr constant [52 x i8] c"An ArrayBuffer is detached and could not be cloned.\00", align 1
@.str.390 = private unnamed_addr constant [55 x i8] c"ArrayBuffer is not detachable and could not be cloned.\00", align 1
@.str.391 = private unnamed_addr constant [84 x i8] c"A SharedArrayBuffer could not be cloned. SharedArrayBuffer must not be transferred.\00", align 1
@.str.392 = private unnamed_addr constant [35 x i8] c"Unable to deserialize cloned data.\00", align 1
@.str.393 = private unnamed_addr constant [73 x i8] c"Unable to deserialize cloned data due to invalid or unsupported version.\00", align 1
@.str.394 = private unnamed_addr constant [39 x i8] c"Trace event category must be a string.\00", align 1
@.str.395 = private unnamed_addr constant [35 x i8] c"Trace event name must be a string.\00", align 1
@.str.396 = private unnamed_addr constant [46 x i8] c"Trace event name must not be an empty string.\00", align 1
@.str.397 = private unnamed_addr constant [36 x i8] c"Trace event phase must be a number.\00", align 1
@.str.398 = private unnamed_addr constant [33 x i8] c"Trace event id must be a number.\00", align 1
@.str.399 = private unnamed_addr constant [40 x i8] c"unregisterToken ('%') must be an object\00", align 1
@.str.400 = private unnamed_addr constant [47 x i8] c"FinalizationRegistry: cleanup must be callable\00", align 1
@.str.401 = private unnamed_addr constant [66 x i8] c"FinalizationRegistry.prototype.register: target must be an object\00", align 1
@.str.402 = private unnamed_addr constant [78 x i8] c"FinalizationRegistry.prototype.register: target and holdings must not be same\00", align 1
@.str.403 = private unnamed_addr constant [34 x i8] c"WeakRef: target must be an object\00", align 1
@.str.404 = private unnamed_addr constant [43 x i8] c"Invalid optional chain from new expression\00", align 1
@.str.405 = private unnamed_addr constant [43 x i8] c"Invalid optional chain from super property\00", align 1
@.str.406 = private unnamed_addr constant [42 x i8] c"Invalid tagged template on optional chain\00", align 1
@.str.407 = private unnamed_addr constant [27 x i8] c"All promises were rejected\00", align 1
@.str.408 = private unnamed_addr constant [24 x i8] c"Aborting on range error\00", align 1
@.str.409 = private unnamed_addr constant [67 x i8] c"Message suppressed for fuzzers (--correctness-fuzzer-suppressions)\00", align 1
@_ZN2v88internal24FLAG_harmony_error_causeE = external local_unnamed_addr global i8, align 1
@.str.410 = private unnamed_addr constant [25 x i8] c"Error.prototype.toString\00", align 1
@_ZN2v88internal33FLAG_clear_exceptions_on_js_entryE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal12TracingFlags13runtime_statsE = external local_unnamed_addr global %"struct.std::__1::atomic.1291", align 4
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@.str.416 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.417 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@.str.418 = private unnamed_addr constant [9 x i8] c"NewArray\00", align 1
@switch.table._ZN2v88internal16MessageFormatter14TemplateStringENS0_15MessageTemplateE = private unnamed_addr constant [401 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.48, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.53, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.62, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.63, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.65, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.66, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.68, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.71, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.73, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.74, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.75, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.76, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.77, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.78, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.79, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.83, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.85, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.86, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.87, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.88, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.89, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.90, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.91, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.92, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.93, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.94, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.95, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.96, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.97, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.98, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.100, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.101, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.102, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.103, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.104, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.105, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.106, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.107, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.108, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.109, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.110, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.111, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.112, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.113, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.115, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.116, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.117, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.118, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.119, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.120, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.121, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.122, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.123, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.124, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.125, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.126, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.127, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.128, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.129, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.130, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.131, i64 0, i64 0), i8* getelementptr inbounds ([156 x i8], [156 x i8]* @.str.132, i64 0, i64 0), i8* getelementptr inbounds ([223 x i8], [223 x i8]* @.str.133, i64 0, i64 0), i8* getelementptr inbounds ([108 x i8], [108 x i8]* @.str.134, i64 0, i64 0), i8* getelementptr inbounds ([141 x i8], [141 x i8]* @.str.135, i64 0, i64 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.136, i64 0, i64 0), i8* getelementptr inbounds ([104 x i8], [104 x i8]* @.str.137, i64 0, i64 0), i8* getelementptr inbounds ([172 x i8], [172 x i8]* @.str.138, i64 0, i64 0), i8* getelementptr inbounds ([176 x i8], [176 x i8]* @.str.139, i64 0, i64 0), i8* getelementptr inbounds ([147 x i8], [147 x i8]* @.str.140, i64 0, i64 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.141, i64 0, i64 0), i8* getelementptr inbounds ([153 x i8], [153 x i8]* @.str.142, i64 0, i64 0), i8* getelementptr inbounds ([158 x i8], [158 x i8]* @.str.143, i64 0, i64 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @.str.144, i64 0, i64 0), i8* getelementptr inbounds ([124 x i8], [124 x i8]* @.str.145, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.146, i64 0, i64 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @.str.147, i64 0, i64 0), i8* getelementptr inbounds ([108 x i8], [108 x i8]* @.str.148, i64 0, i64 0), i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.149, i64 0, i64 0), i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.151, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.152, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.153, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.154, i64 0, i64 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.155, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.156, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.157, i64 0, i64 0), i8* getelementptr inbounds ([163 x i8], [163 x i8]* @.str.158, i64 0, i64 0), i8* getelementptr inbounds ([161 x i8], [161 x i8]* @.str.159, i64 0, i64 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.160, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.161, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.162, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.163, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.164, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.165, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.166, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.167, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.168, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.169, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.170, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.171, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.172, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.173, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.174, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.175, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.176, i64 0, i64 0), i8* getelementptr inbounds ([135 x i8], [135 x i8]* @.str.177, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.178, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.179, i64 0, i64 0), i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.180, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.181, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.182, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.183, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.184, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.185, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.186, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.187, i64 0, i64 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.188, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.189, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.190, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.191, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.192, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.193, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.194, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.195, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.196, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.197, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.198, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.199, i64 0, i64 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.200, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.201, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.202, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.203, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.204, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.205, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.206, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.207, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.208, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.209, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.210, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.211, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.212, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.213, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.214, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.215, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.216, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.217, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.218, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.219, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.220, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.221, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.222, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.223, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.224, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.225, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.226, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.227, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.228, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.229, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.230, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.231, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.232, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.233, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.234, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.235, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.236, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.237, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.238, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.239, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.240, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.241, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.242, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.243, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.244, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.245, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.246, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.247, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.248, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.249, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.250, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.251, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.252, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.253, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.254, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.255, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.256, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.257, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.258, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.259, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.260, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.261, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.262, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.263, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.264, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.265, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.266, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.267, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.268, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.269, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.270, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.271, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.272, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.273, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.274, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.275, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.276, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.277, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.278, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.279, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.280, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.281, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.282, i64 0, i64 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.283, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.284, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.285, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.286, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.287, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.289, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.290, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.291, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.292, i64 0, i64 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.293, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.294, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.295, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.296, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.297, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.298, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.299, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.300, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.301, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.302, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.303, i64 0, i64 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.304, i64 0, i64 0), i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.305, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.306, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.307, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.308, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.309, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.310, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.311, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.312, i64 0, i64 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @.str.313, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.314, i64 0, i64 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @.str.315, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.316, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.317, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.318, i64 0, i64 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.319, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.320, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.321, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.322, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.323, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.324, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.325, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.326, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.327, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.328, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.329, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.330, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.331, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.332, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.333, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.334, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.335, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.336, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.337, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.338, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.339, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.340, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.341, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.342, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.343, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.344, i64 0, i64 0), i8* getelementptr inbounds ([127 x i8], [127 x i8]* @.str.345, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.346, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.347, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.348, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.349, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.350, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.351, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.352, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.353, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.354, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.355, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.356, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.357, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.358, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.359, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.360, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.361, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.362, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.363, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.364, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.365, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.366, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.367, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.368, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.369, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.370, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.371, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.372, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.373, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.374, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.375, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.376, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.377, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.378, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.379, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.380, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.381, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.382, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.383, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.384, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.385, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.386, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.387, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.388, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.389, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.390, i64 0, i64 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.391, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.392, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.393, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.394, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.395, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.396, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.397, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.398, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.399, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.400, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.401, i64 0, i64 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.402, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.403, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.404, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.405, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.406, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.407, i64 0, i64 0)], align 8
@switch.table._ZN2v88internal10ErrorUtils25NewCalledNonCallableErrorEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE = private unnamed_addr constant [5 x i32] [i32 25, i32 101, i32 103, i32 98, i32 99], align 4

@_ZN2v88internal15MessageLocationC1ENS0_6HandleINS0_6ScriptEEEii = hidden unnamed_addr alias void (%"class.v8::internal::MessageLocation"*, i64*, i32, i32), void (%"class.v8::internal::MessageLocation"*, i64*, i32, i32)* @_ZN2v88internal15MessageLocationC2ENS0_6HandleINS0_6ScriptEEEii
@_ZN2v88internal15MessageLocationC1ENS0_6HandleINS0_6ScriptEEEiiNS2_INS0_18SharedFunctionInfoEEE = hidden unnamed_addr alias void (%"class.v8::internal::MessageLocation"*, i64*, i32, i32, i64*), void (%"class.v8::internal::MessageLocation"*, i64*, i32, i32, i64*)* @_ZN2v88internal15MessageLocationC2ENS0_6HandleINS0_6ScriptEEEiiNS2_INS0_18SharedFunctionInfoEEE
@_ZN2v88internal15MessageLocationC1ENS0_6HandleINS0_6ScriptEEENS2_INS0_18SharedFunctionInfoEEEi = hidden unnamed_addr alias void (%"class.v8::internal::MessageLocation"*, i64*, i64*, i32), void (%"class.v8::internal::MessageLocation"*, i64*, i64*, i32)* @_ZN2v88internal15MessageLocationC2ENS0_6HandleINS0_6ScriptEEENS2_INS0_18SharedFunctionInfoEEEi
@_ZN2v88internal15MessageLocationC1Ev = hidden unnamed_addr alias void (%"class.v8::internal::MessageLocation"*), void (%"class.v8::internal::MessageLocation"*)* @_ZN2v88internal15MessageLocationC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal15MessageLocationC2ENS0_6HandleINS0_6ScriptEEEii(%"class.v8::internal::MessageLocation"* nocapture, i64*, i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %0, i64 0, i32 0, i32 0, i32 0
  store i64* %1, i64** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %0, i64 0, i32 1
  store i32 %2, i32* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %0, i64 0, i32 2
  store i32 %3, i32* %7, align 4
  %8 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %0, i64 0, i32 3
  store i32 -1, i32* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %0, i64 0, i32 4, i32 0, i32 0
  store i64* null, i64** %9, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal15MessageLocationC2ENS0_6HandleINS0_6ScriptEEEiiNS2_INS0_18SharedFunctionInfoEEE(%"class.v8::internal::MessageLocation"* nocapture, i64*, i32, i32, i64*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %0, i64 0, i32 0, i32 0, i32 0
  store i64* %1, i64** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %0, i64 0, i32 1
  store i32 %2, i32* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %0, i64 0, i32 2
  store i32 %3, i32* %8, align 4
  %9 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %0, i64 0, i32 3
  store i32 -1, i32* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %0, i64 0, i32 4, i32 0, i32 0
  store i64* %4, i64** %10, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal15MessageLocationC2ENS0_6HandleINS0_6ScriptEEENS2_INS0_18SharedFunctionInfoEEEi(%"class.v8::internal::MessageLocation"* nocapture, i64*, i64*, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %0, i64 0, i32 0, i32 0, i32 0
  store i64* %1, i64** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %0, i64 0, i32 1
  store i32 -1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %0, i64 0, i32 2
  store i32 -1, i32* %7, align 4
  %8 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %0, i64 0, i32 3
  store i32 %3, i32* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %0, i64 0, i32 4, i32 0, i32 0
  store i64* %2, i64** %9, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal15MessageLocationC2Ev(%"class.v8::internal::MessageLocation"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %0, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %0, i64 0, i32 1
  store i32 -1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %0, i64 0, i32 2
  store i32 -1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %0, i64 0, i32 3
  store i32 -1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %0, i64 0, i32 4, i32 0, i32 0
  store i64* null, i64** %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MessageHandler20DefaultMessageReportEPNS0_7IsolateEPKNS0_15MessageLocationENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"*, %"class.v8::internal::MessageLocation"* readonly, i64* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %5 = tail call i8* @_ZN2v88internal14MessageHandler19GetLocalizedMessageEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %2)
  %6 = icmp eq %"class.v8::internal::MessageLocation"* %1, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i8* %5) #8
  br label %84

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31
  %10 = bitcast %"struct.v8::internal::HandleScopeData"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %14, align 8
  %17 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %1, i64 0, i32 0, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, -4294967296
  %21 = add i64 %19, 7
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %20, %24
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %27 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %26, align 8
  %28 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %27, null
  %29 = inttoptr i64 %11 to i64*
  br i1 %28, label %33, label %30

30:                                               ; preds = %8
  %31 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %27, i64 %25) #8
  %32 = load i64, i64* %31, align 8
  br label %43

33:                                               ; preds = %8
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %35 = icmp eq i64* %13, %29
  br i1 %35, label %36, label %38

36:                                               ; preds = %33
  %37 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #8
  br label %38

38:                                               ; preds = %36, %33
  %39 = phi i64* [ %37, %36 ], [ %29, %33 ]
  %40 = ptrtoint i64* %39 to i64
  %41 = add i64 %40, 8
  %42 = inttoptr i64 %41 to i64*
  store i64* %42, i64** %34, align 8
  store i64 %25, i64* %39, align 8
  br label %43

43:                                               ; preds = %30, %38
  %44 = phi i64 [ %32, %30 ], [ %25, %38 ]
  %45 = and i64 %44, 1
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %64, label %47

47:                                               ; preds = %43
  %48 = and i64 %44, -4294967296
  %49 = add i64 %44, -1
  %50 = inttoptr i64 %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %48, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = icmp ult i16 %56, 64
  br i1 %57, label %58, label %64

58:                                               ; preds = %47
  %59 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #8
  %60 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %44, i64* %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4, i64 0, i32 0
  %62 = call i8* @_ZN2v88internal6String9ToCStringENS0_14AllowNullsFlagENS0_14RobustnessFlagEPi(%"class.v8::internal::String"* nonnull %61, i32 1, i32 1, i32* null) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #8
  %63 = icmp eq i8* %62, null
  br i1 %63, label %64, label %67

64:                                               ; preds = %58, %47, %43
  %65 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %1, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i32 %66, i8* %5) #8
  br label %70

67:                                               ; preds = %58
  %68 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %1, i64 0, i32 1
  %69 = load i32, i32* %68, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* nonnull %62, i32 %69, i8* %5) #8
  call void @_ZdaPv(i8* nonnull %62) #12
  br label %70

70:                                               ; preds = %64, %67
  %71 = icmp eq %"class.v8::internal::Isolate"* %0, null
  br i1 %71, label %84, label %72

72:                                               ; preds = %70
  %73 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %9, i64 0, i32 0
  %74 = load i64*, i64** %73, align 8
  store i64 %11, i64* %10, align 8
  %75 = load i32, i32* %14, align 8
  %76 = add nsw i32 %75, -1
  store i32 %76, i32* %14, align 8
  %77 = load i64*, i64** %12, align 8
  %78 = icmp eq i64* %77, %13
  br i1 %78, label %81, label %79

79:                                               ; preds = %72
  store i64* %13, i64** %12, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %0) #8
  %80 = load i64*, i64** %73, align 8
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i64* [ %80, %79 ], [ %29, %72 ]
  %83 = phi i64* [ %13, %79 ], [ %74, %72 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %82, i64* %83) #8
  br label %84

84:                                               ; preds = %81, %70, %7
  %85 = icmp eq i8* %5, null
  br i1 %85, label %87, label %86

86:                                               ; preds = %84
  call void @_ZdaPv(i8* nonnull %5) #12
  br label %87

87:                                               ; preds = %84, %86
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal14MessageHandler19GetLocalizedMessageEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.v8::internal::Vector.1009", align 8
  %4 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31
  %6 = bitcast %"struct.v8::internal::HandleScopeData"* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %10, align 8
  %13 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #8
  %14 = load i64, i64* %1, align 8
  %15 = and i64 %14, -4294967296
  %16 = add i64 %14, 15
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %15, %19
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %22 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %21, align 8
  %23 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %22, null
  %24 = inttoptr i64 %7 to i64*
  br i1 %23, label %27, label %25

25:                                               ; preds = %2
  %26 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %22, i64 %20) #8
  br label %37

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %29 = icmp eq i64* %9, %24
  br i1 %29, label %30, label %32

30:                                               ; preds = %27
  %31 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #8
  br label %32

32:                                               ; preds = %30, %27
  %33 = phi i64* [ %31, %30 ], [ %24, %27 ]
  %34 = ptrtoint i64* %33 to i64
  %35 = add i64 %34, 8
  %36 = inttoptr i64 %35 to i64*
  store i64* %36, i64** %28, align 8
  store i64 %20, i64* %33, align 8
  br label %37

37:                                               ; preds = %25, %32
  %38 = phi i64* [ %26, %25 ], [ %33, %32 ]
  %39 = load i64, i64* %1, align 8
  %40 = add i64 %39, 11
  %41 = inttoptr i64 %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = ashr i32 %42, 1
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 9
  %45 = icmp eq i64* %38, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %37
  %47 = tail call i64* @_ZN2v88internal6Object21NoSideEffectsToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* nonnull %38) #8
  br label %48

48:                                               ; preds = %46, %37
  %49 = phi i64* [ %44, %37 ], [ %47, %46 ]
  %50 = tail call i64* @_ZN2v88internal16MessageFormatter6FormatEPNS0_7IsolateENS0_15MessageTemplateENS0_6HandleINS0_6StringEEES7_S7_(%"class.v8::internal::Isolate"* %0, i32 %43, i64* %49, i64* %44, i64* %44) #8
  %51 = icmp eq i64* %50, null
  br i1 %51, label %52, label %61

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  store i64 %54, i64* %55, align 8
  %56 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %57 = bitcast %"class.v8::internal::Vector.1009"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #8
  %58 = getelementptr inbounds %"class.v8::internal::Vector.1009", %"class.v8::internal::Vector.1009"* %3, i64 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i8** %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Vector.1009", %"class.v8::internal::Vector.1009"* %3, i64 0, i32 1
  store i64 7, i64* %59, align 8
  %60 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %56, %"class.v8::internal::Vector.1009"* nonnull dereferenceable(16) %3, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #8
  br label %63

61:                                               ; preds = %48
  %62 = tail call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* nonnull %50, i8 zeroext 0) #8
  br label %63

63:                                               ; preds = %52, %61
  %64 = phi i64* [ %62, %61 ], [ %60, %52 ]
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4, i64 0, i32 0
  %68 = call i8* @_ZN2v88internal6String9ToCStringENS0_14AllowNullsFlagENS0_14RobustnessFlagEPi(%"class.v8::internal::String"* nonnull %67, i32 1, i32 1, i32* null) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #8
  %69 = icmp eq %"class.v8::internal::Isolate"* %0, null
  br i1 %69, label %82, label %70

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %5, i64 0, i32 0
  %72 = load i64*, i64** %71, align 8
  store i64 %7, i64* %6, align 8
  %73 = load i32, i32* %10, align 8
  %74 = add nsw i32 %73, -1
  store i32 %74, i32* %10, align 8
  %75 = load i64*, i64** %8, align 8
  %76 = icmp eq i64* %75, %9
  br i1 %76, label %79, label %77

77:                                               ; preds = %70
  store i64* %9, i64** %8, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %0) #8
  %78 = load i64*, i64** %71, align 8
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i64* [ %78, %77 ], [ %24, %70 ]
  %81 = phi i64* [ %9, %77 ], [ %72, %70 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %80, i64* %81) #8
  br label %82

82:                                               ; preds = %63, %79
  ret i8* %68
}

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare i8* @_ZN2v88internal6String9ToCStringENS0_14AllowNullsFlagENS0_14RobustnessFlagEPi(%"class.v8::internal::String"*, i32, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal14MessageHandler17MakeMessageObjectEPNS0_7IsolateENS0_15MessageTemplateEPKNS0_15MessageLocationENS0_6HandleINS0_6ObjectEEENS8_INS0_10FixedArrayEEE(%"class.v8::internal::Isolate"*, i32, %"class.v8::internal::MessageLocation"* readonly, i64*, i64*) local_unnamed_addr #1 align 2 {
  %6 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 600
  %8 = icmp ne %"class.v8::internal::MessageLocation"* %2, null
  %9 = load i8, i8* @_ZN2v88internal36FLAG_correctness_fuzzer_suppressionsE, align 1
  %10 = icmp eq i8 %9, 0
  %11 = and i1 %8, %10
  br i1 %11, label %12, label %23

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %2, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %2, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %2, i64 0, i32 0, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %2, i64 0, i32 3
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %2, i64 0, i32 4, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  br label %23

23:                                               ; preds = %5, %12
  %24 = phi i64* [ %22, %12 ], [ null, %5 ]
  %25 = phi i64* [ %18, %12 ], [ %7, %5 ]
  %26 = phi i32 [ %20, %12 ], [ -1, %5 ]
  %27 = phi i32 [ %16, %12 ], [ -1, %5 ]
  %28 = phi i32 [ %14, %12 ], [ -1, %5 ]
  %29 = icmp eq i64* %4, null
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %31 = select i1 %29, i64* %30, i64* %4
  %32 = ptrtoint i64* %25 to i64
  %33 = ptrtoint i64* %31 to i64
  %34 = tail call i64* @_ZN2v88internal7Factory18NewJSMessageObjectENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEEiiNS3_INS0_18SharedFunctionInfoEEEiNS3_INS0_6ScriptEEES5_(%"class.v8::internal::Factory"* %6, i32 %1, i64* %3, i32 %28, i32 %27, i64* %24, i32 %26, i64 %32, i64 %33) #8
  ret i64* %34
}

declare i64* @_ZN2v88internal7Factory18NewJSMessageObjectENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEEiiNS3_INS0_18SharedFunctionInfoEEEiNS3_INS0_6ScriptEEES5_(%"class.v8::internal::Factory"*, i32, i64*, i32, i32, i64*, i32, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MessageHandler13ReportMessageEPNS0_7IsolateEPKNS0_15MessageLocationENS0_6HandleINS0_15JSMessageObjectEEE(%"class.v8::internal::Isolate"*, %"class.v8::internal::MessageLocation"* readonly, i64*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.v8::internal::Vector.1009", align 8
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast i64* %2 to %"class.v8::Message"*
  %7 = tail call i32 @_ZNK2v87Message10ErrorLevelEv(%"class.v8::Message"* %6) #8
  %8 = icmp eq i32 %7, 8
  br i1 %8, label %9, label %214

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = trunc i64 %15 to i32
  %17 = trunc i64 %13 to i32
  %18 = icmp eq i32 %16, %17
  %19 = select i1 %18, i64 %11, i64 %15
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %21 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %20, align 8
  %22 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %9
  %24 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %21, i64 %19) #8
  br label %38

25:                                               ; preds = %9
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %29 = load i64*, i64** %28, align 8
  %30 = icmp eq i64* %27, %29
  br i1 %30, label %31, label %33

31:                                               ; preds = %25
  %32 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #8
  br label %33

33:                                               ; preds = %31, %25
  %34 = phi i64* [ %32, %31 ], [ %27, %25 ]
  %35 = ptrtoint i64* %34 to i64
  %36 = add i64 %35, 8
  %37 = inttoptr i64 %36 to i64*
  store i64* %37, i64** %26, align 8
  store i64 %19, i64* %34, align 8
  br label %38

38:                                               ; preds = %23, %33
  %39 = phi i64* [ %24, %23 ], [ %34, %33 ]
  %40 = load i64, i64* %14, align 8
  %41 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %20, align 8
  %42 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %38
  %44 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %41, i64 %40) #8
  br label %58

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %49 = load i64*, i64** %48, align 8
  %50 = icmp eq i64* %47, %49
  br i1 %50, label %51, label %53

51:                                               ; preds = %45
  %52 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #8
  br label %53

53:                                               ; preds = %51, %45
  %54 = phi i64* [ %52, %51 ], [ %47, %45 ]
  %55 = ptrtoint i64* %54 to i64
  %56 = add i64 %55, 8
  %57 = inttoptr i64 %56 to i64*
  store i64* %57, i64** %46, align 8
  store i64 %40, i64* %54, align 8
  br label %58

58:                                               ; preds = %43, %53
  %59 = phi i64* [ %44, %43 ], [ %54, %53 ]
  %60 = load i64, i64* %12, align 8
  store i64 %60, i64* %14, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 13
  store i8 0, i8* %61, align 1
  %62 = load i64, i64* %2, align 8
  %63 = and i64 %62, -4294967296
  %64 = add i64 %62, 15
  %65 = inttoptr i64 %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = zext i32 %66 to i64
  %68 = and i64 %67, 1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %211, label %70

70:                                               ; preds = %58
  %71 = or i64 %63, %67
  %72 = add i64 %71, -1
  %73 = inttoptr i64 %72 to i32*
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = zext i32 %74 to i64
  %76 = or i64 %63, %75
  %77 = add i64 %76, 7
  %78 = inttoptr i64 %77 to i16*
  %79 = load atomic i16, i16* %78 monotonic, align 2
  %80 = icmp ugt i16 %79, 188
  br i1 %80, label %81, label %211

81:                                               ; preds = %70
  %82 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31
  %83 = bitcast %"struct.v8::internal::HandleScopeData"* %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %86 = load i64*, i64** %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 2
  %88 = load i32, i32* %87, align 8
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %87, align 8
  %90 = load i64, i64* %2, align 8
  %91 = and i64 %90, -4294967296
  %92 = add i64 %90, 15
  %93 = inttoptr i64 %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = zext i32 %94 to i64
  %96 = or i64 %91, %95
  %97 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %20, align 8
  %98 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %97, null
  %99 = inttoptr i64 %84 to i64*
  br i1 %98, label %103, label %100

100:                                              ; preds = %81
  %101 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %97, i64 %96) #8
  %102 = load i64, i64* %101, align 8
  br label %113

103:                                              ; preds = %81
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %105 = icmp eq i64* %86, %99
  br i1 %105, label %106, label %108

106:                                              ; preds = %103
  %107 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #8
  br label %108

108:                                              ; preds = %106, %103
  %109 = phi i64* [ %107, %106 ], [ %99, %103 ]
  %110 = ptrtoint i64* %109 to i64
  %111 = add i64 %110, 8
  %112 = inttoptr i64 %111 to i64*
  store i64* %112, i64** %104, align 8
  store i64 %96, i64* %109, align 8
  br label %113

113:                                              ; preds = %100, %108
  %114 = phi i64 [ %102, %100 ], [ %96, %108 ]
  %115 = phi i64* [ %101, %100 ], [ %109, %108 ]
  %116 = and i64 %114, 1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %131, label %118

118:                                              ; preds = %113
  %119 = and i64 %114, -4294967296
  %120 = add i64 %114, -1
  %121 = inttoptr i64 %120 to i32*
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = zext i32 %122 to i64
  %124 = or i64 %119, %123
  %125 = add i64 %124, 7
  %126 = inttoptr i64 %125 to i16*
  %127 = load atomic i16, i16* %126 monotonic, align 2
  %128 = icmp eq i16 %127, 1094
  br i1 %128, label %129, label %131

129:                                              ; preds = %118
  %130 = tail call i64* @_ZN2v88internal6Object21NoSideEffectsToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %115) #8
  br label %152

131:                                              ; preds = %113, %118
  %132 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %132) #8
  %133 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::Isolate"*
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %133) #8
  call void @_ZN2v88TryCatch10SetVerboseEb(%"class.v8::TryCatch"* nonnull %5, i1 zeroext false) #8
  call void @_ZN2v88TryCatch17SetCaptureMessageEb(%"class.v8::TryCatch"* nonnull %5, i1 zeroext false) #8
  %134 = load i64, i64* %115, align 8
  %135 = and i64 %134, 1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %148, label %137

137:                                              ; preds = %131
  %138 = and i64 %134, -4294967296
  %139 = add i64 %134, -1
  %140 = inttoptr i64 %139 to i32*
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = zext i32 %141 to i64
  %143 = or i64 %138, %142
  %144 = add i64 %143, 7
  %145 = inttoptr i64 %144 to i16*
  %146 = load atomic i16, i16* %145 monotonic, align 2
  %147 = icmp ult i16 %146, 64
  br i1 %147, label %150, label %148

148:                                              ; preds = %137, %131
  %149 = call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %115) #8
  br label %150

150:                                              ; preds = %137, %148
  %151 = phi i64* [ %149, %148 ], [ %115, %137 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %132) #8
  br label %152

152:                                              ; preds = %150, %129
  %153 = phi i64* [ %130, %129 ], [ %151, %150 ]
  %154 = icmp eq i64* %153, null
  br i1 %154, label %155, label %165

155:                                              ; preds = %152
  %156 = load i64, i64* %12, align 8
  store i64 %156, i64* %14, align 8
  store i8 0, i8* %61, align 1
  %157 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %158 = bitcast %"class.v8::internal::Vector.1009"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %158) #8
  %159 = getelementptr inbounds %"class.v8::internal::Vector.1009", %"class.v8::internal::Vector.1009"* %4, i64 0, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i8** %159, align 8
  %160 = getelementptr inbounds %"class.v8::internal::Vector.1009", %"class.v8::internal::Vector.1009"* %4, i64 0, i32 1
  store i64 9, i64* %160, align 8
  %161 = call i64* @_ZN2v88internal7Factory20NewStringFromOneByteERKNS0_6VectorIKhEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %157, %"class.v8::internal::Vector.1009"* nonnull dereferenceable(16) %4, i8 zeroext 0) #8
  %162 = icmp eq i64* %161, null
  br i1 %162, label %163, label %164, !prof !2

163:                                              ; preds = %155
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.416, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.417, i64 0, i64 0)) #13
  unreachable

164:                                              ; preds = %155
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %158) #8
  br label %165

165:                                              ; preds = %152, %164
  %166 = phi i64* [ %161, %164 ], [ %153, %152 ]
  %167 = load i64, i64* %2, align 8
  %168 = load i64, i64* %166, align 8
  %169 = add i64 %167, 15
  %170 = inttoptr i64 %169 to i32*
  %171 = trunc i64 %168 to i32
  store atomic volatile i32 %171, i32* %170 monotonic, align 4
  %172 = and i64 %168, 1
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %197, label %174

174:                                              ; preds = %165
  %175 = and i64 %167, -262144
  %176 = or i64 %175, 8
  %177 = inttoptr i64 %176 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = and i64 %178, 262144
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %185, label %181

181:                                              ; preds = %174
  %182 = or i64 %175, 16
  %183 = inttoptr i64 %182 to %"class.v8::internal::Heap"**
  %184 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %183, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %184, i64 %167, i64 %169, i64 %168) #8
  br label %185

185:                                              ; preds = %181, %174
  %186 = and i64 %168, -262144
  %187 = or i64 %186, 8
  %188 = inttoptr i64 %187 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = and i64 %189, 24
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %197, label %192

192:                                              ; preds = %185
  %193 = load i64, i64* %177, align 8
  %194 = and i64 %193, 24
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %192
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %167, i64 %169, i64 %168) #8
  br label %197

197:                                              ; preds = %165, %185, %192, %196
  %198 = icmp eq %"class.v8::internal::Isolate"* %0, null
  br i1 %198, label %211, label %199

199:                                              ; preds = %197
  %200 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %82, i64 0, i32 0
  %201 = load i64*, i64** %200, align 8
  store i64 %84, i64* %83, align 8
  %202 = load i32, i32* %87, align 8
  %203 = add nsw i32 %202, -1
  store i32 %203, i32* %87, align 8
  %204 = load i64*, i64** %85, align 8
  %205 = icmp eq i64* %204, %86
  br i1 %205, label %208, label %206

206:                                              ; preds = %199
  store i64* %86, i64** %85, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %0) #8
  %207 = load i64*, i64** %200, align 8
  br label %208

208:                                              ; preds = %206, %199
  %209 = phi i64* [ %207, %206 ], [ %99, %199 ]
  %210 = phi i64* [ %86, %206 ], [ %201, %199 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %209, i64* %210) #8
  br label %211

211:                                              ; preds = %58, %208, %197, %70
  %212 = bitcast i64* %39 to %"class.v8::Value"*
  call void @_ZN2v88internal14MessageHandler25ReportMessageNoExceptionsEPNS0_7IsolateEPKNS0_15MessageLocationENS0_6HandleINS0_6ObjectEEENS_5LocalINS_5ValueEEE(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::MessageLocation"* %1, i64* %2, %"class.v8::Value"* %212)
  %213 = load i64, i64* %59, align 8
  store i64 %213, i64* %14, align 8
  br label %215

214:                                              ; preds = %3
  tail call void @_ZN2v88internal14MessageHandler25ReportMessageNoExceptionsEPNS0_7IsolateEPKNS0_15MessageLocationENS0_6HandleINS0_6ObjectEEENS_5LocalINS_5ValueEEE(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::MessageLocation"* %1, i64* %2, %"class.v8::Value"* null)
  br label %215

215:                                              ; preds = %214, %211
  ret void
}

declare i32 @_ZNK2v87Message10ErrorLevelEv(%"class.v8::Message"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal6Object21NoSideEffectsToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #3

declare void @_ZN2v88TryCatch10SetVerboseEb(%"class.v8::TryCatch"*, i1 zeroext) local_unnamed_addr #3

declare void @_ZN2v88TryCatch17SetCaptureMessageEb(%"class.v8::TryCatch"*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MessageHandler25ReportMessageNoExceptionsEPNS0_7IsolateEPKNS0_15MessageLocationENS0_6HandleINS0_6ObjectEEENS_5LocalINS_5ValueEEE(%"class.v8::internal::Isolate"*, %"class.v8::internal::MessageLocation"* readonly, i64*, %"class.v8::Value"*) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = bitcast i64* %2 to %"class.v8::Message"*
  %8 = tail call i32 @_ZNK2v87Message10ErrorLevelEv(%"class.v8::Message"* %7) #8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 656
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = ashr i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %37, label %16

16:                                               ; preds = %4
  %17 = icmp sgt i32 %13, 1
  br i1 %17, label %18, label %145

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31
  %20 = bitcast %"struct.v8::internal::HandleScopeData"* %19 to i64*
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 2
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %26 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  %27 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %28 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 14, i32 0
  %30 = bitcast %"class.v8::TryCatch"* %6 to i8*
  %31 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::Isolate"*
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  %34 = icmp eq %"class.v8::internal::Isolate"* %0, null
  %35 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %19, i64 0, i32 0
  %36 = sext i32 %14 to i64
  br label %46

37:                                               ; preds = %4
  tail call void @_ZN2v88internal14MessageHandler20DefaultMessageReportEPNS0_7IsolateEPKNS0_15MessageLocationENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::MessageLocation"* %1, i64* %2)
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = trunc i64 %41 to i32
  %43 = trunc i64 %39 to i32
  %44 = icmp eq i32 %42, %43
  br i1 %44, label %145, label %45

45:                                               ; preds = %37
  store i64 %39, i64* %40, align 8
  br label %145

46:                                               ; preds = %143, %18
  %47 = phi i64 [ %10, %18 ], [ %144, %143 ]
  %48 = phi i64 [ 0, %18 ], [ %141, %143 ]
  %49 = load i64, i64* %20, align 8
  %50 = load i64*, i64** %21, align 8
  %51 = load i32, i32* %22, align 8
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %22, align 8
  %53 = and i64 %47, -4294967296
  %54 = trunc i64 %48 to i32
  %55 = shl i32 %54, 2
  %56 = add i32 %55, 4
  %57 = sext i32 %56 to i64
  %58 = add nsw i64 %57, 7
  %59 = add i64 %58, %47
  %60 = inttoptr i64 %59 to i32*
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = load i64, i64* %23, align 8
  %63 = trunc i64 %62 to i32
  %64 = icmp eq i32 %61, %63
  %65 = inttoptr i64 %49 to i64*
  br i1 %64, label %128, label %66

66:                                               ; preds = %46
  %67 = load atomic i32, i32* %60 monotonic, align 4
  %68 = zext i32 %67 to i64
  %69 = or i64 %53, %68
  %70 = add i64 %69, 7
  %71 = inttoptr i64 %70 to i32*
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = add i64 %69, 15
  %74 = inttoptr i64 %73 to i32*
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = ashr i32 %75, 1
  %77 = and i32 %76, %8
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %128, label %79

79:                                               ; preds = %66
  %80 = zext i32 %72 to i64
  %81 = or i64 %53, %80
  %82 = add i64 %81, 3
  %83 = inttoptr i64 %82 to void (%"class.v8::Message"*, %"class.v8::Value"*)**
  %84 = load void (%"class.v8::Message"*, %"class.v8::Value"*)*, void (%"class.v8::Message"*, %"class.v8::Value"*)** %83, align 1
  %85 = add i64 %69, 11
  %86 = inttoptr i64 %85 to i32*
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = zext i32 %87 to i64
  %89 = or i64 %53, %88
  %90 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %24, align 8
  %91 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %79
  %93 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %90, i64 %89) #8
  br label %103

94:                                               ; preds = %79
  %95 = icmp eq i64* %50, %65
  br i1 %95, label %96, label %98

96:                                               ; preds = %94
  %97 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #8
  br label %98

98:                                               ; preds = %96, %94
  %99 = phi i64* [ %97, %96 ], [ %65, %94 ]
  %100 = ptrtoint i64* %99 to i64
  %101 = add i64 %100, 8
  %102 = inttoptr i64 %101 to i64*
  store i64* %102, i64** %25, align 8
  store i64 %89, i64* %99, align 8
  br label %103

103:                                              ; preds = %92, %98
  %104 = phi i64* [ %93, %92 ], [ %99, %98 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %26) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 40, i1 false) #8
  %105 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1291", %"struct.std::__1::atomic.1291"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %110, label %107, !prof !3

107:                                              ; preds = %103
  %108 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %29, align 8
  %109 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %108, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %109, %"class.v8::internal::RuntimeCallStats"** %27, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %109, %"class.v8::internal::RuntimeCallTimer"* %28, i32 181) #8
  br label %110

110:                                              ; preds = %103, %107
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %30) #8
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %31) #8
  %111 = load i64, i64* %104, align 8
  %112 = load i64, i64* %23, align 8
  %113 = trunc i64 %111 to i32
  %114 = trunc i64 %112 to i32
  %115 = icmp eq i32 %113, %114
  %116 = bitcast i64* %104 to %"class.v8::Value"*
  %117 = select i1 %115, %"class.v8::Value"* %3, %"class.v8::Value"* %116
  call void %84(%"class.v8::Message"* %7, %"class.v8::Value"* %117) #8
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %30) #8
  %118 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %27, align 8
  %119 = icmp eq %"class.v8::internal::RuntimeCallStats"* %118, null
  br i1 %119, label %121, label %120, !prof !3

120:                                              ; preds = %110
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %118, %"class.v8::internal::RuntimeCallTimer"* %28) #8
  br label %121

121:                                              ; preds = %110, %120
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %26) #8
  %122 = load i64, i64* %32, align 8
  %123 = load i64, i64* %33, align 8
  %124 = trunc i64 %123 to i32
  %125 = trunc i64 %122 to i32
  %126 = icmp eq i32 %124, %125
  br i1 %126, label %128, label %127

127:                                              ; preds = %121
  store i64 %122, i64* %33, align 8
  br label %128

128:                                              ; preds = %121, %66, %127, %46
  br i1 %34, label %140, label %129

129:                                              ; preds = %128
  %130 = load i64*, i64** %35, align 8
  store i64 %49, i64* %20, align 8
  %131 = load i32, i32* %22, align 8
  %132 = add nsw i32 %131, -1
  store i32 %132, i32* %22, align 8
  %133 = load i64*, i64** %21, align 8
  %134 = icmp eq i64* %133, %50
  br i1 %134, label %137, label %135

135:                                              ; preds = %129
  store i64* %50, i64** %21, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %0) #8
  %136 = load i64*, i64** %35, align 8
  br label %137

137:                                              ; preds = %135, %129
  %138 = phi i64* [ %136, %135 ], [ %65, %129 ]
  %139 = phi i64* [ %50, %135 ], [ %130, %129 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %138, i64* %139) #8
  br label %140

140:                                              ; preds = %128, %137
  %141 = add nuw nsw i64 %48, 1
  %142 = icmp slt i64 %141, %36
  br i1 %142, label %143, label %145

143:                                              ; preds = %140
  %144 = load i64, i64* %9, align 8
  br label %46

145:                                              ; preds = %140, %16, %37, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal14MessageHandler10GetMessageEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #1 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 15
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %11 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %10, align 8
  %12 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %11, i64 %9) #8
  br label %28

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %19 = load i64*, i64** %18, align 8
  %20 = icmp eq i64* %17, %19
  br i1 %20, label %21, label %23

21:                                               ; preds = %15
  %22 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #8
  br label %23

23:                                               ; preds = %21, %15
  %24 = phi i64* [ %22, %21 ], [ %17, %15 ]
  %25 = ptrtoint i64* %24 to i64
  %26 = add i64 %25, 8
  %27 = inttoptr i64 %26 to i64*
  store i64* %27, i64** %16, align 8
  store i64 %9, i64* %24, align 8
  br label %28

28:                                               ; preds = %13, %23
  %29 = phi i64* [ %14, %13 ], [ %24, %23 ]
  %30 = load i64, i64* %1, align 8
  %31 = add i64 %30, 11
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = ashr i32 %33, 1
  %35 = tail call i64* @_ZN2v88internal16MessageFormatter6FormatEPNS0_7IsolateENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES7_S7_(%"class.v8::internal::Isolate"* %0, i32 %34, i64* %29, i64* null, i64* null)
  ret i64* %35
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16MessageFormatter6FormatEPNS0_7IsolateENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES7_S7_(%"class.v8::internal::Isolate"*, i32, i64*, i64*, i64*) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.v8::internal::Vector.1009", align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 9
  %8 = icmp eq i64* %2, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = tail call i64* @_ZN2v88internal6Object21NoSideEffectsToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* nonnull %2) #8
  br label %11

11:                                               ; preds = %9, %5
  %12 = phi i64* [ %7, %5 ], [ %10, %9 ]
  %13 = icmp eq i64* %3, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %11
  %15 = tail call i64* @_ZN2v88internal6Object21NoSideEffectsToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* nonnull %3) #8
  br label %16

16:                                               ; preds = %14, %11
  %17 = phi i64* [ %7, %11 ], [ %15, %14 ]
  %18 = icmp eq i64* %4, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %16
  %20 = tail call i64* @_ZN2v88internal6Object21NoSideEffectsToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* nonnull %4) #8
  br label %21

21:                                               ; preds = %19, %16
  %22 = phi i64* [ %7, %16 ], [ %20, %19 ]
  %23 = tail call i64* @_ZN2v88internal16MessageFormatter6FormatEPNS0_7IsolateENS0_15MessageTemplateENS0_6HandleINS0_6StringEEES7_S7_(%"class.v8::internal::Isolate"* %0, i32 %1, i64* %12, i64* %17, i64* %22)
  %24 = icmp eq i64* %23, null
  br i1 %24, label %25, label %34

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  store i64 %27, i64* %28, align 8
  %29 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %30 = bitcast %"class.v8::internal::Vector.1009"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.v8::internal::Vector.1009", %"class.v8::internal::Vector.1009"* %6, i64 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i8** %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Vector.1009", %"class.v8::internal::Vector.1009"* %6, i64 0, i32 1
  store i64 7, i64* %32, align 8
  %33 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %29, %"class.v8::internal::Vector.1009"* nonnull dereferenceable(16) %6, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #8
  br label %36

34:                                               ; preds = %21
  %35 = tail call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* nonnull %23, i8 zeroext 0)
  br label %36

36:                                               ; preds = %34, %25
  %37 = phi i64* [ %35, %34 ], [ %33, %25 ]
  ret i64* %37
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10ErrorUtils16FormatStackTraceEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", align 8
  %5 = alloca %"class.v8::internal::IncrementalStringBuilder", align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 107
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = icmp eq i8 %7, 0
  %9 = bitcast %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  br i1 %8, label %10, label %99

10:                                               ; preds = %3
  %11 = load i64, i64* %1, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0
  %14 = call i64* @_ZN2v88internal10JSReceiver18GetCreationContextEv(%"class.v8::internal::JSReceiver"* nonnull %13) #8
  %15 = icmp eq i64* %14, null
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  br i1 %15, label %100, label %16

16:                                               ; preds = %10
  %17 = call zeroext i1 @_ZNK2v88internal7Isolate28HasPrepareStackTraceCallbackEv(%"class.v8::internal::Isolate"* %0) #8
  br i1 %17, label %18, label %26

18:                                               ; preds = %16
  store i8 1, i8* %6, align 8
  %19 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_114GetStackFramesEPNS0_7IsolateENS0_6HandleINS0_10FixedArrayEEE(%"class.v8::internal::Isolate"* %0, i64* %2)
  %20 = icmp eq i64* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %18
  %22 = call i64* @_ZN2v88internal7Isolate28RunPrepareStackTraceCallbackENS0_6HandleINS0_7ContextEEENS2_INS0_8JSObjectEEENS2_INS0_7JSArrayEEE(%"class.v8::internal::Isolate"* %0, i64* nonnull %14, i64* %1, i64* nonnull %19) #8
  %23 = ptrtoint i64* %22 to i64
  br label %24

24:                                               ; preds = %21, %18
  %25 = phi i64 [ 0, %18 ], [ %23, %21 ]
  store i8 0, i8* %6, align 8
  br label %892

26:                                               ; preds = %16
  %27 = load i64, i64* %14, align 8
  %28 = and i64 %27, -4294967296
  %29 = add i64 %27, 879
  %30 = inttoptr i64 %29 to i32*
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = zext i32 %31 to i64
  %33 = or i64 %28, %32
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %35 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %34, align 8
  %36 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %26
  %38 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %35, i64 %33) #8
  br label %52

39:                                               ; preds = %26
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %41 = load i64*, i64** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %43 = load i64*, i64** %42, align 8
  %44 = icmp eq i64* %41, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #8
  br label %47

47:                                               ; preds = %45, %39
  %48 = phi i64* [ %46, %45 ], [ %41, %39 ]
  %49 = ptrtoint i64* %48 to i64
  %50 = add i64 %49, 8
  %51 = inttoptr i64 %50 to i64*
  store i64* %51, i64** %40, align 8
  store i64 %33, i64* %48, align 8
  br label %52

52:                                               ; preds = %37, %47
  %53 = phi i64* [ %38, %37 ], [ %48, %47 ]
  %54 = call i64* @_ZN2v88internal10JSReceiver11GetPropertyEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"* %0, i64* %53, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0))
  %55 = icmp eq i64* %54, null
  br i1 %55, label %892, label %56

56:                                               ; preds = %52
  %57 = load i64, i64* %54, align 8
  %58 = and i64 %57, 1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %100, label %60

60:                                               ; preds = %56
  %61 = and i64 %57, -4294967296
  %62 = add i64 %57, -1
  %63 = inttoptr i64 %62 to i32*
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = zext i32 %64 to i64
  %66 = or i64 %61, %65
  %67 = add i64 %66, 7
  %68 = inttoptr i64 %67 to i16*
  %69 = load atomic i16, i16* %68 monotonic, align 2
  %70 = add i16 %69, -1059
  %71 = icmp ult i16 %70, 15
  br i1 %71, label %72, label %100

72:                                               ; preds = %60
  store i8 1, i8* %6, align 8
  call void @_ZN2v88internal7Isolate10CountUsageENS_7Isolate17UseCounterFeatureE(%"class.v8::internal::Isolate"* %0, i32 44) #8
  %73 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_114GetStackFramesEPNS0_7IsolateENS0_6HandleINS0_10FixedArrayEEE(%"class.v8::internal::Isolate"* %0, i64* %2)
  %74 = icmp eq i64* %73, null
  br i1 %74, label %97, label %75

75:                                               ; preds = %72
  %76 = ptrtoint i64* %73 to i64
  %77 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 16, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #12
  %78 = icmp eq i8* %77, null
  br i1 %78, label %79, label %88

79:                                               ; preds = %75
  %80 = call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #8
  %81 = bitcast %"class.v8::Platform"* %80 to void (%"class.v8::Platform"*)***
  %82 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %82, i64 3
  %84 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %83, align 8
  call void %84(%"class.v8::Platform"* %80) #8
  %85 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 16, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #12
  %86 = icmp eq i8* %85, null
  br i1 %86, label %87, label %88

87:                                               ; preds = %79
  call void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.418, i64 0, i64 0)) #13
  unreachable

88:                                               ; preds = %79, %75
  %89 = phi i8* [ %77, %75 ], [ %85, %79 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 0, i64 16, i1 false) #8
  %90 = bitcast i8* %89 to %"class.v8::internal::Handle.1188"*
  %91 = ptrtoint i64* %1 to i64
  %92 = bitcast i8* %89 to i64*
  store i64 %91, i64* %92, align 8
  %93 = getelementptr inbounds i8, i8* %89, i64 8
  %94 = bitcast i8* %93 to i64*
  store i64 %76, i64* %94, align 8
  %95 = call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %0, i64* nonnull %54, i64* %53, i32 2, %"class.v8::internal::Handle.1188"* %90) #8
  %96 = ptrtoint i64* %95 to i64
  call void @_ZdaPv(i8* nonnull %89) #12
  br label %97

97:                                               ; preds = %88, %72
  %98 = phi i64 [ 0, %72 ], [ %96, %88 ]
  store i8 0, i8* %6, align 8
  br label %892

99:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  br label %100

100:                                              ; preds = %10, %56, %60, %99
  %101 = bitcast %"class.v8::internal::IncrementalStringBuilder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %101) #8
  call void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5, %"class.v8::internal::Isolate"* %0) #8
  %102 = call i64* @_ZN2v88internal10ErrorUtils8ToStringEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %1) #8
  %103 = icmp eq i64* %102, null
  br i1 %103, label %104, label %273

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %106 = load i64, i64* %105, align 8
  %107 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %108 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %107, align 8
  %109 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %108, null
  br i1 %109, label %112, label %110

110:                                              ; preds = %104
  %111 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %108, i64 %106) #8
  br label %125

112:                                              ; preds = %104
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %114 = load i64*, i64** %113, align 8
  %115 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %116 = load i64*, i64** %115, align 8
  %117 = icmp eq i64* %114, %116
  br i1 %117, label %118, label %120

118:                                              ; preds = %112
  %119 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #8
  br label %120

120:                                              ; preds = %118, %112
  %121 = phi i64* [ %119, %118 ], [ %114, %112 ]
  %122 = ptrtoint i64* %121 to i64
  %123 = add i64 %122, 8
  %124 = inttoptr i64 %123 to i64*
  store i64* %124, i64** %113, align 8
  store i64 %106, i64* %121, align 8
  br label %125

125:                                              ; preds = %120, %110
  %126 = phi i64* [ %111, %110 ], [ %121, %120 ]
  %127 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %128 = load i64, i64* %127, align 8
  store i64 %128, i64* %105, align 8
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 13
  store i8 0, i8* %129, align 1
  %130 = call i64* @_ZN2v88internal10ErrorUtils8ToStringEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %126) #8
  %131 = icmp eq i64* %130, null
  br i1 %131, label %132, label %190

132:                                              ; preds = %125
  %133 = load i64, i64* %127, align 8
  store i64 %133, i64* %105, align 8
  store i8 0, i8* %129, align 1
  %134 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %5, i64 0, i32 1
  %135 = load i32, i32* %134, align 8
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %5, i64 0, i32 6, i32 0, i32 0
  %138 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %5, i64 0, i32 4
  %139 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %5, i64 0, i32 3
  %140 = load i64*, i64** %137, align 8
  %141 = load i64, i64* %140, align 8
  %142 = load i32, i32* %138, align 4
  %143 = add nsw i32 %142, 1
  store i32 %143, i32* %138, align 4
  br i1 %136, label %153, label %144

144:                                              ; preds = %132
  %145 = shl nsw i32 %142, 1
  %146 = sext i32 %145 to i64
  %147 = add i64 %141, 11
  %148 = add i64 %147, %146
  %149 = inttoptr i64 %148 to i16*
  store i16 60, i16* %149, align 2
  %150 = load i32, i32* %138, align 4
  %151 = load i32, i32* %139, align 8
  %152 = icmp eq i32 %150, %151
  br i1 %152, label %175, label %177

153:                                              ; preds = %132
  %154 = sext i32 %142 to i64
  %155 = add i64 %141, 11
  %156 = add i64 %155, %154
  %157 = inttoptr i64 %156 to i8*
  store i8 60, i8* %157, align 1
  %158 = load i32, i32* %138, align 4
  %159 = load i32, i32* %139, align 8
  %160 = icmp eq i32 %158, %159
  br i1 %160, label %161, label %163

161:                                              ; preds = %153
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %162 = load i32, i32* %138, align 4
  br label %163

163:                                              ; preds = %161, %153
  %164 = phi i32 [ %162, %161 ], [ %158, %153 ]
  %165 = load i64*, i64** %137, align 8
  %166 = load i64, i64* %165, align 8
  %167 = add nsw i32 %164, 1
  store i32 %167, i32* %138, align 4
  %168 = sext i32 %164 to i64
  %169 = add nsw i64 %168, 11
  %170 = add i64 %169, %166
  %171 = inttoptr i64 %170 to i8*
  store i8 101, i8* %171, align 1
  %172 = load i32, i32* %138, align 4
  %173 = load i32, i32* %139, align 8
  %174 = icmp eq i32 %172, %173
  br i1 %174, label %274, label %276

175:                                              ; preds = %144
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %176 = load i32, i32* %138, align 4
  br label %177

177:                                              ; preds = %175, %144
  %178 = phi i32 [ %176, %175 ], [ %150, %144 ]
  %179 = load i64*, i64** %137, align 8
  %180 = load i64, i64* %179, align 8
  %181 = add nsw i32 %178, 1
  store i32 %181, i32* %138, align 4
  %182 = shl nsw i32 %178, 1
  %183 = sext i32 %182 to i64
  %184 = add i64 %180, 11
  %185 = add i64 %184, %183
  %186 = inttoptr i64 %185 to i16*
  store i16 101, i16* %186, align 2
  %187 = load i32, i32* %138, align 4
  %188 = load i32, i32* %139, align 8
  %189 = icmp eq i32 %187, %188
  br i1 %189, label %345, label %347

190:                                              ; preds = %125
  %191 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %5, i64 0, i32 1
  %192 = load i32, i32* %191, align 8
  %193 = icmp eq i32 %192, 0
  %194 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %5, i64 0, i32 6, i32 0, i32 0
  %195 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %5, i64 0, i32 4
  %196 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %5, i64 0, i32 3
  %197 = load i64*, i64** %194, align 8
  %198 = load i64, i64* %197, align 8
  %199 = load i32, i32* %195, align 4
  %200 = add nsw i32 %199, 1
  store i32 %200, i32* %195, align 4
  br i1 %193, label %210, label %201

201:                                              ; preds = %190
  %202 = shl nsw i32 %199, 1
  %203 = sext i32 %202 to i64
  %204 = add i64 %198, 11
  %205 = add i64 %204, %203
  %206 = inttoptr i64 %205 to i16*
  store i16 60, i16* %206, align 2
  %207 = load i32, i32* %195, align 4
  %208 = load i32, i32* %196, align 8
  %209 = icmp eq i32 %207, %208
  br i1 %209, label %232, label %234

210:                                              ; preds = %190
  %211 = sext i32 %199 to i64
  %212 = add i64 %198, 11
  %213 = add i64 %212, %211
  %214 = inttoptr i64 %213 to i8*
  store i8 60, i8* %214, align 1
  %215 = load i32, i32* %195, align 4
  %216 = load i32, i32* %196, align 8
  %217 = icmp eq i32 %215, %216
  br i1 %217, label %218, label %220

218:                                              ; preds = %210
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %219 = load i32, i32* %195, align 4
  br label %220

220:                                              ; preds = %218, %210
  %221 = phi i32 [ %219, %218 ], [ %215, %210 ]
  %222 = load i64*, i64** %194, align 8
  %223 = load i64, i64* %222, align 8
  %224 = add nsw i32 %221, 1
  store i32 %224, i32* %195, align 4
  %225 = sext i32 %221 to i64
  %226 = add nsw i64 %225, 11
  %227 = add i64 %226, %223
  %228 = inttoptr i64 %227 to i8*
  store i8 101, i8* %228, align 1
  %229 = load i32, i32* %195, align 4
  %230 = load i32, i32* %196, align 8
  %231 = icmp eq i32 %229, %230
  br i1 %231, label %421, label %423

232:                                              ; preds = %201
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %233 = load i32, i32* %195, align 4
  br label %234

234:                                              ; preds = %232, %201
  %235 = phi i32 [ %233, %232 ], [ %207, %201 ]
  %236 = load i64*, i64** %194, align 8
  %237 = load i64, i64* %236, align 8
  %238 = add nsw i32 %235, 1
  store i32 %238, i32* %195, align 4
  %239 = shl nsw i32 %235, 1
  %240 = sext i32 %239 to i64
  %241 = add i64 %237, 11
  %242 = add i64 %241, %240
  %243 = inttoptr i64 %242 to i16*
  store i16 101, i16* %243, align 2
  %244 = load i32, i32* %195, align 4
  %245 = load i32, i32* %196, align 8
  %246 = icmp eq i32 %244, %245
  br i1 %246, label %506, label %508

247:                                              ; preds = %596, %583, %505, %493
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5, i64* nonnull %130) #8
  %248 = load i32, i32* %191, align 8
  %249 = icmp eq i32 %248, 0
  %250 = load i64*, i64** %194, align 8
  %251 = load i64, i64* %250, align 8
  %252 = load i32, i32* %195, align 4
  %253 = add nsw i32 %252, 1
  store i32 %253, i32* %195, align 4
  br i1 %249, label %254, label %263

254:                                              ; preds = %247
  %255 = sext i32 %252 to i64
  %256 = add i64 %251, 11
  %257 = add i64 %256, %255
  %258 = inttoptr i64 %257 to i8*
  store i8 62, i8* %258, align 1
  %259 = load i32, i32* %195, align 4
  %260 = load i32, i32* %196, align 8
  %261 = icmp eq i32 %259, %260
  br i1 %261, label %262, label %597

262:                                              ; preds = %254
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  br label %597

263:                                              ; preds = %247
  %264 = shl nsw i32 %252, 1
  %265 = sext i32 %264 to i64
  %266 = add i64 %251, 11
  %267 = add i64 %266, %265
  %268 = inttoptr i64 %267 to i16*
  store i16 62, i16* %268, align 2
  %269 = load i32, i32* %195, align 4
  %270 = load i32, i32* %196, align 8
  %271 = icmp eq i32 %269, %270
  br i1 %271, label %272, label %597

272:                                              ; preds = %263
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  br label %597

273:                                              ; preds = %100
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5, i64* nonnull %102) #8
  br label %597

274:                                              ; preds = %163
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %275 = load i32, i32* %138, align 4
  br label %276

276:                                              ; preds = %274, %163
  %277 = phi i32 [ %275, %274 ], [ %172, %163 ]
  %278 = load i64*, i64** %137, align 8
  %279 = load i64, i64* %278, align 8
  %280 = add nsw i32 %277, 1
  store i32 %280, i32* %138, align 4
  %281 = sext i32 %277 to i64
  %282 = add nsw i64 %281, 11
  %283 = add i64 %282, %279
  %284 = inttoptr i64 %283 to i8*
  store i8 114, i8* %284, align 1
  %285 = load i32, i32* %138, align 4
  %286 = load i32, i32* %139, align 8
  %287 = icmp eq i32 %285, %286
  br i1 %287, label %288, label %290

288:                                              ; preds = %276
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %289 = load i32, i32* %138, align 4
  br label %290

290:                                              ; preds = %288, %276
  %291 = phi i32 [ %289, %288 ], [ %285, %276 ]
  %292 = load i64*, i64** %137, align 8
  %293 = load i64, i64* %292, align 8
  %294 = add nsw i32 %291, 1
  store i32 %294, i32* %138, align 4
  %295 = sext i32 %291 to i64
  %296 = add nsw i64 %295, 11
  %297 = add i64 %296, %293
  %298 = inttoptr i64 %297 to i8*
  store i8 114, i8* %298, align 1
  %299 = load i32, i32* %138, align 4
  %300 = load i32, i32* %139, align 8
  %301 = icmp eq i32 %299, %300
  br i1 %301, label %302, label %304

302:                                              ; preds = %290
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %303 = load i32, i32* %138, align 4
  br label %304

304:                                              ; preds = %302, %290
  %305 = phi i32 [ %303, %302 ], [ %299, %290 ]
  %306 = load i64*, i64** %137, align 8
  %307 = load i64, i64* %306, align 8
  %308 = add nsw i32 %305, 1
  store i32 %308, i32* %138, align 4
  %309 = sext i32 %305 to i64
  %310 = add nsw i64 %309, 11
  %311 = add i64 %310, %307
  %312 = inttoptr i64 %311 to i8*
  store i8 111, i8* %312, align 1
  %313 = load i32, i32* %138, align 4
  %314 = load i32, i32* %139, align 8
  %315 = icmp eq i32 %313, %314
  br i1 %315, label %316, label %318

316:                                              ; preds = %304
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %317 = load i32, i32* %138, align 4
  br label %318

318:                                              ; preds = %316, %304
  %319 = phi i32 [ %317, %316 ], [ %313, %304 ]
  %320 = load i64*, i64** %137, align 8
  %321 = load i64, i64* %320, align 8
  %322 = add nsw i32 %319, 1
  store i32 %322, i32* %138, align 4
  %323 = sext i32 %319 to i64
  %324 = add nsw i64 %323, 11
  %325 = add i64 %324, %321
  %326 = inttoptr i64 %325 to i8*
  store i8 114, i8* %326, align 1
  %327 = load i32, i32* %138, align 4
  %328 = load i32, i32* %139, align 8
  %329 = icmp eq i32 %327, %328
  br i1 %329, label %330, label %332

330:                                              ; preds = %318
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %331 = load i32, i32* %138, align 4
  br label %332

332:                                              ; preds = %330, %318
  %333 = phi i32 [ %331, %330 ], [ %327, %318 ]
  %334 = load i64*, i64** %137, align 8
  %335 = load i64, i64* %334, align 8
  %336 = add nsw i32 %333, 1
  store i32 %336, i32* %138, align 4
  %337 = sext i32 %333 to i64
  %338 = add nsw i64 %337, 11
  %339 = add i64 %338, %335
  %340 = inttoptr i64 %339 to i8*
  store i8 62, i8* %340, align 1
  %341 = load i32, i32* %138, align 4
  %342 = load i32, i32* %139, align 8
  %343 = icmp eq i32 %341, %342
  br i1 %343, label %344, label %597

344:                                              ; preds = %332
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  br label %597

345:                                              ; preds = %177
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %346 = load i32, i32* %138, align 4
  br label %347

347:                                              ; preds = %345, %177
  %348 = phi i32 [ %346, %345 ], [ %187, %177 ]
  %349 = load i64*, i64** %137, align 8
  %350 = load i64, i64* %349, align 8
  %351 = add nsw i32 %348, 1
  store i32 %351, i32* %138, align 4
  %352 = shl nsw i32 %348, 1
  %353 = sext i32 %352 to i64
  %354 = add i64 %350, 11
  %355 = add i64 %354, %353
  %356 = inttoptr i64 %355 to i16*
  store i16 114, i16* %356, align 2
  %357 = load i32, i32* %138, align 4
  %358 = load i32, i32* %139, align 8
  %359 = icmp eq i32 %357, %358
  br i1 %359, label %360, label %362

360:                                              ; preds = %347
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %361 = load i32, i32* %138, align 4
  br label %362

362:                                              ; preds = %360, %347
  %363 = phi i32 [ %361, %360 ], [ %357, %347 ]
  %364 = load i64*, i64** %137, align 8
  %365 = load i64, i64* %364, align 8
  %366 = add nsw i32 %363, 1
  store i32 %366, i32* %138, align 4
  %367 = shl nsw i32 %363, 1
  %368 = sext i32 %367 to i64
  %369 = add i64 %365, 11
  %370 = add i64 %369, %368
  %371 = inttoptr i64 %370 to i16*
  store i16 114, i16* %371, align 2
  %372 = load i32, i32* %138, align 4
  %373 = load i32, i32* %139, align 8
  %374 = icmp eq i32 %372, %373
  br i1 %374, label %375, label %377

375:                                              ; preds = %362
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %376 = load i32, i32* %138, align 4
  br label %377

377:                                              ; preds = %375, %362
  %378 = phi i32 [ %376, %375 ], [ %372, %362 ]
  %379 = load i64*, i64** %137, align 8
  %380 = load i64, i64* %379, align 8
  %381 = add nsw i32 %378, 1
  store i32 %381, i32* %138, align 4
  %382 = shl nsw i32 %378, 1
  %383 = sext i32 %382 to i64
  %384 = add i64 %380, 11
  %385 = add i64 %384, %383
  %386 = inttoptr i64 %385 to i16*
  store i16 111, i16* %386, align 2
  %387 = load i32, i32* %138, align 4
  %388 = load i32, i32* %139, align 8
  %389 = icmp eq i32 %387, %388
  br i1 %389, label %390, label %392

390:                                              ; preds = %377
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %391 = load i32, i32* %138, align 4
  br label %392

392:                                              ; preds = %390, %377
  %393 = phi i32 [ %391, %390 ], [ %387, %377 ]
  %394 = load i64*, i64** %137, align 8
  %395 = load i64, i64* %394, align 8
  %396 = add nsw i32 %393, 1
  store i32 %396, i32* %138, align 4
  %397 = shl nsw i32 %393, 1
  %398 = sext i32 %397 to i64
  %399 = add i64 %395, 11
  %400 = add i64 %399, %398
  %401 = inttoptr i64 %400 to i16*
  store i16 114, i16* %401, align 2
  %402 = load i32, i32* %138, align 4
  %403 = load i32, i32* %139, align 8
  %404 = icmp eq i32 %402, %403
  br i1 %404, label %405, label %407

405:                                              ; preds = %392
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %406 = load i32, i32* %138, align 4
  br label %407

407:                                              ; preds = %405, %392
  %408 = phi i32 [ %406, %405 ], [ %402, %392 ]
  %409 = load i64*, i64** %137, align 8
  %410 = load i64, i64* %409, align 8
  %411 = add nsw i32 %408, 1
  store i32 %411, i32* %138, align 4
  %412 = shl nsw i32 %408, 1
  %413 = sext i32 %412 to i64
  %414 = add i64 %410, 11
  %415 = add i64 %414, %413
  %416 = inttoptr i64 %415 to i16*
  store i16 62, i16* %416, align 2
  %417 = load i32, i32* %138, align 4
  %418 = load i32, i32* %139, align 8
  %419 = icmp eq i32 %417, %418
  br i1 %419, label %420, label %597

420:                                              ; preds = %407
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  br label %597

421:                                              ; preds = %220
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %422 = load i32, i32* %195, align 4
  br label %423

423:                                              ; preds = %421, %220
  %424 = phi i32 [ %422, %421 ], [ %229, %220 ]
  %425 = load i64*, i64** %194, align 8
  %426 = load i64, i64* %425, align 8
  %427 = add nsw i32 %424, 1
  store i32 %427, i32* %195, align 4
  %428 = sext i32 %424 to i64
  %429 = add nsw i64 %428, 11
  %430 = add i64 %429, %426
  %431 = inttoptr i64 %430 to i8*
  store i8 114, i8* %431, align 1
  %432 = load i32, i32* %195, align 4
  %433 = load i32, i32* %196, align 8
  %434 = icmp eq i32 %432, %433
  br i1 %434, label %435, label %437

435:                                              ; preds = %423
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %436 = load i32, i32* %195, align 4
  br label %437

437:                                              ; preds = %435, %423
  %438 = phi i32 [ %436, %435 ], [ %432, %423 ]
  %439 = load i64*, i64** %194, align 8
  %440 = load i64, i64* %439, align 8
  %441 = add nsw i32 %438, 1
  store i32 %441, i32* %195, align 4
  %442 = sext i32 %438 to i64
  %443 = add nsw i64 %442, 11
  %444 = add i64 %443, %440
  %445 = inttoptr i64 %444 to i8*
  store i8 114, i8* %445, align 1
  %446 = load i32, i32* %195, align 4
  %447 = load i32, i32* %196, align 8
  %448 = icmp eq i32 %446, %447
  br i1 %448, label %449, label %451

449:                                              ; preds = %437
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %450 = load i32, i32* %195, align 4
  br label %451

451:                                              ; preds = %449, %437
  %452 = phi i32 [ %450, %449 ], [ %446, %437 ]
  %453 = load i64*, i64** %194, align 8
  %454 = load i64, i64* %453, align 8
  %455 = add nsw i32 %452, 1
  store i32 %455, i32* %195, align 4
  %456 = sext i32 %452 to i64
  %457 = add nsw i64 %456, 11
  %458 = add i64 %457, %454
  %459 = inttoptr i64 %458 to i8*
  store i8 111, i8* %459, align 1
  %460 = load i32, i32* %195, align 4
  %461 = load i32, i32* %196, align 8
  %462 = icmp eq i32 %460, %461
  br i1 %462, label %463, label %465

463:                                              ; preds = %451
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %464 = load i32, i32* %195, align 4
  br label %465

465:                                              ; preds = %463, %451
  %466 = phi i32 [ %464, %463 ], [ %460, %451 ]
  %467 = load i64*, i64** %194, align 8
  %468 = load i64, i64* %467, align 8
  %469 = add nsw i32 %466, 1
  store i32 %469, i32* %195, align 4
  %470 = sext i32 %466 to i64
  %471 = add nsw i64 %470, 11
  %472 = add i64 %471, %468
  %473 = inttoptr i64 %472 to i8*
  store i8 114, i8* %473, align 1
  %474 = load i32, i32* %195, align 4
  %475 = load i32, i32* %196, align 8
  %476 = icmp eq i32 %474, %475
  br i1 %476, label %477, label %479

477:                                              ; preds = %465
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %478 = load i32, i32* %195, align 4
  br label %479

479:                                              ; preds = %477, %465
  %480 = phi i32 [ %478, %477 ], [ %474, %465 ]
  %481 = load i64*, i64** %194, align 8
  %482 = load i64, i64* %481, align 8
  %483 = add nsw i32 %480, 1
  store i32 %483, i32* %195, align 4
  %484 = sext i32 %480 to i64
  %485 = add nsw i64 %484, 11
  %486 = add i64 %485, %482
  %487 = inttoptr i64 %486 to i8*
  store i8 58, i8* %487, align 1
  %488 = load i32, i32* %195, align 4
  %489 = load i32, i32* %196, align 8
  %490 = icmp eq i32 %488, %489
  br i1 %490, label %491, label %493

491:                                              ; preds = %479
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %492 = load i32, i32* %195, align 4
  br label %493

493:                                              ; preds = %491, %479
  %494 = phi i32 [ %492, %491 ], [ %488, %479 ]
  %495 = load i64*, i64** %194, align 8
  %496 = load i64, i64* %495, align 8
  %497 = add nsw i32 %494, 1
  store i32 %497, i32* %195, align 4
  %498 = sext i32 %494 to i64
  %499 = add nsw i64 %498, 11
  %500 = add i64 %499, %496
  %501 = inttoptr i64 %500 to i8*
  store i8 32, i8* %501, align 1
  %502 = load i32, i32* %195, align 4
  %503 = load i32, i32* %196, align 8
  %504 = icmp eq i32 %502, %503
  br i1 %504, label %505, label %247

505:                                              ; preds = %493
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  br label %247

506:                                              ; preds = %234
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %507 = load i32, i32* %195, align 4
  br label %508

508:                                              ; preds = %506, %234
  %509 = phi i32 [ %507, %506 ], [ %244, %234 ]
  %510 = load i64*, i64** %194, align 8
  %511 = load i64, i64* %510, align 8
  %512 = add nsw i32 %509, 1
  store i32 %512, i32* %195, align 4
  %513 = shl nsw i32 %509, 1
  %514 = sext i32 %513 to i64
  %515 = add i64 %511, 11
  %516 = add i64 %515, %514
  %517 = inttoptr i64 %516 to i16*
  store i16 114, i16* %517, align 2
  %518 = load i32, i32* %195, align 4
  %519 = load i32, i32* %196, align 8
  %520 = icmp eq i32 %518, %519
  br i1 %520, label %521, label %523

521:                                              ; preds = %508
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %522 = load i32, i32* %195, align 4
  br label %523

523:                                              ; preds = %521, %508
  %524 = phi i32 [ %522, %521 ], [ %518, %508 ]
  %525 = load i64*, i64** %194, align 8
  %526 = load i64, i64* %525, align 8
  %527 = add nsw i32 %524, 1
  store i32 %527, i32* %195, align 4
  %528 = shl nsw i32 %524, 1
  %529 = sext i32 %528 to i64
  %530 = add i64 %526, 11
  %531 = add i64 %530, %529
  %532 = inttoptr i64 %531 to i16*
  store i16 114, i16* %532, align 2
  %533 = load i32, i32* %195, align 4
  %534 = load i32, i32* %196, align 8
  %535 = icmp eq i32 %533, %534
  br i1 %535, label %536, label %538

536:                                              ; preds = %523
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %537 = load i32, i32* %195, align 4
  br label %538

538:                                              ; preds = %536, %523
  %539 = phi i32 [ %537, %536 ], [ %533, %523 ]
  %540 = load i64*, i64** %194, align 8
  %541 = load i64, i64* %540, align 8
  %542 = add nsw i32 %539, 1
  store i32 %542, i32* %195, align 4
  %543 = shl nsw i32 %539, 1
  %544 = sext i32 %543 to i64
  %545 = add i64 %541, 11
  %546 = add i64 %545, %544
  %547 = inttoptr i64 %546 to i16*
  store i16 111, i16* %547, align 2
  %548 = load i32, i32* %195, align 4
  %549 = load i32, i32* %196, align 8
  %550 = icmp eq i32 %548, %549
  br i1 %550, label %551, label %553

551:                                              ; preds = %538
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %552 = load i32, i32* %195, align 4
  br label %553

553:                                              ; preds = %551, %538
  %554 = phi i32 [ %552, %551 ], [ %548, %538 ]
  %555 = load i64*, i64** %194, align 8
  %556 = load i64, i64* %555, align 8
  %557 = add nsw i32 %554, 1
  store i32 %557, i32* %195, align 4
  %558 = shl nsw i32 %554, 1
  %559 = sext i32 %558 to i64
  %560 = add i64 %556, 11
  %561 = add i64 %560, %559
  %562 = inttoptr i64 %561 to i16*
  store i16 114, i16* %562, align 2
  %563 = load i32, i32* %195, align 4
  %564 = load i32, i32* %196, align 8
  %565 = icmp eq i32 %563, %564
  br i1 %565, label %566, label %568

566:                                              ; preds = %553
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %567 = load i32, i32* %195, align 4
  br label %568

568:                                              ; preds = %566, %553
  %569 = phi i32 [ %567, %566 ], [ %563, %553 ]
  %570 = load i64*, i64** %194, align 8
  %571 = load i64, i64* %570, align 8
  %572 = add nsw i32 %569, 1
  store i32 %572, i32* %195, align 4
  %573 = shl nsw i32 %569, 1
  %574 = sext i32 %573 to i64
  %575 = add i64 %571, 11
  %576 = add i64 %575, %574
  %577 = inttoptr i64 %576 to i16*
  store i16 58, i16* %577, align 2
  %578 = load i32, i32* %195, align 4
  %579 = load i32, i32* %196, align 8
  %580 = icmp eq i32 %578, %579
  br i1 %580, label %581, label %583

581:                                              ; preds = %568
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %582 = load i32, i32* %195, align 4
  br label %583

583:                                              ; preds = %581, %568
  %584 = phi i32 [ %582, %581 ], [ %578, %568 ]
  %585 = load i64*, i64** %194, align 8
  %586 = load i64, i64* %585, align 8
  %587 = add nsw i32 %584, 1
  store i32 %587, i32* %195, align 4
  %588 = shl nsw i32 %584, 1
  %589 = sext i32 %588 to i64
  %590 = add i64 %586, 11
  %591 = add i64 %590, %589
  %592 = inttoptr i64 %591 to i16*
  store i16 32, i16* %592, align 2
  %593 = load i32, i32* %195, align 4
  %594 = load i32, i32* %196, align 8
  %595 = icmp eq i32 %593, %594
  br i1 %595, label %596, label %247

596:                                              ; preds = %583
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  br label %247

597:                                              ; preds = %254, %262, %263, %272, %273, %332, %344, %407, %420
  %598 = icmp eq i64* %1, null
  br i1 %598, label %890, label %599

599:                                              ; preds = %597
  %600 = load i64, i64* %2, align 8
  %601 = add i64 %600, 3
  %602 = inttoptr i64 %601 to i32*
  %603 = load i32, i32* %602, align 4
  %604 = icmp sgt i32 %603, 1
  br i1 %604, label %605, label %616

605:                                              ; preds = %599
  %606 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %5, i64 0, i32 1
  %607 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %5, i64 0, i32 6, i32 0, i32 0
  %608 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %5, i64 0, i32 4
  %609 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %5, i64 0, i32 3
  %610 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %611 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %612 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %613 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %614 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %615 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 13
  br label %619

616:                                              ; preds = %881, %599
  %617 = call i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %618 = ptrtoint i64* %617 to i64
  br label %890

619:                                              ; preds = %605, %881
  %620 = phi i64 [ 0, %605 ], [ %882, %881 ]
  %621 = load i32, i32* %606, align 8
  %622 = icmp eq i32 %621, 0
  %623 = load i64*, i64** %607, align 8
  %624 = load i64, i64* %623, align 8
  %625 = load i32, i32* %608, align 4
  %626 = add nsw i32 %625, 1
  store i32 %626, i32* %608, align 4
  br i1 %622, label %636, label %627

627:                                              ; preds = %619
  %628 = shl nsw i32 %625, 1
  %629 = sext i32 %628 to i64
  %630 = add i64 %624, 11
  %631 = add i64 %630, %629
  %632 = inttoptr i64 %631 to i16*
  store i16 10, i16* %632, align 2
  %633 = load i32, i32* %608, align 4
  %634 = load i32, i32* %609, align 8
  %635 = icmp eq i32 %633, %634
  br i1 %635, label %658, label %660

636:                                              ; preds = %619
  %637 = sext i32 %625 to i64
  %638 = add i64 %624, 11
  %639 = add i64 %638, %637
  %640 = inttoptr i64 %639 to i8*
  store i8 10, i8* %640, align 1
  %641 = load i32, i32* %608, align 4
  %642 = load i32, i32* %609, align 8
  %643 = icmp eq i32 %641, %642
  br i1 %643, label %644, label %646

644:                                              ; preds = %636
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %645 = load i32, i32* %608, align 4
  br label %646

646:                                              ; preds = %644, %636
  %647 = phi i32 [ %645, %644 ], [ %641, %636 ]
  %648 = load i64*, i64** %607, align 8
  %649 = load i64, i64* %648, align 8
  %650 = add nsw i32 %647, 1
  store i32 %650, i32* %608, align 4
  %651 = sext i32 %647 to i64
  %652 = add i64 %649, 11
  %653 = add i64 %652, %651
  %654 = inttoptr i64 %653 to i8*
  store i8 32, i8* %654, align 1
  %655 = load i32, i32* %608, align 4
  %656 = load i32, i32* %609, align 8
  %657 = icmp eq i32 %655, %656
  br i1 %657, label %986, label %988

658:                                              ; preds = %627
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %659 = load i32, i32* %608, align 4
  br label %660

660:                                              ; preds = %658, %627
  %661 = phi i32 [ %659, %658 ], [ %633, %627 ]
  %662 = load i64*, i64** %607, align 8
  %663 = load i64, i64* %662, align 8
  %664 = add nsw i32 %661, 1
  store i32 %664, i32* %608, align 4
  %665 = shl nsw i32 %661, 1
  %666 = sext i32 %665 to i64
  %667 = add i64 %663, 11
  %668 = add i64 %667, %666
  %669 = inttoptr i64 %668 to i16*
  store i16 32, i16* %669, align 2
  %670 = load i32, i32* %608, align 4
  %671 = load i32, i32* %609, align 8
  %672 = icmp eq i32 %670, %671
  br i1 %672, label %895, label %897

673:                                              ; preds = %1058, %1070, %972, %985
  %674 = load i64, i64* %2, align 8
  %675 = and i64 %674, -4294967296
  %676 = trunc i64 %620 to i32
  %677 = shl i32 %676, 2
  %678 = sext i32 %677 to i64
  %679 = add nsw i64 %678, 7
  %680 = add i64 %679, %674
  %681 = inttoptr i64 %680 to i32*
  %682 = load atomic i32, i32* %681 monotonic, align 4
  %683 = zext i32 %682 to i64
  %684 = or i64 %675, %683
  %685 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %610, align 8
  %686 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %685, null
  br i1 %686, label %689, label %687

687:                                              ; preds = %673
  %688 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %685, i64 %684) #8
  br label %700

689:                                              ; preds = %673
  %690 = load i64*, i64** %611, align 8
  %691 = load i64*, i64** %612, align 8
  %692 = icmp eq i64* %690, %691
  br i1 %692, label %693, label %695

693:                                              ; preds = %689
  %694 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #8
  br label %695

695:                                              ; preds = %693, %689
  %696 = phi i64* [ %694, %693 ], [ %690, %689 ]
  %697 = ptrtoint i64* %696 to i64
  %698 = add i64 %697, 8
  %699 = inttoptr i64 %698 to i64*
  store i64* %699, i64** %611, align 8
  store i64 %684, i64* %696, align 8
  br label %700

700:                                              ; preds = %687, %695
  %701 = phi i64* [ %688, %687 ], [ %696, %695 ]
  call void @_ZN2v88internal23SerializeStackFrameInfoEPNS0_7IsolateENS0_6HandleINS0_14StackFrameInfoEEEPNS0_24IncrementalStringBuilderE(%"class.v8::internal::Isolate"* %0, i64* %701, %"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %702 = load i64, i64* %613, align 8
  %703 = load i64, i64* %614, align 8
  %704 = trunc i64 %703 to i32
  %705 = trunc i64 %702 to i32
  %706 = icmp eq i32 %704, %705
  br i1 %706, label %881, label %707

707:                                              ; preds = %700
  %708 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %610, align 8
  %709 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %708, null
  br i1 %709, label %712, label %710

710:                                              ; preds = %707
  %711 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %708, i64 %703) #8
  br label %723

712:                                              ; preds = %707
  %713 = load i64*, i64** %611, align 8
  %714 = load i64*, i64** %612, align 8
  %715 = icmp eq i64* %713, %714
  br i1 %715, label %716, label %718

716:                                              ; preds = %712
  %717 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #8
  br label %718

718:                                              ; preds = %716, %712
  %719 = phi i64* [ %717, %716 ], [ %713, %712 ]
  %720 = ptrtoint i64* %719 to i64
  %721 = add i64 %720, 8
  %722 = inttoptr i64 %721 to i64*
  store i64* %722, i64** %611, align 8
  store i64 %703, i64* %719, align 8
  br label %723

723:                                              ; preds = %710, %718
  %724 = phi i64* [ %711, %710 ], [ %719, %718 ]
  %725 = load i64, i64* %613, align 8
  store i64 %725, i64* %614, align 8
  store i8 0, i8* %615, align 1
  %726 = call i64* @_ZN2v88internal10ErrorUtils8ToStringEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %724)
  %727 = icmp eq i64* %726, null
  %728 = load i32, i32* %606, align 8
  %729 = icmp eq i32 %728, 0
  %730 = load i64*, i64** %607, align 8
  %731 = load i64, i64* %730, align 8
  %732 = load i32, i32* %608, align 4
  %733 = add nsw i32 %732, 1
  store i32 %733, i32* %608, align 4
  br i1 %727, label %734, label %781

734:                                              ; preds = %723
  br i1 %729, label %744, label %735

735:                                              ; preds = %734
  %736 = shl nsw i32 %732, 1
  %737 = sext i32 %736 to i64
  %738 = add i64 %731, 11
  %739 = add i64 %738, %737
  %740 = inttoptr i64 %739 to i16*
  store i16 60, i16* %740, align 2
  %741 = load i32, i32* %608, align 4
  %742 = load i32, i32* %609, align 8
  %743 = icmp eq i32 %741, %742
  br i1 %743, label %766, label %768

744:                                              ; preds = %734
  %745 = sext i32 %732 to i64
  %746 = add i64 %731, 11
  %747 = add i64 %746, %745
  %748 = inttoptr i64 %747 to i8*
  store i8 60, i8* %748, align 1
  %749 = load i32, i32* %608, align 4
  %750 = load i32, i32* %609, align 8
  %751 = icmp eq i32 %749, %750
  br i1 %751, label %752, label %754

752:                                              ; preds = %744
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %753 = load i32, i32* %608, align 4
  br label %754

754:                                              ; preds = %752, %744
  %755 = phi i32 [ %753, %752 ], [ %749, %744 ]
  %756 = load i64*, i64** %607, align 8
  %757 = load i64, i64* %756, align 8
  %758 = add nsw i32 %755, 1
  store i32 %758, i32* %608, align 4
  %759 = sext i32 %755 to i64
  %760 = add i64 %757, 11
  %761 = add i64 %760, %759
  %762 = inttoptr i64 %761 to i8*
  store i8 101, i8* %762, align 1
  %763 = load i32, i32* %608, align 4
  %764 = load i32, i32* %609, align 8
  %765 = icmp eq i32 %763, %764
  br i1 %765, label %1470, label %1472

766:                                              ; preds = %735
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %767 = load i32, i32* %608, align 4
  br label %768

768:                                              ; preds = %766, %735
  %769 = phi i32 [ %767, %766 ], [ %741, %735 ]
  %770 = load i64*, i64** %607, align 8
  %771 = load i64, i64* %770, align 8
  %772 = add nsw i32 %769, 1
  store i32 %772, i32* %608, align 4
  %773 = shl nsw i32 %769, 1
  %774 = sext i32 %773 to i64
  %775 = add i64 %771, 11
  %776 = add i64 %775, %774
  %777 = inttoptr i64 %776 to i16*
  store i16 101, i16* %777, align 2
  %778 = load i32, i32* %608, align 4
  %779 = load i32, i32* %609, align 8
  %780 = icmp eq i32 %778, %779
  br i1 %780, label %1394, label %1396

781:                                              ; preds = %723
  br i1 %729, label %791, label %782

782:                                              ; preds = %781
  %783 = shl nsw i32 %732, 1
  %784 = sext i32 %783 to i64
  %785 = add i64 %731, 11
  %786 = add i64 %785, %784
  %787 = inttoptr i64 %786 to i16*
  store i16 60, i16* %787, align 2
  %788 = load i32, i32* %608, align 4
  %789 = load i32, i32* %609, align 8
  %790 = icmp eq i32 %788, %789
  br i1 %790, label %813, label %815

791:                                              ; preds = %781
  %792 = sext i32 %732 to i64
  %793 = add i64 %731, 11
  %794 = add i64 %793, %792
  %795 = inttoptr i64 %794 to i8*
  store i8 60, i8* %795, align 1
  %796 = load i32, i32* %608, align 4
  %797 = load i32, i32* %609, align 8
  %798 = icmp eq i32 %796, %797
  br i1 %798, label %799, label %801

799:                                              ; preds = %791
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %800 = load i32, i32* %608, align 4
  br label %801

801:                                              ; preds = %799, %791
  %802 = phi i32 [ %800, %799 ], [ %796, %791 ]
  %803 = load i64*, i64** %607, align 8
  %804 = load i64, i64* %803, align 8
  %805 = add nsw i32 %802, 1
  store i32 %805, i32* %608, align 4
  %806 = sext i32 %802 to i64
  %807 = add i64 %804, 11
  %808 = add i64 %807, %806
  %809 = inttoptr i64 %808 to i8*
  store i8 101, i8* %809, align 1
  %810 = load i32, i32* %608, align 4
  %811 = load i32, i32* %609, align 8
  %812 = icmp eq i32 %810, %811
  br i1 %812, label %1162, label %1164

813:                                              ; preds = %782
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %814 = load i32, i32* %608, align 4
  br label %815

815:                                              ; preds = %813, %782
  %816 = phi i32 [ %814, %813 ], [ %788, %782 ]
  %817 = load i64*, i64** %607, align 8
  %818 = load i64, i64* %817, align 8
  %819 = add nsw i32 %816, 1
  store i32 %819, i32* %608, align 4
  %820 = shl nsw i32 %816, 1
  %821 = sext i32 %820 to i64
  %822 = add i64 %818, 11
  %823 = add i64 %822, %821
  %824 = inttoptr i64 %823 to i16*
  store i16 101, i16* %824, align 2
  %825 = load i32, i32* %608, align 4
  %826 = load i32, i32* %609, align 8
  %827 = icmp eq i32 %825, %826
  br i1 %827, label %1071, label %1073

828:                                              ; preds = %1234, %1246, %1148, %1161
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5, i64* nonnull %726) #8
  %829 = load i32, i32* %606, align 8
  %830 = icmp eq i32 %829, 0
  %831 = load i64*, i64** %607, align 8
  %832 = load i64, i64* %831, align 8
  %833 = load i32, i32* %608, align 4
  %834 = add nsw i32 %833, 1
  store i32 %834, i32* %608, align 4
  br i1 %830, label %844, label %835

835:                                              ; preds = %828
  %836 = shl nsw i32 %833, 1
  %837 = sext i32 %836 to i64
  %838 = add i64 %832, 11
  %839 = add i64 %838, %837
  %840 = inttoptr i64 %839 to i16*
  store i16 60, i16* %840, align 2
  %841 = load i32, i32* %608, align 4
  %842 = load i32, i32* %609, align 8
  %843 = icmp eq i32 %841, %842
  br i1 %843, label %866, label %868

844:                                              ; preds = %828
  %845 = sext i32 %833 to i64
  %846 = add i64 %832, 11
  %847 = add i64 %846, %845
  %848 = inttoptr i64 %847 to i8*
  store i8 60, i8* %848, align 1
  %849 = load i32, i32* %608, align 4
  %850 = load i32, i32* %609, align 8
  %851 = icmp eq i32 %849, %850
  br i1 %851, label %852, label %854

852:                                              ; preds = %844
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %853 = load i32, i32* %608, align 4
  br label %854

854:                                              ; preds = %852, %844
  %855 = phi i32 [ %853, %852 ], [ %849, %844 ]
  %856 = load i64*, i64** %607, align 8
  %857 = load i64, i64* %856, align 8
  %858 = add nsw i32 %855, 1
  store i32 %858, i32* %608, align 4
  %859 = sext i32 %855 to i64
  %860 = add i64 %857, 11
  %861 = add i64 %860, %859
  %862 = inttoptr i64 %861 to i8*
  store i8 101, i8* %862, align 1
  %863 = load i32, i32* %608, align 4
  %864 = load i32, i32* %609, align 8
  %865 = icmp eq i32 %863, %864
  br i1 %865, label %1323, label %1325

866:                                              ; preds = %835
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %867 = load i32, i32* %608, align 4
  br label %868

868:                                              ; preds = %866, %835
  %869 = phi i32 [ %867, %866 ], [ %841, %835 ]
  %870 = load i64*, i64** %607, align 8
  %871 = load i64, i64* %870, align 8
  %872 = add nsw i32 %869, 1
  store i32 %872, i32* %608, align 4
  %873 = shl nsw i32 %869, 1
  %874 = sext i32 %873 to i64
  %875 = add i64 %871, 11
  %876 = add i64 %875, %874
  %877 = inttoptr i64 %876 to i16*
  store i16 101, i16* %877, align 2
  %878 = load i32, i32* %608, align 4
  %879 = load i32, i32* %609, align 8
  %880 = icmp eq i32 %878, %879
  br i1 %880, label %1247, label %1249

881:                                              ; preds = %1528, %1540, %1456, %1469, %1381, %1393, %1309, %1322, %700
  %882 = add nuw nsw i64 %620, 1
  %883 = load i64, i64* %2, align 8
  %884 = add i64 %883, 3
  %885 = inttoptr i64 %884 to i32*
  %886 = load i32, i32* %885, align 4
  %887 = ashr i32 %886, 1
  %888 = sext i32 %887 to i64
  %889 = icmp slt i64 %882, %888
  br i1 %889, label %619, label %616

890:                                              ; preds = %597, %616
  %891 = phi i64 [ %618, %616 ], [ 0, %597 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %101) #8
  br label %892

892:                                              ; preds = %52, %97, %890, %24
  %893 = phi i64 [ %891, %890 ], [ %25, %24 ], [ %98, %97 ], [ 0, %52 ]
  %894 = inttoptr i64 %893 to i64*
  ret i64* %894

895:                                              ; preds = %660
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %896 = load i32, i32* %608, align 4
  br label %897

897:                                              ; preds = %895, %660
  %898 = phi i32 [ %896, %895 ], [ %670, %660 ]
  %899 = load i64*, i64** %607, align 8
  %900 = load i64, i64* %899, align 8
  %901 = add nsw i32 %898, 1
  store i32 %901, i32* %608, align 4
  %902 = shl nsw i32 %898, 1
  %903 = sext i32 %902 to i64
  %904 = add i64 %900, 11
  %905 = add i64 %904, %903
  %906 = inttoptr i64 %905 to i16*
  store i16 32, i16* %906, align 2
  %907 = load i32, i32* %608, align 4
  %908 = load i32, i32* %609, align 8
  %909 = icmp eq i32 %907, %908
  br i1 %909, label %910, label %912

910:                                              ; preds = %897
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %911 = load i32, i32* %608, align 4
  br label %912

912:                                              ; preds = %910, %897
  %913 = phi i32 [ %911, %910 ], [ %907, %897 ]
  %914 = load i64*, i64** %607, align 8
  %915 = load i64, i64* %914, align 8
  %916 = add nsw i32 %913, 1
  store i32 %916, i32* %608, align 4
  %917 = shl nsw i32 %913, 1
  %918 = sext i32 %917 to i64
  %919 = add i64 %915, 11
  %920 = add i64 %919, %918
  %921 = inttoptr i64 %920 to i16*
  store i16 32, i16* %921, align 2
  %922 = load i32, i32* %608, align 4
  %923 = load i32, i32* %609, align 8
  %924 = icmp eq i32 %922, %923
  br i1 %924, label %925, label %927

925:                                              ; preds = %912
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %926 = load i32, i32* %608, align 4
  br label %927

927:                                              ; preds = %925, %912
  %928 = phi i32 [ %926, %925 ], [ %922, %912 ]
  %929 = load i64*, i64** %607, align 8
  %930 = load i64, i64* %929, align 8
  %931 = add nsw i32 %928, 1
  store i32 %931, i32* %608, align 4
  %932 = shl nsw i32 %928, 1
  %933 = sext i32 %932 to i64
  %934 = add i64 %930, 11
  %935 = add i64 %934, %933
  %936 = inttoptr i64 %935 to i16*
  store i16 32, i16* %936, align 2
  %937 = load i32, i32* %608, align 4
  %938 = load i32, i32* %609, align 8
  %939 = icmp eq i32 %937, %938
  br i1 %939, label %940, label %942

940:                                              ; preds = %927
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %941 = load i32, i32* %608, align 4
  br label %942

942:                                              ; preds = %940, %927
  %943 = phi i32 [ %941, %940 ], [ %937, %927 ]
  %944 = load i64*, i64** %607, align 8
  %945 = load i64, i64* %944, align 8
  %946 = add nsw i32 %943, 1
  store i32 %946, i32* %608, align 4
  %947 = shl nsw i32 %943, 1
  %948 = sext i32 %947 to i64
  %949 = add i64 %945, 11
  %950 = add i64 %949, %948
  %951 = inttoptr i64 %950 to i16*
  store i16 97, i16* %951, align 2
  %952 = load i32, i32* %608, align 4
  %953 = load i32, i32* %609, align 8
  %954 = icmp eq i32 %952, %953
  br i1 %954, label %955, label %957

955:                                              ; preds = %942
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %956 = load i32, i32* %608, align 4
  br label %957

957:                                              ; preds = %955, %942
  %958 = phi i32 [ %956, %955 ], [ %952, %942 ]
  %959 = load i64*, i64** %607, align 8
  %960 = load i64, i64* %959, align 8
  %961 = add nsw i32 %958, 1
  store i32 %961, i32* %608, align 4
  %962 = shl nsw i32 %958, 1
  %963 = sext i32 %962 to i64
  %964 = add i64 %960, 11
  %965 = add i64 %964, %963
  %966 = inttoptr i64 %965 to i16*
  store i16 116, i16* %966, align 2
  %967 = load i32, i32* %608, align 4
  %968 = load i32, i32* %609, align 8
  %969 = icmp eq i32 %967, %968
  br i1 %969, label %970, label %972

970:                                              ; preds = %957
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %971 = load i32, i32* %608, align 4
  br label %972

972:                                              ; preds = %970, %957
  %973 = phi i32 [ %971, %970 ], [ %967, %957 ]
  %974 = load i64*, i64** %607, align 8
  %975 = load i64, i64* %974, align 8
  %976 = add nsw i32 %973, 1
  store i32 %976, i32* %608, align 4
  %977 = shl nsw i32 %973, 1
  %978 = sext i32 %977 to i64
  %979 = add i64 %975, 11
  %980 = add i64 %979, %978
  %981 = inttoptr i64 %980 to i16*
  store i16 32, i16* %981, align 2
  %982 = load i32, i32* %608, align 4
  %983 = load i32, i32* %609, align 8
  %984 = icmp eq i32 %982, %983
  br i1 %984, label %985, label %673

985:                                              ; preds = %972
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  br label %673

986:                                              ; preds = %646
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %987 = load i32, i32* %608, align 4
  br label %988

988:                                              ; preds = %986, %646
  %989 = phi i32 [ %987, %986 ], [ %655, %646 ]
  %990 = load i64*, i64** %607, align 8
  %991 = load i64, i64* %990, align 8
  %992 = add nsw i32 %989, 1
  store i32 %992, i32* %608, align 4
  %993 = sext i32 %989 to i64
  %994 = add i64 %991, 11
  %995 = add i64 %994, %993
  %996 = inttoptr i64 %995 to i8*
  store i8 32, i8* %996, align 1
  %997 = load i32, i32* %608, align 4
  %998 = load i32, i32* %609, align 8
  %999 = icmp eq i32 %997, %998
  br i1 %999, label %1000, label %1002

1000:                                             ; preds = %988
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1001 = load i32, i32* %608, align 4
  br label %1002

1002:                                             ; preds = %1000, %988
  %1003 = phi i32 [ %1001, %1000 ], [ %997, %988 ]
  %1004 = load i64*, i64** %607, align 8
  %1005 = load i64, i64* %1004, align 8
  %1006 = add nsw i32 %1003, 1
  store i32 %1006, i32* %608, align 4
  %1007 = sext i32 %1003 to i64
  %1008 = add i64 %1005, 11
  %1009 = add i64 %1008, %1007
  %1010 = inttoptr i64 %1009 to i8*
  store i8 32, i8* %1010, align 1
  %1011 = load i32, i32* %608, align 4
  %1012 = load i32, i32* %609, align 8
  %1013 = icmp eq i32 %1011, %1012
  br i1 %1013, label %1014, label %1016

1014:                                             ; preds = %1002
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1015 = load i32, i32* %608, align 4
  br label %1016

1016:                                             ; preds = %1014, %1002
  %1017 = phi i32 [ %1015, %1014 ], [ %1011, %1002 ]
  %1018 = load i64*, i64** %607, align 8
  %1019 = load i64, i64* %1018, align 8
  %1020 = add nsw i32 %1017, 1
  store i32 %1020, i32* %608, align 4
  %1021 = sext i32 %1017 to i64
  %1022 = add i64 %1019, 11
  %1023 = add i64 %1022, %1021
  %1024 = inttoptr i64 %1023 to i8*
  store i8 32, i8* %1024, align 1
  %1025 = load i32, i32* %608, align 4
  %1026 = load i32, i32* %609, align 8
  %1027 = icmp eq i32 %1025, %1026
  br i1 %1027, label %1028, label %1030

1028:                                             ; preds = %1016
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1029 = load i32, i32* %608, align 4
  br label %1030

1030:                                             ; preds = %1028, %1016
  %1031 = phi i32 [ %1029, %1028 ], [ %1025, %1016 ]
  %1032 = load i64*, i64** %607, align 8
  %1033 = load i64, i64* %1032, align 8
  %1034 = add nsw i32 %1031, 1
  store i32 %1034, i32* %608, align 4
  %1035 = sext i32 %1031 to i64
  %1036 = add i64 %1033, 11
  %1037 = add i64 %1036, %1035
  %1038 = inttoptr i64 %1037 to i8*
  store i8 97, i8* %1038, align 1
  %1039 = load i32, i32* %608, align 4
  %1040 = load i32, i32* %609, align 8
  %1041 = icmp eq i32 %1039, %1040
  br i1 %1041, label %1042, label %1044

1042:                                             ; preds = %1030
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1043 = load i32, i32* %608, align 4
  br label %1044

1044:                                             ; preds = %1042, %1030
  %1045 = phi i32 [ %1043, %1042 ], [ %1039, %1030 ]
  %1046 = load i64*, i64** %607, align 8
  %1047 = load i64, i64* %1046, align 8
  %1048 = add nsw i32 %1045, 1
  store i32 %1048, i32* %608, align 4
  %1049 = sext i32 %1045 to i64
  %1050 = add i64 %1047, 11
  %1051 = add i64 %1050, %1049
  %1052 = inttoptr i64 %1051 to i8*
  store i8 116, i8* %1052, align 1
  %1053 = load i32, i32* %608, align 4
  %1054 = load i32, i32* %609, align 8
  %1055 = icmp eq i32 %1053, %1054
  br i1 %1055, label %1056, label %1058

1056:                                             ; preds = %1044
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1057 = load i32, i32* %608, align 4
  br label %1058

1058:                                             ; preds = %1056, %1044
  %1059 = phi i32 [ %1057, %1056 ], [ %1053, %1044 ]
  %1060 = load i64*, i64** %607, align 8
  %1061 = load i64, i64* %1060, align 8
  %1062 = add nsw i32 %1059, 1
  store i32 %1062, i32* %608, align 4
  %1063 = sext i32 %1059 to i64
  %1064 = add i64 %1061, 11
  %1065 = add i64 %1064, %1063
  %1066 = inttoptr i64 %1065 to i8*
  store i8 32, i8* %1066, align 1
  %1067 = load i32, i32* %608, align 4
  %1068 = load i32, i32* %609, align 8
  %1069 = icmp eq i32 %1067, %1068
  br i1 %1069, label %1070, label %673

1070:                                             ; preds = %1058
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  br label %673

1071:                                             ; preds = %815
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1072 = load i32, i32* %608, align 4
  br label %1073

1073:                                             ; preds = %1071, %815
  %1074 = phi i32 [ %1072, %1071 ], [ %825, %815 ]
  %1075 = load i64*, i64** %607, align 8
  %1076 = load i64, i64* %1075, align 8
  %1077 = add nsw i32 %1074, 1
  store i32 %1077, i32* %608, align 4
  %1078 = shl nsw i32 %1074, 1
  %1079 = sext i32 %1078 to i64
  %1080 = add i64 %1076, 11
  %1081 = add i64 %1080, %1079
  %1082 = inttoptr i64 %1081 to i16*
  store i16 114, i16* %1082, align 2
  %1083 = load i32, i32* %608, align 4
  %1084 = load i32, i32* %609, align 8
  %1085 = icmp eq i32 %1083, %1084
  br i1 %1085, label %1086, label %1088

1086:                                             ; preds = %1073
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1087 = load i32, i32* %608, align 4
  br label %1088

1088:                                             ; preds = %1086, %1073
  %1089 = phi i32 [ %1087, %1086 ], [ %1083, %1073 ]
  %1090 = load i64*, i64** %607, align 8
  %1091 = load i64, i64* %1090, align 8
  %1092 = add nsw i32 %1089, 1
  store i32 %1092, i32* %608, align 4
  %1093 = shl nsw i32 %1089, 1
  %1094 = sext i32 %1093 to i64
  %1095 = add i64 %1091, 11
  %1096 = add i64 %1095, %1094
  %1097 = inttoptr i64 %1096 to i16*
  store i16 114, i16* %1097, align 2
  %1098 = load i32, i32* %608, align 4
  %1099 = load i32, i32* %609, align 8
  %1100 = icmp eq i32 %1098, %1099
  br i1 %1100, label %1101, label %1103

1101:                                             ; preds = %1088
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1102 = load i32, i32* %608, align 4
  br label %1103

1103:                                             ; preds = %1101, %1088
  %1104 = phi i32 [ %1102, %1101 ], [ %1098, %1088 ]
  %1105 = load i64*, i64** %607, align 8
  %1106 = load i64, i64* %1105, align 8
  %1107 = add nsw i32 %1104, 1
  store i32 %1107, i32* %608, align 4
  %1108 = shl nsw i32 %1104, 1
  %1109 = sext i32 %1108 to i64
  %1110 = add i64 %1106, 11
  %1111 = add i64 %1110, %1109
  %1112 = inttoptr i64 %1111 to i16*
  store i16 111, i16* %1112, align 2
  %1113 = load i32, i32* %608, align 4
  %1114 = load i32, i32* %609, align 8
  %1115 = icmp eq i32 %1113, %1114
  br i1 %1115, label %1116, label %1118

1116:                                             ; preds = %1103
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1117 = load i32, i32* %608, align 4
  br label %1118

1118:                                             ; preds = %1116, %1103
  %1119 = phi i32 [ %1117, %1116 ], [ %1113, %1103 ]
  %1120 = load i64*, i64** %607, align 8
  %1121 = load i64, i64* %1120, align 8
  %1122 = add nsw i32 %1119, 1
  store i32 %1122, i32* %608, align 4
  %1123 = shl nsw i32 %1119, 1
  %1124 = sext i32 %1123 to i64
  %1125 = add i64 %1121, 11
  %1126 = add i64 %1125, %1124
  %1127 = inttoptr i64 %1126 to i16*
  store i16 114, i16* %1127, align 2
  %1128 = load i32, i32* %608, align 4
  %1129 = load i32, i32* %609, align 8
  %1130 = icmp eq i32 %1128, %1129
  br i1 %1130, label %1131, label %1133

1131:                                             ; preds = %1118
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1132 = load i32, i32* %608, align 4
  br label %1133

1133:                                             ; preds = %1131, %1118
  %1134 = phi i32 [ %1132, %1131 ], [ %1128, %1118 ]
  %1135 = load i64*, i64** %607, align 8
  %1136 = load i64, i64* %1135, align 8
  %1137 = add nsw i32 %1134, 1
  store i32 %1137, i32* %608, align 4
  %1138 = shl nsw i32 %1134, 1
  %1139 = sext i32 %1138 to i64
  %1140 = add i64 %1136, 11
  %1141 = add i64 %1140, %1139
  %1142 = inttoptr i64 %1141 to i16*
  store i16 58, i16* %1142, align 2
  %1143 = load i32, i32* %608, align 4
  %1144 = load i32, i32* %609, align 8
  %1145 = icmp eq i32 %1143, %1144
  br i1 %1145, label %1146, label %1148

1146:                                             ; preds = %1133
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1147 = load i32, i32* %608, align 4
  br label %1148

1148:                                             ; preds = %1146, %1133
  %1149 = phi i32 [ %1147, %1146 ], [ %1143, %1133 ]
  %1150 = load i64*, i64** %607, align 8
  %1151 = load i64, i64* %1150, align 8
  %1152 = add nsw i32 %1149, 1
  store i32 %1152, i32* %608, align 4
  %1153 = shl nsw i32 %1149, 1
  %1154 = sext i32 %1153 to i64
  %1155 = add i64 %1151, 11
  %1156 = add i64 %1155, %1154
  %1157 = inttoptr i64 %1156 to i16*
  store i16 32, i16* %1157, align 2
  %1158 = load i32, i32* %608, align 4
  %1159 = load i32, i32* %609, align 8
  %1160 = icmp eq i32 %1158, %1159
  br i1 %1160, label %1161, label %828

1161:                                             ; preds = %1148
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  br label %828

1162:                                             ; preds = %801
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1163 = load i32, i32* %608, align 4
  br label %1164

1164:                                             ; preds = %1162, %801
  %1165 = phi i32 [ %1163, %1162 ], [ %810, %801 ]
  %1166 = load i64*, i64** %607, align 8
  %1167 = load i64, i64* %1166, align 8
  %1168 = add nsw i32 %1165, 1
  store i32 %1168, i32* %608, align 4
  %1169 = sext i32 %1165 to i64
  %1170 = add i64 %1167, 11
  %1171 = add i64 %1170, %1169
  %1172 = inttoptr i64 %1171 to i8*
  store i8 114, i8* %1172, align 1
  %1173 = load i32, i32* %608, align 4
  %1174 = load i32, i32* %609, align 8
  %1175 = icmp eq i32 %1173, %1174
  br i1 %1175, label %1176, label %1178

1176:                                             ; preds = %1164
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1177 = load i32, i32* %608, align 4
  br label %1178

1178:                                             ; preds = %1176, %1164
  %1179 = phi i32 [ %1177, %1176 ], [ %1173, %1164 ]
  %1180 = load i64*, i64** %607, align 8
  %1181 = load i64, i64* %1180, align 8
  %1182 = add nsw i32 %1179, 1
  store i32 %1182, i32* %608, align 4
  %1183 = sext i32 %1179 to i64
  %1184 = add i64 %1181, 11
  %1185 = add i64 %1184, %1183
  %1186 = inttoptr i64 %1185 to i8*
  store i8 114, i8* %1186, align 1
  %1187 = load i32, i32* %608, align 4
  %1188 = load i32, i32* %609, align 8
  %1189 = icmp eq i32 %1187, %1188
  br i1 %1189, label %1190, label %1192

1190:                                             ; preds = %1178
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1191 = load i32, i32* %608, align 4
  br label %1192

1192:                                             ; preds = %1190, %1178
  %1193 = phi i32 [ %1191, %1190 ], [ %1187, %1178 ]
  %1194 = load i64*, i64** %607, align 8
  %1195 = load i64, i64* %1194, align 8
  %1196 = add nsw i32 %1193, 1
  store i32 %1196, i32* %608, align 4
  %1197 = sext i32 %1193 to i64
  %1198 = add i64 %1195, 11
  %1199 = add i64 %1198, %1197
  %1200 = inttoptr i64 %1199 to i8*
  store i8 111, i8* %1200, align 1
  %1201 = load i32, i32* %608, align 4
  %1202 = load i32, i32* %609, align 8
  %1203 = icmp eq i32 %1201, %1202
  br i1 %1203, label %1204, label %1206

1204:                                             ; preds = %1192
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1205 = load i32, i32* %608, align 4
  br label %1206

1206:                                             ; preds = %1204, %1192
  %1207 = phi i32 [ %1205, %1204 ], [ %1201, %1192 ]
  %1208 = load i64*, i64** %607, align 8
  %1209 = load i64, i64* %1208, align 8
  %1210 = add nsw i32 %1207, 1
  store i32 %1210, i32* %608, align 4
  %1211 = sext i32 %1207 to i64
  %1212 = add i64 %1209, 11
  %1213 = add i64 %1212, %1211
  %1214 = inttoptr i64 %1213 to i8*
  store i8 114, i8* %1214, align 1
  %1215 = load i32, i32* %608, align 4
  %1216 = load i32, i32* %609, align 8
  %1217 = icmp eq i32 %1215, %1216
  br i1 %1217, label %1218, label %1220

1218:                                             ; preds = %1206
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1219 = load i32, i32* %608, align 4
  br label %1220

1220:                                             ; preds = %1218, %1206
  %1221 = phi i32 [ %1219, %1218 ], [ %1215, %1206 ]
  %1222 = load i64*, i64** %607, align 8
  %1223 = load i64, i64* %1222, align 8
  %1224 = add nsw i32 %1221, 1
  store i32 %1224, i32* %608, align 4
  %1225 = sext i32 %1221 to i64
  %1226 = add i64 %1223, 11
  %1227 = add i64 %1226, %1225
  %1228 = inttoptr i64 %1227 to i8*
  store i8 58, i8* %1228, align 1
  %1229 = load i32, i32* %608, align 4
  %1230 = load i32, i32* %609, align 8
  %1231 = icmp eq i32 %1229, %1230
  br i1 %1231, label %1232, label %1234

1232:                                             ; preds = %1220
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1233 = load i32, i32* %608, align 4
  br label %1234

1234:                                             ; preds = %1232, %1220
  %1235 = phi i32 [ %1233, %1232 ], [ %1229, %1220 ]
  %1236 = load i64*, i64** %607, align 8
  %1237 = load i64, i64* %1236, align 8
  %1238 = add nsw i32 %1235, 1
  store i32 %1238, i32* %608, align 4
  %1239 = sext i32 %1235 to i64
  %1240 = add i64 %1237, 11
  %1241 = add i64 %1240, %1239
  %1242 = inttoptr i64 %1241 to i8*
  store i8 32, i8* %1242, align 1
  %1243 = load i32, i32* %608, align 4
  %1244 = load i32, i32* %609, align 8
  %1245 = icmp eq i32 %1243, %1244
  br i1 %1245, label %1246, label %828

1246:                                             ; preds = %1234
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  br label %828

1247:                                             ; preds = %868
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1248 = load i32, i32* %608, align 4
  br label %1249

1249:                                             ; preds = %1247, %868
  %1250 = phi i32 [ %1248, %1247 ], [ %878, %868 ]
  %1251 = load i64*, i64** %607, align 8
  %1252 = load i64, i64* %1251, align 8
  %1253 = add nsw i32 %1250, 1
  store i32 %1253, i32* %608, align 4
  %1254 = shl nsw i32 %1250, 1
  %1255 = sext i32 %1254 to i64
  %1256 = add i64 %1252, 11
  %1257 = add i64 %1256, %1255
  %1258 = inttoptr i64 %1257 to i16*
  store i16 114, i16* %1258, align 2
  %1259 = load i32, i32* %608, align 4
  %1260 = load i32, i32* %609, align 8
  %1261 = icmp eq i32 %1259, %1260
  br i1 %1261, label %1262, label %1264

1262:                                             ; preds = %1249
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1263 = load i32, i32* %608, align 4
  br label %1264

1264:                                             ; preds = %1262, %1249
  %1265 = phi i32 [ %1263, %1262 ], [ %1259, %1249 ]
  %1266 = load i64*, i64** %607, align 8
  %1267 = load i64, i64* %1266, align 8
  %1268 = add nsw i32 %1265, 1
  store i32 %1268, i32* %608, align 4
  %1269 = shl nsw i32 %1265, 1
  %1270 = sext i32 %1269 to i64
  %1271 = add i64 %1267, 11
  %1272 = add i64 %1271, %1270
  %1273 = inttoptr i64 %1272 to i16*
  store i16 114, i16* %1273, align 2
  %1274 = load i32, i32* %608, align 4
  %1275 = load i32, i32* %609, align 8
  %1276 = icmp eq i32 %1274, %1275
  br i1 %1276, label %1277, label %1279

1277:                                             ; preds = %1264
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1278 = load i32, i32* %608, align 4
  br label %1279

1279:                                             ; preds = %1277, %1264
  %1280 = phi i32 [ %1278, %1277 ], [ %1274, %1264 ]
  %1281 = load i64*, i64** %607, align 8
  %1282 = load i64, i64* %1281, align 8
  %1283 = add nsw i32 %1280, 1
  store i32 %1283, i32* %608, align 4
  %1284 = shl nsw i32 %1280, 1
  %1285 = sext i32 %1284 to i64
  %1286 = add i64 %1282, 11
  %1287 = add i64 %1286, %1285
  %1288 = inttoptr i64 %1287 to i16*
  store i16 111, i16* %1288, align 2
  %1289 = load i32, i32* %608, align 4
  %1290 = load i32, i32* %609, align 8
  %1291 = icmp eq i32 %1289, %1290
  br i1 %1291, label %1292, label %1294

1292:                                             ; preds = %1279
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1293 = load i32, i32* %608, align 4
  br label %1294

1294:                                             ; preds = %1292, %1279
  %1295 = phi i32 [ %1293, %1292 ], [ %1289, %1279 ]
  %1296 = load i64*, i64** %607, align 8
  %1297 = load i64, i64* %1296, align 8
  %1298 = add nsw i32 %1295, 1
  store i32 %1298, i32* %608, align 4
  %1299 = shl nsw i32 %1295, 1
  %1300 = sext i32 %1299 to i64
  %1301 = add i64 %1297, 11
  %1302 = add i64 %1301, %1300
  %1303 = inttoptr i64 %1302 to i16*
  store i16 114, i16* %1303, align 2
  %1304 = load i32, i32* %608, align 4
  %1305 = load i32, i32* %609, align 8
  %1306 = icmp eq i32 %1304, %1305
  br i1 %1306, label %1307, label %1309

1307:                                             ; preds = %1294
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1308 = load i32, i32* %608, align 4
  br label %1309

1309:                                             ; preds = %1307, %1294
  %1310 = phi i32 [ %1308, %1307 ], [ %1304, %1294 ]
  %1311 = load i64*, i64** %607, align 8
  %1312 = load i64, i64* %1311, align 8
  %1313 = add nsw i32 %1310, 1
  store i32 %1313, i32* %608, align 4
  %1314 = shl nsw i32 %1310, 1
  %1315 = sext i32 %1314 to i64
  %1316 = add i64 %1312, 11
  %1317 = add i64 %1316, %1315
  %1318 = inttoptr i64 %1317 to i16*
  store i16 62, i16* %1318, align 2
  %1319 = load i32, i32* %608, align 4
  %1320 = load i32, i32* %609, align 8
  %1321 = icmp eq i32 %1319, %1320
  br i1 %1321, label %1322, label %881

1322:                                             ; preds = %1309
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  br label %881

1323:                                             ; preds = %854
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1324 = load i32, i32* %608, align 4
  br label %1325

1325:                                             ; preds = %1323, %854
  %1326 = phi i32 [ %1324, %1323 ], [ %863, %854 ]
  %1327 = load i64*, i64** %607, align 8
  %1328 = load i64, i64* %1327, align 8
  %1329 = add nsw i32 %1326, 1
  store i32 %1329, i32* %608, align 4
  %1330 = sext i32 %1326 to i64
  %1331 = add i64 %1328, 11
  %1332 = add i64 %1331, %1330
  %1333 = inttoptr i64 %1332 to i8*
  store i8 114, i8* %1333, align 1
  %1334 = load i32, i32* %608, align 4
  %1335 = load i32, i32* %609, align 8
  %1336 = icmp eq i32 %1334, %1335
  br i1 %1336, label %1337, label %1339

1337:                                             ; preds = %1325
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1338 = load i32, i32* %608, align 4
  br label %1339

1339:                                             ; preds = %1337, %1325
  %1340 = phi i32 [ %1338, %1337 ], [ %1334, %1325 ]
  %1341 = load i64*, i64** %607, align 8
  %1342 = load i64, i64* %1341, align 8
  %1343 = add nsw i32 %1340, 1
  store i32 %1343, i32* %608, align 4
  %1344 = sext i32 %1340 to i64
  %1345 = add i64 %1342, 11
  %1346 = add i64 %1345, %1344
  %1347 = inttoptr i64 %1346 to i8*
  store i8 114, i8* %1347, align 1
  %1348 = load i32, i32* %608, align 4
  %1349 = load i32, i32* %609, align 8
  %1350 = icmp eq i32 %1348, %1349
  br i1 %1350, label %1351, label %1353

1351:                                             ; preds = %1339
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1352 = load i32, i32* %608, align 4
  br label %1353

1353:                                             ; preds = %1351, %1339
  %1354 = phi i32 [ %1352, %1351 ], [ %1348, %1339 ]
  %1355 = load i64*, i64** %607, align 8
  %1356 = load i64, i64* %1355, align 8
  %1357 = add nsw i32 %1354, 1
  store i32 %1357, i32* %608, align 4
  %1358 = sext i32 %1354 to i64
  %1359 = add i64 %1356, 11
  %1360 = add i64 %1359, %1358
  %1361 = inttoptr i64 %1360 to i8*
  store i8 111, i8* %1361, align 1
  %1362 = load i32, i32* %608, align 4
  %1363 = load i32, i32* %609, align 8
  %1364 = icmp eq i32 %1362, %1363
  br i1 %1364, label %1365, label %1367

1365:                                             ; preds = %1353
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1366 = load i32, i32* %608, align 4
  br label %1367

1367:                                             ; preds = %1365, %1353
  %1368 = phi i32 [ %1366, %1365 ], [ %1362, %1353 ]
  %1369 = load i64*, i64** %607, align 8
  %1370 = load i64, i64* %1369, align 8
  %1371 = add nsw i32 %1368, 1
  store i32 %1371, i32* %608, align 4
  %1372 = sext i32 %1368 to i64
  %1373 = add i64 %1370, 11
  %1374 = add i64 %1373, %1372
  %1375 = inttoptr i64 %1374 to i8*
  store i8 114, i8* %1375, align 1
  %1376 = load i32, i32* %608, align 4
  %1377 = load i32, i32* %609, align 8
  %1378 = icmp eq i32 %1376, %1377
  br i1 %1378, label %1379, label %1381

1379:                                             ; preds = %1367
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1380 = load i32, i32* %608, align 4
  br label %1381

1381:                                             ; preds = %1379, %1367
  %1382 = phi i32 [ %1380, %1379 ], [ %1376, %1367 ]
  %1383 = load i64*, i64** %607, align 8
  %1384 = load i64, i64* %1383, align 8
  %1385 = add nsw i32 %1382, 1
  store i32 %1385, i32* %608, align 4
  %1386 = sext i32 %1382 to i64
  %1387 = add i64 %1384, 11
  %1388 = add i64 %1387, %1386
  %1389 = inttoptr i64 %1388 to i8*
  store i8 62, i8* %1389, align 1
  %1390 = load i32, i32* %608, align 4
  %1391 = load i32, i32* %609, align 8
  %1392 = icmp eq i32 %1390, %1391
  br i1 %1392, label %1393, label %881

1393:                                             ; preds = %1381
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  br label %881

1394:                                             ; preds = %768
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1395 = load i32, i32* %608, align 4
  br label %1396

1396:                                             ; preds = %1394, %768
  %1397 = phi i32 [ %1395, %1394 ], [ %778, %768 ]
  %1398 = load i64*, i64** %607, align 8
  %1399 = load i64, i64* %1398, align 8
  %1400 = add nsw i32 %1397, 1
  store i32 %1400, i32* %608, align 4
  %1401 = shl nsw i32 %1397, 1
  %1402 = sext i32 %1401 to i64
  %1403 = add i64 %1399, 11
  %1404 = add i64 %1403, %1402
  %1405 = inttoptr i64 %1404 to i16*
  store i16 114, i16* %1405, align 2
  %1406 = load i32, i32* %608, align 4
  %1407 = load i32, i32* %609, align 8
  %1408 = icmp eq i32 %1406, %1407
  br i1 %1408, label %1409, label %1411

1409:                                             ; preds = %1396
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1410 = load i32, i32* %608, align 4
  br label %1411

1411:                                             ; preds = %1409, %1396
  %1412 = phi i32 [ %1410, %1409 ], [ %1406, %1396 ]
  %1413 = load i64*, i64** %607, align 8
  %1414 = load i64, i64* %1413, align 8
  %1415 = add nsw i32 %1412, 1
  store i32 %1415, i32* %608, align 4
  %1416 = shl nsw i32 %1412, 1
  %1417 = sext i32 %1416 to i64
  %1418 = add i64 %1414, 11
  %1419 = add i64 %1418, %1417
  %1420 = inttoptr i64 %1419 to i16*
  store i16 114, i16* %1420, align 2
  %1421 = load i32, i32* %608, align 4
  %1422 = load i32, i32* %609, align 8
  %1423 = icmp eq i32 %1421, %1422
  br i1 %1423, label %1424, label %1426

1424:                                             ; preds = %1411
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1425 = load i32, i32* %608, align 4
  br label %1426

1426:                                             ; preds = %1424, %1411
  %1427 = phi i32 [ %1425, %1424 ], [ %1421, %1411 ]
  %1428 = load i64*, i64** %607, align 8
  %1429 = load i64, i64* %1428, align 8
  %1430 = add nsw i32 %1427, 1
  store i32 %1430, i32* %608, align 4
  %1431 = shl nsw i32 %1427, 1
  %1432 = sext i32 %1431 to i64
  %1433 = add i64 %1429, 11
  %1434 = add i64 %1433, %1432
  %1435 = inttoptr i64 %1434 to i16*
  store i16 111, i16* %1435, align 2
  %1436 = load i32, i32* %608, align 4
  %1437 = load i32, i32* %609, align 8
  %1438 = icmp eq i32 %1436, %1437
  br i1 %1438, label %1439, label %1441

1439:                                             ; preds = %1426
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1440 = load i32, i32* %608, align 4
  br label %1441

1441:                                             ; preds = %1439, %1426
  %1442 = phi i32 [ %1440, %1439 ], [ %1436, %1426 ]
  %1443 = load i64*, i64** %607, align 8
  %1444 = load i64, i64* %1443, align 8
  %1445 = add nsw i32 %1442, 1
  store i32 %1445, i32* %608, align 4
  %1446 = shl nsw i32 %1442, 1
  %1447 = sext i32 %1446 to i64
  %1448 = add i64 %1444, 11
  %1449 = add i64 %1448, %1447
  %1450 = inttoptr i64 %1449 to i16*
  store i16 114, i16* %1450, align 2
  %1451 = load i32, i32* %608, align 4
  %1452 = load i32, i32* %609, align 8
  %1453 = icmp eq i32 %1451, %1452
  br i1 %1453, label %1454, label %1456

1454:                                             ; preds = %1441
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1455 = load i32, i32* %608, align 4
  br label %1456

1456:                                             ; preds = %1454, %1441
  %1457 = phi i32 [ %1455, %1454 ], [ %1451, %1441 ]
  %1458 = load i64*, i64** %607, align 8
  %1459 = load i64, i64* %1458, align 8
  %1460 = add nsw i32 %1457, 1
  store i32 %1460, i32* %608, align 4
  %1461 = shl nsw i32 %1457, 1
  %1462 = sext i32 %1461 to i64
  %1463 = add i64 %1459, 11
  %1464 = add i64 %1463, %1462
  %1465 = inttoptr i64 %1464 to i16*
  store i16 62, i16* %1465, align 2
  %1466 = load i32, i32* %608, align 4
  %1467 = load i32, i32* %609, align 8
  %1468 = icmp eq i32 %1466, %1467
  br i1 %1468, label %1469, label %881

1469:                                             ; preds = %1456
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  br label %881

1470:                                             ; preds = %754
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1471 = load i32, i32* %608, align 4
  br label %1472

1472:                                             ; preds = %1470, %754
  %1473 = phi i32 [ %1471, %1470 ], [ %763, %754 ]
  %1474 = load i64*, i64** %607, align 8
  %1475 = load i64, i64* %1474, align 8
  %1476 = add nsw i32 %1473, 1
  store i32 %1476, i32* %608, align 4
  %1477 = sext i32 %1473 to i64
  %1478 = add i64 %1475, 11
  %1479 = add i64 %1478, %1477
  %1480 = inttoptr i64 %1479 to i8*
  store i8 114, i8* %1480, align 1
  %1481 = load i32, i32* %608, align 4
  %1482 = load i32, i32* %609, align 8
  %1483 = icmp eq i32 %1481, %1482
  br i1 %1483, label %1484, label %1486

1484:                                             ; preds = %1472
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1485 = load i32, i32* %608, align 4
  br label %1486

1486:                                             ; preds = %1484, %1472
  %1487 = phi i32 [ %1485, %1484 ], [ %1481, %1472 ]
  %1488 = load i64*, i64** %607, align 8
  %1489 = load i64, i64* %1488, align 8
  %1490 = add nsw i32 %1487, 1
  store i32 %1490, i32* %608, align 4
  %1491 = sext i32 %1487 to i64
  %1492 = add i64 %1489, 11
  %1493 = add i64 %1492, %1491
  %1494 = inttoptr i64 %1493 to i8*
  store i8 114, i8* %1494, align 1
  %1495 = load i32, i32* %608, align 4
  %1496 = load i32, i32* %609, align 8
  %1497 = icmp eq i32 %1495, %1496
  br i1 %1497, label %1498, label %1500

1498:                                             ; preds = %1486
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1499 = load i32, i32* %608, align 4
  br label %1500

1500:                                             ; preds = %1498, %1486
  %1501 = phi i32 [ %1499, %1498 ], [ %1495, %1486 ]
  %1502 = load i64*, i64** %607, align 8
  %1503 = load i64, i64* %1502, align 8
  %1504 = add nsw i32 %1501, 1
  store i32 %1504, i32* %608, align 4
  %1505 = sext i32 %1501 to i64
  %1506 = add i64 %1503, 11
  %1507 = add i64 %1506, %1505
  %1508 = inttoptr i64 %1507 to i8*
  store i8 111, i8* %1508, align 1
  %1509 = load i32, i32* %608, align 4
  %1510 = load i32, i32* %609, align 8
  %1511 = icmp eq i32 %1509, %1510
  br i1 %1511, label %1512, label %1514

1512:                                             ; preds = %1500
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1513 = load i32, i32* %608, align 4
  br label %1514

1514:                                             ; preds = %1512, %1500
  %1515 = phi i32 [ %1513, %1512 ], [ %1509, %1500 ]
  %1516 = load i64*, i64** %607, align 8
  %1517 = load i64, i64* %1516, align 8
  %1518 = add nsw i32 %1515, 1
  store i32 %1518, i32* %608, align 4
  %1519 = sext i32 %1515 to i64
  %1520 = add i64 %1517, 11
  %1521 = add i64 %1520, %1519
  %1522 = inttoptr i64 %1521 to i8*
  store i8 114, i8* %1522, align 1
  %1523 = load i32, i32* %608, align 4
  %1524 = load i32, i32* %609, align 8
  %1525 = icmp eq i32 %1523, %1524
  br i1 %1525, label %1526, label %1528

1526:                                             ; preds = %1514
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  %1527 = load i32, i32* %608, align 4
  br label %1528

1528:                                             ; preds = %1526, %1514
  %1529 = phi i32 [ %1527, %1526 ], [ %1523, %1514 ]
  %1530 = load i64*, i64** %607, align 8
  %1531 = load i64, i64* %1530, align 8
  %1532 = add nsw i32 %1529, 1
  store i32 %1532, i32* %608, align 4
  %1533 = sext i32 %1529 to i64
  %1534 = add i64 %1531, 11
  %1535 = add i64 %1534, %1533
  %1536 = inttoptr i64 %1535 to i8*
  store i8 62, i8* %1536, align 1
  %1537 = load i32, i32* %608, align 4
  %1538 = load i32, i32* %609, align 8
  %1539 = icmp eq i32 %1537, %1538
  br i1 %1539, label %1540, label %881

1540:                                             ; preds = %1528
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #8
  br label %881
}

declare i64* @_ZN2v88internal10JSReceiver18GetCreationContextEv(%"class.v8::internal::JSReceiver"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v88internal7Isolate28HasPrepareStackTraceCallbackEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_114GetStackFramesEPNS0_7IsolateENS0_6HandleINS0_10FixedArrayEEE(%"class.v8::internal::Isolate"*, i64*) unnamed_addr #1 {
  %3 = load i64, i64* %1, align 8
  %4 = add i64 %3, 3
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = ashr i32 %6, 1
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, -4294967296
  %11 = add i64 %9, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %10, %14
  %16 = add i64 %15, 19
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %10, %19
  %21 = add i64 %20, 239
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %10, %24
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %27 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %26, align 8
  %28 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %2
  %30 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %27, i64 %25) #8
  br label %44

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %35 = load i64*, i64** %34, align 8
  %36 = icmp eq i64* %33, %35
  br i1 %36, label %37, label %39

37:                                               ; preds = %31
  %38 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #8
  br label %39

39:                                               ; preds = %37, %31
  %40 = phi i64* [ %38, %37 ], [ %33, %31 ]
  %41 = ptrtoint i64* %40 to i64
  %42 = add i64 %41, 8
  %43 = inttoptr i64 %42 to i64*
  store i64* %43, i64** %32, align 8
  store i64 %25, i64* %40, align 8
  br label %44

44:                                               ; preds = %29, %39
  %45 = phi i64* [ %30, %29 ], [ %40, %39 ]
  %46 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %47 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %48 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %47, i32 %7, i8 zeroext 0) #8
  %49 = icmp sgt i32 %6, 1
  br i1 %49, label %50, label %124

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 475
  %54 = sext i32 %7 to i64
  br label %55

55:                                               ; preds = %50, %121
  %56 = phi i64 [ 0, %50 ], [ %122, %121 ]
  %57 = load i64, i64* %1, align 8
  %58 = and i64 %57, -4294967296
  %59 = trunc i64 %56 to i32
  %60 = shl i32 %59, 2
  %61 = sext i32 %60 to i64
  %62 = add nsw i64 %61, 7
  %63 = add i64 %57, %62
  %64 = inttoptr i64 %63 to i32*
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %58, %66
  %68 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %26, align 8
  %69 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %55
  %71 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %68, i64 %67) #8
  br label %83

72:                                               ; preds = %55
  %73 = load i64*, i64** %51, align 8
  %74 = load i64*, i64** %52, align 8
  %75 = icmp eq i64* %73, %74
  br i1 %75, label %76, label %78

76:                                               ; preds = %72
  %77 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #8
  br label %78

78:                                               ; preds = %76, %72
  %79 = phi i64* [ %77, %76 ], [ %73, %72 ]
  %80 = ptrtoint i64* %79 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to i64*
  store i64* %82, i64** %51, align 8
  store i64 %67, i64* %79, align 8
  br label %83

83:                                               ; preds = %70, %78
  %84 = phi i64* [ %71, %70 ], [ %79, %78 ]
  %85 = tail call i64* @_ZN2v88internal8JSObject3NewENS0_6HandleINS0_10JSFunctionEEENS2_INS0_10JSReceiverEEENS2_INS0_14AllocationSiteEEE(i64* %45, i64* %45, i64* null) #8
  %86 = icmp eq i64* %85, null
  br i1 %86, label %131, label %87

87:                                               ; preds = %83
  %88 = tail call i64* @_ZN2v88internal8JSObject30SetOwnPropertyIgnoreAttributesENS0_6HandleIS1_EENS2_INS0_4NameEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesE(i64* nonnull %85, i64* %53, i64* %84, i32 2) #8
  %89 = icmp eq i64* %88, null
  br i1 %89, label %131, label %90

90:                                               ; preds = %87
  %91 = load i64, i64* %48, align 8
  %92 = load i64, i64* %85, align 8
  %93 = add i64 %91, %62
  %94 = inttoptr i64 %93 to i32*
  %95 = trunc i64 %92 to i32
  store atomic volatile i32 %95, i32* %94 monotonic, align 4
  %96 = and i64 %92, 1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %121, label %98

98:                                               ; preds = %90
  %99 = and i64 %91, -262144
  %100 = or i64 %99, 8
  %101 = inttoptr i64 %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = and i64 %102, 262144
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %109, label %105

105:                                              ; preds = %98
  %106 = or i64 %99, 16
  %107 = inttoptr i64 %106 to %"class.v8::internal::Heap"**
  %108 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %107, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %108, i64 %91, i64 %93, i64 %92) #8
  br label %109

109:                                              ; preds = %105, %98
  %110 = and i64 %92, -262144
  %111 = or i64 %110, 8
  %112 = inttoptr i64 %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = and i64 %113, 24
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %121, label %116

116:                                              ; preds = %109
  %117 = load i64, i64* %101, align 8
  %118 = and i64 %117, 24
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %116
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %91, i64 %93, i64 %92) #8
  br label %121

121:                                              ; preds = %90, %109, %116, %120
  %122 = add nuw nsw i64 %56, 1
  %123 = icmp slt i64 %122, %54
  br i1 %123, label %55, label %124

124:                                              ; preds = %121, %44
  %125 = load i64, i64* %48, align 8
  %126 = add i64 %125, 3
  %127 = inttoptr i64 %126 to i32*
  %128 = load i32, i32* %127, align 4
  %129 = ashr i32 %128, 1
  %130 = tail call i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %46, i64* %48, i8 zeroext 3, i32 %129, i8 zeroext 0) #8
  br label %131

131:                                              ; preds = %87, %83, %124
  %132 = phi i64* [ %130, %124 ], [ null, %83 ], [ null, %87 ]
  ret i64* %132
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i64* @_ZN2v88internal7Isolate28RunPrepareStackTraceCallbackENS0_6HandleINS0_7ContextEEENS2_INS0_8JSObjectEEENS2_INS0_7JSArrayEEE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal10JSReceiver11GetPropertyEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"*, i64*, i8*) local_unnamed_addr #5 comdat align 2 {
  %4 = alloca %"class.v8::internal::Vector.1209", align 8
  %5 = alloca %"class.v8::internal::LookupIterator", align 8
  %6 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %7 = bitcast %"class.v8::internal::Vector.1209"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8
  %8 = tail call i64 @strlen(i8* %2) #14
  %9 = getelementptr inbounds %"class.v8::internal::Vector.1209", %"class.v8::internal::Vector.1209"* %4, i64 0, i32 0
  store i8* %2, i8** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Vector.1209", %"class.v8::internal::Vector.1209"* %4, i64 0, i32 1
  store i64 %8, i64* %10, align 8
  %11 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %6, %"class.v8::internal::Vector.1209"* nonnull dereferenceable(16) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  %12 = bitcast %"class.v8::internal::LookupIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %12) #8
  %13 = ptrtoint i64* %1 to i64
  %14 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 0
  %15 = icmp eq i64* %11, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %3
  %17 = load i64, i64* null, align 536870912
  %18 = add i64 %17, -1
  %19 = inttoptr i64 %18 to i32*
  br label %41

20:                                               ; preds = %3
  %21 = load i64, i64* %11, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %21, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i64 %23, 4294967295
  %28 = icmp eq i64 %27, 0
  call void @llvm.assume(i1 %28) #8
  %29 = zext i32 %26 to i64
  %30 = or i64 %23, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = icmp eq i16 %33, 64
  br i1 %34, label %35, label %41

35:                                               ; preds = %20
  %36 = add i64 %21, 7
  %37 = inttoptr i64 %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %35, %20, %16
  %42 = phi i32* [ %19, %16 ], [ %25, %35 ], [ %25, %20 ]
  %43 = phi i64 [ %17, %16 ], [ %21, %35 ], [ %21, %20 ]
  br label %44

44:                                               ; preds = %41, %35
  %45 = phi i32* [ %42, %41 ], [ %25, %35 ]
  %46 = phi i64 [ %43, %41 ], [ %21, %35 ]
  %47 = phi i32 [ 3, %41 ], [ 0, %35 ]
  store i32 %47, i32* %14, align 8
  %48 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 1
  store i32 4, i32* %48, align 4
  %49 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 2
  store i8 0, i8* %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 3
  store i32 0, i32* %50, align 4
  %51 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 4, i32 0
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 6, i32 0, i32 0
  store i64* %11, i64** %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 8, i32 0, i32 0
  store i64* %1, i64** %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 10
  %58 = bitcast %"class.v8::internal::Handle.1188"* %57 to i64*
  store i64 %13, i64* %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 11
  %60 = bitcast i64* %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 -1, i64 16, i1 false) #8
  %61 = and i64 %46, -4294967296
  %62 = load atomic i32, i32* %45 monotonic, align 4
  %63 = zext i32 %62 to i64
  %64 = or i64 %61, %63
  %65 = add i64 %64, 7
  %66 = inttoptr i64 %65 to i16*
  %67 = load atomic i16, i16* %66 monotonic, align 2
  %68 = and i16 %67, -32
  %69 = icmp eq i16 %68, 32
  br i1 %69, label %70, label %74

70:                                               ; preds = %44
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %72 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %71, align 8
  %73 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %72, %"class.v8::internal::Isolate"* %0, i64* %11) #8
  br label %74

74:                                               ; preds = %70, %44
  %75 = phi i64* [ %73, %70 ], [ %11, %44 ]
  store i64* %75, i64** %53, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %5) #8
  %76 = load i32, i32* %48, align 4
  %77 = icmp eq i32 %76, 4
  br i1 %77, label %78, label %83

78:                                               ; preds = %74
  %79 = bitcast %"class.v8::internal::Isolate"** %52 to %"class.v8::internal::Factory"**
  %80 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %80, i64 160
  %82 = bitcast %"class.v8::internal::Factory"* %81 to i64*
  br label %85

83:                                               ; preds = %74
  %84 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %5, i1 zeroext false) #8
  br label %85

85:                                               ; preds = %78, %83
  %86 = phi i64* [ %84, %83 ], [ %82, %78 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %12) #8
  ret i64* %86
}

declare void @_ZN2v88internal7Isolate10CountUsageENS_7Isolate17UseCounterFeatureE(%"class.v8::internal::Isolate"*, i32) local_unnamed_addr #3

declare i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"*, i64*, i64*, i32, %"class.v8::internal::Handle.1188"*) local_unnamed_addr #3

declare void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"*, %"class.v8::internal::Isolate"*) unnamed_addr #3

declare void @_ZN2v88internal23SerializeStackFrameInfoEPNS0_7IsolateENS0_6HandleINS0_14StackFrameInfoEEEPNS0_24IncrementalStringBuilderE(%"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::IncrementalStringBuilder"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10ErrorUtils8ToStringEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.v8::internal::Vector.1009", align 8
  %4 = alloca %"class.v8::internal::IncrementalStringBuilder", align 8
  %5 = load i64, i64* %1, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %19, label %8

8:                                                ; preds = %2
  %9 = and i64 %5, -4294967296
  %10 = add i64 %5, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = icmp ugt i16 %17, 185
  br i1 %18, label %31, label %19

19:                                               ; preds = %2, %8
  %20 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %21 = bitcast %"class.v8::internal::Vector.1009"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #8
  %22 = getelementptr inbounds %"class.v8::internal::Vector.1009", %"class.v8::internal::Vector.1009"* %3, i64 0, i32 0
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.410, i64 0, i64 0), i8** %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Vector.1009", %"class.v8::internal::Vector.1009"* %3, i64 0, i32 1
  store i64 24, i64* %23, align 8
  %24 = call i64* @_ZN2v88internal7Factory20NewStringFromOneByteERKNS0_6VectorIKhEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %20, %"class.v8::internal::Vector.1009"* nonnull dereferenceable(16) %3, i8 zeroext 0) #8
  %25 = icmp eq i64* %24, null
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %19
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.416, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.417, i64 0, i64 0)) #13
  unreachable

27:                                               ; preds = %19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #8
  %28 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %20, i32 64, i64* nonnull %24, i64* %1, i64* null) #8
  %29 = load i64, i64* %28, align 8
  %30 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %29, %"class.v8::internal::MessageLocation"* null) #8
  br label %116

31:                                               ; preds = %8
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 378
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 320
  %34 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_126GetStringPropertyOrDefaultEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEENS4_INS0_6StringEEES8_(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %32, i64* %33)
  %35 = icmp eq i64* %34, null
  br i1 %35, label %116, label %36

36:                                               ; preds = %31
  %37 = ptrtoint i64* %34 to i64
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 373
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 9
  %40 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_126GetStringPropertyOrDefaultEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEENS4_INS0_6StringEEES8_(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %38, i64* %39)
  %41 = icmp eq i64* %40, null
  br i1 %41, label %116, label %42

42:                                               ; preds = %36
  %43 = ptrtoint i64* %40 to i64
  %44 = load i64, i64* %34, align 8
  %45 = add i64 %44, 7
  %46 = inttoptr i64 %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %116, label %49

49:                                               ; preds = %42
  %50 = load i64, i64* %40, align 8
  %51 = add i64 %50, 7
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %116, label %55

55:                                               ; preds = %49
  %56 = bitcast %"class.v8::internal::IncrementalStringBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %56) #8
  call void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4, %"class.v8::internal::Isolate"* %0) #8
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4, i64* nonnull %34) #8
  %57 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %4, i64 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %4, i64 0, i32 6, i32 0, i32 0
  %61 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %4, i64 0, i32 4
  %62 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %4, i64 0, i32 3
  %63 = load i64*, i64** %60, align 8
  %64 = load i64, i64* %63, align 8
  %65 = load i32, i32* %61, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %61, align 4
  br i1 %59, label %76, label %67

67:                                               ; preds = %55
  %68 = shl nsw i32 %65, 1
  %69 = sext i32 %68 to i64
  %70 = add i64 %64, 11
  %71 = add i64 %70, %69
  %72 = inttoptr i64 %71 to i16*
  store i16 58, i16* %72, align 2
  %73 = load i32, i32* %61, align 4
  %74 = load i32, i32* %62, align 8
  %75 = icmp eq i32 %73, %74
  br i1 %75, label %98, label %100

76:                                               ; preds = %55
  %77 = sext i32 %65 to i64
  %78 = add i64 %64, 11
  %79 = add i64 %78, %77
  %80 = inttoptr i64 %79 to i8*
  store i8 58, i8* %80, align 1
  %81 = load i32, i32* %61, align 4
  %82 = load i32, i32* %62, align 8
  %83 = icmp eq i32 %81, %82
  br i1 %83, label %84, label %86

84:                                               ; preds = %76
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4) #8
  %85 = load i32, i32* %61, align 4
  br label %86

86:                                               ; preds = %84, %76
  %87 = phi i32 [ %85, %84 ], [ %81, %76 ]
  %88 = load i64*, i64** %60, align 8
  %89 = load i64, i64* %88, align 8
  %90 = add nsw i32 %87, 1
  store i32 %90, i32* %61, align 4
  %91 = sext i32 %87 to i64
  %92 = add i64 %89, 11
  %93 = add i64 %92, %91
  %94 = inttoptr i64 %93 to i8*
  store i8 32, i8* %94, align 1
  %95 = load i32, i32* %61, align 4
  %96 = load i32, i32* %62, align 8
  %97 = icmp eq i32 %95, %96
  br i1 %97, label %119, label %113

98:                                               ; preds = %67
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4) #8
  %99 = load i32, i32* %61, align 4
  br label %100

100:                                              ; preds = %98, %67
  %101 = phi i32 [ %99, %98 ], [ %73, %67 ]
  %102 = load i64*, i64** %60, align 8
  %103 = load i64, i64* %102, align 8
  %104 = add nsw i32 %101, 1
  store i32 %104, i32* %61, align 4
  %105 = shl nsw i32 %101, 1
  %106 = sext i32 %105 to i64
  %107 = add i64 %103, 11
  %108 = add i64 %107, %106
  %109 = inttoptr i64 %108 to i16*
  store i16 32, i16* %109, align 2
  %110 = load i32, i32* %61, align 4
  %111 = load i32, i32* %62, align 8
  %112 = icmp eq i32 %110, %111
  br i1 %112, label %120, label %113

113:                                              ; preds = %100, %120, %86, %119
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4, i64* nonnull %40) #8
  %114 = call i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4) #8
  %115 = ptrtoint i64* %114 to i64
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %56) #8
  br label %116

116:                                              ; preds = %42, %31, %49, %36, %113, %27
  %117 = phi i64 [ 0, %27 ], [ 0, %31 ], [ %115, %113 ], [ 0, %36 ], [ %37, %49 ], [ %43, %42 ]
  %118 = inttoptr i64 %117 to i64*
  ret i64* %118

119:                                              ; preds = %86
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4) #8
  br label %113

120:                                              ; preds = %100
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4) #8
  br label %113
}

declare void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"*, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16MessageFormatter6FormatEPNS0_7IsolateENS0_15MessageTemplateENS0_6HandleINS0_6StringEEES7_S7_(%"class.v8::internal::Isolate"*, i32, i64*, i64*, i64*) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.v8::internal::IncrementalStringBuilder", align 8
  %7 = alloca [3 x %"class.v8::internal::Handle.1008"], align 16
  %8 = tail call i8* @_ZN2v88internal16MessageFormatter14TemplateStringENS0_15MessageTemplateE(i32 %1)
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  %11 = tail call i64 @_ZN2v88internal7Isolate21ThrowIllegalOperationEv(%"class.v8::internal::Isolate"* %0) #8
  br label %94

12:                                               ; preds = %5
  %13 = bitcast %"class.v8::internal::IncrementalStringBuilder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #8
  call void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %6, %"class.v8::internal::Isolate"* %0) #8
  %14 = bitcast [3 x %"class.v8::internal::Handle.1008"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #8
  %15 = getelementptr inbounds [3 x %"class.v8::internal::Handle.1008"], [3 x %"class.v8::internal::Handle.1008"]* %7, i64 0, i64 0, i32 0, i32 0
  store i64* %2, i64** %15, align 16
  %16 = getelementptr inbounds [3 x %"class.v8::internal::Handle.1008"], [3 x %"class.v8::internal::Handle.1008"]* %7, i64 0, i64 1, i32 0, i32 0
  store i64* %3, i64** %16, align 8
  %17 = getelementptr inbounds [3 x %"class.v8::internal::Handle.1008"], [3 x %"class.v8::internal::Handle.1008"]* %7, i64 0, i64 2, i32 0, i32 0
  store i64* %4, i64** %17, align 16
  %18 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %6, i64 0, i32 1
  %19 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %6, i64 0, i32 6, i32 0, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %6, i64 0, i32 4
  %21 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %6, i64 0, i32 3
  br label %22

22:                                               ; preds = %90, %12
  %23 = phi i8* [ %8, %12 ], [ %93, %90 ]
  %24 = phi i32 [ 0, %12 ], [ %92, %90 ]
  %25 = load i8, i8* %23, align 1
  switch i8 %25, label %63 [
    i8 0, label %26
    i8 37, label %28
  ]

26:                                               ; preds = %22
  %27 = call i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #8
  br label %94

28:                                               ; preds = %22
  %29 = getelementptr inbounds i8, i8* %23, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, 37
  br i1 %31, label %32, label %58

32:                                               ; preds = %28
  %33 = load i32, i32* %18, align 8
  %34 = icmp eq i32 %33, 0
  %35 = load i64*, i64** %19, align 8
  %36 = load i64, i64* %35, align 8
  %37 = load i32, i32* %20, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %20, align 4
  br i1 %34, label %39, label %48

39:                                               ; preds = %32
  %40 = sext i32 %37 to i64
  %41 = add i64 %36, 11
  %42 = add i64 %41, %40
  %43 = inttoptr i64 %42 to i8*
  store i8 37, i8* %43, align 1
  %44 = load i32, i32* %20, align 4
  %45 = load i32, i32* %21, align 8
  %46 = icmp eq i32 %44, %45
  br i1 %46, label %47, label %90

47:                                               ; preds = %39
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %6) #8
  br label %90

48:                                               ; preds = %32
  %49 = shl nsw i32 %37, 1
  %50 = sext i32 %49 to i64
  %51 = add i64 %36, 11
  %52 = add i64 %51, %50
  %53 = inttoptr i64 %52 to i16*
  store i16 37, i16* %53, align 2
  %54 = load i32, i32* %20, align 4
  %55 = load i32, i32* %21, align 8
  %56 = icmp eq i32 %54, %55
  br i1 %56, label %57, label %90

57:                                               ; preds = %48
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %6) #8
  br label %90

58:                                               ; preds = %28
  %59 = add i32 %24, 1
  %60 = zext i32 %24 to i64
  %61 = getelementptr inbounds [3 x %"class.v8::internal::Handle.1008"], [3 x %"class.v8::internal::Handle.1008"]* %7, i64 0, i64 %60, i32 0, i32 0
  %62 = load i64*, i64** %61, align 8
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %6, i64* %62) #8
  br label %90

63:                                               ; preds = %22
  %64 = load i32, i32* %18, align 8
  %65 = icmp eq i32 %64, 0
  %66 = load i64*, i64** %19, align 8
  %67 = load i64, i64* %66, align 8
  %68 = load i32, i32* %20, align 4
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %20, align 4
  br i1 %65, label %70, label %79

70:                                               ; preds = %63
  %71 = sext i32 %68 to i64
  %72 = add i64 %67, 11
  %73 = add i64 %72, %71
  %74 = inttoptr i64 %73 to i8*
  store i8 %25, i8* %74, align 1
  %75 = load i32, i32* %20, align 4
  %76 = load i32, i32* %21, align 8
  %77 = icmp eq i32 %75, %76
  br i1 %77, label %78, label %90

78:                                               ; preds = %70
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %6) #8
  br label %90

79:                                               ; preds = %63
  %80 = zext i8 %25 to i16
  %81 = shl nsw i32 %68, 1
  %82 = sext i32 %81 to i64
  %83 = add i64 %67, 11
  %84 = add i64 %83, %82
  %85 = inttoptr i64 %84 to i16*
  store i16 %80, i16* %85, align 2
  %86 = load i32, i32* %20, align 4
  %87 = load i32, i32* %21, align 8
  %88 = icmp eq i32 %86, %87
  br i1 %88, label %89, label %90

89:                                               ; preds = %79
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %6) #8
  br label %90

90:                                               ; preds = %89, %79, %78, %70, %57, %48, %47, %39, %58
  %91 = phi i8* [ %23, %58 ], [ %29, %39 ], [ %29, %47 ], [ %29, %48 ], [ %29, %57 ], [ %23, %70 ], [ %23, %78 ], [ %23, %79 ], [ %23, %89 ]
  %92 = phi i32 [ %59, %58 ], [ %24, %39 ], [ %24, %47 ], [ %24, %48 ], [ %24, %57 ], [ %24, %70 ], [ %24, %78 ], [ %24, %79 ], [ %24, %89 ]
  %93 = getelementptr inbounds i8, i8* %91, i64 1
  br label %22

94:                                               ; preds = %26, %10
  %95 = phi i64* [ null, %10 ], [ %27, %26 ]
  ret i64* %95
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext) local_unnamed_addr #5 comdat align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = icmp ult i16 %13, 64
  br i1 %14, label %15, label %72

15:                                               ; preds = %3
  %16 = load atomic i32, i32* %7 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %5, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = and i16 %21, 7
  %23 = icmp eq i16 %22, 1
  br i1 %23, label %24, label %72

24:                                               ; preds = %15
  %25 = load atomic i32, i32* %7 acquire, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %5, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = and i16 %30, 7
  %32 = icmp eq i16 %31, 1
  br i1 %32, label %33, label %43

33:                                               ; preds = %24
  %34 = add i64 %4, 15
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %5, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %70

43:                                               ; preds = %24, %33
  %44 = load i64, i64* %1, align 8
  %45 = and i64 %44, -4294967296
  %46 = add i64 %44, 11
  %47 = inttoptr i64 %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %45, %49
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %52 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %51, align 8
  %53 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %43
  %55 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %52, i64 %50) #8
  %56 = load i64, i64* %55, align 8
  br label %72

57:                                               ; preds = %43
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %61 = load i64*, i64** %60, align 8
  %62 = icmp eq i64* %59, %61
  br i1 %62, label %63, label %65

63:                                               ; preds = %57
  %64 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #8
  br label %65

65:                                               ; preds = %63, %57
  %66 = phi i64* [ %64, %63 ], [ %59, %57 ]
  %67 = ptrtoint i64* %66 to i64
  %68 = add i64 %67, 8
  %69 = inttoptr i64 %68 to i64*
  store i64* %69, i64** %58, align 8
  store i64 %50, i64* %66, align 8
  br label %72

70:                                               ; preds = %33
  %71 = tail call i64* @_ZN2v88internal6String11SlowFlattenEPNS0_7IsolateENS0_6HandleINS0_10ConsStringEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %1, i8 zeroext %2) #8
  br label %118

72:                                               ; preds = %65, %54, %3, %15
  %73 = phi i64 [ %4, %15 ], [ %4, %3 ], [ %50, %65 ], [ %56, %54 ]
  %74 = phi i64* [ %1, %15 ], [ %1, %3 ], [ %66, %65 ], [ %55, %54 ]
  %75 = and i64 %73, -4294967296
  %76 = add i64 %73, -1
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %75, %79
  %81 = add i64 %80, 7
  %82 = inttoptr i64 %81 to i16*
  %83 = load atomic i16, i16* %82 monotonic, align 2
  %84 = icmp ult i16 %83, 64
  br i1 %84, label %85, label %118

85:                                               ; preds = %72
  %86 = load atomic i32, i32* %77 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %75, %87
  %89 = add i64 %88, 7
  %90 = inttoptr i64 %89 to i16*
  %91 = load atomic i16, i16* %90 monotonic, align 2
  %92 = and i16 %91, 7
  %93 = icmp eq i16 %92, 5
  br i1 %93, label %94, label %118

94:                                               ; preds = %85
  %95 = add i64 %73, 11
  %96 = inttoptr i64 %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  %99 = or i64 %75, %98
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %101 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %100, align 8
  %102 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %101, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %94
  %104 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %101, i64 %99) #8
  br label %118

105:                                              ; preds = %94
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %107 = load i64*, i64** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %109 = load i64*, i64** %108, align 8
  %110 = icmp eq i64* %107, %109
  br i1 %110, label %111, label %113

111:                                              ; preds = %105
  %112 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #8
  br label %113

113:                                              ; preds = %111, %105
  %114 = phi i64* [ %112, %111 ], [ %107, %105 ]
  %115 = ptrtoint i64* %114 to i64
  %116 = add i64 %115, 8
  %117 = inttoptr i64 %116 to i64*
  store i64* %117, i64** %106, align 8
  store i64 %99, i64* %114, align 8
  br label %118

118:                                              ; preds = %72, %85, %103, %113, %70
  %119 = phi i64* [ %71, %70 ], [ %74, %85 ], [ %104, %103 ], [ %114, %113 ], [ %74, %72 ]
  ret i64* %119
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN2v88internal16MessageFormatter14TemplateStringENS0_15MessageTemplateE(i32) local_unnamed_addr #6 align 2 {
  %2 = icmp ult i32 %0, 401
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [401 x i8*], [401 x i8*]* @switch.table._ZN2v88internal16MessageFormatter14TemplateStringENS0_15MessageTemplateE, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6

7:                                                ; preds = %1
  ret i8* null
}

declare i64 @_ZN2v88internal7Isolate21ThrowIllegalOperationEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10ErrorUtils9ConstructEPNS0_7IsolateENS0_6HandleINS0_10JSFunctionEEENS4_INS0_6ObjectEEES8_S8_(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i64*) local_unnamed_addr #1 align 2 {
  %6 = load i64, i64* %2, align 8
  %7 = and i64 %6, 1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %24, label %9

9:                                                ; preds = %5
  %10 = ptrtoint i64* %2 to i64
  %11 = and i64 %6, -4294967296
  %12 = add i64 %6, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = add i16 %19, -1059
  %21 = icmp ult i16 %20, 15
  %22 = select i1 %21, i64 %10, i64 0
  %23 = zext i1 %21 to i32
  br label %24

24:                                               ; preds = %9, %5
  %25 = phi i64 [ 0, %5 ], [ %22, %9 ]
  %26 = phi i32 [ 0, %5 ], [ %23, %9 ]
  %27 = tail call i64* @_ZN2v88internal10ErrorUtils9ConstructEPNS0_7IsolateENS0_6HandleINS0_10JSFunctionEEENS4_INS0_6ObjectEEES8_S8_NS0_13FrameSkipModeES8_NS1_20StackTraceCollectionE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i64* %3, i64* %4, i32 %26, i64 %25, i32 0)
  ret i64* %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10ErrorUtils9ConstructEPNS0_7IsolateENS0_6HandleINS0_10JSFunctionEEENS4_INS0_6ObjectEEES8_S8_NS0_13FrameSkipModeES8_NS1_20StackTraceCollectionE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i64*, i32, i64, i32) local_unnamed_addr #1 align 2 {
  %9 = alloca %"class.v8::internal::Vector.1209", align 8
  %10 = alloca %"class.v8::internal::LookupIterator", align 8
  %11 = inttoptr i64 %6 to i64*
  %12 = load i8, i8* @_ZN2v88internal36FLAG_correctness_fuzzer_suppressionsE, align 1, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %71, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, -4294967296
  %18 = add i64 %16, -1
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %17, %21
  %23 = add i64 %22, 19
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %17, %26
  %28 = add i64 %27, 951
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %17, %31
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %34 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %33, align 8
  %35 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %14
  %37 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %34, i64 %32) #8
  br label %51

38:                                               ; preds = %14
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %42 = load i64*, i64** %41, align 8
  %43 = icmp eq i64* %40, %42
  br i1 %43, label %44, label %46

44:                                               ; preds = %38
  %45 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #8
  br label %46

46:                                               ; preds = %44, %38
  %47 = phi i64* [ %45, %44 ], [ %40, %38 ]
  %48 = ptrtoint i64* %47 to i64
  %49 = add i64 %48, 8
  %50 = inttoptr i64 %49 to i64*
  store i64* %50, i64** %39, align 8
  store i64 %32, i64* %47, align 8
  br label %51

51:                                               ; preds = %36, %46
  %52 = phi i64* [ %37, %36 ], [ %47, %46 ]
  %53 = icmp eq i64* %52, %1
  br i1 %53, label %64, label %54

54:                                               ; preds = %51
  %55 = icmp eq i64* %1, null
  %56 = icmp eq i64* %52, null
  %57 = or i1 %55, %56
  br i1 %57, label %65, label %58

58:                                               ; preds = %54
  %59 = load i64, i64* %1, align 8
  %60 = load i64, i64* %52, align 8
  %61 = trunc i64 %59 to i32
  %62 = trunc i64 %60 to i32
  %63 = icmp eq i32 %61, %62
  br i1 %63, label %64, label %65

64:                                               ; preds = %51, %58
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.408, i64 0, i64 0)) #13
  unreachable

65:                                               ; preds = %54, %58
  %66 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %67 = bitcast %"class.v8::internal::Vector.1209"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #8
  %68 = getelementptr inbounds %"class.v8::internal::Vector.1209", %"class.v8::internal::Vector.1209"* %9, i64 0, i32 0
  store i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.409, i64 0, i64 0), i8** %68, align 8
  %69 = getelementptr inbounds %"class.v8::internal::Vector.1209", %"class.v8::internal::Vector.1209"* %9, i64 0, i32 1
  store i64 66, i64* %69, align 8
  %70 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %66, %"class.v8::internal::Vector.1209"* nonnull dereferenceable(16) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #8
  br label %71

71:                                               ; preds = %8, %65
  %72 = phi i64* [ %3, %8 ], [ %70, %65 ]
  %73 = load i64, i64* %2, align 8
  %74 = and i64 %73, 1
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %87, label %76

76:                                               ; preds = %71
  %77 = and i64 %73, -4294967296
  %78 = add i64 %73, -1
  %79 = inttoptr i64 %78 to i32*
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = zext i32 %80 to i64
  %82 = or i64 %77, %81
  %83 = add i64 %82, 7
  %84 = inttoptr i64 %83 to i16*
  %85 = load atomic i16, i16* %84 monotonic, align 2
  %86 = icmp ugt i16 %85, 185
  br i1 %86, label %88, label %87

87:                                               ; preds = %71, %76
  br label %88

88:                                               ; preds = %76, %87
  %89 = phi i64* [ %1, %87 ], [ %2, %76 ]
  %90 = call i64* @_ZN2v88internal8JSObject3NewENS0_6HandleINS0_10JSFunctionEEENS2_INS0_10JSReceiverEEENS2_INS0_14AllocationSiteEEE(i64* %1, i64* %89, i64* null) #8
  %91 = icmp eq i64* %90, null
  br i1 %91, label %240, label %92

92:                                               ; preds = %88
  %93 = load i64, i64* %72, align 8
  %94 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %95 = load i64, i64* %94, align 8
  %96 = trunc i64 %93 to i32
  %97 = trunc i64 %95 to i32
  %98 = icmp eq i32 %96, %97
  br i1 %98, label %122, label %99

99:                                               ; preds = %92
  %100 = and i64 %93, 1
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %113, label %102

102:                                              ; preds = %99
  %103 = and i64 %93, -4294967296
  %104 = add i64 %93, -1
  %105 = inttoptr i64 %104 to i32*
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = zext i32 %106 to i64
  %108 = or i64 %103, %107
  %109 = add i64 %108, 7
  %110 = inttoptr i64 %109 to i16*
  %111 = load atomic i16, i16* %110 monotonic, align 2
  %112 = icmp ult i16 %111, 64
  br i1 %112, label %115, label %113

113:                                              ; preds = %102, %99
  %114 = call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %72) #8
  br label %115

115:                                              ; preds = %102, %113
  %116 = phi i64* [ %114, %113 ], [ %72, %102 ]
  %117 = icmp eq i64* %116, null
  br i1 %117, label %240, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 373
  %120 = call i64* @_ZN2v88internal8JSObject30SetOwnPropertyIgnoreAttributesENS0_6HandleIS1_EENS2_INS0_4NameEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesE(i64* nonnull %90, i64* %119, i64* nonnull %116, i32 2) #8
  %121 = icmp eq i64* %120, null
  br i1 %121, label %240, label %122

122:                                              ; preds = %118, %92
  %123 = load i8, i8* @_ZN2v88internal24FLAG_harmony_error_causeE, align 1, !range !4
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %232, label %125

125:                                              ; preds = %122
  %126 = load i64, i64* %4, align 8
  %127 = load i64, i64* %94, align 8
  %128 = trunc i64 %126 to i32
  %129 = trunc i64 %127 to i32
  %130 = icmp eq i32 %128, %129
  br i1 %130, label %232, label %131

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 288
  %133 = and i64 %126, 1
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %232, label %135

135:                                              ; preds = %131
  %136 = and i64 %126, -4294967296
  %137 = add i64 %126, -1
  %138 = inttoptr i64 %137 to i32*
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = zext i32 %139 to i64
  %141 = or i64 %136, %140
  %142 = add i64 %141, 7
  %143 = inttoptr i64 %142 to i16*
  %144 = load atomic i16, i16* %143 monotonic, align 2
  %145 = icmp ugt i16 %144, 185
  br i1 %145, label %146, label %232

146:                                              ; preds = %135
  %147 = call i16 @_ZN2v88internal10JSReceiver11HasPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %4, i64* %132)
  %148 = trunc i16 %147 to i8
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %240, label %150

150:                                              ; preds = %146
  %151 = icmp ugt i16 %147, 255
  br i1 %151, label %152, label %232

152:                                              ; preds = %150
  %153 = bitcast %"class.v8::internal::LookupIterator"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %153) #8
  %154 = ptrtoint i64* %4 to i64
  %155 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 0
  %156 = icmp eq i64* %132, null
  br i1 %156, label %157, label %161

157:                                              ; preds = %152
  %158 = load i64, i64* null, align 536870912
  %159 = add i64 %158, -1
  %160 = inttoptr i64 %159 to i32*
  br label %182

161:                                              ; preds = %152
  %162 = load i64, i64* %132, align 8
  %163 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %164 = load i64, i64* %163, align 8
  %165 = add i64 %162, -1
  %166 = inttoptr i64 %165 to i32*
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = and i64 %164, 4294967295
  %169 = icmp eq i64 %168, 0
  call void @llvm.assume(i1 %169) #8
  %170 = zext i32 %167 to i64
  %171 = or i64 %164, %170
  %172 = add i64 %171, 7
  %173 = inttoptr i64 %172 to i16*
  %174 = load atomic i16, i16* %173 monotonic, align 2
  %175 = icmp eq i16 %174, 64
  br i1 %175, label %176, label %182

176:                                              ; preds = %161
  %177 = add i64 %162, 7
  %178 = inttoptr i64 %177 to i32*
  %179 = load i32, i32* %178, align 4
  %180 = and i32 %179, 1
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %185

182:                                              ; preds = %176, %161, %157
  %183 = phi i32* [ %160, %157 ], [ %166, %176 ], [ %166, %161 ]
  %184 = phi i64 [ %158, %157 ], [ %162, %176 ], [ %162, %161 ]
  br label %185

185:                                              ; preds = %182, %176
  %186 = phi i32* [ %183, %182 ], [ %166, %176 ]
  %187 = phi i64 [ %184, %182 ], [ %162, %176 ]
  %188 = phi i32 [ 3, %182 ], [ 0, %176 ]
  store i32 %188, i32* %155, align 8
  %189 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 1
  store i32 4, i32* %189, align 4
  %190 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 2
  store i8 0, i8* %190, align 8
  %191 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 3
  store i32 0, i32* %191, align 4
  %192 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 4, i32 0
  store i32 0, i32* %192, align 8
  %193 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %193, align 8
  %194 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 6, i32 0, i32 0
  store i64* %132, i64** %194, align 8
  %195 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %195, align 8
  %196 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 8, i32 0, i32 0
  store i64* %4, i64** %196, align 8
  %197 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %197, align 8
  %198 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 10
  %199 = bitcast %"class.v8::internal::Handle.1188"* %198 to i64*
  store i64 %154, i64* %199, align 8
  %200 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 11
  %201 = bitcast i64* %200 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %201, i8 -1, i64 16, i1 false) #8
  %202 = and i64 %187, -4294967296
  %203 = load atomic i32, i32* %186 monotonic, align 4
  %204 = zext i32 %203 to i64
  %205 = or i64 %202, %204
  %206 = add i64 %205, 7
  %207 = inttoptr i64 %206 to i16*
  %208 = load atomic i16, i16* %207 monotonic, align 2
  %209 = and i16 %208, -32
  %210 = icmp eq i16 %209, 32
  br i1 %210, label %211, label %215

211:                                              ; preds = %185
  %212 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %213 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %212, align 8
  %214 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %213, %"class.v8::internal::Isolate"* %0, i64* %132) #8
  br label %215

215:                                              ; preds = %211, %185
  %216 = phi i64* [ %214, %211 ], [ %132, %185 ]
  store i64* %216, i64** %194, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %10) #8
  %217 = load i32, i32* %189, align 4
  %218 = icmp eq i32 %217, 4
  br i1 %218, label %219, label %224

219:                                              ; preds = %215
  %220 = bitcast %"class.v8::internal::Isolate"** %193 to %"class.v8::internal::Factory"**
  %221 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %220, align 8
  %222 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %221, i64 160
  %223 = bitcast %"class.v8::internal::Factory"* %222 to i64*
  br label %226

224:                                              ; preds = %215
  %225 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %10, i1 zeroext false) #8
  br label %226

226:                                              ; preds = %219, %224
  %227 = phi i64* [ %225, %224 ], [ %223, %219 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %153) #8
  %228 = icmp eq i64* %227, null
  br i1 %228, label %240, label %229

229:                                              ; preds = %226
  %230 = call i64* @_ZN2v88internal8JSObject30SetOwnPropertyIgnoreAttributesENS0_6HandleIS1_EENS2_INS0_4NameEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesE(i64* nonnull %90, i64* %132, i64* nonnull %227, i32 2) #8
  %231 = icmp eq i64* %230, null
  br i1 %231, label %240, label %232

232:                                              ; preds = %150, %229, %131, %135, %122, %125
  switch i32 %7, label %239 [
    i32 0, label %233
    i32 1, label %236
  ]

233:                                              ; preds = %232
  %234 = call i64* @_ZN2v88internal7Isolate31CaptureAndSetDetailedStackTraceENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::Isolate"* %0, i64* nonnull %90) #8
  %235 = icmp eq i64* %234, null
  br i1 %235, label %240, label %236

236:                                              ; preds = %232, %233
  %237 = call i64* @_ZN2v88internal7Isolate29CaptureAndSetSimpleStackTraceENS0_6HandleINS0_10JSReceiverEEENS0_13FrameSkipModeENS2_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* nonnull %90, i32 %5, i64* %11) #8
  %238 = icmp eq i64* %237, null
  br i1 %238, label %240, label %239

239:                                              ; preds = %236, %232
  br label %240

240:                                              ; preds = %229, %226, %236, %233, %146, %118, %115, %88, %239
  %241 = phi i64* [ %90, %239 ], [ null, %88 ], [ null, %115 ], [ null, %118 ], [ null, %146 ], [ null, %233 ], [ null, %236 ], [ null, %226 ], [ null, %229 ]
  ret i64* %241
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #7

declare i64* @_ZN2v88internal8JSObject3NewENS0_6HandleINS0_10JSFunctionEEENS2_INS0_10JSReceiverEEENS2_INS0_14AllocationSiteEEE(i64*, i64*, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal8JSObject30SetOwnPropertyIgnoreAttributesENS0_6HandleIS1_EENS2_INS0_4NameEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesE(i64*, i64*, i64*, i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i16 @_ZN2v88internal10JSReceiver11HasPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64*, i64*) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %5 = alloca %"class.v8::internal::LookupIterator", align 8
  %6 = load i64, i64* %0, align 8
  %7 = and i64 %6, -262144
  %8 = or i64 %7, 16
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9, align 16
  %11 = add i64 %10, -41416
  %12 = inttoptr i64 %11 to %"class.v8::internal::Isolate"*
  %13 = bitcast %"class.v8::internal::LookupIterator::Key"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #8
  %14 = ptrtoint i64* %1 to i64
  %15 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %4, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %15, align 8
  %16 = load i64, i64* %1, align 8
  %17 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %4, i64 0, i32 1
  %18 = and i64 %16, -4294967296
  %19 = add i64 %16, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %18, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = icmp ult i16 %26, 64
  %28 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  br i1 %27, label %29, label %43

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %16, i64* %30, align 8
  %31 = add i64 %16, 3
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, -536870910
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %40

36:                                               ; preds = %29
  %37 = lshr i32 %33, 2
  %38 = and i32 %37, 16777215
  %39 = zext i32 %38 to i64
  store i64 %39, i64* %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %51

40:                                               ; preds = %29
  %41 = and i32 %33, 3
  %42 = icmp eq i32 %41, 2
  br i1 %42, label %43, label %44

43:                                               ; preds = %40, %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %53

44:                                               ; preds = %40
  %45 = call zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"* nonnull %3, i64* %17) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br i1 %45, label %51, label %46

46:                                               ; preds = %44
  %47 = load i64, i64* %1, align 8
  %48 = and i64 %47, -4294967296
  %49 = add i64 %47, -1
  %50 = inttoptr i64 %49 to i32*
  br label %53

51:                                               ; preds = %44, %36
  %52 = bitcast %"class.v8::internal::LookupIterator::Key"* %4 to i64*
  store i64 %14, i64* %52, align 8
  br label %70

53:                                               ; preds = %46, %43
  %54 = phi i32* [ %50, %46 ], [ %20, %43 ]
  %55 = phi i64 [ %48, %46 ], [ %18, %43 ]
  store i64 -1, i64* %17, align 8
  %56 = load atomic i32, i32* %54 monotonic, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %55, %57
  %59 = add i64 %58, 7
  %60 = inttoptr i64 %59 to i16*
  %61 = load atomic i16, i16* %60 monotonic, align 2
  %62 = and i16 %61, -32
  %63 = icmp eq i16 %62, 32
  br i1 %63, label %64, label %68

64:                                               ; preds = %53
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 5, i32 0, i32 0, i32 0
  %66 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %65, align 8
  %67 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %66, %"class.v8::internal::Isolate"* %12, i64* %1) #8
  br label %68

68:                                               ; preds = %64, %53
  %69 = phi i64* [ %67, %64 ], [ %1, %53 ]
  store i64* %69, i64** %15, align 8
  br label %70

70:                                               ; preds = %51, %68
  %71 = phi i64* [ %1, %51 ], [ %69, %68 ]
  %72 = bitcast %"class.v8::internal::LookupIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %72) #8
  %73 = load i64, i64* %17, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %5, %"class.v8::internal::Isolate"* %12, i64* %0, i64* %71, i64 %73, i64* %0, i32 3) #8
  %74 = call i16 @_ZN2v88internal10JSReceiver11HasPropertyEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %72) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #8
  ret i16 %74
}

declare i64* @_ZN2v88internal7Isolate31CaptureAndSetDetailedStackTraceENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Isolate29CaptureAndSetSimpleStackTraceENS0_6HandleINS0_10JSReceiverEEENS0_13FrameSkipModeENS2_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i32, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"*, i32, i64*, i64*, i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_126GetStringPropertyOrDefaultEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEENS4_INS0_6StringEEES8_(%"class.v8::internal::Isolate"*, i64*, i64*, i64*) unnamed_addr #1 {
  %5 = alloca %"class.v8::internal::LookupIterator", align 8
  %6 = bitcast %"class.v8::internal::LookupIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %6) #8
  %7 = ptrtoint i64* %1 to i64
  %8 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 0
  %9 = icmp eq i64* %2, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %4
  %11 = load i64, i64* null, align 536870912
  %12 = add i64 %11, -1
  %13 = inttoptr i64 %12 to i32*
  br label %35

14:                                               ; preds = %4
  %15 = load i64, i64* %2, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %15, -1
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i64 %17, 4294967295
  %22 = icmp eq i64 %21, 0
  tail call void @llvm.assume(i1 %22) #8
  %23 = zext i32 %20 to i64
  %24 = or i64 %17, %23
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = icmp eq i16 %27, 64
  br i1 %28, label %29, label %35

29:                                               ; preds = %14
  %30 = add i64 %15, 7
  %31 = inttoptr i64 %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %29, %14, %10
  %36 = phi i32* [ %13, %10 ], [ %19, %29 ], [ %19, %14 ]
  %37 = phi i64 [ %11, %10 ], [ %15, %29 ], [ %15, %14 ]
  br label %38

38:                                               ; preds = %35, %29
  %39 = phi i32* [ %36, %35 ], [ %19, %29 ]
  %40 = phi i64 [ %37, %35 ], [ %15, %29 ]
  %41 = phi i32 [ 3, %35 ], [ 0, %29 ]
  store i32 %41, i32* %8, align 8
  %42 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 1
  store i32 4, i32* %42, align 4
  %43 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 2
  store i8 0, i8* %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 3
  store i32 0, i32* %44, align 4
  %45 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 4, i32 0
  store i32 0, i32* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 6, i32 0, i32 0
  store i64* %2, i64** %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 8, i32 0, i32 0
  store i64* %1, i64** %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 10
  %52 = bitcast %"class.v8::internal::Handle.1188"* %51 to i64*
  store i64 %7, i64* %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 11
  %54 = bitcast i64* %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 -1, i64 16, i1 false) #8
  %55 = and i64 %40, -4294967296
  %56 = load atomic i32, i32* %39 monotonic, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %55, %57
  %59 = add i64 %58, 7
  %60 = inttoptr i64 %59 to i16*
  %61 = load atomic i16, i16* %60 monotonic, align 2
  %62 = and i16 %61, -32
  %63 = icmp eq i16 %62, 32
  br i1 %63, label %64, label %68

64:                                               ; preds = %38
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %66 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %65, align 8
  %67 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %66, %"class.v8::internal::Isolate"* %0, i64* %2) #8
  br label %68

68:                                               ; preds = %64, %38
  %69 = phi i64* [ %67, %64 ], [ %2, %38 ]
  store i64* %69, i64** %47, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %5) #8
  %70 = load i32, i32* %42, align 4
  %71 = icmp eq i32 %70, 4
  br i1 %71, label %72, label %77

72:                                               ; preds = %68
  %73 = bitcast %"class.v8::internal::Isolate"** %46 to %"class.v8::internal::Factory"**
  %74 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %74, i64 160
  %76 = bitcast %"class.v8::internal::Factory"* %75 to i64*
  br label %79

77:                                               ; preds = %68
  %78 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %5, i1 zeroext false) #8
  br label %79

79:                                               ; preds = %72, %77
  %80 = phi i64* [ %78, %77 ], [ %76, %72 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %6) #8
  %81 = icmp eq i64* %80, null
  br i1 %81, label %108, label %82

82:                                               ; preds = %79
  %83 = load i64, i64* %80, align 8
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %85 = load i64, i64* %84, align 8
  %86 = trunc i64 %83 to i32
  %87 = trunc i64 %85 to i32
  %88 = icmp eq i32 %86, %87
  br i1 %88, label %106, label %89

89:                                               ; preds = %82
  %90 = and i64 %83, 1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %103, label %92

92:                                               ; preds = %89
  %93 = and i64 %83, -4294967296
  %94 = add i64 %83, -1
  %95 = inttoptr i64 %94 to i32*
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = zext i32 %96 to i64
  %98 = or i64 %93, %97
  %99 = add i64 %98, 7
  %100 = inttoptr i64 %99 to i16*
  %101 = load atomic i16, i16* %100 monotonic, align 2
  %102 = icmp ult i16 %101, 64
  br i1 %102, label %106, label %103

103:                                              ; preds = %89, %92
  %104 = call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* nonnull %80) #8
  %105 = icmp eq i64* %104, null
  br i1 %105, label %108, label %106

106:                                              ; preds = %92, %103, %82
  %107 = phi i64* [ %3, %82 ], [ %104, %103 ], [ %80, %92 ]
  br label %108

108:                                              ; preds = %106, %103, %79
  %109 = phi i64* [ null, %79 ], [ %107, %106 ], [ null, %103 ]
  ret i64* %109
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10ErrorUtils16MakeGenericErrorEPNS0_7IsolateENS0_6HandleINS0_10JSFunctionEEENS0_15MessageTemplateENS4_INS0_6ObjectEEES9_S9_NS0_13FrameSkipModeE(%"class.v8::internal::Isolate"*, i64*, i32, i64*, i64*, i64*, i32) local_unnamed_addr #1 align 2 {
  %8 = alloca %"class.v8::internal::Vector.1009", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::NativeContext>::ObjectRef", align 8
  %10 = load i8, i8* @_ZN2v88internal33FLAG_clear_exceptions_on_js_entryE, align 1, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  store i64 %14, i64* %15, align 8
  br label %16

16:                                               ; preds = %7, %12
  %17 = tail call i64* @_ZN2v88internal6Object21NoSideEffectsToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %3) #8
  %18 = tail call i64* @_ZN2v88internal6Object21NoSideEffectsToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %4) #8
  %19 = tail call i64* @_ZN2v88internal6Object21NoSideEffectsToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %5) #8
  %20 = bitcast %"class.v8::internal::Handle<v8::internal::NativeContext>::ObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, -4294967296
  %24 = add i64 %22, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %23, %27
  %29 = add i64 %28, 19
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = or i64 %23, %32
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %35 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %34, align 8
  %36 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %16
  %38 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %35, i64 %33) #8
  %39 = load i64, i64* %38, align 8
  br label %53

40:                                               ; preds = %16
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %44 = load i64*, i64** %43, align 8
  %45 = icmp eq i64* %42, %44
  br i1 %45, label %46, label %48

46:                                               ; preds = %40
  %47 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #8
  br label %48

48:                                               ; preds = %46, %40
  %49 = phi i64* [ %47, %46 ], [ %42, %40 ]
  %50 = ptrtoint i64* %49 to i64
  %51 = add i64 %50, 8
  %52 = inttoptr i64 %51 to i64*
  store i64* %52, i64** %41, align 8
  store i64 %33, i64* %49, align 8
  br label %53

53:                                               ; preds = %48, %37
  %54 = phi i64 [ %39, %37 ], [ %33, %48 ]
  %55 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NativeContext>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NativeContext>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NativeContext>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NativeContext>::ObjectRef"* %9, i64 0, i32 0
  call void @_ZN2v88internal13NativeContext21IncrementErrorsThrownEv(%"class.v8::internal::NativeContext"* nonnull %56) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  %57 = call i64* @_ZN2v88internal16MessageFormatter6FormatEPNS0_7IsolateENS0_15MessageTemplateENS0_6HandleINS0_6StringEEES7_S7_(%"class.v8::internal::Isolate"* %0, i32 %2, i64* %17, i64* %18, i64* %19) #8
  %58 = icmp eq i64* %57, null
  br i1 %58, label %59, label %72

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 13
  store i8 0, i8* %63, align 1
  %64 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %65 = bitcast %"class.v8::internal::Vector.1009"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #8
  %66 = getelementptr inbounds %"class.v8::internal::Vector.1009", %"class.v8::internal::Vector.1009"* %8, i64 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i8** %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Vector.1009", %"class.v8::internal::Vector.1009"* %8, i64 0, i32 1
  store i64 7, i64* %67, align 8
  %68 = call i64* @_ZN2v88internal7Factory20NewStringFromOneByteERKNS0_6VectorIKhEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %64, %"class.v8::internal::Vector.1009"* nonnull dereferenceable(16) %8, i8 zeroext 0) #8
  %69 = icmp eq i64* %68, null
  br i1 %69, label %70, label %71, !prof !2

70:                                               ; preds = %59
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.416, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.417, i64 0, i64 0)) #13
  unreachable

71:                                               ; preds = %59
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #8
  br label %72

72:                                               ; preds = %53, %71
  %73 = phi i64* [ %68, %71 ], [ %57, %53 ]
  %74 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %75 = call i64* @_ZN2v88internal10ErrorUtils9ConstructEPNS0_7IsolateENS0_6HandleINS0_10JSFunctionEEENS4_INS0_6ObjectEEES8_S8_NS0_13FrameSkipModeES8_NS1_20StackTraceCollectionE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %1, i64* nonnull %73, i64* %74, i32 %6, i64 0, i32 0)
  %76 = icmp eq i64* %75, null
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %72
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.416, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.417, i64 0, i64 0)) #13
  unreachable

78:                                               ; preds = %72
  ret i64* %75
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10ErrorUtils16NewIteratorErrorEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.v8::internal::MessageLocation", align 8
  %4 = alloca i32, align 4
  %5 = bitcast %"class.v8::internal::MessageLocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %3, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %3, i64 0, i32 1
  store i32 -1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %3, i64 0, i32 2
  store i32 -1, i32* %8, align 4
  %9 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %3, i64 0, i32 3
  store i32 -1, i32* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %3, i64 0, i32 4, i32 0, i32 0
  store i64* null, i64** %10, align 8
  %11 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #8
  store i32 0, i32* %4, align 4
  %12 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_114RenderCallSiteEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEPNS0_15MessageLocationEPNS0_11CallPrinter9ErrorHintE(%"class.v8::internal::Isolate"* %0, i64* %1, %"class.v8::internal::MessageLocation"* nonnull %3, i32* nonnull %4)
  %13 = load i32, i32* %4, align 4
  switch i32 %13, label %21 [
    i32 0, label %14
    i32 1, label %22
    i32 3, label %18
    i32 2, label %19
    i32 4, label %20
  ]

14:                                               ; preds = %2
  %15 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 510
  %17 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %15, i32 102, i64* %12, i64* %16, i64* null) #8
  br label %26

18:                                               ; preds = %2
  br label %22

19:                                               ; preds = %2
  br label %22

20:                                               ; preds = %2
  br label %22

21:                                               ; preds = %2
  unreachable

22:                                               ; preds = %2, %18, %19, %20
  %23 = phi i32 [ 99, %20 ], [ 103, %19 ], [ 98, %18 ], [ 101, %2 ]
  %24 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %25 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %24, i32 %23, i64* %12, i64* null, i64* null) #8
  br label %26

26:                                               ; preds = %22, %14
  %27 = phi i64* [ %17, %14 ], [ %25, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #8
  ret i64* %27
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_114RenderCallSiteEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEPNS0_15MessageLocationEPNS0_11CallPrinter9ErrorHintE(%"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::MessageLocation"* nocapture, i32* nocapture) unnamed_addr #1 {
  %5 = alloca %"class.v8::internal::Script", align 8
  %6 = alloca %"class.v8::internal::UnoptimizedCompileState", align 8
  %7 = alloca %"class.v8::internal::ParseInfo", align 8
  %8 = alloca %"class.v8::internal::CallPrinter", align 8
  %9 = tail call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_115ComputeLocationEPNS0_7IsolateEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::MessageLocation"* %2)
  br i1 %9, label %10, label %125

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %2, i64 0, i32 4, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = load i64, i64* %12, align 8
  %14 = tail call { i64, i32 } @_ZN2v88internal23UnoptimizedCompileFlags18ForFunctionCompileEPNS0_7IsolateENS0_18SharedFunctionInfoE(%"class.v8::internal::Isolate"* %0, i64 %13) #8
  %15 = extractvalue { i64, i32 } %14, 0
  %16 = extractvalue { i64, i32 } %14, 1
  %17 = bitcast %"class.v8::internal::UnoptimizedCompileState"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %17) #8
  call void @_ZN2v88internal23UnoptimizedCompileStateC1EPNS0_7IsolateE(%"class.v8::internal::UnoptimizedCompileState"* nonnull %6, %"class.v8::internal::Isolate"* %0) #8
  %18 = bitcast %"class.v8::internal::ParseInfo"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %18) #8
  call void @_ZN2v88internal9ParseInfoC1EPNS0_7IsolateENS0_23UnoptimizedCompileFlagsEPNS0_23UnoptimizedCompileStateE(%"class.v8::internal::ParseInfo"* nonnull %7, %"class.v8::internal::Isolate"* %0, i64 %15, i32 %16, %"class.v8::internal::UnoptimizedCompileState"* nonnull %6) #8
  %19 = load i64*, i64** %11, align 8
  %20 = call zeroext i1 @_ZN2v88internal7parsing8ParseAnyEPNS0_9ParseInfoENS0_6HandleINS0_18SharedFunctionInfoEEEPNS0_7IsolateENS1_20ReportStatisticsModeE(%"class.v8::internal::ParseInfo"* nonnull %7, i64* %19, %"class.v8::internal::Isolate"* %0, i32 1) #8
  br i1 %20, label %21, label %93

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %7, i64 0, i32 11, i32 0, i32 0, i32 0
  %23 = load %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::AstValueFactory"** %22, align 8
  call void @_ZN2v88internal15AstValueFactory11InternalizeINS0_7IsolateEEEvPT_(%"class.v8::internal::AstValueFactory"* %23, %"class.v8::internal::Isolate"* %0) #8
  %24 = bitcast %"class.v8::internal::CallPrinter"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %24) #8
  %25 = load i64*, i64** %11, align 8
  %26 = load i64, i64* %25, align 8
  %27 = and i64 %26, -4294967296
  %28 = add i64 %26, 15
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 acquire, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %27, %31
  %33 = add i64 %32, -1
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %27, %36
  %38 = add i64 %37, 7
  %39 = inttoptr i64 %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = icmp eq i16 %40, 100
  br i1 %41, label %42, label %48

42:                                               ; preds = %21
  %43 = add i64 %32, 11
  %44 = inttoptr i64 %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %27, %46
  br label %48

48:                                               ; preds = %42, %21
  %49 = phi i64 [ %47, %42 ], [ %32, %21 ]
  %50 = and i64 %49, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %76, label %52

52:                                               ; preds = %48
  %53 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %54 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %53, null
  br i1 %54, label %61, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %53, i64 0, i32 0, i32 1
  %57 = load i8, i8* %56, align 8, !range !4
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %53, i64 0, i32 1, i64 0
  br label %69

61:                                               ; preds = %55, %52
  %62 = and i64 %49, -262144
  %63 = or i64 %62, 16
  %64 = inttoptr i64 %63 to i64*
  %65 = load i64, i64* %64, align 16
  %66 = add i64 %65, -41416
  %67 = inttoptr i64 %66 to %"class.v8::internal::Isolate"*
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %67, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %69

69:                                               ; preds = %61, %59
  %70 = phi i64* [ %68, %61 ], [ %60, %59 ]
  %71 = getelementptr inbounds i64, i64* %70, i64 4
  %72 = load i64, i64* %71, align 8
  %73 = trunc i64 %49 to i32
  %74 = trunc i64 %72 to i32
  %75 = icmp eq i32 %73, %74
  br i1 %75, label %80, label %76

76:                                               ; preds = %69, %48
  %77 = bitcast %"class.v8::internal::Script"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #8
  %78 = getelementptr inbounds %"class.v8::internal::Script", %"class.v8::internal::Script"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %49, i64* %78, align 8
  %79 = call zeroext i1 @_ZNK2v88internal6Script16IsUserJavaScriptEv(%"class.v8::internal::Script"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #8
  br label %80

80:                                               ; preds = %69, %76
  %81 = phi i1 [ %79, %76 ], [ false, %69 ]
  call void @_ZN2v88internal11CallPrinterC1EPNS0_7IsolateEbNS1_21SpreadErrorInArgsHintE(%"class.v8::internal::CallPrinter"* nonnull %8, %"class.v8::internal::Isolate"* %0, i1 zeroext %81, i32 1) #8
  %82 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %7, i64 0, i32 15
  %83 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %82, align 8
  %84 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %2, i64 0, i32 1
  %85 = load i32, i32* %84, align 8
  %86 = call i64* @_ZN2v88internal11CallPrinter5PrintEPNS0_15FunctionLiteralEi(%"class.v8::internal::CallPrinter"* nonnull %8, %"class.v8::internal::FunctionLiteral"* %83, i32 %85) #8
  %87 = call i32 @_ZNK2v88internal11CallPrinter12GetErrorHintEv(%"class.v8::internal::CallPrinter"* nonnull %8) #8
  store i32 %87, i32* %3, align 4
  %88 = load i64, i64* %86, align 8
  %89 = add i64 %88, 7
  %90 = inttoptr i64 %89 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = icmp slt i32 %91, 1
  call void @_ZN2v88internal11CallPrinterD1Ev(%"class.v8::internal::CallPrinter"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %24) #8
  br i1 %92, label %93, label %95

93:                                               ; preds = %80, %10
  %94 = phi i64* [ %86, %80 ], [ undef, %10 ]
  br label %95

95:                                               ; preds = %80, %93
  %96 = phi i64* [ %94, %93 ], [ %86, %80 ]
  %97 = phi i32 [ 0, %93 ], [ 1, %80 ]
  call void @_ZN2v88internal9ParseInfoD1Ev(%"class.v8::internal::ParseInfo"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %18) #8
  %98 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %6, i64 0, i32 5, i32 0, i32 0, i32 0
  %99 = load %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"*, %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"** %98, align 8
  store %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* null, %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"** %98, align 8
  %100 = icmp eq %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* %99, null
  br i1 %100, label %113, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState::ParallelTasks", %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* %99, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load %"struct.std::__1::__forward_list_node.1229"*, %"struct.std::__1::__forward_list_node.1229"** %102, align 8
  %104 = icmp eq %"struct.std::__1::__forward_list_node.1229"* %103, null
  br i1 %104, label %111, label %105

105:                                              ; preds = %101, %105
  %106 = phi %"struct.std::__1::__forward_list_node.1229"* [ %109, %105 ], [ %103, %101 ]
  %107 = bitcast %"struct.std::__1::__forward_list_node.1229"* %106 to i8*
  %108 = getelementptr inbounds %"struct.std::__1::__forward_list_node.1229", %"struct.std::__1::__forward_list_node.1229"* %106, i64 0, i32 0, i32 0
  %109 = load %"struct.std::__1::__forward_list_node.1229"*, %"struct.std::__1::__forward_list_node.1229"** %108, align 8
  call void @_ZdlPv(i8* %107) #12
  %110 = icmp eq %"struct.std::__1::__forward_list_node.1229"* %109, null
  br i1 %110, label %111, label %105

111:                                              ; preds = %105, %101
  %112 = bitcast %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* %99 to i8*
  call void @_ZdlPv(i8* %112) #12
  br label %113

113:                                              ; preds = %111, %95
  %114 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %6, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__forward_list_node"* %115, null
  br i1 %116, label %123, label %117

117:                                              ; preds = %113, %117
  %118 = phi %"struct.std::__1::__forward_list_node"* [ %121, %117 ], [ %115, %113 ]
  %119 = bitcast %"struct.std::__1::__forward_list_node"* %118 to i8*
  %120 = getelementptr inbounds %"struct.std::__1::__forward_list_node", %"struct.std::__1::__forward_list_node"* %118, i64 0, i32 0, i32 0
  %121 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %120, align 8
  call void @_ZdlPv(i8* %119) #12
  %122 = icmp eq %"struct.std::__1::__forward_list_node"* %121, null
  br i1 %122, label %123, label %117

123:                                              ; preds = %117, %113
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %17) #8
  %124 = icmp eq i32 %97, 0
  br i1 %124, label %125, label %127

125:                                              ; preds = %123, %4
  %126 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_120BuildDefaultCallSiteEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %1)
  br label %127

127:                                              ; preds = %123, %125
  %128 = phi i64* [ %126, %125 ], [ %96, %123 ]
  ret i64* %128
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal10ErrorUtils19ThrowSpreadArgErrorEPNS0_7IsolateENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i32, i64*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.v8::internal::Script", align 8
  %5 = alloca %"class.v8::internal::MessageLocation", align 8
  %6 = alloca %"class.v8::internal::UnoptimizedCompileState", align 8
  %7 = alloca %"class.v8::internal::ParseInfo", align 8
  %8 = alloca %"class.v8::internal::CallPrinter", align 8
  %9 = bitcast %"class.v8::internal::MessageLocation"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %5, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %5, i64 0, i32 1
  store i32 -1, i32* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %5, i64 0, i32 2
  store i32 -1, i32* %12, align 4
  %13 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %5, i64 0, i32 3
  store i32 -1, i32* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %5, i64 0, i32 4, i32 0, i32 0
  store i64* null, i64** %14, align 8
  %15 = call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_115ComputeLocationEPNS0_7IsolateEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::MessageLocation"* nonnull %5)
  br i1 %15, label %16, label %138

16:                                               ; preds = %3
  %17 = load i64*, i64** %14, align 8
  %18 = load i64, i64* %17, align 8
  %19 = tail call { i64, i32 } @_ZN2v88internal23UnoptimizedCompileFlags18ForFunctionCompileEPNS0_7IsolateENS0_18SharedFunctionInfoE(%"class.v8::internal::Isolate"* %0, i64 %18) #8
  %20 = extractvalue { i64, i32 } %19, 0
  %21 = extractvalue { i64, i32 } %19, 1
  %22 = bitcast %"class.v8::internal::UnoptimizedCompileState"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %22) #8
  call void @_ZN2v88internal23UnoptimizedCompileStateC1EPNS0_7IsolateE(%"class.v8::internal::UnoptimizedCompileState"* nonnull %6, %"class.v8::internal::Isolate"* %0) #8
  %23 = bitcast %"class.v8::internal::ParseInfo"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %23) #8
  call void @_ZN2v88internal9ParseInfoC1EPNS0_7IsolateENS0_23UnoptimizedCompileFlagsEPNS0_23UnoptimizedCompileStateE(%"class.v8::internal::ParseInfo"* nonnull %7, %"class.v8::internal::Isolate"* %0, i64 %20, i32 %21, %"class.v8::internal::UnoptimizedCompileState"* nonnull %6) #8
  %24 = load i64*, i64** %14, align 8
  %25 = call zeroext i1 @_ZN2v88internal7parsing8ParseAnyEPNS0_9ParseInfoENS0_6HandleINS0_18SharedFunctionInfoEEEPNS0_7IsolateENS1_20ReportStatisticsModeE(%"class.v8::internal::ParseInfo"* nonnull %7, i64* %24, %"class.v8::internal::Isolate"* %0, i32 1) #8
  br i1 %25, label %26, label %108

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %7, i64 0, i32 11, i32 0, i32 0, i32 0
  %28 = load %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::AstValueFactory"** %27, align 8
  call void @_ZN2v88internal15AstValueFactory11InternalizeINS0_7IsolateEEEvPT_(%"class.v8::internal::AstValueFactory"* %28, %"class.v8::internal::Isolate"* %0) #8
  %29 = bitcast %"class.v8::internal::CallPrinter"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %29) #8
  %30 = load i64*, i64** %14, align 8
  %31 = load i64, i64* %30, align 8
  %32 = and i64 %31, -4294967296
  %33 = add i64 %31, 15
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 acquire, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %32, %36
  %38 = add i64 %37, -1
  %39 = inttoptr i64 %38 to i32*
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = zext i32 %40 to i64
  %42 = or i64 %32, %41
  %43 = add i64 %42, 7
  %44 = inttoptr i64 %43 to i16*
  %45 = load atomic i16, i16* %44 monotonic, align 2
  %46 = icmp eq i16 %45, 100
  br i1 %46, label %47, label %53

47:                                               ; preds = %26
  %48 = add i64 %37, 11
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %32, %51
  br label %53

53:                                               ; preds = %47, %26
  %54 = phi i64 [ %52, %47 ], [ %37, %26 ]
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %81, label %57

57:                                               ; preds = %53
  %58 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %59 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %58, null
  br i1 %59, label %66, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %58, i64 0, i32 0, i32 1
  %62 = load i8, i8* %61, align 8, !range !4
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %66, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %58, i64 0, i32 1, i64 0
  br label %74

66:                                               ; preds = %60, %57
  %67 = and i64 %54, -262144
  %68 = or i64 %67, 16
  %69 = inttoptr i64 %68 to i64*
  %70 = load i64, i64* %69, align 16
  %71 = add i64 %70, -41416
  %72 = inttoptr i64 %71 to %"class.v8::internal::Isolate"*
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %72, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %74

74:                                               ; preds = %66, %64
  %75 = phi i64* [ %73, %66 ], [ %65, %64 ]
  %76 = getelementptr inbounds i64, i64* %75, i64 4
  %77 = load i64, i64* %76, align 8
  %78 = trunc i64 %54 to i32
  %79 = trunc i64 %77 to i32
  %80 = icmp eq i32 %78, %79
  br i1 %80, label %85, label %81

81:                                               ; preds = %74, %53
  %82 = bitcast %"class.v8::internal::Script"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #8
  %83 = getelementptr inbounds %"class.v8::internal::Script", %"class.v8::internal::Script"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %54, i64* %83, align 8
  %84 = call zeroext i1 @_ZNK2v88internal6Script16IsUserJavaScriptEv(%"class.v8::internal::Script"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #8
  br label %85

85:                                               ; preds = %74, %81
  %86 = phi i1 [ %84, %81 ], [ false, %74 ]
  call void @_ZN2v88internal11CallPrinterC1EPNS0_7IsolateEbNS1_21SpreadErrorInArgsHintE(%"class.v8::internal::CallPrinter"* nonnull %8, %"class.v8::internal::Isolate"* %0, i1 zeroext %86, i32 0) #8
  %87 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %7, i64 0, i32 15
  %88 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %87, align 8
  %89 = load i32, i32* %11, align 8
  %90 = call i64* @_ZN2v88internal11CallPrinter5PrintEPNS0_15FunctionLiteralEi(%"class.v8::internal::CallPrinter"* nonnull %8, %"class.v8::internal::FunctionLiteral"* %88, i32 %89) #8
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, 7
  %93 = inttoptr i64 %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %98, label %96

96:                                               ; preds = %85
  %97 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_120BuildDefaultCallSiteEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %2)
  br label %98

98:                                               ; preds = %85, %96
  %99 = phi i64* [ %97, %96 ], [ %90, %85 ]
  %100 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %8, i64 0, i32 15
  %101 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %100, align 8
  %102 = icmp eq %"class.v8::internal::Expression"* %101, null
  br i1 %102, label %107, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %101, i64 0, i32 0, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = add nsw i32 %105, 1
  store i32 %105, i32* %11, align 8
  store i32 %106, i32* %12, align 4
  store i32 -1, i32* %13, align 8
  br label %107

107:                                              ; preds = %98, %103
  call void @_ZN2v88internal11CallPrinterD1Ev(%"class.v8::internal::CallPrinter"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %29) #8
  br label %110

108:                                              ; preds = %16
  %109 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_120BuildDefaultCallSiteEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %2)
  br label %110

110:                                              ; preds = %108, %107
  %111 = phi i64* [ %99, %107 ], [ %109, %108 ]
  call void @_ZN2v88internal9ParseInfoD1Ev(%"class.v8::internal::ParseInfo"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %23) #8
  %112 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %6, i64 0, i32 5, i32 0, i32 0, i32 0
  %113 = load %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"*, %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"** %112, align 8
  store %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* null, %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"** %112, align 8
  %114 = icmp eq %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* %113, null
  br i1 %114, label %127, label %115

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState::ParallelTasks", %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* %113, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load %"struct.std::__1::__forward_list_node.1229"*, %"struct.std::__1::__forward_list_node.1229"** %116, align 8
  %118 = icmp eq %"struct.std::__1::__forward_list_node.1229"* %117, null
  br i1 %118, label %125, label %119

119:                                              ; preds = %115, %119
  %120 = phi %"struct.std::__1::__forward_list_node.1229"* [ %123, %119 ], [ %117, %115 ]
  %121 = bitcast %"struct.std::__1::__forward_list_node.1229"* %120 to i8*
  %122 = getelementptr inbounds %"struct.std::__1::__forward_list_node.1229", %"struct.std::__1::__forward_list_node.1229"* %120, i64 0, i32 0, i32 0
  %123 = load %"struct.std::__1::__forward_list_node.1229"*, %"struct.std::__1::__forward_list_node.1229"** %122, align 8
  call void @_ZdlPv(i8* %121) #12
  %124 = icmp eq %"struct.std::__1::__forward_list_node.1229"* %123, null
  br i1 %124, label %125, label %119

125:                                              ; preds = %119, %115
  %126 = bitcast %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* %113 to i8*
  call void @_ZdlPv(i8* %126) #12
  br label %127

127:                                              ; preds = %125, %110
  %128 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %6, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %128, align 8
  %130 = icmp eq %"struct.std::__1::__forward_list_node"* %129, null
  br i1 %130, label %137, label %131

131:                                              ; preds = %127, %131
  %132 = phi %"struct.std::__1::__forward_list_node"* [ %135, %131 ], [ %129, %127 ]
  %133 = bitcast %"struct.std::__1::__forward_list_node"* %132 to i8*
  %134 = getelementptr inbounds %"struct.std::__1::__forward_list_node", %"struct.std::__1::__forward_list_node"* %132, i64 0, i32 0, i32 0
  %135 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %134, align 8
  call void @_ZdlPv(i8* %133) #12
  %136 = icmp eq %"struct.std::__1::__forward_list_node"* %135, null
  br i1 %136, label %137, label %131

137:                                              ; preds = %131, %127
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %22) #8
  br label %138

138:                                              ; preds = %137, %3
  %139 = phi i64* [ %111, %137 ], [ null, %3 ]
  %140 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %141 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %140, i32 %1, i64* %139, i64* %2, i64* null) #8
  %142 = call i64 @_ZN2v88internal7Isolate7ThrowAtENS0_6HandleINS0_8JSObjectEEEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64* %141, %"class.v8::internal::MessageLocation"* nonnull %5) #8
  %143 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 32
  %144 = load i64, i64* %143, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #8
  ret i64 %144
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_115ComputeLocationEPNS0_7IsolateEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"*, %"class.v8::internal::MessageLocation"* nocapture) unnamed_addr #1 {
  %3 = alloca %"class.v8::internal::JavaScriptFrameIterator", align 8
  %4 = alloca %"class.std::__1::vector.1300", align 8
  %5 = alloca %"class.v8::internal::Handle<v8::internal::AbstractCode>::ObjectRef", align 8
  %6 = bitcast %"class.v8::internal::JavaScriptFrameIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1616, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.v8::internal::JavaScriptFrameIterator", %"class.v8::internal::JavaScriptFrameIterator"* %3, i64 0, i32 0
  call void @_ZN2v88internal18StackFrameIteratorC1EPNS0_7IsolateE(%"class.v8::internal::StackFrameIterator"* nonnull %7, %"class.v8::internal::Isolate"* %0) #8
  %8 = getelementptr inbounds %"class.v8::internal::JavaScriptFrameIterator", %"class.v8::internal::JavaScriptFrameIterator"* %3, i64 0, i32 0, i32 0, i32 23
  %9 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %8, align 8
  %10 = icmp eq %"class.v8::internal::StackFrame"* %9, null
  br i1 %10, label %169, label %11

11:                                               ; preds = %2
  call void @_ZN2v88internal23JavaScriptFrameIterator7AdvanceEv(%"class.v8::internal::JavaScriptFrameIterator"* nonnull %3) #8
  %12 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %8, align 8
  %13 = icmp eq %"class.v8::internal::StackFrame"* %12, null
  br i1 %13, label %169, label %14

14:                                               ; preds = %11
  %15 = bitcast %"class.std::__1::vector.1300"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #8
  %16 = bitcast %"class.v8::internal::StackFrame"* %12 to %"class.v8::internal::CommonFrameWithJSLinkage"*
  %17 = bitcast %"class.v8::internal::StackFrame"* %12 to void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1300"*)***
  %18 = load void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1300"*)**, void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1300"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1300"*)*, void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1300"*)** %18, i64 11
  %20 = load void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1300"*)*, void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1300"*)** %19, align 8
  call void %20(%"class.v8::internal::CommonFrameWithJSLinkage"* nonnull %16, %"class.std::__1::vector.1300"* nonnull %4) #8
  %21 = getelementptr inbounds %"class.std::__1::vector.1300", %"class.std::__1::vector.1300"* %4, i64 0, i32 0, i32 1
  %22 = load %"class.v8::internal::FrameSummary"*, %"class.v8::internal::FrameSummary"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::FrameSummary", %"class.v8::internal::FrameSummary"* %22, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, 11
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i64 %25, -4294967296
  %30 = zext i32 %28 to i64
  %31 = or i64 %29, %30
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %33 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %32, align 8
  %34 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %14
  %36 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %33, i64 %31) #8
  %37 = load i64, i64* %36, align 8
  br label %51

38:                                               ; preds = %14
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %42 = load i64*, i64** %41, align 8
  %43 = icmp eq i64* %40, %42
  br i1 %43, label %44, label %46

44:                                               ; preds = %38
  %45 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #8
  br label %46

46:                                               ; preds = %44, %38
  %47 = phi i64* [ %45, %44 ], [ %40, %38 ]
  %48 = ptrtoint i64* %47 to i64
  %49 = add i64 %48, 8
  %50 = inttoptr i64 %49 to i64*
  store i64* %50, i64** %39, align 8
  store i64 %31, i64* %47, align 8
  br label %51

51:                                               ; preds = %35, %46
  %52 = phi i64 [ %37, %35 ], [ %31, %46 ]
  %53 = phi i64* [ %36, %35 ], [ %47, %46 ]
  %54 = and i64 %52, -4294967296
  %55 = add i64 %52, 15
  %56 = inttoptr i64 %55 to i32*
  %57 = load atomic i32, i32* %56 acquire, align 4
  %58 = zext i32 %57 to i64
  %59 = or i64 %54, %58
  %60 = add i64 %59, -1
  %61 = inttoptr i64 %60 to i32*
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = zext i32 %62 to i64
  %64 = or i64 %54, %63
  %65 = add i64 %64, 7
  %66 = inttoptr i64 %65 to i16*
  %67 = load atomic i16, i16* %66 monotonic, align 2
  %68 = icmp eq i16 %67, 100
  br i1 %68, label %69, label %75

69:                                               ; preds = %51
  %70 = add i64 %59, 11
  %71 = inttoptr i64 %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i64
  %74 = or i64 %54, %73
  br label %75

75:                                               ; preds = %51, %69
  %76 = phi i64 [ %74, %69 ], [ %59, %51 ]
  %77 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %32, align 8
  %78 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %75
  %80 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %77, i64 %76) #8
  br label %94

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %83 = load i64*, i64** %82, align 8
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %85 = load i64*, i64** %84, align 8
  %86 = icmp eq i64* %83, %85
  br i1 %86, label %87, label %89

87:                                               ; preds = %81
  %88 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #8
  br label %89

89:                                               ; preds = %87, %81
  %90 = phi i64* [ %88, %87 ], [ %83, %81 ]
  %91 = ptrtoint i64* %90 to i64
  %92 = add i64 %91, 8
  %93 = inttoptr i64 %92 to i64*
  store i64* %93, i64** %82, align 8
  store i64 %76, i64* %90, align 8
  br label %94

94:                                               ; preds = %79, %89
  %95 = phi i64* [ %80, %79 ], [ %90, %89 ]
  call void @_ZN2v88internal18SharedFunctionInfo30EnsureSourcePositionsAvailableEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %53) #8
  %96 = bitcast %"class.v8::internal::Handle<v8::internal::AbstractCode>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #8
  %97 = getelementptr inbounds %"class.v8::internal::FrameSummary", %"class.v8::internal::FrameSummary"* %22, i64 -1, i32 0, i32 0, i32 3, i32 0, i32 0
  %98 = load i64*, i64** %97, align 8
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AbstractCode>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AbstractCode>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AbstractCode>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AbstractCode>::ObjectRef"* %5, i64 0, i32 0
  %102 = getelementptr inbounds %"class.v8::internal::FrameSummary", %"class.v8::internal::FrameSummary"* %22, i64 -1, i32 0, i32 0, i32 4
  %103 = load i32, i32* %102, align 8
  %104 = call i32 @_ZN2v88internal12AbstractCode14SourcePositionEi(%"class.v8::internal::AbstractCode"* nonnull %101, i32 %103) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #8
  %105 = load i64, i64* %95, align 8
  %106 = and i64 %105, 1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %151, label %108

108:                                              ; preds = %94
  %109 = and i64 %105, -4294967296
  %110 = add i64 %105, -1
  %111 = inttoptr i64 %110 to i32*
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = zext i32 %112 to i64
  %114 = or i64 %109, %113
  %115 = add i64 %114, 7
  %116 = inttoptr i64 %115 to i16*
  %117 = load atomic i16, i16* %116 monotonic, align 2
  %118 = icmp eq i16 %117, 112
  br i1 %118, label %119, label %151

119:                                              ; preds = %108
  %120 = add i64 %105, 3
  %121 = inttoptr i64 %120 to i32*
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %124 = load i64, i64* %123, align 8
  %125 = trunc i64 %124 to i32
  %126 = icmp eq i32 %122, %125
  br i1 %126, label %151, label %127

127:                                              ; preds = %119
  %128 = add nsw i32 %104, 1
  %129 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %1, i64 0, i32 0, i32 0, i32 0
  store i64* %95, i64** %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %1, i64 0, i32 1
  store i32 %104, i32* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %1, i64 0, i32 2
  store i32 %128, i32* %131, align 4
  %132 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %1, i64 0, i32 3
  store i32 -1, i32* %132, align 8
  %133 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %1, i64 0, i32 4, i32 0, i32 0
  store i64* %53, i64** %133, align 8
  %134 = getelementptr inbounds %"class.std::__1::vector.1300", %"class.std::__1::vector.1300"* %4, i64 0, i32 0, i32 0
  %135 = load %"class.v8::internal::FrameSummary"*, %"class.v8::internal::FrameSummary"** %134, align 8
  %136 = icmp eq %"class.v8::internal::FrameSummary"* %135, null
  br i1 %136, label %150, label %137

137:                                              ; preds = %127
  %138 = bitcast %"class.v8::internal::FrameSummary"* %135 to i8*
  %139 = load %"class.v8::internal::FrameSummary"*, %"class.v8::internal::FrameSummary"** %21, align 8
  %140 = icmp eq %"class.v8::internal::FrameSummary"* %139, %135
  br i1 %140, label %148, label %141

141:                                              ; preds = %137, %141
  %142 = phi %"class.v8::internal::FrameSummary"* [ %143, %141 ], [ %139, %137 ]
  %143 = getelementptr inbounds %"class.v8::internal::FrameSummary", %"class.v8::internal::FrameSummary"* %142, i64 -1
  call void @_ZN2v88internal12FrameSummaryD1Ev(%"class.v8::internal::FrameSummary"* %143) #8
  %144 = icmp eq %"class.v8::internal::FrameSummary"* %143, %135
  br i1 %144, label %145, label %141

145:                                              ; preds = %141
  %146 = bitcast %"class.std::__1::vector.1300"* %4 to i8**
  %147 = load i8*, i8** %146, align 8
  br label %148

148:                                              ; preds = %145, %137
  %149 = phi i8* [ %147, %145 ], [ %138, %137 ]
  store %"class.v8::internal::FrameSummary"* %135, %"class.v8::internal::FrameSummary"** %21, align 8
  call void @_ZdlPv(i8* %149) #12
  br label %150

150:                                              ; preds = %127, %148
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #8
  br label %169

151:                                              ; preds = %94, %108, %119
  %152 = getelementptr inbounds %"class.std::__1::vector.1300", %"class.std::__1::vector.1300"* %4, i64 0, i32 0, i32 0
  %153 = load %"class.v8::internal::FrameSummary"*, %"class.v8::internal::FrameSummary"** %152, align 8
  %154 = icmp eq %"class.v8::internal::FrameSummary"* %153, null
  br i1 %154, label %168, label %155

155:                                              ; preds = %151
  %156 = bitcast %"class.v8::internal::FrameSummary"* %153 to i8*
  %157 = load %"class.v8::internal::FrameSummary"*, %"class.v8::internal::FrameSummary"** %21, align 8
  %158 = icmp eq %"class.v8::internal::FrameSummary"* %157, %153
  br i1 %158, label %166, label %159

159:                                              ; preds = %155, %159
  %160 = phi %"class.v8::internal::FrameSummary"* [ %161, %159 ], [ %157, %155 ]
  %161 = getelementptr inbounds %"class.v8::internal::FrameSummary", %"class.v8::internal::FrameSummary"* %160, i64 -1
  call void @_ZN2v88internal12FrameSummaryD1Ev(%"class.v8::internal::FrameSummary"* %161) #8
  %162 = icmp eq %"class.v8::internal::FrameSummary"* %161, %153
  br i1 %162, label %163, label %159

163:                                              ; preds = %159
  %164 = bitcast %"class.std::__1::vector.1300"* %4 to i8**
  %165 = load i8*, i8** %164, align 8
  br label %166

166:                                              ; preds = %163, %155
  %167 = phi i8* [ %165, %163 ], [ %156, %155 ]
  store %"class.v8::internal::FrameSummary"* %153, %"class.v8::internal::FrameSummary"** %21, align 8
  call void @_ZdlPv(i8* %167) #12
  br label %168

168:                                              ; preds = %151, %166
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #8
  br label %169

169:                                              ; preds = %2, %11, %168, %150
  %170 = phi i1 [ true, %150 ], [ false, %168 ], [ false, %11 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 1616, i8* nonnull %6) #8
  ret i1 %170
}

declare { i64, i32 } @_ZN2v88internal23UnoptimizedCompileFlags18ForFunctionCompileEPNS0_7IsolateENS0_18SharedFunctionInfoE(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #3

declare void @_ZN2v88internal23UnoptimizedCompileStateC1EPNS0_7IsolateE(%"class.v8::internal::UnoptimizedCompileState"*, %"class.v8::internal::Isolate"*) unnamed_addr #3

declare void @_ZN2v88internal9ParseInfoC1EPNS0_7IsolateENS0_23UnoptimizedCompileFlagsEPNS0_23UnoptimizedCompileStateE(%"class.v8::internal::ParseInfo"*, %"class.v8::internal::Isolate"*, i64, i32, %"class.v8::internal::UnoptimizedCompileState"*) unnamed_addr #3

declare zeroext i1 @_ZN2v88internal7parsing8ParseAnyEPNS0_9ParseInfoENS0_6HandleINS0_18SharedFunctionInfoEEEPNS0_7IsolateENS1_20ReportStatisticsModeE(%"class.v8::internal::ParseInfo"*, i64*, %"class.v8::internal::Isolate"*, i32) local_unnamed_addr #3

declare void @_ZN2v88internal15AstValueFactory11InternalizeINS0_7IsolateEEEvPT_(%"class.v8::internal::AstValueFactory"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare void @_ZN2v88internal11CallPrinterC1EPNS0_7IsolateEbNS1_21SpreadErrorInArgsHintE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::Isolate"*, i1 zeroext, i32) unnamed_addr #3

declare i64* @_ZN2v88internal11CallPrinter5PrintEPNS0_15FunctionLiteralEi(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::FunctionLiteral"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_120BuildDefaultCallSiteEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*) unnamed_addr #1 {
  %3 = alloca %"class.v8::internal::IncrementalStringBuilder", align 8
  %4 = bitcast %"class.v8::internal::IncrementalStringBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #8
  call void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3, %"class.v8::internal::Isolate"* %0) #8
  %5 = call i64* @_ZN2v88internal6Object6TypeOfEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %1) #8
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3, i64* %5) #8
  %6 = load i64, i64* %1, align 8
  %7 = and i64 %6, 1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %165, label %9

9:                                                ; preds = %2
  %10 = and i64 %6, -4294967296
  %11 = add i64 %6, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %10, %14
  %16 = add i64 %15, 7
  %17 = inttoptr i64 %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = icmp ult i16 %18, 64
  br i1 %19, label %20, label %165

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %3, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %3, i64 0, i32 6, i32 0, i32 0
  %25 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %3, i64 0, i32 4
  %26 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %3, i64 0, i32 3
  %27 = load i64*, i64** %24, align 8
  %28 = load i64, i64* %27, align 8
  %29 = load i32, i32* %25, align 4
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %25, align 4
  br i1 %23, label %40, label %31

31:                                               ; preds = %20
  %32 = shl nsw i32 %29, 1
  %33 = sext i32 %32 to i64
  %34 = add i64 %28, 11
  %35 = add i64 %34, %33
  %36 = inttoptr i64 %35 to i16*
  store i16 32, i16* %36, align 2
  %37 = load i32, i32* %25, align 4
  %38 = load i32, i32* %26, align 8
  %39 = icmp eq i32 %37, %38
  br i1 %39, label %62, label %64

40:                                               ; preds = %20
  %41 = sext i32 %29 to i64
  %42 = add i64 %28, 11
  %43 = add i64 %42, %41
  %44 = inttoptr i64 %43 to i8*
  store i8 32, i8* %44, align 1
  %45 = load i32, i32* %25, align 4
  %46 = load i32, i32* %26, align 8
  %47 = icmp eq i32 %45, %46
  br i1 %47, label %48, label %50

48:                                               ; preds = %40
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #8
  %49 = load i32, i32* %25, align 4
  br label %50

50:                                               ; preds = %48, %40
  %51 = phi i32 [ %49, %48 ], [ %45, %40 ]
  %52 = load i64*, i64** %24, align 8
  %53 = load i64, i64* %52, align 8
  %54 = add nsw i32 %51, 1
  store i32 %54, i32* %25, align 4
  %55 = sext i32 %51 to i64
  %56 = add i64 %53, 11
  %57 = add i64 %56, %55
  %58 = inttoptr i64 %57 to i8*
  store i8 34, i8* %58, align 1
  %59 = load i32, i32* %25, align 4
  %60 = load i32, i32* %26, align 8
  %61 = icmp eq i32 %59, %60
  br i1 %61, label %416, label %77

62:                                               ; preds = %31
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #8
  %63 = load i32, i32* %25, align 4
  br label %64

64:                                               ; preds = %62, %31
  %65 = phi i32 [ %63, %62 ], [ %37, %31 ]
  %66 = load i64*, i64** %24, align 8
  %67 = load i64, i64* %66, align 8
  %68 = add nsw i32 %65, 1
  store i32 %68, i32* %25, align 4
  %69 = shl nsw i32 %65, 1
  %70 = sext i32 %69 to i64
  %71 = add i64 %67, 11
  %72 = add i64 %71, %70
  %73 = inttoptr i64 %72 to i16*
  store i16 34, i16* %73, align 2
  %74 = load i32, i32* %25, align 4
  %75 = load i32, i32* %26, align 8
  %76 = icmp eq i32 %74, %75
  br i1 %76, label %417, label %77

77:                                               ; preds = %64, %417, %50, %416
  %78 = load i64, i64* %1, align 8
  %79 = add i64 %78, 7
  %80 = inttoptr i64 %79 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = icmp slt i32 %81, 101
  br i1 %82, label %83, label %84

83:                                               ; preds = %77
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3, i64* %1) #8
  br label %139

84:                                               ; preds = %77
  %85 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %86 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %85, i64* %1, i32 0, i32 100) #8
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3, i64* %86) #8
  %87 = load i32, i32* %21, align 8
  %88 = icmp eq i32 %87, 0
  %89 = load i64*, i64** %24, align 8
  %90 = load i64, i64* %89, align 8
  %91 = load i32, i32* %25, align 4
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* %25, align 4
  br i1 %88, label %102, label %93

93:                                               ; preds = %84
  %94 = shl nsw i32 %91, 1
  %95 = sext i32 %94 to i64
  %96 = add i64 %90, 11
  %97 = add i64 %96, %95
  %98 = inttoptr i64 %97 to i16*
  store i16 60, i16* %98, align 2
  %99 = load i32, i32* %25, align 4
  %100 = load i32, i32* %26, align 8
  %101 = icmp eq i32 %99, %100
  br i1 %101, label %124, label %126

102:                                              ; preds = %84
  %103 = sext i32 %91 to i64
  %104 = add i64 %90, 11
  %105 = add i64 %104, %103
  %106 = inttoptr i64 %105 to i8*
  store i8 60, i8* %106, align 1
  %107 = load i32, i32* %25, align 4
  %108 = load i32, i32* %26, align 8
  %109 = icmp eq i32 %107, %108
  br i1 %109, label %110, label %112

110:                                              ; preds = %102
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #8
  %111 = load i32, i32* %25, align 4
  br label %112

112:                                              ; preds = %110, %102
  %113 = phi i32 [ %111, %110 ], [ %107, %102 ]
  %114 = load i64*, i64** %24, align 8
  %115 = load i64, i64* %114, align 8
  %116 = add nsw i32 %113, 1
  store i32 %116, i32* %25, align 4
  %117 = sext i32 %113 to i64
  %118 = add i64 %115, 11
  %119 = add i64 %118, %117
  %120 = inttoptr i64 %119 to i8*
  store i8 46, i8* %120, align 1
  %121 = load i32, i32* %25, align 4
  %122 = load i32, i32* %26, align 8
  %123 = icmp eq i32 %121, %122
  br i1 %123, label %327, label %329

124:                                              ; preds = %93
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #8
  %125 = load i32, i32* %25, align 4
  br label %126

126:                                              ; preds = %124, %93
  %127 = phi i32 [ %125, %124 ], [ %99, %93 ]
  %128 = load i64*, i64** %24, align 8
  %129 = load i64, i64* %128, align 8
  %130 = add nsw i32 %127, 1
  store i32 %130, i32* %25, align 4
  %131 = shl nsw i32 %127, 1
  %132 = sext i32 %131 to i64
  %133 = add i64 %129, 11
  %134 = add i64 %133, %132
  %135 = inttoptr i64 %134 to i16*
  store i16 46, i16* %135, align 2
  %136 = load i32, i32* %25, align 4
  %137 = load i32, i32* %26, align 8
  %138 = icmp eq i32 %136, %137
  br i1 %138, label %370, label %372

139:                                              ; preds = %402, %415, %357, %369, %83
  %140 = load i32, i32* %21, align 8
  %141 = icmp eq i32 %140, 0
  %142 = load i64*, i64** %24, align 8
  %143 = load i64, i64* %142, align 8
  %144 = load i32, i32* %25, align 4
  %145 = add nsw i32 %144, 1
  store i32 %145, i32* %25, align 4
  br i1 %141, label %155, label %146

146:                                              ; preds = %139
  %147 = shl nsw i32 %144, 1
  %148 = sext i32 %147 to i64
  %149 = add i64 %143, 11
  %150 = add i64 %149, %148
  %151 = inttoptr i64 %150 to i16*
  store i16 34, i16* %151, align 2
  %152 = load i32, i32* %25, align 4
  %153 = load i32, i32* %26, align 8
  %154 = icmp eq i32 %152, %153
  br i1 %154, label %164, label %322

155:                                              ; preds = %139
  %156 = sext i32 %144 to i64
  %157 = add i64 %143, 11
  %158 = add i64 %157, %156
  %159 = inttoptr i64 %158 to i8*
  store i8 34, i8* %159, align 1
  %160 = load i32, i32* %25, align 4
  %161 = load i32, i32* %26, align 8
  %162 = icmp eq i32 %160, %161
  br i1 %162, label %163, label %322

163:                                              ; preds = %155
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #8
  br label %322

164:                                              ; preds = %146
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #8
  br label %322

165:                                              ; preds = %2, %9
  %166 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 6
  %167 = load i64, i64* %166, align 8
  %168 = trunc i64 %6 to i32
  %169 = trunc i64 %167 to i32
  %170 = icmp eq i32 %168, %169
  br i1 %170, label %171, label %203

171:                                              ; preds = %165
  %172 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %3, i64 0, i32 1
  %173 = load i32, i32* %172, align 8
  %174 = icmp eq i32 %173, 0
  %175 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %3, i64 0, i32 6, i32 0, i32 0
  %176 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %3, i64 0, i32 4
  %177 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %3, i64 0, i32 3
  %178 = load i64*, i64** %175, align 8
  %179 = load i64, i64* %178, align 8
  %180 = load i32, i32* %176, align 4
  %181 = add nsw i32 %180, 1
  store i32 %181, i32* %176, align 4
  br i1 %174, label %191, label %182

182:                                              ; preds = %171
  %183 = shl nsw i32 %180, 1
  %184 = sext i32 %183 to i64
  %185 = add i64 %179, 11
  %186 = add i64 %185, %184
  %187 = inttoptr i64 %186 to i16*
  store i16 32, i16* %187, align 2
  %188 = load i32, i32* %176, align 4
  %189 = load i32, i32* %177, align 8
  %190 = icmp eq i32 %188, %189
  br i1 %190, label %200, label %201

191:                                              ; preds = %171
  %192 = sext i32 %180 to i64
  %193 = add i64 %179, 11
  %194 = add i64 %193, %192
  %195 = inttoptr i64 %194 to i8*
  store i8 32, i8* %195, align 1
  %196 = load i32, i32* %176, align 4
  %197 = load i32, i32* %177, align 8
  %198 = icmp eq i32 %196, %197
  br i1 %198, label %199, label %201

199:                                              ; preds = %191
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #8
  br label %201

200:                                              ; preds = %182
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #8
  br label %201

201:                                              ; preds = %182, %200, %191, %199
  %202 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 389
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3, i64* %202) #8
  br label %322

203:                                              ; preds = %165
  %204 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 7
  %205 = load i64, i64* %204, align 8
  %206 = trunc i64 %205 to i32
  %207 = icmp eq i32 %168, %206
  br i1 %207, label %208, label %240

208:                                              ; preds = %203
  %209 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %3, i64 0, i32 1
  %210 = load i32, i32* %209, align 8
  %211 = icmp eq i32 %210, 0
  %212 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %3, i64 0, i32 6, i32 0, i32 0
  %213 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %3, i64 0, i32 4
  %214 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %3, i64 0, i32 3
  %215 = load i64*, i64** %212, align 8
  %216 = load i64, i64* %215, align 8
  %217 = load i32, i32* %213, align 4
  %218 = add nsw i32 %217, 1
  store i32 %218, i32* %213, align 4
  br i1 %211, label %228, label %219

219:                                              ; preds = %208
  %220 = shl nsw i32 %217, 1
  %221 = sext i32 %220 to i64
  %222 = add i64 %216, 11
  %223 = add i64 %222, %221
  %224 = inttoptr i64 %223 to i16*
  store i16 32, i16* %224, align 2
  %225 = load i32, i32* %213, align 4
  %226 = load i32, i32* %214, align 8
  %227 = icmp eq i32 %225, %226
  br i1 %227, label %237, label %238

228:                                              ; preds = %208
  %229 = sext i32 %217 to i64
  %230 = add i64 %216, 11
  %231 = add i64 %230, %229
  %232 = inttoptr i64 %231 to i8*
  store i8 32, i8* %232, align 1
  %233 = load i32, i32* %213, align 4
  %234 = load i32, i32* %214, align 8
  %235 = icmp eq i32 %233, %234
  br i1 %235, label %236, label %238

236:                                              ; preds = %228
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #8
  br label %238

237:                                              ; preds = %219
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #8
  br label %238

238:                                              ; preds = %219, %237, %228, %236
  %239 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 454
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3, i64* %239) #8
  br label %322

240:                                              ; preds = %203
  %241 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 8
  %242 = load i64, i64* %241, align 8
  %243 = trunc i64 %242 to i32
  %244 = icmp eq i32 %168, %243
  br i1 %244, label %245, label %277

245:                                              ; preds = %240
  %246 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %3, i64 0, i32 1
  %247 = load i32, i32* %246, align 8
  %248 = icmp eq i32 %247, 0
  %249 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %3, i64 0, i32 6, i32 0, i32 0
  %250 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %3, i64 0, i32 4
  %251 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %3, i64 0, i32 3
  %252 = load i64*, i64** %249, align 8
  %253 = load i64, i64* %252, align 8
  %254 = load i32, i32* %250, align 4
  %255 = add nsw i32 %254, 1
  store i32 %255, i32* %250, align 4
  br i1 %248, label %265, label %256

256:                                              ; preds = %245
  %257 = shl nsw i32 %254, 1
  %258 = sext i32 %257 to i64
  %259 = add i64 %253, 11
  %260 = add i64 %259, %258
  %261 = inttoptr i64 %260 to i16*
  store i16 32, i16* %261, align 2
  %262 = load i32, i32* %250, align 4
  %263 = load i32, i32* %251, align 8
  %264 = icmp eq i32 %262, %263
  br i1 %264, label %274, label %275

265:                                              ; preds = %245
  %266 = sext i32 %254 to i64
  %267 = add i64 %253, 11
  %268 = add i64 %267, %266
  %269 = inttoptr i64 %268 to i8*
  store i8 32, i8* %269, align 1
  %270 = load i32, i32* %250, align 4
  %271 = load i32, i32* %251, align 8
  %272 = icmp eq i32 %270, %271
  br i1 %272, label %273, label %275

273:                                              ; preds = %265
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #8
  br label %275

274:                                              ; preds = %256
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #8
  br label %275

275:                                              ; preds = %256, %274, %265, %273
  %276 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 326
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3, i64* %276) #8
  br label %322

277:                                              ; preds = %240
  br i1 %8, label %289, label %278

278:                                              ; preds = %277
  %279 = and i64 %6, -4294967296
  %280 = add i64 %6, -1
  %281 = inttoptr i64 %280 to i32*
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = zext i32 %282 to i64
  %284 = or i64 %279, %283
  %285 = add i64 %284, 7
  %286 = inttoptr i64 %285 to i16*
  %287 = load atomic i16, i16* %286 monotonic, align 2
  %288 = icmp eq i16 %287, 66
  br i1 %288, label %289, label %322

289:                                              ; preds = %277, %278
  %290 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %3, i64 0, i32 1
  %291 = load i32, i32* %290, align 8
  %292 = icmp eq i32 %291, 0
  %293 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %3, i64 0, i32 6, i32 0, i32 0
  %294 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %3, i64 0, i32 4
  %295 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %3, i64 0, i32 3
  %296 = load i64*, i64** %293, align 8
  %297 = load i64, i64* %296, align 8
  %298 = load i32, i32* %294, align 4
  %299 = add nsw i32 %298, 1
  store i32 %299, i32* %294, align 4
  br i1 %292, label %309, label %300

300:                                              ; preds = %289
  %301 = shl nsw i32 %298, 1
  %302 = sext i32 %301 to i64
  %303 = add i64 %297, 11
  %304 = add i64 %303, %302
  %305 = inttoptr i64 %304 to i16*
  store i16 32, i16* %305, align 2
  %306 = load i32, i32* %294, align 4
  %307 = load i32, i32* %295, align 8
  %308 = icmp eq i32 %306, %307
  br i1 %308, label %318, label %319

309:                                              ; preds = %289
  %310 = sext i32 %298 to i64
  %311 = add i64 %297, 11
  %312 = add i64 %311, %310
  %313 = inttoptr i64 %312 to i8*
  store i8 32, i8* %313, align 1
  %314 = load i32, i32* %294, align 4
  %315 = load i32, i32* %295, align 8
  %316 = icmp eq i32 %314, %315
  br i1 %316, label %317, label %319

317:                                              ; preds = %309
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #8
  br label %319

318:                                              ; preds = %300
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #8
  br label %319

319:                                              ; preds = %300, %318, %309, %317
  %320 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %321 = call i64* @_ZN2v88internal7Factory14NumberToStringENS0_6HandleINS0_6ObjectEEENS0_15NumberCacheModeE(%"class.v8::internal::Factory"* %320, i64* %1, i32 2) #8
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3, i64* %321) #8
  br label %322

322:                                              ; preds = %146, %164, %155, %163, %201, %275, %319, %278, %238
  %323 = call i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #8
  %324 = icmp eq i64* %323, null
  br i1 %324, label %325, label %326, !prof !2

325:                                              ; preds = %322
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.416, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.417, i64 0, i64 0)) #13
  unreachable

326:                                              ; preds = %322
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #8
  ret i64* %323

327:                                              ; preds = %112
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #8
  %328 = load i32, i32* %25, align 4
  br label %329

329:                                              ; preds = %327, %112
  %330 = phi i32 [ %328, %327 ], [ %121, %112 ]
  %331 = load i64*, i64** %24, align 8
  %332 = load i64, i64* %331, align 8
  %333 = add nsw i32 %330, 1
  store i32 %333, i32* %25, align 4
  %334 = sext i32 %330 to i64
  %335 = add i64 %332, 11
  %336 = add i64 %335, %334
  %337 = inttoptr i64 %336 to i8*
  store i8 46, i8* %337, align 1
  %338 = load i32, i32* %25, align 4
  %339 = load i32, i32* %26, align 8
  %340 = icmp eq i32 %338, %339
  br i1 %340, label %341, label %343

341:                                              ; preds = %329
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #8
  %342 = load i32, i32* %25, align 4
  br label %343

343:                                              ; preds = %341, %329
  %344 = phi i32 [ %342, %341 ], [ %338, %329 ]
  %345 = load i64*, i64** %24, align 8
  %346 = load i64, i64* %345, align 8
  %347 = add nsw i32 %344, 1
  store i32 %347, i32* %25, align 4
  %348 = sext i32 %344 to i64
  %349 = add i64 %346, 11
  %350 = add i64 %349, %348
  %351 = inttoptr i64 %350 to i8*
  store i8 46, i8* %351, align 1
  %352 = load i32, i32* %25, align 4
  %353 = load i32, i32* %26, align 8
  %354 = icmp eq i32 %352, %353
  br i1 %354, label %355, label %357

355:                                              ; preds = %343
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #8
  %356 = load i32, i32* %25, align 4
  br label %357

357:                                              ; preds = %355, %343
  %358 = phi i32 [ %356, %355 ], [ %352, %343 ]
  %359 = load i64*, i64** %24, align 8
  %360 = load i64, i64* %359, align 8
  %361 = add nsw i32 %358, 1
  store i32 %361, i32* %25, align 4
  %362 = sext i32 %358 to i64
  %363 = add i64 %360, 11
  %364 = add i64 %363, %362
  %365 = inttoptr i64 %364 to i8*
  store i8 62, i8* %365, align 1
  %366 = load i32, i32* %25, align 4
  %367 = load i32, i32* %26, align 8
  %368 = icmp eq i32 %366, %367
  br i1 %368, label %369, label %139

369:                                              ; preds = %357
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #8
  br label %139

370:                                              ; preds = %126
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #8
  %371 = load i32, i32* %25, align 4
  br label %372

372:                                              ; preds = %370, %126
  %373 = phi i32 [ %371, %370 ], [ %136, %126 ]
  %374 = load i64*, i64** %24, align 8
  %375 = load i64, i64* %374, align 8
  %376 = add nsw i32 %373, 1
  store i32 %376, i32* %25, align 4
  %377 = shl nsw i32 %373, 1
  %378 = sext i32 %377 to i64
  %379 = add i64 %375, 11
  %380 = add i64 %379, %378
  %381 = inttoptr i64 %380 to i16*
  store i16 46, i16* %381, align 2
  %382 = load i32, i32* %25, align 4
  %383 = load i32, i32* %26, align 8
  %384 = icmp eq i32 %382, %383
  br i1 %384, label %385, label %387

385:                                              ; preds = %372
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #8
  %386 = load i32, i32* %25, align 4
  br label %387

387:                                              ; preds = %385, %372
  %388 = phi i32 [ %386, %385 ], [ %382, %372 ]
  %389 = load i64*, i64** %24, align 8
  %390 = load i64, i64* %389, align 8
  %391 = add nsw i32 %388, 1
  store i32 %391, i32* %25, align 4
  %392 = shl nsw i32 %388, 1
  %393 = sext i32 %392 to i64
  %394 = add i64 %390, 11
  %395 = add i64 %394, %393
  %396 = inttoptr i64 %395 to i16*
  store i16 46, i16* %396, align 2
  %397 = load i32, i32* %25, align 4
  %398 = load i32, i32* %26, align 8
  %399 = icmp eq i32 %397, %398
  br i1 %399, label %400, label %402

400:                                              ; preds = %387
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #8
  %401 = load i32, i32* %25, align 4
  br label %402

402:                                              ; preds = %400, %387
  %403 = phi i32 [ %401, %400 ], [ %397, %387 ]
  %404 = load i64*, i64** %24, align 8
  %405 = load i64, i64* %404, align 8
  %406 = add nsw i32 %403, 1
  store i32 %406, i32* %25, align 4
  %407 = shl nsw i32 %403, 1
  %408 = sext i32 %407 to i64
  %409 = add i64 %405, 11
  %410 = add i64 %409, %408
  %411 = inttoptr i64 %410 to i16*
  store i16 62, i16* %411, align 2
  %412 = load i32, i32* %25, align 4
  %413 = load i32, i32* %26, align 8
  %414 = icmp eq i32 %412, %413
  br i1 %414, label %415, label %139

415:                                              ; preds = %402
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #8
  br label %139

416:                                              ; preds = %50
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #8
  br label %77

417:                                              ; preds = %64
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #8
  br label %77
}

; Function Attrs: nounwind
declare void @_ZN2v88internal11CallPrinterD1Ev(%"class.v8::internal::CallPrinter"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2v88internal9ParseInfoD1Ev(%"class.v8::internal::ParseInfo"*) unnamed_addr #4

declare i64 @_ZN2v88internal7Isolate7ThrowAtENS0_6HandleINS0_8JSObjectEEEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::MessageLocation"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10ErrorUtils25NewCalledNonCallableErrorEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.v8::internal::MessageLocation", align 8
  %4 = alloca i32, align 4
  %5 = bitcast %"class.v8::internal::MessageLocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %3, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %3, i64 0, i32 1
  store i32 -1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %3, i64 0, i32 2
  store i32 -1, i32* %8, align 4
  %9 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %3, i64 0, i32 3
  store i32 -1, i32* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %3, i64 0, i32 4, i32 0, i32 0
  store i64* null, i64** %10, align 8
  %11 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #8
  store i32 0, i32* %4, align 4
  %12 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_114RenderCallSiteEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEPNS0_15MessageLocationEPNS0_11CallPrinter9ErrorHintE(%"class.v8::internal::Isolate"* %0, i64* %1, %"class.v8::internal::MessageLocation"* nonnull %3, i32* nonnull %4)
  %13 = load i32, i32* %4, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZN2v88internal10ErrorUtils25NewCalledNonCallableErrorEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE, i64 0, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %18 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %17, i32 %16, i64* %12, i64* null, i64* null) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #8
  ret i64* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10ErrorUtils30NewConstructedNonConstructableEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.v8::internal::MessageLocation", align 8
  %4 = alloca i32, align 4
  %5 = bitcast %"class.v8::internal::MessageLocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %3, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %3, i64 0, i32 1
  store i32 -1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %3, i64 0, i32 2
  store i32 -1, i32* %8, align 4
  %9 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %3, i64 0, i32 3
  store i32 -1, i32* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %3, i64 0, i32 4, i32 0, i32 0
  store i64* null, i64** %10, align 8
  %11 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #8
  store i32 0, i32* %4, align 4
  %12 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_114RenderCallSiteEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEPNS0_15MessageLocationEPNS0_11CallPrinter9ErrorHintE(%"class.v8::internal::Isolate"* %0, i64* %1, %"class.v8::internal::MessageLocation"* nonnull %3, i32* nonnull %4)
  %13 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %14 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %13, i32 95, i64* %12, i64* null, i64* null) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #8
  ret i64* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal10ErrorUtils28ThrowLoadFromNullOrUndefinedEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS0_11MaybeHandleIS5_EE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.v8::internal::Script", align 8
  %5 = alloca %"class.v8::internal::MessageLocation", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.v8::internal::MessageLocation", align 8
  %8 = alloca %"class.v8::internal::UnoptimizedCompileState", align 8
  %9 = alloca %"class.v8::internal::ParseInfo", align 8
  %10 = alloca %"class.v8::internal::CallPrinter", align 8
  %11 = icmp eq i64* %2, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = load i64, i64* %2, align 8
  %14 = and i64 %13, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = ptrtoint i64* %2 to i64
  %18 = and i64 %13, -4294967296
  %19 = add i64 %13, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %18, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = icmp ult i16 %26, 64
  %28 = select i1 %27, i64 %17, i64 0
  br label %29

29:                                               ; preds = %16, %12, %3
  %30 = phi i64 [ 0, %3 ], [ 0, %12 ], [ %28, %16 ]
  %31 = bitcast %"class.v8::internal::MessageLocation"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %7, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %7, i64 0, i32 1
  store i32 -1, i32* %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %7, i64 0, i32 2
  store i32 -1, i32* %34, align 4
  %35 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %7, i64 0, i32 3
  store i32 -1, i32* %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %7, i64 0, i32 4, i32 0, i32 0
  store i64* null, i64** %36, align 8
  %37 = call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_115ComputeLocationEPNS0_7IsolateEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::MessageLocation"* nonnull %7)
  br i1 %37, label %40, label %38

38:                                               ; preds = %29
  %39 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_120BuildDefaultCallSiteEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %1)
  br label %217

40:                                               ; preds = %29
  %41 = load i64*, i64** %36, align 8
  %42 = load i64, i64* %41, align 8
  %43 = tail call { i64, i32 } @_ZN2v88internal23UnoptimizedCompileFlags18ForFunctionCompileEPNS0_7IsolateENS0_18SharedFunctionInfoE(%"class.v8::internal::Isolate"* %0, i64 %42) #8
  %44 = extractvalue { i64, i32 } %43, 0
  %45 = extractvalue { i64, i32 } %43, 1
  %46 = bitcast %"class.v8::internal::UnoptimizedCompileState"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %46) #8
  call void @_ZN2v88internal23UnoptimizedCompileStateC1EPNS0_7IsolateE(%"class.v8::internal::UnoptimizedCompileState"* nonnull %8, %"class.v8::internal::Isolate"* %0) #8
  %47 = bitcast %"class.v8::internal::ParseInfo"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %47) #8
  call void @_ZN2v88internal9ParseInfoC1EPNS0_7IsolateENS0_23UnoptimizedCompileFlagsEPNS0_23UnoptimizedCompileStateE(%"class.v8::internal::ParseInfo"* nonnull %9, %"class.v8::internal::Isolate"* %0, i64 %44, i32 %45, %"class.v8::internal::UnoptimizedCompileState"* nonnull %8) #8
  %48 = load i64*, i64** %36, align 8
  %49 = call zeroext i1 @_ZN2v88internal7parsing8ParseAnyEPNS0_9ParseInfoENS0_6HandleINS0_18SharedFunctionInfoEEEPNS0_7IsolateENS1_20ReportStatisticsModeE(%"class.v8::internal::ParseInfo"* nonnull %9, i64* %48, %"class.v8::internal::Isolate"* %0, i32 1) #8
  br i1 %49, label %50, label %171

50:                                               ; preds = %40
  %51 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %9, i64 0, i32 11, i32 0, i32 0, i32 0
  %52 = load %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::AstValueFactory"** %51, align 8
  call void @_ZN2v88internal15AstValueFactory11InternalizeINS0_7IsolateEEEvPT_(%"class.v8::internal::AstValueFactory"* %52, %"class.v8::internal::Isolate"* %0) #8
  %53 = bitcast %"class.v8::internal::CallPrinter"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %53) #8
  %54 = load i64*, i64** %36, align 8
  %55 = load i64, i64* %54, align 8
  %56 = and i64 %55, -4294967296
  %57 = add i64 %55, 15
  %58 = inttoptr i64 %57 to i32*
  %59 = load atomic i32, i32* %58 acquire, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %56, %60
  %62 = add i64 %61, -1
  %63 = inttoptr i64 %62 to i32*
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = zext i32 %64 to i64
  %66 = or i64 %56, %65
  %67 = add i64 %66, 7
  %68 = inttoptr i64 %67 to i16*
  %69 = load atomic i16, i16* %68 monotonic, align 2
  %70 = icmp eq i16 %69, 100
  br i1 %70, label %71, label %77

71:                                               ; preds = %50
  %72 = add i64 %61, 11
  %73 = inttoptr i64 %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = zext i32 %74 to i64
  %76 = or i64 %56, %75
  br label %77

77:                                               ; preds = %71, %50
  %78 = phi i64 [ %76, %71 ], [ %61, %50 ]
  %79 = and i64 %78, 1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %105, label %81

81:                                               ; preds = %77
  %82 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %83 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %82, null
  br i1 %83, label %90, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %82, i64 0, i32 0, i32 1
  %86 = load i8, i8* %85, align 8, !range !4
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %82, i64 0, i32 1, i64 0
  br label %98

90:                                               ; preds = %84, %81
  %91 = and i64 %78, -262144
  %92 = or i64 %91, 16
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 16
  %95 = add i64 %94, -41416
  %96 = inttoptr i64 %95 to %"class.v8::internal::Isolate"*
  %97 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %96, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %98

98:                                               ; preds = %90, %88
  %99 = phi i64* [ %97, %90 ], [ %89, %88 ]
  %100 = getelementptr inbounds i64, i64* %99, i64 4
  %101 = load i64, i64* %100, align 8
  %102 = trunc i64 %78 to i32
  %103 = trunc i64 %101 to i32
  %104 = icmp eq i32 %102, %103
  br i1 %104, label %109, label %105

105:                                              ; preds = %98, %77
  %106 = bitcast %"class.v8::internal::Script"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #8
  %107 = getelementptr inbounds %"class.v8::internal::Script", %"class.v8::internal::Script"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %78, i64* %107, align 8
  %108 = call zeroext i1 @_ZNK2v88internal6Script16IsUserJavaScriptEv(%"class.v8::internal::Script"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #8
  br label %109

109:                                              ; preds = %98, %105
  %110 = phi i1 [ %108, %105 ], [ false, %98 ]
  call void @_ZN2v88internal11CallPrinterC1EPNS0_7IsolateEbNS1_21SpreadErrorInArgsHintE(%"class.v8::internal::CallPrinter"* nonnull %10, %"class.v8::internal::Isolate"* %0, i1 zeroext %110, i32 1) #8
  %111 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %9, i64 0, i32 15
  %112 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %111, align 8
  %113 = load i32, i32* %33, align 8
  %114 = call i64* @_ZN2v88internal11CallPrinter5PrintEPNS0_15FunctionLiteralEi(%"class.v8::internal::CallPrinter"* nonnull %10, %"class.v8::internal::FunctionLiteral"* %112, i32 %113) #8
  %115 = ptrtoint i64* %114 to i64
  %116 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %10, i64 0, i32 14
  %117 = load %"class.v8::internal::Assignment"*, %"class.v8::internal::Assignment"** %116, align 8
  %118 = icmp ne %"class.v8::internal::Assignment"* %117, null
  br i1 %118, label %119, label %163

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %10, i64 0, i32 13
  %121 = load %"class.v8::internal::ObjectLiteralProperty"*, %"class.v8::internal::ObjectLiteralProperty"** %120, align 8
  %122 = icmp eq i64 %30, 0
  %123 = icmp ne %"class.v8::internal::ObjectLiteralProperty"* %121, null
  %124 = and i1 %122, %123
  br i1 %124, label %125, label %147

125:                                              ; preds = %119
  %126 = getelementptr inbounds %"class.v8::internal::ObjectLiteralProperty", %"class.v8::internal::ObjectLiteralProperty"* %121, i64 0, i32 0, i32 0, i32 0
  %127 = load i64, i64* %126, align 8
  %128 = and i64 %127, -2
  %129 = inttoptr i64 %128 to %"class.v8::internal::Expression"*
  %130 = call zeroext i1 @_ZNK2v88internal10Expression14IsPropertyNameEv(%"class.v8::internal::Expression"* %129) #8
  br i1 %130, label %131, label %151

131:                                              ; preds = %125
  %132 = load i64, i64* %126, align 8
  %133 = and i64 %132, -2
  %134 = inttoptr i64 %133 to %"class.v8::internal::Expression"*
  %135 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %134, i64 0, i32 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = and i32 %136, 63
  %138 = icmp eq i32 %137, 41
  %139 = inttoptr i64 %133 to %"class.v8::internal::Literal"*
  %140 = select i1 %138, %"class.v8::internal::Literal"* %139, %"class.v8::internal::Literal"* null
  %141 = getelementptr inbounds %"class.v8::internal::Literal", %"class.v8::internal::Literal"* %140, i64 0, i32 1, i32 0
  %142 = bitcast %"class.v8::internal::AstRawString"** %141 to i64**
  %143 = load i64*, i64** %142, align 8
  %144 = load i64, i64* %143, align 8
  %145 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %134, i64 0, i32 0, i32 0
  %146 = load i32, i32* %145, align 4
  br label %147

147:                                              ; preds = %131, %119
  %148 = phi i64 [ %144, %131 ], [ %30, %119 ]
  %149 = phi i32 [ %146, %131 ], [ -1, %119 ]
  %150 = icmp eq i64 %148, 0
  br i1 %150, label %151, label %157

151:                                              ; preds = %125, %147
  %152 = load %"class.v8::internal::Assignment"*, %"class.v8::internal::Assignment"** %116, align 8
  %153 = getelementptr inbounds %"class.v8::internal::Assignment", %"class.v8::internal::Assignment"* %152, i64 0, i32 2
  %154 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %153, align 8
  %155 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %154, i64 0, i32 0, i32 0
  %156 = load i32, i32* %155, align 4
  br label %157

157:                                              ; preds = %151, %147
  %158 = phi i64 [ 0, %151 ], [ %148, %147 ]
  %159 = phi i32 [ %156, %151 ], [ %149, %147 ]
  %160 = icmp eq i32 %159, -1
  br i1 %160, label %163, label %161

161:                                              ; preds = %157
  %162 = add nuw nsw i32 %159, 1
  store i32 %159, i32* %33, align 8
  store i32 %162, i32* %34, align 4
  store i32 -1, i32* %35, align 8
  br label %163

163:                                              ; preds = %161, %157, %109
  %164 = phi i64 [ %158, %157 ], [ %158, %161 ], [ %30, %109 ]
  %165 = load i64, i64* %114, align 8
  %166 = add i64 %165, 7
  %167 = inttoptr i64 %166 to i32*
  %168 = load i32, i32* %167, align 4
  %169 = icmp sgt i32 %168, 0
  %170 = select i1 %169, i64 %115, i64 0
  call void @_ZN2v88internal11CallPrinterD1Ev(%"class.v8::internal::CallPrinter"* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %53) #8
  br label %171

171:                                              ; preds = %163, %40
  %172 = phi i64 [ %170, %163 ], [ 0, %40 ]
  %173 = phi i64 [ %164, %163 ], [ %30, %40 ]
  %174 = phi i1 [ %118, %163 ], [ false, %40 ]
  call void @_ZN2v88internal9ParseInfoD1Ev(%"class.v8::internal::ParseInfo"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %47) #8
  %175 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %8, i64 0, i32 5, i32 0, i32 0, i32 0
  %176 = load %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"*, %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"** %175, align 8
  store %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* null, %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"** %175, align 8
  %177 = icmp eq %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* %176, null
  br i1 %177, label %190, label %178

178:                                              ; preds = %171
  %179 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState::ParallelTasks", %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* %176, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load %"struct.std::__1::__forward_list_node.1229"*, %"struct.std::__1::__forward_list_node.1229"** %179, align 8
  %181 = icmp eq %"struct.std::__1::__forward_list_node.1229"* %180, null
  br i1 %181, label %188, label %182

182:                                              ; preds = %178, %182
  %183 = phi %"struct.std::__1::__forward_list_node.1229"* [ %186, %182 ], [ %180, %178 ]
  %184 = bitcast %"struct.std::__1::__forward_list_node.1229"* %183 to i8*
  %185 = getelementptr inbounds %"struct.std::__1::__forward_list_node.1229", %"struct.std::__1::__forward_list_node.1229"* %183, i64 0, i32 0, i32 0
  %186 = load %"struct.std::__1::__forward_list_node.1229"*, %"struct.std::__1::__forward_list_node.1229"** %185, align 8
  call void @_ZdlPv(i8* %184) #12
  %187 = icmp eq %"struct.std::__1::__forward_list_node.1229"* %186, null
  br i1 %187, label %188, label %182

188:                                              ; preds = %182, %178
  %189 = bitcast %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* %176 to i8*
  call void @_ZdlPv(i8* %189) #12
  br label %190

190:                                              ; preds = %188, %171
  %191 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %8, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %191, align 8
  %193 = icmp eq %"struct.std::__1::__forward_list_node"* %192, null
  br i1 %193, label %200, label %194

194:                                              ; preds = %190, %194
  %195 = phi %"struct.std::__1::__forward_list_node"* [ %198, %194 ], [ %192, %190 ]
  %196 = bitcast %"struct.std::__1::__forward_list_node"* %195 to i8*
  %197 = getelementptr inbounds %"struct.std::__1::__forward_list_node", %"struct.std::__1::__forward_list_node"* %195, i64 0, i32 0, i32 0
  %198 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %197, align 8
  call void @_ZdlPv(i8* %196) #12
  %199 = icmp eq %"struct.std::__1::__forward_list_node"* %198, null
  br i1 %199, label %200, label %194

200:                                              ; preds = %194, %190
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %46) #8
  %201 = icmp eq i64 %172, 0
  br i1 %201, label %202, label %205

202:                                              ; preds = %200
  %203 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_120BuildDefaultCallSiteEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %1)
  %204 = ptrtoint i64* %203 to i64
  br i1 %174, label %206, label %217

205:                                              ; preds = %200
  br i1 %174, label %206, label %217

206:                                              ; preds = %202, %205
  %207 = phi i64 [ %204, %202 ], [ %172, %205 ]
  %208 = icmp eq i64 %173, 0
  %209 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  br i1 %208, label %214, label %210

210:                                              ; preds = %206
  %211 = inttoptr i64 %173 to i64*
  %212 = inttoptr i64 %207 to i64*
  %213 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %209, i32 84, i64* %211, i64* %212, i64* %1) #8
  br label %253

214:                                              ; preds = %206
  %215 = inttoptr i64 %207 to i64*
  %216 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %209, i32 83, i64* %215, i64* %1, i64* null) #8
  br label %253

217:                                              ; preds = %38, %202, %205
  %218 = phi i1 [ true, %202 ], [ true, %205 ], [ false, %38 ]
  %219 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %220 = select i1 %11, i64* %219, i64* %2
  %221 = load i64, i64* %220, align 8
  %222 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 510
  %223 = load i64, i64* %222, align 8
  %224 = trunc i64 %221 to i32
  %225 = trunc i64 %223 to i32
  %226 = icmp eq i32 %224, %225
  br i1 %226, label %227, label %248

227:                                              ; preds = %217
  %228 = bitcast %"class.v8::internal::MessageLocation"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %228) #8
  %229 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %5, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %229, align 8
  %230 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %5, i64 0, i32 1
  store i32 -1, i32* %230, align 8
  %231 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %5, i64 0, i32 2
  store i32 -1, i32* %231, align 4
  %232 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %5, i64 0, i32 3
  store i32 -1, i32* %232, align 8
  %233 = getelementptr inbounds %"class.v8::internal::MessageLocation", %"class.v8::internal::MessageLocation"* %5, i64 0, i32 4, i32 0, i32 0
  store i64* null, i64** %233, align 8
  %234 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %234) #8
  store i32 0, i32* %6, align 4
  %235 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_114RenderCallSiteEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEPNS0_15MessageLocationEPNS0_11CallPrinter9ErrorHintE(%"class.v8::internal::Isolate"* %0, i64* %1, %"class.v8::internal::MessageLocation"* nonnull %5, i32* nonnull %6) #8
  %236 = load i32, i32* %6, align 4
  switch i32 %236, label %243 [
    i32 0, label %237
    i32 1, label %244
    i32 3, label %240
    i32 2, label %241
    i32 4, label %242
  ]

237:                                              ; preds = %227
  %238 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %239 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %238, i32 102, i64* %235, i64* %222, i64* null) #8
  br label %251

240:                                              ; preds = %227
  br label %244

241:                                              ; preds = %227
  br label %244

242:                                              ; preds = %227
  br label %244

243:                                              ; preds = %227
  unreachable

244:                                              ; preds = %242, %241, %240, %227
  %245 = phi i32 [ 99, %242 ], [ 103, %241 ], [ 98, %240 ], [ 101, %227 ]
  %246 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %247 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %246, i32 %245, i64* %235, i64* null, i64* null) #8
  br label %251

248:                                              ; preds = %217
  %249 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %250 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %249, i32 88, i64* %220, i64* %1, i64* null) #8
  br i1 %218, label %253, label %256

251:                                              ; preds = %244, %237
  %252 = phi i64* [ %239, %237 ], [ %247, %244 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %234) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %228) #8
  br i1 %218, label %253, label %256

253:                                              ; preds = %214, %210, %248, %251
  %254 = phi i64* [ %213, %210 ], [ %252, %251 ], [ %216, %214 ], [ %250, %248 ]
  %255 = call i64 @_ZN2v88internal7Isolate7ThrowAtENS0_6HandleINS0_8JSObjectEEEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64* %254, %"class.v8::internal::MessageLocation"* nonnull %7) #8
  br label %260

256:                                              ; preds = %248, %251
  %257 = phi i64* [ %252, %251 ], [ %250, %248 ]
  %258 = load i64, i64* %257, align 8
  %259 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %258, %"class.v8::internal::MessageLocation"* null) #8
  br label %260

260:                                              ; preds = %256, %253
  %261 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 32
  %262 = load i64, i64* %261, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #8
  ret i64 %262
}

declare zeroext i1 @_ZNK2v88internal10Expression14IsPropertyNameEv(%"class.v8::internal::Expression"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.assume(i1) #8

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory20NewStringFromOneByteERKNS0_6VectorIKhEENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, %"class.v8::internal::Vector.1009"* dereferenceable(16), i8 zeroext) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #3

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #3

declare void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*, i32) local_unnamed_addr #3

declare void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #3

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i64*, i8 zeroext, i32, i8 zeroext) local_unnamed_addr #3

declare void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"*, %"class.v8::internal::Vector.1009"* dereferenceable(16), i1 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal6String11SlowFlattenEPNS0_7IsolateENS0_6HandleINS0_10ConsStringEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"*, %"class.v8::internal::Vector.1209"* dereferenceable(16)) local_unnamed_addr #3

declare i16 @_ZN2v88internal10JSReceiver11HasPropertyEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"*, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64*, i32) unnamed_addr #5 comdat align 2 {
  %8 = ptrtoint i64* %5 to i64
  %9 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 0
  %10 = icmp eq i64* %3, null
  br i1 %10, label %32, label %11

11:                                               ; preds = %7
  %12 = load i64, i64* %3, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %12, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i64 %14, 4294967295
  %19 = icmp eq i64 %18, 0
  tail call void @llvm.assume(i1 %19) #8
  %20 = zext i32 %17 to i64
  %21 = or i64 %14, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = icmp eq i16 %24, 64
  br i1 %25, label %26, label %32

26:                                               ; preds = %11
  %27 = add i64 %12, 7
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %26, %11, %7
  br label %33

33:                                               ; preds = %26, %32
  %34 = phi i32 [ %6, %32 ], [ 0, %26 ]
  store i32 %34, i32* %9, align 8
  %35 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 4, i32* %35, align 4
  %36 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 2
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 3
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  store i64* %3, i64** %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  store i64* %2, i64** %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 10
  %45 = bitcast %"class.v8::internal::Handle.1188"* %44 to i64*
  store i64 %8, i64* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  store i64 %4, i64* %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 -1, i64* %47, align 8
  %48 = icmp eq i64 %4, -1
  br i1 %48, label %115, label %49

49:                                               ; preds = %33
  %50 = icmp ugt i64 %4, 4294967294
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %10, label %114, label %99

53:                                               ; preds = %49
  %54 = load i64, i64* %5, align 8
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %10, label %72, label %78

59:                                               ; preds = %53
  %60 = and i64 %54, -4294967296
  %61 = add i64 %54, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %60, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = icmp eq i16 %68, 1080
  %70 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %69, label %98, label %71

71:                                               ; preds = %59
  br i1 %10, label %72, label %78

72:                                               ; preds = %57, %71
  %73 = phi %"class.v8::internal::Handle.1212"* [ %58, %57 ], [ %70, %71 ]
  %74 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::Factory"*
  %75 = tail call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %74, i64 %4, i1 zeroext true) #8
  %76 = ptrtoint i64* %75 to i64
  %77 = bitcast %"class.v8::internal::Handle.1212"* %73 to i64*
  store i64 %76, i64* %77, align 8
  br label %78

78:                                               ; preds = %57, %72, %71
  %79 = phi i64* [ %3, %57 ], [ %75, %72 ], [ %3, %71 ]
  %80 = load i64, i64* %79, align 8
  %81 = and i64 %80, -4294967296
  %82 = add i64 %80, -1
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %81, %85
  %87 = add i64 %86, 7
  %88 = inttoptr i64 %87 to i16*
  %89 = load atomic i16, i16* %88 monotonic, align 2
  %90 = and i16 %89, -32
  %91 = icmp eq i16 %90, 32
  br i1 %91, label %92, label %96

92:                                               ; preds = %78
  %93 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %94 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %93, align 8
  %95 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %94, %"class.v8::internal::Isolate"* %1, i64* %79) #8
  br label %96

96:                                               ; preds = %78, %92
  %97 = phi i64* [ %95, %92 ], [ %79, %78 ]
  store i64* %97, i64** %40, align 8
  br label %114

98:                                               ; preds = %59
  br i1 %10, label %114, label %99

99:                                               ; preds = %51, %98
  %100 = phi %"class.v8::internal::Handle.1212"* [ %52, %51 ], [ %70, %98 ]
  %101 = load i64, i64* %3, align 8
  %102 = and i64 %101, -4294967296
  %103 = add i64 %101, -1
  %104 = inttoptr i64 %103 to i32*
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = zext i32 %105 to i64
  %107 = or i64 %102, %106
  %108 = add i64 %107, 7
  %109 = inttoptr i64 %108 to i16*
  %110 = load atomic i16, i16* %109 monotonic, align 2
  %111 = icmp ult i16 %110, 32
  br i1 %111, label %114, label %112

112:                                              ; preds = %99
  %113 = bitcast %"class.v8::internal::Handle.1212"* %100 to i64*
  store i64 0, i64* %113, align 8
  br label %114

114:                                              ; preds = %98, %51, %99, %112, %96
  tail call void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"* %0) #8
  br label %134

115:                                              ; preds = %33
  %116 = load i64, i64* %3, align 8
  %117 = and i64 %116, -4294967296
  %118 = add i64 %116, -1
  %119 = inttoptr i64 %118 to i32*
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = zext i32 %120 to i64
  %122 = or i64 %117, %121
  %123 = add i64 %122, 7
  %124 = inttoptr i64 %123 to i16*
  %125 = load atomic i16, i16* %124 monotonic, align 2
  %126 = and i16 %125, -32
  %127 = icmp eq i16 %126, 32
  br i1 %127, label %128, label %132

128:                                              ; preds = %115
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %130 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %129, align 8
  %131 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %130, %"class.v8::internal::Isolate"* %1, i64* %3) #8
  br label %132

132:                                              ; preds = %115, %128
  %133 = phi i64* [ %131, %128 ], [ %3, %115 ]
  store i64* %133, i64** %40, align 8
  tail call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* %0) #8
  br label %134

134:                                              ; preds = %132, %114
  ret void
}

declare i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"*, i64, i1 zeroext) local_unnamed_addr #3

declare void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #3

declare void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"*, i1 zeroext) local_unnamed_addr #3

declare void @_ZN2v88internal13NativeContext21IncrementErrorsThrownEv(%"class.v8::internal::NativeContext"*) local_unnamed_addr #3

declare i32 @_ZNK2v88internal11CallPrinter12GetErrorHintEv(%"class.v8::internal::CallPrinter"*) local_unnamed_addr #3

declare void @_ZN2v88internal18SharedFunctionInfo30EnsureSourcePositionsAvailableEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

declare i32 @_ZN2v88internal12AbstractCode14SourcePositionEi(%"class.v8::internal::AbstractCode"*, i32) local_unnamed_addr #3

declare void @_ZN2v88internal18StackFrameIteratorC1EPNS0_7IsolateE(%"class.v8::internal::StackFrameIterator"*, %"class.v8::internal::Isolate"*) unnamed_addr #3

declare void @_ZN2v88internal23JavaScriptFrameIterator7AdvanceEv(%"class.v8::internal::JavaScriptFrameIterator"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v88internal12FrameSummaryD1Ev(%"class.v8::internal::FrameSummary"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare zeroext i1 @_ZNK2v88internal6Script16IsUserJavaScriptEv(%"class.v8::internal::Script"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal6Object6TypeOfEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"*, i64*, i32, i32) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory14NumberToStringENS0_6HandleINS0_6ObjectEEENS0_15NumberCacheModeE(%"class.v8::internal::Factory"*, i64*, i32) local_unnamed_addr #3

declare i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"*, i64, %"class.v8::internal::MessageLocation"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #10

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnamRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #11

declare %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"*, i8*) local_unnamed_addr #7

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
