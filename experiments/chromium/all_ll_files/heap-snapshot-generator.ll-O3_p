; ModuleID = '../../v8/src/profiler/heap-snapshot-generator.cc'
source_filename = "../../v8/src/profiler/heap-snapshot-generator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.anon.1470 = type { i32, i8* }
%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.578" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.173", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map.29", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.61", %"class.std::__1::vector.65", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.195", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.199", %"class.std::__1::vector.199", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.206", %"class.std::__1::unique_ptr.212", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.342", %"class.std::__1::unique_ptr.348", %"class.std::__1::unique_ptr.354", %"class.std::__1::unique_ptr.393", %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.478", %"class.std::__1::unique_ptr.484", %"class.std::__1::unique_ptr.484", %"class.std::__1::unique_ptr.490", %"class.std::__1::unique_ptr.496", %"class.std::__1::unique_ptr.496", %"class.std::__1::unique_ptr.502", %"class.std::__1::unique_ptr.508", %"class.std::__1::shared_ptr.514", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.537", %"class.std::__1::unique_ptr.563", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.569", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.585", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.364", i8, [7 x i8], %"class.std::__1::unordered_map.591", %"class.std::__1::unordered_map.617", %"class.std::__1::unordered_map.591", %"class.std::__1::unordered_map.641", %"class.std::__1::vector.669", i8, %"class.std::__1::unique_ptr.676", i32, i32 }
%"class.std::__1::unordered_map.29" = type { %"class.std::__1::__hash_table.30" }
%"class.std::__1::__hash_table.30" = type <{ %"class.std::__1::unique_ptr.31", %"class.std::__1::__compressed_pair.41", %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.49", [4 x i8] }>
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33", %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::__hash_node_base.34"** }
%"struct.std::__1::__hash_node_base.34" = type { %"struct.std::__1::__hash_node_base.34"* }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.std::__1::__bucket_list_deallocator.36" }
%"class.std::__1::__bucket_list_deallocator.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i64 }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.std::__1::__hash_node_base.34" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.56", %"struct.std::__1::atomic.56", %"struct.std::__1::atomic.56" }
%"struct.std::__1::atomic.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__cxx_atomic_impl.59" }
%"struct.std::__1::__cxx_atomic_impl.59" = type { %"struct.std::__1::__cxx_atomic_base_impl.60" }
%"struct.std::__1::__cxx_atomic_base_impl.60" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.857", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.863", %"class.std::__1::unique_ptr.884", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.894", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.1016", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.1029", void (i32, %"class.v8::SharedArrayBuffer"*, i64, i64, double, %"class.v8::Isolate::AtomicsWaitWakeHandle"*, i8*)*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.1039", void (%"class.v8::Context"*, %"class.v8::Module"*, %"class.v8::Object"*)*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.1051", %"struct.std::__1::atomic.186", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.1085", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.1131"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1143", i32, i8, i8, i32, i32, %"class.std::__1::vector.1149", %"class.std::__1::vector.1149", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1156", i64, %"class.std::__1::unordered_map.1157", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.578", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.194", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1209", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1223", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, %"class.v8::Value"* (%"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Array"*)*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1257", %"class.std::__1::vector.1261", %"class.std::__1::vector.1261", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.851", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.851" = type { %"struct.std::__1::__atomic_base.852" }
%"struct.std::__1::__atomic_base.852" = type { %"struct.std::__1::__cxx_atomic_impl.853" }
%"struct.std::__1::__cxx_atomic_impl.853" = type { %"struct.std::__1::__cxx_atomic_base_impl.854" }
%"struct.std::__1::__cxx_atomic_base_impl.854" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.855", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.855" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.857" = type { %"class.std::__1::__compressed_pair.858" }
%"class.std::__1::__compressed_pair.858" = type { %"struct.std::__1::__compressed_pair_elem.859" }
%"struct.std::__1::__compressed_pair_elem.859" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.863" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.173", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.864", %"class.std::__1::unique_ptr.878" }
%"class.std::__1::unique_ptr.864" = type { %"class.std::__1::__compressed_pair.865" }
%"class.std::__1::__compressed_pair.865" = type { %"struct.std::__1::__compressed_pair_elem.866" }
%"struct.std::__1::__compressed_pair_elem.866" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.867" }
%"class.std::__1::vector.867" = type { %"class.std::__1::__vector_base.868" }
%"class.std::__1::__vector_base.868" = type { %"class.std::__1::unique_ptr.869"*, %"class.std::__1::unique_ptr.869"*, %"class.std::__1::__compressed_pair.870" }
%"class.std::__1::unique_ptr.869" = type { %"class.std::__1::__compressed_pair.1555" }
%"class.std::__1::__compressed_pair.1555" = type { %"struct.std::__1::__compressed_pair_elem.1556" }
%"struct.std::__1::__compressed_pair_elem.1556" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.871" }
%"struct.std::__1::__compressed_pair_elem.871" = type { %"class.std::__1::unique_ptr.869"* }
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.884" = type { %"class.std::__1::__compressed_pair.885" }
%"class.std::__1::__compressed_pair.885" = type { %"struct.std::__1::__compressed_pair_elem.886" }
%"struct.std::__1::__compressed_pair_elem.886" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.887", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.887" = type { %"struct.std::__1::__atomic_base.888" }
%"struct.std::__1::__atomic_base.888" = type { %"struct.std::__1::__cxx_atomic_impl.889" }
%"struct.std::__1::__cxx_atomic_impl.889" = type { %"struct.std::__1::__cxx_atomic_base_impl.890" }
%"struct.std::__1::__cxx_atomic_base_impl.890" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.894" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.895", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.895" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.896", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.896" = type { %"class.std::__1::__vector_base.897" }
%"class.std::__1::__vector_base.897" = type { %"class.std::__1::unique_ptr.898"*, %"class.std::__1::unique_ptr.898"*, %"class.std::__1::__compressed_pair.899" }
%"class.std::__1::unique_ptr.898" = type opaque
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.900" }
%"struct.std::__1::__compressed_pair_elem.900" = type { %"class.std::__1::unique_ptr.898"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.904 }
%union.anon.904 = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.905", %"class.std::__1::unique_ptr.911", %"struct.std::__1::atomic.186", %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.923", %"class.std::__1::unique_ptr.929", %"class.std::__1::unique_ptr.935", %"class.std::__1::unique_ptr.941", %"class.std::__1::set.947", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.905" = type { %"class.std::__1::__compressed_pair.906" }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.907" }
%"struct.std::__1::__compressed_pair_elem.907" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.911" = type { %"class.std::__1::__compressed_pair.912" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.923" = type { %"class.std::__1::__compressed_pair.924" }
%"class.std::__1::__compressed_pair.924" = type { %"struct.std::__1::__compressed_pair_elem.925" }
%"struct.std::__1::__compressed_pair_elem.925" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.935" = type { %"class.std::__1::__compressed_pair.936" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.937" }
%"struct.std::__1::__compressed_pair_elem.937" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.941" = type { %"class.std::__1::__compressed_pair.942" }
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.943" }
%"struct.std::__1::__compressed_pair_elem.943" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.947" = type { %"class.std::__1::__tree.948" }
%"class.std::__1::__tree.948" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.949", %"class.std::__1::__compressed_pair.953" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.953" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.957" }
%"class.v8::internal::TaggedImpl.957" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.956" }
%"class.v8::internal::TaggedImpl.956" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.821", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.821" = type { %"class.std::__1::__compressed_pair.822" }
%"class.std::__1::__compressed_pair.822" = type { %"struct.std::__1::__compressed_pair_elem.823" }
%"struct.std::__1::__compressed_pair_elem.823" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.958", %"class.v8::internal::DetachableVector.959", %"class.v8::internal::DetachableVector.958", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.959" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.958" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr.815", %"class.std::__1::unique_ptr.515" }
%"class.std::__1::unique_ptr.815" = type { %"class.std::__1::__compressed_pair.816" }
%"class.std::__1::__compressed_pair.816" = type { %"struct.std::__1::__compressed_pair_elem.817" }
%"struct.std::__1::__compressed_pair_elem.817" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.515" = type { %"class.std::__1::__compressed_pair.516" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.518", %"class.std::__1::set.526" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.518" = type { %"class.std::__1::__tree.519" }
%"class.std::__1::__tree.519" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.524" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::set.526" = type { %"class.std::__1::__tree.527" }
%"class.std::__1::__tree.527" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.960", %"class.std::__1::vector.966", %"class.std::__1::unique_ptr.973", %"class.std::__1::vector.980", %"class.std::__1::unique_ptr.987", i64, %"class.std::__1::vector.993", %"class.std::__1::vector.1001", %"class.std::__1::vector.1009", i8, i8, i32 }
%"class.std::__1::unique_ptr.960" = type { %"class.std::__1::__compressed_pair.961" }
%"class.std::__1::__compressed_pair.961" = type { %"struct.std::__1::__compressed_pair_elem.962" }
%"struct.std::__1::__compressed_pair_elem.962" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.966" = type { %"class.std::__1::__vector_base.967" }
%"class.std::__1::__vector_base.967" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.968" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.969" }
%"struct.std::__1::__compressed_pair_elem.969" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.973" = type { %"class.std::__1::__compressed_pair.974" }
%"class.std::__1::__compressed_pair.974" = type { %"struct.std::__1::__compressed_pair_elem.975" }
%"struct.std::__1::__compressed_pair_elem.975" = type { %"class.v8::internal::GlobalHandles::NodeSpace.976"* }
%"class.v8::internal::GlobalHandles::NodeSpace.976" = type opaque
%"class.std::__1::vector.980" = type { %"class.std::__1::__vector_base.981" }
%"class.std::__1::__vector_base.981" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.982" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.982" = type { %"struct.std::__1::__compressed_pair_elem.983" }
%"struct.std::__1::__compressed_pair_elem.983" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.987" = type { %"class.std::__1::__compressed_pair.988" }
%"class.std::__1::__compressed_pair.988" = type { %"struct.std::__1::__compressed_pair_elem.989" }
%"struct.std::__1::__compressed_pair_elem.989" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.993" = type { %"class.std::__1::__vector_base.994" }
%"class.std::__1::__vector_base.994" = type { %"struct.std::__1::pair.995"*, %"struct.std::__1::pair.995"*, %"class.std::__1::__compressed_pair.996" }
%"struct.std::__1::pair.995" = type opaque
%"class.std::__1::__compressed_pair.996" = type { %"struct.std::__1::__compressed_pair_elem.997" }
%"struct.std::__1::__compressed_pair_elem.997" = type { %"struct.std::__1::pair.995"* }
%"class.std::__1::vector.1001" = type { %"class.std::__1::__vector_base.1002" }
%"class.std::__1::__vector_base.1002" = type { %"struct.std::__1::pair.1003"*, %"struct.std::__1::pair.1003"*, %"class.std::__1::__compressed_pair.1004" }
%"struct.std::__1::pair.1003" = type opaque
%"class.std::__1::__compressed_pair.1004" = type { %"struct.std::__1::__compressed_pair_elem.1005" }
%"struct.std::__1::__compressed_pair_elem.1005" = type { %"struct.std::__1::pair.1003"* }
%"class.std::__1::vector.1009" = type { %"class.std::__1::__vector_base.1010" }
%"class.std::__1::__vector_base.1010" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.1011" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.1011" = type { %"struct.std::__1::__compressed_pair_elem.1012" }
%"struct.std::__1::__compressed_pair_elem.1012" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.827", %"class.std::__1::vector.1016" }
%"class.std::__1::vector.827" = type { %"class.std::__1::__vector_base.828" }
%"class.std::__1::__vector_base.828" = type { i64**, i64**, %"class.std::__1::__compressed_pair.829" }
%"class.std::__1::__compressed_pair.829" = type { %"struct.std::__1::__compressed_pair_elem.830" }
%"struct.std::__1::__compressed_pair_elem.830" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.1023" }
%"class.std::__1::unique_ptr.1023" = type { %"class.std::__1::__compressed_pair.1024" }
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.1025" }
%"struct.std::__1::__compressed_pair_elem.1025" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.1016" = type { %"class.std::__1::__vector_base.1017" }
%"class.std::__1::__vector_base.1017" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1018" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.1029" = type { %"struct.std::__1::__atomic_base.1030" }
%"struct.std::__1::__atomic_base.1030" = type { %"struct.std::__1::__cxx_atomic_impl.1031" }
%"struct.std::__1::__cxx_atomic_impl.1031" = type { %"struct.std::__1::__cxx_atomic_base_impl.1032" }
%"struct.std::__1::__cxx_atomic_base_impl.1032" = type { i32 }
%"class.v8::SharedArrayBuffer" = type { i8 }
%"class.v8::Isolate::AtomicsWaitWakeHandle" = type { i8 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.1039" = type { %"struct.std::__1::__atomic_base.1040" }
%"struct.std::__1::__atomic_base.1040" = type { %"struct.std::__1::__cxx_atomic_impl.1041" }
%"struct.std::__1::__cxx_atomic_impl.1041" = type { %"struct.std::__1::__cxx_atomic_base_impl.1042" }
%"struct.std::__1::__cxx_atomic_base_impl.1042" = type { i32 }
%"class.v8::Context" = type { i8 }
%"class.v8::Module" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1044" }
%"class.std::__1::__compressed_pair.1044" = type { %"struct.std::__1::__compressed_pair_elem.1045" }
%"struct.std::__1::__compressed_pair_elem.1045" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.1046 }
%union.anon.1046 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.1051" = type { %"class.std::__1::__hash_table.1052" }
%"class.std::__1::__hash_table.1052" = type <{ %"class.std::__1::unique_ptr.1053", %"class.std::__1::__compressed_pair.1063", %"class.std::__1::__compressed_pair.1068", %"class.std::__1::__compressed_pair.1071", [4 x i8] }>
%"class.std::__1::unique_ptr.1053" = type { %"class.std::__1::__compressed_pair.1054" }
%"class.std::__1::__compressed_pair.1054" = type { %"struct.std::__1::__compressed_pair_elem.1055", %"struct.std::__1::__compressed_pair_elem.1057" }
%"struct.std::__1::__compressed_pair_elem.1055" = type { %"struct.std::__1::__hash_node_base.1056"** }
%"struct.std::__1::__hash_node_base.1056" = type { %"struct.std::__1::__hash_node_base.1056"* }
%"struct.std::__1::__compressed_pair_elem.1057" = type { %"class.std::__1::__bucket_list_deallocator.1058" }
%"class.std::__1::__bucket_list_deallocator.1058" = type { %"class.std::__1::__compressed_pair.1059" }
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.1064" }
%"struct.std::__1::__compressed_pair_elem.1064" = type { %"struct.std::__1::__hash_node_base.1056" }
%"class.std::__1::__compressed_pair.1068" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.1071" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::atomic.186" = type { %"struct.std::__1::__atomic_base.187" }
%"struct.std::__1::__atomic_base.187" = type { %"struct.std::__1::__cxx_atomic_impl.188" }
%"struct.std::__1::__cxx_atomic_impl.188" = type { %"struct.std::__1::__cxx_atomic_base_impl.189" }
%"struct.std::__1::__cxx_atomic_base_impl.189" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.1077", %"class.v8::internal::Handle.1083", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.1084", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.1077" = type { %"class.std::__1::__compressed_pair.1078" }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.1079" }
%"struct.std::__1::__compressed_pair_elem.1079" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.1083" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.1084" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr", %"class.std::__1::vector.685", %"class.std::__1::unique_ptr.693", %"class.std::__1::unique_ptr.700", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.734", %"class.std::__1::vector.740", %"struct.std::__1::pair.748" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type { i32, %"class.v8::base::PointerTemplateHashMapImpl", %"class.std::__1::vector", %"class.std::__1::vector.3", %"class.std::__1::unordered_map", %"class.v8::internal::Heap"* }
%"class.v8::base::PointerTemplateHashMapImpl" = type { %"class.v8::base::TemplateHashMapImpl" }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::KeyEqualityMatcher<void *>, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::KeyEqualityMatcher<void *>, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry" = type <{ i8*, i8*, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.v8::internal::HeapObjectsMap::EntryInfo"*, %"struct.v8::internal::HeapObjectsMap::EntryInfo"*, %"class.std::__1::__compressed_pair.0" }
%"struct.v8::internal::HeapObjectsMap::EntryInfo" = type <{ i32, [4 x i8], i64, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.v8::internal::HeapObjectsMap::EntryInfo"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"struct.v8::internal::HeapObjectsMap::TimeInterval"*, %"struct.v8::internal::HeapObjectsMap::TimeInterval"*, %"class.std::__1::__compressed_pair.5" }
%"struct.v8::internal::HeapObjectsMap::TimeInterval" = type { i32, i32, i32, %"class.v8::base::TimeTicks" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.v8::internal::HeapObjectsMap::TimeInterval"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.10", %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.24", %"class.std::__1::__compressed_pair.26", [4 x i8] }>
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12", %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::vector.685" = type { %"class.std::__1::__vector_base.686" }
%"class.std::__1::__vector_base.686" = type { %"class.std::__1::unique_ptr.687"*, %"class.std::__1::unique_ptr.687"*, %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::unique_ptr.687" = type opaque
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"class.std::__1::unique_ptr.687"* }
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type { %"class.v8::base::CustomMatcherTemplateHashMapImpl", %"class.v8::base::Mutex" }
%"class.v8::base::CustomMatcherTemplateHashMapImpl" = type { %"class.v8::base::TemplateHashMapImpl.696" }
%"class.v8::base::TemplateHashMapImpl.696" = type { %"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::HashEqualityThenKeyMatcher<void *, bool (*)(void *, void *)>, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::HashEqualityThenKeyMatcher<void *, bool (*)(void *, void *)>, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::HashEqualityThenKeyMatcher", %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::HashEqualityThenKeyMatcher" = type { i1 (i8*, i8*)* }
%"class.std::__1::unique_ptr.700" = type { %"class.std::__1::__compressed_pair.701" }
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.702" }
%"struct.std::__1::__compressed_pair_elem.702" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type { %"class.v8::internal::HeapObjectsMap"*, %"class.v8::internal::StringsStorage"*, %"class.v8::internal::AllocationTraceTree", [64 x i32], %"class.std::__1::vector.710", %"class.v8::base::PointerTemplateHashMapImpl", %"class.std::__1::vector.717", i32, %"class.v8::internal::AddressToTraceMap" }
%"class.v8::internal::AllocationTraceTree" = type { i32, %"class.v8::internal::AllocationTraceNode" }
%"class.v8::internal::AllocationTraceNode" = type { %"class.v8::internal::AllocationTraceTree"*, i32, i32, i32, i32, %"class.std::__1::vector.703" }
%"class.std::__1::vector.703" = type { %"class.std::__1::__vector_base.704" }
%"class.std::__1::__vector_base.704" = type { %"class.v8::internal::AllocationTraceNode"**, %"class.v8::internal::AllocationTraceNode"**, %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::AllocationTraceNode"** }
%"class.std::__1::vector.710" = type { %"class.std::__1::__vector_base.711" }
%"class.std::__1::__vector_base.711" = type { %"struct.v8::internal::AllocationTracker::FunctionInfo"**, %"struct.v8::internal::AllocationTracker::FunctionInfo"**, %"class.std::__1::__compressed_pair.712" }
%"struct.v8::internal::AllocationTracker::FunctionInfo" = type <{ i8*, i32, [4 x i8], i8*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"struct.v8::internal::AllocationTracker::FunctionInfo"** }
%"class.std::__1::vector.717" = type { %"class.std::__1::__vector_base.718" }
%"class.std::__1::__vector_base.718" = type { %"class.v8::internal::AllocationTracker::UnresolvedLocation"**, %"class.v8::internal::AllocationTracker::UnresolvedLocation"**, %"class.std::__1::__compressed_pair.719" }
%"class.v8::internal::AllocationTracker::UnresolvedLocation" = type { %"class.v8::internal::Handle", i32, %"struct.v8::internal::AllocationTracker::FunctionInfo"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.720" }
%"struct.std::__1::__compressed_pair_elem.720" = type { %"class.v8::internal::AllocationTracker::UnresolvedLocation"** }
%"class.v8::internal::AddressToTraceMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.724" }
%"class.std::__1::__tree.724" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.725", %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::unique_ptr.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.736" }
%"struct.std::__1::__compressed_pair_elem.736" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.740" = type { %"class.std::__1::__vector_base.741" }
%"class.std::__1::__vector_base.741" = type { %"struct.std::__1::pair.742"*, %"struct.std::__1::pair.742"*, %"class.std::__1::__compressed_pair.743" }
%"struct.std::__1::pair.742" = type opaque
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.744" }
%"struct.std::__1::__compressed_pair_elem.744" = type { %"struct.std::__1::pair.742"* }
%"struct.std::__1::pair.748" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local"*, i16, i8*)*, i8* }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.1085" = type { %"class.std::__1::__compressed_pair.1086" }
%"class.std::__1::__compressed_pair.1086" = type { %"struct.std::__1::__compressed_pair_elem.1087" }
%"struct.std::__1::__compressed_pair_elem.1087" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.1088", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.1088" = type { %"class.std::__1::__hash_table.1089" }
%"class.std::__1::__hash_table.1089" = type <{ %"class.std::__1::unique_ptr.1090", %"class.std::__1::__compressed_pair.1100", %"class.std::__1::__compressed_pair.1105", %"class.std::__1::__compressed_pair.1109", [4 x i8] }>
%"class.std::__1::unique_ptr.1090" = type { %"class.std::__1::__compressed_pair.1091" }
%"class.std::__1::__compressed_pair.1091" = type { %"struct.std::__1::__compressed_pair_elem.1092", %"struct.std::__1::__compressed_pair_elem.1094" }
%"struct.std::__1::__compressed_pair_elem.1092" = type { %"struct.std::__1::__hash_node_base.1093"** }
%"struct.std::__1::__hash_node_base.1093" = type { %"struct.std::__1::__hash_node_base.1093"* }
%"struct.std::__1::__compressed_pair_elem.1094" = type { %"class.std::__1::__bucket_list_deallocator.1095" }
%"class.std::__1::__bucket_list_deallocator.1095" = type { %"class.std::__1::__compressed_pair.1096" }
%"class.std::__1::__compressed_pair.1096" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.1100" = type { %"struct.std::__1::__compressed_pair_elem.1101" }
%"struct.std::__1::__compressed_pair_elem.1101" = type { %"struct.std::__1::__hash_node_base.1093" }
%"class.std::__1::__compressed_pair.1105" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.1109" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque.1117" }
%"class.std::__1::deque.1117" = type { %"class.std::__1::__deque_base.1118" }
%"class.std::__1::__deque_base.1118" = type { %"struct.std::__1::__split_buffer.1119", i64, %"class.std::__1::__compressed_pair.1126" }
%"struct.std::__1::__split_buffer.1119" = type { %"struct.std::__1::pair.1120"**, %"struct.std::__1::pair.1120"**, %"struct.std::__1::pair.1120"**, %"class.std::__1::__compressed_pair.1121" }
%"struct.std::__1::pair.1120" = type opaque
%"class.std::__1::__compressed_pair.1121" = type { %"struct.std::__1::__compressed_pair_elem.1122" }
%"struct.std::__1::__compressed_pair_elem.1122" = type { %"struct.std::__1::pair.1120"** }
%"class.std::__1::__compressed_pair.1126" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.v8::String" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.1131" = type { %"class.std::__1::__vector_base.1132" }
%"class.std::__1::__vector_base.1132" = type { %"class.v8::internal::Handle.1133"*, %"class.v8::internal::Handle.1133"*, %"class.std::__1::__compressed_pair.1134" }
%"class.v8::internal::Handle.1133" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1134" = type { %"struct.std::__1::__compressed_pair_elem.1135" }
%"struct.std::__1::__compressed_pair_elem.1135" = type { %"class.v8::internal::Handle.1133"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type { %"class.v8::MicrotaskQueue", i64, i64, i64, i64*, i64, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"*, i32, i32, i32, i8, %"class.std::__1::vector.1139" }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.std::__1::vector.1139" = type { %"class.std::__1::__vector_base.1140" }
%"class.std::__1::__vector_base.1140" = type { %"struct.std::__1::pair.1120"*, %"struct.std::__1::pair.1120"*, %"class.std::__1::__compressed_pair.1141" }
%"class.std::__1::__compressed_pair.1141" = type { %"struct.std::__1::__compressed_pair_elem.1142" }
%"struct.std::__1::__compressed_pair_elem.1142" = type { %"struct.std::__1::pair.1120"* }
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.1034", i32, %"class.v8::Local" }
%"class.v8::Local.1034" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1143" = type { %"class.std::__1::__compressed_pair.1144" }
%"class.std::__1::__compressed_pair.1144" = type { %"struct.std::__1::__compressed_pair_elem.1145" }
%"struct.std::__1::__compressed_pair_elem.1145" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.827", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1149" = type { %"class.std::__1::__vector_base.1150" }
%"class.std::__1::__vector_base.1150" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1151" }
%"class.std::__1::__compressed_pair.1151" = type { %"struct.std::__1::__compressed_pair_elem.1152" }
%"struct.std::__1::__compressed_pair_elem.1152" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1156" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1157" = type { %"class.std::__1::__hash_table.1158" }
%"class.std::__1::__hash_table.1158" = type <{ %"class.std::__1::unique_ptr.1159", %"class.std::__1::__compressed_pair.1169", %"class.std::__1::__compressed_pair.1174", %"class.std::__1::__compressed_pair.1177", [4 x i8] }>
%"class.std::__1::unique_ptr.1159" = type { %"class.std::__1::__compressed_pair.1160" }
%"class.std::__1::__compressed_pair.1160" = type { %"struct.std::__1::__compressed_pair_elem.1161", %"struct.std::__1::__compressed_pair_elem.1163" }
%"struct.std::__1::__compressed_pair_elem.1161" = type { %"struct.std::__1::__hash_node_base.1162"** }
%"struct.std::__1::__hash_node_base.1162" = type { %"struct.std::__1::__hash_node_base.1162"* }
%"struct.std::__1::__compressed_pair_elem.1163" = type { %"class.std::__1::__bucket_list_deallocator.1164" }
%"class.std::__1::__bucket_list_deallocator.1164" = type { %"class.std::__1::__compressed_pair.1165" }
%"class.std::__1::__compressed_pair.1165" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.1169" = type { %"struct.std::__1::__compressed_pair_elem.1170" }
%"struct.std::__1::__compressed_pair_elem.1170" = type { %"struct.std::__1::__hash_node_base.1162" }
%"class.std::__1::__compressed_pair.1174" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.1177" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.194" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1181", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1206", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1207", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1181" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.572, %union.anon.573, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.572 = type { i64 }
%union.anon.573 = type { i64 }
%"class.std::__1::weak_ptr.1206" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.194" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1207" = type { %"class.v8::PersistentBase.1208" }
%"class.v8::PersistentBase.1208" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1182", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1182" = type { %"class.std::__1::__hash_table.1183" }
%"class.std::__1::__hash_table.1183" = type <{ %"class.std::__1::unique_ptr.1184", %"class.std::__1::__compressed_pair.1194", %"class.std::__1::__compressed_pair.1199", %"class.std::__1::__compressed_pair.1202", [4 x i8] }>
%"class.std::__1::unique_ptr.1184" = type { %"class.std::__1::__compressed_pair.1185" }
%"class.std::__1::__compressed_pair.1185" = type { %"struct.std::__1::__compressed_pair_elem.1186", %"struct.std::__1::__compressed_pair_elem.1188" }
%"struct.std::__1::__compressed_pair_elem.1186" = type { %"struct.std::__1::__hash_node_base.1187"** }
%"struct.std::__1::__hash_node_base.1187" = type { %"struct.std::__1::__hash_node_base.1187"* }
%"struct.std::__1::__compressed_pair_elem.1188" = type { %"class.std::__1::__bucket_list_deallocator.1189" }
%"class.std::__1::__bucket_list_deallocator.1189" = type { %"class.std::__1::__compressed_pair.1190" }
%"class.std::__1::__compressed_pair.1190" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.1194" = type { %"struct.std::__1::__compressed_pair_elem.1195" }
%"struct.std::__1::__compressed_pair_elem.1195" = type { %"struct.std::__1::__hash_node_base.1187" }
%"class.std::__1::__compressed_pair.1199" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.1202" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1209" = type { %"class.std::__1::__compressed_pair.1210" }
%"class.std::__1::__compressed_pair.1210" = type { %"struct.std::__1::__compressed_pair_elem.1211" }
%"struct.std::__1::__compressed_pair_elem.1211" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1214", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.808", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.812", %"class.std::__1::unique_ptr.837", %"class.std::__1::unique_ptr.508", %"class.std::__1::vector.843", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.808" = type { %"struct.std::__1::__atomic_base.809" }
%"struct.std::__1::__atomic_base.809" = type { %"struct.std::__1::__cxx_atomic_impl.810" }
%"struct.std::__1::__cxx_atomic_impl.810" = type { %"struct.std::__1::__cxx_atomic_base_impl.811" }
%"struct.std::__1::__cxx_atomic_base_impl.811" = type { i32 }
%"class.std::__1::unique_ptr.812" = type { %"class.std::__1::__compressed_pair.813" }
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.814" }
%"struct.std::__1::__compressed_pair_elem.814" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.827" }
%"class.std::__1::unique_ptr.837" = type { %"class.std::__1::__compressed_pair.838" }
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem.839" }
%"struct.std::__1::__compressed_pair_elem.839" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.843" = type { %"class.std::__1::__vector_base.844" }
%"class.std::__1::__vector_base.844" = type { %"struct.std::__1::pair.845"*, %"struct.std::__1::pair.845"*, %"class.std::__1::__compressed_pair.846" }
%"struct.std::__1::pair.845" = type opaque
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.847" }
%"struct.std::__1::__compressed_pair_elem.847" = type { %"struct.std::__1::pair.845"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.133" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.72", %"class.std::__1::vector.72", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.79" }
%"class.std::__1::__hash_table.79" = type <{ %"class.std::__1::unique_ptr.80", %"class.std::__1::__compressed_pair.90", %"class.std::__1::__compressed_pair.95", %"class.std::__1::__compressed_pair.99", [4 x i8] }>
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82", %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.std::__1::__hash_node_base.83"** }
%"struct.std::__1::__hash_node_base.83" = type { %"struct.std::__1::__hash_node_base.83"* }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.std::__1::__bucket_list_deallocator.85" }
%"class.std::__1::__bucket_list_deallocator.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"struct.std::__1::__hash_node_base.83" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.56", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.122", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.56", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.56", %"struct.std::__1::atomic.104", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.104" = type { %"struct.std::__1::__atomic_base.105" }
%"struct.std::__1::__atomic_base.105" = type { %"struct.std::__1::__cxx_atomic_impl.106" }
%"struct.std::__1::__cxx_atomic_impl.106" = type { %"struct.std::__1::__cxx_atomic_base_impl.107" }
%"struct.std::__1::__cxx_atomic_base_impl.107" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.108" }
%"class.std::__1::vector.108" = type { %"class.std::__1::__vector_base.109" }
%"class.std::__1::__vector_base.109" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.110" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.115", %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::atomic.122" = type { %"struct.std::__1::__atomic_base.123" }
%"struct.std::__1::__atomic_base.123" = type { %"struct.std::__1::__cxx_atomic_impl.124" }
%"struct.std::__1::__cxx_atomic_impl.124" = type { %"struct.std::__1::__cxx_atomic_base_impl.125" }
%"struct.std::__1::__cxx_atomic_base_impl.125" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.126", i8, [7 x i8] }>
%"class.std::__1::vector.126" = type { %"class.std::__1::__vector_base.127" }
%"class.std::__1::__vector_base.127" = type { i64*, i64*, %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1214" = type { %"class.std::__1::__compressed_pair.1215" }
%"class.std::__1::__compressed_pair.1215" = type { %"struct.std::__1::__compressed_pair_elem.1216" }
%"struct.std::__1::__compressed_pair_elem.1216" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1223" = type { %"class.std::__1::__compressed_pair.1224" }
%"class.std::__1::__compressed_pair.1224" = type { %"struct.std::__1::__compressed_pair_elem.1225" }
%"struct.std::__1::__compressed_pair_elem.1225" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.1035", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.1035" = type { %"class.v8::Context"* }
%"class.v8::Array" = type { i8 }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1231" }
%"class.std::__1::unordered_map.1231" = type { %"class.std::__1::__hash_table.1232" }
%"class.std::__1::__hash_table.1232" = type <{ %"class.std::__1::unique_ptr.1233", %"class.std::__1::__compressed_pair.1243", %"class.std::__1::__compressed_pair.1248", %"class.std::__1::__compressed_pair.1251", [4 x i8] }>
%"class.std::__1::unique_ptr.1233" = type { %"class.std::__1::__compressed_pair.1234" }
%"class.std::__1::__compressed_pair.1234" = type { %"struct.std::__1::__compressed_pair_elem.1235", %"struct.std::__1::__compressed_pair_elem.1237" }
%"struct.std::__1::__compressed_pair_elem.1235" = type { %"struct.std::__1::__hash_node_base.1236"** }
%"struct.std::__1::__hash_node_base.1236" = type { %"struct.std::__1::__hash_node_base.1236"* }
%"struct.std::__1::__compressed_pair_elem.1237" = type { %"class.std::__1::__bucket_list_deallocator.1238" }
%"class.std::__1::__bucket_list_deallocator.1238" = type { %"class.std::__1::__compressed_pair.1239" }
%"class.std::__1::__compressed_pair.1239" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.1243" = type { %"struct.std::__1::__compressed_pair_elem.1244" }
%"struct.std::__1::__compressed_pair_elem.1244" = type { %"struct.std::__1::__hash_node_base.1236" }
%"class.std::__1::__compressed_pair.1248" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.1251" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::atomic.1257" = type { %"struct.std::__1::__atomic_base.1258" }
%"struct.std::__1::__atomic_base.1258" = type { %"struct.std::__1::__cxx_atomic_impl.1259" }
%"struct.std::__1::__cxx_atomic_impl.1259" = type { %"struct.std::__1::__cxx_atomic_base_impl.1260" }
%"struct.std::__1::__cxx_atomic_base_impl.1260" = type { %"class.std::__1::vector.1261"* }
%"class.std::__1::vector.1261" = type { %"class.std::__1::__vector_base.1262" }
%"class.std::__1::__vector_base.1262" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1263" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1263" = type { %"struct.std::__1::__compressed_pair_elem.1264" }
%"struct.std::__1::__compressed_pair_elem.1264" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.61" = type { %"struct.std::__1::__atomic_base.62" }
%"struct.std::__1::__atomic_base.62" = type { %"struct.std::__1::__cxx_atomic_impl.63" }
%"struct.std::__1::__cxx_atomic_impl.63" = type { %"struct.std::__1::__cxx_atomic_base_impl.64" }
%"struct.std::__1::__cxx_atomic_base_impl.64" = type { i32 }
%"class.std::__1::vector.65" = type { %"class.std::__1::__vector_base.66" }
%"class.std::__1::__vector_base.66" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.67" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.137" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.137" = type { %"class.std::__1::__vector_base.138" }
%"class.std::__1::__vector_base.138" = type { %"struct.std::__1::pair.139"*, %"struct.std::__1::pair.139"*, %"class.std::__1::__compressed_pair.140" }
%"struct.std::__1::pair.139" = type { i32, i64 }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"struct.std::__1::pair.139"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.145" }
%"class.std::__1::unordered_map.145" = type { %"class.std::__1::__hash_table.146" }
%"class.std::__1::__hash_table.146" = type <{ %"class.std::__1::unique_ptr.147", %"class.std::__1::__compressed_pair.157", %"class.std::__1::__compressed_pair.162", %"class.std::__1::__compressed_pair.167", [4 x i8] }>
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149", %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.std::__1::__hash_node_base.150"** }
%"struct.std::__1::__hash_node_base.150" = type { %"struct.std::__1::__hash_node_base.150"* }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.std::__1::__bucket_list_deallocator.152" }
%"class.std::__1::__bucket_list_deallocator.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"struct.std::__1::__hash_node_base.150" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.186", %"struct.std::__1::atomic.190", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.190" = type { %"struct.std::__1::__atomic_base.191" }
%"struct.std::__1::__atomic_base.191" = type { %"struct.std::__1::__cxx_atomic_impl.192" }
%"struct.std::__1::__cxx_atomic_impl.192" = type { %"struct.std::__1::__cxx_atomic_base_impl.193" }
%"struct.std::__1::__cxx_atomic_base_impl.193" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.195" = type { %"struct.std::__1::__atomic_base.196" }
%"struct.std::__1::__atomic_base.196" = type { %"struct.std::__1::__cxx_atomic_impl.197" }
%"struct.std::__1::__cxx_atomic_impl.197" = type { %"struct.std::__1::__cxx_atomic_base_impl.198" }
%"struct.std::__1::__cxx_atomic_base_impl.198" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.199" = type { %"class.std::__1::__vector_base.200" }
%"class.std::__1::__vector_base.200" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.201" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.254", %"class.std::__1::unique_ptr.260", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.314", %"class.std::__1::vector.314", %"class.std::__1::vector.314", %"class.std::__1::vector.321", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.215", %"class.std::__1::vector.216", %"class.std::__1::vector.223", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.215" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.218" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.223" = type { %"class.std::__1::__vector_base.224" }
%"class.std::__1::__vector_base.224" = type { %"class.std::__1::unique_ptr.225"*, %"class.std::__1::unique_ptr.225"*, %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::unique_ptr.225" = type opaque
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.std::__1::unique_ptr.225"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.231", %"class.v8::internal::Worklist.233", %"class.v8::internal::Worklist.233", %"class.v8::internal::Worklist.233", %"class.v8::internal::Worklist.235", %"class.v8::internal::Worklist.237", %"class.v8::internal::Worklist.239", %"class.v8::internal::Worklist.241", %"class.v8::internal::Worklist.243", %"class.v8::internal::Worklist.245" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.231" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.233" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.235" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.237" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.239" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.241" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.243" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.245" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.247", i8, i64 }
%"class.std::__1::vector.247" = type { %"class.std::__1::__vector_base.248" }
%"class.std::__1::__vector_base.248" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.263" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.215"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.263" = type { %"class.std::__1::__hash_table.264" }
%"class.std::__1::__hash_table.264" = type <{ %"class.std::__1::unique_ptr.265", %"class.std::__1::__compressed_pair.275", %"class.std::__1::__compressed_pair.280", %"class.std::__1::__compressed_pair.283", [4 x i8] }>
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267", %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"struct.std::__1::__hash_node_base.268"** }
%"struct.std::__1::__hash_node_base.268" = type { %"struct.std::__1::__hash_node_base.268"* }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.std::__1::__bucket_list_deallocator.270" }
%"class.std::__1::__bucket_list_deallocator.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"struct.std::__1::__hash_node_base.268" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.290" }
%"class.std::__1::unordered_map.290" = type { %"class.std::__1::__hash_table.291" }
%"class.std::__1::__hash_table.291" = type <{ %"class.std::__1::unique_ptr.292", %"class.std::__1::__compressed_pair.302", %"class.std::__1::__compressed_pair.307", %"class.std::__1::__compressed_pair.310", [4 x i8] }>
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294", %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"struct.std::__1::__hash_node_base.295"** }
%"struct.std::__1::__hash_node_base.295" = type { %"struct.std::__1::__hash_node_base.295"* }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.std::__1::__bucket_list_deallocator.297" }
%"class.std::__1::__bucket_list_deallocator.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"struct.std::__1::__hash_node_base.295" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::vector.314" = type { %"class.std::__1::__vector_base.315" }
%"class.std::__1::__vector_base.315" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.321" = type { %"class.std::__1::__vector_base.322" }
%"class.std::__1::__vector_base.322" = type { %"struct.std::__1::pair.323"*, %"struct.std::__1::pair.323"*, %"class.std::__1::__compressed_pair.324" }
%"struct.std::__1::pair.323" = type opaque
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"struct.std::__1::pair.323"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.329", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.314"], [3 x %"class.std::__1::vector.314"], i8, %"struct.std::__1::atomic.186", [6 x i8], %"class.std::__1::vector.314", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.339"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.314", %"class.std::__1::vector.314", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.339" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.354" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.364", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.357"], %"class.std::__1::unique_ptr.329" }
%"class.std::__1::vector.357" = type { %"class.std::__1::__vector_base.358" }
%"class.std::__1::__vector_base.358" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.359" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.393" = type { %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.396", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.400", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.405" }
%"struct.std::__1::atomic.396" = type { %"struct.std::__1::__atomic_base.397" }
%"struct.std::__1::__atomic_base.397" = type { %"struct.std::__1::__cxx_atomic_impl.398" }
%"struct.std::__1::__cxx_atomic_impl.398" = type { %"struct.std::__1::__cxx_atomic_base_impl.399" }
%"struct.std::__1::__cxx_atomic_base_impl.399" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.400" = type { %"struct.std::__1::__atomic_base.401" }
%"struct.std::__1::__atomic_base.401" = type { %"struct.std::__1::__cxx_atomic_impl.402" }
%"struct.std::__1::__cxx_atomic_impl.402" = type { %"struct.std::__1::__cxx_atomic_base_impl.403" }
%"struct.std::__1::__cxx_atomic_base_impl.403" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.405" = type { %"class.std::__1::__hash_table.406" }
%"class.std::__1::__hash_table.406" = type <{ %"class.std::__1::unique_ptr.407", %"class.std::__1::__compressed_pair.417", %"class.std::__1::__compressed_pair.422", %"class.std::__1::__compressed_pair.425", [4 x i8] }>
%"class.std::__1::unique_ptr.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409", %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"struct.std::__1::__hash_node_base.410"** }
%"struct.std::__1::__hash_node_base.410" = type { %"struct.std::__1::__hash_node_base.410"* }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"class.std::__1::__bucket_list_deallocator.412" }
%"class.std::__1::__bucket_list_deallocator.412" = type { %"class.std::__1::__compressed_pair.413" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"struct.std::__1::__hash_node_base.410" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.329", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.186", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.435", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.435" = type { %"class.std::__1::__hash_table.436" }
%"class.std::__1::__hash_table.436" = type <{ %"class.std::__1::unique_ptr.437", %"class.std::__1::__compressed_pair.447", %"class.std::__1::__compressed_pair.452", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439", %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"struct.std::__1::__hash_node_base.440"** }
%"struct.std::__1::__hash_node_base.440" = type { %"struct.std::__1::__hash_node_base.440"* }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"class.std::__1::__bucket_list_deallocator.442" }
%"class.std::__1::__bucket_list_deallocator.442" = type { %"class.std::__1::__compressed_pair.443" }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"struct.std::__1::__hash_node_base.440" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.471" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::unique_ptr.478" = type { %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.484" = type { %"class.std::__1::__compressed_pair.485" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.496" = type { %"class.std::__1::__compressed_pair.497" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.498" }
%"struct.std::__1::__compressed_pair_elem.498" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.502" = type { %"class.std::__1::__compressed_pair.503" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.508" = type { %"class.std::__1::__compressed_pair.509" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.514" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.533", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.515", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.533" = type { %"struct.std::__1::__atomic_base.534" }
%"struct.std::__1::__atomic_base.534" = type { %"struct.std::__1::__cxx_atomic_impl.535" }
%"struct.std::__1::__cxx_atomic_impl.535" = type { %"struct.std::__1::__cxx_atomic_base_impl.536" }
%"struct.std::__1::__cxx_atomic_base_impl.536" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.537" = type { %"class.std::__1::__hash_table.538" }
%"class.std::__1::__hash_table.538" = type <{ %"class.std::__1::unique_ptr.539", %"class.std::__1::__compressed_pair.549", %"class.std::__1::__compressed_pair.554", %"class.std::__1::__compressed_pair.557", [4 x i8] }>
%"class.std::__1::unique_ptr.539" = type { %"class.std::__1::__compressed_pair.540" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.541", %"struct.std::__1::__compressed_pair_elem.543" }
%"struct.std::__1::__compressed_pair_elem.541" = type { %"struct.std::__1::__hash_node_base.542"** }
%"struct.std::__1::__hash_node_base.542" = type { %"struct.std::__1::__hash_node_base.542"* }
%"struct.std::__1::__compressed_pair_elem.543" = type { %"class.std::__1::__bucket_list_deallocator.544" }
%"class.std::__1::__bucket_list_deallocator.544" = type { %"class.std::__1::__compressed_pair.545" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"struct.std::__1::__hash_node_base.542" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unique_ptr.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.565" }
%"struct.std::__1::__compressed_pair_elem.565" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.569" = type { %"class.std::__1::__compressed_pair.570" }
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"struct.std::__1::__compressed_pair_elem.571" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type <{ %"class.v8::internal::GlobalSafepoint::Barrier", %"class.v8::internal::Heap"*, %"class.v8::base::Mutex", %"class.v8::internal::LocalHeap"*, i32, [4 x i8] }>
%"class.v8::internal::GlobalSafepoint::Barrier" = type { %"class.v8::base::Mutex", %"class.v8::base::ConditionVariable", %"class.v8::base::ConditionVariable", i8, i32 }
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.578", %"class.std::__1::vector.578" }
%"class.std::__1::unique_ptr.585" = type { %"class.std::__1::__compressed_pair.586" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.364" = type { %"class.std::__1::__hash_table.365" }
%"class.std::__1::__hash_table.365" = type <{ %"class.std::__1::unique_ptr.366", %"class.std::__1::__compressed_pair.376", %"class.std::__1::__compressed_pair.381", %"class.std::__1::__compressed_pair.385", [4 x i8] }>
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368", %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"struct.std::__1::__hash_node_base.369"** }
%"struct.std::__1::__hash_node_base.369" = type { %"struct.std::__1::__hash_node_base.369"* }
%"struct.std::__1::__compressed_pair_elem.370" = type { %"class.std::__1::__bucket_list_deallocator.371" }
%"class.std::__1::__bucket_list_deallocator.371" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.369" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unordered_map.617" = type { %"class.std::__1::__hash_table.618" }
%"class.std::__1::__hash_table.618" = type <{ %"class.std::__1::unique_ptr.619", %"class.std::__1::__compressed_pair.629", %"class.std::__1::__compressed_pair.634", %"class.std::__1::__compressed_pair.637", [4 x i8] }>
%"class.std::__1::unique_ptr.619" = type { %"class.std::__1::__compressed_pair.620" }
%"class.std::__1::__compressed_pair.620" = type { %"struct.std::__1::__compressed_pair_elem.621", %"struct.std::__1::__compressed_pair_elem.623" }
%"struct.std::__1::__compressed_pair_elem.621" = type { %"struct.std::__1::__hash_node_base.622"** }
%"struct.std::__1::__hash_node_base.622" = type { %"struct.std::__1::__hash_node_base.622"* }
%"struct.std::__1::__compressed_pair_elem.623" = type { %"class.std::__1::__bucket_list_deallocator.624" }
%"class.std::__1::__bucket_list_deallocator.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"struct.std::__1::__compressed_pair_elem.630" = type { %"struct.std::__1::__hash_node_base.622" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unordered_map.591" = type { %"class.std::__1::__hash_table.592" }
%"class.std::__1::__hash_table.592" = type <{ %"class.std::__1::unique_ptr.593", %"class.std::__1::__compressed_pair.603", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.611", [4 x i8] }>
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595", %"struct.std::__1::__compressed_pair_elem.597" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"struct.std::__1::__hash_node_base.596"** }
%"struct.std::__1::__hash_node_base.596" = type { %"struct.std::__1::__hash_node_base.596"* }
%"struct.std::__1::__compressed_pair_elem.597" = type { %"class.std::__1::__bucket_list_deallocator.598" }
%"class.std::__1::__bucket_list_deallocator.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"struct.std::__1::__hash_node_base.596" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unordered_map.641" = type { %"class.std::__1::__hash_table.642" }
%"class.std::__1::__hash_table.642" = type <{ %"class.std::__1::unique_ptr.643", %"class.std::__1::__compressed_pair.653", %"class.std::__1::__compressed_pair.658", %"class.std::__1::__compressed_pair.663", [4 x i8] }>
%"class.std::__1::unique_ptr.643" = type { %"class.std::__1::__compressed_pair.644" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.645", %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.645" = type { %"struct.std::__1::__hash_node_base.646"** }
%"struct.std::__1::__hash_node_base.646" = type { %"struct.std::__1::__hash_node_base.646"* }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"class.std::__1::__bucket_list_deallocator.648" }
%"class.std::__1::__bucket_list_deallocator.648" = type { %"class.std::__1::__compressed_pair.649" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"struct.std::__1::__hash_node_base.646" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::vector.669" = type { %"class.std::__1::__vector_base.670" }
%"class.std::__1::__vector_base.670" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.671" }
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.672" }
%"struct.std::__1::__compressed_pair_elem.672" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.676" = type { %"class.std::__1::__compressed_pair.677" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.678" }
%"struct.std::__1::__compressed_pair_elem.678" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.175" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.578" = type { %"class.std::__1::__vector_base.579" }
%"class.std::__1::__vector_base.579" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.580" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.581" }
%"struct.std::__1::__compressed_pair_elem.581" = type { %"class.v8::internal::Object"* }
%"struct.std::nothrow_t" = type { i8 }
%"class.v8::internal::HeapGraphEdge" = type { i32, %"class.v8::internal::HeapEntry"*, %union.anon.807 }
%union.anon.807 = type { i8* }
%"class.v8::internal::HeapEntry" = type { i32, %union.anon, [6 x i8], i8, %"class.v8::internal::HeapSnapshot"*, i8*, i32, i32 }
%union.anon = type { i32 }
%"class.v8::internal::HeapSnapshot" = type <{ %"class.v8::internal::HeapProfiler"*, %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"*, [25 x %"class.v8::internal::HeapEntry"*], %"class.std::__1::deque", %"class.std::__1::deque.758", %"class.std::__1::vector.770", %"class.std::__1::unordered_map.772", %"class.std::__1::vector.800", i32, i8, i8, [2 x i8] }>
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.754" }
%"struct.std::__1::__split_buffer" = type { %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"**, %"class.std::__1::__compressed_pair.749" }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.750" }
%"struct.std::__1::__compressed_pair_elem.750" = type { %"class.v8::internal::HeapEntry"** }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::deque.758" = type { %"class.std::__1::__deque_base.759" }
%"class.std::__1::__deque_base.759" = type { %"struct.std::__1::__split_buffer.760", i64, %"class.std::__1::__compressed_pair.766" }
%"struct.std::__1::__split_buffer.760" = type { %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"**, %"class.std::__1::__compressed_pair.761" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"class.v8::internal::HeapGraphEdge"** }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::vector.770" = type { %"class.std::__1::__vector_base.771" }
%"class.std::__1::__vector_base.771" = type { %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"**, %"class.std::__1::__compressed_pair.761" }
%"class.std::__1::unordered_map.772" = type { %"class.std::__1::__hash_table.773" }
%"class.std::__1::__hash_table.773" = type <{ %"class.std::__1::unique_ptr.774", %"class.std::__1::__compressed_pair.784", %"class.std::__1::__compressed_pair.789", %"class.std::__1::__compressed_pair.794", [4 x i8] }>
%"class.std::__1::unique_ptr.774" = type { %"class.std::__1::__compressed_pair.775" }
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.776", %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.776" = type { %"struct.std::__1::__hash_node_base.777"** }
%"struct.std::__1::__hash_node_base.777" = type { %"struct.std::__1::__hash_node_base.777"* }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.std::__1::__bucket_list_deallocator.779" }
%"class.std::__1::__bucket_list_deallocator.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.785" }
%"struct.std::__1::__compressed_pair_elem.785" = type { %"struct.std::__1::__hash_node_base.777" }
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::vector.800" = type { %"class.std::__1::__vector_base.801" }
%"class.std::__1::__vector_base.801" = type { %"struct.v8::internal::SourceLocation"*, %"struct.v8::internal::SourceLocation"*, %"class.std::__1::__compressed_pair.802" }
%"struct.v8::internal::SourceLocation" = type { i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.802" = type { %"struct.std::__1::__compressed_pair_elem.803" }
%"struct.std::__1::__compressed_pair_elem.803" = type { %"struct.v8::internal::SourceLocation"* }
%"class.v8::internal::V8HeapExplorer" = type { %"class.v8::internal::HeapEntriesAllocator", %"class.v8::internal::Heap"*, %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::StringsStorage"*, %"class.v8::internal::HeapObjectsMap"*, %"class.v8::internal::SnapshottingProgressReportingInterface"*, %"class.v8::internal::HeapSnapshotGenerator"*, %"class.std::__1::vector.1328", %"class.std::__1::unordered_map.1337", %"class.std::__1::unordered_map.1363", %"class.std::__1::unordered_set.1389", %"class.v8::HeapProfiler::ObjectNameResolver"*, %"class.std::__1::vector.1411" }
%"class.v8::internal::HeapEntriesAllocator" = type { i32 (...)** }
%"class.v8::internal::HeapSnapshotGenerator" = type { %"class.v8::internal::SnapshottingProgressReportingInterface", %"class.v8::internal::HeapSnapshot"*, %"class.v8::ActivityControl"*, %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::NativeObjectsExplorer", %"class.std::__1::unordered_map.1419", %"class.std::__1::unordered_map.1443", i32, i32, %"class.v8::internal::Heap"* }
%"class.v8::internal::SnapshottingProgressReportingInterface" = type { i32 (...)** }
%"class.v8::ActivityControl" = type { i32 (...)** }
%"class.v8::internal::NativeObjectsExplorer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::StringsStorage"*, %"class.v8::internal::HeapObjectsMap"*, %"class.std::__1::unique_ptr.1413", %"class.v8::internal::HeapSnapshotGenerator"* }
%"class.std::__1::unique_ptr.1413" = type { %"class.std::__1::__compressed_pair.1414" }
%"class.std::__1::__compressed_pair.1414" = type { %"struct.std::__1::__compressed_pair_elem.1415" }
%"struct.std::__1::__compressed_pair_elem.1415" = type { %"class.v8::internal::HeapEntriesAllocator"* }
%"class.std::__1::unordered_map.1419" = type { %"class.std::__1::__hash_table.1420" }
%"class.std::__1::__hash_table.1420" = type <{ %"class.std::__1::unique_ptr.1421", %"class.std::__1::__compressed_pair.1431", %"class.std::__1::__compressed_pair.1436", %"class.std::__1::__compressed_pair.1439", [4 x i8] }>
%"class.std::__1::unique_ptr.1421" = type { %"class.std::__1::__compressed_pair.1422" }
%"class.std::__1::__compressed_pair.1422" = type { %"struct.std::__1::__compressed_pair_elem.1423", %"struct.std::__1::__compressed_pair_elem.1425" }
%"struct.std::__1::__compressed_pair_elem.1423" = type { %"struct.std::__1::__hash_node_base.1424"** }
%"struct.std::__1::__hash_node_base.1424" = type { %"struct.std::__1::__hash_node_base.1424"* }
%"struct.std::__1::__compressed_pair_elem.1425" = type { %"class.std::__1::__bucket_list_deallocator.1426" }
%"class.std::__1::__bucket_list_deallocator.1426" = type { %"class.std::__1::__compressed_pair.1427" }
%"class.std::__1::__compressed_pair.1427" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"struct.std::__1::__hash_node_base.1424" }
%"class.std::__1::__compressed_pair.1436" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.1439" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unordered_map.1443" = type { %"class.std::__1::__hash_table.1444" }
%"class.std::__1::__hash_table.1444" = type <{ %"class.std::__1::unique_ptr.1445", %"class.std::__1::__compressed_pair.1455", %"class.std::__1::__compressed_pair.1460", %"class.std::__1::__compressed_pair.1463", [4 x i8] }>
%"class.std::__1::unique_ptr.1445" = type { %"class.std::__1::__compressed_pair.1446" }
%"class.std::__1::__compressed_pair.1446" = type { %"struct.std::__1::__compressed_pair_elem.1447", %"struct.std::__1::__compressed_pair_elem.1449" }
%"struct.std::__1::__compressed_pair_elem.1447" = type { %"struct.std::__1::__hash_node_base.1448"** }
%"struct.std::__1::__hash_node_base.1448" = type { %"struct.std::__1::__hash_node_base.1448"* }
%"struct.std::__1::__compressed_pair_elem.1449" = type { %"class.std::__1::__bucket_list_deallocator.1450" }
%"class.std::__1::__bucket_list_deallocator.1450" = type { %"class.std::__1::__compressed_pair.1451" }
%"class.std::__1::__compressed_pair.1451" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.1455" = type { %"struct.std::__1::__compressed_pair_elem.1456" }
%"struct.std::__1::__compressed_pair_elem.1456" = type { %"struct.std::__1::__hash_node_base.1448" }
%"class.std::__1::__compressed_pair.1460" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.1463" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::vector.1328" = type { %"class.std::__1::__vector_base.1329" }
%"class.std::__1::__vector_base.1329" = type { %"struct.std::__1::pair.1330"*, %"struct.std::__1::pair.1330"*, %"class.std::__1::__compressed_pair.1332" }
%"struct.std::__1::pair.1330" = type { %"class.v8::internal::Handle.1331", i8* }
%"class.v8::internal::Handle.1331" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1332" = type { %"struct.std::__1::__compressed_pair_elem.1333" }
%"struct.std::__1::__compressed_pair_elem.1333" = type { %"struct.std::__1::pair.1330"* }
%"class.std::__1::unordered_map.1337" = type { %"class.std::__1::__hash_table.1338" }
%"class.std::__1::__hash_table.1338" = type <{ %"class.std::__1::unique_ptr.1339", %"class.std::__1::__compressed_pair.1349", %"class.std::__1::__compressed_pair.1354", %"class.std::__1::__compressed_pair.1357", [4 x i8] }>
%"class.std::__1::unique_ptr.1339" = type { %"class.std::__1::__compressed_pair.1340" }
%"class.std::__1::__compressed_pair.1340" = type { %"struct.std::__1::__compressed_pair_elem.1341", %"struct.std::__1::__compressed_pair_elem.1343" }
%"struct.std::__1::__compressed_pair_elem.1341" = type { %"struct.std::__1::__hash_node_base.1342"** }
%"struct.std::__1::__hash_node_base.1342" = type { %"struct.std::__1::__hash_node_base.1342"* }
%"struct.std::__1::__compressed_pair_elem.1343" = type { %"class.std::__1::__bucket_list_deallocator.1344" }
%"class.std::__1::__bucket_list_deallocator.1344" = type { %"class.std::__1::__compressed_pair.1345" }
%"class.std::__1::__compressed_pair.1345" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.1349" = type { %"struct.std::__1::__compressed_pair_elem.1350" }
%"struct.std::__1::__compressed_pair_elem.1350" = type { %"struct.std::__1::__hash_node_base.1342" }
%"class.std::__1::__compressed_pair.1354" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.1357" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unordered_map.1363" = type { %"class.std::__1::__hash_table.1364" }
%"class.std::__1::__hash_table.1364" = type <{ %"class.std::__1::unique_ptr.1365", %"class.std::__1::__compressed_pair.1375", %"class.std::__1::__compressed_pair.1380", %"class.std::__1::__compressed_pair.1383", [4 x i8] }>
%"class.std::__1::unique_ptr.1365" = type { %"class.std::__1::__compressed_pair.1366" }
%"class.std::__1::__compressed_pair.1366" = type { %"struct.std::__1::__compressed_pair_elem.1367", %"struct.std::__1::__compressed_pair_elem.1369" }
%"struct.std::__1::__compressed_pair_elem.1367" = type { %"struct.std::__1::__hash_node_base.1368"** }
%"struct.std::__1::__hash_node_base.1368" = type { %"struct.std::__1::__hash_node_base.1368"* }
%"struct.std::__1::__compressed_pair_elem.1369" = type { %"class.std::__1::__bucket_list_deallocator.1370" }
%"class.std::__1::__bucket_list_deallocator.1370" = type { %"class.std::__1::__compressed_pair.1371" }
%"class.std::__1::__compressed_pair.1371" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.1375" = type { %"struct.std::__1::__compressed_pair_elem.1376" }
%"struct.std::__1::__compressed_pair_elem.1376" = type { %"struct.std::__1::__hash_node_base.1368" }
%"class.std::__1::__compressed_pair.1380" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.1383" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unordered_set.1389" = type { %"class.std::__1::__hash_table.1390" }
%"class.std::__1::__hash_table.1390" = type <{ %"class.std::__1::unique_ptr.1391", %"class.std::__1::__compressed_pair.1401", %"class.std::__1::__compressed_pair.1406", %"class.std::__1::__compressed_pair.1408", [4 x i8] }>
%"class.std::__1::unique_ptr.1391" = type { %"class.std::__1::__compressed_pair.1392" }
%"class.std::__1::__compressed_pair.1392" = type { %"struct.std::__1::__compressed_pair_elem.1393", %"struct.std::__1::__compressed_pair_elem.1395" }
%"struct.std::__1::__compressed_pair_elem.1393" = type { %"struct.std::__1::__hash_node_base.1394"** }
%"struct.std::__1::__hash_node_base.1394" = type { %"struct.std::__1::__hash_node_base.1394"* }
%"struct.std::__1::__compressed_pair_elem.1395" = type { %"class.std::__1::__bucket_list_deallocator.1396" }
%"class.std::__1::__bucket_list_deallocator.1396" = type { %"class.std::__1::__compressed_pair.1397" }
%"class.std::__1::__compressed_pair.1397" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.1401" = type { %"struct.std::__1::__compressed_pair_elem.1402" }
%"struct.std::__1::__compressed_pair_elem.1402" = type { %"struct.std::__1::__hash_node_base.1394" }
%"class.std::__1::__compressed_pair.1406" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.1408" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::vector.1411" = type { i64*, i64, %"class.std::__1::__compressed_pair.1412" }
%"class.std::__1::__compressed_pair.1412" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.v8::HeapProfiler::ObjectNameResolver" = type { i32 (...)** }
%"class.v8::internal::EmbeddedVector.1268" = type { %"class.v8::internal::Vector", [64 x i8] }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::pair.1274" = type { i8*, i64 }
%"class.v8::internal::CombinedHeapObjectIterator" = type { %"class.v8::internal::SafepointScope", %"class.v8::internal::HeapObjectIterator", %"class.v8::internal::ReadOnlyHeapObjectIterator" }
%"class.v8::internal::SafepointScope" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::HeapObjectIterator" = type { %"class.v8::internal::Heap"*, %"class.std::__1::unique_ptr.1277", i32, %"class.v8::internal::HeapObjectsFilter"*, %"class.v8::internal::SpaceIterator"*, %"class.std::__1::unique_ptr.1283" }
%"class.std::__1::unique_ptr.1277" = type { %"class.std::__1::__compressed_pair.1278" }
%"class.std::__1::__compressed_pair.1278" = type { %"struct.std::__1::__compressed_pair_elem.1279" }
%"struct.std::__1::__compressed_pair_elem.1279" = type { %"class.v8::internal::SafepointScope"* }
%"class.v8::internal::HeapObjectsFilter" = type opaque
%"class.v8::internal::SpaceIterator" = type <{ i32 (...)**, %"class.v8::internal::Heap"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1283" = type { %"class.std::__1::__compressed_pair.1284" }
%"class.std::__1::__compressed_pair.1284" = type { %"struct.std::__1::__compressed_pair_elem.1285" }
%"struct.std::__1::__compressed_pair_elem.1285" = type { %"class.v8::internal::ObjectIterator"* }
%"class.v8::internal::ObjectIterator" = type { i32 (...)** }
%"class.v8::internal::ReadOnlyHeapObjectIterator" = type { %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::__wrap_iter.1289", i64 }
%"class.std::__1::__wrap_iter.1289" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::unique_ptr.1663" = type { %"class.std::__1::__compressed_pair.1664" }
%"class.std::__1::__compressed_pair.1664" = type { %"struct.std::__1::__compressed_pair_elem.1665", %"struct.std::__1::__compressed_pair_elem.1666" }
%"struct.std::__1::__compressed_pair_elem.1665" = type { %"struct.std::__1::__hash_node.1660"* }
%"struct.std::__1::__hash_node.1660" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type.1659" }
%"struct.std::__1::__hash_value_type.1659" = type { %"struct.std::__1::pair.1274" }
%"struct.std::__1::__compressed_pair_elem.1666" = type { %"class.std::__1::__hash_node_destructor.1667" }
%"class.std::__1::__hash_node_destructor.1667" = type <{ %"class.std::__1::allocator.22"*, i8, [7 x i8] }>
%"class.std::__1::allocator.22" = type { i8 }
%"class.std::__1::unordered_map.1297" = type { %"class.std::__1::__hash_table.1298" }
%"class.std::__1::__hash_table.1298" = type <{ %"class.std::__1::unique_ptr.1299", %"class.std::__1::__compressed_pair.1309", %"class.std::__1::__compressed_pair.1314", %"class.std::__1::__compressed_pair.1317", [4 x i8] }>
%"class.std::__1::unique_ptr.1299" = type { %"class.std::__1::__compressed_pair.1300" }
%"class.std::__1::__compressed_pair.1300" = type { %"struct.std::__1::__compressed_pair_elem.1301", %"struct.std::__1::__compressed_pair_elem.1303" }
%"struct.std::__1::__compressed_pair_elem.1301" = type { %"struct.std::__1::__hash_node_base.1302"** }
%"struct.std::__1::__hash_node_base.1302" = type { %"struct.std::__1::__hash_node_base.1302"* }
%"struct.std::__1::__compressed_pair_elem.1303" = type { %"class.std::__1::__bucket_list_deallocator.1304" }
%"class.std::__1::__bucket_list_deallocator.1304" = type { %"class.std::__1::__compressed_pair.1305" }
%"class.std::__1::__compressed_pair.1305" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.1309" = type { %"struct.std::__1::__compressed_pair_elem.1310" }
%"struct.std::__1::__compressed_pair_elem.1310" = type { %"struct.std::__1::__hash_node_base.1302" }
%"class.std::__1::__compressed_pair.1314" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.1317" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::OutputStream" = type { i32 (...)** }
%"class.std::__1::vector.1290" = type { %"class.std::__1::__vector_base.1291" }
%"class.std::__1::__vector_base.1291" = type { %"struct.v8::HeapStatsUpdate"*, %"struct.v8::HeapStatsUpdate"*, %"class.std::__1::__compressed_pair.1292" }
%"struct.v8::HeapStatsUpdate" = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.1292" = type { %"struct.std::__1::__compressed_pair_elem.1293" }
%"struct.std::__1::__compressed_pair_elem.1293" = type { %"struct.v8::HeapStatsUpdate"* }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Script" = type { %"class.v8::internal::TorqueGeneratedScript" }
%"class.v8::internal::TorqueGeneratedScript" = type { %"class.v8::internal::Struct" }
%"class.v8::internal::Struct" = type { %"class.v8::internal::TorqueGeneratedStruct" }
%"class.v8::internal::TorqueGeneratedStruct" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::Script::PositionInfo" = type { i32, i32, i32, i32 }
%"class.v8::internal::ScopeInfo" = type { %"class.v8::internal::TorqueGeneratedScopeInfo" }
%"class.v8::internal::TorqueGeneratedScopeInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PrototypeIterator" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Object", %"class.v8::internal::Handle.1133", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::internal::JSFunction" = type { %"class.v8::internal::JSFunctionOrBoundFunction" }
%"class.v8::internal::JSFunctionOrBoundFunction" = type { %"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" }
%"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Representation" = type { i8 }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }
%"class.v8::internal::RootsReferencesExtractor" = type <{ %"class.v8::internal::RootVisitor", %"class.v8::internal::V8HeapExplorer"*, i8, [7 x i8] }>
%"class.v8::internal::RootVisitor" = type { i32 (...)** }
%"class.v8::internal::IndexedReferencesExtractor" = type <{ %"class.v8::internal::ObjectVisitor", %"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapObject", %"class.v8::internal::CompressedMaybeObjectSlot", %"class.v8::internal::CompressedMaybeObjectSlot", %"class.v8::internal::HeapEntry"*, i32, [4 x i8] }>
%"class.v8::internal::ObjectVisitor" = type { i32 (...)** }
%"class.v8::internal::CompressedMaybeObjectSlot" = type { %"class.v8::internal::SlotBase.1478" }
%"class.v8::internal::SlotBase.1478" = type { i64 }
%"class.v8::internal::JSGlobalObject" = type { %"class.v8::internal::JSSpecialObject" }
%"class.v8::internal::JSSpecialObject" = type { %"class.v8::internal::TorqueGeneratedJSSpecialObject" }
%"class.v8::internal::TorqueGeneratedJSSpecialObject" = type { %"class.v8::internal::JSCustomElementsObject" }
%"class.v8::internal::JSCustomElementsObject" = type { %"class.v8::internal::TorqueGeneratedJSCustomElementsObject" }
%"class.v8::internal::TorqueGeneratedJSCustomElementsObject" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::GlobalObjectsEnumerator" = type { %"class.v8::internal::RootVisitor", %"class.v8::internal::Isolate"*, %"class.std::__1::vector.1499" }
%"class.std::__1::vector.1499" = type { %"class.std::__1::__vector_base.1500" }
%"class.std::__1::__vector_base.1500" = type { %"class.v8::internal::Handle.1331"*, %"class.v8::internal::Handle.1331"*, %"class.std::__1::__compressed_pair.1501" }
%"class.std::__1::__compressed_pair.1501" = type { %"struct.std::__1::__compressed_pair_elem.1502" }
%"struct.std::__1::__compressed_pair_elem.1502" = type { %"class.v8::internal::Handle.1331"* }
%"class.v8::internal::EmbedderGraphEntriesAllocator" = type { %"class.v8::internal::HeapEntriesAllocator", %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::StringsStorage"*, %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::EmbedderGraph::Node" = type { i32 (...)** }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::EmbedderGraphImpl" = type { %"class.v8::EmbedderGraph", %"class.std::__1::vector.1509", %"class.std::__1::vector.1522" }
%"class.v8::EmbedderGraph" = type { i32 (...)** }
%"class.std::__1::vector.1509" = type { %"class.std::__1::__vector_base.1510" }
%"class.std::__1::__vector_base.1510" = type { %"class.std::__1::unique_ptr.1511"*, %"class.std::__1::unique_ptr.1511"*, %"class.std::__1::__compressed_pair.1517" }
%"class.std::__1::unique_ptr.1511" = type { %"class.std::__1::__compressed_pair.1512" }
%"class.std::__1::__compressed_pair.1512" = type { %"struct.std::__1::__compressed_pair_elem.1513" }
%"struct.std::__1::__compressed_pair_elem.1513" = type { %"class.v8::EmbedderGraph::Node"* }
%"class.std::__1::__compressed_pair.1517" = type { %"struct.std::__1::__compressed_pair_elem.1518" }
%"struct.std::__1::__compressed_pair_elem.1518" = type { %"class.std::__1::unique_ptr.1511"* }
%"class.std::__1::vector.1522" = type { %"class.std::__1::__vector_base.1523" }
%"class.std::__1::__vector_base.1523" = type { %"struct.v8::internal::EmbedderGraphImpl::Edge"*, %"struct.v8::internal::EmbedderGraphImpl::Edge"*, %"class.std::__1::__compressed_pair.1524" }
%"struct.v8::internal::EmbedderGraphImpl::Edge" = type { %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"*, i8* }
%"class.std::__1::__compressed_pair.1524" = type { %"struct.std::__1::__compressed_pair_elem.1525" }
%"struct.std::__1::__compressed_pair_elem.1525" = type { %"struct.v8::internal::EmbedderGraphImpl::Edge"* }
%"class.v8::internal::HeapSnapshotJSONSerializer" = type { %"class.v8::internal::HeapSnapshot"*, %"class.v8::base::CustomMatcherTemplateHashMapImpl", i32, i32, %"class.v8::internal::OutputStreamWriter"* }
%"class.v8::internal::OutputStreamWriter" = type <{ %"class.v8::OutputStream"*, i32, [4 x i8], %"class.v8::internal::ScopedVector", i32, i8, [3 x i8] }>
%"class.v8::internal::ScopedVector" = type { %"class.v8::internal::Vector" }
%"class.v8::Platform" = type { i32 (...)** }
%class.anon.1721 = type { i8** }
%class.anon.1719 = type { i8 }
%"class.v8::internal::EmbeddedVector.1545" = type <{ %"class.v8::internal::Vector", [68 x i8], [4 x i8] }>
%"class.v8::internal::EmbeddedVector.1548" = type <{ %"class.v8::internal::Vector", [34 x i8], [6 x i8] }>
%"class.v8::internal::EmbeddedVector.1538" = type <{ %"class.v8::internal::Vector", [35 x i8], [5 x i8] }>
%"class.v8::internal::EmbeddedVector.1539" = type <{ %"class.v8::internal::Vector", [82 x i8], [6 x i8] }>
%"class.v8::internal::EmbeddedVector.1542" = type <{ %"class.v8::internal::Vector", [46 x i8], [2 x i8] }>
%"class.v8::internal::EmbeddedVector.1553" = type <{ %"class.v8::internal::Vector", [45 x i8], [3 x i8] }>
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::RelocInfo" = type { i64, i8, i64, %"class.v8::internal::Code", i64 }
%"class.v8::internal::Code" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RelocIterator" = type { i8*, i8*, %"class.v8::internal::RelocInfo", i8, i32 }
%"class.v8::internal::EmbedderGraphImpl::V8NodeImpl" = type { %"class.v8::EmbedderGraph::Node", %"class.v8::internal::Object" }
%"class.v8::internal::EmbeddedVector.1617" = type <{ %"class.v8::internal::Vector", [11 x i8], [5 x i8] }>
%"class.std::__1::__bit_iterator" = type <{ i64*, i32, [4 x i8] }>

$_ZNK2v88internal18SharedFunctionInfo4NameEv = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEE6resizeEmb = comdat any

$_ZN2v88internal13ObjectVisitorD2Ev = comdat any

$_ZN2v88internal11RootVisitorD2Ev = comdat any

$_ZN2v88internal23GlobalObjectsEnumeratorD2Ev = comdat any

$_ZN2v88internal17EmbedderGraphImplD2Ev = comdat any

$_ZN2v88internal14V8HeapExplorerD2Ev = comdat any

$_ZN2v88internal14V8HeapExplorerD0Ev = comdat any

$_ZN2v88internal20HeapEntriesAllocatorD2Ev = comdat any

$_ZN2v88internal29EmbedderGraphEntriesAllocatorD0Ev = comdat any

$_ZN2v88internal21HeapSnapshotGeneratorD2Ev = comdat any

$_ZN2v88internal21HeapSnapshotGeneratorD0Ev = comdat any

$_ZN2v88internal17PrototypeIterator7AdvanceEv = comdat any

$_ZNK2v88internal10JSFunction9prototypeENS0_16PtrComprCageBaseE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIS2_S7_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS2_JRS2_S6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_S2_EEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIS2_S7_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIS2_S7_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm = comdat any

$_ZNK2v88internal14Representation8MnemonicEv = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIiJiS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZN2v88internal24RootsReferencesExtractorD0Ev = comdat any

$_ZN2v88internal24RootsReferencesExtractor17VisitRootPointersENS0_4RootEPKcNS0_14FullObjectSlotES5_ = comdat any

$_ZN2v88internal24RootsReferencesExtractor16VisitRootPointerENS0_4RootEPKcNS0_14FullObjectSlotE = comdat any

$_ZN2v88internal24RootsReferencesExtractor17VisitRootPointersENS0_4RootEPKcNS0_27OffHeapCompressedObjectSlotES5_ = comdat any

$_ZN2v88internal11RootVisitor11SynchronizeENS0_22VisitorSynchronization7SyncTagE = comdat any

$_ZN2v88internal11RootVisitor16VisitRootPointerENS0_4RootEPKcNS0_14FullObjectSlotE = comdat any

$_ZN2v88internal26IndexedReferencesExtractorD0Ev = comdat any

$_ZN2v88internal26IndexedReferencesExtractor13VisitPointersENS0_10HeapObjectENS0_20CompressedObjectSlotES3_ = comdat any

$_ZN2v88internal26IndexedReferencesExtractor13VisitPointersENS0_10HeapObjectENS0_25CompressedMaybeObjectSlotES3_ = comdat any

$_ZN2v88internal13ObjectVisitor23VisitCustomWeakPointersENS0_10HeapObjectENS0_20CompressedObjectSlotES3_ = comdat any

$_ZN2v88internal13ObjectVisitor12VisitPointerENS0_10HeapObjectENS0_20CompressedObjectSlotE = comdat any

$_ZN2v88internal13ObjectVisitor12VisitPointerENS0_10HeapObjectENS0_25CompressedMaybeObjectSlotE = comdat any

$_ZN2v88internal13ObjectVisitor22VisitCustomWeakPointerENS0_10HeapObjectENS0_20CompressedObjectSlotE = comdat any

$_ZN2v88internal13ObjectVisitor14VisitEphemeronENS0_10HeapObjectEiNS0_20CompressedObjectSlotES3_ = comdat any

$_ZN2v88internal26IndexedReferencesExtractor15VisitCodeTargetENS0_4CodeEPNS0_9RelocInfoE = comdat any

$_ZN2v88internal26IndexedReferencesExtractor20VisitEmbeddedPointerENS0_4CodeEPNS0_9RelocInfoE = comdat any

$_ZN2v88internal13ObjectVisitor17VisitRuntimeEntryENS0_4CodeEPNS0_9RelocInfoE = comdat any

$_ZN2v88internal13ObjectVisitor22VisitExternalReferenceENS0_4CodeEPNS0_9RelocInfoE = comdat any

$_ZN2v88internal13ObjectVisitor22VisitExternalReferenceENS0_7ForeignEPm = comdat any

$_ZN2v88internal13ObjectVisitor22VisitInternalReferenceENS0_4CodeEPNS0_9RelocInfoE = comdat any

$_ZN2v88internal13ObjectVisitor18VisitOffHeapTargetENS0_4CodeEPNS0_9RelocInfoE = comdat any

$_ZN2v88internal26IndexedReferencesExtractor15VisitMapPointerENS0_10HeapObjectE = comdat any

$_ZN2v88internal23GlobalObjectsEnumeratorD0Ev = comdat any

$_ZN2v88internal23GlobalObjectsEnumerator17VisitRootPointersENS0_4RootEPKcNS0_14FullObjectSlotES5_ = comdat any

$_ZN2v88internal23GlobalObjectsEnumerator17VisitRootPointersENS0_4RootEPKcNS0_27OffHeapCompressedObjectSlotES5_ = comdat any

$_ZN2v88internal23GlobalObjectsEnumerator21VisitRootPointersImplINS0_14FullObjectSlotEEEvNS0_4RootEPKcT_S7_ = comdat any

$_ZN2v88internal23GlobalObjectsEnumerator21VisitRootPointersImplINS0_27OffHeapCompressedObjectSlotEEEvNS0_4RootEPKcT_S7_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIS2_S7_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS2_EENS_15__hash_iteratorIPNS_11__hash_nodeIS7_S2_EEEERKT_ = comdat any

$_ZN2v88internal17EmbedderGraphImpl6V8NodeERKNS_5LocalINS_5ValueEEE = comdat any

$_ZN2v88internal17EmbedderGraphImpl7AddNodeENSt3__110unique_ptrINS_13EmbedderGraph4NodeENS2_14default_deleteIS5_EEEE = comdat any

$_ZN2v88internal17EmbedderGraphImpl7AddEdgeEPNS_13EmbedderGraph4NodeES4_PKc = comdat any

$_ZN2v88internal17EmbedderGraphImplD0Ev = comdat any

$_ZN2v88internal17EmbedderGraphImpl10V8NodeImplD0Ev = comdat any

$_ZN2v88internal17EmbedderGraphImpl10V8NodeImpl4NameEv = comdat any

$_ZN2v88internal17EmbedderGraphImpl10V8NodeImpl11SizeInBytesEv = comdat any

$_ZN2v813EmbedderGraph4Node11WrapperNodeEv = comdat any

$_ZN2v813EmbedderGraph4Node10IsRootNodeEv = comdat any

$_ZN2v88internal17EmbedderGraphImpl10V8NodeImpl14IsEmbedderNodeEv = comdat any

$_ZN2v813EmbedderGraph4Node10NamePrefixEv = comdat any

$_ZN2v813EmbedderGraph4Node15GetNativeObjectEv = comdat any

$_ZN2v813EmbedderGraph4Node15GetDetachednessEv = comdat any

$_ZN2v813EmbedderGraph4NodeD2Ev = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN2v813EmbedderGraph4NodeENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci = comdat any

$_ZN2v88internal12StringHasher20HashSequentialStringIcEEjPKT_im = comdat any

$_ZN2v88internal18OutputStreamWriter13AddNumberImplIjEEvT_PKc = comdat any

$_ZNSt3__15dequeIN2v88internal13HeapGraphEdgeENS_9allocatorIS3_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal13HeapGraphEdgeENS_9allocatorIS4_EEE9push_backEOS4_ = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal13HeapGraphEdgeENS_9allocatorIS4_EEE10push_frontEOS4_ = comdat any

$_ZNSt3__15dequeIN2v88internal9HeapEntryENS_9allocatorIS3_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal9HeapEntryENS_9allocatorIS4_EEE9push_backEOS4_ = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal9HeapEntryENS_9allocatorIS4_EEE10push_frontEOS4_ = comdat any

$_ZNSt3__16vectorIPN2v88internal13HeapGraphEdgeENS_9allocatorIS4_EEE8__appendEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJjS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZN2v84base19TemplateHashMapImplIPvS2_NS0_18KeyEqualityMatcherIS2_EENS0_23DefaultAllocationPolicyEE6ResizeEv = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvmEENS_22__unordered_map_hasherIS2_S3_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S3_S8_S6_Lb1EEENS_9allocatorIS3_EEE4findIS2_EENS_15__hash_iteratorIPNS_11__hash_nodeIS3_S2_EEEERKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvmEENS_22__unordered_map_hasherIS2_S3_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S3_S8_S6_Lb1EEENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS2_JNS_4pairIKS2_mEEEEENSG_INS_15__hash_iteratorIPNS_11__hash_nodeIS3_S2_EEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvmEENS_22__unordered_map_hasherIS2_S3_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S3_S8_S6_Lb1EEENS_9allocatorIS3_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvmEENS_22__unordered_map_hasherIS2_S3_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S3_S8_S6_Lb1EEENS_9allocatorIS3_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImPvEENS_22__unordered_map_hasherImS3_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE25__emplace_unique_key_argsImJRKmRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_S2_EEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImPvEENS_22__unordered_map_hasherImS3_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImPvEENS_22__unordered_map_hasherImS3_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvmEENS_22__unordered_map_hasherIS2_S3_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S3_S8_S6_Lb1EEENS_9allocatorIS3_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_S2_EEEE = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_ = comdat any

$_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_ = comdat any

$_ZNSt3__112__hash_tableIN2v88internal14JSGlobalObjectENS2_6Object6HasherENS_8equal_toIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIN2v88internal14JSGlobalObjectENS2_6Object6HasherENS_8equal_toIS3_EENS_9allocatorIS3_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIN2v88internal14JSGlobalObjectENS2_6Object6HasherENS_8equal_toIS3_EENS_9allocatorIS3_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6ObjectEPKcEENS_22__unordered_map_hasherIS4_S7_NS4_6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S7_SB_S9_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS4_JS4_RS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6ObjectEPKcEENS_22__unordered_map_hasherIS4_S7_NS4_6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S7_SB_S9_Lb1EEENS_9allocatorIS7_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6ObjectEPKcEENS_22__unordered_map_hasherIS4_S7_NS4_6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S7_SB_S9_Lb1EEENS_9allocatorIS7_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14JSGlobalObjectEPKcEENS_22__unordered_map_hasherIS4_S7_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS4_JS4_RKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14JSGlobalObjectEPKcEENS_22__unordered_map_hasherIS4_S7_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14JSGlobalObjectEPKcEENS_22__unordered_map_hasherIS4_S7_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm = comdat any

$_ZN2v84base19TemplateHashMapImplIPvS2_NS0_26HashEqualityThenKeyMatcherIS2_PFbS2_S2_EEENS0_23DefaultAllocationPolicyEE14LookupOrInsertIS2_ZNS8_14LookupOrInsertIZNS8_14LookupOrInsertERKS2_jEUlvE_EEPNS0_20TemplateHashMapEntryIS2_S2_EESC_jRKT_EUlvE_SD_EESG_SJ_jRKT0_RKT1_ = comdat any

$_ZN2v84base19TemplateHashMapImplIPvS2_NS0_26HashEqualityThenKeyMatcherIS2_PFbS2_S2_EEENS0_23DefaultAllocationPolicyEE6ResizeEv = comdat any

$_ZTVN2v88internal24RootsReferencesExtractorE = comdat any

$_ZTVN2v88internal26IndexedReferencesExtractorE = comdat any

$_ZTVN2v88internal23GlobalObjectsEnumeratorE = comdat any

$_ZTVN2v88internal17EmbedderGraphImplE = comdat any

$_ZTVN2v88internal17EmbedderGraphImpl10V8NodeImplE = comdat any

@.str = private unnamed_addr constant [8 x i8] c"%d / %s\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"%6zu @%6u %*c %s%s: \00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"%s %.40s\0A\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"\5Cn\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"\22\0A\00", align 1
@.str.7 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"$\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"^\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"!!! unknown edge type: %d \00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"/hidden/\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"/object/\00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"/closure/\00", align 1
@.str.17 = private unnamed_addr constant [9 x i8] c"/string/\00", align 1
@.str.18 = private unnamed_addr constant [7 x i8] c"/code/\00", align 1
@.str.19 = private unnamed_addr constant [8 x i8] c"/array/\00", align 1
@.str.20 = private unnamed_addr constant [9 x i8] c"/regexp/\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"/number/\00", align 1
@.str.22 = private unnamed_addr constant [9 x i8] c"/native/\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"/synthetic/\00", align 1
@.str.24 = private unnamed_addr constant [22 x i8] c"/concatenated string/\00", align 1
@.str.25 = private unnamed_addr constant [16 x i8] c"/sliced string/\00", align 1
@.str.26 = private unnamed_addr constant [9 x i8] c"/symbol/\00", align 1
@.str.27 = private unnamed_addr constant [9 x i8] c"/bigint/\00", align 1
@.str.28 = private unnamed_addr constant [4 x i8] c"???\00", align 1
@.str.29 = private unnamed_addr constant [11 x i8] c"(GC roots)\00", align 1
@.str.30 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.31 = private unnamed_addr constant [14 x i8] c"is_complete()\00", align 1
@_ZN2v88internal14HeapObjectsMap21kInternalRootObjectIdE = hidden local_unnamed_addr constant i32 1, align 4
@_ZN2v88internal14HeapObjectsMap16kGcRootsObjectIdE = hidden local_unnamed_addr constant i32 3, align 4
@_ZN2v88internal14HeapObjectsMap22kGcRootsFirstSubrootIdE = hidden local_unnamed_addr constant i32 5, align 4
@_ZN2v88internal14HeapObjectsMap23kFirstAvailableObjectIdE = hidden local_unnamed_addr constant i32 55, align 4
@_ZN2v88internal32FLAG_heap_profiler_trace_objectsE = external local_unnamed_addr global i8, align 1
@.str.32 = private unnamed_addr constant [53 x i8] c"Move object from %p to %p old size %6d new size %6d\0A\00", align 1
@.str.33 = private unnamed_addr constant [58 x i8] c"Update object size : %p with old size %d and new size %d\0A\00", align 1
@.str.34 = private unnamed_addr constant [65 x i8] c"Begin HeapObjectsMap::UpdateHeapObjectsMap. map has %d entries.\0A\00", align 1
@.str.35 = private unnamed_addr constant [49 x i8] c"Update object      : %p %6d. Next address is %p\0A\00", align 1
@.str.36 = private unnamed_addr constant [63 x i8] c"End HeapObjectsMap::UpdateHeapObjectsMap. map has %d entries.\0A\00", align 1
@_ZTVN2v88internal14V8HeapExplorerE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::V8HeapExplorer"*)* @_ZN2v88internal14V8HeapExplorerD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::V8HeapExplorer"*)* @_ZN2v88internal14V8HeapExplorerD0Ev to i8*), i8* bitcast (%"class.v8::internal::HeapEntry"* (%"class.v8::internal::V8HeapExplorer"*, i8*)* @_ZN2v88internal14V8HeapExplorer13AllocateEntryEPv to i8*), i8* bitcast (%"class.v8::internal::HeapEntry"* (%"class.v8::internal::V8HeapExplorer"*, i64)* @_ZN2v88internal14V8HeapExplorer13AllocateEntryENS0_3SmiE to i8*)] }, align 8
@.str.37 = private unnamed_addr constant [11 x i8] c"smi number\00", align 1
@.str.38 = private unnamed_addr constant [12 x i8] c"native_bind\00", align 1
@.str.39 = private unnamed_addr constant [8 x i8] c"%s / %s\00", align 1
@.str.40 = private unnamed_addr constant [22 x i8] c"(concatenated string)\00", align 1
@.str.41 = private unnamed_addr constant [16 x i8] c"(sliced string)\00", align 1
@.str.42 = private unnamed_addr constant [15 x i8] c"private symbol\00", align 1
@.str.43 = private unnamed_addr constant [7 x i8] c"symbol\00", align 1
@.str.44 = private unnamed_addr constant [7 x i8] c"bigint\00", align 1
@.str.45 = private unnamed_addr constant [23 x i8] c"system / NativeContext\00", align 1
@.str.46 = private unnamed_addr constant [17 x i8] c"system / Context\00", align 1
@.str.47 = private unnamed_addr constant [12 x i8] c"heap number\00", align 1
@_ZN2v88internal38FLAG_heap_profiler_show_hidden_objectsE = external local_unnamed_addr global i8, align 1
@.str.48 = private unnamed_addr constant [22 x i8] c"system / Map (String)\00", align 1
@.str.49 = private unnamed_addr constant [29 x i8] c"system / Map (OneByteString)\00", align 1
@.str.50 = private unnamed_addr constant [26 x i8] c"system / Map (ConsString)\00", align 1
@.str.51 = private unnamed_addr constant [33 x i8] c"system / Map (ConsOneByteString)\00", align 1
@.str.52 = private unnamed_addr constant [28 x i8] c"system / Map (SlicedString)\00", align 1
@.str.53 = private unnamed_addr constant [35 x i8] c"system / Map (SlicedOneByteString)\00", align 1
@.str.54 = private unnamed_addr constant [30 x i8] c"system / Map (ExternalString)\00", align 1
@.str.55 = private unnamed_addr constant [37 x i8] c"system / Map (ExternalOneByteString)\00", align 1
@.str.56 = private unnamed_addr constant [38 x i8] c"system / Map (UncachedExternalString)\00", align 1
@.str.57 = private unnamed_addr constant [45 x i8] c"system / Map (UncachedExternalOneByteString)\00", align 1
@.str.58 = private unnamed_addr constant [34 x i8] c"system / Map (InternalizedString)\00", align 1
@.str.59 = private unnamed_addr constant [41 x i8] c"system / Map (OneByteInternalizedString)\00", align 1
@.str.60 = private unnamed_addr constant [42 x i8] c"system / Map (ExternalInternalizedString)\00", align 1
@.str.61 = private unnamed_addr constant [49 x i8] c"system / Map (ExternalOneByteInternalizedString)\00", align 1
@.str.62 = private unnamed_addr constant [50 x i8] c"system / Map (UncachedExternalInternalizedString)\00", align 1
@.str.63 = private unnamed_addr constant [57 x i8] c"system / Map (UncachedExternalOneByteInternalizedString)\00", align 1
@.str.64 = private unnamed_addr constant [26 x i8] c"system / Map (ThinString)\00", align 1
@.str.65 = private unnamed_addr constant [33 x i8] c"system / Map (ThinOneByteString)\00", align 1
@.str.66 = private unnamed_addr constant [13 x i8] c"system / Map\00", align 1
@.str.67 = private unnamed_addr constant [16 x i8] c"system / Symbol\00", align 1
@.str.68 = private unnamed_addr constant [20 x i8] c"system / BigIntBase\00", align 1
@.str.69 = private unnamed_addr constant [20 x i8] c"system / HeapNumber\00", align 1
@.str.70 = private unnamed_addr constant [17 x i8] c"system / Oddball\00", align 1
@.str.71 = private unnamed_addr constant [40 x i8] c"system / AbstractInternalClassSubclass1\00", align 1
@.str.72 = private unnamed_addr constant [40 x i8] c"system / AbstractInternalClassSubclass2\00", align 1
@.str.73 = private unnamed_addr constant [30 x i8] c"system / WasmCapiFunctionData\00", align 1
@.str.74 = private unnamed_addr constant [34 x i8] c"system / WasmExportedFunctionData\00", align 1
@.str.75 = private unnamed_addr constant [28 x i8] c"system / WasmJSFunctionData\00", align 1
@.str.76 = private unnamed_addr constant [22 x i8] c"system / WasmTypeInfo\00", align 1
@.str.77 = private unnamed_addr constant [39 x i8] c"system / PromiseFulfillReactionJobTask\00", align 1
@.str.78 = private unnamed_addr constant [38 x i8] c"system / PromiseRejectReactionJobTask\00", align 1
@.str.79 = private unnamed_addr constant [22 x i8] c"system / CallableTask\00", align 1
@.str.80 = private unnamed_addr constant [22 x i8] c"system / CallbackTask\00", align 1
@.str.81 = private unnamed_addr constant [39 x i8] c"system / PromiseResolveThenableJobTask\00", align 1
@.str.82 = private unnamed_addr constant [30 x i8] c"system / FunctionTemplateInfo\00", align 1
@.str.83 = private unnamed_addr constant [28 x i8] c"system / ObjectTemplateInfo\00", align 1
@.str.84 = private unnamed_addr constant [25 x i8] c"system / AccessCheckInfo\00", align 1
@.str.85 = private unnamed_addr constant [22 x i8] c"system / AccessorInfo\00", align 1
@.str.86 = private unnamed_addr constant [22 x i8] c"system / AccessorPair\00", align 1
@.str.87 = private unnamed_addr constant [31 x i8] c"system / AliasedArgumentsEntry\00", align 1
@.str.88 = private unnamed_addr constant [27 x i8] c"system / AllocationMemento\00", align 1
@.str.89 = private unnamed_addr constant [37 x i8] c"system / ArrayBoilerplateDescription\00", align 1
@.str.90 = private unnamed_addr constant [21 x i8] c"system / AsmWasmData\00", align 1
@.str.91 = private unnamed_addr constant [31 x i8] c"system / AsyncGeneratorRequest\00", align 1
@.str.92 = private unnamed_addr constant [22 x i8] c"system / BaselineData\00", align 1
@.str.93 = private unnamed_addr constant [20 x i8] c"system / BreakPoint\00", align 1
@.str.94 = private unnamed_addr constant [24 x i8] c"system / BreakPointInfo\00", align 1
@.str.95 = private unnamed_addr constant [30 x i8] c"system / CachedTemplateObject\00", align 1
@.str.96 = private unnamed_addr constant [25 x i8] c"system / CallHandlerInfo\00", align 1
@.str.97 = private unnamed_addr constant [24 x i8] c"system / ClassPositions\00", align 1
@.str.98 = private unnamed_addr constant [19 x i8] c"system / DebugInfo\00", align 1
@.str.99 = private unnamed_addr constant [19 x i8] c"system / EnumCache\00", align 1
@.str.100 = private unnamed_addr constant [22 x i8] c"system / FeedbackCell\00", align 1
@.str.101 = private unnamed_addr constant [34 x i8] c"system / FunctionTemplateRareData\00", align 1
@.str.102 = private unnamed_addr constant [25 x i8] c"system / InterceptorInfo\00", align 1
@.str.103 = private unnamed_addr constant [25 x i8] c"system / InterpreterData\00", align 1
@.str.104 = private unnamed_addr constant [23 x i8] c"system / ModuleRequest\00", align 1
@.str.105 = private unnamed_addr constant [27 x i8] c"system / PromiseCapability\00", align 1
@.str.106 = private unnamed_addr constant [25 x i8] c"system / PromiseReaction\00", align 1
@.str.107 = private unnamed_addr constant [34 x i8] c"system / PropertyDescriptorObject\00", align 1
@.str.108 = private unnamed_addr constant [23 x i8] c"system / PrototypeInfo\00", align 1
@.str.109 = private unnamed_addr constant [38 x i8] c"system / RegExpBoilerplateDescription\00", align 1
@.str.110 = private unnamed_addr constant [16 x i8] c"system / Script\00", align 1
@.str.111 = private unnamed_addr constant [35 x i8] c"system / SourceTextModuleInfoEntry\00", align 1
@.str.112 = private unnamed_addr constant [24 x i8] c"system / StackFrameInfo\00", align 1
@.str.113 = private unnamed_addr constant [35 x i8] c"system / TemplateObjectDescription\00", align 1
@.str.114 = private unnamed_addr constant [16 x i8] c"system / Tuple2\00", align 1
@.str.115 = private unnamed_addr constant [26 x i8] c"system / WasmExceptionTag\00", align 1
@.str.116 = private unnamed_addr constant [35 x i8] c"system / WasmIndirectFunctionTable\00", align 1
@.str.117 = private unnamed_addr constant [19 x i8] c"system / ByteArray\00", align 1
@.str.118 = private unnamed_addr constant [23 x i8] c"system / BytecodeArray\00", align 1
@.str.119 = private unnamed_addr constant [26 x i8] c"system / FixedDoubleArray\00", align 1
@.str.120 = private unnamed_addr constant [38 x i8] c"system / InternalClassWithSmiElements\00", align 1
@.str.121 = private unnamed_addr constant [33 x i8] c"system / SloppyArgumentsElements\00", align 1
@.str.122 = private unnamed_addr constant [26 x i8] c"system / ExportedSubClass\00", align 1
@.str.123 = private unnamed_addr constant [27 x i8] c"system / ExportedSubClass2\00", align 1
@.str.124 = private unnamed_addr constant [29 x i8] c"system / SmallOrderedHashMap\00", align 1
@.str.125 = private unnamed_addr constant [29 x i8] c"system / SmallOrderedHashSet\00", align 1
@.str.126 = private unnamed_addr constant [36 x i8] c"system / SmallOrderedNameDictionary\00", align 1
@.str.127 = private unnamed_addr constant [31 x i8] c"system / StrongDescriptorArray\00", align 1
@.str.128 = private unnamed_addr constant [26 x i8] c"system / SourceTextModule\00", align 1
@.str.129 = private unnamed_addr constant [25 x i8] c"system / SyntheticModule\00", align 1
@.str.130 = private unnamed_addr constant [40 x i8] c"system / UncompiledDataWithPreparseData\00", align 1
@.str.131 = private unnamed_addr constant [43 x i8] c"system / UncompiledDataWithoutPreparseData\00", align 1
@.str.132 = private unnamed_addr constant [14 x i8] c"system / Cell\00", align 1
@.str.133 = private unnamed_addr constant [22 x i8] c"system / CoverageInfo\00", align 1
@.str.134 = private unnamed_addr constant [27 x i8] c"system / EmbedderDataArray\00", align 1
@.str.135 = private unnamed_addr constant [24 x i8] c"system / FeedbackVector\00", align 1
@.str.136 = private unnamed_addr constant [19 x i8] c"system / FreeSpace\00", align 1
@.str.137 = private unnamed_addr constant [23 x i8] c"system / InternalClass\00", align 1
@.str.138 = private unnamed_addr constant [41 x i8] c"system / InternalClassWithStructElements\00", align 1
@.str.139 = private unnamed_addr constant [24 x i8] c"system / MegaDomHandler\00", align 1
@.str.140 = private unnamed_addr constant [38 x i8] c"system / OnHeapBasicBlockProfilerData\00", align 1
@.str.141 = private unnamed_addr constant [22 x i8] c"system / PreparseData\00", align 1
@.str.142 = private unnamed_addr constant [23 x i8] c"system / PropertyArray\00", align 1
@.str.143 = private unnamed_addr constant [22 x i8] c"system / PropertyCell\00", align 1
@.str.144 = private unnamed_addr constant [19 x i8] c"system / ScopeInfo\00", align 1
@.str.145 = private unnamed_addr constant [28 x i8] c"system / SharedFunctionInfo\00", align 1
@.str.146 = private unnamed_addr constant [16 x i8] c"system / SmiBox\00", align 1
@.str.147 = private unnamed_addr constant [17 x i8] c"system / SmiPair\00", align 1
@.str.148 = private unnamed_addr constant [19 x i8] c"system / SortState\00", align 1
@.str.149 = private unnamed_addr constant [29 x i8] c"system / SwissNameDictionary\00", align 1
@.str.150 = private unnamed_addr constant [23 x i8] c"system / WeakArrayList\00", align 1
@.str.151 = private unnamed_addr constant [18 x i8] c"system / WeakCell\00", align 1
@.str.152 = private unnamed_addr constant [19 x i8] c"system / WasmArray\00", align 1
@.str.153 = private unnamed_addr constant [20 x i8] c"system / WasmStruct\00", align 1
@.str.154 = private unnamed_addr constant [17 x i8] c"system / JSProxy\00", align 1
@.str.155 = private unnamed_addr constant [24 x i8] c"system / JSGlobalObject\00", align 1
@.str.156 = private unnamed_addr constant [23 x i8] c"system / JSGlobalProxy\00", align 1
@.str.157 = private unnamed_addr constant [27 x i8] c"system / JSModuleNamespace\00", align 1
@.str.158 = private unnamed_addr constant [28 x i8] c"system / JSPrimitiveWrapper\00", align 1
@.str.159 = private unnamed_addr constant [31 x i8] c"system / JSAsyncFunctionObject\00", align 1
@.str.160 = private unnamed_addr constant [32 x i8] c"system / JSAsyncGeneratorObject\00", align 1
@.str.161 = private unnamed_addr constant [27 x i8] c"system / JSArgumentsObject\00", align 1
@.str.162 = private unnamed_addr constant [25 x i8] c"system / JSBoundFunction\00", align 1
@.str.163 = private unnamed_addr constant [20 x i8] c"system / JSDataView\00", align 1
@.str.164 = private unnamed_addr constant [22 x i8] c"system / JSTypedArray\00", align 1
@.str.165 = private unnamed_addr constant [15 x i8] c"system / JSMap\00", align 1
@.str.166 = private unnamed_addr constant [15 x i8] c"system / JSSet\00", align 1
@.str.167 = private unnamed_addr constant [19 x i8] c"system / JSWeakMap\00", align 1
@.str.168 = private unnamed_addr constant [19 x i8] c"system / JSWeakSet\00", align 1
@.str.169 = private unnamed_addr constant [17 x i8] c"system / JSArray\00", align 1
@.str.170 = private unnamed_addr constant [23 x i8] c"system / JSArrayBuffer\00", align 1
@.str.171 = private unnamed_addr constant [25 x i8] c"system / JSArrayIterator\00", align 1
@.str.172 = private unnamed_addr constant [33 x i8] c"system / JSAsyncFromSyncIterator\00", align 1
@.str.173 = private unnamed_addr constant [20 x i8] c"system / JSCollator\00", align 1
@.str.174 = private unnamed_addr constant [16 x i8] c"system / JSDate\00", align 1
@.str.175 = private unnamed_addr constant [26 x i8] c"system / JSDateTimeFormat\00", align 1
@.str.176 = private unnamed_addr constant [24 x i8] c"system / JSDisplayNames\00", align 1
@.str.177 = private unnamed_addr constant [32 x i8] c"system / JSFinalizationRegistry\00", align 1
@.str.178 = private unnamed_addr constant [22 x i8] c"system / JSListFormat\00", align 1
@.str.179 = private unnamed_addr constant [18 x i8] c"system / JSLocale\00", align 1
@.str.180 = private unnamed_addr constant [25 x i8] c"system / JSMessageObject\00", align 1
@.str.181 = private unnamed_addr constant [24 x i8] c"system / JSNumberFormat\00", align 1
@.str.182 = private unnamed_addr constant [23 x i8] c"system / JSPluralRules\00", align 1
@.str.183 = private unnamed_addr constant [19 x i8] c"system / JSPromise\00", align 1
@.str.184 = private unnamed_addr constant [18 x i8] c"system / JSRegExp\00", align 1
@.str.185 = private unnamed_addr constant [32 x i8] c"system / JSRegExpStringIterator\00", align 1
@.str.186 = private unnamed_addr constant [30 x i8] c"system / JSRelativeTimeFormat\00", align 1
@.str.187 = private unnamed_addr constant [27 x i8] c"system / JSSegmentIterator\00", align 1
@.str.188 = private unnamed_addr constant [21 x i8] c"system / JSSegmenter\00", align 1
@.str.189 = private unnamed_addr constant [20 x i8] c"system / JSSegments\00", align 1
@.str.190 = private unnamed_addr constant [26 x i8] c"system / JSStringIterator\00", align 1
@.str.191 = private unnamed_addr constant [27 x i8] c"system / JSV8BreakIterator\00", align 1
@.str.192 = private unnamed_addr constant [19 x i8] c"system / JSWeakRef\00", align 1
@.str.193 = private unnamed_addr constant [29 x i8] c"system / WasmExceptionObject\00", align 1
@.str.194 = private unnamed_addr constant [26 x i8] c"system / WasmGlobalObject\00", align 1
@.str.195 = private unnamed_addr constant [26 x i8] c"system / WasmMemoryObject\00", align 1
@.str.196 = private unnamed_addr constant [26 x i8] c"system / WasmModuleObject\00", align 1
@.str.197 = private unnamed_addr constant [25 x i8] c"system / WasmTableObject\00", align 1
@.str.198 = private unnamed_addr constant [17 x i8] c"system / Foreign\00", align 1
@.str.199 = private unnamed_addr constant [26 x i8] c"system / WasmFunctionData\00", align 1
@.str.200 = private unnamed_addr constant [20 x i8] c"system / FixedArray\00", align 1
@.str.201 = private unnamed_addr constant [30 x i8] c"system / ExportedSubClassBase\00", align 1
@.str.202 = private unnamed_addr constant [25 x i8] c"system / DescriptorArray\00", align 1
@.str.203 = private unnamed_addr constant [24 x i8] c"system / WeakFixedArray\00", align 1
@.str.204 = private unnamed_addr constant [18 x i8] c"system / JSObject\00", align 1
@.str.205 = private unnamed_addr constant [27 x i8] c"system / JSGeneratorObject\00", align 1
@.str.206 = private unnamed_addr constant [20 x i8] c"system / JSFunction\00", align 1
@.str.207 = private unnamed_addr constant [21 x i8] c"system / LoadHandler\00", align 1
@.str.208 = private unnamed_addr constant [22 x i8] c"system / StoreHandler\00", align 1
@.str.209 = private unnamed_addr constant [24 x i8] c"system / AllocationSite\00", align 1
@.str.210 = private unnamed_addr constant [28 x i8] c"system / EphemeronHashTable\00", align 1
@.str.211 = private unnamed_addr constant [26 x i8] c"system / GlobalDictionary\00", align 1
@.str.212 = private unnamed_addr constant [24 x i8] c"system / NameDictionary\00", align 1
@.str.213 = private unnamed_addr constant [26 x i8] c"system / NumberDictionary\00", align 1
@.str.214 = private unnamed_addr constant [24 x i8] c"system / OrderedHashMap\00", align 1
@.str.215 = private unnamed_addr constant [24 x i8] c"system / OrderedHashSet\00", align 1
@.str.216 = private unnamed_addr constant [31 x i8] c"system / OrderedNameDictionary\00", align 1
@.str.217 = private unnamed_addr constant [32 x i8] c"system / SimpleNumberDictionary\00", align 1
@.str.218 = private unnamed_addr constant [34 x i8] c"system / ClosureFeedbackCellArray\00", align 1
@.str.219 = private unnamed_addr constant [38 x i8] c"system / ObjectBoilerplateDescription\00", align 1
@.str.220 = private unnamed_addr constant [28 x i8] c"system / ScriptContextTable\00", align 1
@.str.221 = private unnamed_addr constant [22 x i8] c"system / AwaitContext\00", align 1
@.str.222 = private unnamed_addr constant [22 x i8] c"system / BlockContext\00", align 1
@.str.223 = private unnamed_addr constant [22 x i8] c"system / CatchContext\00", align 1
@.str.224 = private unnamed_addr constant [30 x i8] c"system / DebugEvaluateContext\00", align 1
@.str.225 = private unnamed_addr constant [21 x i8] c"system / EvalContext\00", align 1
@.str.226 = private unnamed_addr constant [25 x i8] c"system / FunctionContext\00", align 1
@.str.227 = private unnamed_addr constant [23 x i8] c"system / ModuleContext\00", align 1
@.str.228 = private unnamed_addr constant [23 x i8] c"system / ScriptContext\00", align 1
@.str.229 = private unnamed_addr constant [21 x i8] c"system / WithContext\00", align 1
@.str.230 = private unnamed_addr constant [25 x i8] c"system / TransitionArray\00", align 1
@.str.231 = private unnamed_addr constant [14 x i8] c"system / Code\00", align 1
@.str.232 = private unnamed_addr constant [27 x i8] c"system / CodeDataContainer\00", align 1
@.str.233 = private unnamed_addr constant [26 x i8] c"system / FeedbackMetadata\00", align 1
@.str.234 = private unnamed_addr constant [16 x i8] c"system / Filler\00", align 1
@.str.235 = private unnamed_addr constant [28 x i8] c"system / JSSpecialApiObject\00", align 1
@.str.236 = private unnamed_addr constant [34 x i8] c"system / JSArrayIteratorPrototype\00", align 1
@.str.237 = private unnamed_addr constant [29 x i8] c"system / JSIteratorPrototype\00", align 1
@.str.238 = private unnamed_addr constant [32 x i8] c"system / JSMapIteratorPrototype\00", align 1
@.str.239 = private unnamed_addr constant [27 x i8] c"system / JSObjectPrototype\00", align 1
@.str.240 = private unnamed_addr constant [28 x i8] c"system / JSPromisePrototype\00", align 1
@.str.241 = private unnamed_addr constant [27 x i8] c"system / JSRegExpPrototype\00", align 1
@.str.242 = private unnamed_addr constant [32 x i8] c"system / JSSetIteratorPrototype\00", align 1
@.str.243 = private unnamed_addr constant [24 x i8] c"system / JSSetPrototype\00", align 1
@.str.244 = private unnamed_addr constant [35 x i8] c"system / JSStringIteratorPrototype\00", align 1
@.str.245 = private unnamed_addr constant [31 x i8] c"system / JSTypedArrayPrototype\00", align 1
@.str.246 = private unnamed_addr constant [21 x i8] c"system / JSApiObject\00", align 1
@.str.247 = private unnamed_addr constant [39 x i8] c"system / Bigint64TypedArrayConstructor\00", align 1
@.str.248 = private unnamed_addr constant [40 x i8] c"system / Biguint64TypedArrayConstructor\00", align 1
@.str.249 = private unnamed_addr constant [38 x i8] c"system / Float32TypedArrayConstructor\00", align 1
@.str.250 = private unnamed_addr constant [38 x i8] c"system / Float64TypedArrayConstructor\00", align 1
@.str.251 = private unnamed_addr constant [36 x i8] c"system / Int16TypedArrayConstructor\00", align 1
@.str.252 = private unnamed_addr constant [36 x i8] c"system / Int32TypedArrayConstructor\00", align 1
@.str.253 = private unnamed_addr constant [35 x i8] c"system / Int8TypedArrayConstructor\00", align 1
@.str.254 = private unnamed_addr constant [37 x i8] c"system / Uint16TypedArrayConstructor\00", align 1
@.str.255 = private unnamed_addr constant [37 x i8] c"system / Uint32TypedArrayConstructor\00", align 1
@.str.256 = private unnamed_addr constant [43 x i8] c"system / Uint8ClampedTypedArrayConstructor\00", align 1
@.str.257 = private unnamed_addr constant [36 x i8] c"system / Uint8TypedArrayConstructor\00", align 1
@.str.258 = private unnamed_addr constant [28 x i8] c"system / JSArrayConstructor\00", align 1
@.str.259 = private unnamed_addr constant [30 x i8] c"system / JSPromiseConstructor\00", align 1
@.str.260 = private unnamed_addr constant [29 x i8] c"system / JSRegExpConstructor\00", align 1
@.str.261 = private unnamed_addr constant [26 x i8] c"system / JSMapKeyIterator\00", align 1
@.str.262 = private unnamed_addr constant [31 x i8] c"system / JSMapKeyValueIterator\00", align 1
@.str.263 = private unnamed_addr constant [28 x i8] c"system / JSMapValueIterator\00", align 1
@.str.264 = private unnamed_addr constant [31 x i8] c"system / JSSetKeyValueIterator\00", align 1
@.str.265 = private unnamed_addr constant [28 x i8] c"system / JSSetValueIterator\00", align 1
@.str.266 = private unnamed_addr constant [34 x i8] c"system / JSContextExtensionObject\00", align 1
@.str.267 = private unnamed_addr constant [17 x i8] c"system / JSError\00", align 1
@.str.268 = private unnamed_addr constant [28 x i8] c"system / WasmInstanceObject\00", align 1
@.str.269 = private unnamed_addr constant [25 x i8] c"system / WasmValueObject\00", align 1
@.str.270 = private unnamed_addr constant [19 x i8] c"system / HashTable\00", align 1
@.str.271 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.272 = private unnamed_addr constant [15 x i8] c"native_context\00", align 1
@.str.273 = private unnamed_addr constant [18 x i8] c"(bound arguments)\00", align 1
@.str.274 = private unnamed_addr constant [9 x i8] c"bindings\00", align 1
@.str.275 = private unnamed_addr constant [11 x i8] c"bound_this\00", align 1
@.str.276 = private unnamed_addr constant [15 x i8] c"bound_function\00", align 1
@.str.277 = private unnamed_addr constant [18 x i8] c"bound_argument_%d\00", align 1
@.str.278 = private unnamed_addr constant [12 x i8] c"initial_map\00", align 1
@.str.279 = private unnamed_addr constant [25 x i8] c"(function feedback cell)\00", align 1
@.str.280 = private unnamed_addr constant [14 x i8] c"feedback_cell\00", align 1
@.str.281 = private unnamed_addr constant [23 x i8] c"(shared function info)\00", align 1
@.str.282 = private unnamed_addr constant [7 x i8] c"shared\00", align 1
@.str.283 = private unnamed_addr constant [10 x i8] c"(context)\00", align 1
@.str.284 = private unnamed_addr constant [8 x i8] c"context\00", align 1
@.str.285 = private unnamed_addr constant [5 x i8] c"code\00", align 1
@.str.286 = private unnamed_addr constant [13 x i8] c"global_proxy\00", align 1
@.str.287 = private unnamed_addr constant [7 x i8] c"buffer\00", align 1
@.str.288 = private unnamed_addr constant [20 x i8] c"(object properties)\00", align 1
@.str.289 = private unnamed_addr constant [11 x i8] c"properties\00", align 1
@.str.290 = private unnamed_addr constant [18 x i8] c"(object elements)\00", align 1
@.str.291 = private unnamed_addr constant [9 x i8] c"elements\00", align 1
@.str.292 = private unnamed_addr constant [6 x i8] c"first\00", align 1
@.str.293 = private unnamed_addr constant [7 x i8] c"second\00", align 1
@.str.294 = private unnamed_addr constant [7 x i8] c"parent\00", align 1
@.str.295 = private unnamed_addr constant [7 x i8] c"actual\00", align 1
@.str.296 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.297 = private unnamed_addr constant [6 x i8] c"table\00", align 1
@.str.298 = private unnamed_addr constant [67 x i8] c"part of key (%s @%u) -> value (%s @%u) pair in WeakMap (table @%u)\00", align 1
@.str.299 = private unnamed_addr constant [11 x i8] c"scope_info\00", align 1
@.str.300 = private unnamed_addr constant [9 x i8] c"previous\00", align 1
@.str.301 = private unnamed_addr constant [10 x i8] c"extension\00", align 1
@.str.302 = private unnamed_addr constant [26 x i8] c"(context norm. map cache)\00", align 1
@.str.303 = private unnamed_addr constant [15 x i8] c"(context data)\00", align 1
@_ZN2v88internalL20native_context_namesE = internal unnamed_addr constant [249 x %struct.anon.1470] [%struct.anon.1470 { i32 3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.383, i32 0, i32 0) }, %struct.anon.1470 { i32 4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.384, i32 0, i32 0) }, %struct.anon.1470 { i32 5, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.385, i32 0, i32 0) }, %struct.anon.1470 { i32 6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.386, i32 0, i32 0) }, %struct.anon.1470 { i32 7, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.387, i32 0, i32 0) }, %struct.anon.1470 { i32 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.388, i32 0, i32 0) }, %struct.anon.1470 { i32 9, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.389, i32 0, i32 0) }, %struct.anon.1470 { i32 10, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.390, i32 0, i32 0) }, %struct.anon.1470 { i32 11, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.391, i32 0, i32 0) }, %struct.anon.1470 { i32 12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.392, i32 0, i32 0) }, %struct.anon.1470 { i32 13, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.393, i32 0, i32 0) }, %struct.anon.1470 { i32 14, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.394, i32 0, i32 0) }, %struct.anon.1470 { i32 15, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.395, i32 0, i32 0) }, %struct.anon.1470 { i32 16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.396, i32 0, i32 0) }, %struct.anon.1470 { i32 17, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.397, i32 0, i32 0) }, %struct.anon.1470 { i32 18, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.398, i32 0, i32 0) }, %struct.anon.1470 { i32 19, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.399, i32 0, i32 0) }, %struct.anon.1470 { i32 20, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.400, i32 0, i32 0) }, %struct.anon.1470 { i32 21, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.401, i32 0, i32 0) }, %struct.anon.1470 { i32 22, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.402, i32 0, i32 0) }, %struct.anon.1470 { i32 23, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.403, i32 0, i32 0) }, %struct.anon.1470 { i32 24, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.404, i32 0, i32 0) }, %struct.anon.1470 { i32 25, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.405, i32 0, i32 0) }, %struct.anon.1470 { i32 26, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.406, i32 0, i32 0) }, %struct.anon.1470 { i32 27, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.407, i32 0, i32 0) }, %struct.anon.1470 { i32 28, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.408, i32 0, i32 0) }, %struct.anon.1470 { i32 29, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.409, i32 0, i32 0) }, %struct.anon.1470 { i32 30, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.410, i32 0, i32 0) }, %struct.anon.1470 { i32 31, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.411, i32 0, i32 0) }, %struct.anon.1470 { i32 32, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.412, i32 0, i32 0) }, %struct.anon.1470 { i32 33, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.413, i32 0, i32 0) }, %struct.anon.1470 { i32 34, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.414, i32 0, i32 0) }, %struct.anon.1470 { i32 35, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.415, i32 0, i32 0) }, %struct.anon.1470 { i32 36, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.416, i32 0, i32 0) }, %struct.anon.1470 { i32 37, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.417, i32 0, i32 0) }, %struct.anon.1470 { i32 38, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.418, i32 0, i32 0) }, %struct.anon.1470 { i32 39, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.419, i32 0, i32 0) }, %struct.anon.1470 { i32 40, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.420, i32 0, i32 0) }, %struct.anon.1470 { i32 41, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.421, i32 0, i32 0) }, %struct.anon.1470 { i32 42, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.422, i32 0, i32 0) }, %struct.anon.1470 { i32 43, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.423, i32 0, i32 0) }, %struct.anon.1470 { i32 44, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.424, i32 0, i32 0) }, %struct.anon.1470 { i32 45, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.425, i32 0, i32 0) }, %struct.anon.1470 { i32 46, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.426, i32 0, i32 0) }, %struct.anon.1470 { i32 47, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.427, i32 0, i32 0) }, %struct.anon.1470 { i32 48, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.428, i32 0, i32 0) }, %struct.anon.1470 { i32 49, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.429, i32 0, i32 0) }, %struct.anon.1470 { i32 50, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.430, i32 0, i32 0) }, %struct.anon.1470 { i32 51, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.431, i32 0, i32 0) }, %struct.anon.1470 { i32 52, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.432, i32 0, i32 0) }, %struct.anon.1470 { i32 53, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.433, i32 0, i32 0) }, %struct.anon.1470 { i32 54, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.434, i32 0, i32 0) }, %struct.anon.1470 { i32 55, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.435, i32 0, i32 0) }, %struct.anon.1470 { i32 56, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.436, i32 0, i32 0) }, %struct.anon.1470 { i32 57, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.437, i32 0, i32 0) }, %struct.anon.1470 { i32 58, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.438, i32 0, i32 0) }, %struct.anon.1470 { i32 59, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.439, i32 0, i32 0) }, %struct.anon.1470 { i32 60, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.440, i32 0, i32 0) }, %struct.anon.1470 { i32 61, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.441, i32 0, i32 0) }, %struct.anon.1470 { i32 62, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.442, i32 0, i32 0) }, %struct.anon.1470 { i32 63, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.443, i32 0, i32 0) }, %struct.anon.1470 { i32 64, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.444, i32 0, i32 0) }, %struct.anon.1470 { i32 65, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.445, i32 0, i32 0) }, %struct.anon.1470 { i32 66, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.446, i32 0, i32 0) }, %struct.anon.1470 { i32 67, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.447, i32 0, i32 0) }, %struct.anon.1470 { i32 68, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.448, i32 0, i32 0) }, %struct.anon.1470 { i32 69, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.449, i32 0, i32 0) }, %struct.anon.1470 { i32 70, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.450, i32 0, i32 0) }, %struct.anon.1470 { i32 71, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.451, i32 0, i32 0) }, %struct.anon.1470 { i32 72, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.452, i32 0, i32 0) }, %struct.anon.1470 { i32 73, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.453, i32 0, i32 0) }, %struct.anon.1470 { i32 74, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.454, i32 0, i32 0) }, %struct.anon.1470 { i32 75, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.455, i32 0, i32 0) }, %struct.anon.1470 { i32 76, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.456, i32 0, i32 0) }, %struct.anon.1470 { i32 77, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.457, i32 0, i32 0) }, %struct.anon.1470 { i32 78, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.458, i32 0, i32 0) }, %struct.anon.1470 { i32 79, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.459, i32 0, i32 0) }, %struct.anon.1470 { i32 80, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.460, i32 0, i32 0) }, %struct.anon.1470 { i32 81, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.461, i32 0, i32 0) }, %struct.anon.1470 { i32 82, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.462, i32 0, i32 0) }, %struct.anon.1470 { i32 83, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.463, i32 0, i32 0) }, %struct.anon.1470 { i32 84, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.464, i32 0, i32 0) }, %struct.anon.1470 { i32 85, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.465, i32 0, i32 0) }, %struct.anon.1470 { i32 86, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.466, i32 0, i32 0) }, %struct.anon.1470 { i32 87, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.467, i32 0, i32 0) }, %struct.anon.1470 { i32 88, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.468, i32 0, i32 0) }, %struct.anon.1470 { i32 89, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.469, i32 0, i32 0) }, %struct.anon.1470 { i32 90, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.470, i32 0, i32 0) }, %struct.anon.1470 { i32 91, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.471, i32 0, i32 0) }, %struct.anon.1470 { i32 92, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.472, i32 0, i32 0) }, %struct.anon.1470 { i32 93, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.473, i32 0, i32 0) }, %struct.anon.1470 { i32 94, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.474, i32 0, i32 0) }, %struct.anon.1470 { i32 95, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.475, i32 0, i32 0) }, %struct.anon.1470 { i32 96, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.476, i32 0, i32 0) }, %struct.anon.1470 { i32 97, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.477, i32 0, i32 0) }, %struct.anon.1470 { i32 98, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.478, i32 0, i32 0) }, %struct.anon.1470 { i32 99, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.479, i32 0, i32 0) }, %struct.anon.1470 { i32 100, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.480, i32 0, i32 0) }, %struct.anon.1470 { i32 101, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.481, i32 0, i32 0) }, %struct.anon.1470 { i32 102, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.482, i32 0, i32 0) }, %struct.anon.1470 { i32 103, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.483, i32 0, i32 0) }, %struct.anon.1470 { i32 104, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.484, i32 0, i32 0) }, %struct.anon.1470 { i32 105, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.485, i32 0, i32 0) }, %struct.anon.1470 { i32 106, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.486, i32 0, i32 0) }, %struct.anon.1470 { i32 107, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.487, i32 0, i32 0) }, %struct.anon.1470 { i32 108, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.488, i32 0, i32 0) }, %struct.anon.1470 { i32 109, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.489, i32 0, i32 0) }, %struct.anon.1470 { i32 110, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.490, i32 0, i32 0) }, %struct.anon.1470 { i32 111, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.491, i32 0, i32 0) }, %struct.anon.1470 { i32 112, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.492, i32 0, i32 0) }, %struct.anon.1470 { i32 113, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.493, i32 0, i32 0) }, %struct.anon.1470 { i32 114, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.494, i32 0, i32 0) }, %struct.anon.1470 { i32 115, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.495, i32 0, i32 0) }, %struct.anon.1470 { i32 116, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.496, i32 0, i32 0) }, %struct.anon.1470 { i32 117, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.497, i32 0, i32 0) }, %struct.anon.1470 { i32 118, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.498, i32 0, i32 0) }, %struct.anon.1470 { i32 119, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.499, i32 0, i32 0) }, %struct.anon.1470 { i32 120, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.500, i32 0, i32 0) }, %struct.anon.1470 { i32 121, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.501, i32 0, i32 0) }, %struct.anon.1470 { i32 122, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.502, i32 0, i32 0) }, %struct.anon.1470 { i32 123, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.503, i32 0, i32 0) }, %struct.anon.1470 { i32 124, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.504, i32 0, i32 0) }, %struct.anon.1470 { i32 125, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.505, i32 0, i32 0) }, %struct.anon.1470 { i32 126, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.506, i32 0, i32 0) }, %struct.anon.1470 { i32 127, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.507, i32 0, i32 0) }, %struct.anon.1470 { i32 128, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.508, i32 0, i32 0) }, %struct.anon.1470 { i32 129, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.509, i32 0, i32 0) }, %struct.anon.1470 { i32 130, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.510, i32 0, i32 0) }, %struct.anon.1470 { i32 131, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.511, i32 0, i32 0) }, %struct.anon.1470 { i32 132, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.512, i32 0, i32 0) }, %struct.anon.1470 { i32 133, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.513, i32 0, i32 0) }, %struct.anon.1470 { i32 134, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.514, i32 0, i32 0) }, %struct.anon.1470 { i32 135, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.515, i32 0, i32 0) }, %struct.anon.1470 { i32 136, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.516, i32 0, i32 0) }, %struct.anon.1470 { i32 137, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.517, i32 0, i32 0) }, %struct.anon.1470 { i32 138, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.518, i32 0, i32 0) }, %struct.anon.1470 { i32 139, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.519, i32 0, i32 0) }, %struct.anon.1470 { i32 140, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.520, i32 0, i32 0) }, %struct.anon.1470 { i32 141, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.521, i32 0, i32 0) }, %struct.anon.1470 { i32 142, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.522, i32 0, i32 0) }, %struct.anon.1470 { i32 143, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.523, i32 0, i32 0) }, %struct.anon.1470 { i32 144, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.524, i32 0, i32 0) }, %struct.anon.1470 { i32 145, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.525, i32 0, i32 0) }, %struct.anon.1470 { i32 146, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.526, i32 0, i32 0) }, %struct.anon.1470 { i32 147, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.527, i32 0, i32 0) }, %struct.anon.1470 { i32 148, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.528, i32 0, i32 0) }, %struct.anon.1470 { i32 149, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.529, i32 0, i32 0) }, %struct.anon.1470 { i32 150, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.530, i32 0, i32 0) }, %struct.anon.1470 { i32 151, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.531, i32 0, i32 0) }, %struct.anon.1470 { i32 152, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.532, i32 0, i32 0) }, %struct.anon.1470 { i32 153, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.533, i32 0, i32 0) }, %struct.anon.1470 { i32 154, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.534, i32 0, i32 0) }, %struct.anon.1470 { i32 155, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.535, i32 0, i32 0) }, %struct.anon.1470 { i32 156, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.536, i32 0, i32 0) }, %struct.anon.1470 { i32 157, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.537, i32 0, i32 0) }, %struct.anon.1470 { i32 158, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.538, i32 0, i32 0) }, %struct.anon.1470 { i32 159, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.539, i32 0, i32 0) }, %struct.anon.1470 { i32 160, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.540, i32 0, i32 0) }, %struct.anon.1470 { i32 161, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.541, i32 0, i32 0) }, %struct.anon.1470 { i32 162, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.542, i32 0, i32 0) }, %struct.anon.1470 { i32 163, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.543, i32 0, i32 0) }, %struct.anon.1470 { i32 164, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.544, i32 0, i32 0) }, %struct.anon.1470 { i32 165, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.545, i32 0, i32 0) }, %struct.anon.1470 { i32 166, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.546, i32 0, i32 0) }, %struct.anon.1470 { i32 167, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.547, i32 0, i32 0) }, %struct.anon.1470 { i32 168, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.548, i32 0, i32 0) }, %struct.anon.1470 { i32 169, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.549, i32 0, i32 0) }, %struct.anon.1470 { i32 170, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.550, i32 0, i32 0) }, %struct.anon.1470 { i32 171, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.551, i32 0, i32 0) }, %struct.anon.1470 { i32 172, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.552, i32 0, i32 0) }, %struct.anon.1470 { i32 173, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.553, i32 0, i32 0) }, %struct.anon.1470 { i32 174, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.554, i32 0, i32 0) }, %struct.anon.1470 { i32 175, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.555, i32 0, i32 0) }, %struct.anon.1470 { i32 176, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.556, i32 0, i32 0) }, %struct.anon.1470 { i32 177, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.557, i32 0, i32 0) }, %struct.anon.1470 { i32 178, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.558, i32 0, i32 0) }, %struct.anon.1470 { i32 179, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.559, i32 0, i32 0) }, %struct.anon.1470 { i32 180, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.560, i32 0, i32 0) }, %struct.anon.1470 { i32 181, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.561, i32 0, i32 0) }, %struct.anon.1470 { i32 182, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.562, i32 0, i32 0) }, %struct.anon.1470 { i32 183, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.563, i32 0, i32 0) }, %struct.anon.1470 { i32 184, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.564, i32 0, i32 0) }, %struct.anon.1470 { i32 185, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.565, i32 0, i32 0) }, %struct.anon.1470 { i32 186, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.566, i32 0, i32 0) }, %struct.anon.1470 { i32 187, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.567, i32 0, i32 0) }, %struct.anon.1470 { i32 188, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.568, i32 0, i32 0) }, %struct.anon.1470 { i32 189, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.569, i32 0, i32 0) }, %struct.anon.1470 { i32 190, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.570, i32 0, i32 0) }, %struct.anon.1470 { i32 191, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.571, i32 0, i32 0) }, %struct.anon.1470 { i32 192, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.572, i32 0, i32 0) }, %struct.anon.1470 { i32 193, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.573, i32 0, i32 0) }, %struct.anon.1470 { i32 194, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.574, i32 0, i32 0) }, %struct.anon.1470 { i32 195, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.575, i32 0, i32 0) }, %struct.anon.1470 { i32 196, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.576, i32 0, i32 0) }, %struct.anon.1470 { i32 197, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.577, i32 0, i32 0) }, %struct.anon.1470 { i32 198, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.578, i32 0, i32 0) }, %struct.anon.1470 { i32 199, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.579, i32 0, i32 0) }, %struct.anon.1470 { i32 200, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.580, i32 0, i32 0) }, %struct.anon.1470 { i32 201, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.581, i32 0, i32 0) }, %struct.anon.1470 { i32 202, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.582, i32 0, i32 0) }, %struct.anon.1470 { i32 203, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.583, i32 0, i32 0) }, %struct.anon.1470 { i32 204, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.584, i32 0, i32 0) }, %struct.anon.1470 { i32 205, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.585, i32 0, i32 0) }, %struct.anon.1470 { i32 206, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.586, i32 0, i32 0) }, %struct.anon.1470 { i32 207, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.587, i32 0, i32 0) }, %struct.anon.1470 { i32 208, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.588, i32 0, i32 0) }, %struct.anon.1470 { i32 209, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.589, i32 0, i32 0) }, %struct.anon.1470 { i32 210, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.590, i32 0, i32 0) }, %struct.anon.1470 { i32 211, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.591, i32 0, i32 0) }, %struct.anon.1470 { i32 212, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.592, i32 0, i32 0) }, %struct.anon.1470 { i32 213, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.593, i32 0, i32 0) }, %struct.anon.1470 { i32 214, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.594, i32 0, i32 0) }, %struct.anon.1470 { i32 215, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.595, i32 0, i32 0) }, %struct.anon.1470 { i32 216, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.596, i32 0, i32 0) }, %struct.anon.1470 { i32 217, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.597, i32 0, i32 0) }, %struct.anon.1470 { i32 218, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.598, i32 0, i32 0) }, %struct.anon.1470 { i32 219, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.599, i32 0, i32 0) }, %struct.anon.1470 { i32 220, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.600, i32 0, i32 0) }, %struct.anon.1470 { i32 221, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.601, i32 0, i32 0) }, %struct.anon.1470 { i32 222, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.602, i32 0, i32 0) }, %struct.anon.1470 { i32 223, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.603, i32 0, i32 0) }, %struct.anon.1470 { i32 224, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.604, i32 0, i32 0) }, %struct.anon.1470 { i32 225, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.605, i32 0, i32 0) }, %struct.anon.1470 { i32 226, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.606, i32 0, i32 0) }, %struct.anon.1470 { i32 227, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.607, i32 0, i32 0) }, %struct.anon.1470 { i32 228, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.608, i32 0, i32 0) }, %struct.anon.1470 { i32 229, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.609, i32 0, i32 0) }, %struct.anon.1470 { i32 230, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.610, i32 0, i32 0) }, %struct.anon.1470 { i32 231, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.611, i32 0, i32 0) }, %struct.anon.1470 { i32 232, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.612, i32 0, i32 0) }, %struct.anon.1470 { i32 233, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.613, i32 0, i32 0) }, %struct.anon.1470 { i32 234, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.614, i32 0, i32 0) }, %struct.anon.1470 { i32 235, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.615, i32 0, i32 0) }, %struct.anon.1470 { i32 236, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.616, i32 0, i32 0) }, %struct.anon.1470 { i32 237, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.617, i32 0, i32 0) }, %struct.anon.1470 { i32 238, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.618, i32 0, i32 0) }, %struct.anon.1470 { i32 239, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.619, i32 0, i32 0) }, %struct.anon.1470 { i32 240, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.620, i32 0, i32 0) }, %struct.anon.1470 { i32 241, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.621, i32 0, i32 0) }, %struct.anon.1470 { i32 242, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.622, i32 0, i32 0) }, %struct.anon.1470 { i32 243, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.623, i32 0, i32 0) }, %struct.anon.1470 { i32 244, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.624, i32 0, i32 0) }, %struct.anon.1470 { i32 245, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.625, i32 0, i32 0) }, %struct.anon.1470 { i32 246, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.626, i32 0, i32 0) }, %struct.anon.1470 { i32 247, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.627, i32 0, i32 0) }, %struct.anon.1470 { i32 248, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.628, i32 0, i32 0) }, %struct.anon.1470 { i32 249, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.629, i32 0, i32 0) }, %struct.anon.1470 { i32 250, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.630, i32 0, i32 0) }, %struct.anon.1470 { i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.631, i32 0, i32 0) }], align 16
@.str.304 = private unnamed_addr constant [20 x i8] c"optimized_code_list\00", align 1
@.str.305 = private unnamed_addr constant [22 x i8] c"deoptimized_code_list\00", align 1
@.str.306 = private unnamed_addr constant [11 x i8] c"transition\00", align 1
@.str.307 = private unnamed_addr constant [24 x i8] c"(prototype transitions)\00", align 1
@.str.308 = private unnamed_addr constant [19 x i8] c"(transition array)\00", align 1
@.str.309 = private unnamed_addr constant [12 x i8] c"transitions\00", align 1
@.str.310 = private unnamed_addr constant [13 x i8] c"(transition)\00", align 1
@.str.311 = private unnamed_addr constant [15 x i8] c"prototype_info\00", align 1
@.str.312 = private unnamed_addr constant [18 x i8] c"(map descriptors)\00", align 1
@.str.313 = private unnamed_addr constant [12 x i8] c"descriptors\00", align 1
@.str.314 = private unnamed_addr constant [10 x i8] c"prototype\00", align 1
@.str.315 = private unnamed_addr constant [17 x i8] c"(native context)\00", align 1
@.str.316 = private unnamed_addr constant [15 x i8] c"(back pointer)\00", align 1
@.str.317 = private unnamed_addr constant [13 x i8] c"back_pointer\00", align 1
@.str.318 = private unnamed_addr constant [28 x i8] c"(constructor function data)\00", align 1
@.str.319 = private unnamed_addr constant [26 x i8] c"constructor_function_data\00", align 1
@.str.320 = private unnamed_addr constant [12 x i8] c"constructor\00", align 1
@.str.321 = private unnamed_addr constant [17 x i8] c"(dependent code)\00", align 1
@.str.322 = private unnamed_addr constant [15 x i8] c"dependent_code\00", align 1
@.str.323 = private unnamed_addr constant [14 x i8] c"(code for %s)\00", align 1
@.str.324 = private unnamed_addr constant [10 x i8] c"(%s code)\00", align 1
@.str.325 = private unnamed_addr constant [22 x i8] c"(function scope info)\00", align 1
@.str.326 = private unnamed_addr constant [19 x i8] c"name_or_scope_info\00", align 1
@.str.327 = private unnamed_addr constant [21 x i8] c"script_or_debug_info\00", align 1
@.str.328 = private unnamed_addr constant [14 x i8] c"function_data\00", align 1
@.str.329 = private unnamed_addr constant [42 x i8] c"raw_outer_scope_info_or_feedback_metadata\00", align 1
@.str.330 = private unnamed_addr constant [7 x i8] c"source\00", align 1
@.str.331 = private unnamed_addr constant [13 x i8] c"context_data\00", align 1
@.str.332 = private unnamed_addr constant [19 x i8] c"(script line ends)\00", align 1
@.str.333 = private unnamed_addr constant [10 x i8] c"line_ends\00", align 1
@.str.334 = private unnamed_addr constant [23 x i8] c"expected_receiver_type\00", align 1
@.str.335 = private unnamed_addr constant [7 x i8] c"getter\00", align 1
@.str.336 = private unnamed_addr constant [7 x i8] c"setter\00", align 1
@.str.337 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.338 = private unnamed_addr constant [13 x i8] c"(%s builtin)\00", align 1
@.str.339 = private unnamed_addr constant [23 x i8] c"(code relocation info)\00", align 1
@.str.340 = private unnamed_addr constant [16 x i8] c"relocation_info\00", align 1
@.str.341 = private unnamed_addr constant [18 x i8] c"(code deopt data)\00", align 1
@.str.342 = private unnamed_addr constant [20 x i8] c"deoptimization_data\00", align 1
@.str.343 = private unnamed_addr constant [24 x i8] c"(bytecode offset table)\00", align 1
@.str.344 = private unnamed_addr constant [22 x i8] c"bytecode_offset_table\00", align 1
@.str.345 = private unnamed_addr constant [24 x i8] c"(source position table)\00", align 1
@.str.346 = private unnamed_addr constant [22 x i8] c"source_position_table\00", align 1
@.str.347 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.348 = private unnamed_addr constant [16 x i8] c"(feedback cell)\00", align 1
@.str.349 = private unnamed_addr constant [16 x i8] c"transition_info\00", align 1
@.str.350 = private unnamed_addr constant [12 x i8] c"nested_site\00", align 1
@.str.351 = private unnamed_addr constant [18 x i8] c"constant_elements\00", align 1
@.str.352 = private unnamed_addr constant [14 x i8] c"backing_store\00", align 1
@.str.353 = private unnamed_addr constant [20 x i8] c"reactions_or_result\00", align 1
@.str.354 = private unnamed_addr constant [9 x i8] c"function\00", align 1
@.str.355 = private unnamed_addr constant [9 x i8] c"receiver\00", align 1
@.str.356 = private unnamed_addr constant [25 x i8] c"parameters_and_registers\00", align 1
@.str.357 = private unnamed_addr constant [15 x i8] c"optimized code\00", align 1
@.str.358 = private unnamed_addr constant [11 x i8] c"enum_cache\00", align 1
@.str.359 = private unnamed_addr constant [7 x i8] c"get %s\00", align 1
@.str.360 = private unnamed_addr constant [7 x i8] c"set %s\00", align 1
@.str.361 = private unnamed_addr constant [4 x i8] c"map\00", align 1
@.str.362 = private unnamed_addr constant [34 x i8] c"!strong_gc_subroot_names_.empty()\00", align 1
@_ZN2v88internal37FLAG_heap_profiler_use_embedder_graphE = external local_unnamed_addr global i8, align 1
@_ZTVN2v88internal21HeapSnapshotGeneratorE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::HeapSnapshotGenerator"*)* @_ZN2v88internal21HeapSnapshotGeneratorD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::HeapSnapshotGenerator"*)* @_ZN2v88internal21HeapSnapshotGeneratorD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::HeapSnapshotGenerator"*)* @_ZN2v88internal21HeapSnapshotGenerator12ProgressStepEv to i8*), i8* bitcast (i1 (%"class.v8::internal::HeapSnapshotGenerator"*, i1)* @_ZN2v88internal21HeapSnapshotGenerator14ProgressReportEb to i8*)] }, align 8
@_ZN2v88internal26HeapSnapshotJSONSerializer16kEdgeFieldsCountE = hidden local_unnamed_addr constant i32 3, align 4
@_ZN2v88internal26HeapSnapshotJSONSerializer16kNodeFieldsCountE = hidden local_unnamed_addr constant i32 7, align 4
@.str.363 = private unnamed_addr constant [13 x i8] c"\22snapshot\22:{\00", align 1
@.str.364 = private unnamed_addr constant [4 x i8] c"},\0A\00", align 1
@.str.365 = private unnamed_addr constant [10 x i8] c"\22nodes\22:[\00", align 1
@.str.366 = private unnamed_addr constant [4 x i8] c"],\0A\00", align 1
@.str.367 = private unnamed_addr constant [10 x i8] c"\22edges\22:[\00", align 1
@.str.368 = private unnamed_addr constant [25 x i8] c"\22trace_function_infos\22:[\00", align 1
@.str.369 = private unnamed_addr constant [15 x i8] c"\22trace_tree\22:[\00", align 1
@.str.370 = private unnamed_addr constant [12 x i8] c"\22samples\22:[\00", align 1
@.str.371 = private unnamed_addr constant [14 x i8] c"\22locations\22:[\00", align 1
@.str.372 = private unnamed_addr constant [12 x i8] c"\22strings\22:[\00", align 1
@.str.373 = private unnamed_addr constant [8 x i8] c"\22meta\22:\00", align 1
@.str.374 = private unnamed_addr constant [756 x i8] c"{\22node_fields\22:[\22type\22,\22name\22,\22id\22,\22self_size\22,\22edge_count\22,\22trace_node_id\22,\22detachedness\22],\22node_types\22:[[\22hidden\22,\22array\22,\22string\22,\22object\22,\22code\22,\22closure\22,\22regexp\22,\22number\22,\22native\22,\22synthetic\22,\22concatenated string\22,\22sliced string\22,\22symbol\22,\22bigint\22],\22string\22,\22number\22,\22number\22,\22number\22,\22number\22,\22number\22],\22edge_fields\22:[\22type\22,\22name_or_index\22,\22to_node\22],\22edge_types\22:[[\22context\22,\22element\22,\22property\22,\22internal\22,\22hidden\22,\22shortcut\22,\22weak\22],\22string_or_number\22,\22node\22],\22trace_function_info_fields\22:[\22function_id\22,\22name\22,\22script_name\22,\22script_id\22,\22line\22,\22column\22],\22trace_node_fields\22:[\22id\22,\22function_info_index\22,\22count\22,\22size\22,\22children\22],\22sample_fields\22:[\22timestamp_us\22,\22last_assigned_id\22],\22location_fields\22:[\22object_index\22,\22script_id\22,\22line\22,\22column\22]}\00", align 1
@.str.375 = private unnamed_addr constant [15 x i8] c",\22node_count\22:\00", align 1
@.str.376 = private unnamed_addr constant [15 x i8] c",\22edge_count\22:\00", align 1
@.str.377 = private unnamed_addr constant [25 x i8] c",\22trace_function_count\22:\00", align 1
@.str.378 = private unnamed_addr constant [3 x i8] c"\5Cb\00", align 1
@.str.379 = private unnamed_addr constant [3 x i8] c"\5Cf\00", align 1
@.str.380 = private unnamed_addr constant [3 x i8] c"\5Cr\00", align 1
@.str.381 = private unnamed_addr constant [3 x i8] c"\5Ct\00", align 1
@.str.382 = private unnamed_addr constant [10 x i8] c"\22<dummy>\22\00", align 1
@_ZTVN2v88internal29EmbedderGraphEntriesAllocatorE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::HeapEntriesAllocator"*)* @_ZN2v88internal20HeapEntriesAllocatorD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::EmbedderGraphEntriesAllocator"*)* @_ZN2v88internal29EmbedderGraphEntriesAllocatorD0Ev to i8*), i8* bitcast (%"class.v8::internal::HeapEntry"* (%"class.v8::internal::EmbedderGraphEntriesAllocator"*, i8*)* @_ZN2v88internal29EmbedderGraphEntriesAllocator13AllocateEntryEPv to i8*), i8* bitcast (%"class.v8::internal::HeapEntry"* (%"class.v8::internal::EmbedderGraphEntriesAllocator"*, i64)* @_ZN2v88internal29EmbedderGraphEntriesAllocator13AllocateEntryENS0_3SmiE to i8*)] }, align 8
@.str.383 = private unnamed_addr constant [20 x i8] c"global_proxy_object\00", align 1
@.str.384 = private unnamed_addr constant [14 x i8] c"embedder_data\00", align 1
@.str.385 = private unnamed_addr constant [37 x i8] c"continuation_preserved_embedder_data\00", align 1
@.str.386 = private unnamed_addr constant [24 x i8] c"generator_next_internal\00", align 1
@.str.387 = private unnamed_addr constant [31 x i8] c"async_module_evaluate_internal\00", align 1
@.str.388 = private unnamed_addr constant [14 x i8] c"object_create\00", align 1
@.str.389 = private unnamed_addr constant [14 x i8] c"reflect_apply\00", align 1
@.str.390 = private unnamed_addr constant [18 x i8] c"reflect_construct\00", align 1
@.str.391 = private unnamed_addr constant [11 x i8] c"math_floor\00", align 1
@.str.392 = private unnamed_addr constant [9 x i8] c"math_pow\00", align 1
@.str.393 = private unnamed_addr constant [29 x i8] c"promise_internal_constructor\00", align 1
@.str.394 = private unnamed_addr constant [13 x i8] c"promise_then\00", align 1
@.str.395 = private unnamed_addr constant [25 x i8] c"function_prototype_apply\00", align 1
@.str.396 = private unnamed_addr constant [16 x i8] c"uint8_array_fun\00", align 1
@.str.397 = private unnamed_addr constant [15 x i8] c"int8_array_fun\00", align 1
@.str.398 = private unnamed_addr constant [17 x i8] c"uint16_array_fun\00", align 1
@.str.399 = private unnamed_addr constant [16 x i8] c"int16_array_fun\00", align 1
@.str.400 = private unnamed_addr constant [17 x i8] c"uint32_array_fun\00", align 1
@.str.401 = private unnamed_addr constant [16 x i8] c"int32_array_fun\00", align 1
@.str.402 = private unnamed_addr constant [18 x i8] c"float32_array_fun\00", align 1
@.str.403 = private unnamed_addr constant [18 x i8] c"float64_array_fun\00", align 1
@.str.404 = private unnamed_addr constant [24 x i8] c"uint8_clamped_array_fun\00", align 1
@.str.405 = private unnamed_addr constant [20 x i8] c"biguint64_array_fun\00", align 1
@.str.406 = private unnamed_addr constant [19 x i8] c"bigint64_array_fun\00", align 1
@.str.407 = private unnamed_addr constant [25 x i8] c"rab_gsab_uint8_array_map\00", align 1
@.str.408 = private unnamed_addr constant [24 x i8] c"rab_gsab_int8_array_map\00", align 1
@.str.409 = private unnamed_addr constant [26 x i8] c"rab_gsab_uint16_array_map\00", align 1
@.str.410 = private unnamed_addr constant [25 x i8] c"rab_gsab_int16_array_map\00", align 1
@.str.411 = private unnamed_addr constant [26 x i8] c"rab_gsab_uint32_array_map\00", align 1
@.str.412 = private unnamed_addr constant [25 x i8] c"rab_gsab_int32_array_map\00", align 1
@.str.413 = private unnamed_addr constant [27 x i8] c"rab_gsab_float32_array_map\00", align 1
@.str.414 = private unnamed_addr constant [27 x i8] c"rab_gsab_float64_array_map\00", align 1
@.str.415 = private unnamed_addr constant [33 x i8] c"rab_gsab_uint8_clamped_array_map\00", align 1
@.str.416 = private unnamed_addr constant [29 x i8] c"rab_gsab_biguint64_array_map\00", align 1
@.str.417 = private unnamed_addr constant [28 x i8] c"rab_gsab_bigint64_array_map\00", align 1
@.str.418 = private unnamed_addr constant [33 x i8] c"accessor_property_descriptor_map\00", align 1
@.str.419 = private unnamed_addr constant [28 x i8] c"allow_code_gen_from_strings\00", align 1
@.str.420 = private unnamed_addr constant [17 x i8] c"array_buffer_fun\00", align 1
@.str.421 = private unnamed_addr constant [17 x i8] c"array_buffer_map\00", align 1
@.str.422 = private unnamed_addr constant [24 x i8] c"array_buffer_noinit_fun\00", align 1
@.str.423 = private unnamed_addr constant [15 x i8] c"array_function\00", align 1
@.str.424 = private unnamed_addr constant [17 x i8] c"array_join_stack\00", align 1
@.str.425 = private unnamed_addr constant [29 x i8] c"async_from_sync_iterator_map\00", align 1
@.str.426 = private unnamed_addr constant [27 x i8] c"async_function_constructor\00", align 1
@.str.427 = private unnamed_addr constant [26 x i8] c"async_function_object_map\00", align 1
@.str.428 = private unnamed_addr constant [34 x i8] c"async_generator_function_function\00", align 1
@.str.429 = private unnamed_addr constant [15 x i8] c"atomics_object\00", align 1
@.str.430 = private unnamed_addr constant [16 x i8] c"bigint_function\00", align 1
@.str.431 = private unnamed_addr constant [17 x i8] c"boolean_function\00", align 1
@.str.432 = private unnamed_addr constant [36 x i8] c"bound_function_with_constructor_map\00", align 1
@.str.433 = private unnamed_addr constant [39 x i8] c"bound_function_without_constructor_map\00", align 1
@.str.434 = private unnamed_addr constant [29 x i8] c"call_as_constructor_delegate\00", align 1
@.str.435 = private unnamed_addr constant [26 x i8] c"call_as_function_delegate\00", align 1
@.str.436 = private unnamed_addr constant [28 x i8] c"call_async_module_fulfilled\00", align 1
@.str.437 = private unnamed_addr constant [27 x i8] c"call_async_module_rejected\00", align 1
@.str.438 = private unnamed_addr constant [18 x i8] c"callsite_function\00", align 1
@.str.439 = private unnamed_addr constant [27 x i8] c"context_extension_function\00", align 1
@.str.440 = private unnamed_addr constant [29 x i8] c"data_property_descriptor_map\00", align 1
@.str.441 = private unnamed_addr constant [14 x i8] c"data_view_fun\00", align 1
@.str.442 = private unnamed_addr constant [14 x i8] c"date_function\00", align 1
@.str.443 = private unnamed_addr constant [17 x i8] c"debug_context_id\00", align 1
@.str.444 = private unnamed_addr constant [15 x i8] c"empty_function\00", align 1
@.str.445 = private unnamed_addr constant [40 x i8] c"error_message_for_code_gen_from_strings\00", align 1
@.str.446 = private unnamed_addr constant [14 x i8] c"errors_thrown\00", align 1
@.str.447 = private unnamed_addr constant [22 x i8] c"extras_binding_object\00", align 1
@.str.448 = private unnamed_addr constant [27 x i8] c"fast_aliased_arguments_map\00", align 1
@.str.449 = private unnamed_addr constant [35 x i8] c"fast_template_instantiations_cache\00", align 1
@.str.450 = private unnamed_addr constant [18 x i8] c"function_function\00", align 1
@.str.451 = private unnamed_addr constant [28 x i8] c"generator_function_function\00", align 1
@.str.452 = private unnamed_addr constant [31 x i8] c"generator_object_prototype_map\00", align 1
@.str.453 = private unnamed_addr constant [37 x i8] c"async_generator_object_prototype_map\00", align 1
@.str.454 = private unnamed_addr constant [33 x i8] c"growable_shared_array_buffer_fun\00", align 1
@.str.455 = private unnamed_addr constant [27 x i8] c"initial_array_iterator_map\00", align 1
@.str.456 = private unnamed_addr constant [33 x i8] c"initial_array_iterator_prototype\00", align 1
@.str.457 = private unnamed_addr constant [24 x i8] c"initial_array_prototype\00", align 1
@.str.458 = private unnamed_addr constant [24 x i8] c"initial_error_prototype\00", align 1
@.str.459 = private unnamed_addr constant [28 x i8] c"initial_generator_prototype\00", align 1
@.str.460 = private unnamed_addr constant [33 x i8] c"initial_async_iterator_prototype\00", align 1
@.str.461 = private unnamed_addr constant [34 x i8] c"initial_async_generator_prototype\00", align 1
@.str.462 = private unnamed_addr constant [27 x i8] c"initial_iterator_prototype\00", align 1
@.str.463 = private unnamed_addr constant [31 x i8] c"initial_map_iterator_prototype\00", align 1
@.str.464 = private unnamed_addr constant [26 x i8] c"initial_map_prototype_map\00", align 1
@.str.465 = private unnamed_addr constant [25 x i8] c"initial_object_prototype\00", align 1
@.str.466 = private unnamed_addr constant [31 x i8] c"initial_set_iterator_prototype\00", align 1
@.str.467 = private unnamed_addr constant [22 x i8] c"initial_set_prototype\00", align 1
@.str.468 = private unnamed_addr constant [26 x i8] c"initial_set_prototype_map\00", align 1
@.str.469 = private unnamed_addr constant [28 x i8] c"initial_string_iterator_map\00", align 1
@.str.470 = private unnamed_addr constant [34 x i8] c"initial_string_iterator_prototype\00", align 1
@.str.471 = private unnamed_addr constant [25 x i8] c"initial_string_prototype\00", align 1
@.str.472 = private unnamed_addr constant [30 x i8] c"initial_weakmap_prototype_map\00", align 1
@.str.473 = private unnamed_addr constant [30 x i8] c"initial_weakset_prototype_map\00", align 1
@.str.474 = private unnamed_addr constant [23 x i8] c"intl_collator_function\00", align 1
@.str.475 = private unnamed_addr constant [31 x i8] c"intl_date_time_format_function\00", align 1
@.str.476 = private unnamed_addr constant [28 x i8] c"intl_display_names_function\00", align 1
@.str.477 = private unnamed_addr constant [28 x i8] c"intl_number_format_function\00", align 1
@.str.478 = private unnamed_addr constant [21 x i8] c"intl_locale_function\00", align 1
@.str.479 = private unnamed_addr constant [26 x i8] c"intl_list_format_function\00", align 1
@.str.480 = private unnamed_addr constant [27 x i8] c"intl_plural_rules_function\00", align 1
@.str.481 = private unnamed_addr constant [35 x i8] c"intl_relative_time_format_function\00", align 1
@.str.482 = private unnamed_addr constant [24 x i8] c"intl_segmenter_function\00", align 1
@.str.483 = private unnamed_addr constant [18 x i8] c"intl_segments_map\00", align 1
@.str.484 = private unnamed_addr constant [26 x i8] c"intl_segment_iterator_map\00", align 1
@.str.485 = private unnamed_addr constant [20 x i8] c"iterator_result_map\00", align 1
@.str.486 = private unnamed_addr constant [33 x i8] c"js_array_packed_smi_elements_map\00", align 1
@.str.487 = private unnamed_addr constant [32 x i8] c"js_array_holey_smi_elements_map\00", align 1
@.str.488 = private unnamed_addr constant [29 x i8] c"js_array_packed_elements_map\00", align 1
@.str.489 = private unnamed_addr constant [28 x i8] c"js_array_holey_elements_map\00", align 1
@.str.490 = private unnamed_addr constant [36 x i8] c"js_array_packed_double_elements_map\00", align 1
@.str.491 = private unnamed_addr constant [35 x i8] c"js_array_holey_double_elements_map\00", align 1
@.str.492 = private unnamed_addr constant [11 x i8] c"js_map_fun\00", align 1
@.str.493 = private unnamed_addr constant [11 x i8] c"js_map_map\00", align 1
@.str.494 = private unnamed_addr constant [24 x i8] c"js_module_namespace_map\00", align 1
@.str.495 = private unnamed_addr constant [11 x i8] c"js_set_fun\00", align 1
@.str.496 = private unnamed_addr constant [11 x i8] c"js_set_map\00", align 1
@.str.497 = private unnamed_addr constant [16 x i8] c"js_weak_map_fun\00", align 1
@.str.498 = private unnamed_addr constant [16 x i8] c"js_weak_set_fun\00", align 1
@.str.499 = private unnamed_addr constant [16 x i8] c"js_weak_ref_fun\00", align 1
@.str.500 = private unnamed_addr constant [29 x i8] c"js_finalization_registry_fun\00", align 1
@.str.501 = private unnamed_addr constant [19 x i8] c"native_context_map\00", align 1
@.str.502 = private unnamed_addr constant [21 x i8] c"function_context_map\00", align 1
@.str.503 = private unnamed_addr constant [19 x i8] c"module_context_map\00", align 1
@.str.504 = private unnamed_addr constant [17 x i8] c"eval_context_map\00", align 1
@.str.505 = private unnamed_addr constant [19 x i8] c"script_context_map\00", align 1
@.str.506 = private unnamed_addr constant [18 x i8] c"await_context_map\00", align 1
@.str.507 = private unnamed_addr constant [18 x i8] c"block_context_map\00", align 1
@.str.508 = private unnamed_addr constant [18 x i8] c"catch_context_map\00", align 1
@.str.509 = private unnamed_addr constant [17 x i8] c"with_context_map\00", align 1
@.str.510 = private unnamed_addr constant [27 x i8] c"debug_evaluate_context_map\00", align 1
@.str.511 = private unnamed_addr constant [10 x i8] c"map_cache\00", align 1
@.str.512 = private unnamed_addr constant [21 x i8] c"map_key_iterator_map\00", align 1
@.str.513 = private unnamed_addr constant [27 x i8] c"map_key_value_iterator_map\00", align 1
@.str.514 = private unnamed_addr constant [23 x i8] c"map_value_iterator_map\00", align 1
@.str.515 = private unnamed_addr constant [18 x i8] c"math_random_index\00", align 1
@.str.516 = private unnamed_addr constant [18 x i8] c"math_random_state\00", align 1
@.str.517 = private unnamed_addr constant [18 x i8] c"math_random_cache\00", align 1
@.str.518 = private unnamed_addr constant [18 x i8] c"message_listeners\00", align 1
@.str.519 = private unnamed_addr constant [21 x i8] c"normalized_map_cache\00", align 1
@.str.520 = private unnamed_addr constant [16 x i8] c"number_function\00", align 1
@.str.521 = private unnamed_addr constant [16 x i8] c"object_function\00", align 1
@.str.522 = private unnamed_addr constant [30 x i8] c"object_function_prototype_map\00", align 1
@.str.523 = private unnamed_addr constant [27 x i8] c"promise_hook_init_function\00", align 1
@.str.524 = private unnamed_addr constant [29 x i8] c"promise_hook_before_function\00", align 1
@.str.525 = private unnamed_addr constant [28 x i8] c"promise_hook_after_function\00", align 1
@.str.526 = private unnamed_addr constant [30 x i8] c"promise_hook_resolve_function\00", align 1
@.str.527 = private unnamed_addr constant [19 x i8] c"proxy_callable_map\00", align 1
@.str.528 = private unnamed_addr constant [22 x i8] c"proxy_constructor_map\00", align 1
@.str.529 = private unnamed_addr constant [15 x i8] c"proxy_function\00", align 1
@.str.530 = private unnamed_addr constant [10 x i8] c"proxy_map\00", align 1
@.str.531 = private unnamed_addr constant [27 x i8] c"proxy_revocable_result_map\00", align 1
@.str.532 = private unnamed_addr constant [18 x i8] c"promise_prototype\00", align 1
@.str.533 = private unnamed_addr constant [20 x i8] c"recorder_context_id\00", align 1
@.str.534 = private unnamed_addr constant [21 x i8] c"regexp_exec_function\00", align 1
@.str.535 = private unnamed_addr constant [16 x i8] c"regexp_function\00", align 1
@.str.536 = private unnamed_addr constant [23 x i8] c"regexp_last_match_info\00", align 1
@.str.537 = private unnamed_addr constant [26 x i8] c"regexp_match_all_function\00", align 1
@.str.538 = private unnamed_addr constant [22 x i8] c"regexp_match_function\00", align 1
@.str.539 = private unnamed_addr constant [17 x i8] c"regexp_prototype\00", align 1
@.str.540 = private unnamed_addr constant [21 x i8] c"regexp_prototype_map\00", align 1
@.str.541 = private unnamed_addr constant [24 x i8] c"regexp_replace_function\00", align 1
@.str.542 = private unnamed_addr constant [18 x i8] c"regexp_result_map\00", align 1
@.str.543 = private unnamed_addr constant [31 x i8] c"regexp_result_with_indices_map\00", align 1
@.str.544 = private unnamed_addr constant [26 x i8] c"regexp_result_indices_map\00", align 1
@.str.545 = private unnamed_addr constant [23 x i8] c"regexp_search_function\00", align 1
@.str.546 = private unnamed_addr constant [22 x i8] c"regexp_split_function\00", align 1
@.str.547 = private unnamed_addr constant [45 x i8] c"initial_regexp_string_iterator_prototype_map\00", align 1
@.str.548 = private unnamed_addr constant [27 x i8] c"resizable_array_buffer_fun\00", align 1
@.str.549 = private unnamed_addr constant [21 x i8] c"script_context_table\00", align 1
@.str.550 = private unnamed_addr constant [26 x i8] c"script_execution_callback\00", align 1
@.str.551 = private unnamed_addr constant [15 x i8] c"security_token\00", align 1
@.str.552 = private unnamed_addr constant [19 x i8] c"serialized_objects\00", align 1
@.str.553 = private unnamed_addr constant [23 x i8] c"set_value_iterator_map\00", align 1
@.str.554 = private unnamed_addr constant [27 x i8] c"set_key_value_iterator_map\00", align 1
@.str.555 = private unnamed_addr constant [24 x i8] c"shared_array_buffer_fun\00", align 1
@.str.556 = private unnamed_addr constant [21 x i8] c"sloppy_arguments_map\00", align 1
@.str.557 = private unnamed_addr constant [27 x i8] c"slow_aliased_arguments_map\00", align 1
@.str.558 = private unnamed_addr constant [21 x i8] c"strict_arguments_map\00", align 1
@.str.559 = private unnamed_addr constant [36 x i8] c"slow_object_with_null_prototype_map\00", align 1
@.str.560 = private unnamed_addr constant [38 x i8] c"slow_object_with_object_prototype_map\00", align 1
@.str.561 = private unnamed_addr constant [35 x i8] c"slow_template_instantiations_cache\00", align 1
@.str.562 = private unnamed_addr constant [27 x i8] c"atomics_waitasync_promises\00", align 1
@.str.563 = private unnamed_addr constant [16 x i8] c"wasm_debug_maps\00", align 1
@.str.564 = private unnamed_addr constant [25 x i8] c"regexp_species_protector\00", align 1
@.str.565 = private unnamed_addr constant [20 x i8] c"sloppy_function_map\00", align 1
@.str.566 = private unnamed_addr constant [30 x i8] c"sloppy_function_with_name_map\00", align 1
@.str.567 = private unnamed_addr constant [38 x i8] c"sloppy_function_without_prototype_map\00", align 1
@.str.568 = private unnamed_addr constant [44 x i8] c"sloppy_function_with_readonly_prototype_map\00", align 1
@.str.569 = private unnamed_addr constant [20 x i8] c"strict_function_map\00", align 1
@.str.570 = private unnamed_addr constant [30 x i8] c"strict_function_with_name_map\00", align 1
@.str.571 = private unnamed_addr constant [44 x i8] c"strict_function_with_readonly_prototype_map\00", align 1
@.str.572 = private unnamed_addr constant [38 x i8] c"strict_function_without_prototype_map\00", align 1
@.str.573 = private unnamed_addr constant [21 x i8] c"method_with_name_map\00", align 1
@.str.574 = private unnamed_addr constant [19 x i8] c"async_function_map\00", align 1
@.str.575 = private unnamed_addr constant [29 x i8] c"async_function_with_name_map\00", align 1
@.str.576 = private unnamed_addr constant [23 x i8] c"generator_function_map\00", align 1
@.str.577 = private unnamed_addr constant [33 x i8] c"generator_function_with_name_map\00", align 1
@.str.578 = private unnamed_addr constant [29 x i8] c"async_generator_function_map\00", align 1
@.str.579 = private unnamed_addr constant [39 x i8] c"async_generator_function_with_name_map\00", align 1
@.str.580 = private unnamed_addr constant [19 x i8] c"class_function_map\00", align 1
@.str.581 = private unnamed_addr constant [16 x i8] c"string_function\00", align 1
@.str.582 = private unnamed_addr constant [30 x i8] c"string_function_prototype_map\00", align 1
@.str.583 = private unnamed_addr constant [16 x i8] c"symbol_function\00", align 1
@.str.584 = private unnamed_addr constant [27 x i8] c"wasm_exported_function_map\00", align 1
@.str.585 = private unnamed_addr constant [27 x i8] c"wasm_exception_constructor\00", align 1
@.str.586 = private unnamed_addr constant [24 x i8] c"wasm_global_constructor\00", align 1
@.str.587 = private unnamed_addr constant [26 x i8] c"wasm_instance_constructor\00", align 1
@.str.588 = private unnamed_addr constant [24 x i8] c"wasm_memory_constructor\00", align 1
@.str.589 = private unnamed_addr constant [24 x i8] c"wasm_module_constructor\00", align 1
@.str.590 = private unnamed_addr constant [23 x i8] c"wasm_table_constructor\00", align 1
@.str.591 = private unnamed_addr constant [17 x i8] c"template_weakmap\00", align 1
@.str.592 = private unnamed_addr constant [21 x i8] c"typed_array_function\00", align 1
@.str.593 = private unnamed_addr constant [22 x i8] c"typed_array_prototype\00", align 1
@.str.594 = private unnamed_addr constant [23 x i8] c"array_entries_iterator\00", align 1
@.str.595 = private unnamed_addr constant [24 x i8] c"array_for_each_iterator\00", align 1
@.str.596 = private unnamed_addr constant [20 x i8] c"array_keys_iterator\00", align 1
@.str.597 = private unnamed_addr constant [22 x i8] c"array_values_iterator\00", align 1
@.str.598 = private unnamed_addr constant [15 x i8] c"error_function\00", align 1
@.str.599 = private unnamed_addr constant [16 x i8] c"error_to_string\00", align 1
@.str.600 = private unnamed_addr constant [20 x i8] c"eval_error_function\00", align 1
@.str.601 = private unnamed_addr constant [25 x i8] c"aggregate_error_function\00", align 1
@.str.602 = private unnamed_addr constant [16 x i8] c"global_eval_fun\00", align 1
@.str.603 = private unnamed_addr constant [22 x i8] c"global_proxy_function\00", align 1
@.str.604 = private unnamed_addr constant [11 x i8] c"map_delete\00", align 1
@.str.605 = private unnamed_addr constant [8 x i8] c"map_get\00", align 1
@.str.606 = private unnamed_addr constant [8 x i8] c"map_has\00", align 1
@.str.607 = private unnamed_addr constant [8 x i8] c"map_set\00", align 1
@.str.608 = private unnamed_addr constant [35 x i8] c"finalization_registry_cleanup_some\00", align 1
@.str.609 = private unnamed_addr constant [22 x i8] c"function_has_instance\00", align 1
@.str.610 = private unnamed_addr constant [19 x i8] c"function_to_string\00", align 1
@.str.611 = private unnamed_addr constant [17 x i8] c"object_to_string\00", align 1
@.str.612 = private unnamed_addr constant [25 x i8] c"object_value_of_function\00", align 1
@.str.613 = private unnamed_addr constant [12 x i8] c"promise_all\00", align 1
@.str.614 = private unnamed_addr constant [12 x i8] c"promise_any\00", align 1
@.str.615 = private unnamed_addr constant [17 x i8] c"promise_function\00", align 1
@.str.616 = private unnamed_addr constant [21 x i8] c"range_error_function\00", align 1
@.str.617 = private unnamed_addr constant [25 x i8] c"reference_error_function\00", align 1
@.str.618 = private unnamed_addr constant [8 x i8] c"set_add\00", align 1
@.str.619 = private unnamed_addr constant [11 x i8] c"set_delete\00", align 1
@.str.620 = private unnamed_addr constant [8 x i8] c"set_has\00", align 1
@.str.621 = private unnamed_addr constant [22 x i8] c"syntax_error_function\00", align 1
@.str.622 = private unnamed_addr constant [20 x i8] c"type_error_function\00", align 1
@.str.623 = private unnamed_addr constant [19 x i8] c"uri_error_function\00", align 1
@.str.624 = private unnamed_addr constant [28 x i8] c"wasm_compile_error_function\00", align 1
@.str.625 = private unnamed_addr constant [25 x i8] c"wasm_link_error_function\00", align 1
@.str.626 = private unnamed_addr constant [28 x i8] c"wasm_runtime_error_function\00", align 1
@.str.627 = private unnamed_addr constant [12 x i8] c"weakmap_set\00", align 1
@.str.628 = private unnamed_addr constant [12 x i8] c"weakmap_get\00", align 1
@.str.629 = private unnamed_addr constant [12 x i8] c"weakset_add\00", align 1
@.str.630 = private unnamed_addr constant [14 x i8] c"retained_maps\00", align 1
@.str.631 = private unnamed_addr constant [15 x i8] c"osr_code_cache\00", align 1
@.str.632 = private unnamed_addr constant [27 x i8] c"system / JSArrayBufferData\00", align 1
@.str.634 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.635 = private unnamed_addr constant [2 x i8] c"v\00", align 1
@.str.636 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.637 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.638 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str.639 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@_ZTVN2v88internal24RootsReferencesExtractorE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::RootVisitor"*)* @_ZN2v88internal11RootVisitorD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::RootsReferencesExtractor"*)* @_ZN2v88internal24RootsReferencesExtractorD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::RootsReferencesExtractor"*, i32, i8*, i64, i64)* @_ZN2v88internal24RootsReferencesExtractor17VisitRootPointersENS0_4RootEPKcNS0_14FullObjectSlotES5_ to i8*), i8* bitcast (void (%"class.v8::internal::RootsReferencesExtractor"*, i32, i8*, i64)* @_ZN2v88internal24RootsReferencesExtractor16VisitRootPointerENS0_4RootEPKcNS0_14FullObjectSlotE to i8*), i8* bitcast (void (%"class.v8::internal::RootsReferencesExtractor"*, i32, i8*, i64, i64)* @_ZN2v88internal24RootsReferencesExtractor17VisitRootPointersENS0_4RootEPKcNS0_27OffHeapCompressedObjectSlotES5_ to i8*), i8* bitcast (void (%"class.v8::internal::RootVisitor"*, i32)* @_ZN2v88internal11RootVisitor11SynchronizeENS0_22VisitorSynchronization7SyncTagE to i8*)] }, comdat, align 8
@_ZTVN2v88internal26IndexedReferencesExtractorE = linkonce_odr hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*)* @_ZN2v88internal13ObjectVisitorD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::IndexedReferencesExtractor"*)* @_ZN2v88internal26IndexedReferencesExtractorD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::IndexedReferencesExtractor"*, i64, i64, i64)* @_ZN2v88internal26IndexedReferencesExtractor13VisitPointersENS0_10HeapObjectENS0_20CompressedObjectSlotES3_ to i8*), i8* bitcast (void (%"class.v8::internal::IndexedReferencesExtractor"*, i64, i64, i64)* @_ZN2v88internal26IndexedReferencesExtractor13VisitPointersENS0_10HeapObjectENS0_25CompressedMaybeObjectSlotES3_ to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)* @_ZN2v88internal13ObjectVisitor23VisitCustomWeakPointersENS0_10HeapObjectENS0_20CompressedObjectSlotES3_ to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, i64)* @_ZN2v88internal13ObjectVisitor12VisitPointerENS0_10HeapObjectENS0_20CompressedObjectSlotE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, i64)* @_ZN2v88internal13ObjectVisitor12VisitPointerENS0_10HeapObjectENS0_25CompressedMaybeObjectSlotE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, i64)* @_ZN2v88internal13ObjectVisitor22VisitCustomWeakPointerENS0_10HeapObjectENS0_20CompressedObjectSlotE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, i32, i64, i64)* @_ZN2v88internal13ObjectVisitor14VisitEphemeronENS0_10HeapObjectEiNS0_20CompressedObjectSlotES3_ to i8*), i8* bitcast (void (%"class.v8::internal::IndexedReferencesExtractor"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal26IndexedReferencesExtractor15VisitCodeTargetENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::IndexedReferencesExtractor"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal26IndexedReferencesExtractor20VisitEmbeddedPointerENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal13ObjectVisitor17VisitRuntimeEntryENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal13ObjectVisitor22VisitExternalReferenceENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)* @_ZN2v88internal13ObjectVisitor22VisitExternalReferenceENS0_7ForeignEPm to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal13ObjectVisitor22VisitInternalReferenceENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal13ObjectVisitor18VisitOffHeapTargetENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, %"class.v8::internal::RelocIterator"*)* @_ZN2v88internal13ObjectVisitor14VisitRelocInfoEPNS0_13RelocIteratorE to i8*), i8* bitcast (void (%"class.v8::internal::IndexedReferencesExtractor"*, i64)* @_ZN2v88internal26IndexedReferencesExtractor15VisitMapPointerENS0_10HeapObjectE to i8*)] }, comdat, align 8
@.str.640 = private unnamed_addr constant [23 x i8] c"parent_start_ <= start\00", align 1
@.str.641 = private unnamed_addr constant [19 x i8] c"end <= parent_end_\00", align 1
@.str.642 = private unnamed_addr constant [34 x i8] c"address < start || address >= end\00", align 1
@.str.643 = private unnamed_addr constant [17 x i8] c"!host_.is_null()\00", align 1
@_ZN2v88internal10RootsTable11root_names_E = external local_unnamed_addr global [669 x i8*], align 16
@_ZTVN2v88internal23GlobalObjectsEnumeratorE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::GlobalObjectsEnumerator"*)* @_ZN2v88internal23GlobalObjectsEnumeratorD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::GlobalObjectsEnumerator"*)* @_ZN2v88internal23GlobalObjectsEnumeratorD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::GlobalObjectsEnumerator"*, i32, i8*, i64, i64)* @_ZN2v88internal23GlobalObjectsEnumerator17VisitRootPointersENS0_4RootEPKcNS0_14FullObjectSlotES5_ to i8*), i8* bitcast (void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)* @_ZN2v88internal11RootVisitor16VisitRootPointerENS0_4RootEPKcNS0_14FullObjectSlotE to i8*), i8* bitcast (void (%"class.v8::internal::GlobalObjectsEnumerator"*, i32, i8*, i64, i64)* @_ZN2v88internal23GlobalObjectsEnumerator17VisitRootPointersENS0_4RootEPKcNS0_27OffHeapCompressedObjectSlotES5_ to i8*), i8* bitcast (void (%"class.v8::internal::RootVisitor"*, i32)* @_ZN2v88internal11RootVisitor11SynchronizeENS0_22VisitorSynchronization7SyncTagE to i8*)] }, comdat, align 8
@.str.644 = private unnamed_addr constant [6 x i8] c"%s %s\00", align 1
@_ZTVN2v88internal17EmbedderGraphImplE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (%"class.v8::EmbedderGraph::Node"* (%"class.v8::internal::EmbedderGraphImpl"*, %"class.v8::Local"*)* @_ZN2v88internal17EmbedderGraphImpl6V8NodeERKNS_5LocalINS_5ValueEEE to i8*), i8* bitcast (%"class.v8::EmbedderGraph::Node"* (%"class.v8::internal::EmbedderGraphImpl"*, %"class.v8::EmbedderGraph::Node"*)* @_ZN2v88internal17EmbedderGraphImpl7AddNodeENSt3__110unique_ptrINS_13EmbedderGraph4NodeENS2_14default_deleteIS5_EEEE to i8*), i8* bitcast (void (%"class.v8::internal::EmbedderGraphImpl"*, %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"*, i8*)* @_ZN2v88internal17EmbedderGraphImpl7AddEdgeEPNS_13EmbedderGraph4NodeES4_PKc to i8*), i8* bitcast (void (%"class.v8::internal::EmbedderGraphImpl"*)* @_ZN2v88internal17EmbedderGraphImplD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::EmbedderGraphImpl"*)* @_ZN2v88internal17EmbedderGraphImplD0Ev to i8*)] }, comdat, align 8
@_ZTVN2v88internal17EmbedderGraphImpl10V8NodeImplE = linkonce_odr hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::EmbedderGraph::Node"*)* @_ZN2v813EmbedderGraph4NodeD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::EmbedderGraphImpl::V8NodeImpl"*)* @_ZN2v88internal17EmbedderGraphImpl10V8NodeImplD0Ev to i8*), i8* bitcast (i8* (%"class.v8::internal::EmbedderGraphImpl::V8NodeImpl"*)* @_ZN2v88internal17EmbedderGraphImpl10V8NodeImpl4NameEv to i8*), i8* bitcast (i64 (%"class.v8::internal::EmbedderGraphImpl::V8NodeImpl"*)* @_ZN2v88internal17EmbedderGraphImpl10V8NodeImpl11SizeInBytesEv to i8*), i8* bitcast (%"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph::Node"*)* @_ZN2v813EmbedderGraph4Node11WrapperNodeEv to i8*), i8* bitcast (i1 (%"class.v8::EmbedderGraph::Node"*)* @_ZN2v813EmbedderGraph4Node10IsRootNodeEv to i8*), i8* bitcast (i1 (%"class.v8::internal::EmbedderGraphImpl::V8NodeImpl"*)* @_ZN2v88internal17EmbedderGraphImpl10V8NodeImpl14IsEmbedderNodeEv to i8*), i8* bitcast (i8* (%"class.v8::EmbedderGraph::Node"*)* @_ZN2v813EmbedderGraph4Node10NamePrefixEv to i8*), i8* bitcast (i8* (%"class.v8::EmbedderGraph::Node"*)* @_ZN2v813EmbedderGraph4Node15GetNativeObjectEv to i8*), i8* bitcast (i8 (%"class.v8::EmbedderGraph::Node"*)* @_ZN2v813EmbedderGraph4Node15GetDetachednessEv to i8*)] }, comdat, align 8
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@.str.645 = private unnamed_addr constant [9 x i8] c"NewArray\00", align 1
@.str.646 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@_ZZN2v88internalL10WriteUCharEPNS0_18OutputStreamWriterEjE9hex_chars = internal unnamed_addr constant [17 x i8] c"0123456789ABCDEF\00", align 16
@.str.647 = private unnamed_addr constant [3 x i8] c"\5Cu\00", align 1
@.str.648 = private unnamed_addr constant [35 x i8] c"Out of memory: HashMap::Initialize\00", align 1
@switch.table._ZNK2v88internal9HeapEntry12TypeAsStringEv = private unnamed_addr constant [14 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i64 0, i64 0)], align 8
@switch.table._ZNK2v88internal14Representation8MnemonicEv = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.635, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.637, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.638, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.639, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.636, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)], align 8

@_ZN2v88internal13HeapGraphEdgeC1ENS1_4TypeEPKcPNS0_9HeapEntryES6_ = hidden unnamed_addr alias void (%"class.v8::internal::HeapGraphEdge"*, i32, i8*, %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"*), void (%"class.v8::internal::HeapGraphEdge"*, i32, i8*, %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"*)* @_ZN2v88internal13HeapGraphEdgeC2ENS1_4TypeEPKcPNS0_9HeapEntryES6_
@_ZN2v88internal13HeapGraphEdgeC1ENS1_4TypeEiPNS0_9HeapEntryES4_ = hidden unnamed_addr alias void (%"class.v8::internal::HeapGraphEdge"*, i32, i32, %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"*), void (%"class.v8::internal::HeapGraphEdge"*, i32, i32, %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"*)* @_ZN2v88internal13HeapGraphEdgeC2ENS1_4TypeEiPNS0_9HeapEntryES4_
@_ZN2v88internal9HeapEntryC1EPNS0_12HeapSnapshotEiNS1_4TypeEPKcjmj = hidden unnamed_addr alias void (%"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapSnapshot"*, i32, i32, i8*, i32, i64, i32), void (%"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapSnapshot"*, i32, i32, i8*, i32, i64, i32)* @_ZN2v88internal9HeapEntryC2EPNS0_12HeapSnapshotEiNS1_4TypeEPKcjmj
@_ZN2v88internal12HeapSnapshotC1EPNS0_12HeapProfilerEbb = hidden unnamed_addr alias void (%"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapProfiler"*, i1, i1), void (%"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapProfiler"*, i1, i1)* @_ZN2v88internal12HeapSnapshotC2EPNS0_12HeapProfilerEbb
@_ZN2v88internal14HeapObjectsMapC1EPNS0_4HeapE = hidden unnamed_addr alias void (%"class.v8::internal::HeapObjectsMap"*, %"class.v8::internal::Heap"*), void (%"class.v8::internal::HeapObjectsMap"*, %"class.v8::internal::Heap"*)* @_ZN2v88internal14HeapObjectsMapC2EPNS0_4HeapE
@_ZN2v88internal14V8HeapExplorerC1EPNS0_12HeapSnapshotEPNS0_38SnapshottingProgressReportingInterfaceEPNS_12HeapProfiler18ObjectNameResolverE = hidden unnamed_addr alias void (%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::SnapshottingProgressReportingInterface"*, %"class.v8::HeapProfiler::ObjectNameResolver"*), void (%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::SnapshottingProgressReportingInterface"*, %"class.v8::HeapProfiler::ObjectNameResolver"*)* @_ZN2v88internal14V8HeapExplorerC2EPNS0_12HeapSnapshotEPNS0_38SnapshottingProgressReportingInterfaceEPNS_12HeapProfiler18ObjectNameResolverE
@_ZN2v88internal21NativeObjectsExplorerC1EPNS0_12HeapSnapshotEPNS0_38SnapshottingProgressReportingInterfaceE = hidden unnamed_addr alias void (%"class.v8::internal::NativeObjectsExplorer"*, %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::SnapshottingProgressReportingInterface"*), void (%"class.v8::internal::NativeObjectsExplorer"*, %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::SnapshottingProgressReportingInterface"*)* @_ZN2v88internal21NativeObjectsExplorerC2EPNS0_12HeapSnapshotEPNS0_38SnapshottingProgressReportingInterfaceE
@_ZN2v88internal21HeapSnapshotGeneratorC1EPNS0_12HeapSnapshotEPNS_15ActivityControlEPNS_12HeapProfiler18ObjectNameResolverEPNS0_4HeapE = hidden unnamed_addr alias void (%"class.v8::internal::HeapSnapshotGenerator"*, %"class.v8::internal::HeapSnapshot"*, %"class.v8::ActivityControl"*, %"class.v8::HeapProfiler::ObjectNameResolver"*, %"class.v8::internal::Heap"*), void (%"class.v8::internal::HeapSnapshotGenerator"*, %"class.v8::internal::HeapSnapshot"*, %"class.v8::ActivityControl"*, %"class.v8::HeapProfiler::ObjectNameResolver"*, %"class.v8::internal::Heap"*)* @_ZN2v88internal21HeapSnapshotGeneratorC2EPNS0_12HeapSnapshotEPNS_15ActivityControlEPNS_12HeapProfiler18ObjectNameResolverEPNS0_4HeapE

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal13HeapGraphEdgeC2ENS1_4TypeEPKcPNS0_9HeapEntryES6_(%"class.v8::internal::HeapGraphEdge"* nocapture, i32, i8*, %"class.v8::internal::HeapEntry"* nocapture readonly, %"class.v8::internal::HeapEntry"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %3, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = lshr i32 %8, 4
  %10 = shl nuw nsw i32 %9, 3
  %11 = or i32 %10, %1
  store i32 %11, i32* %6, align 8
  %12 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %0, i64 0, i32 1
  store %"class.v8::internal::HeapEntry"* %4, %"class.v8::internal::HeapEntry"** %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %0, i64 0, i32 2, i32 0
  store i8* %2, i8** %13, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal13HeapGraphEdgeC2ENS1_4TypeEiPNS0_9HeapEntryES4_(%"class.v8::internal::HeapGraphEdge"* nocapture, i32, i32, %"class.v8::internal::HeapEntry"* nocapture readonly, %"class.v8::internal::HeapEntry"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %3, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = lshr i32 %8, 4
  %10 = shl nuw nsw i32 %9, 3
  %11 = or i32 %10, %1
  store i32 %11, i32* %6, align 8
  %12 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %0, i64 0, i32 1
  store %"class.v8::internal::HeapEntry"* %4, %"class.v8::internal::HeapEntry"** %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %0, i64 0, i32 2
  %14 = bitcast %union.anon.807* %13 to i32*
  store i32 %2, i32* %14, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal9HeapEntryC2EPNS0_12HeapSnapshotEiNS1_4TypeEPKcjmj(%"class.v8::internal::HeapEntry"* nocapture, %"class.v8::internal::HeapSnapshot"*, i32, i32, i8*, i32, i64, i32) unnamed_addr #1 align 2 {
  %9 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %0, i64 0, i32 0
  %10 = and i32 %3, 15
  %11 = shl i32 %2, 4
  %12 = or i32 %10, %11
  store i32 %12, i32* %9, align 8
  %13 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %0, i64 0, i32 1, i32 0
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %0, i64 0, i32 2
  %15 = bitcast [6 x i8]* %14 to i48*
  %16 = trunc i64 %6 to i48
  store i48 %16, i48* %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %0, i64 0, i32 3
  store i8 0, i8* %17, align 2
  %18 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %0, i64 0, i32 4
  store %"class.v8::internal::HeapSnapshot"* %1, %"class.v8::internal::HeapSnapshot"** %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %0, i64 0, i32 5
  store i8* %4, i8** %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %0, i64 0, i32 6
  store i32 %5, i32* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %0, i64 0, i32 7
  store i32 %7, i32* %21, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9HeapEntry17SetNamedReferenceENS0_13HeapGraphEdge4TypeEPKcPS1_(%"class.v8::internal::HeapEntry"*, i32, i8*, %"class.v8::internal::HeapEntry"*) local_unnamed_addr #2 align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = ptrtoint %"class.v8::internal::HeapEntry"* %3 to i64
  %7 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %0, i64 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, 1
  store i32 %9, i32* %7, align 4
  %10 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %0, i64 0, i32 4
  %11 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %11, i64 0, i32 5, i32 0, i32 0, i32 2
  %13 = bitcast %"class.v8::internal::HeapGraphEdge"*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %11, i64 0, i32 5, i32 0, i32 0, i32 1
  %16 = bitcast %"class.v8::internal::HeapGraphEdge"*** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %14, %17
  %19 = ashr exact i64 %18, 3
  %20 = icmp eq i64 %18, 0
  %21 = mul i64 %19, 170
  %22 = add i64 %21, -1
  %23 = select i1 %20, i64 0, i64 %22
  %24 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %11, i64 0, i32 5, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %11, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, %25
  %29 = icmp eq i64 %23, %28
  %30 = inttoptr i64 %17 to %"class.v8::internal::HeapGraphEdge"**
  %31 = inttoptr i64 %14 to %"class.v8::internal::HeapGraphEdge"**
  br i1 %29, label %32, label %39

32:                                               ; preds = %4
  %33 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %11, i64 0, i32 5
  tail call void @_ZNSt3__15dequeIN2v88internal13HeapGraphEdgeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.758"* %33) #13
  %34 = load i64, i64* %26, align 8
  %35 = load i64, i64* %24, align 8
  %36 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %15, align 8
  %37 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %12, align 8
  %38 = add i64 %35, %34
  br label %39

39:                                               ; preds = %32, %4
  %40 = phi i64 [ %38, %32 ], [ %28, %4 ]
  %41 = phi %"class.v8::internal::HeapGraphEdge"** [ %37, %32 ], [ %31, %4 ]
  %42 = phi %"class.v8::internal::HeapGraphEdge"** [ %36, %32 ], [ %30, %4 ]
  %43 = icmp eq %"class.v8::internal::HeapGraphEdge"** %41, %42
  br i1 %43, label %50, label %44

44:                                               ; preds = %39
  %45 = udiv i64 %40, 170
  %46 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %42, i64 %45
  %47 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %46, align 8
  %48 = urem i64 %40, 170
  %49 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %47, i64 %48
  br label %50

50:                                               ; preds = %39, %44
  %51 = phi %"class.v8::internal::HeapGraphEdge"* [ %49, %44 ], [ null, %39 ]
  %52 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %51, i64 0, i32 0
  %53 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %0, i64 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = lshr i32 %54, 4
  %56 = shl nuw nsw i32 %55, 3
  %57 = or i32 %56, %1
  store i32 %57, i32* %52, align 8
  %58 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %51, i64 0, i32 1
  %59 = bitcast %"class.v8::internal::HeapEntry"** %58 to i64*
  store i64 %6, i64* %59, align 8
  %60 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %51, i64 0, i32 2, i32 0
  %61 = bitcast i8** %60 to i64*
  store i64 %5, i64* %61, align 8
  %62 = load i64, i64* %26, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %26, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9HeapEntry19SetIndexedReferenceENS0_13HeapGraphEdge4TypeEiPS1_(%"class.v8::internal::HeapEntry"*, i32, i32, %"class.v8::internal::HeapEntry"*) local_unnamed_addr #2 align 2 {
  %5 = ptrtoint %"class.v8::internal::HeapEntry"* %3 to i64
  %6 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %0, i64 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, 1
  store i32 %8, i32* %6, align 4
  %9 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %0, i64 0, i32 4
  %10 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %10, i64 0, i32 5, i32 0, i32 0, i32 2
  %12 = bitcast %"class.v8::internal::HeapGraphEdge"*** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %10, i64 0, i32 5, i32 0, i32 0, i32 1
  %15 = bitcast %"class.v8::internal::HeapGraphEdge"*** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %13, %16
  %18 = ashr exact i64 %17, 3
  %19 = icmp eq i64 %17, 0
  %20 = mul i64 %18, 170
  %21 = add i64 %20, -1
  %22 = select i1 %19, i64 0, i64 %21
  %23 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %10, i64 0, i32 5, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %10, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, %24
  %28 = icmp eq i64 %22, %27
  %29 = inttoptr i64 %16 to %"class.v8::internal::HeapGraphEdge"**
  %30 = inttoptr i64 %13 to %"class.v8::internal::HeapGraphEdge"**
  br i1 %28, label %31, label %38

31:                                               ; preds = %4
  %32 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %10, i64 0, i32 5
  tail call void @_ZNSt3__15dequeIN2v88internal13HeapGraphEdgeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.758"* %32) #13
  %33 = load i64, i64* %25, align 8
  %34 = load i64, i64* %23, align 8
  %35 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %14, align 8
  %36 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %11, align 8
  %37 = add i64 %34, %33
  br label %38

38:                                               ; preds = %31, %4
  %39 = phi i64 [ %37, %31 ], [ %27, %4 ]
  %40 = phi %"class.v8::internal::HeapGraphEdge"** [ %36, %31 ], [ %30, %4 ]
  %41 = phi %"class.v8::internal::HeapGraphEdge"** [ %35, %31 ], [ %29, %4 ]
  %42 = icmp eq %"class.v8::internal::HeapGraphEdge"** %40, %41
  br i1 %42, label %49, label %43

43:                                               ; preds = %38
  %44 = udiv i64 %39, 170
  %45 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %41, i64 %44
  %46 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %45, align 8
  %47 = urem i64 %39, 170
  %48 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %46, i64 %47
  br label %49

49:                                               ; preds = %38, %43
  %50 = phi %"class.v8::internal::HeapGraphEdge"* [ %48, %43 ], [ null, %38 ]
  %51 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %50, i64 0, i32 0
  %52 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %0, i64 0, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = lshr i32 %53, 4
  %55 = shl nuw nsw i32 %54, 3
  %56 = or i32 %55, %1
  store i32 %56, i32* %51, align 8
  %57 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %50, i64 0, i32 1
  %58 = bitcast %"class.v8::internal::HeapEntry"** %57 to i64*
  store i64 %5, i64* %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %50, i64 0, i32 2
  %60 = bitcast %union.anon.807* %59 to i32*
  store i32 %2, i32* %60, align 8
  %61 = load i64, i64* %25, align 8
  %62 = add i64 %61, 1
  store i64 %62, i64* %25, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9HeapEntry26SetNamedAutoIndexReferenceENS0_13HeapGraphEdge4TypeEPKcPS1_PNS0_14StringsStorageE(%"class.v8::internal::HeapEntry"* nocapture, i32, i8*, %"class.v8::internal::HeapEntry"*, %"class.v8::internal::StringsStorage"*) local_unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %0, i64 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, 1
  %9 = icmp eq i8* %2, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %5
  %11 = tail call i8* (%"class.v8::internal::StringsStorage"*, i8*, ...) @_ZN2v88internal14StringsStorage12GetFormattedEPKcz(%"class.v8::internal::StringsStorage"* %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 %8, i8* nonnull %2) #13
  br label %14

12:                                               ; preds = %5
  %13 = tail call i8* @_ZN2v88internal14StringsStorage7GetNameEi(%"class.v8::internal::StringsStorage"* %4, i32 %8) #13
  br label %14

14:                                               ; preds = %12, %10
  %15 = phi i8* [ %11, %10 ], [ %13, %12 ]
  %16 = ptrtoint i8* %15 to i64
  %17 = ptrtoint %"class.v8::internal::HeapEntry"* %3 to i64
  %18 = load i32, i32* %6, align 4
  %19 = add i32 %18, 1
  store i32 %19, i32* %6, align 4
  %20 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %0, i64 0, i32 4
  %21 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %21, i64 0, i32 5, i32 0, i32 0, i32 2
  %23 = bitcast %"class.v8::internal::HeapGraphEdge"*** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %21, i64 0, i32 5, i32 0, i32 0, i32 1
  %26 = bitcast %"class.v8::internal::HeapGraphEdge"*** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %24, %27
  %29 = ashr exact i64 %28, 3
  %30 = icmp eq i64 %28, 0
  %31 = mul i64 %29, 170
  %32 = add i64 %31, -1
  %33 = select i1 %30, i64 0, i64 %32
  %34 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %21, i64 0, i32 5, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %21, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, %35
  %39 = icmp eq i64 %33, %38
  %40 = inttoptr i64 %27 to %"class.v8::internal::HeapGraphEdge"**
  %41 = inttoptr i64 %24 to %"class.v8::internal::HeapGraphEdge"**
  br i1 %39, label %42, label %49

42:                                               ; preds = %14
  %43 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %21, i64 0, i32 5
  tail call void @_ZNSt3__15dequeIN2v88internal13HeapGraphEdgeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.758"* %43) #13
  %44 = load i64, i64* %36, align 8
  %45 = load i64, i64* %34, align 8
  %46 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %25, align 8
  %47 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %22, align 8
  %48 = add i64 %45, %44
  br label %49

49:                                               ; preds = %42, %14
  %50 = phi i64 [ %48, %42 ], [ %38, %14 ]
  %51 = phi %"class.v8::internal::HeapGraphEdge"** [ %47, %42 ], [ %41, %14 ]
  %52 = phi %"class.v8::internal::HeapGraphEdge"** [ %46, %42 ], [ %40, %14 ]
  %53 = icmp eq %"class.v8::internal::HeapGraphEdge"** %51, %52
  br i1 %53, label %60, label %54

54:                                               ; preds = %49
  %55 = udiv i64 %50, 170
  %56 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %52, i64 %55
  %57 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %56, align 8
  %58 = urem i64 %50, 170
  %59 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %57, i64 %58
  br label %60

60:                                               ; preds = %49, %54
  %61 = phi %"class.v8::internal::HeapGraphEdge"* [ %59, %54 ], [ null, %49 ]
  %62 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %61, i64 0, i32 0
  %63 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %0, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = lshr i32 %64, 4
  %66 = shl nuw nsw i32 %65, 3
  %67 = or i32 %66, %1
  store i32 %67, i32* %62, align 8
  %68 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %61, i64 0, i32 1
  %69 = bitcast %"class.v8::internal::HeapEntry"** %68 to i64*
  store i64 %17, i64* %69, align 8
  %70 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %61, i64 0, i32 2, i32 0
  %71 = bitcast i8** %70 to i64*
  store i64 %16, i64* %71, align 8
  %72 = load i64, i64* %36, align 8
  %73 = add i64 %72, 1
  store i64 %73, i64* %36, align 8
  ret void
}

declare i8* @_ZN2v88internal14StringsStorage12GetFormattedEPKcz(%"class.v8::internal::StringsStorage"*, i8*, ...) local_unnamed_addr #4

declare i8* @_ZN2v88internal14StringsStorage7GetNameEi(%"class.v8::internal::StringsStorage"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal9HeapEntry5PrintEPKcS3_ii(%"class.v8::internal::HeapEntry"* nocapture readonly, i8*, i8*, i32, i32) local_unnamed_addr #2 align 2 {
  %6 = alloca %"class.v8::internal::EmbeddedVector.1268", align 8
  %7 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %0, i64 0, i32 2
  %8 = bitcast [6 x i8]* %7 to i48*
  %9 = load i48, i48* %8, align 8
  %10 = zext i48 %9 to i64
  %11 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %0, i64 0, i32 6
  %12 = load i32, i32* %11, align 8
  tail call void (i8*, ...) @_ZN2v84base2OS5PrintEPKcz(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 %10, i32 %12, i32 %4, i32 32, i8* %1, i8* %2) #13
  %13 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 15
  switch i32 %15, label %28 [
    i32 2, label %33
    i32 0, label %29
    i32 3, label %16
    i32 5, label %17
    i32 13, label %27
    i32 4, label %18
    i32 1, label %19
    i32 6, label %20
    i32 7, label %21
    i32 8, label %22
    i32 9, label %23
    i32 10, label %24
    i32 11, label %25
    i32 12, label %26
  ]

16:                                               ; preds = %5
  br label %29

17:                                               ; preds = %5
  br label %29

18:                                               ; preds = %5
  br label %29

19:                                               ; preds = %5
  br label %29

20:                                               ; preds = %5
  br label %29

21:                                               ; preds = %5
  br label %29

22:                                               ; preds = %5
  br label %29

23:                                               ; preds = %5
  br label %29

24:                                               ; preds = %5
  br label %29

25:                                               ; preds = %5
  br label %29

26:                                               ; preds = %5
  br label %29

27:                                               ; preds = %5
  br label %29

28:                                               ; preds = %5
  br label %29

29:                                               ; preds = %5, %16, %17, %18, %19, %20, %21, %22, %23, %24, %25, %26, %27, %28
  %30 = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), %28 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i64 0, i64 0), %27 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i64 0, i64 0), %26 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25, i64 0, i64 0), %25 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.24, i64 0, i64 0), %24 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0), %23 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i64 0, i64 0), %22 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i64 0, i64 0), %21 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0), %20 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i64 0, i64 0), %19 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0), %18 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i64 0, i64 0), %17 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0), %16 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i64 0, i64 0), %5 ]
  %31 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %0, i64 0, i32 5
  %32 = load i8*, i8** %31, align 8
  tail call void (i8*, ...) @_ZN2v84base2OS5PrintEPKcz(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i8* nonnull %30, i8* %32) #13
  br label %56

33:                                               ; preds = %5
  tail call void (i8*, ...) @_ZN2v84base2OS5PrintEPKcz(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #13
  %34 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %0, i64 0, i32 5
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast i8** %34 to i64*
  %37 = load i8, i8* %35, align 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %55, label %39

39:                                               ; preds = %33, %50
  %40 = phi i8* [ %47, %50 ], [ %35, %33 ]
  %41 = phi i8 [ %48, %50 ], [ %37, %33 ]
  %42 = icmp eq i8 %41, 10
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = sext i8 %41 to i32
  tail call void (i8*, ...) @_ZN2v84base2OS5PrintEPKcz(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i32 %44) #13
  br label %46

45:                                               ; preds = %39
  tail call void (i8*, ...) @_ZN2v84base2OS5PrintEPKcz(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0)) #13
  br label %46

46:                                               ; preds = %45, %43
  %47 = getelementptr inbounds i8, i8* %40, i64 1
  %48 = load i8, i8* %47, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = load i64, i64* %36, align 8
  %52 = ptrtoint i8* %47 to i64
  %53 = sub i64 %52, %51
  %54 = icmp slt i64 %53, 41
  br i1 %54, label %39, label %55

55:                                               ; preds = %50, %46, %33
  tail call void (i8*, ...) @_ZN2v84base2OS5PrintEPKcz(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0)) #13
  br label %56

56:                                               ; preds = %55, %29
  %57 = add nsw i32 %3, -1
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %150, label %59

59:                                               ; preds = %56
  %60 = load i32, i32* %13, align 8
  %61 = icmp ult i32 %60, 16
  %62 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %0, i64 0, i32 4
  %63 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %62, align 8
  br i1 %61, label %64, label %67

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %63, i64 0, i32 6, i32 0, i32 0
  %66 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %65, align 8
  br label %90

67:                                               ; preds = %59
  %68 = lshr i32 %60, 4
  %69 = add nsw i32 %68, -1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %63, i64 0, i32 4, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, %70
  %74 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %63, i64 0, i32 4, i32 0, i32 0, i32 1
  %75 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %74, align 8
  %76 = udiv i64 %73, 102
  %77 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %75, i64 %76
  %78 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %77, align 8
  %79 = urem i64 %73, 102
  %80 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %78, i64 %79, i32 4
  %81 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %81, i64 0, i32 6, i32 0, i32 0
  %83 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %82, align 8
  %84 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %78, i64 %79, i32 1, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %83, i64 %86
  %88 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %63, i64 0, i32 6, i32 0, i32 0
  %89 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %88, align 8
  br label %90

90:                                               ; preds = %64, %67
  %91 = phi %"class.v8::internal::HeapGraphEdge"** [ %66, %64 ], [ %89, %67 ]
  %92 = phi %"class.v8::internal::HeapGraphEdge"** [ %66, %64 ], [ %87, %67 ]
  %93 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %0, i64 0, i32 1, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %91, i64 %95
  %97 = icmp eq %"class.v8::internal::HeapGraphEdge"** %92, %96
  br i1 %97, label %150, label %98

98:                                               ; preds = %90
  %99 = bitcast %"class.v8::internal::EmbeddedVector.1268"* %6 to i8*
  %100 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1268", %"class.v8::internal::EmbeddedVector.1268"* %6, i64 0, i32 1, i64 0
  %101 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1268", %"class.v8::internal::EmbeddedVector.1268"* %6, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1268", %"class.v8::internal::EmbeddedVector.1268"* %6, i64 0, i32 0, i32 1
  %103 = add nsw i32 %4, 2
  br label %104

104:                                              ; preds = %98, %137
  %105 = phi %"class.v8::internal::HeapGraphEdge"** [ %92, %98 ], [ %142, %137 ]
  %106 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %105, align 8
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %99) #13
  store i8* %100, i8** %101, align 8
  store i64 64, i64* %102, align 8
  %107 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %106, i64 0, i32 0
  %108 = load i32, i32* %107, align 8
  %109 = and i32 %108, 7
  switch i32 %109, label %135 [
    i32 0, label %110
    i32 1, label %113
    i32 3, label %118
    i32 2, label %121
    i32 4, label %124
    i32 5, label %129
    i32 6, label %132
  ]

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %106, i64 0, i32 2, i32 0
  %112 = load i8*, i8** %111, align 8
  br label %137

113:                                              ; preds = %104
  %114 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %106, i64 0, i32 2
  %115 = bitcast %union.anon.807* %114 to i32*
  %116 = load i32, i32* %115, align 8
  %117 = call i32 (i8*, i64, i8*, ...) @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8* %100, i64 64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i32 %116) #13
  br label %137

118:                                              ; preds = %104
  %119 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %106, i64 0, i32 2, i32 0
  %120 = load i8*, i8** %119, align 8
  br label %137

121:                                              ; preds = %104
  %122 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %106, i64 0, i32 2, i32 0
  %123 = load i8*, i8** %122, align 8
  br label %137

124:                                              ; preds = %104
  %125 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %106, i64 0, i32 2
  %126 = bitcast %union.anon.807* %125 to i32*
  %127 = load i32, i32* %126, align 8
  %128 = call i32 (i8*, i64, i8*, ...) @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8* %100, i64 64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i32 %127) #13
  br label %137

129:                                              ; preds = %104
  %130 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %106, i64 0, i32 2, i32 0
  %131 = load i8*, i8** %130, align 8
  br label %137

132:                                              ; preds = %104
  %133 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %106, i64 0, i32 2, i32 0
  %134 = load i8*, i8** %133, align 8
  br label %137

135:                                              ; preds = %104
  %136 = call i32 (i8*, i64, i8*, ...) @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8* %100, i64 64, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0), i32 %109) #13
  br label %137

137:                                              ; preds = %135, %132, %129, %124, %121, %118, %113, %110
  %138 = phi i8* [ %100, %135 ], [ %134, %132 ], [ %131, %129 ], [ %100, %124 ], [ %123, %121 ], [ %120, %118 ], [ %100, %113 ], [ %112, %110 ]
  %139 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), %135 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0), %132 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), %129 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), %124 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), %121 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), %118 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), %113 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), %110 ]
  %140 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %106, i64 0, i32 1
  %141 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %140, align 8
  call void @_ZNK2v88internal9HeapEntry5PrintEPKcS3_ii(%"class.v8::internal::HeapEntry"* %141, i8* nonnull %139, i8* %138, i32 %57, i32 %103)
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %99) #13
  %142 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %105, i64 1
  %143 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %62, align 8
  %144 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %143, i64 0, i32 6, i32 0, i32 0
  %145 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %144, align 8
  %146 = load i32, i32* %93, align 4
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %145, i64 %147
  %149 = icmp eq %"class.v8::internal::HeapGraphEdge"** %142, %148
  br i1 %149, label %150, label %104

150:                                              ; preds = %137, %90, %56
  ret void
}

declare void @_ZN2v84base2OS5PrintEPKcz(i8*, ...) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK2v88internal9HeapEntry12TypeAsStringEv(%"class.v8::internal::HeapEntry"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 15
  %5 = icmp ult i32 %4, 14
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = zext i32 %4 to i64
  %8 = getelementptr inbounds [14 x i8*], [14 x i8*]* @switch.table._ZNK2v88internal9HeapEntry12TypeAsStringEv, i64 0, i64 %7
  %9 = load i8*, i8** %8, align 8
  ret i8* %9

10:                                               ; preds = %1
  ret i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0)
}

declare i32 @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8*, i64, i8*, ...) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12HeapSnapshotC2EPNS0_12HeapProfilerEbb(%"class.v8::internal::HeapSnapshot"* nocapture, %"class.v8::internal::HeapProfiler"*, i1 zeroext, i1 zeroext) unnamed_addr #2 align 2 {
  %5 = zext i1 %2 to i8
  %6 = zext i1 %3 to i8
  %7 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 0
  store %"class.v8::internal::HeapProfiler"* %1, %"class.v8::internal::HeapProfiler"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4
  %10 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 7, i32 0, i32 3
  %11 = bitcast %"class.std::__1::__compressed_pair.794"* %10 to i32*
  %12 = bitcast %"class.v8::internal::HeapEntry"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  %13 = bitcast %"class.std::__1::deque"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 152, i1 false)
  store i32 1065353216, i32* %11, align 4
  %14 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 8
  %15 = bitcast %"class.std::__1::vector.800"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #13
  %16 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 9
  store i32 -1, i32* %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 10
  store i8 %5, i8* %17, align 4
  %18 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 11
  store i8 %6, i8* %18, align 1
  %19 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 3
  %20 = bitcast [25 x %"class.v8::internal::HeapEntry"*]* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 200, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12HeapSnapshot6DeleteEv(%"class.v8::internal::HeapSnapshot"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::HeapProfiler"*, %"class.v8::internal::HeapProfiler"** %2, align 8
  tail call void @_ZN2v88internal12HeapProfiler14RemoveSnapshotEPNS0_12HeapSnapshotE(%"class.v8::internal::HeapProfiler"* %3, %"class.v8::internal::HeapSnapshot"* %0) #13
  ret void
}

declare void @_ZN2v88internal12HeapProfiler14RemoveSnapshotEPNS0_12HeapSnapshotE(%"class.v8::internal::HeapProfiler"*, %"class.v8::internal::HeapSnapshot"*) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal12HeapSnapshot22RememberLastJSObjectIdEv(%"class.v8::internal::HeapSnapshot"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::HeapProfiler"*, %"class.v8::internal::HeapProfiler"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::HeapProfiler", %"class.v8::internal::HeapProfiler"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::HeapObjectsMap"*, %"class.v8::internal::HeapObjectsMap"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %5, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -2
  %9 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 9
  store i32 %8, i32* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12HeapSnapshot23AddSyntheticRootEntriesEv(%"class.v8::internal::HeapSnapshot"*) local_unnamed_addr #2 align 2 {
  %2 = ptrtoint %"class.v8::internal::HeapSnapshot"* %0 to i64
  %3 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %4 to i32
  %6 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %7 = bitcast %"class.v8::internal::HeapEntry"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %10 = bitcast %"class.v8::internal::HeapEntry"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %8, %11
  %13 = ashr exact i64 %12, 3
  %14 = icmp eq i64 %12, 0
  %15 = mul i64 %13, 102
  %16 = add i64 %15, -1
  %17 = select i1 %14, i64 0, i64 %16
  %18 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, %4
  %21 = icmp eq i64 %17, %20
  %22 = inttoptr i64 %11 to %"class.v8::internal::HeapEntry"**
  %23 = inttoptr i64 %8 to %"class.v8::internal::HeapEntry"**
  br i1 %21, label %24, label %31

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4
  tail call void @_ZNSt3__15dequeIN2v88internal9HeapEntryENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %25) #13
  %26 = load i64, i64* %3, align 8
  %27 = load i64, i64* %18, align 8
  %28 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %9, align 8
  %29 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %6, align 8
  %30 = add i64 %27, %26
  br label %31

31:                                               ; preds = %24, %1
  %32 = phi i64 [ %30, %24 ], [ %20, %1 ]
  %33 = phi %"class.v8::internal::HeapEntry"** [ %29, %24 ], [ %23, %1 ]
  %34 = phi %"class.v8::internal::HeapEntry"** [ %28, %24 ], [ %22, %1 ]
  %35 = icmp eq %"class.v8::internal::HeapEntry"** %33, %34
  br i1 %35, label %42, label %36

36:                                               ; preds = %31
  %37 = udiv i64 %32, 102
  %38 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %34, i64 %37
  %39 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %38, align 8
  %40 = urem i64 %32, 102
  %41 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %39, i64 %40
  br label %42

42:                                               ; preds = %31, %36
  %43 = phi %"class.v8::internal::HeapEntry"* [ %41, %36 ], [ null, %31 ]
  %44 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %43, i64 0, i32 0
  %45 = shl i32 %5, 4
  %46 = or i32 %45, 9
  store i32 %46, i32* %44, align 8
  %47 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %43, i64 0, i32 1, i32 0
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %43, i64 0, i32 2
  %49 = bitcast [6 x i8]* %48 to i48*
  store i48 0, i48* %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %43, i64 0, i32 3
  store i8 0, i8* %50, align 2
  %51 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %43, i64 0, i32 4
  %52 = bitcast %"class.v8::internal::HeapSnapshot"** %51 to i64*
  store i64 %2, i64* %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %43, i64 0, i32 5
  %54 = bitcast i8** %53 to i64*
  store i64 ptrtoint ([1 x i8]* @.str.7 to i64), i64* %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %43, i64 0, i32 6
  store i32 1, i32* %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %43, i64 0, i32 7
  store i32 0, i32* %56, align 4
  %57 = load i64, i64* %3, align 8
  %58 = add i64 %57, 1
  store i64 %58, i64* %3, align 8
  %59 = load i64, i64* %18, align 8
  %60 = add i64 %59, %57
  %61 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %9, align 8
  %62 = udiv i64 %60, 102
  %63 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %61, i64 %62
  %64 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %63, align 8
  %65 = urem i64 %60, 102
  %66 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %64, i64 %65
  %67 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 1
  store %"class.v8::internal::HeapEntry"* %66, %"class.v8::internal::HeapEntry"** %67, align 8
  %68 = trunc i64 %58 to i32
  %69 = load i64, i64* %7, align 8
  %70 = ptrtoint %"class.v8::internal::HeapEntry"** %61 to i64
  %71 = sub i64 %69, %70
  %72 = ashr exact i64 %71, 3
  %73 = icmp eq i64 %71, 0
  %74 = mul i64 %72, 102
  %75 = add i64 %74, -1
  %76 = select i1 %73, i64 0, i64 %75
  %77 = add i64 %59, %58
  %78 = icmp eq i64 %76, %77
  %79 = inttoptr i64 %69 to %"class.v8::internal::HeapEntry"**
  br i1 %78, label %80, label %87

80:                                               ; preds = %42
  %81 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4
  tail call void @_ZNSt3__15dequeIN2v88internal9HeapEntryENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %81) #13
  %82 = load i64, i64* %3, align 8
  %83 = load i64, i64* %18, align 8
  %84 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %9, align 8
  %85 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %6, align 8
  %86 = add i64 %83, %82
  br label %87

87:                                               ; preds = %80, %42
  %88 = phi i64 [ %86, %80 ], [ %77, %42 ]
  %89 = phi %"class.v8::internal::HeapEntry"** [ %85, %80 ], [ %79, %42 ]
  %90 = phi %"class.v8::internal::HeapEntry"** [ %84, %80 ], [ %61, %42 ]
  %91 = icmp eq %"class.v8::internal::HeapEntry"** %89, %90
  br i1 %91, label %98, label %92

92:                                               ; preds = %87
  %93 = udiv i64 %88, 102
  %94 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %90, i64 %93
  %95 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %94, align 8
  %96 = urem i64 %88, 102
  %97 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %95, i64 %96
  br label %98

98:                                               ; preds = %87, %92
  %99 = phi %"class.v8::internal::HeapEntry"* [ %97, %92 ], [ null, %87 ]
  %100 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %99, i64 0, i32 0
  %101 = shl i32 %68, 4
  %102 = or i32 %101, 9
  store i32 %102, i32* %100, align 8
  %103 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %99, i64 0, i32 1, i32 0
  store i32 0, i32* %103, align 4
  %104 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %99, i64 0, i32 2
  %105 = bitcast [6 x i8]* %104 to i48*
  store i48 0, i48* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %99, i64 0, i32 3
  store i8 0, i8* %106, align 2
  %107 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %99, i64 0, i32 4
  %108 = bitcast %"class.v8::internal::HeapSnapshot"** %107 to i64*
  store i64 %2, i64* %108, align 8
  %109 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %99, i64 0, i32 5
  %110 = bitcast i8** %109 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.29 to i64), i64* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %99, i64 0, i32 6
  store i32 3, i32* %111, align 8
  %112 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %99, i64 0, i32 7
  store i32 0, i32* %112, align 4
  %113 = load i64, i64* %3, align 8
  %114 = add i64 %113, 1
  store i64 %114, i64* %3, align 8
  %115 = load i64, i64* %18, align 8
  %116 = add i64 %115, %113
  %117 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %9, align 8
  %118 = udiv i64 %116, 102
  %119 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %117, i64 %118
  %120 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %119, align 8
  %121 = urem i64 %116, 102
  %122 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %120, i64 %121
  %123 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 2
  store %"class.v8::internal::HeapEntry"* %122, %"class.v8::internal::HeapEntry"** %123, align 8
  tail call void @_ZN2v88internal12HeapSnapshot17AddGcSubrootEntryENS0_4RootEj(%"class.v8::internal::HeapSnapshot"* %0, i32 0, i32 5)
  tail call void @_ZN2v88internal12HeapSnapshot17AddGcSubrootEntryENS0_4RootEj(%"class.v8::internal::HeapSnapshot"* %0, i32 1, i32 7)
  tail call void @_ZN2v88internal12HeapSnapshot17AddGcSubrootEntryENS0_4RootEj(%"class.v8::internal::HeapSnapshot"* %0, i32 2, i32 9)
  tail call void @_ZN2v88internal12HeapSnapshot17AddGcSubrootEntryENS0_4RootEj(%"class.v8::internal::HeapSnapshot"* %0, i32 3, i32 11)
  tail call void @_ZN2v88internal12HeapSnapshot17AddGcSubrootEntryENS0_4RootEj(%"class.v8::internal::HeapSnapshot"* %0, i32 4, i32 13)
  tail call void @_ZN2v88internal12HeapSnapshot17AddGcSubrootEntryENS0_4RootEj(%"class.v8::internal::HeapSnapshot"* %0, i32 5, i32 15)
  tail call void @_ZN2v88internal12HeapSnapshot17AddGcSubrootEntryENS0_4RootEj(%"class.v8::internal::HeapSnapshot"* %0, i32 6, i32 17)
  tail call void @_ZN2v88internal12HeapSnapshot17AddGcSubrootEntryENS0_4RootEj(%"class.v8::internal::HeapSnapshot"* %0, i32 7, i32 19)
  tail call void @_ZN2v88internal12HeapSnapshot17AddGcSubrootEntryENS0_4RootEj(%"class.v8::internal::HeapSnapshot"* %0, i32 8, i32 21)
  tail call void @_ZN2v88internal12HeapSnapshot17AddGcSubrootEntryENS0_4RootEj(%"class.v8::internal::HeapSnapshot"* %0, i32 9, i32 23)
  tail call void @_ZN2v88internal12HeapSnapshot17AddGcSubrootEntryENS0_4RootEj(%"class.v8::internal::HeapSnapshot"* %0, i32 10, i32 25)
  tail call void @_ZN2v88internal12HeapSnapshot17AddGcSubrootEntryENS0_4RootEj(%"class.v8::internal::HeapSnapshot"* %0, i32 11, i32 27)
  tail call void @_ZN2v88internal12HeapSnapshot17AddGcSubrootEntryENS0_4RootEj(%"class.v8::internal::HeapSnapshot"* %0, i32 12, i32 29)
  tail call void @_ZN2v88internal12HeapSnapshot17AddGcSubrootEntryENS0_4RootEj(%"class.v8::internal::HeapSnapshot"* %0, i32 13, i32 31)
  tail call void @_ZN2v88internal12HeapSnapshot17AddGcSubrootEntryENS0_4RootEj(%"class.v8::internal::HeapSnapshot"* %0, i32 14, i32 33)
  tail call void @_ZN2v88internal12HeapSnapshot17AddGcSubrootEntryENS0_4RootEj(%"class.v8::internal::HeapSnapshot"* %0, i32 15, i32 35)
  tail call void @_ZN2v88internal12HeapSnapshot17AddGcSubrootEntryENS0_4RootEj(%"class.v8::internal::HeapSnapshot"* %0, i32 16, i32 37)
  tail call void @_ZN2v88internal12HeapSnapshot17AddGcSubrootEntryENS0_4RootEj(%"class.v8::internal::HeapSnapshot"* %0, i32 17, i32 39)
  tail call void @_ZN2v88internal12HeapSnapshot17AddGcSubrootEntryENS0_4RootEj(%"class.v8::internal::HeapSnapshot"* %0, i32 18, i32 41)
  tail call void @_ZN2v88internal12HeapSnapshot17AddGcSubrootEntryENS0_4RootEj(%"class.v8::internal::HeapSnapshot"* %0, i32 19, i32 43)
  tail call void @_ZN2v88internal12HeapSnapshot17AddGcSubrootEntryENS0_4RootEj(%"class.v8::internal::HeapSnapshot"* %0, i32 20, i32 45)
  tail call void @_ZN2v88internal12HeapSnapshot17AddGcSubrootEntryENS0_4RootEj(%"class.v8::internal::HeapSnapshot"* %0, i32 21, i32 47)
  tail call void @_ZN2v88internal12HeapSnapshot17AddGcSubrootEntryENS0_4RootEj(%"class.v8::internal::HeapSnapshot"* %0, i32 22, i32 49)
  tail call void @_ZN2v88internal12HeapSnapshot17AddGcSubrootEntryENS0_4RootEj(%"class.v8::internal::HeapSnapshot"* %0, i32 23, i32 51)
  tail call void @_ZN2v88internal12HeapSnapshot17AddGcSubrootEntryENS0_4RootEj(%"class.v8::internal::HeapSnapshot"* %0, i32 24, i32 53)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12HeapSnapshot12AddRootEntryEv(%"class.v8::internal::HeapSnapshot"*) local_unnamed_addr #2 align 2 {
  %2 = ptrtoint %"class.v8::internal::HeapSnapshot"* %0 to i64
  %3 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %4 to i32
  %6 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %7 = bitcast %"class.v8::internal::HeapEntry"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %10 = bitcast %"class.v8::internal::HeapEntry"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %8, %11
  %13 = ashr exact i64 %12, 3
  %14 = icmp eq i64 %12, 0
  %15 = mul i64 %13, 102
  %16 = add i64 %15, -1
  %17 = select i1 %14, i64 0, i64 %16
  %18 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, %4
  %21 = icmp eq i64 %17, %20
  %22 = inttoptr i64 %11 to %"class.v8::internal::HeapEntry"**
  %23 = inttoptr i64 %8 to %"class.v8::internal::HeapEntry"**
  br i1 %21, label %24, label %31

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4
  tail call void @_ZNSt3__15dequeIN2v88internal9HeapEntryENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %25) #13
  %26 = load i64, i64* %3, align 8
  %27 = load i64, i64* %18, align 8
  %28 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %9, align 8
  %29 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %6, align 8
  %30 = add i64 %27, %26
  br label %31

31:                                               ; preds = %24, %1
  %32 = phi i64 [ %30, %24 ], [ %20, %1 ]
  %33 = phi %"class.v8::internal::HeapEntry"** [ %29, %24 ], [ %23, %1 ]
  %34 = phi %"class.v8::internal::HeapEntry"** [ %28, %24 ], [ %22, %1 ]
  %35 = icmp eq %"class.v8::internal::HeapEntry"** %33, %34
  br i1 %35, label %42, label %36

36:                                               ; preds = %31
  %37 = udiv i64 %32, 102
  %38 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %34, i64 %37
  %39 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %38, align 8
  %40 = urem i64 %32, 102
  %41 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %39, i64 %40
  br label %42

42:                                               ; preds = %31, %36
  %43 = phi %"class.v8::internal::HeapEntry"* [ %41, %36 ], [ null, %31 ]
  %44 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %43, i64 0, i32 0
  %45 = shl i32 %5, 4
  %46 = or i32 %45, 9
  store i32 %46, i32* %44, align 8
  %47 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %43, i64 0, i32 1, i32 0
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %43, i64 0, i32 2
  %49 = bitcast [6 x i8]* %48 to i48*
  store i48 0, i48* %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %43, i64 0, i32 3
  store i8 0, i8* %50, align 2
  %51 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %43, i64 0, i32 4
  %52 = bitcast %"class.v8::internal::HeapSnapshot"** %51 to i64*
  store i64 %2, i64* %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %43, i64 0, i32 5
  %54 = bitcast i8** %53 to i64*
  store i64 ptrtoint ([1 x i8]* @.str.7 to i64), i64* %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %43, i64 0, i32 6
  store i32 1, i32* %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %43, i64 0, i32 7
  store i32 0, i32* %56, align 4
  %57 = load i64, i64* %3, align 8
  %58 = add i64 %57, 1
  store i64 %58, i64* %3, align 8
  %59 = load i64, i64* %18, align 8
  %60 = add i64 %59, %57
  %61 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %9, align 8
  %62 = udiv i64 %60, 102
  %63 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %61, i64 %62
  %64 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %63, align 8
  %65 = urem i64 %60, 102
  %66 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %64, i64 %65
  %67 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 1
  store %"class.v8::internal::HeapEntry"* %66, %"class.v8::internal::HeapEntry"** %67, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12HeapSnapshot15AddGcRootsEntryEv(%"class.v8::internal::HeapSnapshot"*) local_unnamed_addr #2 align 2 {
  %2 = ptrtoint %"class.v8::internal::HeapSnapshot"* %0 to i64
  %3 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %4 to i32
  %6 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %7 = bitcast %"class.v8::internal::HeapEntry"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %10 = bitcast %"class.v8::internal::HeapEntry"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %8, %11
  %13 = ashr exact i64 %12, 3
  %14 = icmp eq i64 %12, 0
  %15 = mul i64 %13, 102
  %16 = add i64 %15, -1
  %17 = select i1 %14, i64 0, i64 %16
  %18 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, %4
  %21 = icmp eq i64 %17, %20
  %22 = inttoptr i64 %11 to %"class.v8::internal::HeapEntry"**
  %23 = inttoptr i64 %8 to %"class.v8::internal::HeapEntry"**
  br i1 %21, label %24, label %31

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4
  tail call void @_ZNSt3__15dequeIN2v88internal9HeapEntryENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %25) #13
  %26 = load i64, i64* %3, align 8
  %27 = load i64, i64* %18, align 8
  %28 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %9, align 8
  %29 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %6, align 8
  %30 = add i64 %27, %26
  br label %31

31:                                               ; preds = %24, %1
  %32 = phi i64 [ %30, %24 ], [ %20, %1 ]
  %33 = phi %"class.v8::internal::HeapEntry"** [ %29, %24 ], [ %23, %1 ]
  %34 = phi %"class.v8::internal::HeapEntry"** [ %28, %24 ], [ %22, %1 ]
  %35 = icmp eq %"class.v8::internal::HeapEntry"** %33, %34
  br i1 %35, label %42, label %36

36:                                               ; preds = %31
  %37 = udiv i64 %32, 102
  %38 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %34, i64 %37
  %39 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %38, align 8
  %40 = urem i64 %32, 102
  %41 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %39, i64 %40
  br label %42

42:                                               ; preds = %31, %36
  %43 = phi %"class.v8::internal::HeapEntry"* [ %41, %36 ], [ null, %31 ]
  %44 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %43, i64 0, i32 0
  %45 = shl i32 %5, 4
  %46 = or i32 %45, 9
  store i32 %46, i32* %44, align 8
  %47 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %43, i64 0, i32 1, i32 0
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %43, i64 0, i32 2
  %49 = bitcast [6 x i8]* %48 to i48*
  store i48 0, i48* %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %43, i64 0, i32 3
  store i8 0, i8* %50, align 2
  %51 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %43, i64 0, i32 4
  %52 = bitcast %"class.v8::internal::HeapSnapshot"** %51 to i64*
  store i64 %2, i64* %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %43, i64 0, i32 5
  %54 = bitcast i8** %53 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.29 to i64), i64* %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %43, i64 0, i32 6
  store i32 3, i32* %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %43, i64 0, i32 7
  store i32 0, i32* %56, align 4
  %57 = load i64, i64* %3, align 8
  %58 = add i64 %57, 1
  store i64 %58, i64* %3, align 8
  %59 = load i64, i64* %18, align 8
  %60 = add i64 %59, %57
  %61 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %9, align 8
  %62 = udiv i64 %60, 102
  %63 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %61, i64 %62
  %64 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %63, align 8
  %65 = urem i64 %60, 102
  %66 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %64, i64 %65
  %67 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 2
  store %"class.v8::internal::HeapEntry"* %66, %"class.v8::internal::HeapEntry"** %67, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12HeapSnapshot17AddGcSubrootEntryENS0_4RootEj(%"class.v8::internal::HeapSnapshot"*, i32, i32) local_unnamed_addr #2 align 2 {
  %4 = tail call i8* @_ZN2v88internal11RootVisitor8RootNameENS0_4RootE(i32 %1) #13
  %5 = ptrtoint i8* %4 to i64
  %6 = ptrtoint %"class.v8::internal::HeapSnapshot"* %0 to i64
  %7 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %11 = bitcast %"class.v8::internal::HeapEntry"*** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %14 = bitcast %"class.v8::internal::HeapEntry"*** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %12, %15
  %17 = ashr exact i64 %16, 3
  %18 = icmp eq i64 %16, 0
  %19 = mul i64 %17, 102
  %20 = add i64 %19, -1
  %21 = select i1 %18, i64 0, i64 %20
  %22 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, %8
  %25 = icmp eq i64 %21, %24
  %26 = inttoptr i64 %15 to %"class.v8::internal::HeapEntry"**
  %27 = inttoptr i64 %12 to %"class.v8::internal::HeapEntry"**
  br i1 %25, label %28, label %35

28:                                               ; preds = %3
  %29 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4
  tail call void @_ZNSt3__15dequeIN2v88internal9HeapEntryENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %29) #13
  %30 = load i64, i64* %7, align 8
  %31 = load i64, i64* %22, align 8
  %32 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %13, align 8
  %33 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %10, align 8
  %34 = add i64 %31, %30
  br label %35

35:                                               ; preds = %28, %3
  %36 = phi i64 [ %34, %28 ], [ %24, %3 ]
  %37 = phi %"class.v8::internal::HeapEntry"** [ %33, %28 ], [ %27, %3 ]
  %38 = phi %"class.v8::internal::HeapEntry"** [ %32, %28 ], [ %26, %3 ]
  %39 = icmp eq %"class.v8::internal::HeapEntry"** %37, %38
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = udiv i64 %36, 102
  %42 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %38, i64 %41
  %43 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %42, align 8
  %44 = urem i64 %36, 102
  %45 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %43, i64 %44
  br label %46

46:                                               ; preds = %35, %40
  %47 = phi %"class.v8::internal::HeapEntry"* [ %45, %40 ], [ null, %35 ]
  %48 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %47, i64 0, i32 0
  %49 = shl i32 %9, 4
  %50 = or i32 %49, 9
  store i32 %50, i32* %48, align 8
  %51 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %47, i64 0, i32 1, i32 0
  store i32 0, i32* %51, align 4
  %52 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %47, i64 0, i32 2
  %53 = bitcast [6 x i8]* %52 to i48*
  store i48 0, i48* %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %47, i64 0, i32 3
  store i8 0, i8* %54, align 2
  %55 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %47, i64 0, i32 4
  %56 = bitcast %"class.v8::internal::HeapSnapshot"** %55 to i64*
  store i64 %6, i64* %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %47, i64 0, i32 5
  %58 = bitcast i8** %57 to i64*
  store i64 %5, i64* %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %47, i64 0, i32 6
  store i32 %2, i32* %59, align 8
  %60 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %47, i64 0, i32 7
  store i32 0, i32* %60, align 4
  %61 = load i64, i64* %7, align 8
  %62 = add i64 %61, 1
  store i64 %62, i64* %7, align 8
  %63 = load i64, i64* %22, align 8
  %64 = add i64 %63, %61
  %65 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %13, align 8
  %66 = udiv i64 %64, 102
  %67 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %65, i64 %66
  %68 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %67, align 8
  %69 = urem i64 %64, 102
  %70 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %68, i64 %69
  %71 = sext i32 %1 to i64
  %72 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 3, i64 %71
  store %"class.v8::internal::HeapEntry"* %70, %"class.v8::internal::HeapEntry"** %72, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::HeapEntry"* @_ZN2v88internal12HeapSnapshot8AddEntryENS0_9HeapEntry4TypeEPKcjmj(%"class.v8::internal::HeapSnapshot"*, i32, i8*, i32, i64, i32) local_unnamed_addr #2 align 2 {
  %7 = ptrtoint i8* %2 to i64
  %8 = ptrtoint %"class.v8::internal::HeapSnapshot"* %0 to i64
  %9 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %13 = bitcast %"class.v8::internal::HeapEntry"*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %16 = bitcast %"class.v8::internal::HeapEntry"*** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %14, %17
  %19 = ashr exact i64 %18, 3
  %20 = icmp eq i64 %18, 0
  %21 = mul i64 %19, 102
  %22 = add i64 %21, -1
  %23 = select i1 %20, i64 0, i64 %22
  %24 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, %10
  %27 = icmp eq i64 %23, %26
  %28 = inttoptr i64 %17 to %"class.v8::internal::HeapEntry"**
  %29 = inttoptr i64 %14 to %"class.v8::internal::HeapEntry"**
  br i1 %27, label %30, label %37

30:                                               ; preds = %6
  %31 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4
  tail call void @_ZNSt3__15dequeIN2v88internal9HeapEntryENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %31) #13
  %32 = load i64, i64* %9, align 8
  %33 = load i64, i64* %24, align 8
  %34 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %15, align 8
  %35 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %12, align 8
  %36 = add i64 %33, %32
  br label %37

37:                                               ; preds = %30, %6
  %38 = phi i64 [ %36, %30 ], [ %26, %6 ]
  %39 = phi %"class.v8::internal::HeapEntry"** [ %35, %30 ], [ %29, %6 ]
  %40 = phi %"class.v8::internal::HeapEntry"** [ %34, %30 ], [ %28, %6 ]
  %41 = icmp eq %"class.v8::internal::HeapEntry"** %39, %40
  br i1 %41, label %48, label %42

42:                                               ; preds = %37
  %43 = udiv i64 %38, 102
  %44 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %40, i64 %43
  %45 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %44, align 8
  %46 = urem i64 %38, 102
  %47 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %45, i64 %46
  br label %48

48:                                               ; preds = %37, %42
  %49 = phi %"class.v8::internal::HeapEntry"* [ %47, %42 ], [ null, %37 ]
  %50 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %49, i64 0, i32 0
  %51 = and i32 %1, 15
  %52 = shl i32 %11, 4
  %53 = or i32 %52, %51
  store i32 %53, i32* %50, align 8
  %54 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %49, i64 0, i32 1, i32 0
  store i32 0, i32* %54, align 4
  %55 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %49, i64 0, i32 2
  %56 = bitcast [6 x i8]* %55 to i48*
  %57 = trunc i64 %4 to i48
  store i48 %57, i48* %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %49, i64 0, i32 3
  store i8 0, i8* %58, align 2
  %59 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %49, i64 0, i32 4
  %60 = bitcast %"class.v8::internal::HeapSnapshot"** %59 to i64*
  store i64 %8, i64* %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %49, i64 0, i32 5
  %62 = bitcast i8** %61 to i64*
  store i64 %7, i64* %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %49, i64 0, i32 6
  store i32 %3, i32* %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %49, i64 0, i32 7
  store i32 %5, i32* %64, align 4
  %65 = load i64, i64* %9, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %9, align 8
  %67 = load i64, i64* %24, align 8
  %68 = add i64 %67, %65
  %69 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %15, align 8
  %70 = udiv i64 %68, 102
  %71 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %69, i64 %70
  %72 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %71, align 8
  %73 = urem i64 %68, 102
  %74 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %72, i64 %73
  ret %"class.v8::internal::HeapEntry"* %74
}

declare i8* @_ZN2v88internal11RootVisitor8RootNameENS0_4RootE(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12HeapSnapshot11AddLocationEPNS0_9HeapEntryEiii(%"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapEntry"* nocapture readonly, i32, i32, i32) local_unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 8
  %7 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = lshr i32 %8, 4
  %10 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 8, i32 0, i32 1
  %11 = load %"struct.v8::internal::SourceLocation"*, %"struct.v8::internal::SourceLocation"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %13 = load %"struct.v8::internal::SourceLocation"*, %"struct.v8::internal::SourceLocation"** %12, align 8
  %14 = icmp ult %"struct.v8::internal::SourceLocation"* %11, %13
  %15 = ptrtoint %"struct.v8::internal::SourceLocation"* %13 to i64
  br i1 %14, label %16, label %24

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"struct.v8::internal::SourceLocation", %"struct.v8::internal::SourceLocation"* %11, i64 0, i32 0
  store i32 %9, i32* %17, align 4
  %18 = getelementptr inbounds %"struct.v8::internal::SourceLocation", %"struct.v8::internal::SourceLocation"* %11, i64 0, i32 1
  store i32 %2, i32* %18, align 4
  %19 = getelementptr inbounds %"struct.v8::internal::SourceLocation", %"struct.v8::internal::SourceLocation"* %11, i64 0, i32 2
  store i32 %3, i32* %19, align 4
  %20 = getelementptr inbounds %"struct.v8::internal::SourceLocation", %"struct.v8::internal::SourceLocation"* %11, i64 0, i32 3
  store i32 %4, i32* %20, align 4
  %21 = getelementptr inbounds %"struct.v8::internal::SourceLocation", %"struct.v8::internal::SourceLocation"* %11, i64 1
  %22 = ptrtoint %"struct.v8::internal::SourceLocation"* %21 to i64
  %23 = bitcast %"struct.v8::internal::SourceLocation"** %10 to i64*
  store i64 %22, i64* %23, align 8
  br label %84

24:                                               ; preds = %5
  %25 = ptrtoint %"struct.v8::internal::SourceLocation"* %11 to i64
  %26 = bitcast %"struct.v8::internal::SourceLocation"** %10 to i64*
  %27 = bitcast %"class.std::__1::vector.800"* %6 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %25, %28
  %30 = ashr exact i64 %29, 4
  %31 = add nsw i64 %30, 1
  %32 = icmp ugt i64 %31, 1152921504606846975
  br i1 %32, label %33, label %35

33:                                               ; preds = %24
  %34 = bitcast %"class.std::__1::vector.800"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %34) #20
  unreachable

35:                                               ; preds = %24
  %36 = bitcast %"struct.v8::internal::SourceLocation"** %12 to i64*
  %37 = sub i64 %15, %28
  %38 = ashr exact i64 %37, 4
  %39 = icmp ult i64 %38, 576460752303423487
  br i1 %39, label %40, label %48

40:                                               ; preds = %35
  %41 = ashr exact i64 %37, 3
  %42 = icmp ult i64 %41, %31
  %43 = select i1 %42, i64 %31, i64 %41
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %40
  %46 = icmp ugt i64 %43, 1152921504606846975
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @abort() #20
  unreachable

48:                                               ; preds = %45, %35
  %49 = phi i64 [ %43, %45 ], [ 1152921504606846975, %35 ]
  %50 = shl i64 %49, 4
  %51 = tail call i8* @_Znwm(i64 %50) #21
  %52 = bitcast i8* %51 to %"struct.v8::internal::SourceLocation"*
  br label %53

53:                                               ; preds = %48, %40
  %54 = phi i64 [ %49, %48 ], [ 0, %40 ]
  %55 = phi %"struct.v8::internal::SourceLocation"* [ %52, %48 ], [ null, %40 ]
  %56 = getelementptr inbounds %"struct.v8::internal::SourceLocation", %"struct.v8::internal::SourceLocation"* %55, i64 %30
  %57 = getelementptr inbounds %"struct.v8::internal::SourceLocation", %"struct.v8::internal::SourceLocation"* %55, i64 %54
  %58 = ptrtoint %"struct.v8::internal::SourceLocation"* %57 to i64
  %59 = getelementptr inbounds %"struct.v8::internal::SourceLocation", %"struct.v8::internal::SourceLocation"* %56, i64 0, i32 0
  store i32 %9, i32* %59, align 4
  %60 = getelementptr inbounds %"struct.v8::internal::SourceLocation", %"struct.v8::internal::SourceLocation"* %55, i64 %30, i32 1
  store i32 %2, i32* %60, align 4
  %61 = getelementptr inbounds %"struct.v8::internal::SourceLocation", %"struct.v8::internal::SourceLocation"* %55, i64 %30, i32 2
  store i32 %3, i32* %61, align 4
  %62 = getelementptr inbounds %"struct.v8::internal::SourceLocation", %"struct.v8::internal::SourceLocation"* %55, i64 %30, i32 3
  store i32 %4, i32* %62, align 4
  %63 = getelementptr inbounds %"struct.v8::internal::SourceLocation", %"struct.v8::internal::SourceLocation"* %56, i64 1
  %64 = ptrtoint %"struct.v8::internal::SourceLocation"* %63 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.800", %"class.std::__1::vector.800"* %6, i64 0, i32 0, i32 0
  %66 = load %"struct.v8::internal::SourceLocation"*, %"struct.v8::internal::SourceLocation"** %65, align 8
  %67 = load i64, i64* %26, align 8
  %68 = ptrtoint %"struct.v8::internal::SourceLocation"* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 4
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %"struct.v8::internal::SourceLocation", %"struct.v8::internal::SourceLocation"* %56, i64 %71
  %73 = ptrtoint %"struct.v8::internal::SourceLocation"* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %53
  %76 = bitcast %"struct.v8::internal::SourceLocation"* %72 to i8*
  %77 = bitcast %"struct.v8::internal::SourceLocation"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #13
  %78 = load %"struct.v8::internal::SourceLocation"*, %"struct.v8::internal::SourceLocation"** %65, align 8
  br label %79

79:                                               ; preds = %75, %53
  %80 = phi %"struct.v8::internal::SourceLocation"* [ %66, %53 ], [ %78, %75 ]
  store i64 %73, i64* %27, align 8
  store i64 %64, i64* %26, align 8
  store i64 %58, i64* %36, align 8
  %81 = icmp eq %"struct.v8::internal::SourceLocation"* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %"struct.v8::internal::SourceLocation"* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #21
  br label %84

84:                                               ; preds = %82, %79, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12HeapSnapshot12FillChildrenEv(%"class.v8::internal::HeapSnapshot"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %3 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = udiv i64 %5, 102
  %7 = urem i64 %5, 102
  %8 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %3, i64 %6
  %9 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %10 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %9, align 8
  %11 = icmp eq %"class.v8::internal::HeapEntry"** %10, %3
  br i1 %11, label %24, label %12

12:                                               ; preds = %1
  %13 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %8, align 8
  %14 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %13, i64 %7
  %15 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, %5
  %18 = udiv i64 %17, 102
  %19 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %3, i64 %18
  %20 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %19, align 8
  %21 = urem i64 %17, 102
  %22 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %20, i64 %21
  %23 = icmp eq %"class.v8::internal::HeapEntry"* %22, %14
  br i1 %23, label %24, label %65

24:                                               ; preds = %82, %1, %12
  %25 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 6, i32 0, i32 1
  %29 = bitcast %"class.v8::internal::HeapGraphEdge"*** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::vector.770"* %25 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %30, %32
  %34 = ashr exact i64 %33, 3
  %35 = icmp ugt i64 %27, %34
  %36 = inttoptr i64 %32 to %"class.v8::internal::HeapGraphEdge"**
  br i1 %35, label %37, label %39

37:                                               ; preds = %24
  %38 = sub i64 %27, %34
  tail call void @_ZNSt3__16vectorIPN2v88internal13HeapGraphEdgeENS_9allocatorIS4_EEE8__appendEm(%"class.std::__1::vector.770"* %25, i64 %38) #13
  br label %43

39:                                               ; preds = %24
  %40 = icmp ult i64 %27, %34
  br i1 %40, label %41, label %43

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %36, i64 %27
  store %"class.v8::internal::HeapGraphEdge"** %42, %"class.v8::internal::HeapGraphEdge"*** %28, align 8
  br label %43

43:                                               ; preds = %37, %39, %41
  %44 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %45 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 5, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = udiv i64 %47, 170
  %49 = urem i64 %47, 170
  %50 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %45, i64 %48
  %51 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %52 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %51, align 8
  %53 = icmp eq %"class.v8::internal::HeapGraphEdge"** %52, %45
  br i1 %53, label %87, label %54

54:                                               ; preds = %43
  %55 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %50, align 8
  %56 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %55, i64 %49
  %57 = load i64, i64* %26, align 8
  %58 = add i64 %57, %47
  %59 = udiv i64 %58, 170
  %60 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %45, i64 %59
  %61 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %60, align 8
  %62 = urem i64 %58, 170
  %63 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %61, i64 %62
  %64 = icmp eq %"class.v8::internal::HeapGraphEdge"* %63, %56
  br i1 %64, label %87, label %88

65:                                               ; preds = %12, %82
  %66 = phi %"class.v8::internal::HeapEntry"* [ %85, %82 ], [ %14, %12 ]
  %67 = phi i32 [ %71, %82 ], [ 0, %12 ]
  %68 = phi %"class.v8::internal::HeapEntry"** [ %83, %82 ], [ %8, %12 ]
  %69 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %66, i64 0, i32 1, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = add i32 %70, %67
  store i32 %67, i32* %69, align 4
  %72 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %66, i64 1
  %73 = ptrtoint %"class.v8::internal::HeapEntry"* %72 to i64
  %74 = bitcast %"class.v8::internal::HeapEntry"** %68 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = sub i64 %73, %75
  %77 = icmp eq i64 %76, 4080
  br i1 %77, label %78, label %82

78:                                               ; preds = %65
  %79 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %68, i64 1
  %80 = bitcast %"class.v8::internal::HeapEntry"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  br label %82

82:                                               ; preds = %65, %78
  %83 = phi %"class.v8::internal::HeapEntry"** [ %79, %78 ], [ %68, %65 ]
  %84 = phi i64 [ %81, %78 ], [ %73, %65 ]
  %85 = inttoptr i64 %84 to %"class.v8::internal::HeapEntry"*
  %86 = icmp eq %"class.v8::internal::HeapEntry"* %22, %85
  br i1 %86, label %24, label %65

87:                                               ; preds = %127, %43, %54
  ret void

88:                                               ; preds = %54, %127
  %89 = phi %"class.v8::internal::HeapGraphEdge"* [ %130, %127 ], [ %56, %54 ]
  %90 = phi %"class.v8::internal::HeapGraphEdge"** [ %129, %127 ], [ %50, %54 ]
  %91 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %89, i64 0, i32 1
  %92 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %92, i64 0, i32 4
  %94 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %93, align 8
  %95 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %89, i64 0, i32 0
  %96 = load i32, i32* %95, align 8
  %97 = lshr i32 %96, 3
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %94, i64 0, i32 4, i32 0, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %100, %98
  %102 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %94, i64 0, i32 4, i32 0, i32 0, i32 1
  %103 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %102, align 8
  %104 = udiv i64 %101, 102
  %105 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %103, i64 %104
  %106 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %105, align 8
  %107 = urem i64 %101, 102
  %108 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %106, i64 %107, i32 4
  %109 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %108, align 8
  %110 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %106, i64 %107, i32 1, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = add i32 %111, 1
  store i32 %112, i32* %110, align 4
  %113 = zext i32 %111 to i64
  %114 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %109, i64 0, i32 6, i32 0, i32 0
  %115 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %114, align 8
  %116 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %115, i64 %113
  store %"class.v8::internal::HeapGraphEdge"* %89, %"class.v8::internal::HeapGraphEdge"** %116, align 8
  %117 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %89, i64 1
  %118 = ptrtoint %"class.v8::internal::HeapGraphEdge"* %117 to i64
  %119 = bitcast %"class.v8::internal::HeapGraphEdge"** %90 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = sub i64 %118, %120
  %122 = icmp eq i64 %121, 4080
  br i1 %122, label %123, label %127

123:                                              ; preds = %88
  %124 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %90, i64 1
  %125 = bitcast %"class.v8::internal::HeapGraphEdge"** %124 to i64*
  %126 = load i64, i64* %125, align 8
  br label %127

127:                                              ; preds = %88, %123
  %128 = phi i64 [ %126, %123 ], [ %118, %88 ]
  %129 = phi %"class.v8::internal::HeapGraphEdge"** [ %124, %123 ], [ %90, %88 ]
  %130 = inttoptr i64 %128 to %"class.v8::internal::HeapGraphEdge"*
  %131 = icmp eq %"class.v8::internal::HeapGraphEdge"* %63, %130
  br i1 %131, label %87, label %88
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::HeapEntry"* @_ZN2v88internal12HeapSnapshot12GetEntryByIdEj(%"class.v8::internal::HeapSnapshot"*, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.v8::internal::HeapEntry"*, align 8
  %5 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 7
  %6 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %71

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 6, i32 0, i32 0
  %11 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 6, i32 0, i32 1
  %13 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %12, align 8
  %14 = icmp eq %"class.v8::internal::HeapGraphEdge"** %11, %13
  br i1 %14, label %15, label %16, !prof !2

15:                                               ; preds = %9
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0)) #20
  unreachable

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::unordered_map.772", %"class.std::__1::unordered_map.772"* %5, i64 0, i32 0
  %20 = uitofp i64 %18 to float
  %21 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 7, i32 0, i32 3, i32 0, i32 0
  %22 = load float, float* %21, align 4
  %23 = fdiv float %20, %22
  %24 = tail call float @llvm.ceil.f32(float %23) #13
  %25 = fptoui float %24 to i64
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.773"* %19, i64 %25) #13
  %26 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %27 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = udiv i64 %29, 102
  %31 = urem i64 %29, 102
  %32 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %27, i64 %30
  %33 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %34 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %33, align 8
  %35 = icmp eq %"class.v8::internal::HeapEntry"** %34, %27
  br i1 %35, label %71, label %36

36:                                               ; preds = %16
  %37 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %32, align 8
  %38 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %37, i64 %31
  %39 = load i64, i64* %17, align 8
  %40 = add i64 %39, %29
  %41 = udiv i64 %40, 102
  %42 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %27, i64 %41
  %43 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %42, align 8
  %44 = urem i64 %40, 102
  %45 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %43, i64 %44
  %46 = icmp eq %"class.v8::internal::HeapEntry"* %45, %38
  br i1 %46, label %71, label %47

47:                                               ; preds = %36
  %48 = bitcast i32* %3 to i8*
  %49 = bitcast %"class.v8::internal::HeapEntry"** %4 to i8*
  br label %50

50:                                               ; preds = %47, %66
  %51 = phi %"class.v8::internal::HeapEntry"* [ %38, %47 ], [ %69, %66 ]
  %52 = phi %"class.v8::internal::HeapEntry"** [ %32, %47 ], [ %67, %66 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #13
  %53 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %51, i64 0, i32 6
  %54 = load i32, i32* %53, align 8
  store i32 %54, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #13
  store %"class.v8::internal::HeapEntry"* %51, %"class.v8::internal::HeapEntry"** %4, align 8
  %55 = call { %"struct.std::__1::__hash_node_base.777"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJjS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.773"* %19, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %3, %"class.v8::internal::HeapEntry"** nonnull dereferenceable(8) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #13
  %56 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %51, i64 1
  %57 = ptrtoint %"class.v8::internal::HeapEntry"* %56 to i64
  %58 = bitcast %"class.v8::internal::HeapEntry"** %52 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = sub i64 %57, %59
  %61 = icmp eq i64 %60, 4080
  br i1 %61, label %62, label %66

62:                                               ; preds = %50
  %63 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %52, i64 1
  %64 = bitcast %"class.v8::internal::HeapEntry"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  br label %66

66:                                               ; preds = %50, %62
  %67 = phi %"class.v8::internal::HeapEntry"** [ %63, %62 ], [ %52, %50 ]
  %68 = phi i64 [ %65, %62 ], [ %57, %50 ]
  %69 = inttoptr i64 %68 to %"class.v8::internal::HeapEntry"*
  %70 = icmp eq %"class.v8::internal::HeapEntry"* %45, %69
  br i1 %70, label %71, label %50

71:                                               ; preds = %66, %16, %36, %2
  %72 = zext i32 %1 to i64
  %73 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %144, label %76

76:                                               ; preds = %71
  %77 = call i64 @llvm.ctpop.i64(i64 %74) #13, !range !3
  %78 = icmp ugt i64 %77, 1
  br i1 %78, label %82, label %79

79:                                               ; preds = %76
  %80 = add i64 %74, 4294967295
  %81 = and i64 %80, %72
  br label %86

82:                                               ; preds = %76
  %83 = icmp ugt i64 %74, %72
  br i1 %83, label %86, label %84

84:                                               ; preds = %82
  %85 = urem i64 %72, %74
  br label %86

86:                                               ; preds = %84, %82, %79
  %87 = phi i64 [ %81, %79 ], [ %85, %84 ], [ %72, %82 ]
  %88 = getelementptr inbounds %"class.std::__1::unordered_map.772", %"class.std::__1::unordered_map.772"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load %"struct.std::__1::__hash_node_base.777"**, %"struct.std::__1::__hash_node_base.777"*** %88, align 8
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %89, i64 %87
  %91 = load %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %90, align 8
  %92 = icmp eq %"struct.std::__1::__hash_node_base.777"* %91, null
  br i1 %92, label %144, label %93

93:                                               ; preds = %86
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %91, i64 0, i32 0
  %95 = load %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.777"* %95, null
  br i1 %96, label %144, label %97

97:                                               ; preds = %93
  %98 = add i64 %74, -1
  br i1 %78, label %99, label %121

99:                                               ; preds = %97, %117
  %100 = phi %"struct.std::__1::__hash_node_base.777"* [ %119, %117 ], [ %95, %97 ]
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %100, i64 1
  %102 = bitcast %"struct.std::__1::__hash_node_base.777"* %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = icmp eq i64 %103, %72
  br i1 %104, label %112, label %105

105:                                              ; preds = %99
  %106 = icmp ult i64 %103, %74
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %103, %74
  br label %109

109:                                              ; preds = %107, %105
  %110 = phi i64 [ %108, %107 ], [ %103, %105 ]
  %111 = icmp eq i64 %110, %87
  br i1 %111, label %117, label %144

112:                                              ; preds = %99
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %100, i64 2
  %114 = bitcast %"struct.std::__1::__hash_node_base.777"* %113 to i32*
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %115, %1
  br i1 %116, label %139, label %117

117:                                              ; preds = %112, %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %100, i64 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %118, align 8
  %120 = icmp eq %"struct.std::__1::__hash_node_base.777"* %119, null
  br i1 %120, label %144, label %99

121:                                              ; preds = %97, %135
  %122 = phi %"struct.std::__1::__hash_node_base.777"* [ %137, %135 ], [ %95, %97 ]
  %123 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %122, i64 1
  %124 = bitcast %"struct.std::__1::__hash_node_base.777"* %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = icmp eq i64 %125, %72
  br i1 %126, label %130, label %127

127:                                              ; preds = %121
  %128 = and i64 %125, %98
  %129 = icmp eq i64 %128, %87
  br i1 %129, label %135, label %144

130:                                              ; preds = %121
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %122, i64 2
  %132 = bitcast %"struct.std::__1::__hash_node_base.777"* %131 to i32*
  %133 = load i32, i32* %132, align 4
  %134 = icmp eq i32 %133, %1
  br i1 %134, label %139, label %135

135:                                              ; preds = %130, %127
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %122, i64 0, i32 0
  %137 = load %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %136, align 8
  %138 = icmp eq %"struct.std::__1::__hash_node_base.777"* %137, null
  br i1 %138, label %144, label %121

139:                                              ; preds = %130, %112
  %140 = phi %"struct.std::__1::__hash_node_base.777"* [ %100, %112 ], [ %122, %130 ]
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %140, i64 3
  %142 = bitcast %"struct.std::__1::__hash_node_base.777"* %141 to %"class.v8::internal::HeapEntry"**
  %143 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %142, align 8
  br label %144

144:                                              ; preds = %135, %127, %117, %109, %93, %71, %86, %139
  %145 = phi %"class.v8::internal::HeapEntry"* [ %143, %139 ], [ null, %86 ], [ null, %71 ], [ null, %93 ], [ null, %109 ], [ null, %117 ], [ null, %127 ], [ null, %135 ]
  ret %"class.v8::internal::HeapEntry"* %145
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12HeapSnapshot5PrintEi(%"class.v8::internal::HeapSnapshot"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %3, align 8
  tail call void @_ZNK2v88internal9HeapEntry5PrintEPKcS3_ii(%"class.v8::internal::HeapEntry"* %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i32 %1, i32 0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14HeapObjectsMapC2EPNS0_4HeapE(%"class.v8::internal::HeapObjectsMap"*, %"class.v8::internal::Heap"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 0
  store i32 55, i32* %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = bitcast i32* %5 to i64*
  store i64 0, i64* %6, align 8
  %7 = tail call noalias i8* @malloc(i64 192) #13
  %8 = getelementptr inbounds %"class.v8::base::PointerTemplateHashMapImpl", %"class.v8::base::PointerTemplateHashMapImpl"* %4, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.v8::base::PointerTemplateHashMapImpl"* %4 to i8**
  store i8* %7, i8** %9, align 8
  %10 = icmp eq i8* %7, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.648, i64 0, i64 0)) #20
  unreachable

12:                                               ; preds = %2
  store i32 8, i32* %5, align 8
  %13 = bitcast i8* %7 to i8**
  store i8* null, i8** %13, align 8
  %14 = getelementptr inbounds i8, i8* %7, i64 24
  %15 = bitcast i8* %14 to i8**
  store i8* null, i8** %15, align 8
  %16 = getelementptr inbounds i8, i8* %7, i64 48
  %17 = bitcast i8* %16 to i8**
  store i8* null, i8** %17, align 8
  %18 = getelementptr inbounds i8, i8* %7, i64 72
  %19 = bitcast i8* %18 to i8**
  store i8* null, i8** %19, align 8
  %20 = load i32, i32* %5, align 8
  %21 = icmp ugt i32 %20, 4
  br i1 %21, label %22, label %30

22:                                               ; preds = %12, %22
  %23 = phi i64 [ %26, %22 ], [ 4, %12 ]
  %24 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %8, align 8
  %25 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %24, i64 %23, i32 0
  store i8* null, i8** %25, align 8
  %26 = add nuw nsw i64 %23, 1
  %27 = load i32, i32* %5, align 8
  %28 = zext i32 %27 to i64
  %29 = icmp ult i64 %26, %28
  br i1 %29, label %22, label %30

30:                                               ; preds = %22, %12
  %31 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %32 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 4, i32 0, i32 3
  %33 = bitcast %"class.std::__1::__compressed_pair.26"* %32 to i32*
  %34 = bitcast i32* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %34, i8 0, i64 84, i1 false)
  store i32 1065353216, i32* %33, align 4
  %35 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 5
  store %"class.v8::internal::Heap"* %1, %"class.v8::internal::Heap"** %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %37 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 2, i32 0, i32 1
  %38 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 2
  %39 = bitcast %"struct.v8::internal::HeapObjectsMap::EntryInfo"** %37 to i64*
  %40 = bitcast %"class.std::__1::vector"* %38 to i64*
  %41 = bitcast %"struct.v8::internal::HeapObjectsMap::EntryInfo"** %36 to i64*
  %42 = tail call i8* @_Znwm(i64 24) #21
  %43 = getelementptr inbounds i8, i8* %42, i64 24
  %44 = ptrtoint i8* %43 to i64
  %45 = bitcast i8* %42 to i32*
  store i32 0, i32* %45, align 8
  %46 = getelementptr inbounds i8, i8* %42, i64 8
  %47 = bitcast i8* %46 to i64*
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds i8, i8* %42, i64 16
  %49 = bitcast i8* %48 to i32*
  store i32 0, i32* %49, align 8
  %50 = getelementptr inbounds i8, i8* %42, i64 20
  store i8 1, i8* %50, align 4
  %51 = ptrtoint i8* %42 to i64
  store i64 %51, i64* %40, align 8
  store i64 %44, i64* %39, align 8
  store i64 %44, i64* %41, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal14HeapObjectsMap10MoveObjectEmmi(%"class.v8::internal::HeapObjectsMap"*, i64, i64, i32) local_unnamed_addr #2 align 2 {
  %5 = icmp eq i64 %1, %2
  br i1 %5, label %372, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 1, i32 0
  %8 = inttoptr i64 %1 to i8*
  %9 = trunc i64 %1 to i32
  %10 = xor i32 %9, -1
  %11 = shl i32 %9, 15
  %12 = add i32 %11, %10
  %13 = lshr i32 %12, 12
  %14 = xor i32 %13, %12
  %15 = mul i32 %14, 5
  %16 = lshr i32 %15, 4
  %17 = xor i32 %16, %15
  %18 = mul i32 %17, 2057
  %19 = lshr i32 %18, 16
  %20 = and i32 %18, 1073741823
  %21 = xor i32 %20, %19
  %22 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = add i32 %23, -1
  %25 = and i32 %24, %21
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %7, i64 0, i32 0, i32 0
  %28 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %27, align 8
  %29 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %28, i64 %26
  %30 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %29, i64 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %31, null
  %33 = icmp eq i8* %31, %8
  %34 = or i1 %32, %33
  br i1 %34, label %47, label %35

35:                                               ; preds = %6
  %36 = zext i32 %24 to i64
  br label %37

37:                                               ; preds = %37, %35
  %38 = phi i64 [ %26, %35 ], [ %40, %37 ]
  %39 = add nuw nsw i64 %38, 1
  %40 = and i64 %39, %36
  %41 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %28, i64 %40
  %42 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %41, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = icmp eq i8* %43, null
  %45 = icmp eq i8* %43, %8
  %46 = or i1 %44, %45
  br i1 %46, label %47, label %37

47:                                               ; preds = %37, %6
  %48 = phi i8* [ %31, %6 ], [ %43, %37 ]
  %49 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %29, %6 ], [ %41, %37 ]
  %50 = icmp eq i8* %48, null
  br i1 %50, label %112, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %49, i64 0, i32 1
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %49, i64 1
  %55 = zext i32 %23 to i64
  %56 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %28, i64 %55
  %57 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %54, %56
  %58 = select i1 %57, %"struct.v8::base::TemplateHashMapEntry"* %28, %"struct.v8::base::TemplateHashMapEntry"* %54
  %59 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %58, i64 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = icmp eq i8* %60, null
  br i1 %61, label %101, label %62

62:                                               ; preds = %51, %89
  %63 = phi i32 [ %90, %89 ], [ %23, %51 ]
  %64 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %91, %89 ], [ %28, %51 ]
  %65 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %97, %89 ], [ %58, %51 ]
  %66 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %92, %89 ], [ %49, %51 ]
  %67 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %65, i64 0, i32 2
  %68 = load i32, i32* %67, align 8
  %69 = add i32 %63, -1
  %70 = and i32 %68, %69
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %64, i64 %71
  %73 = icmp ugt %"struct.v8::base::TemplateHashMapEntry"* %65, %66
  br i1 %73, label %74, label %78

74:                                               ; preds = %62
  %75 = icmp ule %"struct.v8::base::TemplateHashMapEntry"* %72, %66
  %76 = icmp ugt %"struct.v8::base::TemplateHashMapEntry"* %72, %65
  %77 = or i1 %75, %76
  br i1 %77, label %84, label %78

78:                                               ; preds = %74, %62
  %79 = icmp ult %"struct.v8::base::TemplateHashMapEntry"* %65, %66
  %80 = icmp ule %"struct.v8::base::TemplateHashMapEntry"* %72, %66
  %81 = and i1 %79, %80
  %82 = icmp ugt %"struct.v8::base::TemplateHashMapEntry"* %72, %65
  %83 = and i1 %82, %81
  br i1 %83, label %84, label %89

84:                                               ; preds = %78, %74
  %85 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %66 to i8*
  %86 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %65 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 20, i1 false) #13
  %87 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %27, align 8
  %88 = load i32, i32* %22, align 8
  br label %89

89:                                               ; preds = %84, %78
  %90 = phi i32 [ %88, %84 ], [ %63, %78 ]
  %91 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %87, %84 ], [ %64, %78 ]
  %92 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %65, %84 ], [ %66, %78 ]
  %93 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %65, i64 1
  %94 = zext i32 %90 to i64
  %95 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %91, i64 %94
  %96 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %93, %95
  %97 = select i1 %96, %"struct.v8::base::TemplateHashMapEntry"* %91, %"struct.v8::base::TemplateHashMapEntry"* %93
  %98 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %97, i64 0, i32 0
  %99 = load i8*, i8** %98, align 8
  %100 = icmp eq i8* %99, null
  br i1 %100, label %101, label %62

101:                                              ; preds = %89, %51
  %102 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %49, %51 ], [ %92, %89 ]
  %103 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %102, i64 0, i32 0
  store i8* null, i8** %103, align 8
  %104 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, -1
  store i32 %106, i32* %104, align 4
  %107 = icmp eq i8* %53, null
  br i1 %107, label %108, label %229

108:                                              ; preds = %101
  %109 = load i32, i32* %22, align 8
  %110 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %27, align 8
  %111 = add i32 %109, -1
  br label %112

112:                                              ; preds = %108, %47
  %113 = phi i32 [ %111, %108 ], [ %24, %47 ]
  %114 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %110, %108 ], [ %28, %47 ]
  %115 = phi i32 [ %109, %108 ], [ %23, %47 ]
  %116 = inttoptr i64 %2 to i8*
  %117 = trunc i64 %2 to i32
  %118 = xor i32 %117, -1
  %119 = shl i32 %117, 15
  %120 = add i32 %119, %118
  %121 = lshr i32 %120, 12
  %122 = xor i32 %121, %120
  %123 = mul i32 %122, 5
  %124 = lshr i32 %123, 4
  %125 = xor i32 %124, %123
  %126 = mul i32 %125, 2057
  %127 = lshr i32 %126, 16
  %128 = and i32 %126, 1073741823
  %129 = xor i32 %128, %127
  %130 = and i32 %113, %129
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %114, i64 %131
  %133 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %132, i64 0, i32 0
  %134 = load i8*, i8** %133, align 8
  %135 = icmp eq i8* %134, null
  %136 = icmp eq i8* %134, %116
  %137 = or i1 %135, %136
  br i1 %137, label %150, label %138

138:                                              ; preds = %112
  %139 = zext i32 %113 to i64
  br label %140

140:                                              ; preds = %140, %138
  %141 = phi i64 [ %131, %138 ], [ %143, %140 ]
  %142 = add nuw nsw i64 %141, 1
  %143 = and i64 %142, %139
  %144 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %114, i64 %143
  %145 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %144, i64 0, i32 0
  %146 = load i8*, i8** %145, align 8
  %147 = icmp eq i8* %146, null
  %148 = icmp eq i8* %146, %116
  %149 = or i1 %147, %148
  br i1 %149, label %150, label %140

150:                                              ; preds = %140, %112
  %151 = phi i8* [ %134, %112 ], [ %146, %140 ]
  %152 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %132, %112 ], [ %144, %140 ]
  %153 = icmp eq i8* %151, null
  br i1 %153, label %372, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %152, i64 0, i32 1
  %156 = load i8*, i8** %155, align 8
  %157 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %152, i64 1
  %158 = zext i32 %115 to i64
  %159 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %114, i64 %158
  %160 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %157, %159
  %161 = select i1 %160, %"struct.v8::base::TemplateHashMapEntry"* %114, %"struct.v8::base::TemplateHashMapEntry"* %157
  %162 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %161, i64 0, i32 0
  %163 = load i8*, i8** %162, align 8
  %164 = icmp eq i8* %163, null
  br i1 %164, label %204, label %165

165:                                              ; preds = %154, %192
  %166 = phi i32 [ %193, %192 ], [ %115, %154 ]
  %167 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %194, %192 ], [ %114, %154 ]
  %168 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %200, %192 ], [ %161, %154 ]
  %169 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %195, %192 ], [ %152, %154 ]
  %170 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %168, i64 0, i32 2
  %171 = load i32, i32* %170, align 8
  %172 = add i32 %166, -1
  %173 = and i32 %171, %172
  %174 = zext i32 %173 to i64
  %175 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %167, i64 %174
  %176 = icmp ugt %"struct.v8::base::TemplateHashMapEntry"* %168, %169
  br i1 %176, label %177, label %181

177:                                              ; preds = %165
  %178 = icmp ule %"struct.v8::base::TemplateHashMapEntry"* %175, %169
  %179 = icmp ugt %"struct.v8::base::TemplateHashMapEntry"* %175, %168
  %180 = or i1 %178, %179
  br i1 %180, label %187, label %181

181:                                              ; preds = %177, %165
  %182 = icmp ult %"struct.v8::base::TemplateHashMapEntry"* %168, %169
  %183 = icmp ule %"struct.v8::base::TemplateHashMapEntry"* %175, %169
  %184 = and i1 %182, %183
  %185 = icmp ugt %"struct.v8::base::TemplateHashMapEntry"* %175, %168
  %186 = and i1 %185, %184
  br i1 %186, label %187, label %192

187:                                              ; preds = %181, %177
  %188 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %169 to i8*
  %189 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %168 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %188, i8* align 8 %189, i64 20, i1 false) #13
  %190 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %27, align 8
  %191 = load i32, i32* %22, align 8
  br label %192

192:                                              ; preds = %187, %181
  %193 = phi i32 [ %191, %187 ], [ %166, %181 ]
  %194 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %190, %187 ], [ %167, %181 ]
  %195 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %168, %187 ], [ %169, %181 ]
  %196 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %168, i64 1
  %197 = zext i32 %193 to i64
  %198 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %194, i64 %197
  %199 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %196, %198
  %200 = select i1 %199, %"struct.v8::base::TemplateHashMapEntry"* %194, %"struct.v8::base::TemplateHashMapEntry"* %196
  %201 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %200, i64 0, i32 0
  %202 = load i8*, i8** %201, align 8
  %203 = icmp eq i8* %202, null
  br i1 %203, label %204, label %165

204:                                              ; preds = %192, %154
  %205 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %152, %154 ], [ %195, %192 ]
  %206 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %205, i64 0, i32 0
  store i8* null, i8** %206, align 8
  %207 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %208 = load i32, i32* %207, align 4
  %209 = add i32 %208, -1
  store i32 %209, i32* %207, align 4
  %210 = icmp eq i8* %156, null
  br i1 %210, label %372, label %211

211:                                              ; preds = %204
  %212 = ptrtoint i8* %156 to i64
  %213 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 2
  %214 = shl i64 %212, 32
  %215 = ashr exact i64 %214, 32
  %216 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 2, i32 0, i32 1
  %217 = bitcast %"struct.v8::internal::HeapObjectsMap::EntryInfo"** %216 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = bitcast %"class.std::__1::vector"* %213 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = sub i64 %218, %220
  %222 = sdiv exact i64 %221, 24
  %223 = icmp ugt i64 %222, %215
  br i1 %223, label %226, label %224

224:                                              ; preds = %211
  %225 = bitcast %"class.std::__1::vector"* %213 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %225) #20
  unreachable

226:                                              ; preds = %211
  %227 = inttoptr i64 %220 to %"struct.v8::internal::HeapObjectsMap::EntryInfo"*
  %228 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %227, i64 %215, i32 2
  store i64 0, i64* %228, align 8
  br label %372

229:                                              ; preds = %101
  %230 = inttoptr i64 %2 to i8*
  %231 = trunc i64 %2 to i32
  %232 = xor i32 %231, -1
  %233 = shl i32 %231, 15
  %234 = add i32 %233, %232
  %235 = lshr i32 %234, 12
  %236 = xor i32 %235, %234
  %237 = mul i32 %236, 5
  %238 = lshr i32 %237, 4
  %239 = xor i32 %238, %237
  %240 = mul i32 %239, 2057
  %241 = lshr i32 %240, 16
  %242 = and i32 %240, 1073741823
  %243 = xor i32 %242, %241
  %244 = load i32, i32* %22, align 8
  %245 = add i32 %244, -1
  %246 = and i32 %245, %243
  %247 = zext i32 %246 to i64
  %248 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %27, align 8
  %249 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %248, i64 %247
  %250 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %249, i64 0, i32 0
  %251 = load i8*, i8** %250, align 8
  %252 = icmp eq i8* %251, null
  %253 = icmp eq i8* %251, %230
  %254 = or i1 %252, %253
  br i1 %254, label %267, label %255

255:                                              ; preds = %229
  %256 = zext i32 %245 to i64
  br label %257

257:                                              ; preds = %257, %255
  %258 = phi i64 [ %247, %255 ], [ %260, %257 ]
  %259 = add nuw nsw i64 %258, 1
  %260 = and i64 %259, %256
  %261 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %248, i64 %260
  %262 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %261, i64 0, i32 0
  %263 = load i8*, i8** %262, align 8
  %264 = icmp eq i8* %263, null
  %265 = icmp eq i8* %263, %230
  %266 = or i1 %264, %265
  br i1 %266, label %267, label %257

267:                                              ; preds = %257, %229
  %268 = phi i8* [ %251, %229 ], [ %263, %257 ]
  %269 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %249, %229 ], [ %261, %257 ]
  %270 = icmp eq i8* %268, null
  br i1 %270, label %271, label %306

271:                                              ; preds = %267
  %272 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %269 to i64*
  store i64 %2, i64* %272, align 8
  %273 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %269, i64 0, i32 1
  %274 = bitcast i8** %273 to i64*
  store i64 0, i64* %274, align 8
  %275 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %269, i64 0, i32 2
  store i32 %243, i32* %275, align 8
  %276 = load i32, i32* %104, align 4
  %277 = add i32 %276, 1
  store i32 %277, i32* %104, align 4
  %278 = lshr i32 %277, 2
  %279 = add i32 %278, %277
  %280 = load i32, i32* %22, align 8
  %281 = icmp ult i32 %279, %280
  br i1 %281, label %306, label %282

282:                                              ; preds = %271
  tail call void @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_18KeyEqualityMatcherIS2_EENS0_23DefaultAllocationPolicyEE6ResizeEv(%"class.v8::base::TemplateHashMapImpl"* %7) #13
  %283 = load i32, i32* %22, align 8
  %284 = add i32 %283, -1
  %285 = and i32 %284, %243
  %286 = zext i32 %285 to i64
  %287 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %27, align 8
  %288 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %287, i64 %286
  %289 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %288, i64 0, i32 0
  %290 = load i8*, i8** %289, align 8
  %291 = icmp eq i8* %290, null
  %292 = icmp eq i8* %290, %230
  %293 = or i1 %291, %292
  br i1 %293, label %306, label %294

294:                                              ; preds = %282
  %295 = zext i32 %284 to i64
  br label %296

296:                                              ; preds = %296, %294
  %297 = phi i64 [ %286, %294 ], [ %299, %296 ]
  %298 = add nuw nsw i64 %297, 1
  %299 = and i64 %298, %295
  %300 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %287, i64 %299
  %301 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %300, i64 0, i32 0
  %302 = load i8*, i8** %301, align 8
  %303 = icmp eq i8* %302, null
  %304 = icmp eq i8* %302, %230
  %305 = or i1 %303, %304
  br i1 %305, label %306, label %296

306:                                              ; preds = %296, %267, %271, %282
  %307 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %269, %267 ], [ %269, %271 ], [ %288, %282 ], [ %300, %296 ]
  %308 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %307, i64 0, i32 1
  %309 = load i8*, i8** %308, align 8
  %310 = icmp eq i8* %309, null
  br i1 %310, label %329, label %311

311:                                              ; preds = %306
  %312 = ptrtoint i8* %309 to i64
  %313 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 2
  %314 = shl i64 %312, 32
  %315 = ashr exact i64 %314, 32
  %316 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 2, i32 0, i32 1
  %317 = bitcast %"struct.v8::internal::HeapObjectsMap::EntryInfo"** %316 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = bitcast %"class.std::__1::vector"* %313 to i64*
  %320 = load i64, i64* %319, align 8
  %321 = sub i64 %318, %320
  %322 = sdiv exact i64 %321, 24
  %323 = icmp ugt i64 %322, %315
  br i1 %323, label %326, label %324

324:                                              ; preds = %311
  %325 = bitcast %"class.std::__1::vector"* %313 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %325) #20
  unreachable

326:                                              ; preds = %311
  %327 = inttoptr i64 %320 to %"struct.v8::internal::HeapObjectsMap::EntryInfo"*
  %328 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %327, i64 %315, i32 2
  store i64 0, i64* %328, align 8
  br label %329

329:                                              ; preds = %306, %326
  %330 = ptrtoint i8* %53 to i64
  %331 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 2
  %332 = shl i64 %330, 32
  %333 = ashr exact i64 %332, 32
  %334 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 2, i32 0, i32 1
  %335 = bitcast %"struct.v8::internal::HeapObjectsMap::EntryInfo"** %334 to i64*
  %336 = load i64, i64* %335, align 8
  %337 = bitcast %"class.std::__1::vector"* %331 to i64*
  %338 = load i64, i64* %337, align 8
  %339 = sub i64 %336, %338
  %340 = sdiv exact i64 %339, 24
  %341 = icmp ugt i64 %340, %333
  br i1 %341, label %344, label %342

342:                                              ; preds = %329
  %343 = bitcast %"class.std::__1::vector"* %331 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %343) #20
  unreachable

344:                                              ; preds = %329
  %345 = inttoptr i64 %338 to %"struct.v8::internal::HeapObjectsMap::EntryInfo"*
  %346 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %345, i64 %333, i32 2
  store i64 %2, i64* %346, align 8
  %347 = load i8, i8* @_ZN2v88internal32FLAG_heap_profiler_trace_objectsE, align 1, !range !4
  %348 = icmp eq i8 %347, 0
  br i1 %348, label %361, label %349

349:                                              ; preds = %344
  %350 = load i64, i64* %335, align 8
  %351 = load i64, i64* %337, align 8
  %352 = sub i64 %350, %351
  %353 = sdiv exact i64 %352, 24
  %354 = icmp ugt i64 %353, %333
  br i1 %354, label %357, label %355

355:                                              ; preds = %349
  %356 = bitcast %"class.std::__1::vector"* %331 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %356) #20
  unreachable

357:                                              ; preds = %349
  %358 = inttoptr i64 %351 to %"struct.v8::internal::HeapObjectsMap::EntryInfo"*
  %359 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %358, i64 %333, i32 3
  %360 = load i32, i32* %359, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i64 0, i64 0), i8* %8, i8* %230, i32 %360, i32 %3) #13
  br label %361

361:                                              ; preds = %344, %357
  %362 = load i64, i64* %335, align 8
  %363 = load i64, i64* %337, align 8
  %364 = sub i64 %362, %363
  %365 = sdiv exact i64 %364, 24
  %366 = icmp ugt i64 %365, %333
  br i1 %366, label %369, label %367

367:                                              ; preds = %361
  %368 = bitcast %"class.std::__1::vector"* %331 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %368) #20
  unreachable

369:                                              ; preds = %361
  %370 = inttoptr i64 %363 to %"struct.v8::internal::HeapObjectsMap::EntryInfo"*
  %371 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %370, i64 %333, i32 3
  store i32 %3, i32* %371, align 8
  store i8* %53, i8** %308, align 8
  br label %372

372:                                              ; preds = %369, %204, %226, %150, %4
  %373 = phi i1 [ false, %4 ], [ false, %226 ], [ false, %204 ], [ true, %369 ], [ false, %150 ]
  ret i1 %373
}

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14HeapObjectsMap16UpdateObjectSizeEmi(%"class.v8::internal::HeapObjectsMap"*, i64, i32) local_unnamed_addr #2 align 2 {
  %4 = tail call i32 @_ZN2v88internal14HeapObjectsMap14FindOrAddEntryEmjb(%"class.v8::internal::HeapObjectsMap"* %0, i64 %1, i32 %2, i1 zeroext false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal14HeapObjectsMap14FindOrAddEntryEmjb(%"class.v8::internal::HeapObjectsMap"*, i64, i32, i1 zeroext) local_unnamed_addr #2 align 2 {
  %5 = alloca [3 x i8], align 1
  %6 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 1, i32 0
  %7 = inttoptr i64 %1 to i8*
  %8 = trunc i64 %1 to i32
  %9 = xor i32 %8, -1
  %10 = shl i32 %8, 15
  %11 = add i32 %10, %9
  %12 = lshr i32 %11, 12
  %13 = xor i32 %12, %11
  %14 = mul i32 %13, 5
  %15 = lshr i32 %14, 4
  %16 = xor i32 %15, %14
  %17 = mul i32 %16, 2057
  %18 = lshr i32 %17, 16
  %19 = and i32 %17, 1073741823
  %20 = xor i32 %19, %18
  %21 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = add i32 %22, -1
  %24 = and i32 %23, %20
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %6, i64 0, i32 0, i32 0
  %27 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %26, align 8
  %28 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %27, i64 %25
  %29 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %28, i64 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  %32 = icmp eq i8* %30, %7
  %33 = or i1 %31, %32
  br i1 %33, label %46, label %34

34:                                               ; preds = %4
  %35 = zext i32 %23 to i64
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ %25, %34 ], [ %39, %36 ]
  %38 = add nuw nsw i64 %37, 1
  %39 = and i64 %38, %35
  %40 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %27, i64 %39
  %41 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %40, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = icmp eq i8* %42, null
  %44 = icmp eq i8* %42, %7
  %45 = or i1 %43, %44
  br i1 %45, label %46, label %36

46:                                               ; preds = %36, %4
  %47 = phi i8* [ %30, %4 ], [ %42, %36 ]
  %48 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %28, %4 ], [ %40, %36 ]
  %49 = icmp eq i8* %47, null
  br i1 %49, label %50, label %86

50:                                               ; preds = %46
  %51 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %48 to i64*
  store i64 %1, i64* %51, align 8
  %52 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %48, i64 0, i32 1
  %53 = bitcast i8** %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %48, i64 0, i32 2
  store i32 %20, i32* %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %55, align 4
  %58 = lshr i32 %57, 2
  %59 = add i32 %58, %57
  %60 = load i32, i32* %21, align 8
  %61 = icmp ult i32 %59, %60
  br i1 %61, label %86, label %62

62:                                               ; preds = %50
  tail call void @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_18KeyEqualityMatcherIS2_EENS0_23DefaultAllocationPolicyEE6ResizeEv(%"class.v8::base::TemplateHashMapImpl"* %6) #13
  %63 = load i32, i32* %21, align 8
  %64 = add i32 %63, -1
  %65 = and i32 %64, %20
  %66 = zext i32 %65 to i64
  %67 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %26, align 8
  %68 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %67, i64 %66
  %69 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %68, i64 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = icmp eq i8* %70, null
  %72 = icmp eq i8* %70, %7
  %73 = or i1 %71, %72
  br i1 %73, label %86, label %74

74:                                               ; preds = %62
  %75 = zext i32 %64 to i64
  br label %76

76:                                               ; preds = %76, %74
  %77 = phi i64 [ %66, %74 ], [ %79, %76 ]
  %78 = add nuw nsw i64 %77, 1
  %79 = and i64 %78, %75
  %80 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %67, i64 %79
  %81 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %80, i64 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, null
  %84 = icmp eq i8* %82, %7
  %85 = or i1 %83, %84
  br i1 %85, label %86, label %76

86:                                               ; preds = %76, %46, %50, %62
  %87 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %48, %46 ], [ %48, %50 ], [ %68, %62 ], [ %80, %76 ]
  %88 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %87, i64 0, i32 1
  %89 = load i8*, i8** %88, align 8
  %90 = icmp eq i8* %89, null
  br i1 %90, label %119, label %91

91:                                               ; preds = %86
  %92 = ptrtoint i8* %89 to i64
  %93 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 2
  %94 = shl i64 %92, 32
  %95 = ashr exact i64 %94, 32
  %96 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 2, i32 0, i32 1
  %97 = bitcast %"struct.v8::internal::HeapObjectsMap::EntryInfo"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.std::__1::vector"* %93 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = sub i64 %98, %100
  %102 = sdiv exact i64 %101, 24
  %103 = icmp ugt i64 %102, %95
  br i1 %103, label %106, label %104

104:                                              ; preds = %91
  %105 = bitcast %"class.std::__1::vector"* %93 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %105) #20
  unreachable

106:                                              ; preds = %91
  %107 = zext i1 %3 to i8
  %108 = inttoptr i64 %100 to %"struct.v8::internal::HeapObjectsMap::EntryInfo"*
  %109 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %108, i64 %95, i32 4
  store i8 %107, i8* %109, align 4
  %110 = load i8, i8* @_ZN2v88internal32FLAG_heap_profiler_trace_objectsE, align 1, !range !4
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %115, label %112

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %108, i64 %95, i32 3
  %114 = load i32, i32* %113, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.33, i64 0, i64 0), i8* %7, i32 %114, i32 %2) #13
  br label %115

115:                                              ; preds = %106, %112
  %116 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %108, i64 %95, i32 3
  store i32 %2, i32* %116, align 8
  %117 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %108, i64 %95, i32 0
  %118 = load i32, i32* %117, align 8
  br label %203

119:                                              ; preds = %86
  %120 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 2
  %121 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 2, i32 0, i32 1
  %122 = bitcast %"struct.v8::internal::HeapObjectsMap::EntryInfo"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.std::__1::vector"* %120 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = sub i64 %123, %125
  %127 = sdiv exact i64 %126, 24
  %128 = inttoptr i64 %127 to i8*
  store i8* %128, i8** %88, align 8
  %129 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 0
  %130 = load i32, i32* %129, align 8
  %131 = add i32 %130, 2
  store i32 %131, i32* %129, align 8
  %132 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %132)
  %133 = zext i1 %3 to i8
  %134 = load %"struct.v8::internal::HeapObjectsMap::EntryInfo"*, %"struct.v8::internal::HeapObjectsMap::EntryInfo"** %121, align 8
  %135 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %136 = load %"struct.v8::internal::HeapObjectsMap::EntryInfo"*, %"struct.v8::internal::HeapObjectsMap::EntryInfo"** %135, align 8
  %137 = icmp ult %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %134, %136
  %138 = ptrtoint %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %136 to i64
  br i1 %137, label %139, label %147

139:                                              ; preds = %119
  %140 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %134, i64 0, i32 0
  store i32 %130, i32* %140, align 8
  %141 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %134, i64 0, i32 2
  store i64 %1, i64* %141, align 8
  %142 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %134, i64 0, i32 3
  store i32 %2, i32* %142, align 8
  %143 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %134, i64 0, i32 4
  store i8 %133, i8* %143, align 4
  %144 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %134, i64 0, i32 5, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %144, i8* nonnull align 1 %132, i64 3, i1 false)
  %145 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %134, i64 1
  %146 = ptrtoint %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %145 to i64
  store i64 %146, i64* %122, align 8
  br label %202

147:                                              ; preds = %119
  %148 = ptrtoint %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %134 to i64
  %149 = load i64, i64* %124, align 8
  %150 = sub i64 %148, %149
  %151 = sdiv exact i64 %150, 24
  %152 = add nsw i64 %151, 1
  %153 = icmp ugt i64 %152, 768614336404564650
  br i1 %153, label %154, label %156

154:                                              ; preds = %147
  %155 = bitcast %"class.std::__1::vector"* %120 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %155) #20
  unreachable

156:                                              ; preds = %147
  %157 = bitcast %"struct.v8::internal::HeapObjectsMap::EntryInfo"** %135 to i64*
  %158 = sub i64 %138, %149
  %159 = sdiv exact i64 %158, 24
  %160 = icmp ult i64 %159, 384307168202282325
  br i1 %160, label %161, label %166

161:                                              ; preds = %156
  %162 = shl nsw i64 %159, 1
  %163 = icmp ult i64 %162, %152
  %164 = select i1 %163, i64 %152, i64 %162
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %171, label %166

166:                                              ; preds = %161, %156
  %167 = phi i64 [ %164, %161 ], [ 768614336404564650, %156 ]
  %168 = mul i64 %167, 24
  %169 = tail call i8* @_Znwm(i64 %168) #21
  %170 = bitcast i8* %169 to %"struct.v8::internal::HeapObjectsMap::EntryInfo"*
  br label %171

171:                                              ; preds = %166, %161
  %172 = phi i64 [ %167, %166 ], [ 0, %161 ]
  %173 = phi %"struct.v8::internal::HeapObjectsMap::EntryInfo"* [ %170, %166 ], [ null, %161 ]
  %174 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %173, i64 %151
  %175 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %173, i64 %172
  %176 = ptrtoint %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %175 to i64
  %177 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %174, i64 0, i32 0
  store i32 %130, i32* %177, align 8
  %178 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %173, i64 %151, i32 2
  store i64 %1, i64* %178, align 8
  %179 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %173, i64 %151, i32 3
  store i32 %2, i32* %179, align 8
  %180 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %173, i64 %151, i32 4
  store i8 %133, i8* %180, align 4
  %181 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %173, i64 %151, i32 5, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %181, i8* nonnull align 1 %132, i64 3, i1 false)
  %182 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %174, i64 1
  %183 = ptrtoint %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %182 to i64
  %184 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %120, i64 0, i32 0, i32 0
  %185 = load %"struct.v8::internal::HeapObjectsMap::EntryInfo"*, %"struct.v8::internal::HeapObjectsMap::EntryInfo"** %184, align 8
  %186 = load i64, i64* %122, align 8
  %187 = ptrtoint %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %185 to i64
  %188 = sub i64 %186, %187
  %189 = sdiv exact i64 %188, -24
  %190 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %174, i64 %189
  %191 = ptrtoint %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %190 to i64
  %192 = icmp sgt i64 %188, 0
  br i1 %192, label %193, label %197

193:                                              ; preds = %171
  %194 = bitcast %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %190 to i8*
  %195 = bitcast %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %185 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %194, i8* align 8 %195, i64 %188, i1 false) #13
  %196 = load %"struct.v8::internal::HeapObjectsMap::EntryInfo"*, %"struct.v8::internal::HeapObjectsMap::EntryInfo"** %184, align 8
  br label %197

197:                                              ; preds = %193, %171
  %198 = phi %"struct.v8::internal::HeapObjectsMap::EntryInfo"* [ %185, %171 ], [ %196, %193 ]
  store i64 %191, i64* %124, align 8
  store i64 %183, i64* %122, align 8
  store i64 %176, i64* %157, align 8
  %199 = icmp eq %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %198, null
  br i1 %199, label %202, label %200

200:                                              ; preds = %197
  %201 = bitcast %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %198 to i8*
  tail call void @_ZdlPv(i8* %201) #21
  br label %202

202:                                              ; preds = %139, %197, %200
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %132)
  br label %203

203:                                              ; preds = %202, %115
  %204 = phi i32 [ %118, %115 ], [ %130, %202 ]
  ret i32 %204
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal14HeapObjectsMap9FindEntryEm(%"class.v8::internal::HeapObjectsMap"*, i64) local_unnamed_addr #2 align 2 {
  %3 = inttoptr i64 %1 to i8*
  %4 = trunc i64 %1 to i32
  %5 = xor i32 %4, -1
  %6 = shl i32 %4, 15
  %7 = add i32 %6, %5
  %8 = lshr i32 %7, 12
  %9 = xor i32 %8, %7
  %10 = mul i32 %9, 5
  %11 = lshr i32 %10, 4
  %12 = xor i32 %11, %10
  %13 = mul i32 %12, 2057
  %14 = lshr i32 %13, 16
  %15 = and i32 %13, 1073741823
  %16 = xor i32 %15, %14
  %17 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = add i32 %18, -1
  %20 = and i32 %19, %16
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %23 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %22, align 8
  %24 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %23, i64 %21
  %25 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %24, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = icmp eq i8* %26, null
  %28 = icmp eq i8* %26, %3
  %29 = or i1 %27, %28
  br i1 %29, label %42, label %30

30:                                               ; preds = %2
  %31 = zext i32 %19 to i64
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i64 [ %21, %30 ], [ %35, %32 ]
  %34 = add nuw nsw i64 %33, 1
  %35 = and i64 %34, %31
  %36 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %23, i64 %35
  %37 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %36, i64 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = icmp eq i8* %38, null
  %40 = icmp eq i8* %38, %3
  %41 = or i1 %39, %40
  br i1 %41, label %42, label %32

42:                                               ; preds = %32, %2
  %43 = phi i8* [ %26, %2 ], [ %38, %32 ]
  %44 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %24, %2 ], [ %36, %32 ]
  %45 = icmp eq i8* %43, null
  %46 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %44, null
  %47 = or i1 %45, %46
  br i1 %47, label %69, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %44, i64 0, i32 1
  %50 = bitcast i8** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 2
  %53 = shl i64 %51, 32
  %54 = ashr exact i64 %53, 32
  %55 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 2, i32 0, i32 1
  %56 = bitcast %"struct.v8::internal::HeapObjectsMap::EntryInfo"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.std::__1::vector"* %52 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = sub i64 %57, %59
  %61 = sdiv exact i64 %60, 24
  %62 = icmp ugt i64 %61, %54
  br i1 %62, label %65, label %63

63:                                               ; preds = %48
  %64 = bitcast %"class.std::__1::vector"* %52 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %64) #20
  unreachable

65:                                               ; preds = %48
  %66 = inttoptr i64 %59 to %"struct.v8::internal::HeapObjectsMap::EntryInfo"*
  %67 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %66, i64 %54, i32 0
  %68 = load i32, i32* %67, align 8
  br label %69

69:                                               ; preds = %42, %65
  %70 = phi i32 [ %68, %65 ], [ 0, %42 ]
  ret i32 %70
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal14HeapObjectsMap21FindMergedNativeEntryEPv(%"class.v8::internal::HeapObjectsMap"*, i8*) local_unnamed_addr #2 align 2 {
  %3 = alloca i8*, align 8
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 4, i32 0
  %5 = call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvmEENS_22__unordered_map_hasherIS2_S3_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S3_S8_S6_Lb1EEENS_9allocatorIS3_EEE4findIS2_EENS_15__hash_iteratorIPNS_11__hash_nodeIS3_S2_EEEERKT_(%"class.std::__1::__hash_table"* %4, i8** nonnull dereferenceable(8) %3) #13
  %6 = icmp eq %"struct.std::__1::__hash_node_base"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %5, i64 3
  %9 = bitcast %"struct.std::__1::__hash_node_base"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = load %"struct.v8::internal::HeapObjectsMap::EntryInfo"*, %"struct.v8::internal::HeapObjectsMap::EntryInfo"** %11, align 8
  %13 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %12, i64 %10, i32 0
  %14 = load i32, i32* %13, align 8
  br label %15

15:                                               ; preds = %2, %7
  %16 = phi i32 [ %14, %7 ], [ 0, %2 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14HeapObjectsMap20AddMergedNativeEntryEPvm(%"class.v8::internal::HeapObjectsMap"*, i8*, i64) local_unnamed_addr #2 align 2 {
  %4 = alloca %"struct.std::__1::pair.1274", align 8
  %5 = ptrtoint i8* %1 to i64
  %6 = inttoptr i64 %2 to i8*
  %7 = trunc i64 %2 to i32
  %8 = xor i32 %7, -1
  %9 = shl i32 %7, 15
  %10 = add i32 %9, %8
  %11 = lshr i32 %10, 12
  %12 = xor i32 %11, %10
  %13 = mul i32 %12, 5
  %14 = lshr i32 %13, 4
  %15 = xor i32 %14, %13
  %16 = mul i32 %15, 2057
  %17 = lshr i32 %16, 16
  %18 = and i32 %16, 1073741823
  %19 = xor i32 %18, %17
  %20 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = add i32 %21, -1
  %23 = and i32 %22, %19
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %25, align 8
  %27 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %26, i64 %24
  %28 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %27, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = icmp eq i8* %29, null
  %31 = icmp eq i8* %29, %6
  %32 = or i1 %30, %31
  br i1 %32, label %45, label %33

33:                                               ; preds = %3
  %34 = zext i32 %22 to i64
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi i64 [ %24, %33 ], [ %38, %35 ]
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, %34
  %39 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %26, i64 %38
  %40 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %39, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = icmp eq i8* %41, null
  %43 = icmp eq i8* %41, %6
  %44 = or i1 %42, %43
  br i1 %44, label %45, label %35

45:                                               ; preds = %35, %3
  %46 = phi i8* [ %29, %3 ], [ %41, %35 ]
  %47 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %27, %3 ], [ %39, %35 ]
  %48 = icmp eq i8* %46, null
  %49 = select i1 %48, %"struct.v8::base::TemplateHashMapEntry"* null, %"struct.v8::base::TemplateHashMapEntry"* %47
  %50 = bitcast %"struct.std::__1::pair.1274"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #13
  %51 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %49, i64 0, i32 1
  %52 = bitcast i8** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"struct.std::__1::pair.1274"* %4 to i64*
  store i64 %5, i64* %54, align 8
  %55 = getelementptr inbounds %"struct.std::__1::pair.1274", %"struct.std::__1::pair.1274"* %4, i64 0, i32 1
  store i64 %53, i64* %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 4, i32 0
  %57 = getelementptr inbounds %"struct.std::__1::pair.1274", %"struct.std::__1::pair.1274"* %4, i64 0, i32 0
  %58 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvmEENS_22__unordered_map_hasherIS2_S3_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S3_S8_S6_Lb1EEENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS2_JNS_4pairIKS2_mEEEEENSG_INS_15__hash_iteratorIPNS_11__hash_nodeIS3_S2_EEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %56, i8** nonnull dereferenceable(8) %57, %"struct.std::__1::pair.1274"* nonnull dereferenceable(16) %4) #13
  %59 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %58, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #13
  %60 = and i8 %59, 1
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %67

62:                                               ; preds = %45
  %63 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %58, 0
  %64 = load i64, i64* %52, align 8
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %63, i64 3
  %66 = bitcast %"struct.std::__1::__hash_node_base"* %65 to i64*
  store i64 %64, i64* %66, align 8
  br label %67

67:                                               ; preds = %45, %62
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal14HeapObjectsMap23StopHeapObjectsTrackingEv(%"class.v8::internal::HeapObjectsMap"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 3
  %3 = bitcast %"class.std::__1::vector.3"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 3, i32 0, i32 1
  %6 = bitcast %"struct.v8::internal::HeapObjectsMap::TimeInterval"** %5 to i64*
  store i64 %4, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14HeapObjectsMap20UpdateHeapObjectsMapEv(%"class.v8::internal::HeapObjectsMap"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.v8::internal::CombinedHeapObjectIterator", align 8
  %3 = alloca %"class.v8::internal::HeapObject", align 8
  %4 = load i8, i8* @_ZN2v88internal32FLAG_heap_profiler_trace_objectsE, align 1, !range !4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.34, i64 0, i64 0), i32 %8) #13
  br label %9

9:                                                ; preds = %1, %6
  %10 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 5
  %11 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %10, align 8
  tail call void @_ZN2v88internal4Heap24PreciseCollectAllGarbageEiNS0_23GarbageCollectionReasonENS_15GCCallbackFlagsE(%"class.v8::internal::Heap"* %11, i32 0, i32 11, i32 0) #13
  %12 = bitcast %"class.v8::internal::CombinedHeapObjectIterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %12) #13
  %13 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %10, align 8
  call void @_ZN2v88internal26CombinedHeapObjectIteratorC1EPNS0_4HeapENS0_18HeapObjectIterator20HeapObjectsFilteringE(%"class.v8::internal::CombinedHeapObjectIterator"* nonnull %2, %"class.v8::internal::Heap"* %13, i32 0) #13
  %14 = bitcast %"class.v8::internal::HeapObject"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = call i64 @_ZN2v88internal26CombinedHeapObjectIterator4NextEv(%"class.v8::internal::CombinedHeapObjectIterator"* nonnull %2) #13
  %16 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %15, i64* %16, align 8
  %17 = trunc i64 %15 to i32
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %55, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  call void @_ZN2v88internal14HeapObjectsMap17RemoveDeadEntriesEv(%"class.v8::internal::HeapObjectsMap"* %0)
  %20 = load i8, i8* @_ZN2v88internal32FLAG_heap_profiler_trace_objectsE, align 1, !range !4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %62, label %59

22:                                               ; preds = %9, %55
  %23 = phi i64 [ %56, %55 ], [ %15, %9 ]
  %24 = add i64 %23, -1
  %25 = and i64 %23, -4294967296
  %26 = inttoptr i64 %24 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %25, %28
  %30 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %3, i64 %29) #13
  %31 = call i32 @_ZN2v88internal14HeapObjectsMap14FindOrAddEntryEmjb(%"class.v8::internal::HeapObjectsMap"* %0, i64 %24, i32 %30, i1 zeroext true)
  %32 = load i8, i8* @_ZN2v88internal32FLAG_heap_profiler_trace_objectsE, align 1, !range !4
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %55, label %34

34:                                               ; preds = %22
  %35 = load i64, i64* %16, align 8
  %36 = add i64 %35, -1
  %37 = inttoptr i64 %36 to i8*
  %38 = and i64 %35, -4294967296
  %39 = inttoptr i64 %36 to i32*
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = zext i32 %40 to i64
  %42 = or i64 %38, %41
  %43 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %3, i64 %42) #13
  %44 = load i64, i64* %16, align 8
  %45 = add i64 %44, -1
  %46 = and i64 %44, -4294967296
  %47 = inttoptr i64 %45 to i32*
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %46, %49
  %51 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %3, i64 %50) #13
  %52 = sext i32 %51 to i64
  %53 = add i64 %45, %52
  %54 = inttoptr i64 %53 to i8*
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i64 0, i64 0), i8* %37, i32 %43, i8* %54) #13
  br label %55

55:                                               ; preds = %22, %34
  %56 = call i64 @_ZN2v88internal26CombinedHeapObjectIterator4NextEv(%"class.v8::internal::CombinedHeapObjectIterator"* nonnull %2) #13
  store i64 %56, i64* %16, align 8
  %57 = trunc i64 %56 to i32
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %19, label %22

59:                                               ; preds = %19
  %60 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.36, i64 0, i64 0), i32 %61) #13
  br label %62

62:                                               ; preds = %19, %59
  %63 = getelementptr inbounds %"class.v8::internal::CombinedHeapObjectIterator", %"class.v8::internal::CombinedHeapObjectIterator"* %2, i64 0, i32 1
  call void @_ZN2v88internal18HeapObjectIteratorD1Ev(%"class.v8::internal::HeapObjectIterator"* %63) #13
  %64 = getelementptr inbounds %"class.v8::internal::CombinedHeapObjectIterator", %"class.v8::internal::CombinedHeapObjectIterator"* %2, i64 0, i32 0
  call void @_ZN2v88internal14SafepointScopeD1Ev(%"class.v8::internal::SafepointScope"* nonnull %64) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %12) #13
  ret void
}

declare void @_ZN2v88internal4Heap24PreciseCollectAllGarbageEiNS0_23GarbageCollectionReasonENS_15GCCallbackFlagsE(%"class.v8::internal::Heap"*, i32, i32, i32) local_unnamed_addr #4

declare void @_ZN2v88internal26CombinedHeapObjectIteratorC1EPNS0_4HeapENS0_18HeapObjectIterator20HeapObjectsFilteringE(%"class.v8::internal::CombinedHeapObjectIterator"*, %"class.v8::internal::Heap"*, i32) unnamed_addr #4

declare i64 @_ZN2v88internal26CombinedHeapObjectIterator4NextEv(%"class.v8::internal::CombinedHeapObjectIterator"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14HeapObjectsMap17RemoveDeadEntriesEv(%"class.v8::internal::HeapObjectsMap"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.1663", align 8
  %3 = alloca %"class.std::__1::unordered_map.1297", align 8
  %4 = bitcast %"class.std::__1::unordered_map.1297"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.std::__1::unordered_map.1297", %"class.std::__1::unordered_map.1297"* %3, i64 0, i32 0, i32 3
  %6 = bitcast %"class.std::__1::__compressed_pair.1317"* %5 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = bitcast %"struct.std::__1::__hash_node_base"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.std::__1::unordered_map.1297", %"class.std::__1::unordered_map.1297"* %3, i64 0, i32 0
  br label %32

13:                                               ; preds = %32, %1
  %14 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 2, i32 0, i32 1
  %16 = bitcast %"struct.v8::internal::HeapObjectsMap::EntryInfo"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector"* %14 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = sdiv exact i64 %20, 24
  %22 = icmp ugt i64 %21, 1
  br i1 %22, label %23, label %41

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.std::__1::unordered_map.1297", %"class.std::__1::unordered_map.1297"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::unordered_map.1297", %"class.std::__1::unordered_map.1297"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 4, i32 0
  %29 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %30 = bitcast %"class.std::__1::unique_ptr.1663"* %2 to i8*
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.1663", %"class.std::__1::unique_ptr.1663"* %2, i64 0, i32 0, i32 0, i32 0
  br label %67

32:                                               ; preds = %11, %32
  %33 = phi i64 [ %9, %11 ], [ %39, %32 ]
  %34 = inttoptr i64 %33 to %"struct.std::__1::__hash_node.1660"*
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node.1660", %"struct.std::__1::__hash_node.1660"* %34, i64 0, i32 2, i32 0, i32 1
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node.1660", %"struct.std::__1::__hash_node.1660"* %34, i64 0, i32 2, i32 0, i32 0
  %37 = call { %"struct.std::__1::__hash_node_base.1302"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImPvEENS_22__unordered_map_hasherImS3_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE25__emplace_unique_key_argsImJRKmRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_S2_EEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1298"* nonnull %12, i64* dereferenceable(8) %35, i64* dereferenceable(8) %35, i8** dereferenceable(8) %36) #13
  %38 = inttoptr i64 %33 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %13, label %32

41:                                               ; preds = %334, %13
  %42 = phi i64 [ %17, %13 ], [ %337, %334 ]
  %43 = phi i64 [ %19, %13 ], [ %338, %334 ]
  %44 = phi i64 [ 1, %13 ], [ %335, %334 ]
  %45 = inttoptr i64 %43 to %"struct.v8::internal::HeapObjectsMap::EntryInfo"*
  %46 = inttoptr i64 %42 to %"struct.v8::internal::HeapObjectsMap::EntryInfo"*
  %47 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %45, i64 %44
  %48 = icmp eq %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %47, %46
  br i1 %48, label %50, label %49

49:                                               ; preds = %41
  store %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %47, %"struct.v8::internal::HeapObjectsMap::EntryInfo"** %15, align 8
  br label %50

50:                                               ; preds = %41, %49
  %51 = getelementptr inbounds %"class.std::__1::unordered_map.1297", %"class.std::__1::unordered_map.1297"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %52, null
  br i1 %53, label %60, label %54

54:                                               ; preds = %50, %54
  %55 = phi %"struct.std::__1::__hash_node_base.1302"* [ %57, %54 ], [ %52, %50 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %55, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %56, align 8
  %58 = bitcast %"struct.std::__1::__hash_node_base.1302"* %55 to i8*
  call void @_ZdlPv(i8* %58) #21
  %59 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %57, null
  br i1 %59, label %60, label %54

60:                                               ; preds = %54, %50
  %61 = getelementptr inbounds %"class.std::__1::unordered_map.1297", %"class.std::__1::unordered_map.1297"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %61, align 8
  store %"struct.std::__1::__hash_node_base.1302"** null, %"struct.std::__1::__hash_node_base.1302"*** %61, align 8
  %63 = icmp eq %"struct.std::__1::__hash_node_base.1302"** %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %60
  %65 = bitcast %"struct.std::__1::__hash_node_base.1302"** %62 to i8*
  call void @_ZdlPv(i8* %65) #21
  br label %66

66:                                               ; preds = %60, %64
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #13
  ret void

67:                                               ; preds = %23, %334
  %68 = phi i64 [ %17, %23 ], [ %337, %334 ]
  %69 = phi i64 [ %21, %23 ], [ %340, %334 ]
  %70 = phi i64 [ %19, %23 ], [ %338, %334 ]
  %71 = phi i64 [ 1, %23 ], [ %335, %334 ]
  %72 = phi i64 [ 1, %23 ], [ %336, %334 ]
  %73 = inttoptr i64 %70 to %"struct.v8::internal::HeapObjectsMap::EntryInfo"*
  %74 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %73, i64 %72
  %75 = load i64, i64* %24, align 8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %139, label %77

77:                                               ; preds = %67
  %78 = call i64 @llvm.ctpop.i64(i64 %75) #13, !range !3
  %79 = icmp ugt i64 %78, 1
  br i1 %79, label %83, label %80

80:                                               ; preds = %77
  %81 = add i64 %75, -1
  %82 = and i64 %81, %72
  br label %87

83:                                               ; preds = %77
  %84 = icmp ult i64 %72, %75
  br i1 %84, label %87, label %85

85:                                               ; preds = %83
  %86 = urem i64 %72, %75
  br label %87

87:                                               ; preds = %85, %83, %80
  %88 = phi i64 [ %82, %80 ], [ %86, %85 ], [ %72, %83 ]
  %89 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %25, align 8
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %89, i64 %88
  %91 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %90, align 8
  %92 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %91, null
  br i1 %92, label %139, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %91, i64 0, i32 0
  %95 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %95, null
  br i1 %96, label %139, label %97

97:                                               ; preds = %93
  %98 = add i64 %75, -1
  br i1 %79, label %99, label %121

99:                                               ; preds = %97, %117
  %100 = phi %"struct.std::__1::__hash_node_base.1302"* [ %119, %117 ], [ %95, %97 ]
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %100, i64 1
  %102 = bitcast %"struct.std::__1::__hash_node_base.1302"* %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = icmp eq i64 %103, %72
  br i1 %104, label %112, label %105

105:                                              ; preds = %99
  %106 = icmp ult i64 %103, %75
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %103, %75
  br label %109

109:                                              ; preds = %107, %105
  %110 = phi i64 [ %108, %107 ], [ %103, %105 ]
  %111 = icmp eq i64 %110, %88
  br i1 %111, label %117, label %139

112:                                              ; preds = %99
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %100, i64 2
  %114 = bitcast %"struct.std::__1::__hash_node_base.1302"* %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = icmp eq i64 %115, %72
  br i1 %116, label %139, label %117

117:                                              ; preds = %112, %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %100, i64 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %118, align 8
  %120 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %119, null
  br i1 %120, label %139, label %99

121:                                              ; preds = %97, %135
  %122 = phi %"struct.std::__1::__hash_node_base.1302"* [ %137, %135 ], [ %95, %97 ]
  %123 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %122, i64 1
  %124 = bitcast %"struct.std::__1::__hash_node_base.1302"* %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = icmp eq i64 %125, %72
  br i1 %126, label %130, label %127

127:                                              ; preds = %121
  %128 = and i64 %125, %98
  %129 = icmp eq i64 %128, %88
  br i1 %129, label %135, label %139

130:                                              ; preds = %121
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %122, i64 2
  %132 = bitcast %"struct.std::__1::__hash_node_base.1302"* %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = icmp eq i64 %133, %72
  br i1 %134, label %139, label %135

135:                                              ; preds = %130, %127
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %122, i64 0, i32 0
  %137 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %136, align 8
  %138 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %137, null
  br i1 %138, label %139, label %121

139:                                              ; preds = %127, %130, %135, %109, %112, %117, %67, %87, %93
  %140 = phi %"struct.std::__1::__hash_node_base.1302"* [ null, %87 ], [ null, %67 ], [ null, %93 ], [ %100, %112 ], [ null, %117 ], [ null, %109 ], [ %122, %130 ], [ null, %135 ], [ null, %127 ]
  %141 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %73, i64 %72, i32 4
  %142 = load i8, i8* %141, align 4, !range !4
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %222, label %144

144:                                              ; preds = %139
  %145 = icmp eq i64 %71, %72
  br i1 %145, label %156, label %146

146:                                              ; preds = %144
  %147 = icmp ugt i64 %69, %71
  br i1 %147, label %150, label %148

148:                                              ; preds = %146
  %149 = bitcast %"class.std::__1::vector"* %14 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %149) #20
  unreachable

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %73, i64 %71
  %152 = bitcast %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %151 to i8*
  %153 = bitcast %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %74 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 21, i1 false)
  %154 = load i64, i64* %16, align 8
  %155 = load i64, i64* %18, align 8
  br label %156

156:                                              ; preds = %144, %150
  %157 = phi i64 [ %70, %144 ], [ %155, %150 ]
  %158 = phi i64 [ %68, %144 ], [ %154, %150 ]
  %159 = sub i64 %158, %157
  %160 = sdiv exact i64 %159, 24
  %161 = icmp ugt i64 %160, %71
  br i1 %161, label %164, label %162

162:                                              ; preds = %156
  %163 = bitcast %"class.std::__1::vector"* %14 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %163) #20
  unreachable

164:                                              ; preds = %156
  %165 = inttoptr i64 %157 to %"struct.v8::internal::HeapObjectsMap::EntryInfo"*
  %166 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %165, i64 %71, i32 4
  store i8 0, i8* %166, align 4
  %167 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %73, i64 %72, i32 2
  %168 = load i64, i64* %167, align 8
  %169 = trunc i64 %168 to i32
  %170 = xor i32 %169, -1
  %171 = shl i32 %169, 15
  %172 = add i32 %171, %170
  %173 = lshr i32 %172, 12
  %174 = xor i32 %173, %172
  %175 = mul i32 %174, 5
  %176 = lshr i32 %175, 4
  %177 = xor i32 %176, %175
  %178 = mul i32 %177, 2057
  %179 = lshr i32 %178, 16
  %180 = and i32 %178, 1073741823
  %181 = xor i32 %180, %179
  %182 = load i32, i32* %26, align 8
  %183 = add i32 %182, -1
  %184 = and i32 %181, %183
  %185 = zext i32 %184 to i64
  %186 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %27, align 8
  %187 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %186, i64 %185
  %188 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %187, i64 0, i32 0
  %189 = load i8*, i8** %188, align 8
  %190 = icmp eq i8* %189, null
  %191 = inttoptr i64 %168 to i8*
  %192 = icmp eq i8* %189, %191
  %193 = or i1 %190, %192
  br i1 %193, label %206, label %194

194:                                              ; preds = %164
  %195 = zext i32 %183 to i64
  br label %196

196:                                              ; preds = %196, %194
  %197 = phi i64 [ %185, %194 ], [ %199, %196 ]
  %198 = add nuw nsw i64 %197, 1
  %199 = and i64 %198, %195
  %200 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %186, i64 %199
  %201 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %200, i64 0, i32 0
  %202 = load i8*, i8** %201, align 8
  %203 = icmp eq i8* %202, null
  %204 = icmp eq i8* %202, %191
  %205 = or i1 %203, %204
  br i1 %205, label %206, label %196

206:                                              ; preds = %196, %164
  %207 = phi i8* [ %189, %164 ], [ %202, %196 ]
  %208 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %187, %164 ], [ %200, %196 ]
  %209 = icmp eq i8* %207, null
  %210 = select i1 %209, %"struct.v8::base::TemplateHashMapEntry"* null, %"struct.v8::base::TemplateHashMapEntry"* %208
  %211 = inttoptr i64 %71 to i8*
  %212 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %210, i64 0, i32 1
  store i8* %211, i8** %212, align 8
  %213 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %140, null
  br i1 %213, label %220, label %214

214:                                              ; preds = %206
  %215 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %140, i64 3
  %216 = bitcast %"struct.std::__1::__hash_node_base.1302"* %215 to i8**
  %217 = call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvmEENS_22__unordered_map_hasherIS2_S3_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S3_S8_S6_Lb1EEENS_9allocatorIS3_EEE4findIS2_EENS_15__hash_iteratorIPNS_11__hash_nodeIS3_S2_EEEERKT_(%"class.std::__1::__hash_table"* %28, i8** dereferenceable(8) %216) #13
  %218 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %217, i64 3
  %219 = bitcast %"struct.std::__1::__hash_node_base"* %218 to i64*
  store i64 %71, i64* %219, align 8
  br label %220

220:                                              ; preds = %206, %214
  %221 = add i64 %71, 1
  br label %334

222:                                              ; preds = %139
  %223 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %73, i64 %72, i32 2
  %224 = load i64, i64* %223, align 8
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %334, label %226

226:                                              ; preds = %222
  %227 = trunc i64 %224 to i32
  %228 = xor i32 %227, -1
  %229 = shl i32 %227, 15
  %230 = add i32 %229, %228
  %231 = lshr i32 %230, 12
  %232 = xor i32 %231, %230
  %233 = mul i32 %232, 5
  %234 = lshr i32 %233, 4
  %235 = xor i32 %234, %233
  %236 = mul i32 %235, 2057
  %237 = lshr i32 %236, 16
  %238 = and i32 %236, 1073741823
  %239 = xor i32 %238, %237
  %240 = load i32, i32* %26, align 8
  %241 = add i32 %240, -1
  %242 = and i32 %241, %239
  %243 = zext i32 %242 to i64
  %244 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %27, align 8
  %245 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %244, i64 %243
  %246 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %245, i64 0, i32 0
  %247 = load i8*, i8** %246, align 8
  %248 = icmp eq i8* %247, null
  %249 = inttoptr i64 %224 to i8*
  %250 = icmp eq i8* %247, %249
  %251 = or i1 %248, %250
  br i1 %251, label %264, label %252

252:                                              ; preds = %226
  %253 = zext i32 %241 to i64
  br label %254

254:                                              ; preds = %254, %252
  %255 = phi i64 [ %243, %252 ], [ %257, %254 ]
  %256 = add nuw nsw i64 %255, 1
  %257 = and i64 %256, %253
  %258 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %244, i64 %257
  %259 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %258, i64 0, i32 0
  %260 = load i8*, i8** %259, align 8
  %261 = icmp eq i8* %260, null
  %262 = icmp eq i8* %260, %249
  %263 = or i1 %261, %262
  br i1 %263, label %264, label %254

264:                                              ; preds = %254, %226
  %265 = phi i8* [ %247, %226 ], [ %260, %254 ]
  %266 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %245, %226 ], [ %258, %254 ]
  %267 = icmp eq i8* %265, null
  br i1 %267, label %321, label %268

268:                                              ; preds = %264
  %269 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %266, i64 1
  %270 = zext i32 %240 to i64
  %271 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %244, i64 %270
  %272 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %269, %271
  %273 = select i1 %272, %"struct.v8::base::TemplateHashMapEntry"* %244, %"struct.v8::base::TemplateHashMapEntry"* %269
  %274 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %273, i64 0, i32 0
  %275 = load i8*, i8** %274, align 8
  %276 = icmp eq i8* %275, null
  br i1 %276, label %316, label %277

277:                                              ; preds = %268, %304
  %278 = phi i32 [ %305, %304 ], [ %240, %268 ]
  %279 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %306, %304 ], [ %244, %268 ]
  %280 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %312, %304 ], [ %273, %268 ]
  %281 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %307, %304 ], [ %266, %268 ]
  %282 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %280, i64 0, i32 2
  %283 = load i32, i32* %282, align 8
  %284 = add i32 %278, -1
  %285 = and i32 %283, %284
  %286 = zext i32 %285 to i64
  %287 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %279, i64 %286
  %288 = icmp ugt %"struct.v8::base::TemplateHashMapEntry"* %280, %281
  br i1 %288, label %289, label %293

289:                                              ; preds = %277
  %290 = icmp ule %"struct.v8::base::TemplateHashMapEntry"* %287, %281
  %291 = icmp ugt %"struct.v8::base::TemplateHashMapEntry"* %287, %280
  %292 = or i1 %290, %291
  br i1 %292, label %299, label %293

293:                                              ; preds = %289, %277
  %294 = icmp ult %"struct.v8::base::TemplateHashMapEntry"* %280, %281
  %295 = icmp ule %"struct.v8::base::TemplateHashMapEntry"* %287, %281
  %296 = and i1 %294, %295
  %297 = icmp ugt %"struct.v8::base::TemplateHashMapEntry"* %287, %280
  %298 = and i1 %297, %296
  br i1 %298, label %299, label %304

299:                                              ; preds = %293, %289
  %300 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %281 to i8*
  %301 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %280 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %300, i8* align 8 %301, i64 20, i1 false) #13
  %302 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %27, align 8
  %303 = load i32, i32* %26, align 8
  br label %304

304:                                              ; preds = %299, %293
  %305 = phi i32 [ %303, %299 ], [ %278, %293 ]
  %306 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %302, %299 ], [ %279, %293 ]
  %307 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %280, %299 ], [ %281, %293 ]
  %308 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %280, i64 1
  %309 = zext i32 %305 to i64
  %310 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %306, i64 %309
  %311 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %308, %310
  %312 = select i1 %311, %"struct.v8::base::TemplateHashMapEntry"* %306, %"struct.v8::base::TemplateHashMapEntry"* %308
  %313 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %312, i64 0, i32 0
  %314 = load i8*, i8** %313, align 8
  %315 = icmp eq i8* %314, null
  br i1 %315, label %316, label %277

316:                                              ; preds = %304, %268
  %317 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %266, %268 ], [ %307, %304 ]
  %318 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %317, i64 0, i32 0
  store i8* null, i8** %318, align 8
  %319 = load i32, i32* %29, align 4
  %320 = add i32 %319, -1
  store i32 %320, i32* %29, align 4
  br label %321

321:                                              ; preds = %264, %316
  %322 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %140, null
  br i1 %322, label %334, label %323

323:                                              ; preds = %321
  %324 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %140, i64 3
  %325 = bitcast %"struct.std::__1::__hash_node_base.1302"* %324 to i8**
  %326 = call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvmEENS_22__unordered_map_hasherIS2_S3_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S3_S8_S6_Lb1EEENS_9allocatorIS3_EEE4findIS2_EENS_15__hash_iteratorIPNS_11__hash_nodeIS3_S2_EEEERKT_(%"class.std::__1::__hash_table"* %28, i8** dereferenceable(8) %325) #13
  %327 = icmp eq %"struct.std::__1::__hash_node_base"* %326, null
  br i1 %327, label %334, label %328

328:                                              ; preds = %323
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #13
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvmEENS_22__unordered_map_hasherIS2_S3_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S3_S8_S6_Lb1EEENS_9allocatorIS3_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_S2_EEEE(%"class.std::__1::unique_ptr.1663"* nonnull sret %2, %"class.std::__1::__hash_table"* %28, %"struct.std::__1::__hash_node_base"* nonnull %326) #13
  %329 = load %"struct.std::__1::__hash_node.1660"*, %"struct.std::__1::__hash_node.1660"** %31, align 8
  store %"struct.std::__1::__hash_node.1660"* null, %"struct.std::__1::__hash_node.1660"** %31, align 8
  %330 = icmp eq %"struct.std::__1::__hash_node.1660"* %329, null
  br i1 %330, label %333, label %331

331:                                              ; preds = %328
  %332 = bitcast %"struct.std::__1::__hash_node.1660"* %329 to i8*
  call void @_ZdlPv(i8* %332) #21
  br label %333

333:                                              ; preds = %331, %328
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #13
  br label %334

334:                                              ; preds = %321, %333, %323, %222, %220
  %335 = phi i64 [ %221, %220 ], [ %71, %321 ], [ %71, %222 ], [ %71, %323 ], [ %71, %333 ]
  %336 = add nuw i64 %72, 1
  %337 = load i64, i64* %16, align 8
  %338 = load i64, i64* %18, align 8
  %339 = sub i64 %337, %338
  %340 = sdiv exact i64 %339, 24
  %341 = icmp ult i64 %336, %340
  br i1 %341, label %67, label %41
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal14HeapObjectsMap20PushHeapObjectsStatsEPNS_12OutputStreamEPl(%"class.v8::internal::HeapObjectsMap"*, %"class.v8::OutputStream"*, i64*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.std::__1::vector.1290", align 8
  %5 = alloca %"class.v8::base::TimeDelta", align 8
  tail call void @_ZN2v88internal14HeapObjectsMap20UpdateHeapObjectsMapEv(%"class.v8::internal::HeapObjectsMap"* %0)
  %6 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = load %"struct.v8::internal::HeapObjectsMap::TimeInterval"*, %"struct.v8::internal::HeapObjectsMap::TimeInterval"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.v8::internal::HeapObjectsMap::TimeInterval"*, %"struct.v8::internal::HeapObjectsMap::TimeInterval"** %10, align 8
  %12 = icmp ult %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %9, %11
  %13 = ptrtoint %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %11 to i64
  br i1 %12, label %14, label %25

14:                                               ; preds = %3
  %15 = load i32, i32* %7, align 4
  %16 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::TimeInterval", %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %9, i64 0, i32 0
  store i32 %15, i32* %16, align 8
  %17 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::TimeInterval", %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %9, i64 0, i32 1
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::TimeInterval", %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %9, i64 0, i32 2
  store i32 0, i32* %18, align 8
  %19 = tail call i64 @_ZN2v84base9TimeTicks3NowEv() #13
  %20 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::TimeInterval", %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %9, i64 0, i32 3, i32 0, i32 0
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::TimeInterval", %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %9, i64 1
  %22 = ptrtoint %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %21 to i64
  %23 = bitcast %"struct.v8::internal::HeapObjectsMap::TimeInterval"** %8 to i64*
  store i64 %22, i64* %23, align 8
  %24 = bitcast %"class.std::__1::vector.3"* %6 to i64*
  br label %83

25:                                               ; preds = %3
  %26 = ptrtoint %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %9 to i64
  %27 = bitcast %"struct.v8::internal::HeapObjectsMap::TimeInterval"** %8 to i64*
  %28 = bitcast %"class.std::__1::vector.3"* %6 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  %31 = sdiv exact i64 %30, 24
  %32 = add nsw i64 %31, 1
  %33 = icmp ugt i64 %32, 768614336404564650
  br i1 %33, label %34, label %36

34:                                               ; preds = %25
  %35 = bitcast %"class.std::__1::vector.3"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #20
  unreachable

36:                                               ; preds = %25
  %37 = bitcast %"struct.v8::internal::HeapObjectsMap::TimeInterval"** %10 to i64*
  %38 = sub i64 %13, %29
  %39 = sdiv exact i64 %38, 24
  %40 = icmp ult i64 %39, 384307168202282325
  br i1 %40, label %41, label %46

41:                                               ; preds = %36
  %42 = shl nsw i64 %39, 1
  %43 = icmp ult i64 %42, %32
  %44 = select i1 %43, i64 %32, i64 %42
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %41, %36
  %47 = phi i64 [ %44, %41 ], [ 768614336404564650, %36 ]
  %48 = mul i64 %47, 24
  %49 = tail call i8* @_Znwm(i64 %48) #21
  %50 = bitcast i8* %49 to %"struct.v8::internal::HeapObjectsMap::TimeInterval"*
  br label %51

51:                                               ; preds = %46, %41
  %52 = phi i64 [ %47, %46 ], [ 0, %41 ]
  %53 = phi %"struct.v8::internal::HeapObjectsMap::TimeInterval"* [ %50, %46 ], [ null, %41 ]
  %54 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::TimeInterval", %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %53, i64 %31
  %55 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::TimeInterval", %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %53, i64 %52
  %56 = ptrtoint %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %55 to i64
  %57 = load i32, i32* %7, align 4
  %58 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::TimeInterval", %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %54, i64 0, i32 0
  store i32 %57, i32* %58, align 8
  %59 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::TimeInterval", %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %53, i64 %31, i32 1
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::TimeInterval", %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %53, i64 %31, i32 2
  store i32 0, i32* %60, align 8
  %61 = tail call i64 @_ZN2v84base9TimeTicks3NowEv() #13
  %62 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::TimeInterval", %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %53, i64 %31, i32 3, i32 0, i32 0
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::TimeInterval", %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %54, i64 1
  %64 = ptrtoint %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %63 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %6, i64 0, i32 0, i32 0
  %66 = load %"struct.v8::internal::HeapObjectsMap::TimeInterval"*, %"struct.v8::internal::HeapObjectsMap::TimeInterval"** %65, align 8
  %67 = load i64, i64* %27, align 8
  %68 = ptrtoint %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %66 to i64
  %69 = sub i64 %67, %68
  %70 = sdiv exact i64 %69, -24
  %71 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::TimeInterval", %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %54, i64 %70
  %72 = ptrtoint %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %71 to i64
  %73 = icmp sgt i64 %69, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %51
  %75 = bitcast %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %71 to i8*
  %76 = bitcast %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %76, i64 %69, i1 false) #13
  %77 = load %"struct.v8::internal::HeapObjectsMap::TimeInterval"*, %"struct.v8::internal::HeapObjectsMap::TimeInterval"** %65, align 8
  br label %78

78:                                               ; preds = %74, %51
  %79 = phi %"struct.v8::internal::HeapObjectsMap::TimeInterval"* [ %66, %51 ], [ %77, %74 ]
  store i64 %72, i64* %28, align 8
  store i64 %64, i64* %27, align 8
  store i64 %56, i64* %37, align 8
  %80 = icmp eq %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %78
  %82 = bitcast %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %79 to i8*
  tail call void @_ZdlPv(i8* %82) #21
  br label %83

83:                                               ; preds = %81, %78, %14
  %84 = phi i64* [ %28, %81 ], [ %28, %78 ], [ %24, %14 ]
  %85 = phi i64* [ %27, %81 ], [ %27, %78 ], [ %23, %14 ]
  %86 = bitcast %"class.v8::OutputStream"* %1 to i32 (%"class.v8::OutputStream"*)***
  %87 = load i32 (%"class.v8::OutputStream"*)**, i32 (%"class.v8::OutputStream"*)*** %86, align 8
  %88 = getelementptr inbounds i32 (%"class.v8::OutputStream"*)*, i32 (%"class.v8::OutputStream"*)** %87, i64 3
  %89 = load i32 (%"class.v8::OutputStream"*)*, i32 (%"class.v8::OutputStream"*)** %88, align 8
  %90 = tail call i32 %89(%"class.v8::OutputStream"* %1) #13
  %91 = bitcast %"class.std::__1::vector.1290"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 0, i64 24, i1 false) #13
  %92 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 2, i32 0, i32 1
  %93 = load %"struct.v8::internal::HeapObjectsMap::EntryInfo"*, %"struct.v8::internal::HeapObjectsMap::EntryInfo"** %92, align 8
  %94 = load i64, i64* %85, align 8
  %95 = load i64, i64* %84, align 8
  %96 = icmp eq i64 %94, %95
  br i1 %96, label %97, label %99

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"class.std::__1::vector.1290", %"class.std::__1::vector.1290"* %4, i64 0, i32 0, i32 0
  br label %254

99:                                               ; preds = %83
  %100 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %0, i64 0, i32 2, i32 0, i32 0
  %101 = load %"struct.v8::internal::HeapObjectsMap::EntryInfo"*, %"struct.v8::internal::HeapObjectsMap::EntryInfo"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::vector.1290", %"class.std::__1::vector.1290"* %4, i64 0, i32 0, i32 1
  %103 = getelementptr inbounds %"class.std::__1::vector.1290", %"class.std::__1::vector.1290"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %104 = bitcast %"struct.v8::HeapStatsUpdate"** %102 to i64*
  %105 = bitcast %"class.std::__1::vector.1290"* %4 to i64*
  %106 = bitcast %"struct.v8::HeapStatsUpdate"** %103 to i64*
  %107 = bitcast %"class.v8::OutputStream"* %1 to i32 (%"class.v8::OutputStream"*, %"struct.v8::HeapStatsUpdate"*, i32)***
  br label %108

108:                                              ; preds = %99, %229
  %109 = phi %"struct.v8::HeapStatsUpdate"* [ null, %99 ], [ %230, %229 ]
  %110 = phi i64 [ 0, %99 ], [ %231, %229 ]
  %111 = phi i64 [ 0, %99 ], [ %232, %229 ]
  %112 = phi %"struct.v8::HeapStatsUpdate"* [ null, %99 ], [ %233, %229 ]
  %113 = phi %"struct.v8::HeapStatsUpdate"* [ null, %99 ], [ %234, %229 ]
  %114 = phi i64 [ %95, %99 ], [ %237, %229 ]
  %115 = phi %"struct.v8::internal::HeapObjectsMap::EntryInfo"* [ %101, %99 ], [ %135, %229 ]
  %116 = phi i64 [ 0, %99 ], [ %235, %229 ]
  %117 = inttoptr i64 %114 to %"struct.v8::internal::HeapObjectsMap::TimeInterval"*
  %118 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::TimeInterval", %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %117, i64 %116, i32 0
  %119 = load i32, i32* %118, align 8
  %120 = icmp ult %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %115, %93
  br i1 %120, label %121, label %133

121:                                              ; preds = %108, %127
  %122 = phi %"struct.v8::internal::HeapObjectsMap::EntryInfo"* [ %131, %127 ], [ %115, %108 ]
  %123 = phi i32 [ %130, %127 ], [ 0, %108 ]
  %124 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %122, i64 0, i32 0
  %125 = load i32, i32* %124, align 8
  %126 = icmp ult i32 %125, %119
  br i1 %126, label %127, label %133

127:                                              ; preds = %121
  %128 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %122, i64 0, i32 3
  %129 = load i32, i32* %128, align 8
  %130 = add i32 %129, %123
  %131 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::EntryInfo", %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %122, i64 1
  %132 = icmp ult %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %131, %93
  br i1 %132, label %121, label %133

133:                                              ; preds = %121, %127, %108
  %134 = phi i32 [ 0, %108 ], [ %130, %127 ], [ %123, %121 ]
  %135 = phi %"struct.v8::internal::HeapObjectsMap::EntryInfo"* [ %115, %108 ], [ %131, %127 ], [ %122, %121 ]
  %136 = ptrtoint %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %135 to i64
  %137 = ptrtoint %"struct.v8::internal::HeapObjectsMap::EntryInfo"* %115 to i64
  %138 = sub i64 %136, %137
  %139 = sdiv exact i64 %138, 24
  %140 = trunc i64 %139 to i32
  %141 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::TimeInterval", %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %117, i64 %116, i32 2
  %142 = load i32, i32* %141, align 8
  %143 = icmp eq i32 %142, %140
  br i1 %143, label %144, label %148

144:                                              ; preds = %133
  %145 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::TimeInterval", %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %117, i64 %116, i32 1
  %146 = load i32, i32* %145, align 4
  %147 = icmp eq i32 %146, %134
  br i1 %147, label %229, label %148

148:                                              ; preds = %144, %133
  %149 = trunc i64 %116 to i32
  store i32 %140, i32* %141, align 8
  %150 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::TimeInterval", %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %117, i64 %116, i32 1
  store i32 %134, i32* %150, align 4
  %151 = load %"struct.v8::HeapStatsUpdate"*, %"struct.v8::HeapStatsUpdate"** %102, align 8
  %152 = load %"struct.v8::HeapStatsUpdate"*, %"struct.v8::HeapStatsUpdate"** %103, align 8
  %153 = icmp ult %"struct.v8::HeapStatsUpdate"* %151, %152
  %154 = ptrtoint %"struct.v8::HeapStatsUpdate"* %152 to i64
  br i1 %153, label %155, label %163

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"struct.v8::HeapStatsUpdate", %"struct.v8::HeapStatsUpdate"* %151, i64 0, i32 0
  store i32 %149, i32* %156, align 4
  %157 = getelementptr inbounds %"struct.v8::HeapStatsUpdate", %"struct.v8::HeapStatsUpdate"* %151, i64 0, i32 1
  store i32 %140, i32* %157, align 4
  %158 = getelementptr inbounds %"struct.v8::HeapStatsUpdate", %"struct.v8::HeapStatsUpdate"* %151, i64 0, i32 2
  store i32 %134, i32* %158, align 4
  %159 = getelementptr inbounds %"struct.v8::HeapStatsUpdate", %"struct.v8::HeapStatsUpdate"* %151, i64 1
  %160 = ptrtoint %"struct.v8::HeapStatsUpdate"* %159 to i64
  store i64 %160, i64* %104, align 8
  %161 = load i64, i64* %105, align 8
  %162 = inttoptr i64 %161 to %"struct.v8::HeapStatsUpdate"*
  br label %212

163:                                              ; preds = %148
  %164 = ptrtoint %"struct.v8::HeapStatsUpdate"* %151 to i64
  %165 = load i64, i64* %105, align 8
  %166 = sub i64 %164, %165
  %167 = sdiv exact i64 %166, 12
  %168 = add nsw i64 %167, 1
  %169 = icmp ugt i64 %168, 1537228672809129301
  br i1 %169, label %170, label %172

170:                                              ; preds = %163
  %171 = bitcast %"class.std::__1::vector.1290"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %171) #20
  unreachable

172:                                              ; preds = %163
  %173 = sub i64 %154, %165
  %174 = sdiv exact i64 %173, 12
  %175 = icmp ult i64 %174, 768614336404564650
  br i1 %175, label %176, label %181

176:                                              ; preds = %172
  %177 = shl nsw i64 %174, 1
  %178 = icmp ult i64 %177, %168
  %179 = select i1 %178, i64 %168, i64 %177
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %188, label %181

181:                                              ; preds = %176, %172
  %182 = phi i64 [ %179, %176 ], [ 1537228672809129301, %172 ]
  %183 = mul i64 %182, 12
  %184 = tail call i8* @_Znwm(i64 %183) #21
  %185 = bitcast i8* %184 to %"struct.v8::HeapStatsUpdate"*
  %186 = load i32, i32* %141, align 4
  %187 = load i32, i32* %150, align 4
  br label %188

188:                                              ; preds = %181, %176
  %189 = phi i32 [ %187, %181 ], [ %134, %176 ]
  %190 = phi i32 [ %186, %181 ], [ %140, %176 ]
  %191 = phi i64 [ %182, %181 ], [ 0, %176 ]
  %192 = phi %"struct.v8::HeapStatsUpdate"* [ %185, %181 ], [ null, %176 ]
  %193 = getelementptr inbounds %"struct.v8::HeapStatsUpdate", %"struct.v8::HeapStatsUpdate"* %192, i64 %167
  %194 = getelementptr inbounds %"struct.v8::HeapStatsUpdate", %"struct.v8::HeapStatsUpdate"* %192, i64 %191
  %195 = ptrtoint %"struct.v8::HeapStatsUpdate"* %194 to i64
  %196 = getelementptr inbounds %"struct.v8::HeapStatsUpdate", %"struct.v8::HeapStatsUpdate"* %193, i64 0, i32 0
  store i32 %149, i32* %196, align 4
  %197 = getelementptr inbounds %"struct.v8::HeapStatsUpdate", %"struct.v8::HeapStatsUpdate"* %192, i64 %167, i32 1
  store i32 %190, i32* %197, align 4
  %198 = getelementptr inbounds %"struct.v8::HeapStatsUpdate", %"struct.v8::HeapStatsUpdate"* %192, i64 %167, i32 2
  store i32 %189, i32* %198, align 4
  %199 = getelementptr inbounds %"struct.v8::HeapStatsUpdate", %"struct.v8::HeapStatsUpdate"* %193, i64 1
  %200 = ptrtoint %"struct.v8::HeapStatsUpdate"* %199 to i64
  %201 = sdiv exact i64 %166, -12
  %202 = getelementptr inbounds %"struct.v8::HeapStatsUpdate", %"struct.v8::HeapStatsUpdate"* %193, i64 %201
  %203 = ptrtoint %"struct.v8::HeapStatsUpdate"* %202 to i64
  %204 = icmp sgt i64 %166, 0
  br i1 %204, label %205, label %208

205:                                              ; preds = %188
  %206 = bitcast %"struct.v8::HeapStatsUpdate"* %202 to i8*
  %207 = inttoptr i64 %165 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %206, i8* align 4 %207, i64 %166, i1 false) #13
  br label %208

208:                                              ; preds = %205, %188
  store i64 %203, i64* %105, align 8
  store i64 %200, i64* %104, align 8
  store i64 %195, i64* %106, align 8
  %209 = icmp eq i64 %165, 0
  br i1 %209, label %212, label %210

210:                                              ; preds = %208
  %211 = inttoptr i64 %165 to i8*
  tail call void @_ZdlPv(i8* %211) #21
  br label %212

212:                                              ; preds = %155, %208, %210
  %213 = phi %"struct.v8::HeapStatsUpdate"* [ %162, %155 ], [ %202, %208 ], [ %202, %210 ]
  %214 = phi %"struct.v8::HeapStatsUpdate"* [ %159, %155 ], [ %199, %208 ], [ %199, %210 ]
  %215 = phi i64 [ %161, %155 ], [ %203, %208 ], [ %203, %210 ]
  %216 = phi i64 [ %160, %155 ], [ %200, %208 ], [ %200, %210 ]
  %217 = sub i64 %216, %215
  %218 = sdiv exact i64 %217, 12
  %219 = trunc i64 %218 to i32
  %220 = icmp sgt i32 %90, %219
  br i1 %220, label %229, label %221

221:                                              ; preds = %212
  %222 = load i32 (%"class.v8::OutputStream"*, %"struct.v8::HeapStatsUpdate"*, i32)**, i32 (%"class.v8::OutputStream"*, %"struct.v8::HeapStatsUpdate"*, i32)*** %107, align 8
  %223 = getelementptr inbounds i32 (%"class.v8::OutputStream"*, %"struct.v8::HeapStatsUpdate"*, i32)*, i32 (%"class.v8::OutputStream"*, %"struct.v8::HeapStatsUpdate"*, i32)** %222, i64 5
  %224 = load i32 (%"class.v8::OutputStream"*, %"struct.v8::HeapStatsUpdate"*, i32)*, i32 (%"class.v8::OutputStream"*, %"struct.v8::HeapStatsUpdate"*, i32)** %223, align 8
  %225 = tail call i32 %224(%"class.v8::OutputStream"* %1, %"struct.v8::HeapStatsUpdate"* %213, i32 %219) #13
  %226 = icmp eq i32 %225, 1
  br i1 %226, label %275, label %227

227:                                              ; preds = %221
  store i64 %215, i64* %104, align 8
  %228 = inttoptr i64 %215 to %"struct.v8::HeapStatsUpdate"*
  br label %229

229:                                              ; preds = %227, %212, %144
  %230 = phi %"struct.v8::HeapStatsUpdate"* [ %213, %227 ], [ %213, %212 ], [ %109, %144 ]
  %231 = phi i64 [ %215, %227 ], [ %215, %212 ], [ %110, %144 ]
  %232 = phi i64 [ %215, %227 ], [ %216, %212 ], [ %111, %144 ]
  %233 = phi %"struct.v8::HeapStatsUpdate"* [ %228, %227 ], [ %214, %212 ], [ %112, %144 ]
  %234 = phi %"struct.v8::HeapStatsUpdate"* [ %213, %227 ], [ %213, %212 ], [ %113, %144 ]
  %235 = add nuw i64 %116, 1
  %236 = load i64, i64* %85, align 8
  %237 = load i64, i64* %84, align 8
  %238 = sub i64 %236, %237
  %239 = sdiv exact i64 %238, 24
  %240 = icmp ult i64 %235, %239
  br i1 %240, label %108, label %241

241:                                              ; preds = %229
  %242 = getelementptr inbounds %"class.std::__1::vector.1290", %"class.std::__1::vector.1290"* %4, i64 0, i32 0, i32 0
  %243 = icmp eq %"struct.v8::HeapStatsUpdate"* %234, %233
  br i1 %243, label %254, label %244

244:                                              ; preds = %241
  %245 = sub i64 %232, %231
  %246 = sdiv exact i64 %245, 12
  %247 = trunc i64 %246 to i32
  %248 = bitcast %"class.v8::OutputStream"* %1 to i32 (%"class.v8::OutputStream"*, %"struct.v8::HeapStatsUpdate"*, i32)***
  %249 = load i32 (%"class.v8::OutputStream"*, %"struct.v8::HeapStatsUpdate"*, i32)**, i32 (%"class.v8::OutputStream"*, %"struct.v8::HeapStatsUpdate"*, i32)*** %248, align 8
  %250 = getelementptr inbounds i32 (%"class.v8::OutputStream"*, %"struct.v8::HeapStatsUpdate"*, i32)*, i32 (%"class.v8::OutputStream"*, %"struct.v8::HeapStatsUpdate"*, i32)** %249, i64 5
  %251 = load i32 (%"class.v8::OutputStream"*, %"struct.v8::HeapStatsUpdate"*, i32)*, i32 (%"class.v8::OutputStream"*, %"struct.v8::HeapStatsUpdate"*, i32)** %250, align 8
  %252 = tail call i32 %251(%"class.v8::OutputStream"* %1, %"struct.v8::HeapStatsUpdate"* %234, i32 %247) #13
  %253 = icmp eq i32 %252, 1
  br i1 %253, label %275, label %254

254:                                              ; preds = %97, %244, %241
  %255 = phi %"struct.v8::HeapStatsUpdate"** [ %98, %97 ], [ %242, %244 ], [ %242, %241 ]
  %256 = phi %"struct.v8::HeapStatsUpdate"* [ null, %97 ], [ %230, %244 ], [ %230, %241 ]
  %257 = bitcast %"class.v8::OutputStream"* %1 to void (%"class.v8::OutputStream"*)***
  %258 = load void (%"class.v8::OutputStream"*)**, void (%"class.v8::OutputStream"*)*** %257, align 8
  %259 = getelementptr inbounds void (%"class.v8::OutputStream"*)*, void (%"class.v8::OutputStream"*)** %258, i64 2
  %260 = load void (%"class.v8::OutputStream"*)*, void (%"class.v8::OutputStream"*)** %259, align 8
  tail call void %260(%"class.v8::OutputStream"* %1) #13
  %261 = icmp eq i64* %2, null
  br i1 %261, label %275, label %262

262:                                              ; preds = %254
  %263 = bitcast %"class.v8::base::TimeDelta"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %263) #13
  %264 = load %"struct.v8::internal::HeapObjectsMap::TimeInterval"*, %"struct.v8::internal::HeapObjectsMap::TimeInterval"** %8, align 8
  %265 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %6, i64 0, i32 0, i32 0
  %266 = load %"struct.v8::internal::HeapObjectsMap::TimeInterval"*, %"struct.v8::internal::HeapObjectsMap::TimeInterval"** %265, align 8
  %267 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::TimeInterval", %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %266, i64 0, i32 3, i32 0, i32 0
  %268 = load i64, i64* %267, align 8
  %269 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::TimeInterval", %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %264, i64 -1, i32 3, i32 0, i32 0
  %270 = load i64, i64* %269, align 8
  %271 = sub nsw i64 %270, %268
  %272 = getelementptr inbounds %"class.v8::base::TimeDelta", %"class.v8::base::TimeDelta"* %5, i64 0, i32 0
  store i64 %271, i64* %272, align 8
  %273 = call i64 @_ZNK2v84base9TimeDelta14InMicrosecondsEv(%"class.v8::base::TimeDelta"* nonnull %5) #13
  store i64 %273, i64* %2, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %263) #13
  %274 = load %"struct.v8::HeapStatsUpdate"*, %"struct.v8::HeapStatsUpdate"** %255, align 8
  br label %275

275:                                              ; preds = %221, %262, %254, %244
  %276 = phi %"struct.v8::HeapStatsUpdate"* [ %274, %262 ], [ %256, %254 ], [ %230, %244 ], [ %213, %221 ]
  %277 = load i32, i32* %7, align 8
  %278 = add i32 %277, -2
  %279 = icmp eq %"struct.v8::HeapStatsUpdate"* %276, null
  br i1 %279, label %285, label %280

280:                                              ; preds = %275
  %281 = ptrtoint %"struct.v8::HeapStatsUpdate"* %276 to i64
  %282 = getelementptr inbounds %"class.std::__1::vector.1290", %"class.std::__1::vector.1290"* %4, i64 0, i32 0, i32 1
  %283 = bitcast %"struct.v8::HeapStatsUpdate"** %282 to i64*
  store i64 %281, i64* %283, align 8
  %284 = bitcast %"struct.v8::HeapStatsUpdate"* %276 to i8*
  call void @_ZdlPv(i8* %284) #21
  br label %285

285:                                              ; preds = %275, %280
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #13
  ret i32 %278
}

declare i64 @_ZNK2v84base9TimeDelta14InMicrosecondsEv(%"class.v8::base::TimeDelta"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorerC2EPNS0_12HeapSnapshotEPNS0_38SnapshottingProgressReportingInterfaceEPNS_12HeapProfiler18ObjectNameResolverE(%"class.v8::internal::V8HeapExplorer"* nocapture, %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::SnapshottingProgressReportingInterface"*, %"class.v8::HeapProfiler::ObjectNameResolver"*) unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal14V8HeapExplorerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %1, i64 0, i32 0
  %8 = load %"class.v8::internal::HeapProfiler"*, %"class.v8::internal::HeapProfiler"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::HeapProfiler", %"class.v8::internal::HeapProfiler"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.v8::internal::HeapObjectsMap"*, %"class.v8::internal::HeapObjectsMap"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %10, i64 0, i32 5
  %12 = bitcast %"class.v8::internal::Heap"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.v8::internal::Heap"** %6 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 2
  store %"class.v8::internal::HeapSnapshot"* %1, %"class.v8::internal::HeapSnapshot"** %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 3
  %17 = load %"class.v8::internal::HeapProfiler"*, %"class.v8::internal::HeapProfiler"** %7, align 8
  %18 = getelementptr inbounds %"class.v8::internal::HeapProfiler", %"class.v8::internal::HeapProfiler"* %17, i64 0, i32 3, i32 0, i32 0, i32 0
  %19 = bitcast %"class.v8::internal::StringsStorage"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.v8::internal::StringsStorage"** %16 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 4
  %23 = load %"class.v8::internal::HeapProfiler"*, %"class.v8::internal::HeapProfiler"** %7, align 8
  %24 = getelementptr inbounds %"class.v8::internal::HeapProfiler", %"class.v8::internal::HeapProfiler"* %23, i64 0, i32 1, i32 0, i32 0, i32 0
  %25 = bitcast %"class.v8::internal::HeapObjectsMap"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.v8::internal::HeapObjectsMap"** %22 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 5
  store %"class.v8::internal::SnapshottingProgressReportingInterface"* %2, %"class.v8::internal::SnapshottingProgressReportingInterface"** %28, align 8
  %29 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 6
  %30 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 8, i32 0, i32 3
  %31 = bitcast %"class.std::__1::__compressed_pair.1357"* %30 to i32*
  %32 = bitcast %"class.v8::internal::HeapSnapshotGenerator"** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 64, i1 false)
  store i32 1065353216, i32* %31, align 4
  %33 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 9
  %34 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 9, i32 0, i32 3
  %35 = bitcast %"class.std::__1::__compressed_pair.1383"* %34 to i32*
  %36 = bitcast %"class.std::__1::unordered_map.1363"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %35, align 4
  %37 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 10
  %38 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 10, i32 0, i32 3
  %39 = bitcast %"class.std::__1::__compressed_pair.1408"* %38 to i32*
  %40 = bitcast %"class.std::__1::unordered_set.1389"* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %39, align 4
  %41 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 11
  store %"class.v8::HeapProfiler::ObjectNameResolver"* %3, %"class.v8::HeapProfiler::ObjectNameResolver"** %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 12
  %43 = bitcast %"class.std::__1::vector.1411"* %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer13AllocateEntryEPv(%"class.v8::internal::V8HeapExplorer"* readonly, i8*) unnamed_addr #2 align 2 {
  %3 = ptrtoint i8* %1 to i64
  %4 = tail call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8AddEntryENS0_10HeapObjectE(%"class.v8::internal::V8HeapExplorer"* %0, i64 %3)
  ret %"class.v8::internal::HeapEntry"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8AddEntryENS0_10HeapObjectE(%"class.v8::internal::V8HeapExplorer"* readonly, i64) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.v8::internal::HeapObject", align 8
  %4 = alloca %"class.v8::internal::HeapObject", align 8
  %5 = alloca %"class.v8::internal::HeapObject", align 8
  %6 = alloca %"class.v8::internal::HeapObject", align 8
  %7 = alloca %"class.v8::internal::HeapObject", align 8
  %8 = alloca %"class.v8::internal::HeapObject", align 8
  %9 = alloca %"class.v8::internal::HeapObject", align 8
  %10 = alloca %"class.v8::internal::HeapObject", align 8
  %11 = alloca %"class.v8::internal::HeapObject", align 8
  %12 = alloca %"class.v8::internal::HeapObject", align 8
  %13 = alloca %"class.v8::internal::HeapObject", align 8
  %14 = alloca %"class.v8::internal::HeapObject", align 8
  %15 = alloca %"class.v8::internal::HeapObject", align 8
  %16 = alloca %"class.v8::internal::HeapObject", align 8
  %17 = alloca %"class.v8::internal::HeapObject", align 8
  %18 = alloca %"class.v8::internal::HeapObject", align 8
  %19 = alloca %"class.v8::internal::HeapObject", align 8
  %20 = alloca %"class.v8::internal::HeapObject", align 8
  %21 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %22 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %23 = and i64 %1, -4294967296
  %24 = add i64 %1, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %23, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = add i16 %31, -1059
  %33 = icmp ult i16 %32, 15
  br i1 %33, label %34, label %54

34:                                               ; preds = %2
  %35 = bitcast %"class.v8::internal::SharedFunctionInfo"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #13
  %36 = add i64 %1, 11
  %37 = inttoptr i64 %36 to i32*
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = zext i32 %38 to i64
  %40 = or i64 %23, %39
  %41 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 3
  %43 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %42, align 8
  %44 = call i64 @_ZNK2v88internal18SharedFunctionInfo4NameEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %21)
  %45 = call i8* @_ZN2v88internal14StringsStorage7GetNameENS0_4NameE(%"class.v8::internal::StringsStorage"* %43, i64 %44) #13
  %46 = bitcast %"class.v8::internal::HeapObject"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46)
  %47 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %19, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %47, align 8
  %48 = load atomic i32, i32* %25 monotonic, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %23, %49
  %51 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %19, i64 %50) #13
  %52 = sext i32 %51 to i64
  %53 = call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8AddEntryEmNS0_9HeapEntry4TypeEPKcm(%"class.v8::internal::V8HeapExplorer"* %0, i64 %24, i32 5, i8* %45, i64 %52) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13
  br label %509

54:                                               ; preds = %2
  %55 = load atomic i32, i32* %25 monotonic, align 4
  %56 = zext i32 %55 to i64
  %57 = or i64 %23, %56
  %58 = add i64 %57, 7
  %59 = inttoptr i64 %58 to i16*
  %60 = load atomic i16, i16* %59 monotonic, align 2
  %61 = icmp eq i16 %60, 1058
  br i1 %61, label %62, label %71

62:                                               ; preds = %54
  %63 = bitcast %"class.v8::internal::HeapObject"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63)
  %64 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %18, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %64, align 8
  %65 = load atomic i32, i32* %25 monotonic, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %23, %66
  %68 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %18, i64 %67) #13
  %69 = sext i32 %68 to i64
  %70 = call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8AddEntryEmNS0_9HeapEntry4TypeEPKcm(%"class.v8::internal::V8HeapExplorer"* %0, i64 %24, i32 5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38, i64 0, i64 0), i64 %69) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63)
  br label %509

71:                                               ; preds = %54
  %72 = load atomic i32, i32* %25 monotonic, align 4
  %73 = zext i32 %72 to i64
  %74 = or i64 %23, %73
  %75 = add i64 %74, 7
  %76 = inttoptr i64 %75 to i16*
  %77 = load atomic i16, i16* %76 monotonic, align 2
  %78 = icmp eq i16 %77, 1102
  br i1 %78, label %79, label %101

79:                                               ; preds = %71
  %80 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 3
  %81 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %80, align 8
  %82 = add i64 %1, 11
  %83 = inttoptr i64 %82 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %23, %85
  %87 = add i64 %86, 11
  %88 = inttoptr i64 %87 to i32*
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = zext i32 %89 to i64
  %91 = or i64 %23, %90
  %92 = tail call i8* @_ZN2v88internal14StringsStorage7GetNameENS0_4NameE(%"class.v8::internal::StringsStorage"* %81, i64 %91) #13
  %93 = bitcast %"class.v8::internal::HeapObject"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93)
  %94 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %16, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %94, align 8
  %95 = load atomic i32, i32* %25 monotonic, align 4
  %96 = zext i32 %95 to i64
  %97 = or i64 %23, %96
  %98 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %16, i64 %97) #13
  %99 = sext i32 %98 to i64
  %100 = call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8AddEntryEmNS0_9HeapEntry4TypeEPKcm(%"class.v8::internal::V8HeapExplorer"* %0, i64 %24, i32 6, i8* %92, i64 %99) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93)
  br label %509

101:                                              ; preds = %71
  %102 = load atomic i32, i32* %25 monotonic, align 4
  %103 = zext i32 %102 to i64
  %104 = or i64 %23, %103
  %105 = add i64 %104, 7
  %106 = inttoptr i64 %105 to i16*
  %107 = load atomic i16, i16* %106 monotonic, align 2
  %108 = icmp ugt i16 %107, 188
  br i1 %108, label %109, label %209

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 3
  %111 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %110, align 8
  %112 = tail call i64 @_ZN2v88internal14V8HeapExplorer18GetConstructorNameENS0_8JSObjectE(i64 %1)
  %113 = tail call i8* @_ZN2v88internal14StringsStorage7GetNameENS0_4NameE(%"class.v8::internal::StringsStorage"* %111, i64 %112) #13
  %114 = load atomic i32, i32* %25 monotonic, align 4
  %115 = zext i32 %114 to i64
  %116 = or i64 %23, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load atomic i16, i16* %118 monotonic, align 2
  %120 = icmp eq i16 %119, 189
  br i1 %120, label %121, label %199

121:                                              ; preds = %109
  %122 = and i64 %1, 4294967295
  %123 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %124 = load i64, i64* %123, align 8
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %199, label %126

126:                                              ; preds = %121
  %127 = tail call i64 @llvm.ctpop.i64(i64 %124) #13, !range !3
  %128 = icmp ugt i64 %127, 1
  br i1 %128, label %132, label %129

129:                                              ; preds = %126
  %130 = add i64 %124, 4294967295
  %131 = and i64 %130, %122
  br label %136

132:                                              ; preds = %126
  %133 = icmp ult i64 %122, %124
  br i1 %133, label %136, label %134

134:                                              ; preds = %132
  %135 = urem i64 %122, %124
  br label %136

136:                                              ; preds = %134, %132, %129
  %137 = phi i64 [ %131, %129 ], [ %135, %134 ], [ %122, %132 ]
  %138 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load %"struct.std::__1::__hash_node_base.1342"**, %"struct.std::__1::__hash_node_base.1342"*** %138, align 8
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %139, i64 %137
  %141 = load %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %140, align 8
  %142 = icmp eq %"struct.std::__1::__hash_node_base.1342"* %141, null
  br i1 %142, label %199, label %143

143:                                              ; preds = %136
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %141, i64 0, i32 0
  %145 = load %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %144, align 8
  %146 = icmp eq %"struct.std::__1::__hash_node_base.1342"* %145, null
  br i1 %146, label %199, label %147

147:                                              ; preds = %143
  %148 = add i64 %124, -1
  %149 = trunc i64 %1 to i32
  br i1 %128, label %150, label %173

150:                                              ; preds = %147, %169
  %151 = phi %"struct.std::__1::__hash_node_base.1342"* [ %171, %169 ], [ %145, %147 ]
  %152 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %151, i64 1
  %153 = bitcast %"struct.std::__1::__hash_node_base.1342"* %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = icmp eq i64 %154, %122
  br i1 %155, label %163, label %156

156:                                              ; preds = %150
  %157 = icmp ult i64 %154, %124
  br i1 %157, label %160, label %158

158:                                              ; preds = %156
  %159 = urem i64 %154, %124
  br label %160

160:                                              ; preds = %158, %156
  %161 = phi i64 [ %159, %158 ], [ %154, %156 ]
  %162 = icmp eq i64 %161, %137
  br i1 %162, label %169, label %199

163:                                              ; preds = %150
  %164 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %151, i64 2
  %165 = bitcast %"struct.std::__1::__hash_node_base.1342"* %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = trunc i64 %166 to i32
  %168 = icmp eq i32 %167, %149
  br i1 %168, label %192, label %169

169:                                              ; preds = %163, %160
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %151, i64 0, i32 0
  %171 = load %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %170, align 8
  %172 = icmp eq %"struct.std::__1::__hash_node_base.1342"* %171, null
  br i1 %172, label %199, label %150

173:                                              ; preds = %147, %188
  %174 = phi %"struct.std::__1::__hash_node_base.1342"* [ %190, %188 ], [ %145, %147 ]
  %175 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %174, i64 1
  %176 = bitcast %"struct.std::__1::__hash_node_base.1342"* %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = icmp eq i64 %177, %122
  br i1 %178, label %182, label %179

179:                                              ; preds = %173
  %180 = and i64 %177, %148
  %181 = icmp eq i64 %180, %137
  br i1 %181, label %188, label %199

182:                                              ; preds = %173
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %174, i64 2
  %184 = bitcast %"struct.std::__1::__hash_node_base.1342"* %183 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = trunc i64 %185 to i32
  %187 = icmp eq i32 %186, %149
  br i1 %187, label %192, label %188

188:                                              ; preds = %182, %179
  %189 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %174, i64 0, i32 0
  %190 = load %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %189, align 8
  %191 = icmp eq %"struct.std::__1::__hash_node_base.1342"* %190, null
  br i1 %191, label %199, label %173

192:                                              ; preds = %182, %163
  %193 = phi %"struct.std::__1::__hash_node_base.1342"* [ %151, %163 ], [ %174, %182 ]
  %194 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %110, align 8
  %195 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %193, i64 3
  %196 = bitcast %"struct.std::__1::__hash_node_base.1342"* %195 to i8**
  %197 = load i8*, i8** %196, align 8
  %198 = tail call i8* (%"class.v8::internal::StringsStorage"*, i8*, ...) @_ZN2v88internal14StringsStorage12GetFormattedEPKcz(%"class.v8::internal::StringsStorage"* %194, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i8* %113, i8* %197) #13
  br label %199

199:                                              ; preds = %188, %179, %169, %160, %143, %121, %136, %192, %109
  %200 = phi i8* [ %113, %109 ], [ %198, %192 ], [ %113, %136 ], [ %113, %121 ], [ %113, %143 ], [ %113, %160 ], [ %113, %169 ], [ %113, %179 ], [ %113, %188 ]
  %201 = bitcast %"class.v8::internal::HeapObject"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %201)
  %202 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %11, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %202, align 8
  %203 = load atomic i32, i32* %25 monotonic, align 4
  %204 = zext i32 %203 to i64
  %205 = or i64 %23, %204
  %206 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %11, i64 %205) #13
  %207 = sext i32 %206 to i64
  %208 = call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8AddEntryEmNS0_9HeapEntry4TypeEPKcm(%"class.v8::internal::V8HeapExplorer"* %0, i64 %24, i32 3, i8* %200, i64 %207) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %201)
  br label %509

209:                                              ; preds = %101
  %210 = load atomic i32, i32* %25 monotonic, align 4
  %211 = zext i32 %210 to i64
  %212 = or i64 %23, %211
  %213 = add i64 %212, 7
  %214 = inttoptr i64 %213 to i16*
  %215 = load atomic i16, i16* %214 monotonic, align 2
  %216 = icmp ult i16 %215, 64
  %217 = load atomic i32, i32* %25 monotonic, align 4
  %218 = zext i32 %217 to i64
  %219 = or i64 %23, %218
  %220 = add i64 %219, 7
  %221 = inttoptr i64 %220 to i16*
  %222 = load atomic i16, i16* %221 monotonic, align 2
  br i1 %216, label %223, label %281

223:                                              ; preds = %209
  %224 = icmp ult i16 %222, 64
  br i1 %224, label %225, label %243

225:                                              ; preds = %223
  %226 = load atomic i32, i32* %25 monotonic, align 4
  %227 = zext i32 %226 to i64
  %228 = or i64 %23, %227
  %229 = add i64 %228, 7
  %230 = inttoptr i64 %229 to i16*
  %231 = load atomic i16, i16* %230 monotonic, align 2
  %232 = and i16 %231, 7
  %233 = icmp eq i16 %232, 1
  br i1 %233, label %234, label %243

234:                                              ; preds = %225
  %235 = bitcast %"class.v8::internal::HeapObject"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %235)
  %236 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %9, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %236, align 8
  %237 = load atomic i32, i32* %25 monotonic, align 4
  %238 = zext i32 %237 to i64
  %239 = or i64 %23, %238
  %240 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %9, i64 %239) #13
  %241 = sext i32 %240 to i64
  %242 = call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8AddEntryEmNS0_9HeapEntry4TypeEPKcm(%"class.v8::internal::V8HeapExplorer"* %0, i64 %24, i32 10, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.40, i64 0, i64 0), i64 %241) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %235)
  br label %509

243:                                              ; preds = %223, %225
  %244 = load atomic i32, i32* %25 monotonic, align 4
  %245 = zext i32 %244 to i64
  %246 = or i64 %23, %245
  %247 = add i64 %246, 7
  %248 = inttoptr i64 %247 to i16*
  %249 = load atomic i16, i16* %248 monotonic, align 2
  %250 = icmp ult i16 %249, 64
  br i1 %250, label %251, label %269

251:                                              ; preds = %243
  %252 = load atomic i32, i32* %25 monotonic, align 4
  %253 = zext i32 %252 to i64
  %254 = or i64 %23, %253
  %255 = add i64 %254, 7
  %256 = inttoptr i64 %255 to i16*
  %257 = load atomic i16, i16* %256 monotonic, align 2
  %258 = and i16 %257, 7
  %259 = icmp eq i16 %258, 3
  br i1 %259, label %260, label %269

260:                                              ; preds = %251
  %261 = bitcast %"class.v8::internal::HeapObject"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %261)
  %262 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %8, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %262, align 8
  %263 = load atomic i32, i32* %25 monotonic, align 4
  %264 = zext i32 %263 to i64
  %265 = or i64 %23, %264
  %266 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %8, i64 %265) #13
  %267 = sext i32 %266 to i64
  %268 = call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8AddEntryEmNS0_9HeapEntry4TypeEPKcm(%"class.v8::internal::V8HeapExplorer"* %0, i64 %24, i32 11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.41, i64 0, i64 0), i64 %267) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %261)
  br label %509

269:                                              ; preds = %243, %251
  %270 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 3
  %271 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %270, align 8
  %272 = tail call i8* @_ZN2v88internal14StringsStorage7GetNameENS0_4NameE(%"class.v8::internal::StringsStorage"* %271, i64 %1) #13
  %273 = bitcast %"class.v8::internal::HeapObject"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %273)
  %274 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %7, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %274, align 8
  %275 = load atomic i32, i32* %25 monotonic, align 4
  %276 = zext i32 %275 to i64
  %277 = or i64 %23, %276
  %278 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %7, i64 %277) #13
  %279 = sext i32 %278 to i64
  %280 = call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8AddEntryEmNS0_9HeapEntry4TypeEPKcm(%"class.v8::internal::V8HeapExplorer"* %0, i64 %24, i32 2, i8* %272, i64 %279) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %273)
  br label %509

281:                                              ; preds = %209
  %282 = icmp eq i16 %222, 64
  br i1 %282, label %283, label %310

283:                                              ; preds = %281
  %284 = add i64 %1, 7
  %285 = inttoptr i64 %284 to i32*
  %286 = load i32, i32* %285, align 4
  %287 = and i32 %286, 1
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %301, label %289

289:                                              ; preds = %283
  %290 = bitcast %"class.v8::internal::HeapObject"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %290)
  %291 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %6, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %291, align 8
  %292 = load i8, i8* @_ZN2v88internal38FLAG_heap_profiler_show_hidden_objectsE, align 1, !range !4
  %293 = icmp eq i8 %292, 0
  %294 = select i1 %293, i32 0, i32 8
  %295 = load atomic i32, i32* %25 monotonic, align 4
  %296 = zext i32 %295 to i64
  %297 = or i64 %23, %296
  %298 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %6, i64 %297) #13
  %299 = sext i32 %298 to i64
  %300 = call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8AddEntryEmNS0_9HeapEntry4TypeEPKcm(%"class.v8::internal::V8HeapExplorer"* %0, i64 %24, i32 %294, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i64 0, i64 0), i64 %299) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %290)
  br label %509

301:                                              ; preds = %283
  %302 = bitcast %"class.v8::internal::HeapObject"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %302)
  %303 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %5, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %303, align 8
  %304 = load atomic i32, i32* %25 monotonic, align 4
  %305 = zext i32 %304 to i64
  %306 = or i64 %23, %305
  %307 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %5, i64 %306) #13
  %308 = sext i32 %307 to i64
  %309 = call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8AddEntryEmNS0_9HeapEntry4TypeEPKcm(%"class.v8::internal::V8HeapExplorer"* %0, i64 %24, i32 12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.43, i64 0, i64 0), i64 %308) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %302)
  br label %509

310:                                              ; preds = %281
  %311 = load atomic i32, i32* %25 monotonic, align 4
  %312 = zext i32 %311 to i64
  %313 = or i64 %23, %312
  %314 = add i64 %313, 7
  %315 = inttoptr i64 %314 to i16*
  %316 = load atomic i16, i16* %315 monotonic, align 2
  %317 = icmp eq i16 %316, 65
  br i1 %317, label %318, label %327

318:                                              ; preds = %310
  %319 = bitcast %"class.v8::internal::HeapObject"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %319)
  %320 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %4, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %320, align 8
  %321 = load atomic i32, i32* %25 monotonic, align 4
  %322 = zext i32 %321 to i64
  %323 = or i64 %23, %322
  %324 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %4, i64 %323) #13
  %325 = sext i32 %324 to i64
  %326 = call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8AddEntryEmNS0_9HeapEntry4TypeEPKcm(%"class.v8::internal::V8HeapExplorer"* %0, i64 %24, i32 13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.44, i64 0, i64 0), i64 %325) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %319)
  br label %509

327:                                              ; preds = %310
  %328 = load atomic i32, i32* %25 monotonic, align 4
  %329 = zext i32 %328 to i64
  %330 = or i64 %23, %329
  %331 = add i64 %330, 7
  %332 = inttoptr i64 %331 to i16*
  %333 = load atomic i16, i16* %332 monotonic, align 2
  %334 = icmp eq i16 %333, 162
  br i1 %334, label %335, label %344

335:                                              ; preds = %327
  %336 = bitcast %"class.v8::internal::HeapObject"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %336)
  %337 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %337, align 8
  %338 = load atomic i32, i32* %25 monotonic, align 4
  %339 = zext i32 %338 to i64
  %340 = or i64 %23, %339
  %341 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %3, i64 %340) #13
  %342 = sext i32 %341 to i64
  %343 = call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8AddEntryEmNS0_9HeapEntry4TypeEPKcm(%"class.v8::internal::V8HeapExplorer"* %0, i64 %24, i32 4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i64 %342) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %336)
  br label %509

344:                                              ; preds = %327
  %345 = load atomic i32, i32* %25 monotonic, align 4
  %346 = zext i32 %345 to i64
  %347 = or i64 %23, %346
  %348 = add i64 %347, 7
  %349 = inttoptr i64 %348 to i16*
  %350 = load atomic i16, i16* %349 monotonic, align 2
  %351 = icmp eq i16 %350, 179
  br i1 %351, label %352, label %367

352:                                              ; preds = %344
  %353 = bitcast %"class.v8::internal::SharedFunctionInfo"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %353) #13
  %354 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %354, align 8
  %355 = call i64 @_ZNK2v88internal18SharedFunctionInfo4NameEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %22)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %353) #13
  %356 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 3
  %357 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %356, align 8
  %358 = call i8* @_ZN2v88internal14StringsStorage7GetNameENS0_4NameE(%"class.v8::internal::StringsStorage"* %357, i64 %355) #13
  %359 = bitcast %"class.v8::internal::HeapObject"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %359)
  %360 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %10, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %360, align 8
  %361 = load atomic i32, i32* %25 monotonic, align 4
  %362 = zext i32 %361 to i64
  %363 = or i64 %23, %362
  %364 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %10, i64 %363) #13
  %365 = sext i32 %364 to i64
  %366 = call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8AddEntryEmNS0_9HeapEntry4TypeEPKcm(%"class.v8::internal::V8HeapExplorer"* %0, i64 %24, i32 4, i8* %358, i64 %365) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %359)
  br label %509

367:                                              ; preds = %344
  %368 = load atomic i32, i32* %25 monotonic, align 4
  %369 = zext i32 %368 to i64
  %370 = or i64 %23, %369
  %371 = add i64 %370, 7
  %372 = inttoptr i64 %371 to i16*
  %373 = load atomic i16, i16* %372 monotonic, align 2
  %374 = icmp eq i16 %373, 112
  br i1 %374, label %375, label %407

375:                                              ; preds = %367
  %376 = add i64 %1, 7
  %377 = inttoptr i64 %376 to i32*
  %378 = load i32, i32* %377, align 4
  %379 = zext i32 %378 to i64
  %380 = or i64 %23, %379
  %381 = and i64 %379, 1
  %382 = icmp eq i64 %381, 0
  br i1 %382, label %397, label %383

383:                                              ; preds = %375
  %384 = add i64 %380, -1
  %385 = inttoptr i64 %384 to i32*
  %386 = load atomic i32, i32* %385 monotonic, align 4
  %387 = zext i32 %386 to i64
  %388 = or i64 %23, %387
  %389 = add i64 %388, 7
  %390 = inttoptr i64 %389 to i16*
  %391 = load atomic i16, i16* %390 monotonic, align 2
  %392 = icmp ult i16 %391, 64
  br i1 %392, label %393, label %397

393:                                              ; preds = %383
  %394 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 3
  %395 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %394, align 8
  %396 = tail call i8* @_ZN2v88internal14StringsStorage7GetNameENS0_4NameE(%"class.v8::internal::StringsStorage"* %395, i64 %380) #13
  br label %397

397:                                              ; preds = %375, %383, %393
  %398 = phi i8* [ %396, %393 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), %383 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), %375 ]
  %399 = bitcast %"class.v8::internal::HeapObject"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %399)
  %400 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %12, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %400, align 8
  %401 = load atomic i32, i32* %25 monotonic, align 4
  %402 = zext i32 %401 to i64
  %403 = or i64 %23, %402
  %404 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %12, i64 %403) #13
  %405 = sext i32 %404 to i64
  %406 = call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8AddEntryEmNS0_9HeapEntry4TypeEPKcm(%"class.v8::internal::V8HeapExplorer"* %0, i64 %24, i32 4, i8* %398, i64 %405) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %399)
  br label %509

407:                                              ; preds = %367
  %408 = load atomic i32, i32* %25 monotonic, align 4
  %409 = zext i32 %408 to i64
  %410 = or i64 %23, %409
  %411 = add i64 %410, 7
  %412 = inttoptr i64 %411 to i16*
  %413 = load atomic i16, i16* %412 monotonic, align 2
  %414 = icmp eq i16 %413, 144
  br i1 %414, label %415, label %427

415:                                              ; preds = %407
  %416 = bitcast %"class.v8::internal::HeapObject"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %416)
  %417 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %13, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %417, align 8
  %418 = load i8, i8* @_ZN2v88internal38FLAG_heap_profiler_show_hidden_objectsE, align 1, !range !4
  %419 = icmp eq i8 %418, 0
  %420 = select i1 %419, i32 0, i32 8
  %421 = load atomic i32, i32* %25 monotonic, align 4
  %422 = zext i32 %421 to i64
  %423 = or i64 %23, %422
  %424 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %13, i64 %423) #13
  %425 = sext i32 %424 to i64
  %426 = call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8AddEntryEmNS0_9HeapEntry4TypeEPKcm(%"class.v8::internal::V8HeapExplorer"* %0, i64 %24, i32 %420, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.45, i64 0, i64 0), i64 %425) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %416)
  br label %509

427:                                              ; preds = %407
  %428 = load atomic i32, i32* %25 monotonic, align 4
  %429 = zext i32 %428 to i64
  %430 = or i64 %23, %429
  %431 = add i64 %430, 7
  %432 = inttoptr i64 %431 to i16*
  %433 = load atomic i16, i16* %432 monotonic, align 2
  %434 = add i16 %433, -137
  %435 = icmp ult i16 %434, 10
  br i1 %435, label %436, label %445

436:                                              ; preds = %427
  %437 = bitcast %"class.v8::internal::HeapObject"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %437)
  %438 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %14, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %438, align 8
  %439 = load atomic i32, i32* %25 monotonic, align 4
  %440 = zext i32 %439 to i64
  %441 = or i64 %23, %440
  %442 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %14, i64 %441) #13
  %443 = sext i32 %442 to i64
  %444 = call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8AddEntryEmNS0_9HeapEntry4TypeEPKcm(%"class.v8::internal::V8HeapExplorer"* %0, i64 %24, i32 3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.46, i64 0, i64 0), i64 %443) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %437)
  br label %509

445:                                              ; preds = %427
  %446 = load atomic i32, i32* %25 monotonic, align 4
  %447 = zext i32 %446 to i64
  %448 = or i64 %23, %447
  %449 = add i64 %448, 7
  %450 = inttoptr i64 %449 to i16*
  %451 = load atomic i16, i16* %450 monotonic, align 2
  %452 = add i16 %451, -119
  %453 = icmp ult i16 %452, 13
  br i1 %453, label %470, label %454

454:                                              ; preds = %445
  %455 = load atomic i32, i32* %25 monotonic, align 4
  %456 = zext i32 %455 to i64
  %457 = or i64 %23, %456
  %458 = add i64 %457, 7
  %459 = inttoptr i64 %458 to i16*
  %460 = load atomic i16, i16* %459 monotonic, align 2
  %461 = icmp eq i16 %460, 134
  br i1 %461, label %470, label %462

462:                                              ; preds = %454
  %463 = load atomic i32, i32* %25 monotonic, align 4
  %464 = zext i32 %463 to i64
  %465 = or i64 %23, %464
  %466 = add i64 %465, 7
  %467 = inttoptr i64 %466 to i16*
  %468 = load atomic i16, i16* %467 monotonic, align 2
  %469 = icmp eq i16 %468, 132
  br i1 %469, label %470, label %479

470:                                              ; preds = %462, %454, %445
  %471 = bitcast %"class.v8::internal::HeapObject"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %471)
  %472 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %15, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %472, align 8
  %473 = load atomic i32, i32* %25 monotonic, align 4
  %474 = zext i32 %473 to i64
  %475 = or i64 %23, %474
  %476 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %15, i64 %475) #13
  %477 = sext i32 %476 to i64
  %478 = call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8AddEntryEmNS0_9HeapEntry4TypeEPKcm(%"class.v8::internal::V8HeapExplorer"* %0, i64 %24, i32 1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i64 %477) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %471)
  br label %509

479:                                              ; preds = %462
  %480 = load atomic i32, i32* %25 monotonic, align 4
  %481 = zext i32 %480 to i64
  %482 = or i64 %23, %481
  %483 = add i64 %482, 7
  %484 = inttoptr i64 %483 to i16*
  %485 = load atomic i16, i16* %484 monotonic, align 2
  %486 = icmp eq i16 %485, 66
  br i1 %486, label %487, label %496

487:                                              ; preds = %479
  %488 = bitcast %"class.v8::internal::HeapObject"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %488)
  %489 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %17, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %489, align 8
  %490 = load atomic i32, i32* %25 monotonic, align 4
  %491 = zext i32 %490 to i64
  %492 = or i64 %23, %491
  %493 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %17, i64 %492) #13
  %494 = sext i32 %493 to i64
  %495 = call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8AddEntryEmNS0_9HeapEntry4TypeEPKcm(%"class.v8::internal::V8HeapExplorer"* %0, i64 %24, i32 7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47, i64 0, i64 0), i64 %494) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %488)
  br label %509

496:                                              ; preds = %479
  %497 = tail call i8* @_ZN2v88internal14V8HeapExplorer18GetSystemEntryNameENS0_10HeapObjectE(%"class.v8::internal::V8HeapExplorer"* undef, i64 %1)
  %498 = bitcast %"class.v8::internal::HeapObject"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %498)
  %499 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %20, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %499, align 8
  %500 = load i8, i8* @_ZN2v88internal38FLAG_heap_profiler_show_hidden_objectsE, align 1, !range !4
  %501 = icmp eq i8 %500, 0
  %502 = select i1 %501, i32 0, i32 8
  %503 = load atomic i32, i32* %25 monotonic, align 4
  %504 = zext i32 %503 to i64
  %505 = or i64 %23, %504
  %506 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %20, i64 %505) #13
  %507 = sext i32 %506 to i64
  %508 = call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8AddEntryEmNS0_9HeapEntry4TypeEPKcm(%"class.v8::internal::V8HeapExplorer"* %0, i64 %24, i32 %502, i8* %497, i64 %507) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %498)
  br label %509

509:                                              ; preds = %234, %260, %269, %496, %487, %470, %436, %415, %397, %352, %335, %318, %301, %289, %199, %79, %62, %34
  %510 = phi %"class.v8::internal::HeapEntry"* [ %53, %34 ], [ %70, %62 ], [ %100, %79 ], [ %208, %199 ], [ %300, %289 ], [ %309, %301 ], [ %326, %318 ], [ %343, %335 ], [ %366, %352 ], [ %406, %397 ], [ %426, %415 ], [ %444, %436 ], [ %478, %470 ], [ %495, %487 ], [ %508, %496 ], [ %242, %234 ], [ %268, %260 ], [ %280, %269 ]
  ret %"class.v8::internal::HeapEntry"* %510
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer13AllocateEntryENS0_3SmiE(%"class.v8::internal::V8HeapExplorer"* nocapture readonly, i64) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 4
  %4 = load %"class.v8::internal::HeapObjectsMap"*, %"class.v8::internal::HeapObjectsMap"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, 2
  store i32 %7, i32* %5, align 8
  %8 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 2
  %9 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %8, align 8
  %10 = ptrtoint %"class.v8::internal::HeapSnapshot"* %9 to i64
  %11 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %9, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = trunc i64 %12 to i32
  %14 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %9, i64 0, i32 4, i32 0, i32 0, i32 2
  %15 = bitcast %"class.v8::internal::HeapEntry"*** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %9, i64 0, i32 4, i32 0, i32 0, i32 1
  %18 = bitcast %"class.v8::internal::HeapEntry"*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %16, %19
  %21 = ashr exact i64 %20, 3
  %22 = icmp eq i64 %20, 0
  %23 = mul i64 %21, 102
  %24 = add i64 %23, -1
  %25 = select i1 %22, i64 0, i64 %24
  %26 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %9, i64 0, i32 4, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, %12
  %29 = icmp eq i64 %25, %28
  %30 = inttoptr i64 %19 to %"class.v8::internal::HeapEntry"**
  %31 = inttoptr i64 %16 to %"class.v8::internal::HeapEntry"**
  br i1 %29, label %32, label %39

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %9, i64 0, i32 4
  tail call void @_ZNSt3__15dequeIN2v88internal9HeapEntryENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %33) #13
  %34 = load i64, i64* %11, align 8
  %35 = load i64, i64* %26, align 8
  %36 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %17, align 8
  %37 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %14, align 8
  %38 = add i64 %35, %34
  br label %39

39:                                               ; preds = %32, %2
  %40 = phi i64 [ %38, %32 ], [ %28, %2 ]
  %41 = phi %"class.v8::internal::HeapEntry"** [ %37, %32 ], [ %31, %2 ]
  %42 = phi %"class.v8::internal::HeapEntry"** [ %36, %32 ], [ %30, %2 ]
  %43 = icmp eq %"class.v8::internal::HeapEntry"** %41, %42
  br i1 %43, label %50, label %44

44:                                               ; preds = %39
  %45 = udiv i64 %40, 102
  %46 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %42, i64 %45
  %47 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %46, align 8
  %48 = urem i64 %40, 102
  %49 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %47, i64 %48
  br label %50

50:                                               ; preds = %39, %44
  %51 = phi %"class.v8::internal::HeapEntry"* [ %49, %44 ], [ null, %39 ]
  %52 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %51, i64 0, i32 0
  %53 = shl i32 %13, 4
  %54 = or i32 %53, 7
  store i32 %54, i32* %52, align 8
  %55 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %51, i64 0, i32 1, i32 0
  store i32 0, i32* %55, align 4
  %56 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %51, i64 0, i32 2
  %57 = bitcast [6 x i8]* %56 to i48*
  store i48 0, i48* %57, align 8
  %58 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %51, i64 0, i32 3
  store i8 0, i8* %58, align 2
  %59 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %51, i64 0, i32 4
  %60 = bitcast %"class.v8::internal::HeapSnapshot"** %59 to i64*
  store i64 %10, i64* %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %51, i64 0, i32 5
  %62 = bitcast i8** %61 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.37 to i64), i64* %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %51, i64 0, i32 6
  store i32 %6, i32* %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %51, i64 0, i32 7
  store i32 0, i32* %64, align 4
  %65 = load i64, i64* %11, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %11, align 8
  %67 = load i64, i64* %26, align 8
  %68 = add i64 %67, %65
  %69 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %17, align 8
  %70 = udiv i64 %68, 102
  %71 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %69, i64 %70
  %72 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %71, align 8
  %73 = urem i64 %68, 102
  %74 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %72, i64 %73
  tail call void @_ZN2v88internal14V8HeapExplorer22ExtractNumberReferenceEPNS0_9HeapEntryENS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %74, i64 %1)
  ret %"class.v8::internal::HeapEntry"* %74
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer22ExtractNumberReferenceEPNS0_9HeapEntryENS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"* nocapture readonly, %"class.v8::internal::HeapEntry"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = alloca [32 x i8], align 16
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #13
  %6 = and i64 %2, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %3
  %9 = trunc i64 %2 to i32
  %10 = ashr i32 %9, 1
  %11 = call i8* @_ZN2v88internal12IntToCStringEiNS0_6VectorIcEE(i32 %10, i8* nonnull %5, i64 32) #13
  br label %17

12:                                               ; preds = %3
  %13 = add i64 %2, 3
  %14 = inttoptr i64 %13 to double*
  %15 = load double, double* %14, align 1
  %16 = call i8* @_ZN2v88internal15DoubleToCStringEdNS0_6VectorIcEE(double %15, i8* nonnull %5, i64 32) #13
  br label %17

17:                                               ; preds = %12, %8
  %18 = phi i8* [ %11, %8 ], [ %16, %12 ]
  %19 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 3
  %20 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %19, align 8
  %21 = call i8* @_ZN2v88internal14StringsStorage7GetCopyEPKc(%"class.v8::internal::StringsStorage"* %20, i8* %18) #13
  %22 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 4
  %23 = load %"class.v8::internal::HeapObjectsMap"*, %"class.v8::internal::HeapObjectsMap"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %23, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = add i32 %25, 2
  store i32 %26, i32* %24, align 8
  %27 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 2
  %28 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %27, align 8
  %29 = ptrtoint i8* %21 to i64
  %30 = ptrtoint %"class.v8::internal::HeapSnapshot"* %28 to i64
  %31 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %28, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = trunc i64 %32 to i32
  %34 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %28, i64 0, i32 4, i32 0, i32 0, i32 2
  %35 = bitcast %"class.v8::internal::HeapEntry"*** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %28, i64 0, i32 4, i32 0, i32 0, i32 1
  %38 = bitcast %"class.v8::internal::HeapEntry"*** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %36, %39
  %41 = ashr exact i64 %40, 3
  %42 = icmp eq i64 %40, 0
  %43 = mul i64 %41, 102
  %44 = add i64 %43, -1
  %45 = select i1 %42, i64 0, i64 %44
  %46 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %28, i64 0, i32 4, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, %32
  %49 = icmp eq i64 %45, %48
  %50 = inttoptr i64 %39 to %"class.v8::internal::HeapEntry"**
  %51 = inttoptr i64 %36 to %"class.v8::internal::HeapEntry"**
  br i1 %49, label %52, label %59

52:                                               ; preds = %17
  %53 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %28, i64 0, i32 4
  call void @_ZNSt3__15dequeIN2v88internal9HeapEntryENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %53) #13
  %54 = load i64, i64* %31, align 8
  %55 = load i64, i64* %46, align 8
  %56 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %37, align 8
  %57 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %34, align 8
  %58 = add i64 %55, %54
  br label %59

59:                                               ; preds = %52, %17
  %60 = phi i64 [ %58, %52 ], [ %48, %17 ]
  %61 = phi %"class.v8::internal::HeapEntry"** [ %57, %52 ], [ %51, %17 ]
  %62 = phi %"class.v8::internal::HeapEntry"** [ %56, %52 ], [ %50, %17 ]
  %63 = icmp eq %"class.v8::internal::HeapEntry"** %61, %62
  br i1 %63, label %70, label %64

64:                                               ; preds = %59
  %65 = udiv i64 %60, 102
  %66 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %62, i64 %65
  %67 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %66, align 8
  %68 = urem i64 %60, 102
  %69 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %67, i64 %68
  br label %70

70:                                               ; preds = %59, %64
  %71 = phi %"class.v8::internal::HeapEntry"* [ %69, %64 ], [ null, %59 ]
  %72 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %71, i64 0, i32 0
  %73 = shl i32 %33, 4
  %74 = or i32 %73, 2
  store i32 %74, i32* %72, align 8
  %75 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %71, i64 0, i32 1, i32 0
  store i32 0, i32* %75, align 4
  %76 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %71, i64 0, i32 2
  %77 = bitcast [6 x i8]* %76 to i48*
  store i48 0, i48* %77, align 8
  %78 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %71, i64 0, i32 3
  store i8 0, i8* %78, align 2
  %79 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %71, i64 0, i32 4
  %80 = bitcast %"class.v8::internal::HeapSnapshot"** %79 to i64*
  store i64 %30, i64* %80, align 8
  %81 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %71, i64 0, i32 5
  %82 = bitcast i8** %81 to i64*
  store i64 %29, i64* %82, align 8
  %83 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %71, i64 0, i32 6
  store i32 %25, i32* %83, align 8
  %84 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %71, i64 0, i32 7
  store i32 0, i32* %84, align 4
  %85 = load i64, i64* %31, align 8
  %86 = add i64 %85, 1
  store i64 %86, i64* %31, align 8
  %87 = load i64, i64* %46, align 8
  %88 = add i64 %87, %85
  %89 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %37, align 8
  %90 = udiv i64 %88, 102
  %91 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %89, i64 %90
  %92 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %91, align 8
  %93 = urem i64 %88, 102
  %94 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %92, i64 %93
  %95 = ptrtoint %"class.v8::internal::HeapEntry"* %94 to i64
  %96 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 1, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = add i32 %97, 1
  store i32 %98, i32* %96, align 4
  %99 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 4
  %100 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %99, align 8
  %101 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %100, i64 0, i32 5, i32 0, i32 0, i32 2
  %102 = bitcast %"class.v8::internal::HeapGraphEdge"*** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %100, i64 0, i32 5, i32 0, i32 0, i32 1
  %105 = bitcast %"class.v8::internal::HeapGraphEdge"*** %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = sub i64 %103, %106
  %108 = ashr exact i64 %107, 3
  %109 = icmp eq i64 %107, 0
  %110 = mul i64 %108, 170
  %111 = add i64 %110, -1
  %112 = select i1 %109, i64 0, i64 %111
  %113 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %100, i64 0, i32 5, i32 0, i32 1
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %100, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %116 = load i64, i64* %115, align 8
  %117 = add i64 %116, %114
  %118 = icmp eq i64 %112, %117
  %119 = inttoptr i64 %106 to %"class.v8::internal::HeapGraphEdge"**
  %120 = inttoptr i64 %103 to %"class.v8::internal::HeapGraphEdge"**
  br i1 %118, label %121, label %128

121:                                              ; preds = %70
  %122 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %100, i64 0, i32 5
  call void @_ZNSt3__15dequeIN2v88internal13HeapGraphEdgeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.758"* %122) #13
  %123 = load i64, i64* %115, align 8
  %124 = load i64, i64* %113, align 8
  %125 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %104, align 8
  %126 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %101, align 8
  %127 = add i64 %124, %123
  br label %128

128:                                              ; preds = %121, %70
  %129 = phi i64 [ %127, %121 ], [ %117, %70 ]
  %130 = phi %"class.v8::internal::HeapGraphEdge"** [ %126, %121 ], [ %120, %70 ]
  %131 = phi %"class.v8::internal::HeapGraphEdge"** [ %125, %121 ], [ %119, %70 ]
  %132 = icmp eq %"class.v8::internal::HeapGraphEdge"** %130, %131
  br i1 %132, label %139, label %133

133:                                              ; preds = %128
  %134 = udiv i64 %129, 170
  %135 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %131, i64 %134
  %136 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %135, align 8
  %137 = urem i64 %129, 170
  %138 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %136, i64 %137
  br label %139

139:                                              ; preds = %128, %133
  %140 = phi %"class.v8::internal::HeapGraphEdge"* [ %138, %133 ], [ null, %128 ]
  %141 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %140, i64 0, i32 0
  %142 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 0
  %143 = load i32, i32* %142, align 8
  %144 = lshr i32 %143, 4
  %145 = shl nuw nsw i32 %144, 3
  %146 = or i32 %145, 3
  store i32 %146, i32* %141, align 8
  %147 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %140, i64 0, i32 1
  %148 = bitcast %"class.v8::internal::HeapEntry"** %147 to i64*
  store i64 %95, i64* %148, align 8
  %149 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %140, i64 0, i32 2, i32 0
  %150 = bitcast i8** %149 to i64*
  store i64 ptrtoint ([6 x i8]* @.str.347 to i64), i64* %150, align 8
  %151 = load i64, i64* %115, align 8
  %152 = add i64 %151, 1
  store i64 %152, i64* %115, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer15ExtractLocationEPNS0_9HeapEntryENS0_10HeapObjectE(%"class.v8::internal::V8HeapExplorer"* nocapture readonly, %"class.v8::internal::HeapEntry"* nocapture readonly, i64) local_unnamed_addr #2 align 2 {
  %4 = and i64 %2, -4294967296
  %5 = add i64 %2, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = add i16 %12, -1059
  %14 = icmp ult i16 %13, 15
  br i1 %14, label %15, label %16

15:                                               ; preds = %3
  tail call void @_ZN2v88internal14V8HeapExplorer28ExtractLocationForJSFunctionEPNS0_9HeapEntryENS0_10JSFunctionE(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i64 %2)
  br label %44

16:                                               ; preds = %3
  %17 = load atomic i32, i32* %6 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %4, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = add i16 %22, -1052
  %24 = icmp ult i16 %23, 3
  br i1 %24, label %25, label %31

25:                                               ; preds = %16
  %26 = add i64 %2, 11
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %4, %29
  tail call void @_ZN2v88internal14V8HeapExplorer28ExtractLocationForJSFunctionEPNS0_9HeapEntryENS0_10JSFunctionE(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i64 %30)
  br label %44

31:                                               ; preds = %16
  %32 = load atomic i32, i32* %6 monotonic, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %4, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = icmp ugt i16 %37, 188
  br i1 %38, label %39, label %44

39:                                               ; preds = %31
  %40 = tail call i64 @_ZN2v88internal14V8HeapExplorer14GetConstructorENS0_10JSReceiverE(i64 %2)
  %41 = trunc i64 %40 to i32
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %39
  tail call void @_ZN2v88internal14V8HeapExplorer28ExtractLocationForJSFunctionEPNS0_9HeapEntryENS0_10JSFunctionE(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i64 %40)
  br label %44

44:                                               ; preds = %39, %43, %25, %31, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer28ExtractLocationForJSFunctionEPNS0_9HeapEntryENS0_10JSFunctionE(%"class.v8::internal::V8HeapExplorer"* nocapture readonly, %"class.v8::internal::HeapEntry"* nocapture readonly, i64) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.v8::internal::Script", align 8
  %5 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %6 = alloca %"struct.v8::internal::Script::PositionInfo", align 4
  %7 = add i64 %2, 11
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i64 %2, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = add i64 %12, 15
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 acquire, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %10, %16
  %18 = add i64 %17, -1
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %10, %21
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = icmp eq i16 %25, 100
  br i1 %26, label %27, label %35

27:                                               ; preds = %3
  %28 = add i64 %17, 11
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %10, %31
  %33 = add i64 %32, -1
  %34 = inttoptr i64 %33 to i32*
  br label %35

35:                                               ; preds = %3, %27
  %36 = phi i32* [ %19, %3 ], [ %34, %27 ]
  %37 = phi i64 [ %17, %3 ], [ %32, %27 ]
  %38 = and i64 %37, -4294967296
  %39 = load atomic i32, i32* %36 monotonic, align 4
  %40 = zext i32 %39 to i64
  %41 = or i64 %38, %40
  %42 = add i64 %41, 7
  %43 = inttoptr i64 %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = icmp eq i16 %44, 112
  br i1 %45, label %46, label %92

46:                                               ; preds = %35
  %47 = bitcast %"class.v8::internal::Script"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #13
  %48 = load atomic i32, i32* %8 monotonic, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %10, %49
  %51 = add i64 %50, 15
  %52 = inttoptr i64 %51 to i32*
  %53 = load atomic i32, i32* %52 acquire, align 4
  %54 = zext i32 %53 to i64
  %55 = or i64 %10, %54
  %56 = add i64 %55, -1
  %57 = inttoptr i64 %56 to i32*
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %10, %59
  %61 = add i64 %60, 7
  %62 = inttoptr i64 %61 to i16*
  %63 = load atomic i16, i16* %62 monotonic, align 2
  %64 = icmp eq i16 %63, 100
  br i1 %64, label %65, label %71

65:                                               ; preds = %46
  %66 = add i64 %55, 11
  %67 = inttoptr i64 %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %10, %69
  br label %71

71:                                               ; preds = %46, %65
  %72 = phi i64 [ %70, %65 ], [ %55, %46 ]
  %73 = getelementptr inbounds %"class.v8::internal::Script", %"class.v8::internal::Script"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %72, i64* %73, align 8
  %74 = add i64 %72, 31
  %75 = inttoptr i64 %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = ashr i32 %76, 1
  %78 = bitcast %"class.v8::internal::SharedFunctionInfo"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #13
  %79 = load atomic i32, i32* %8 monotonic, align 4
  %80 = zext i32 %79 to i64
  %81 = or i64 %10, %80
  %82 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %81, i64* %82, align 8
  %83 = call i32 @_ZNK2v88internal18SharedFunctionInfo13StartPositionEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #13
  %84 = bitcast %"struct.v8::internal::Script::PositionInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %84, i8 -1, i64 16, i1 false) #13
  %85 = call zeroext i1 @_ZNK2v88internal6Script15GetPositionInfoEiPNS1_12PositionInfoENS1_10OffsetFlagE(%"class.v8::internal::Script"* nonnull %4, i32 %83, %"struct.v8::internal::Script::PositionInfo"* nonnull %6, i32 1) #13
  %86 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 2
  %87 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %86, align 8
  %88 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %6, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %6, i64 0, i32 1
  %91 = load i32, i32* %90, align 4
  call void @_ZN2v88internal12HeapSnapshot11AddLocationEPNS0_9HeapEntryEiii(%"class.v8::internal::HeapSnapshot"* %87, %"class.v8::internal::HeapEntry"* %1, i32 %77, i32 %89, i32 %91)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #13
  br label %92

92:                                               ; preds = %35, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal14V8HeapExplorer14GetConstructorENS0_10JSReceiverE(i64) local_unnamed_addr #2 align 2 {
  %2 = and i64 %0, -262144
  %3 = or i64 %2, 16
  %4 = inttoptr i64 %3 to i64*
  %5 = load i64, i64* %4, align 16
  %6 = add i64 %5, -41416
  %7 = inttoptr i64 %6 to %"class.v8::internal::Isolate"*
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 31
  %9 = bitcast %"struct.v8::internal::HandleScopeData"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 31, i32 1
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 31, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %13, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 31, i32 4
  %17 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %16, align 8
  %18 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %17, null
  %19 = inttoptr i64 %10 to i64*
  br i1 %18, label %22, label %20

20:                                               ; preds = %1
  %21 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %17, i64 %0) #13
  br label %32

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 31, i32 0
  %24 = icmp eq i64* %12, %19
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %7) #13
  br label %27

27:                                               ; preds = %25, %22
  %28 = phi i64* [ %26, %25 ], [ %19, %22 ]
  %29 = ptrtoint i64* %28 to i64
  %30 = add i64 %29, 8
  %31 = inttoptr i64 %30 to i64*
  store i64* %31, i64** %23, align 8
  store i64 %0, i64* %28, align 8
  br label %32

32:                                               ; preds = %20, %27
  %33 = phi i64* [ %21, %20 ], [ %28, %27 ]
  %34 = tail call i64* @_ZN2v88internal10JSReceiver14GetConstructorENS0_6HandleIS1_EE(i64* %33) #13
  %35 = icmp eq i64* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  %37 = load i64, i64* %34, align 8
  br label %38

38:                                               ; preds = %32, %36
  %39 = phi i64 [ %37, %36 ], [ 0, %32 ]
  %40 = icmp eq i64 %6, 0
  br i1 %40, label %53, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %8, i64 0, i32 0
  %43 = load i64*, i64** %42, align 8
  store i64 %10, i64* %9, align 8
  %44 = load i32, i32* %13, align 8
  %45 = add nsw i32 %44, -1
  store i32 %45, i32* %13, align 8
  %46 = load i64*, i64** %11, align 8
  %47 = icmp eq i64* %46, %12
  br i1 %47, label %50, label %48

48:                                               ; preds = %41
  store i64* %12, i64** %11, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %7) #13
  %49 = load i64*, i64** %42, align 8
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i64* [ %49, %48 ], [ %19, %41 ]
  %52 = phi i64* [ %12, %48 ], [ %43, %41 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %51, i64* %52) #13
  br label %53

53:                                               ; preds = %38, %50
  ret i64 %39
}

declare i32 @_ZNK2v88internal18SharedFunctionInfo13StartPositionEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v88internal6Script15GetPositionInfoEiPNS1_12PositionInfoENS1_10OffsetFlagE(%"class.v8::internal::Script"*, i32, %"struct.v8::internal::Script::PositionInfo"*, i32) local_unnamed_addr #4

declare i8* @_ZN2v88internal14StringsStorage7GetNameENS0_4NameE(%"class.v8::internal::StringsStorage"*, i64) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK2v88internal18SharedFunctionInfo4NameEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #7 comdat align 2 {
  %2 = alloca %"class.v8::internal::ScopeInfo", align 8
  %3 = alloca %"class.v8::internal::ScopeInfo", align 8
  %4 = alloca %"class.v8::internal::ScopeInfo", align 8
  %5 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, 7
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 acquire, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = and i64 %11, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %29, label %15

15:                                               ; preds = %1
  %16 = add i64 %12, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %7, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = icmp eq i16 %23, 178
  br i1 %24, label %25, label %29

25:                                               ; preds = %15
  %26 = bitcast %"class.v8::internal::ScopeInfo"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #13
  %27 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %12, i64* %27, align 8
  %28 = call zeroext i1 @_ZNK2v88internal9ScopeInfo21HasSharedFunctionNameEv(%"class.v8::internal::ScopeInfo"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #13
  br i1 %28, label %53, label %31

29:                                               ; preds = %1, %15
  %30 = icmp eq i32 %10, 0
  br i1 %30, label %31, label %53

31:                                               ; preds = %29, %25
  %32 = load i64, i64* %5, align 8
  %33 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %34 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %33, i64 0, i32 0, i32 1
  %37 = load i8, i8* %36, align 8, !range !4
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %33, i64 0, i32 1, i64 0
  br label %49

41:                                               ; preds = %35, %31
  %42 = and i64 %32, -262144
  %43 = or i64 %42, 16
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 16
  %46 = add i64 %45, -41416
  %47 = inttoptr i64 %46 to %"class.v8::internal::Isolate"*
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %47, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %49

49:                                               ; preds = %39, %41
  %50 = phi i64* [ %48, %41 ], [ %40, %39 ]
  %51 = getelementptr inbounds i64, i64* %50, i64 9
  %52 = load i64, i64* %51, align 8
  br label %103

53:                                               ; preds = %29, %25
  %54 = load i64, i64* %5, align 8
  %55 = and i64 %54, -4294967296
  %56 = add i64 %54, 7
  %57 = inttoptr i64 %56 to i32*
  %58 = load atomic i32, i32* %57 acquire, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %55, %59
  %61 = and i64 %59, 1
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %103, label %63

63:                                               ; preds = %53
  %64 = add i64 %60, -1
  %65 = inttoptr i64 %64 to i32*
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = zext i32 %66 to i64
  %68 = or i64 %55, %67
  %69 = add i64 %68, 7
  %70 = inttoptr i64 %69 to i16*
  %71 = load atomic i16, i16* %70 monotonic, align 2
  %72 = icmp eq i16 %71, 178
  br i1 %72, label %73, label %103

73:                                               ; preds = %63
  %74 = bitcast %"class.v8::internal::ScopeInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #13
  %75 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %60, i64* %75, align 8
  %76 = call zeroext i1 @_ZNK2v88internal9ScopeInfo15HasFunctionNameEv(%"class.v8::internal::ScopeInfo"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #13
  br i1 %76, label %77, label %81

77:                                               ; preds = %73
  %78 = bitcast %"class.v8::internal::ScopeInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #13
  %79 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %60, i64* %79, align 8
  %80 = call i64 @_ZNK2v88internal9ScopeInfo12FunctionNameEv(%"class.v8::internal::ScopeInfo"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #13
  br label %103

81:                                               ; preds = %73
  %82 = load i64, i64* %5, align 8
  %83 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %84 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %83, null
  br i1 %84, label %91, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %83, i64 0, i32 0, i32 1
  %87 = load i8, i8* %86, align 8, !range !4
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %91, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %83, i64 0, i32 1, i64 0
  br label %99

91:                                               ; preds = %85, %81
  %92 = and i64 %82, -262144
  %93 = or i64 %92, 16
  %94 = inttoptr i64 %93 to i64*
  %95 = load i64, i64* %94, align 16
  %96 = add i64 %95, -41416
  %97 = inttoptr i64 %96 to %"class.v8::internal::Isolate"*
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %99

99:                                               ; preds = %89, %91
  %100 = phi i64* [ %98, %91 ], [ %90, %89 ]
  %101 = getelementptr inbounds i64, i64* %100, i64 9
  %102 = load i64, i64* %101, align 8
  br label %103

103:                                              ; preds = %53, %77, %99, %63, %49
  %104 = phi i64 [ %52, %49 ], [ %80, %77 ], [ %102, %99 ], [ %60, %63 ], [ %60, %53 ]
  ret i64 %104
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8AddEntryENS0_10HeapObjectENS0_9HeapEntry4TypeEPKc(%"class.v8::internal::V8HeapExplorer"* nocapture readonly, i64, i32, i8*) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.v8::internal::HeapObject", align 8
  %6 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %5, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %6, align 8
  %7 = load i8, i8* @_ZN2v88internal38FLAG_heap_profiler_show_hidden_objectsE, align 1, !range !4
  %8 = icmp ne i8 %7, 0
  %9 = icmp eq i32 %2, 0
  %10 = and i1 %9, %8
  %11 = select i1 %10, i32 8, i32 %2
  %12 = add i64 %1, -1
  %13 = and i64 %1, -4294967296
  %14 = inttoptr i64 %12 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %13, %16
  %18 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %5, i64 %17) #13
  %19 = sext i32 %18 to i64
  %20 = call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8AddEntryEmNS0_9HeapEntry4TypeEPKcm(%"class.v8::internal::V8HeapExplorer"* %0, i64 %12, i32 %11, i8* %3, i64 %19)
  ret %"class.v8::internal::HeapEntry"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal14V8HeapExplorer18GetConstructorNameENS0_8JSObjectE(i64) local_unnamed_addr #2 align 2 {
  %2 = and i64 %0, -262144
  %3 = or i64 %2, 16
  %4 = inttoptr i64 %3 to i64*
  %5 = load i64, i64* %4, align 16
  %6 = add i64 %5, -41416
  %7 = inttoptr i64 %6 to %"class.v8::internal::Isolate"*
  %8 = and i64 %0, -4294967296
  %9 = add i64 %0, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = add i16 %16, -1059
  %18 = icmp ult i16 %17, 15
  br i1 %18, label %19, label %22

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 290
  %21 = load i64, i64* %20, align 8
  br label %64

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 31
  %24 = bitcast %"struct.v8::internal::HandleScopeData"* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 31, i32 1
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 31, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %28, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 31, i32 4
  %32 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %31, align 8
  %33 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %32, null
  %34 = inttoptr i64 %25 to i64*
  br i1 %33, label %37, label %35

35:                                               ; preds = %22
  %36 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %32, i64 %0) #13
  br label %47

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 31, i32 0
  %39 = icmp eq i64* %27, %34
  br i1 %39, label %40, label %42

40:                                               ; preds = %37
  %41 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %7) #13
  br label %42

42:                                               ; preds = %40, %37
  %43 = phi i64* [ %41, %40 ], [ %34, %37 ]
  %44 = ptrtoint i64* %43 to i64
  %45 = add i64 %44, 8
  %46 = inttoptr i64 %45 to i64*
  store i64* %46, i64** %38, align 8
  store i64 %0, i64* %43, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64* [ %36, %35 ], [ %43, %42 ]
  %49 = tail call i64* @_ZN2v88internal10JSReceiver18GetConstructorNameENS0_6HandleIS1_EE(i64* %48) #13
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %6, 0
  br i1 %51, label %64, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %23, i64 0, i32 0
  %54 = load i64*, i64** %53, align 8
  store i64 %25, i64* %24, align 8
  %55 = load i32, i32* %28, align 8
  %56 = add nsw i32 %55, -1
  store i32 %56, i32* %28, align 8
  %57 = load i64*, i64** %26, align 8
  %58 = icmp eq i64* %57, %27
  br i1 %58, label %61, label %59

59:                                               ; preds = %52
  store i64* %27, i64** %26, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %7) #13
  %60 = load i64*, i64** %53, align 8
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i64* [ %60, %59 ], [ %34, %52 ]
  %63 = phi i64* [ %27, %59 ], [ %54, %52 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %62, i64* %63) #13
  br label %64

64:                                               ; preds = %61, %47, %19
  %65 = phi i64 [ %21, %19 ], [ %50, %47 ], [ %50, %61 ]
  ret i64 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal14V8HeapExplorer18GetSystemEntryNameENS0_10HeapObjectE(%"class.v8::internal::V8HeapExplorer"* nocapture readnone, i64) local_unnamed_addr #2 align 2 {
  %3 = and i64 %1, -4294967296
  %4 = add i64 %1, -1
  %5 = inttoptr i64 %4 to i32*
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = zext i32 %6 to i64
  %8 = or i64 %3, %7
  %9 = add i64 %8, 7
  %10 = inttoptr i64 %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = icmp eq i16 %11, 172
  br i1 %12, label %13, label %35

13:                                               ; preds = %2
  %14 = add i64 %1, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  switch i16 %16, label %34 [
    i16 32, label %266
    i16 40, label %17
    i16 33, label %18
    i16 41, label %19
    i16 35, label %20
    i16 43, label %21
    i16 34, label %22
    i16 42, label %23
    i16 50, label %24
    i16 58, label %25
    i16 0, label %26
    i16 8, label %27
    i16 2, label %28
    i16 10, label %29
    i16 18, label %30
    i16 26, label %31
    i16 37, label %32
    i16 45, label %33
  ]

17:                                               ; preds = %13
  br label %266

18:                                               ; preds = %13
  br label %266

19:                                               ; preds = %13
  br label %266

20:                                               ; preds = %13
  br label %266

21:                                               ; preds = %13
  br label %266

22:                                               ; preds = %13
  br label %266

23:                                               ; preds = %13
  br label %266

24:                                               ; preds = %13
  br label %266

25:                                               ; preds = %13
  br label %266

26:                                               ; preds = %13
  br label %266

27:                                               ; preds = %13
  br label %266

28:                                               ; preds = %13
  br label %266

29:                                               ; preds = %13
  br label %266

30:                                               ; preds = %13
  br label %266

31:                                               ; preds = %13
  br label %266

32:                                               ; preds = %13
  br label %266

33:                                               ; preds = %13
  br label %266

34:                                               ; preds = %13
  br label %266

35:                                               ; preds = %2
  %36 = load atomic i32, i32* %5 monotonic, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %3, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i16*
  %41 = load atomic i16, i16* %40 monotonic, align 2
  switch i16 %41, label %265 [
    i16 64, label %266
    i16 65, label %42
    i16 66, label %43
    i16 67, label %44
    i16 68, label %45
    i16 69, label %46
    i16 72, label %47
    i16 73, label %48
    i16 74, label %49
    i16 75, label %50
    i16 76, label %51
    i16 77, label %52
    i16 78, label %53
    i16 79, label %54
    i16 80, label %55
    i16 83, label %56
    i16 84, label %57
    i16 85, label %58
    i16 86, label %59
    i16 87, label %60
    i16 88, label %61
    i16 89, label %62
    i16 91, label %63
    i16 92, label %64
    i16 93, label %65
    i16 94, label %66
    i16 95, label %67
    i16 96, label %68
    i16 97, label %69
    i16 98, label %70
    i16 99, label %71
    i16 100, label %72
    i16 101, label %73
    i16 102, label %74
    i16 103, label %75
    i16 104, label %76
    i16 105, label %77
    i16 106, label %78
    i16 107, label %79
    i16 108, label %80
    i16 109, label %81
    i16 110, label %82
    i16 111, label %83
    i16 112, label %84
    i16 113, label %85
    i16 114, label %86
    i16 115, label %87
    i16 116, label %88
    i16 117, label %89
    i16 118, label %90
    i16 132, label %91
    i16 133, label %92
    i16 134, label %93
    i16 135, label %94
    i16 136, label %95
    i16 148, label %96
    i16 149, label %97
    i16 150, label %98
    i16 151, label %99
    i16 152, label %100
    i16 154, label %101
    i16 155, label %102
    i16 156, label %103
    i16 157, label %104
    i16 158, label %105
    i16 161, label %106
    i16 164, label %107
    i16 165, label %108
    i16 167, label %109
    i16 169, label %110
    i16 170, label %111
    i16 171, label %112
    i16 172, label %113
    i16 173, label %114
    i16 174, label %115
    i16 175, label %116
    i16 176, label %117
    i16 177, label %118
    i16 178, label %119
    i16 179, label %120
    i16 180, label %121
    i16 181, label %122
    i16 182, label %123
    i16 183, label %124
    i16 184, label %125
    i16 185, label %126
    i16 186, label %127
    i16 187, label %128
    i16 188, label %129
    i16 189, label %130
    i16 190, label %131
    i16 191, label %132
    i16 1041, label %133
    i16 1053, label %134
    i16 1054, label %135
    i16 1055, label %136
    i16 1058, label %137
    i16 1079, label %138
    i16 1080, label %139
    i16 1081, label %140
    i16 1082, label %141
    i16 1083, label %142
    i16 1084, label %143
    i16 1085, label %144
    i16 1086, label %145
    i16 1087, label %146
    i16 1088, label %147
    i16 1089, label %148
    i16 1091, label %149
    i16 1092, label %150
    i16 1093, label %151
    i16 1095, label %152
    i16 1096, label %153
    i16 1097, label %154
    i16 1098, label %155
    i16 1099, label %156
    i16 1100, label %157
    i16 1101, label %158
    i16 1102, label %159
    i16 1103, label %160
    i16 1104, label %161
    i16 1105, label %162
    i16 1106, label %163
    i16 1107, label %164
    i16 1108, label %165
    i16 1109, label %166
    i16 1110, label %167
    i16 1111, label %168
    i16 1112, label %169
    i16 1114, label %170
    i16 1115, label %171
    i16 1116, label %172
    i16 70, label %173
    i16 71, label %174
    i16 119, label %175
    i16 147, label %176
    i16 153, label %177
    i16 159, label %178
    i16 1057, label %179
    i16 1052, label %180
    i16 1059, label %181
    i16 81, label %182
    i16 82, label %183
    i16 90, label %184
    i16 121, label %185
    i16 122, label %186
    i16 123, label %187
    i16 124, label %188
    i16 125, label %189
    i16 126, label %190
    i16 127, label %191
    i16 128, label %192
    i16 129, label %193
    i16 130, label %194
    i16 131, label %195
    i16 137, label %196
    i16 138, label %197
    i16 139, label %198
    i16 140, label %199
    i16 141, label %200
    i16 142, label %201
    i16 143, label %202
    i16 144, label %203
    i16 145, label %204
    i16 146, label %205
    i16 160, label %206
    i16 162, label %207
    i16 163, label %208
    i16 166, label %209
    i16 168, label %210
    i16 1040, label %211
    i16 1042, label %212
    i16 1043, label %213
    i16 1044, label %214
    i16 1045, label %215
    i16 1046, label %216
    i16 1047, label %217
    i16 1048, label %218
    i16 1049, label %219
    i16 1050, label %220
    i16 1051, label %221
    i16 1056, label %222
    i16 1060, label %223
    i16 1061, label %224
    i16 1062, label %225
    i16 1063, label %226
    i16 1064, label %227
    i16 1065, label %228
    i16 1066, label %229
    i16 1067, label %230
    i16 1068, label %231
    i16 1069, label %232
    i16 1070, label %233
    i16 1071, label %234
    i16 1072, label %235
    i16 1073, label %236
    i16 1074, label %237
    i16 1075, label %238
    i16 1076, label %239
    i16 1077, label %240
    i16 1078, label %241
    i16 1090, label %242
    i16 1094, label %243
    i16 1113, label %244
    i16 1117, label %245
    i16 120, label %246
    i16 32, label %247
    i16 40, label %248
    i16 33, label %249
    i16 41, label %250
    i16 35, label %251
    i16 43, label %252
    i16 34, label %253
    i16 42, label %254
    i16 50, label %255
    i16 58, label %256
    i16 0, label %257
    i16 8, label %258
    i16 2, label %259
    i16 10, label %260
    i16 18, label %261
    i16 26, label %262
    i16 37, label %263
    i16 45, label %264
  ]

42:                                               ; preds = %35
  br label %266

43:                                               ; preds = %35
  br label %266

44:                                               ; preds = %35
  br label %266

45:                                               ; preds = %35
  br label %266

46:                                               ; preds = %35
  br label %266

47:                                               ; preds = %35
  br label %266

48:                                               ; preds = %35
  br label %266

49:                                               ; preds = %35
  br label %266

50:                                               ; preds = %35
  br label %266

51:                                               ; preds = %35
  br label %266

52:                                               ; preds = %35
  br label %266

53:                                               ; preds = %35
  br label %266

54:                                               ; preds = %35
  br label %266

55:                                               ; preds = %35
  br label %266

56:                                               ; preds = %35
  br label %266

57:                                               ; preds = %35
  br label %266

58:                                               ; preds = %35
  br label %266

59:                                               ; preds = %35
  br label %266

60:                                               ; preds = %35
  br label %266

61:                                               ; preds = %35
  br label %266

62:                                               ; preds = %35
  br label %266

63:                                               ; preds = %35
  br label %266

64:                                               ; preds = %35
  br label %266

65:                                               ; preds = %35
  br label %266

66:                                               ; preds = %35
  br label %266

67:                                               ; preds = %35
  br label %266

68:                                               ; preds = %35
  br label %266

69:                                               ; preds = %35
  br label %266

70:                                               ; preds = %35
  br label %266

71:                                               ; preds = %35
  br label %266

72:                                               ; preds = %35
  br label %266

73:                                               ; preds = %35
  br label %266

74:                                               ; preds = %35
  br label %266

75:                                               ; preds = %35
  br label %266

76:                                               ; preds = %35
  br label %266

77:                                               ; preds = %35
  br label %266

78:                                               ; preds = %35
  br label %266

79:                                               ; preds = %35
  br label %266

80:                                               ; preds = %35
  br label %266

81:                                               ; preds = %35
  br label %266

82:                                               ; preds = %35
  br label %266

83:                                               ; preds = %35
  br label %266

84:                                               ; preds = %35
  br label %266

85:                                               ; preds = %35
  br label %266

86:                                               ; preds = %35
  br label %266

87:                                               ; preds = %35
  br label %266

88:                                               ; preds = %35
  br label %266

89:                                               ; preds = %35
  br label %266

90:                                               ; preds = %35
  br label %266

91:                                               ; preds = %35
  br label %266

92:                                               ; preds = %35
  br label %266

93:                                               ; preds = %35
  br label %266

94:                                               ; preds = %35
  br label %266

95:                                               ; preds = %35
  br label %266

96:                                               ; preds = %35
  br label %266

97:                                               ; preds = %35
  br label %266

98:                                               ; preds = %35
  br label %266

99:                                               ; preds = %35
  br label %266

100:                                              ; preds = %35
  br label %266

101:                                              ; preds = %35
  br label %266

102:                                              ; preds = %35
  br label %266

103:                                              ; preds = %35
  br label %266

104:                                              ; preds = %35
  br label %266

105:                                              ; preds = %35
  br label %266

106:                                              ; preds = %35
  br label %266

107:                                              ; preds = %35
  br label %266

108:                                              ; preds = %35
  br label %266

109:                                              ; preds = %35
  br label %266

110:                                              ; preds = %35
  br label %266

111:                                              ; preds = %35
  br label %266

112:                                              ; preds = %35
  br label %266

113:                                              ; preds = %35
  br label %266

114:                                              ; preds = %35
  br label %266

115:                                              ; preds = %35
  br label %266

116:                                              ; preds = %35
  br label %266

117:                                              ; preds = %35
  br label %266

118:                                              ; preds = %35
  br label %266

119:                                              ; preds = %35
  br label %266

120:                                              ; preds = %35
  br label %266

121:                                              ; preds = %35
  br label %266

122:                                              ; preds = %35
  br label %266

123:                                              ; preds = %35
  br label %266

124:                                              ; preds = %35
  br label %266

125:                                              ; preds = %35
  br label %266

126:                                              ; preds = %35
  br label %266

127:                                              ; preds = %35
  br label %266

128:                                              ; preds = %35
  br label %266

129:                                              ; preds = %35
  br label %266

130:                                              ; preds = %35
  br label %266

131:                                              ; preds = %35
  br label %266

132:                                              ; preds = %35
  br label %266

133:                                              ; preds = %35
  br label %266

134:                                              ; preds = %35
  br label %266

135:                                              ; preds = %35
  br label %266

136:                                              ; preds = %35
  br label %266

137:                                              ; preds = %35
  br label %266

138:                                              ; preds = %35
  br label %266

139:                                              ; preds = %35
  br label %266

140:                                              ; preds = %35
  br label %266

141:                                              ; preds = %35
  br label %266

142:                                              ; preds = %35
  br label %266

143:                                              ; preds = %35
  br label %266

144:                                              ; preds = %35
  br label %266

145:                                              ; preds = %35
  br label %266

146:                                              ; preds = %35
  br label %266

147:                                              ; preds = %35
  br label %266

148:                                              ; preds = %35
  br label %266

149:                                              ; preds = %35
  br label %266

150:                                              ; preds = %35
  br label %266

151:                                              ; preds = %35
  br label %266

152:                                              ; preds = %35
  br label %266

153:                                              ; preds = %35
  br label %266

154:                                              ; preds = %35
  br label %266

155:                                              ; preds = %35
  br label %266

156:                                              ; preds = %35
  br label %266

157:                                              ; preds = %35
  br label %266

158:                                              ; preds = %35
  br label %266

159:                                              ; preds = %35
  br label %266

160:                                              ; preds = %35
  br label %266

161:                                              ; preds = %35
  br label %266

162:                                              ; preds = %35
  br label %266

163:                                              ; preds = %35
  br label %266

164:                                              ; preds = %35
  br label %266

165:                                              ; preds = %35
  br label %266

166:                                              ; preds = %35
  br label %266

167:                                              ; preds = %35
  br label %266

168:                                              ; preds = %35
  br label %266

169:                                              ; preds = %35
  br label %266

170:                                              ; preds = %35
  br label %266

171:                                              ; preds = %35
  br label %266

172:                                              ; preds = %35
  br label %266

173:                                              ; preds = %35
  br label %266

174:                                              ; preds = %35
  br label %266

175:                                              ; preds = %35
  br label %266

176:                                              ; preds = %35
  br label %266

177:                                              ; preds = %35
  br label %266

178:                                              ; preds = %35
  br label %266

179:                                              ; preds = %35
  br label %266

180:                                              ; preds = %35
  br label %266

181:                                              ; preds = %35
  br label %266

182:                                              ; preds = %35
  br label %266

183:                                              ; preds = %35
  br label %266

184:                                              ; preds = %35
  br label %266

185:                                              ; preds = %35
  br label %266

186:                                              ; preds = %35
  br label %266

187:                                              ; preds = %35
  br label %266

188:                                              ; preds = %35
  br label %266

189:                                              ; preds = %35
  br label %266

190:                                              ; preds = %35
  br label %266

191:                                              ; preds = %35
  br label %266

192:                                              ; preds = %35
  br label %266

193:                                              ; preds = %35
  br label %266

194:                                              ; preds = %35
  br label %266

195:                                              ; preds = %35
  br label %266

196:                                              ; preds = %35
  br label %266

197:                                              ; preds = %35
  br label %266

198:                                              ; preds = %35
  br label %266

199:                                              ; preds = %35
  br label %266

200:                                              ; preds = %35
  br label %266

201:                                              ; preds = %35
  br label %266

202:                                              ; preds = %35
  br label %266

203:                                              ; preds = %35
  br label %266

204:                                              ; preds = %35
  br label %266

205:                                              ; preds = %35
  br label %266

206:                                              ; preds = %35
  br label %266

207:                                              ; preds = %35
  br label %266

208:                                              ; preds = %35
  br label %266

209:                                              ; preds = %35
  br label %266

210:                                              ; preds = %35
  br label %266

211:                                              ; preds = %35
  br label %266

212:                                              ; preds = %35
  br label %266

213:                                              ; preds = %35
  br label %266

214:                                              ; preds = %35
  br label %266

215:                                              ; preds = %35
  br label %266

216:                                              ; preds = %35
  br label %266

217:                                              ; preds = %35
  br label %266

218:                                              ; preds = %35
  br label %266

219:                                              ; preds = %35
  br label %266

220:                                              ; preds = %35
  br label %266

221:                                              ; preds = %35
  br label %266

222:                                              ; preds = %35
  br label %266

223:                                              ; preds = %35
  br label %266

224:                                              ; preds = %35
  br label %266

225:                                              ; preds = %35
  br label %266

226:                                              ; preds = %35
  br label %266

227:                                              ; preds = %35
  br label %266

228:                                              ; preds = %35
  br label %266

229:                                              ; preds = %35
  br label %266

230:                                              ; preds = %35
  br label %266

231:                                              ; preds = %35
  br label %266

232:                                              ; preds = %35
  br label %266

233:                                              ; preds = %35
  br label %266

234:                                              ; preds = %35
  br label %266

235:                                              ; preds = %35
  br label %266

236:                                              ; preds = %35
  br label %266

237:                                              ; preds = %35
  br label %266

238:                                              ; preds = %35
  br label %266

239:                                              ; preds = %35
  br label %266

240:                                              ; preds = %35
  br label %266

241:                                              ; preds = %35
  br label %266

242:                                              ; preds = %35
  br label %266

243:                                              ; preds = %35
  br label %266

244:                                              ; preds = %35
  br label %266

245:                                              ; preds = %35
  br label %266

246:                                              ; preds = %35
  br label %266

247:                                              ; preds = %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.271, i64 0, i64 0)) #20
  unreachable

248:                                              ; preds = %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.271, i64 0, i64 0)) #20
  unreachable

249:                                              ; preds = %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.271, i64 0, i64 0)) #20
  unreachable

250:                                              ; preds = %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.271, i64 0, i64 0)) #20
  unreachable

251:                                              ; preds = %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.271, i64 0, i64 0)) #20
  unreachable

252:                                              ; preds = %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.271, i64 0, i64 0)) #20
  unreachable

253:                                              ; preds = %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.271, i64 0, i64 0)) #20
  unreachable

254:                                              ; preds = %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.271, i64 0, i64 0)) #20
  unreachable

255:                                              ; preds = %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.271, i64 0, i64 0)) #20
  unreachable

256:                                              ; preds = %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.271, i64 0, i64 0)) #20
  unreachable

257:                                              ; preds = %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.271, i64 0, i64 0)) #20
  unreachable

258:                                              ; preds = %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.271, i64 0, i64 0)) #20
  unreachable

259:                                              ; preds = %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.271, i64 0, i64 0)) #20
  unreachable

260:                                              ; preds = %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.271, i64 0, i64 0)) #20
  unreachable

261:                                              ; preds = %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.271, i64 0, i64 0)) #20
  unreachable

262:                                              ; preds = %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.271, i64 0, i64 0)) #20
  unreachable

263:                                              ; preds = %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.271, i64 0, i64 0)) #20
  unreachable

264:                                              ; preds = %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.271, i64 0, i64 0)) #20
  unreachable

265:                                              ; preds = %35
  unreachable

266:                                              ; preds = %35, %13, %246, %245, %244, %243, %242, %241, %240, %239, %238, %237, %236, %235, %234, %233, %232, %231, %230, %229, %228, %227, %226, %225, %224, %223, %222, %221, %220, %219, %218, %217, %216, %215, %214, %213, %212, %211, %210, %209, %208, %207, %206, %205, %204, %203, %202, %201, %200, %199, %198, %197, %196, %195, %194, %193, %192, %191, %190, %189, %188, %187, %186, %185, %184, %183, %182, %181, %180, %179, %178, %177, %176, %175, %174, %173, %172, %171, %170, %169, %168, %167, %166, %165, %164, %163, %162, %161, %160, %159, %158, %157, %156, %155, %154, %153, %152, %151, %150, %149, %148, %147, %146, %145, %144, %143, %142, %141, %140, %139, %138, %137, %136, %135, %134, %133, %132, %131, %130, %129, %128, %127, %126, %125, %124, %123, %122, %121, %120, %119, %118, %117, %116, %115, %114, %113, %112, %111, %110, %109, %108, %107, %106, %105, %104, %103, %102, %101, %100, %99, %98, %97, %96, %95, %94, %93, %92, %91, %90, %89, %88, %87, %86, %85, %84, %83, %82, %81, %80, %79, %78, %77, %76, %75, %74, %73, %72, %71, %70, %69, %68, %67, %66, %65, %64, %63, %62, %61, %60, %59, %58, %57, %56, %55, %54, %53, %52, %51, %50, %49, %48, %47, %46, %45, %44, %43, %42, %34, %33, %32, %31, %30, %29, %28, %27, %26, %25, %24, %23, %22, %21, %20, %19, %18, %17
  %267 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.66, i64 0, i64 0), %34 ], [ getelementptr inbounds ([33 x i8], [33 x i8]* @.str.65, i64 0, i64 0), %33 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.64, i64 0, i64 0), %32 ], [ getelementptr inbounds ([57 x i8], [57 x i8]* @.str.63, i64 0, i64 0), %31 ], [ getelementptr inbounds ([50 x i8], [50 x i8]* @.str.62, i64 0, i64 0), %30 ], [ getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i64 0, i64 0), %29 ], [ getelementptr inbounds ([42 x i8], [42 x i8]* @.str.60, i64 0, i64 0), %28 ], [ getelementptr inbounds ([41 x i8], [41 x i8]* @.str.59, i64 0, i64 0), %27 ], [ getelementptr inbounds ([34 x i8], [34 x i8]* @.str.58, i64 0, i64 0), %26 ], [ getelementptr inbounds ([45 x i8], [45 x i8]* @.str.57, i64 0, i64 0), %25 ], [ getelementptr inbounds ([38 x i8], [38 x i8]* @.str.56, i64 0, i64 0), %24 ], [ getelementptr inbounds ([37 x i8], [37 x i8]* @.str.55, i64 0, i64 0), %23 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.54, i64 0, i64 0), %22 ], [ getelementptr inbounds ([35 x i8], [35 x i8]* @.str.53, i64 0, i64 0), %21 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.52, i64 0, i64 0), %20 ], [ getelementptr inbounds ([33 x i8], [33 x i8]* @.str.51, i64 0, i64 0), %19 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.50, i64 0, i64 0), %18 ], [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.49, i64 0, i64 0), %17 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.270, i64 0, i64 0), %246 ], [ getelementptr inbounds ([25 x i8], [25 x i8]* @.str.269, i64 0, i64 0), %245 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.268, i64 0, i64 0), %244 ], [ getelementptr inbounds ([17 x i8], [17 x i8]* @.str.267, i64 0, i64 0), %243 ], [ getelementptr inbounds ([34 x i8], [34 x i8]* @.str.266, i64 0, i64 0), %242 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.265, i64 0, i64 0), %241 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.264, i64 0, i64 0), %240 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.263, i64 0, i64 0), %239 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.262, i64 0, i64 0), %238 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.261, i64 0, i64 0), %237 ], [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.260, i64 0, i64 0), %236 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.259, i64 0, i64 0), %235 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.258, i64 0, i64 0), %234 ], [ getelementptr inbounds ([36 x i8], [36 x i8]* @.str.257, i64 0, i64 0), %233 ], [ getelementptr inbounds ([43 x i8], [43 x i8]* @.str.256, i64 0, i64 0), %232 ], [ getelementptr inbounds ([37 x i8], [37 x i8]* @.str.255, i64 0, i64 0), %231 ], [ getelementptr inbounds ([37 x i8], [37 x i8]* @.str.254, i64 0, i64 0), %230 ], [ getelementptr inbounds ([35 x i8], [35 x i8]* @.str.253, i64 0, i64 0), %229 ], [ getelementptr inbounds ([36 x i8], [36 x i8]* @.str.252, i64 0, i64 0), %228 ], [ getelementptr inbounds ([36 x i8], [36 x i8]* @.str.251, i64 0, i64 0), %227 ], [ getelementptr inbounds ([38 x i8], [38 x i8]* @.str.250, i64 0, i64 0), %226 ], [ getelementptr inbounds ([38 x i8], [38 x i8]* @.str.249, i64 0, i64 0), %225 ], [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str.248, i64 0, i64 0), %224 ], [ getelementptr inbounds ([39 x i8], [39 x i8]* @.str.247, i64 0, i64 0), %223 ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @.str.246, i64 0, i64 0), %222 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.245, i64 0, i64 0), %221 ], [ getelementptr inbounds ([35 x i8], [35 x i8]* @.str.244, i64 0, i64 0), %220 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.243, i64 0, i64 0), %219 ], [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str.242, i64 0, i64 0), %218 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.241, i64 0, i64 0), %217 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.240, i64 0, i64 0), %216 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.239, i64 0, i64 0), %215 ], [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str.238, i64 0, i64 0), %214 ], [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.237, i64 0, i64 0), %213 ], [ getelementptr inbounds ([34 x i8], [34 x i8]* @.str.236, i64 0, i64 0), %212 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.235, i64 0, i64 0), %211 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @.str.234, i64 0, i64 0), %210 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.233, i64 0, i64 0), %209 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.232, i64 0, i64 0), %208 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.231, i64 0, i64 0), %207 ], [ getelementptr inbounds ([25 x i8], [25 x i8]* @.str.230, i64 0, i64 0), %206 ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @.str.229, i64 0, i64 0), %205 ], [ getelementptr inbounds ([23 x i8], [23 x i8]* @.str.228, i64 0, i64 0), %204 ], [ getelementptr inbounds ([23 x i8], [23 x i8]* @.str.45, i64 0, i64 0), %203 ], [ getelementptr inbounds ([23 x i8], [23 x i8]* @.str.227, i64 0, i64 0), %202 ], [ getelementptr inbounds ([25 x i8], [25 x i8]* @.str.226, i64 0, i64 0), %201 ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @.str.225, i64 0, i64 0), %200 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.224, i64 0, i64 0), %199 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.223, i64 0, i64 0), %198 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.222, i64 0, i64 0), %197 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.221, i64 0, i64 0), %196 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.220, i64 0, i64 0), %195 ], [ getelementptr inbounds ([38 x i8], [38 x i8]* @.str.219, i64 0, i64 0), %194 ], [ getelementptr inbounds ([34 x i8], [34 x i8]* @.str.218, i64 0, i64 0), %193 ], [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str.217, i64 0, i64 0), %192 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.216, i64 0, i64 0), %191 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.215, i64 0, i64 0), %190 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.214, i64 0, i64 0), %189 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.213, i64 0, i64 0), %188 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.212, i64 0, i64 0), %187 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.211, i64 0, i64 0), %186 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.210, i64 0, i64 0), %185 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.209, i64 0, i64 0), %184 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.208, i64 0, i64 0), %183 ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @.str.207, i64 0, i64 0), %182 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.206, i64 0, i64 0), %181 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.205, i64 0, i64 0), %180 ], [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str.204, i64 0, i64 0), %179 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.203, i64 0, i64 0), %178 ], [ getelementptr inbounds ([25 x i8], [25 x i8]* @.str.202, i64 0, i64 0), %177 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.201, i64 0, i64 0), %176 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.200, i64 0, i64 0), %175 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.199, i64 0, i64 0), %174 ], [ getelementptr inbounds ([17 x i8], [17 x i8]* @.str.198, i64 0, i64 0), %173 ], [ getelementptr inbounds ([25 x i8], [25 x i8]* @.str.197, i64 0, i64 0), %172 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.196, i64 0, i64 0), %171 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.195, i64 0, i64 0), %170 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.194, i64 0, i64 0), %169 ], [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.193, i64 0, i64 0), %168 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.192, i64 0, i64 0), %167 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.191, i64 0, i64 0), %166 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.190, i64 0, i64 0), %165 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.189, i64 0, i64 0), %164 ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @.str.188, i64 0, i64 0), %163 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.187, i64 0, i64 0), %162 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.186, i64 0, i64 0), %161 ], [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str.185, i64 0, i64 0), %160 ], [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str.184, i64 0, i64 0), %159 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.183, i64 0, i64 0), %158 ], [ getelementptr inbounds ([23 x i8], [23 x i8]* @.str.182, i64 0, i64 0), %157 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.181, i64 0, i64 0), %156 ], [ getelementptr inbounds ([25 x i8], [25 x i8]* @.str.180, i64 0, i64 0), %155 ], [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str.179, i64 0, i64 0), %154 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.178, i64 0, i64 0), %153 ], [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str.177, i64 0, i64 0), %152 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.176, i64 0, i64 0), %151 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.175, i64 0, i64 0), %150 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @.str.174, i64 0, i64 0), %149 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.173, i64 0, i64 0), %148 ], [ getelementptr inbounds ([33 x i8], [33 x i8]* @.str.172, i64 0, i64 0), %147 ], [ getelementptr inbounds ([25 x i8], [25 x i8]* @.str.171, i64 0, i64 0), %146 ], [ getelementptr inbounds ([23 x i8], [23 x i8]* @.str.170, i64 0, i64 0), %145 ], [ getelementptr inbounds ([17 x i8], [17 x i8]* @.str.169, i64 0, i64 0), %144 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.168, i64 0, i64 0), %143 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.167, i64 0, i64 0), %142 ], [ getelementptr inbounds ([15 x i8], [15 x i8]* @.str.166, i64 0, i64 0), %141 ], [ getelementptr inbounds ([15 x i8], [15 x i8]* @.str.165, i64 0, i64 0), %140 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.164, i64 0, i64 0), %139 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.163, i64 0, i64 0), %138 ], [ getelementptr inbounds ([25 x i8], [25 x i8]* @.str.162, i64 0, i64 0), %137 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.161, i64 0, i64 0), %136 ], [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str.160, i64 0, i64 0), %135 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.159, i64 0, i64 0), %134 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.158, i64 0, i64 0), %133 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.157, i64 0, i64 0), %132 ], [ getelementptr inbounds ([23 x i8], [23 x i8]* @.str.156, i64 0, i64 0), %131 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.155, i64 0, i64 0), %130 ], [ getelementptr inbounds ([17 x i8], [17 x i8]* @.str.154, i64 0, i64 0), %129 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.153, i64 0, i64 0), %128 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.152, i64 0, i64 0), %127 ], [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str.151, i64 0, i64 0), %126 ], [ getelementptr inbounds ([23 x i8], [23 x i8]* @.str.150, i64 0, i64 0), %125 ], [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.149, i64 0, i64 0), %124 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.148, i64 0, i64 0), %123 ], [ getelementptr inbounds ([17 x i8], [17 x i8]* @.str.147, i64 0, i64 0), %122 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @.str.146, i64 0, i64 0), %121 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.145, i64 0, i64 0), %120 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.144, i64 0, i64 0), %119 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.143, i64 0, i64 0), %118 ], [ getelementptr inbounds ([23 x i8], [23 x i8]* @.str.142, i64 0, i64 0), %117 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.141, i64 0, i64 0), %116 ], [ getelementptr inbounds ([38 x i8], [38 x i8]* @.str.140, i64 0, i64 0), %115 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.139, i64 0, i64 0), %114 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.66, i64 0, i64 0), %113 ], [ getelementptr inbounds ([41 x i8], [41 x i8]* @.str.138, i64 0, i64 0), %112 ], [ getelementptr inbounds ([23 x i8], [23 x i8]* @.str.137, i64 0, i64 0), %111 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.136, i64 0, i64 0), %110 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.135, i64 0, i64 0), %109 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.134, i64 0, i64 0), %108 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.133, i64 0, i64 0), %107 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.132, i64 0, i64 0), %106 ], [ getelementptr inbounds ([43 x i8], [43 x i8]* @.str.131, i64 0, i64 0), %105 ], [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str.130, i64 0, i64 0), %104 ], [ getelementptr inbounds ([25 x i8], [25 x i8]* @.str.129, i64 0, i64 0), %103 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.128, i64 0, i64 0), %102 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.127, i64 0, i64 0), %101 ], [ getelementptr inbounds ([36 x i8], [36 x i8]* @.str.126, i64 0, i64 0), %100 ], [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.125, i64 0, i64 0), %99 ], [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.124, i64 0, i64 0), %98 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.123, i64 0, i64 0), %97 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.122, i64 0, i64 0), %96 ], [ getelementptr inbounds ([33 x i8], [33 x i8]* @.str.121, i64 0, i64 0), %95 ], [ getelementptr inbounds ([38 x i8], [38 x i8]* @.str.120, i64 0, i64 0), %94 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.119, i64 0, i64 0), %93 ], [ getelementptr inbounds ([23 x i8], [23 x i8]* @.str.118, i64 0, i64 0), %92 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.117, i64 0, i64 0), %91 ], [ getelementptr inbounds ([35 x i8], [35 x i8]* @.str.116, i64 0, i64 0), %90 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.115, i64 0, i64 0), %89 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @.str.114, i64 0, i64 0), %88 ], [ getelementptr inbounds ([35 x i8], [35 x i8]* @.str.113, i64 0, i64 0), %87 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.112, i64 0, i64 0), %86 ], [ getelementptr inbounds ([35 x i8], [35 x i8]* @.str.111, i64 0, i64 0), %85 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @.str.110, i64 0, i64 0), %84 ], [ getelementptr inbounds ([38 x i8], [38 x i8]* @.str.109, i64 0, i64 0), %83 ], [ getelementptr inbounds ([23 x i8], [23 x i8]* @.str.108, i64 0, i64 0), %82 ], [ getelementptr inbounds ([34 x i8], [34 x i8]* @.str.107, i64 0, i64 0), %81 ], [ getelementptr inbounds ([25 x i8], [25 x i8]* @.str.106, i64 0, i64 0), %80 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.105, i64 0, i64 0), %79 ], [ getelementptr inbounds ([23 x i8], [23 x i8]* @.str.104, i64 0, i64 0), %78 ], [ getelementptr inbounds ([25 x i8], [25 x i8]* @.str.103, i64 0, i64 0), %77 ], [ getelementptr inbounds ([25 x i8], [25 x i8]* @.str.102, i64 0, i64 0), %76 ], [ getelementptr inbounds ([34 x i8], [34 x i8]* @.str.101, i64 0, i64 0), %75 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.100, i64 0, i64 0), %74 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.99, i64 0, i64 0), %73 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.98, i64 0, i64 0), %72 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.97, i64 0, i64 0), %71 ], [ getelementptr inbounds ([25 x i8], [25 x i8]* @.str.96, i64 0, i64 0), %70 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.95, i64 0, i64 0), %69 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.94, i64 0, i64 0), %68 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.93, i64 0, i64 0), %67 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.92, i64 0, i64 0), %66 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.91, i64 0, i64 0), %65 ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @.str.90, i64 0, i64 0), %64 ], [ getelementptr inbounds ([37 x i8], [37 x i8]* @.str.89, i64 0, i64 0), %63 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.88, i64 0, i64 0), %62 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.87, i64 0, i64 0), %61 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.86, i64 0, i64 0), %60 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.85, i64 0, i64 0), %59 ], [ getelementptr inbounds ([25 x i8], [25 x i8]* @.str.84, i64 0, i64 0), %58 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.83, i64 0, i64 0), %57 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.82, i64 0, i64 0), %56 ], [ getelementptr inbounds ([39 x i8], [39 x i8]* @.str.81, i64 0, i64 0), %55 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.80, i64 0, i64 0), %54 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.79, i64 0, i64 0), %53 ], [ getelementptr inbounds ([38 x i8], [38 x i8]* @.str.78, i64 0, i64 0), %52 ], [ getelementptr inbounds ([39 x i8], [39 x i8]* @.str.77, i64 0, i64 0), %51 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.76, i64 0, i64 0), %50 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.75, i64 0, i64 0), %49 ], [ getelementptr inbounds ([34 x i8], [34 x i8]* @.str.74, i64 0, i64 0), %48 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.73, i64 0, i64 0), %47 ], [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str.72, i64 0, i64 0), %46 ], [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str.71, i64 0, i64 0), %45 ], [ getelementptr inbounds ([17 x i8], [17 x i8]* @.str.70, i64 0, i64 0), %44 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.69, i64 0, i64 0), %43 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.68, i64 0, i64 0), %42 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.48, i64 0, i64 0), %13 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @.str.67, i64 0, i64 0), %35 ]
  ret i8* %267
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8AddEntryEmNS0_9HeapEntry4TypeEPKcm(%"class.v8::internal::V8HeapExplorer"* nocapture readonly, i64, i32, i8*, i64) local_unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 4
  %7 = load %"class.v8::internal::HeapObjectsMap"*, %"class.v8::internal::HeapObjectsMap"** %6, align 8
  %8 = trunc i64 %4 to i32
  %9 = tail call i32 @_ZN2v88internal14HeapObjectsMap14FindOrAddEntryEmjb(%"class.v8::internal::HeapObjectsMap"* %7, i64 %1, i32 %8, i1 zeroext true)
  %10 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %11, i64 0, i32 0
  %13 = load %"class.v8::internal::HeapProfiler"*, %"class.v8::internal::HeapProfiler"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::HeapProfiler", %"class.v8::internal::HeapProfiler"* %13, i64 0, i32 4, i32 0, i32 0, i32 0
  %15 = load %"class.v8::internal::AllocationTracker"*, %"class.v8::internal::AllocationTracker"** %14, align 8
  %16 = icmp eq %"class.v8::internal::AllocationTracker"* %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %15, i64 0, i32 8
  %19 = tail call i32 @_ZN2v88internal17AddressToTraceMap14GetTraceNodeIdEm(%"class.v8::internal::AddressToTraceMap"* %18, i64 %1) #13
  %20 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %10, align 8
  br label %21

21:                                               ; preds = %5, %17
  %22 = phi %"class.v8::internal::HeapSnapshot"* [ %20, %17 ], [ %11, %5 ]
  %23 = phi i32 [ %19, %17 ], [ 0, %5 ]
  %24 = ptrtoint i8* %3 to i64
  %25 = ptrtoint %"class.v8::internal::HeapSnapshot"* %22 to i64
  %26 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %22, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %22, i64 0, i32 4, i32 0, i32 0, i32 2
  %30 = bitcast %"class.v8::internal::HeapEntry"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %22, i64 0, i32 4, i32 0, i32 0, i32 1
  %33 = bitcast %"class.v8::internal::HeapEntry"*** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %31, %34
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  %38 = mul i64 %36, 102
  %39 = add i64 %38, -1
  %40 = select i1 %37, i64 0, i64 %39
  %41 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %22, i64 0, i32 4, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, %27
  %44 = icmp eq i64 %40, %43
  %45 = inttoptr i64 %34 to %"class.v8::internal::HeapEntry"**
  %46 = inttoptr i64 %31 to %"class.v8::internal::HeapEntry"**
  br i1 %44, label %47, label %54

47:                                               ; preds = %21
  %48 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %22, i64 0, i32 4
  tail call void @_ZNSt3__15dequeIN2v88internal9HeapEntryENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %48) #13
  %49 = load i64, i64* %26, align 8
  %50 = load i64, i64* %41, align 8
  %51 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %32, align 8
  %52 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %29, align 8
  %53 = add i64 %50, %49
  br label %54

54:                                               ; preds = %47, %21
  %55 = phi i64 [ %53, %47 ], [ %43, %21 ]
  %56 = phi %"class.v8::internal::HeapEntry"** [ %52, %47 ], [ %46, %21 ]
  %57 = phi %"class.v8::internal::HeapEntry"** [ %51, %47 ], [ %45, %21 ]
  %58 = icmp eq %"class.v8::internal::HeapEntry"** %56, %57
  br i1 %58, label %65, label %59

59:                                               ; preds = %54
  %60 = udiv i64 %55, 102
  %61 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %57, i64 %60
  %62 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %61, align 8
  %63 = urem i64 %55, 102
  %64 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %62, i64 %63
  br label %65

65:                                               ; preds = %54, %59
  %66 = phi %"class.v8::internal::HeapEntry"* [ %64, %59 ], [ null, %54 ]
  %67 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %66, i64 0, i32 0
  %68 = and i32 %2, 15
  %69 = shl i32 %28, 4
  %70 = or i32 %69, %68
  store i32 %70, i32* %67, align 8
  %71 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %66, i64 0, i32 1, i32 0
  store i32 0, i32* %71, align 4
  %72 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %66, i64 0, i32 2
  %73 = bitcast [6 x i8]* %72 to i48*
  %74 = trunc i64 %4 to i48
  store i48 %74, i48* %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %66, i64 0, i32 3
  store i8 0, i8* %75, align 2
  %76 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %66, i64 0, i32 4
  %77 = bitcast %"class.v8::internal::HeapSnapshot"** %76 to i64*
  store i64 %25, i64* %77, align 8
  %78 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %66, i64 0, i32 5
  %79 = bitcast i8** %78 to i64*
  store i64 %24, i64* %79, align 8
  %80 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %66, i64 0, i32 6
  store i32 %9, i32* %80, align 8
  %81 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %66, i64 0, i32 7
  store i32 %23, i32* %81, align 4
  %82 = load i64, i64* %26, align 8
  %83 = add i64 %82, 1
  store i64 %83, i64* %26, align 8
  %84 = load i64, i64* %41, align 8
  %85 = add i64 %84, %82
  %86 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %32, align 8
  %87 = udiv i64 %85, 102
  %88 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %86, i64 %87
  %89 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %88, align 8
  %90 = urem i64 %85, 102
  %91 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %89, i64 %90
  ret %"class.v8::internal::HeapEntry"* %91
}

declare i32 @_ZN2v88internal17AddressToTraceMap14GetTraceNodeIdEm(%"class.v8::internal::AddressToTraceMap"*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal14V8HeapExplorer20EstimateObjectsCountEv(%"class.v8::internal::V8HeapExplorer"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.v8::internal::CombinedHeapObjectIterator", align 8
  %3 = bitcast %"class.v8::internal::CombinedHeapObjectIterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %3) #13
  %4 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 1
  %5 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %4, align 8
  call void @_ZN2v88internal26CombinedHeapObjectIteratorC1EPNS0_4HeapENS0_18HeapObjectIterator20HeapObjectsFilteringE(%"class.v8::internal::CombinedHeapObjectIterator"* nonnull %2, %"class.v8::internal::Heap"* %5, i32 1) #13
  br label %6

6:                                                ; preds = %6, %1
  %7 = phi i32 [ 0, %1 ], [ %11, %6 ]
  %8 = call i64 @_ZN2v88internal26CombinedHeapObjectIterator4NextEv(%"class.v8::internal::CombinedHeapObjectIterator"* nonnull %2) #13
  %9 = trunc i64 %8 to i32
  %10 = icmp eq i32 %9, 0
  %11 = add nuw nsw i32 %7, 1
  br i1 %10, label %12, label %6

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.v8::internal::CombinedHeapObjectIterator", %"class.v8::internal::CombinedHeapObjectIterator"* %2, i64 0, i32 1
  call void @_ZN2v88internal18HeapObjectIteratorD1Ev(%"class.v8::internal::HeapObjectIterator"* %13) #13
  %14 = getelementptr inbounds %"class.v8::internal::CombinedHeapObjectIterator", %"class.v8::internal::CombinedHeapObjectIterator"* %2, i64 0, i32 0
  call void @_ZN2v88internal14SafepointScopeD1Ev(%"class.v8::internal::SafepointScope"* nonnull %14) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %3) #13
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer17ExtractReferencesEPNS0_9HeapEntryENS0_10HeapObjectE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"*, i64) local_unnamed_addr #2 align 2 {
  %4 = and i64 %2, -4294967296
  %5 = add i64 %2, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = icmp eq i16 %12, 190
  br i1 %13, label %14, label %20

14:                                               ; preds = %3
  %15 = add i64 %2, 11
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %4, %18
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.272, i64 0, i64 0), i64 %19, i32 12) #13
  br label %538

20:                                               ; preds = %3
  %21 = load atomic i32, i32* %6 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %4, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = icmp eq i16 %26, 1086
  br i1 %27, label %28, label %29

28:                                               ; preds = %20
  tail call void @_ZN2v88internal14V8HeapExplorer30ExtractJSArrayBufferReferencesEPNS0_9HeapEntryENS0_13JSArrayBufferE(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i64 %2)
  br label %538

29:                                               ; preds = %20
  %30 = load atomic i32, i32* %6 monotonic, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %4, %31
  %33 = add i64 %32, 7
  %34 = inttoptr i64 %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = icmp ugt i16 %35, 188
  %37 = load atomic i32, i32* %6 monotonic, align 4
  %38 = zext i32 %37 to i64
  %39 = or i64 %4, %38
  %40 = add i64 %39, 7
  %41 = inttoptr i64 %40 to i16*
  %42 = load atomic i16, i16* %41 monotonic, align 2
  br i1 %36, label %43, label %138

43:                                               ; preds = %29
  %44 = icmp eq i16 %42, 1084
  br i1 %44, label %45, label %51

45:                                               ; preds = %43
  %46 = add i64 %2, 11
  %47 = inttoptr i64 %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %4, %49
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.297, i64 0, i64 0), i64 %50, i32 12) #13
  br label %137

51:                                               ; preds = %43
  %52 = load atomic i32, i32* %6 monotonic, align 4
  %53 = zext i32 %52 to i64
  %54 = or i64 %4, %53
  %55 = add i64 %54, 7
  %56 = inttoptr i64 %55 to i16*
  %57 = load atomic i16, i16* %56 monotonic, align 2
  %58 = icmp eq i16 %57, 1083
  br i1 %58, label %59, label %65

59:                                               ; preds = %51
  %60 = add i64 %2, 11
  %61 = inttoptr i64 %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = zext i32 %62 to i64
  %64 = or i64 %4, %63
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.297, i64 0, i64 0), i64 %64, i32 12) #13
  br label %137

65:                                               ; preds = %51
  %66 = load atomic i32, i32* %6 monotonic, align 4
  %67 = zext i32 %66 to i64
  %68 = or i64 %4, %67
  %69 = add i64 %68, 7
  %70 = inttoptr i64 %69 to i16*
  %71 = load atomic i16, i16* %70 monotonic, align 2
  %72 = icmp eq i16 %71, 1082
  br i1 %72, label %73, label %79

73:                                               ; preds = %65
  %74 = add i64 %2, 11
  %75 = inttoptr i64 %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i64
  %78 = or i64 %4, %77
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.297, i64 0, i64 0), i64 %78, i32 12) #13
  br label %137

79:                                               ; preds = %65
  %80 = load atomic i32, i32* %6 monotonic, align 4
  %81 = zext i32 %80 to i64
  %82 = or i64 %4, %81
  %83 = add i64 %82, 7
  %84 = inttoptr i64 %83 to i16*
  %85 = load atomic i16, i16* %84 monotonic, align 2
  %86 = icmp eq i16 %85, 1081
  br i1 %86, label %87, label %93

87:                                               ; preds = %79
  %88 = add i64 %2, 11
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i64
  %92 = or i64 %4, %91
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.297, i64 0, i64 0), i64 %92, i32 12) #13
  br label %137

93:                                               ; preds = %79
  %94 = load atomic i32, i32* %6 monotonic, align 4
  %95 = zext i32 %94 to i64
  %96 = or i64 %4, %95
  %97 = add i64 %96, 7
  %98 = inttoptr i64 %97 to i16*
  %99 = load atomic i16, i16* %98 monotonic, align 2
  %100 = icmp eq i16 %99, 1101
  br i1 %100, label %101, label %107

101:                                              ; preds = %93
  %102 = add i64 %2, 11
  %103 = inttoptr i64 %102 to i32*
  %104 = load i32, i32* %103, align 4
  %105 = zext i32 %104 to i64
  %106 = or i64 %4, %105
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.353, i64 0, i64 0), i64 %106, i32 12) #13
  br label %137

107:                                              ; preds = %93
  %108 = load atomic i32, i32* %6 monotonic, align 4
  %109 = zext i32 %108 to i64
  %110 = or i64 %4, %109
  %111 = add i64 %110, 7
  %112 = inttoptr i64 %111 to i16*
  %113 = load atomic i16, i16* %112 monotonic, align 2
  %114 = add i16 %113, -1052
  %115 = icmp ult i16 %114, 3
  br i1 %115, label %116, label %137

116:                                              ; preds = %107
  %117 = add i64 %2, 11
  %118 = inttoptr i64 %117 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = zext i32 %119 to i64
  %121 = or i64 %4, %120
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.354, i64 0, i64 0), i64 %121, i32 12) #13
  %122 = add i64 %2, 15
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = zext i32 %124 to i64
  %126 = or i64 %4, %125
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.284, i64 0, i64 0), i64 %126, i32 16) #13
  %127 = add i64 %2, 19
  %128 = inttoptr i64 %127 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = zext i32 %129 to i64
  %131 = or i64 %4, %130
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.355, i64 0, i64 0), i64 %131, i32 20) #13
  %132 = add i64 %2, 35
  %133 = inttoptr i64 %132 to i32*
  %134 = load i32, i32* %133, align 4
  %135 = zext i32 %134 to i64
  %136 = or i64 %4, %135
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.356, i64 0, i64 0), i64 %136, i32 36) #13
  br label %137

137:                                              ; preds = %59, %87, %107, %116, %101, %73, %45
  tail call void @_ZN2v88internal14V8HeapExplorer25ExtractJSObjectReferencesEPNS0_9HeapEntryENS0_8JSObjectE(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i64 %2)
  br label %538

138:                                              ; preds = %29
  %139 = icmp ult i16 %42, 64
  br i1 %139, label %140, label %141

140:                                              ; preds = %138
  tail call void @_ZN2v88internal14V8HeapExplorer23ExtractStringReferencesEPNS0_9HeapEntryENS0_6StringE(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i64 %2)
  br label %538

141:                                              ; preds = %138
  %142 = load atomic i32, i32* %6 monotonic, align 4
  %143 = zext i32 %142 to i64
  %144 = or i64 %4, %143
  %145 = add i64 %144, 7
  %146 = inttoptr i64 %145 to i16*
  %147 = load atomic i16, i16* %146 monotonic, align 2
  %148 = icmp eq i16 %147, 64
  br i1 %148, label %149, label %155

149:                                              ; preds = %141
  %150 = add i64 %2, 11
  %151 = inttoptr i64 %150 to i32*
  %152 = load i32, i32* %151, align 4
  %153 = zext i32 %152 to i64
  %154 = or i64 %4, %153
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i64 0, i64 0), i64 %154, i32 12) #13
  br label %538

155:                                              ; preds = %141
  %156 = load atomic i32, i32* %6 monotonic, align 4
  %157 = zext i32 %156 to i64
  %158 = or i64 %4, %157
  %159 = add i64 %158, 7
  %160 = inttoptr i64 %159 to i16*
  %161 = load atomic i16, i16* %160 monotonic, align 2
  %162 = icmp eq i16 %161, 172
  br i1 %162, label %163, label %164

163:                                              ; preds = %155
  tail call void @_ZN2v88internal14V8HeapExplorer20ExtractMapReferencesEPNS0_9HeapEntryENS0_3MapE(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i64 %2)
  br label %538

164:                                              ; preds = %155
  %165 = load atomic i32, i32* %6 monotonic, align 4
  %166 = zext i32 %165 to i64
  %167 = or i64 %4, %166
  %168 = add i64 %167, 7
  %169 = inttoptr i64 %168 to i16*
  %170 = load atomic i16, i16* %169 monotonic, align 2
  %171 = icmp eq i16 %170, 179
  br i1 %171, label %172, label %173

172:                                              ; preds = %164
  tail call void @_ZN2v88internal14V8HeapExplorer35ExtractSharedFunctionInfoReferencesEPNS0_9HeapEntryENS0_18SharedFunctionInfoE(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i64 %2)
  br label %538

173:                                              ; preds = %164
  %174 = load atomic i32, i32* %6 monotonic, align 4
  %175 = zext i32 %174 to i64
  %176 = or i64 %4, %175
  %177 = add i64 %176, 7
  %178 = inttoptr i64 %177 to i16*
  %179 = load atomic i16, i16* %178 monotonic, align 2
  %180 = icmp eq i16 %179, 112
  br i1 %180, label %181, label %205

181:                                              ; preds = %173
  %182 = add i64 %2, 3
  %183 = inttoptr i64 %182 to i32*
  %184 = load i32, i32* %183, align 4
  %185 = zext i32 %184 to i64
  %186 = or i64 %4, %185
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.330, i64 0, i64 0), i64 %186, i32 4) #13
  %187 = add i64 %2, 7
  %188 = inttoptr i64 %187 to i32*
  %189 = load i32, i32* %188, align 4
  %190 = zext i32 %189 to i64
  %191 = or i64 %4, %190
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i64 0, i64 0), i64 %191, i32 8) #13
  %192 = add i64 %2, 19
  %193 = inttoptr i64 %192 to i32*
  %194 = load i32, i32* %193, align 4
  %195 = zext i32 %194 to i64
  %196 = or i64 %4, %195
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.331, i64 0, i64 0), i64 %196, i32 20) #13
  %197 = add i64 %2, 27
  %198 = inttoptr i64 %197 to i32*
  %199 = load i32, i32* %198, align 4
  %200 = zext i32 %199 to i64
  %201 = or i64 %4, %200
  tail call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %201, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.332, i64 0, i64 0)) #13
  %202 = load i32, i32* %198, align 4
  %203 = zext i32 %202 to i64
  %204 = or i64 %4, %203
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.333, i64 0, i64 0), i64 %204, i32 28) #13
  br label %538

205:                                              ; preds = %173
  %206 = load atomic i32, i32* %6 monotonic, align 4
  %207 = zext i32 %206 to i64
  %208 = or i64 %4, %207
  %209 = add i64 %208, 7
  %210 = inttoptr i64 %209 to i16*
  %211 = load atomic i16, i16* %210 monotonic, align 2
  %212 = icmp eq i16 %211, 86
  br i1 %212, label %213, label %239

213:                                              ; preds = %205
  %214 = add i64 %2, 3
  %215 = inttoptr i64 %214 to i32*
  %216 = load i32, i32* %215, align 4
  %217 = zext i32 %216 to i64
  %218 = or i64 %4, %217
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i64 0, i64 0), i64 %218, i32 4) #13
  %219 = add i64 %2, 11
  %220 = inttoptr i64 %219 to i32*
  %221 = load i32, i32* %220, align 4
  %222 = zext i32 %221 to i64
  %223 = or i64 %4, %222
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.334, i64 0, i64 0), i64 %223, i32 12) #13
  %224 = add i64 %2, 19
  %225 = inttoptr i64 %224 to i32*
  %226 = load i32, i32* %225, align 4
  %227 = zext i32 %226 to i64
  %228 = or i64 %4, %227
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.335, i64 0, i64 0), i64 %228, i32 20) #13
  %229 = add i64 %2, 15
  %230 = inttoptr i64 %229 to i32*
  %231 = load i32, i32* %230, align 4
  %232 = zext i32 %231 to i64
  %233 = or i64 %4, %232
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.336, i64 0, i64 0), i64 %233, i32 16) #13
  %234 = add i64 %2, 27
  %235 = inttoptr i64 %234 to i32*
  %236 = load i32, i32* %235, align 4
  %237 = zext i32 %236 to i64
  %238 = or i64 %4, %237
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.337, i64 0, i64 0), i64 %238, i32 28) #13
  br label %538

239:                                              ; preds = %205
  %240 = load atomic i32, i32* %6 monotonic, align 4
  %241 = zext i32 %240 to i64
  %242 = or i64 %4, %241
  %243 = add i64 %242, 7
  %244 = inttoptr i64 %243 to i16*
  %245 = load atomic i16, i16* %244 monotonic, align 2
  %246 = icmp eq i16 %245, 87
  br i1 %246, label %247, label %258

247:                                              ; preds = %239
  %248 = add i64 %2, 3
  %249 = inttoptr i64 %248 to i32*
  %250 = load i32, i32* %249, align 4
  %251 = zext i32 %250 to i64
  %252 = or i64 %4, %251
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.335, i64 0, i64 0), i64 %252, i32 4) #13
  %253 = add i64 %2, 7
  %254 = inttoptr i64 %253 to i32*
  %255 = load i32, i32* %254, align 4
  %256 = zext i32 %255 to i64
  %257 = or i64 %4, %256
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.336, i64 0, i64 0), i64 %257, i32 8) #13
  br label %538

258:                                              ; preds = %239
  %259 = load atomic i32, i32* %6 monotonic, align 4
  %260 = zext i32 %259 to i64
  %261 = or i64 %4, %260
  %262 = add i64 %261, 7
  %263 = inttoptr i64 %262 to i16*
  %264 = load atomic i16, i16* %263 monotonic, align 2
  %265 = icmp eq i16 %264, 162
  br i1 %265, label %266, label %267

266:                                              ; preds = %258
  tail call void @_ZN2v88internal14V8HeapExplorer21ExtractCodeReferencesEPNS0_9HeapEntryENS0_4CodeE(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i64 %2)
  br label %538

267:                                              ; preds = %258
  %268 = load atomic i32, i32* %6 monotonic, align 4
  %269 = zext i32 %268 to i64
  %270 = or i64 %4, %269
  %271 = add i64 %270, 7
  %272 = inttoptr i64 %271 to i16*
  %273 = load atomic i16, i16* %272 monotonic, align 2
  %274 = icmp eq i16 %273, 161
  br i1 %274, label %275, label %281

275:                                              ; preds = %267
  %276 = add i64 %2, 3
  %277 = inttoptr i64 %276 to i32*
  %278 = load i32, i32* %277, align 4
  %279 = zext i32 %278 to i64
  %280 = or i64 %4, %279
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.347, i64 0, i64 0), i64 %280, i32 4) #13
  br label %538

281:                                              ; preds = %267
  %282 = load atomic i32, i32* %6 monotonic, align 4
  %283 = zext i32 %282 to i64
  %284 = or i64 %4, %283
  %285 = add i64 %284, 7
  %286 = inttoptr i64 %285 to i16*
  %287 = load atomic i16, i16* %286 monotonic, align 2
  %288 = icmp eq i16 %287, 102
  br i1 %288, label %289, label %295

289:                                              ; preds = %281
  tail call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.348, i64 0, i64 0)) #13
  %290 = add i64 %2, 3
  %291 = inttoptr i64 %290 to i32*
  %292 = load i32, i32* %291, align 4
  %293 = zext i32 %292 to i64
  %294 = or i64 %4, %293
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.347, i64 0, i64 0), i64 %294, i32 4) #13
  br label %538

295:                                              ; preds = %281
  %296 = load atomic i32, i32* %6 monotonic, align 4
  %297 = zext i32 %296 to i64
  %298 = or i64 %4, %297
  %299 = add i64 %298, 7
  %300 = inttoptr i64 %299 to i16*
  %301 = load atomic i16, i16* %300 monotonic, align 2
  %302 = icmp eq i16 %301, 177
  br i1 %302, label %303, label %317

303:                                              ; preds = %295
  %304 = add i64 %2, 11
  %305 = inttoptr i64 %304 to i32*
  %306 = load i32, i32* %305, align 4
  %307 = zext i32 %306 to i64
  %308 = or i64 %4, %307
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.347, i64 0, i64 0), i64 %308, i32 12) #13
  %309 = add i64 %2, 15
  %310 = inttoptr i64 %309 to i32*
  %311 = load i32, i32* %310, align 4
  %312 = zext i32 %311 to i64
  %313 = or i64 %4, %312
  tail call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %313, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.321, i64 0, i64 0)) #13
  %314 = load i32, i32* %310, align 4
  %315 = zext i32 %314 to i64
  %316 = or i64 %4, %315
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.322, i64 0, i64 0), i64 %316, i32 16) #13
  br label %538

317:                                              ; preds = %295
  %318 = load atomic i32, i32* %6 monotonic, align 4
  %319 = zext i32 %318 to i64
  %320 = or i64 %4, %319
  %321 = add i64 %320, 7
  %322 = inttoptr i64 %321 to i16*
  %323 = load atomic i16, i16* %322 monotonic, align 2
  %324 = icmp eq i16 %323, 90
  br i1 %324, label %325, label %344

325:                                              ; preds = %317
  %326 = add i64 %2, 3
  %327 = inttoptr i64 %326 to i32*
  %328 = load i32, i32* %327, align 4
  %329 = zext i32 %328 to i64
  %330 = or i64 %4, %329
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.349, i64 0, i64 0), i64 %330, i32 4) #13
  %331 = add i64 %2, 7
  %332 = inttoptr i64 %331 to i32*
  %333 = load i32, i32* %332, align 4
  %334 = zext i32 %333 to i64
  %335 = or i64 %4, %334
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.350, i64 0, i64 0), i64 %335, i32 8) #13
  %336 = add i64 %2, 11
  %337 = inttoptr i64 %336 to i32*
  %338 = load i32, i32* %337, align 4
  %339 = zext i32 %338 to i64
  %340 = or i64 %4, %339
  tail call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %340, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.321, i64 0, i64 0)) #13
  %341 = load i32, i32* %337, align 4
  %342 = zext i32 %341 to i64
  %343 = or i64 %4, %342
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.322, i64 0, i64 0), i64 %343, i32 12) #13
  br label %538

344:                                              ; preds = %317
  %345 = load atomic i32, i32* %6 monotonic, align 4
  %346 = zext i32 %345 to i64
  %347 = or i64 %4, %346
  %348 = add i64 %347, 7
  %349 = inttoptr i64 %348 to i16*
  %350 = load atomic i16, i16* %349 monotonic, align 2
  %351 = icmp eq i16 %350, 91
  br i1 %351, label %352, label %358

352:                                              ; preds = %344
  %353 = add i64 %2, 7
  %354 = inttoptr i64 %353 to i32*
  %355 = load i32, i32* %354, align 4
  %356 = zext i32 %355 to i64
  %357 = or i64 %4, %356
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.351, i64 0, i64 0), i64 %357, i32 8) #13
  br label %538

358:                                              ; preds = %344
  %359 = load atomic i32, i32* %6 monotonic, align 4
  %360 = zext i32 %359 to i64
  %361 = or i64 %4, %360
  %362 = add i64 %361, 7
  %363 = inttoptr i64 %362 to i16*
  %364 = load atomic i16, i16* %363 monotonic, align 2
  %365 = icmp eq i16 %364, 167
  br i1 %365, label %366, label %378

366:                                              ; preds = %358
  %367 = add i64 %2, 23
  %368 = inttoptr i64 %367 to i32*
  %369 = load i32, i32* %368, align 4
  %370 = zext i32 %369 to i64
  %371 = and i64 %370, 3
  %372 = icmp eq i64 %371, 3
  %373 = icmp ne i32 %369, 3
  %374 = and i1 %373, %372
  br i1 %374, label %375, label %538

375:                                              ; preds = %366
  %376 = and i64 %370, 4294967293
  %377 = or i64 %376, %4
  tail call void @_ZN2v88internal14V8HeapExplorer16SetWeakReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.357, i64 0, i64 0), i64 %377, i32 24) #13
  br label %538

378:                                              ; preds = %358
  %379 = load atomic i32, i32* %6 monotonic, align 4
  %380 = zext i32 %379 to i64
  %381 = or i64 %4, %380
  %382 = add i64 %381, 7
  %383 = inttoptr i64 %382 to i16*
  %384 = load atomic i16, i16* %383 monotonic, align 2
  %385 = add i16 %384, -153
  %386 = icmp ult i16 %385, 2
  br i1 %386, label %387, label %388

387:                                              ; preds = %378
  tail call void @_ZN2v88internal14V8HeapExplorer32ExtractDescriptorArrayReferencesEPNS0_9HeapEntryENS0_15DescriptorArrayE(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i64 %2)
  br label %538

388:                                              ; preds = %378
  %389 = load atomic i32, i32* %6 monotonic, align 4
  %390 = zext i32 %389 to i64
  %391 = or i64 %4, %390
  %392 = add i64 %391, 7
  %393 = inttoptr i64 %392 to i16*
  %394 = load atomic i16, i16* %393 monotonic, align 2
  %395 = add i16 %394, -159
  %396 = icmp ult i16 %395, 2
  br i1 %396, label %397, label %431

397:                                              ; preds = %388
  %398 = add i64 %2, 3
  %399 = inttoptr i64 %398 to i32*
  %400 = load i32, i32* %399, align 4
  %401 = icmp sgt i32 %400, 1
  br i1 %401, label %402, label %538

402:                                              ; preds = %397
  %403 = add i64 %2, 7
  br label %404

404:                                              ; preds = %425, %402
  %405 = phi i64 [ 0, %402 ], [ %426, %425 ]
  %406 = trunc i64 %405 to i32
  %407 = shl i32 %406, 2
  %408 = sext i32 %407 to i64
  %409 = add i64 %403, %408
  %410 = inttoptr i64 %409 to i32*
  %411 = load atomic i32, i32* %410 monotonic, align 4
  %412 = zext i32 %411 to i64
  %413 = or i64 %4, %412
  %414 = and i64 %412, 3
  %415 = icmp eq i64 %414, 3
  %416 = icmp ne i32 %411, 3
  %417 = and i1 %416, %415
  br i1 %417, label %418, label %421

418:                                              ; preds = %404
  %419 = and i64 %413, -3
  %420 = add nsw i32 %407, 8
  tail call void @_ZN2v88internal14V8HeapExplorer16SetWeakReferenceEPNS0_9HeapEntryEiNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i32 %406, i64 %419, i32 %420) #13
  br label %425

421:                                              ; preds = %404
  %422 = icmp eq i64 %414, 1
  br i1 %422, label %423, label %425

423:                                              ; preds = %421
  %424 = add nsw i32 %407, 8
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEiNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i32 %406, i64 %413, i32 %424) #13
  br label %425

425:                                              ; preds = %423, %421, %418
  %426 = add nuw nsw i64 %405, 1
  %427 = load i32, i32* %399, align 4
  %428 = ashr i32 %427, 1
  %429 = sext i32 %428 to i64
  %430 = icmp slt i64 %426, %429
  br i1 %430, label %404, label %538

431:                                              ; preds = %388
  %432 = load atomic i32, i32* %6 monotonic, align 4
  %433 = zext i32 %432 to i64
  %434 = or i64 %4, %433
  %435 = add i64 %434, 7
  %436 = inttoptr i64 %435 to i16*
  %437 = load atomic i16, i16* %436 monotonic, align 2
  %438 = icmp eq i16 %437, 184
  br i1 %438, label %439, label %473

439:                                              ; preds = %431
  %440 = add i64 %2, 7
  %441 = inttoptr i64 %440 to i32*
  %442 = load i32, i32* %441, align 4
  %443 = icmp sgt i32 %442, 1
  br i1 %443, label %444, label %538

444:                                              ; preds = %439
  %445 = add i64 %2, 11
  br label %446

446:                                              ; preds = %467, %444
  %447 = phi i64 [ 0, %444 ], [ %468, %467 ]
  %448 = trunc i64 %447 to i32
  %449 = shl i32 %448, 2
  %450 = sext i32 %449 to i64
  %451 = add i64 %445, %450
  %452 = inttoptr i64 %451 to i32*
  %453 = load atomic i32, i32* %452 monotonic, align 4
  %454 = zext i32 %453 to i64
  %455 = or i64 %4, %454
  %456 = and i64 %454, 3
  %457 = icmp eq i64 %456, 3
  %458 = icmp ne i32 %453, 3
  %459 = and i1 %458, %457
  br i1 %459, label %460, label %463

460:                                              ; preds = %446
  %461 = and i64 %455, -3
  %462 = add nsw i32 %449, 12
  tail call void @_ZN2v88internal14V8HeapExplorer16SetWeakReferenceEPNS0_9HeapEntryEiNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i32 %448, i64 %461, i32 %462) #13
  br label %467

463:                                              ; preds = %446
  %464 = icmp eq i64 %456, 1
  br i1 %464, label %465, label %467

465:                                              ; preds = %463
  %466 = add nsw i32 %449, 12
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEiNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i32 %448, i64 %455, i32 %466) #13
  br label %467

467:                                              ; preds = %465, %463, %460
  %468 = add nuw nsw i64 %447, 1
  %469 = load i32, i32* %441, align 4
  %470 = ashr i32 %469, 1
  %471 = sext i32 %470 to i64
  %472 = icmp slt i64 %468, %471
  br i1 %472, label %446, label %538

473:                                              ; preds = %431
  %474 = load atomic i32, i32* %6 monotonic, align 4
  %475 = zext i32 %474 to i64
  %476 = or i64 %4, %475
  %477 = add i64 %476, 7
  %478 = inttoptr i64 %477 to i16*
  %479 = load atomic i16, i16* %478 monotonic, align 2
  %480 = add i16 %479, -137
  %481 = icmp ult i16 %480, 10
  br i1 %481, label %482, label %483

482:                                              ; preds = %473
  tail call void @_ZN2v88internal14V8HeapExplorer24ExtractContextReferencesEPNS0_9HeapEntryENS0_7ContextE(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i64 %2)
  br label %538

483:                                              ; preds = %473
  %484 = load atomic i32, i32* %6 monotonic, align 4
  %485 = zext i32 %484 to i64
  %486 = or i64 %4, %485
  %487 = add i64 %486, 7
  %488 = inttoptr i64 %487 to i16*
  %489 = load atomic i16, i16* %488 monotonic, align 2
  %490 = icmp eq i16 %489, 121
  br i1 %490, label %491, label %492

491:                                              ; preds = %483
  tail call void @_ZN2v88internal14V8HeapExplorer35ExtractEphemeronHashTableReferencesEPNS0_9HeapEntryENS0_18EphemeronHashTableE(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i64 %2)
  br label %538

492:                                              ; preds = %483
  %493 = load atomic i32, i32* %6 monotonic, align 4
  %494 = zext i32 %493 to i64
  %495 = or i64 %4, %494
  %496 = add i64 %495, 7
  %497 = inttoptr i64 %496 to i16*
  %498 = load atomic i16, i16* %497 monotonic, align 2
  %499 = add i16 %498, -119
  %500 = icmp ult i16 %499, 13
  br i1 %500, label %501, label %523

501:                                              ; preds = %492
  %502 = add i64 %2, 3
  %503 = inttoptr i64 %502 to i32*
  %504 = load i32, i32* %503, align 4
  %505 = icmp sgt i32 %504, 1
  br i1 %505, label %506, label %538

506:                                              ; preds = %501
  %507 = lshr i32 %504, 1
  %508 = add i64 %2, 7
  %509 = zext i32 %507 to i64
  br label %510

510:                                              ; preds = %510, %506
  %511 = phi i64 [ 0, %506 ], [ %521, %510 ]
  %512 = trunc i64 %511 to i32
  %513 = shl i32 %512, 2
  %514 = sext i32 %513 to i64
  %515 = add i64 %508, %514
  %516 = inttoptr i64 %515 to i32*
  %517 = load atomic i32, i32* %516 monotonic, align 4
  %518 = zext i32 %517 to i64
  %519 = or i64 %4, %518
  %520 = add nsw i32 %513, 8
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEiNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i32 %512, i64 %519, i32 %520) #13
  %521 = add nuw nsw i64 %511, 1
  %522 = icmp ult i64 %521, %509
  br i1 %522, label %510, label %538

523:                                              ; preds = %492
  %524 = load atomic i32, i32* %6 monotonic, align 4
  %525 = zext i32 %524 to i64
  %526 = or i64 %4, %525
  %527 = add i64 %526, 7
  %528 = inttoptr i64 %527 to i16*
  %529 = load atomic i16, i16* %528 monotonic, align 2
  %530 = icmp eq i16 %529, 66
  br i1 %530, label %531, label %538

531:                                              ; preds = %523
  %532 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 2
  %533 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %532, align 8
  %534 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %533, i64 0, i32 11
  %535 = load i8, i8* %534, align 1, !range !4
  %536 = icmp eq i8 %535, 0
  br i1 %536, label %538, label %537

537:                                              ; preds = %531
  tail call void @_ZN2v88internal14V8HeapExplorer22ExtractNumberReferenceEPNS0_9HeapEntryENS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i64 %2)
  br label %538

538:                                              ; preds = %510, %467, %425, %531, %501, %439, %397, %375, %366, %28, %140, %163, %181, %247, %275, %303, %352, %387, %491, %523, %537, %482, %325, %289, %266, %213, %172, %149, %137, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer30ExtractJSGlobalProxyReferencesEPNS0_9HeapEntryENS0_13JSGlobalProxyE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = and i64 %2, -4294967296
  %5 = add i64 %2, 11
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.272, i64 0, i64 0), i64 %9, i32 12)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer30ExtractJSArrayBufferReferencesEPNS0_9HeapEntryENS0_13JSArrayBufferE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca %"class.v8::internal::HeapEntry"*, align 8
  %6 = alloca i8*, align 8
  %7 = add i64 %2, 27
  %8 = inttoptr i64 %7 to i8**
  %9 = load i8*, i8** %8, align 1
  %10 = icmp eq i8* %9, null
  br i1 %10, label %97, label %11

11:                                               ; preds = %3
  %12 = add i64 %2, 11
  %13 = inttoptr i64 %12 to i64*
  %14 = load i64, i64* %13, align 1
  %15 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 6
  %16 = load %"class.v8::internal::HeapSnapshotGenerator"*, %"class.v8::internal::HeapSnapshotGenerator"** %15, align 8
  %17 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  store i8* %9, i8** %6, align 8
  %18 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %16, i64 0, i32 5, i32 0
  %19 = call %"struct.std::__1::__hash_node_base.1424"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIS2_S7_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS2_EENS_15__hash_iteratorIPNS_11__hash_nodeIS7_S2_EEEERKT_(%"class.std::__1::__hash_table.1420"* %18, i8** nonnull dereferenceable(8) %6) #13
  %20 = icmp eq %"struct.std::__1::__hash_node_base.1424"* %19, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %27

22:                                               ; preds = %11
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %19, i64 3
  %24 = bitcast %"struct.std::__1::__hash_node_base.1424"* %23 to %"class.v8::internal::HeapEntry"**
  %25 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  %26 = icmp eq %"class.v8::internal::HeapEntry"* %25, null
  br i1 %26, label %27, label %37

27:                                               ; preds = %22, %21
  %28 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  store i8* %9, i8** %4, align 8
  %29 = bitcast %"class.v8::internal::HeapEntry"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  %30 = ptrtoint i8* %9 to i64
  %31 = call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8AddEntryEmNS0_9HeapEntry4TypeEPKcm(%"class.v8::internal::V8HeapExplorer"* %0, i64 %30, i32 8, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.632, i64 0, i64 0), i64 %14) #13
  store %"class.v8::internal::HeapEntry"* %31, %"class.v8::internal::HeapEntry"** %5, align 8
  %32 = call { %"struct.std::__1::__hash_node_base.1424"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIS2_S7_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS2_JRS2_S6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_S2_EEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1420"* %18, i8** nonnull dereferenceable(8) %4, i8** nonnull dereferenceable(8) %4, %"class.v8::internal::HeapEntry"** nonnull dereferenceable(8) %5) #13
  %33 = extractvalue { %"struct.std::__1::__hash_node_base.1424"*, i8 } %32, 0
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %33, i64 3
  %35 = bitcast %"struct.std::__1::__hash_node_base.1424"* %34 to %"class.v8::internal::HeapEntry"**
  %36 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %37

37:                                               ; preds = %22, %27
  %38 = phi %"class.v8::internal::HeapEntry"* [ %36, %27 ], [ %25, %22 ]
  %39 = ptrtoint %"class.v8::internal::HeapEntry"* %38 to i64
  %40 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 1, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = add i32 %41, 1
  store i32 %42, i32* %40, align 4
  %43 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 4
  %44 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %44, i64 0, i32 5, i32 0, i32 0, i32 2
  %46 = bitcast %"class.v8::internal::HeapGraphEdge"*** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %44, i64 0, i32 5, i32 0, i32 0, i32 1
  %49 = bitcast %"class.v8::internal::HeapGraphEdge"*** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %47, %50
  %52 = ashr exact i64 %51, 3
  %53 = icmp eq i64 %51, 0
  %54 = mul i64 %52, 170
  %55 = add i64 %54, -1
  %56 = select i1 %53, i64 0, i64 %55
  %57 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %44, i64 0, i32 5, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %44, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, %58
  %62 = icmp eq i64 %56, %61
  %63 = inttoptr i64 %50 to %"class.v8::internal::HeapGraphEdge"**
  %64 = inttoptr i64 %47 to %"class.v8::internal::HeapGraphEdge"**
  br i1 %62, label %65, label %72

65:                                               ; preds = %37
  %66 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %44, i64 0, i32 5
  call void @_ZNSt3__15dequeIN2v88internal13HeapGraphEdgeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.758"* %66) #13
  %67 = load i64, i64* %59, align 8
  %68 = load i64, i64* %57, align 8
  %69 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %48, align 8
  %70 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %45, align 8
  %71 = add i64 %68, %67
  br label %72

72:                                               ; preds = %65, %37
  %73 = phi i64 [ %71, %65 ], [ %61, %37 ]
  %74 = phi %"class.v8::internal::HeapGraphEdge"** [ %70, %65 ], [ %64, %37 ]
  %75 = phi %"class.v8::internal::HeapGraphEdge"** [ %69, %65 ], [ %63, %37 ]
  %76 = icmp eq %"class.v8::internal::HeapGraphEdge"** %74, %75
  br i1 %76, label %83, label %77

77:                                               ; preds = %72
  %78 = udiv i64 %73, 170
  %79 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %75, i64 %78
  %80 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %79, align 8
  %81 = urem i64 %73, 170
  %82 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %80, i64 %81
  br label %83

83:                                               ; preds = %72, %77
  %84 = phi %"class.v8::internal::HeapGraphEdge"* [ %82, %77 ], [ null, %72 ]
  %85 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %84, i64 0, i32 0
  %86 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = lshr i32 %87, 4
  %89 = shl nuw nsw i32 %88, 3
  %90 = or i32 %89, 3
  store i32 %90, i32* %85, align 8
  %91 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %84, i64 0, i32 1
  %92 = bitcast %"class.v8::internal::HeapEntry"** %91 to i64*
  store i64 %39, i64* %92, align 8
  %93 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %84, i64 0, i32 2, i32 0
  %94 = bitcast i8** %93 to i64*
  store i64 ptrtoint ([14 x i8]* @.str.352 to i64), i64* %94, align 8
  %95 = load i64, i64* %59, align 8
  %96 = add i64 %95, 1
  store i64 %96, i64* %59, align 8
  br label %97

97:                                               ; preds = %3, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer33ExtractJSWeakCollectionReferencesEPNS0_9HeapEntryENS0_16JSWeakCollectionE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = and i64 %2, -4294967296
  %5 = add i64 %2, 11
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.297, i64 0, i64 0), i64 %9, i32 12)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer29ExtractJSCollectionReferencesEPNS0_9HeapEntryENS0_12JSCollectionE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = and i64 %2, -4294967296
  %5 = add i64 %2, 11
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.297, i64 0, i64 0), i64 %9, i32 12)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer26ExtractJSPromiseReferencesEPNS0_9HeapEntryENS0_9JSPromiseE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = and i64 %2, -4294967296
  %5 = add i64 %2, 11
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.353, i64 0, i64 0), i64 %9, i32 12)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer34ExtractJSGeneratorObjectReferencesEPNS0_9HeapEntryENS0_17JSGeneratorObjectE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = and i64 %2, -4294967296
  %5 = add i64 %2, 11
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.354, i64 0, i64 0), i64 %9, i32 12)
  %10 = add i64 %2, 15
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %4, %13
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.284, i64 0, i64 0), i64 %14, i32 16)
  %15 = add i64 %2, 19
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %4, %18
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.355, i64 0, i64 0), i64 %19, i32 20)
  %20 = add i64 %2, 35
  %21 = inttoptr i64 %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %4, %23
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.356, i64 0, i64 0), i64 %24, i32 36)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer25ExtractJSObjectReferencesEPNS0_9HeapEntryENS0_8JSObjectE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"*, i64) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %5 = alloca %"class.v8::internal::JSFunction", align 8
  tail call void @_ZN2v88internal14V8HeapExplorer25ExtractPropertyReferencesENS0_8JSObjectEPNS0_9HeapEntryE(%"class.v8::internal::V8HeapExplorer"* %0, i64 %2, %"class.v8::internal::HeapEntry"* %1)
  tail call void @_ZN2v88internal14V8HeapExplorer24ExtractElementReferencesENS0_8JSObjectEPNS0_9HeapEntryE(%"class.v8::internal::V8HeapExplorer"* %0, i64 %2, %"class.v8::internal::HeapEntry"* %1)
  tail call void @_ZN2v88internal14V8HeapExplorer25ExtractInternalReferencesENS0_8JSObjectEPNS0_9HeapEntryE(%"class.v8::internal::V8HeapExplorer"* %0, i64 %2, %"class.v8::internal::HeapEntry"* %1)
  %6 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 1
  %7 = bitcast %"class.v8::internal::Heap"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, -41416
  %10 = inttoptr i64 %9 to %"class.v8::internal::Isolate"*
  %11 = bitcast %"class.v8::internal::PrototypeIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %10, %"class.v8::internal::Isolate"** %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 1, i32 0, i32 0
  store i64 %2, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 2, i32 0, i32 0
  store i64* null, i64** %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 3
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 4
  store i8 0, i8* %16, align 4
  %17 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 6
  store i32 0, i32* %17, align 8
  call void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"* nonnull %4) #13
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 407
  %19 = load i64, i64* %18, align 8
  %20 = load i64, i64* %13, align 8
  call void @_ZN2v88internal14V8HeapExplorer20SetPropertyReferenceEPNS0_9HeapEntryENS0_4NameENS0_6ObjectEPKci(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i64 %19, i64 %20, i8* null, i32 -1)
  %21 = and i64 %2, -4294967296
  %22 = add i64 %2, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %21, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = icmp eq i16 %29, 1058
  br i1 %30, label %31, label %141

31:                                               ; preds = %3
  %32 = add i64 %2, 19
  %33 = inttoptr i64 %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %21, %35
  call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %36, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.273, i64 0, i64 0))
  %37 = load i32, i32* %33, align 4
  %38 = zext i32 %37 to i64
  %39 = or i64 %21, %38
  call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.274, i64 0, i64 0), i64 %39, i32 20)
  %40 = add i64 %2, 15
  %41 = inttoptr i64 %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = or i64 %21, %43
  call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.275, i64 0, i64 0), i64 %44, i32 16)
  %45 = add i64 %2, 11
  %46 = inttoptr i64 %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %21, %48
  call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.276, i64 0, i64 0), i64 %49, i32 12)
  %50 = load i32, i32* %33, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %21, %51
  %53 = add i64 %52, 3
  %54 = inttoptr i64 %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = icmp sgt i32 %55, 1
  br i1 %56, label %57, label %269

57:                                               ; preds = %31
  %58 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 3
  %59 = add i64 %52, 7
  %60 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 1, i32 0
  %61 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 4
  %62 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 0
  br label %63

63:                                               ; preds = %57, %135
  %64 = phi i64 [ 0, %57 ], [ %136, %135 ]
  %65 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %58, align 8
  %66 = trunc i64 %64 to i32
  %67 = call i8* (%"class.v8::internal::StringsStorage"*, i8*, ...) @_ZN2v88internal14StringsStorage12GetFormattedEPKcz(%"class.v8::internal::StringsStorage"* %65, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.277, i64 0, i64 0), i32 %66) #13
  %68 = trunc i64 %64 to i32
  %69 = shl i32 %68, 2
  %70 = sext i32 %69 to i64
  %71 = add i64 %59, %70
  %72 = inttoptr i64 %71 to i32*
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = zext i32 %73 to i64
  %75 = or i64 %21, %74
  %76 = call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8GetEntryENS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"* %0, i64 %75) #13
  %77 = icmp eq %"class.v8::internal::HeapEntry"* %76, null
  br i1 %77, label %135, label %78

78:                                               ; preds = %63
  %79 = ptrtoint i8* %67 to i64
  %80 = ptrtoint %"class.v8::internal::HeapEntry"* %76 to i64
  %81 = load i32, i32* %60, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %60, align 4
  %83 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %61, align 8
  %84 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %83, i64 0, i32 5, i32 0, i32 0, i32 2
  %85 = bitcast %"class.v8::internal::HeapGraphEdge"*** %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %83, i64 0, i32 5, i32 0, i32 0, i32 1
  %88 = bitcast %"class.v8::internal::HeapGraphEdge"*** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = sub i64 %86, %89
  %91 = ashr exact i64 %90, 3
  %92 = icmp eq i64 %90, 0
  %93 = mul i64 %91, 170
  %94 = add i64 %93, -1
  %95 = select i1 %92, i64 0, i64 %94
  %96 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %83, i64 0, i32 5, i32 0, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %83, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, %97
  %101 = icmp eq i64 %95, %100
  %102 = inttoptr i64 %89 to %"class.v8::internal::HeapGraphEdge"**
  %103 = inttoptr i64 %86 to %"class.v8::internal::HeapGraphEdge"**
  br i1 %101, label %104, label %111

104:                                              ; preds = %78
  %105 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %83, i64 0, i32 5
  call void @_ZNSt3__15dequeIN2v88internal13HeapGraphEdgeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.758"* %105) #13
  %106 = load i64, i64* %98, align 8
  %107 = load i64, i64* %96, align 8
  %108 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %87, align 8
  %109 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %84, align 8
  %110 = add i64 %107, %106
  br label %111

111:                                              ; preds = %104, %78
  %112 = phi i64 [ %110, %104 ], [ %100, %78 ]
  %113 = phi %"class.v8::internal::HeapGraphEdge"** [ %109, %104 ], [ %103, %78 ]
  %114 = phi %"class.v8::internal::HeapGraphEdge"** [ %108, %104 ], [ %102, %78 ]
  %115 = icmp eq %"class.v8::internal::HeapGraphEdge"** %113, %114
  br i1 %115, label %122, label %116

116:                                              ; preds = %111
  %117 = udiv i64 %112, 170
  %118 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %114, i64 %117
  %119 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %118, align 8
  %120 = urem i64 %112, 170
  %121 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %119, i64 %120
  br label %122

122:                                              ; preds = %116, %111
  %123 = phi %"class.v8::internal::HeapGraphEdge"* [ %121, %116 ], [ null, %111 ]
  %124 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %123, i64 0, i32 0
  %125 = load i32, i32* %62, align 8
  %126 = lshr i32 %125, 4
  %127 = shl nuw nsw i32 %126, 3
  %128 = or i32 %127, 5
  store i32 %128, i32* %124, align 8
  %129 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %123, i64 0, i32 1
  %130 = bitcast %"class.v8::internal::HeapEntry"** %129 to i64*
  store i64 %80, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %123, i64 0, i32 2, i32 0
  %132 = bitcast i8** %131 to i64*
  store i64 %79, i64* %132, align 8
  %133 = load i64, i64* %98, align 8
  %134 = add i64 %133, 1
  store i64 %134, i64* %98, align 8
  br label %135

135:                                              ; preds = %63, %122
  %136 = add nuw nsw i64 %64, 1
  %137 = load i32, i32* %54, align 4
  %138 = ashr i32 %137, 1
  %139 = sext i32 %138 to i64
  %140 = icmp slt i64 %136, %139
  br i1 %140, label %63, label %269

141:                                              ; preds = %3
  %142 = load atomic i32, i32* %23 monotonic, align 4
  %143 = zext i32 %142 to i64
  %144 = or i64 %21, %143
  %145 = add i64 %144, 7
  %146 = inttoptr i64 %145 to i16*
  %147 = load atomic i16, i16* %146 monotonic, align 2
  %148 = add i16 %147, -1059
  %149 = icmp ult i16 %148, 15
  br i1 %149, label %150, label %235

150:                                              ; preds = %141
  %151 = bitcast %"class.v8::internal::JSFunction"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151) #13
  %152 = getelementptr inbounds %"class.v8::internal::JSFunction", %"class.v8::internal::JSFunction"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %152, align 8
  %153 = load atomic i32, i32* %23 monotonic, align 4
  %154 = zext i32 %153 to i64
  %155 = or i64 %21, %154
  %156 = add i64 %155, 9
  %157 = inttoptr i64 %156 to i8*
  %158 = load atomic i8, i8* %157 monotonic, align 1
  %159 = icmp slt i8 %158, 0
  br i1 %159, label %160, label %194

160:                                              ; preds = %150
  %161 = add i64 %2, 27
  %162 = inttoptr i64 %161 to i32*
  %163 = load atomic i32, i32* %162 acquire, align 4
  %164 = zext i32 %163 to i64
  %165 = or i64 %21, %164
  %166 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 5
  %167 = load i64, i64* %166, align 8
  %168 = trunc i64 %167 to i32
  %169 = icmp eq i32 %163, %168
  br i1 %169, label %194, label %170

170:                                              ; preds = %160
  %171 = and i64 %164, 1
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %170
  %174 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 408
  %175 = load i64, i64* %174, align 8
  br label %188

176:                                              ; preds = %170
  %177 = add i64 %165, -1
  %178 = inttoptr i64 %177 to i32*
  %179 = load atomic i32, i32* %178 monotonic, align 4
  %180 = zext i32 %179 to i64
  %181 = or i64 %21, %180
  %182 = add i64 %181, 7
  %183 = inttoptr i64 %182 to i16*
  %184 = load atomic i16, i16* %183 monotonic, align 2
  %185 = icmp eq i16 %184, 172
  %186 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 408
  %187 = load i64, i64* %186, align 8
  br i1 %185, label %190, label %188

188:                                              ; preds = %173, %176
  %189 = phi i64 [ %175, %173 ], [ %187, %176 ]
  call void @_ZN2v88internal14V8HeapExplorer20SetPropertyReferenceEPNS0_9HeapEntryENS0_4NameENS0_6ObjectEPKci(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i64 %189, i64 %165, i8* null, i32 28)
  br label %194

190:                                              ; preds = %176
  %191 = load i64, i64* %152, align 8
  %192 = and i64 %191, -4294967296
  %193 = call i64 @_ZNK2v88internal10JSFunction9prototypeENS0_16PtrComprCageBaseE(%"class.v8::internal::JSFunction"* nonnull %5, i64 %192) #13
  call void @_ZN2v88internal14V8HeapExplorer20SetPropertyReferenceEPNS0_9HeapEntryENS0_4NameENS0_6ObjectEPKci(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i64 %187, i64 %193, i8* null, i32 -1)
  call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.278, i64 0, i64 0), i64 %165, i32 28)
  br label %194

194:                                              ; preds = %160, %190, %188, %150
  %195 = load i64, i64* %152, align 8
  %196 = add i64 %195, 11
  %197 = inttoptr i64 %196 to i32*
  %198 = load atomic i32, i32* %197 monotonic, align 4
  %199 = and i64 %195, -4294967296
  %200 = zext i32 %198 to i64
  %201 = or i64 %199, %200
  %202 = add i64 %195, 19
  %203 = inttoptr i64 %202 to i32*
  %204 = load i32, i32* %203, align 4
  %205 = zext i32 %204 to i64
  %206 = or i64 %199, %205
  call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %206, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.279, i64 0, i64 0))
  %207 = load i64, i64* %152, align 8
  %208 = and i64 %207, -4294967296
  %209 = add i64 %207, 19
  %210 = inttoptr i64 %209 to i32*
  %211 = load i32, i32* %210, align 4
  %212 = zext i32 %211 to i64
  %213 = or i64 %208, %212
  call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.280, i64 0, i64 0), i64 %213, i32 20)
  call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %201, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.281, i64 0, i64 0))
  call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.282, i64 0, i64 0), i64 %201, i32 12)
  %214 = load i64, i64* %152, align 8
  %215 = add i64 %214, 15
  %216 = inttoptr i64 %215 to i32*
  %217 = load i32, i32* %216, align 4
  %218 = and i64 %214, -4294967296
  %219 = zext i32 %217 to i64
  %220 = or i64 %218, %219
  call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %220, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.283, i64 0, i64 0))
  %221 = load i64, i64* %152, align 8
  %222 = add i64 %221, 15
  %223 = inttoptr i64 %222 to i32*
  %224 = load i32, i32* %223, align 4
  %225 = and i64 %221, -4294967296
  %226 = zext i32 %224 to i64
  %227 = or i64 %225, %226
  call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.284, i64 0, i64 0), i64 %227, i32 16)
  %228 = load i64, i64* %152, align 8
  %229 = add i64 %228, 23
  %230 = inttoptr i64 %229 to i32*
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i64 %228, -4294967296
  %233 = zext i32 %231 to i64
  %234 = or i64 %232, %233
  call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.285, i64 0, i64 0), i64 %234, i32 24)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151) #13
  br label %269

235:                                              ; preds = %141
  %236 = load atomic i32, i32* %23 monotonic, align 4
  %237 = zext i32 %236 to i64
  %238 = or i64 %21, %237
  %239 = add i64 %238, 7
  %240 = inttoptr i64 %239 to i16*
  %241 = load atomic i16, i16* %240 monotonic, align 2
  %242 = icmp eq i16 %241, 189
  br i1 %242, label %243, label %254

243:                                              ; preds = %235
  %244 = add i64 %2, 11
  %245 = inttoptr i64 %244 to i32*
  %246 = load i32, i32* %245, align 4
  %247 = zext i32 %246 to i64
  %248 = or i64 %21, %247
  call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.272, i64 0, i64 0), i64 %248, i32 12)
  %249 = add i64 %2, 15
  %250 = inttoptr i64 %249 to i32*
  %251 = load i32, i32* %250, align 4
  %252 = zext i32 %251 to i64
  %253 = or i64 %21, %252
  call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.286, i64 0, i64 0), i64 %253, i32 16)
  br label %269

254:                                              ; preds = %235
  %255 = load atomic i32, i32* %23 monotonic, align 4
  %256 = zext i32 %255 to i64
  %257 = or i64 %21, %256
  %258 = add i64 %257, 7
  %259 = inttoptr i64 %258 to i16*
  %260 = load atomic i16, i16* %259 monotonic, align 2
  %261 = add i16 %260, -1079
  %262 = icmp ult i16 %261, 2
  br i1 %262, label %263, label %269

263:                                              ; preds = %254
  %264 = add i64 %2, 11
  %265 = inttoptr i64 %264 to i32*
  %266 = load i32, i32* %265, align 4
  %267 = zext i32 %266 to i64
  %268 = or i64 %21, %267
  call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.287, i64 0, i64 0), i64 %268, i32 12)
  br label %269

269:                                              ; preds = %135, %31, %194, %254, %263, %243
  %270 = add i64 %2, 3
  %271 = inttoptr i64 %270 to i32*
  %272 = load i32, i32* %271, align 4
  %273 = zext i32 %272 to i64
  %274 = or i64 %21, %273
  call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %274, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.288, i64 0, i64 0))
  %275 = load i32, i32* %271, align 4
  %276 = zext i32 %275 to i64
  %277 = or i64 %21, %276
  call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.289, i64 0, i64 0), i64 %277, i32 4)
  %278 = add i64 %2, 7
  %279 = inttoptr i64 %278 to i32*
  %280 = load i32, i32* %279, align 4
  %281 = zext i32 %280 to i64
  %282 = or i64 %21, %281
  call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %282, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.290, i64 0, i64 0))
  %283 = load i32, i32* %279, align 4
  %284 = zext i32 %283 to i64
  %285 = or i64 %21, %284
  call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.291, i64 0, i64 0), i64 %285, i32 8)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer23ExtractStringReferencesEPNS0_9HeapEntryENS0_6StringE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = and i64 %2, -4294967296
  %5 = add i64 %2, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = icmp ult i16 %12, 64
  br i1 %13, label %14, label %34

14:                                               ; preds = %3
  %15 = load atomic i32, i32* %6 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %4, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = and i16 %20, 7
  %22 = icmp eq i16 %21, 1
  br i1 %22, label %23, label %34

23:                                               ; preds = %14
  %24 = add i64 %2, 11
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %4, %27
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.292, i64 0, i64 0), i64 %28, i32 12)
  %29 = add i64 %2, 15
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = or i64 %4, %32
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.293, i64 0, i64 0), i64 %33, i32 16)
  br label %80

34:                                               ; preds = %3, %14
  %35 = load atomic i32, i32* %6 monotonic, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %4, %36
  %38 = add i64 %37, 7
  %39 = inttoptr i64 %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = icmp ult i16 %40, 64
  br i1 %41, label %42, label %57

42:                                               ; preds = %34
  %43 = load atomic i32, i32* %6 monotonic, align 4
  %44 = zext i32 %43 to i64
  %45 = or i64 %4, %44
  %46 = add i64 %45, 7
  %47 = inttoptr i64 %46 to i16*
  %48 = load atomic i16, i16* %47 monotonic, align 2
  %49 = and i16 %48, 7
  %50 = icmp eq i16 %49, 3
  br i1 %50, label %51, label %57

51:                                               ; preds = %42
  %52 = add i64 %2, 11
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i64
  %56 = or i64 %4, %55
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.294, i64 0, i64 0), i64 %56, i32 12)
  br label %80

57:                                               ; preds = %34, %42
  %58 = load atomic i32, i32* %6 monotonic, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %4, %59
  %61 = add i64 %60, 7
  %62 = inttoptr i64 %61 to i16*
  %63 = load atomic i16, i16* %62 monotonic, align 2
  %64 = icmp ult i16 %63, 64
  br i1 %64, label %65, label %80

65:                                               ; preds = %57
  %66 = load atomic i32, i32* %6 monotonic, align 4
  %67 = zext i32 %66 to i64
  %68 = or i64 %4, %67
  %69 = add i64 %68, 7
  %70 = inttoptr i64 %69 to i16*
  %71 = load atomic i16, i16* %70 monotonic, align 2
  %72 = and i16 %71, 7
  %73 = icmp eq i16 %72, 5
  br i1 %73, label %74, label %80

74:                                               ; preds = %65
  %75 = add i64 %2, 11
  %76 = inttoptr i64 %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  %79 = or i64 %4, %78
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.295, i64 0, i64 0), i64 %79, i32 12)
  br label %80

80:                                               ; preds = %57, %51, %74, %65, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer23ExtractSymbolReferencesEPNS0_9HeapEntryENS0_6SymbolE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = and i64 %2, -4294967296
  %5 = add i64 %2, 11
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i64 0, i64 0), i64 %9, i32 12)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer20ExtractMapReferencesEPNS0_9HeapEntryENS0_3MapE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = and i64 %2, -4294967296
  %5 = add i64 %2, 35
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = and i64 %8, 3
  %11 = icmp eq i64 %10, 3
  %12 = icmp ne i32 %7, 3
  %13 = and i1 %12, %11
  br i1 %13, label %14, label %16

14:                                               ; preds = %3
  %15 = and i64 %9, -3
  tail call void @_ZN2v88internal14V8HeapExplorer16SetWeakReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.306, i64 0, i64 0), i64 %15, i32 36)
  br label %60

16:                                               ; preds = %3
  %17 = icmp eq i64 %10, 1
  br i1 %17, label %18, label %60

18:                                               ; preds = %16
  %19 = add i64 %9, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %4, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = icmp eq i16 %26, 160
  br i1 %27, label %28, label %43

28:                                               ; preds = %18
  %29 = add i64 %2, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = icmp ugt i16 %31, 188
  br i1 %32, label %33, label %42

33:                                               ; preds = %28
  %34 = add i64 %9, 7
  %35 = inttoptr i64 %34 to i32*
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %33
  %39 = load atomic i32, i32* %35 monotonic, align 4
  %40 = zext i32 %39 to i64
  %41 = or i64 %4, %40
  tail call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %41, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.307, i64 0, i64 0))
  br label %42

42:                                               ; preds = %33, %38, %28
  tail call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %9, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.308, i64 0, i64 0))
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.309, i64 0, i64 0), i64 %9, i32 36)
  br label %60

43:                                               ; preds = %18
  %44 = load atomic i32, i32* %20 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %4, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = add i16 %49, -119
  %51 = icmp ult i16 %50, 13
  br i1 %51, label %52, label %53

52:                                               ; preds = %43
  tail call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.310, i64 0, i64 0))
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.306, i64 0, i64 0), i64 %9, i32 36)
  br label %60

53:                                               ; preds = %43
  %54 = add i64 %2, 11
  %55 = inttoptr i64 %54 to i32*
  %56 = load atomic i32, i32* %55 acquire, align 4
  %57 = and i32 %56, 1048576
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59

59:                                               ; preds = %53
  tail call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %9, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.311, i64 0, i64 0))
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.311, i64 0, i64 0), i64 %9, i32 36)
  br label %60

60:                                               ; preds = %53, %16, %52, %59, %42, %14
  %61 = add i64 %2, 23
  %62 = inttoptr i64 %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %4, %64
  tail call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %65, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.312, i64 0, i64 0))
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.313, i64 0, i64 0), i64 %65, i32 24)
  %66 = add i64 %2, 15
  %67 = inttoptr i64 %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %4, %69
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.314, i64 0, i64 0), i64 %70, i32 16)
  %71 = add i64 %2, 7
  %72 = inttoptr i64 %71 to i16*
  %73 = load atomic i16, i16* %72 monotonic, align 2
  %74 = add i16 %73, -137
  %75 = icmp ult i16 %74, 10
  %76 = add i64 %2, 19
  %77 = inttoptr i64 %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %4, %79
  br i1 %75, label %81, label %82

81:                                               ; preds = %60
  tail call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %80, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.315, i64 0, i64 0))
  br label %105

82:                                               ; preds = %60
  %83 = and i64 %79, 1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %105, label %85

85:                                               ; preds = %82
  %86 = add i64 %80, -1
  %87 = inttoptr i64 %86 to i32*
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = zext i32 %88 to i64
  %90 = or i64 %4, %89
  %91 = add i64 %90, 7
  %92 = inttoptr i64 %91 to i16*
  %93 = load atomic i16, i16* %92 monotonic, align 2
  %94 = icmp eq i16 %93, 172
  br i1 %94, label %95, label %96

95:                                               ; preds = %85
  tail call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %80, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.316, i64 0, i64 0))
  br label %105

96:                                               ; preds = %85
  %97 = load atomic i32, i32* %87 monotonic, align 4
  %98 = zext i32 %97 to i64
  %99 = or i64 %4, %98
  %100 = add i64 %99, 7
  %101 = inttoptr i64 %100 to i16*
  %102 = load atomic i16, i16* %101 monotonic, align 2
  %103 = icmp eq i16 %102, 83
  br i1 %103, label %104, label %105

104:                                              ; preds = %96
  tail call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %80, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.318, i64 0, i64 0))
  br label %105

105:                                              ; preds = %96, %82, %95, %104, %81
  %106 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.317, i64 0, i64 0), %95 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.319, i64 0, i64 0), %104 ], [ getelementptr inbounds ([15 x i8], [15 x i8]* @.str.272, i64 0, i64 0), %81 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.320, i64 0, i64 0), %82 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.320, i64 0, i64 0), %96 ]
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* %106, i64 %80, i32 20)
  %107 = add i64 %2, 27
  %108 = inttoptr i64 %107 to i32*
  %109 = load i32, i32* %108, align 4
  %110 = zext i32 %109 to i64
  %111 = or i64 %4, %110
  tail call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %111, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.321, i64 0, i64 0))
  %112 = load i32, i32* %108, align 4
  %113 = zext i32 %112 to i64
  %114 = or i64 %4, %113
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.322, i64 0, i64 0), i64 %114, i32 28)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer35ExtractSharedFunctionInfoReferencesEPNS0_9HeapEntryENS0_18SharedFunctionInfoE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %5 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %5, align 8
  %6 = call i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %4) #13
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  %9 = call i64 @_ZNK2v88internal18SharedFunctionInfo7GetCodeEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %4) #13
  %10 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 3
  %11 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %10, align 8
  br i1 %8, label %14, label %12

12:                                               ; preds = %3
  %13 = call i8* (%"class.v8::internal::StringsStorage"*, i8*, ...) @_ZN2v88internal14StringsStorage12GetFormattedEPKcz(%"class.v8::internal::StringsStorage"* %11, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.323, i64 0, i64 0), i8* %6) #13
  br label %22

14:                                               ; preds = %3
  %15 = call i64 @_ZNK2v88internal18SharedFunctionInfo7GetCodeEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %4) #13
  %16 = add i64 %15, 27
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 15
  %20 = call i8* @_ZN2v88internal16CodeKindToStringENS0_8CodeKindE(i32 %19) #13
  %21 = call i8* (%"class.v8::internal::StringsStorage"*, i8*, ...) @_ZN2v88internal14StringsStorage12GetFormattedEPKcz(%"class.v8::internal::StringsStorage"* %11, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.324, i64 0, i64 0), i8* %20) #13
  br label %22

22:                                               ; preds = %14, %12
  %23 = phi i8* [ %21, %14 ], [ %13, %12 ]
  call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %9, i8* %23)
  %24 = load i64, i64* %5, align 8
  %25 = and i64 %24, -4294967296
  %26 = add i64 %24, 7
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 acquire, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %25, %29
  %31 = and i64 %29, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %44, label %33

33:                                               ; preds = %22
  %34 = add i64 %30, -1
  %35 = inttoptr i64 %34 to i32*
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %25, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i16*
  %41 = load atomic i16, i16* %40 monotonic, align 2
  %42 = icmp eq i16 %41, 178
  br i1 %42, label %43, label %44

43:                                               ; preds = %33
  call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %30, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.325, i64 0, i64 0))
  br label %44

44:                                               ; preds = %22, %43, %33
  call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.326, i64 0, i64 0), i64 %30, i32 8)
  %45 = load i64, i64* %5, align 8
  %46 = and i64 %45, -4294967296
  %47 = add i64 %45, 15
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 acquire, align 4
  %50 = zext i32 %49 to i64
  %51 = or i64 %46, %50
  call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.327, i64 0, i64 0), i64 %51, i32 16)
  %52 = load i64, i64* %5, align 8
  %53 = and i64 %52, -4294967296
  %54 = add i64 %52, 3
  %55 = inttoptr i64 %54 to i32*
  %56 = load atomic i32, i32* %55 acquire, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %53, %57
  call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.328, i64 0, i64 0), i64 %58, i32 4)
  %59 = load i64, i64* %5, align 8
  %60 = and i64 %59, -4294967296
  %61 = add i64 %59, 11
  %62 = inttoptr i64 %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %60, %64
  call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.329, i64 0, i64 0), i64 %65, i32 12)
  %66 = icmp eq i8* %6, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %44
  call void @_ZdaPv(i8* nonnull %6) #21
  br label %68

68:                                               ; preds = %44, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer23ExtractScriptReferencesEPNS0_9HeapEntryENS0_6ScriptE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = and i64 %2, -4294967296
  %5 = add i64 %2, 3
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.330, i64 0, i64 0), i64 %9, i32 4)
  %10 = add i64 %2, 7
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %4, %13
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i64 0, i64 0), i64 %14, i32 8)
  %15 = add i64 %2, 19
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %4, %18
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.331, i64 0, i64 0), i64 %19, i32 20)
  %20 = add i64 %2, 27
  %21 = inttoptr i64 %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %4, %23
  tail call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %24, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.332, i64 0, i64 0))
  %25 = load i32, i32* %21, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %4, %26
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.333, i64 0, i64 0), i64 %27, i32 28)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer29ExtractAccessorInfoReferencesEPNS0_9HeapEntryENS0_12AccessorInfoE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = and i64 %2, -4294967296
  %5 = add i64 %2, 3
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i64 0, i64 0), i64 %9, i32 4)
  %10 = add i64 %2, 11
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %4, %13
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.334, i64 0, i64 0), i64 %14, i32 12)
  %15 = add i64 %2, 19
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %4, %18
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.335, i64 0, i64 0), i64 %19, i32 20)
  %20 = add i64 %2, 15
  %21 = inttoptr i64 %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %4, %23
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.336, i64 0, i64 0), i64 %24, i32 16)
  %25 = add i64 %2, 27
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %4, %28
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.337, i64 0, i64 0), i64 %29, i32 28)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer29ExtractAccessorPairReferencesEPNS0_9HeapEntryENS0_12AccessorPairE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = and i64 %2, -4294967296
  %5 = add i64 %2, 3
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.335, i64 0, i64 0), i64 %9, i32 4)
  %10 = add i64 %2, 7
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %4, %13
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.336, i64 0, i64 0), i64 %14, i32 8)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer21ExtractCodeReferencesEPNS0_9HeapEntryENS0_4CodeE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = and i64 %2, -4294967296
  %5 = add i64 %2, 3
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  tail call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %9, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.339, i64 0, i64 0))
  %10 = load i32, i32* %6, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %4, %11
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.340, i64 0, i64 0), i64 %12, i32 4)
  %13 = add i64 %2, 7
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %4, %16
  tail call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %17, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.341, i64 0, i64 0))
  %18 = load i32, i32* %14, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %4, %19
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.342, i64 0, i64 0), i64 %20, i32 8)
  %21 = add i64 %2, 27
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 15
  %25 = icmp eq i32 %24, 11
  %26 = add i64 %2, 11
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %4, %29
  %31 = select i1 %25, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.343, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.345, i64 0, i64 0)
  %32 = select i1 %25, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.344, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.346, i64 0, i64 0)
  tail call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %30, i8* %31)
  %33 = load i32, i32* %27, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %4, %34
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* %32, i64 %35, i32 12)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer21ExtractCellReferencesEPNS0_9HeapEntryENS0_4CellE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = and i64 %2, -4294967296
  %5 = add i64 %2, 3
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.347, i64 0, i64 0), i64 %9, i32 4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer29ExtractFeedbackCellReferencesEPNS0_9HeapEntryENS0_12FeedbackCellE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i64) local_unnamed_addr #2 align 2 {
  tail call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.348, i64 0, i64 0))
  %4 = and i64 %2, -4294967296
  %5 = add i64 %2, 3
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.347, i64 0, i64 0), i64 %9, i32 4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer29ExtractPropertyCellReferencesEPNS0_9HeapEntryENS0_12PropertyCellE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = and i64 %2, -4294967296
  %5 = add i64 %2, 11
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.347, i64 0, i64 0), i64 %9, i32 12)
  %10 = add i64 %2, 15
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %4, %13
  tail call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %14, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.321, i64 0, i64 0))
  %15 = load i32, i32* %11, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %4, %16
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.322, i64 0, i64 0), i64 %17, i32 16)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer31ExtractAllocationSiteReferencesEPNS0_9HeapEntryENS0_14AllocationSiteE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = and i64 %2, -4294967296
  %5 = add i64 %2, 3
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.349, i64 0, i64 0), i64 %9, i32 4)
  %10 = add i64 %2, 7
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %4, %13
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.350, i64 0, i64 0), i64 %14, i32 8)
  %15 = add i64 %2, 11
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %4, %18
  tail call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %19, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.321, i64 0, i64 0))
  %20 = load i32, i32* %16, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %4, %21
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.322, i64 0, i64 0), i64 %22, i32 12)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer44ExtractArrayBoilerplateDescriptionReferencesEPNS0_9HeapEntryENS0_27ArrayBoilerplateDescriptionE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = and i64 %2, -4294967296
  %5 = add i64 %2, 7
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.351, i64 0, i64 0), i64 %9, i32 8)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer31ExtractFeedbackVectorReferencesEPNS0_9HeapEntryENS0_14FeedbackVectorE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = add i64 %2, 23
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 3
  %10 = icmp ne i32 %6, 3
  %11 = and i1 %10, %9
  br i1 %11, label %12, label %16

12:                                               ; preds = %3
  %13 = and i64 %2, -4294967296
  %14 = and i64 %7, 4294967293
  %15 = or i64 %14, %13
  tail call void @_ZN2v88internal14V8HeapExplorer16SetWeakReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.357, i64 0, i64 0), i64 %15, i32 24)
  br label %16

16:                                               ; preds = %3, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer32ExtractDescriptorArrayReferencesEPNS0_9HeapEntryENS0_15DescriptorArrayE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = and i64 %2, -4294967296
  %5 = add i64 %2, 11
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.358, i64 0, i64 0), i64 %9, i32 12)
  %10 = add i64 %2, 15
  %11 = add i64 %2, 3
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = sext i16 %13 to i64
  %15 = mul nsw i64 %14, 12
  %16 = add i64 %10, %15
  %17 = icmp ult i64 %10, %16
  br i1 %17, label %18, label %20

18:                                               ; preds = %3
  %19 = sub i64 1, %2
  br label %21

20:                                               ; preds = %42, %3
  ret void

21:                                               ; preds = %18, %42
  %22 = phi i64 [ 0, %18 ], [ %43, %42 ]
  %23 = phi i64 [ %10, %18 ], [ %45, %42 ]
  %24 = add i64 %19, %23
  %25 = trunc i64 %24 to i32
  %26 = inttoptr i64 %23 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = and i64 %23, -4294967296
  %29 = zext i32 %27 to i64
  %30 = or i64 %28, %29
  %31 = and i64 %29, 3
  %32 = icmp eq i64 %31, 3
  %33 = icmp ne i32 %27, 3
  %34 = and i1 %33, %32
  br i1 %34, label %35, label %38

35:                                               ; preds = %21
  %36 = and i64 %30, -3
  %37 = trunc i64 %22 to i32
  tail call void @_ZN2v88internal14V8HeapExplorer16SetWeakReferenceEPNS0_9HeapEntryEiNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i32 %37, i64 %36, i32 %25)
  br label %42

38:                                               ; preds = %21
  %39 = icmp eq i64 %31, 1
  br i1 %39, label %40, label %42

40:                                               ; preds = %38
  %41 = trunc i64 %22 to i32
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEiNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i32 %41, i64 %30, i32 %25)
  br label %42

42:                                               ; preds = %38, %40, %35
  %43 = add nuw i64 %22, 1
  %44 = shl nuw nsw i64 %43, 2
  %45 = add i64 %10, %44
  %46 = icmp ult i64 %45, %16
  br i1 %46, label %21, label %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer24ExtractContextReferencesEPNS0_9HeapEntryENS0_7ContextE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.v8::internal::ScopeInfo", align 8
  %5 = alloca %"class.v8::internal::Context", align 8
  %6 = alloca %"class.v8::internal::ScopeInfo", align 8
  %7 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %7, align 8
  %8 = and i64 %2, -4294967296
  %9 = add i64 %2, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = icmp eq i16 %16, 144
  br i1 %17, label %66, label %18

18:                                               ; preds = %3
  %19 = call zeroext i1 @_ZN2v88internal7Context22is_declaration_contextEv(%"class.v8::internal::Context"* nonnull %5) #13
  br i1 %19, label %20, label %66

20:                                               ; preds = %18
  %21 = bitcast %"class.v8::internal::ScopeInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  %22 = call i64 @_ZN2v88internal7Context10scope_infoEv(%"class.v8::internal::Context"* nonnull %5) #13
  %23 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = add i64 %22, 11
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = ashr i32 %26, 1
  %28 = icmp sgt i32 %26, 1
  br i1 %28, label %31, label %29

29:                                               ; preds = %31, %20
  %30 = call zeroext i1 @_ZNK2v88internal9ScopeInfo15HasFunctionNameEv(%"class.v8::internal::ScopeInfo"* nonnull %6) #13
  br i1 %30, label %49, label %65

31:                                               ; preds = %20, %31
  %32 = phi i32 [ %47, %31 ], [ 0, %20 ]
  %33 = call i64 @_ZNK2v88internal9ScopeInfo16ContextLocalNameEi(%"class.v8::internal::ScopeInfo"* nonnull %6, i32 %32) #13
  %34 = call i32 @_ZNK2v88internal9ScopeInfo19ContextHeaderLengthEv(%"class.v8::internal::ScopeInfo"* nonnull %6) #13
  %35 = add nsw i32 %34, %32
  %36 = load i64, i64* %7, align 8
  %37 = and i64 %36, -4294967296
  %38 = shl i32 %35, 2
  %39 = sext i32 %38 to i64
  %40 = add i64 %36, 7
  %41 = add i64 %40, %39
  %42 = inttoptr i64 %41 to i32*
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = zext i32 %43 to i64
  %45 = or i64 %37, %44
  %46 = add nsw i32 %38, 8
  call void @_ZN2v88internal14V8HeapExplorer19SetContextReferenceEPNS0_9HeapEntryENS0_6StringENS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i64 %33, i64 %45, i32 %46)
  %47 = add nuw nsw i32 %32, 1
  %48 = icmp slt i32 %47, %27
  br i1 %48, label %31, label %29

49:                                               ; preds = %29
  %50 = call i64 @_ZNK2v88internal9ScopeInfo12FunctionNameEv(%"class.v8::internal::ScopeInfo"* nonnull %6) #13
  %51 = call i32 @_ZNK2v88internal9ScopeInfo24FunctionContextSlotIndexENS0_6StringE(%"class.v8::internal::ScopeInfo"* nonnull %6, i64 %50) #13
  %52 = icmp sgt i32 %51, -1
  br i1 %52, label %53, label %65

53:                                               ; preds = %49
  %54 = load i64, i64* %7, align 8
  %55 = and i64 %54, -4294967296
  %56 = shl i32 %51, 2
  %57 = sext i32 %56 to i64
  %58 = add nsw i64 %57, 7
  %59 = add i64 %58, %54
  %60 = inttoptr i64 %59 to i32*
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = zext i32 %61 to i64
  %63 = or i64 %55, %62
  %64 = add nsw i32 %56, 8
  call void @_ZN2v88internal14V8HeapExplorer19SetContextReferenceEPNS0_9HeapEntryENS0_6StringENS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i64 %50, i64 %63, i32 %64)
  br label %65

65:                                               ; preds = %49, %53, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %66

66:                                               ; preds = %65, %18, %3
  %67 = load i64, i64* %7, align 8
  %68 = and i64 %67, -4294967296
  %69 = add i64 %67, 7
  %70 = inttoptr i64 %69 to i32*
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = zext i32 %71 to i64
  %73 = or i64 %68, %72
  call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.299, i64 0, i64 0), i64 %73, i32 8)
  %74 = load i64, i64* %7, align 8
  %75 = and i64 %74, -4294967296
  %76 = add i64 %74, 11
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %75, %79
  call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.300, i64 0, i64 0), i64 %80, i32 12)
  %81 = bitcast %"class.v8::internal::ScopeInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #13
  %82 = call i64 @_ZN2v88internal7Context10scope_infoEv(%"class.v8::internal::Context"* nonnull %5) #13
  %83 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %82, i64* %83, align 8
  %84 = call zeroext i1 @_ZNK2v88internal9ScopeInfo23HasContextExtensionSlotEv(%"class.v8::internal::ScopeInfo"* nonnull %4) #13
  br i1 %84, label %86, label %85

85:                                               ; preds = %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #13
  br label %120

86:                                               ; preds = %66
  %87 = load i64, i64* %7, align 8
  %88 = and i64 %87, -4294967296
  %89 = add i64 %87, 15
  %90 = inttoptr i64 %89 to i32*
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %93 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %92, null
  br i1 %93, label %100, label %94

94:                                               ; preds = %86
  %95 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %92, i64 0, i32 0, i32 1
  %96 = load i8, i8* %95, align 8, !range !4
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %100, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %92, i64 0, i32 1, i64 0
  br label %110

100:                                              ; preds = %94, %86
  %101 = and i32 %91, -262144
  %102 = zext i32 %101 to i64
  %103 = or i64 %88, %102
  %104 = or i64 %103, 16
  %105 = inttoptr i64 %104 to i64*
  %106 = load i64, i64* %105, align 16
  %107 = add i64 %106, -41416
  %108 = inttoptr i64 %107 to %"class.v8::internal::Isolate"*
  %109 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %108, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %110

110:                                              ; preds = %98, %100
  %111 = phi i64* [ %109, %100 ], [ %99, %98 ]
  %112 = getelementptr inbounds i64, i64* %111, i64 4
  %113 = load i64, i64* %112, align 8
  %114 = trunc i64 %113 to i32
  %115 = icmp eq i32 %91, %114
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #13
  br i1 %115, label %120, label %116

116:                                              ; preds = %110
  %117 = load atomic i32, i32* %90 monotonic, align 4
  %118 = zext i32 %117 to i64
  %119 = or i64 %88, %118
  call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.301, i64 0, i64 0), i64 %119, i32 16)
  br label %120

120:                                              ; preds = %110, %85, %116
  %121 = load i64, i64* %7, align 8
  %122 = and i64 %121, -4294967296
  %123 = add i64 %121, -1
  %124 = inttoptr i64 %123 to i32*
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = zext i32 %125 to i64
  %127 = or i64 %122, %126
  %128 = add i64 %127, 7
  %129 = inttoptr i64 %128 to i16*
  %130 = load atomic i16, i16* %129 monotonic, align 2
  %131 = icmp eq i16 %130, 144
  br i1 %131, label %132, label %179

132:                                              ; preds = %120
  %133 = add i64 %121, 563
  %134 = inttoptr i64 %133 to i32*
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = zext i32 %135 to i64
  %137 = or i64 %122, %136
  call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %137, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.302, i64 0, i64 0))
  %138 = load i64, i64* %7, align 8
  %139 = and i64 %138, -4294967296
  %140 = add i64 %138, 23
  %141 = inttoptr i64 %140 to i32*
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = zext i32 %142 to i64
  %144 = or i64 %139, %143
  call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %144, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.303, i64 0, i64 0))
  br label %160

145:                                              ; preds = %160
  %146 = load i64, i64* %7, align 8
  %147 = and i64 %146, -4294967296
  %148 = add i64 %146, 1015
  %149 = inttoptr i64 %148 to i32*
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = zext i32 %150 to i64
  %152 = or i64 %147, %151
  call void @_ZN2v88internal14V8HeapExplorer16SetWeakReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.304, i64 0, i64 0), i64 %152, i32 1016)
  %153 = load i64, i64* %7, align 8
  %154 = and i64 %153, -4294967296
  %155 = add i64 %153, 1019
  %156 = inttoptr i64 %155 to i32*
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = zext i32 %157 to i64
  %159 = or i64 %154, %158
  call void @_ZN2v88internal14V8HeapExplorer16SetWeakReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.305, i64 0, i64 0), i64 %159, i32 1020)
  br label %179

160:                                              ; preds = %160, %132
  %161 = phi i64 [ 0, %132 ], [ %177, %160 ]
  %162 = getelementptr inbounds [249 x %struct.anon.1470], [249 x %struct.anon.1470]* @_ZN2v88internalL20native_context_namesE, i64 0, i64 %161, i32 0
  %163 = load i32, i32* %162, align 16
  %164 = getelementptr inbounds [249 x %struct.anon.1470], [249 x %struct.anon.1470]* @_ZN2v88internalL20native_context_namesE, i64 0, i64 %161, i32 1
  %165 = load i8*, i8** %164, align 8
  %166 = load i64, i64* %7, align 8
  %167 = and i64 %166, -4294967296
  %168 = shl i32 %163, 2
  %169 = sext i32 %168 to i64
  %170 = add nsw i64 %169, 7
  %171 = add i64 %170, %166
  %172 = inttoptr i64 %171 to i32*
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = zext i32 %173 to i64
  %175 = or i64 %167, %174
  %176 = add nsw i32 %168, 8
  call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i8* %165, i64 %175, i32 %176)
  %177 = add nuw nsw i64 %161, 1
  %178 = icmp eq i64 %177, 249
  br i1 %178, label %145, label %160

179:                                              ; preds = %145, %120
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer35ExtractEphemeronHashTableReferencesEPNS0_9HeapEntryENS0_18EphemeronHashTableE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = add i64 %2, 15
  %5 = inttoptr i64 %4 to i32*
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = ashr i32 %6, 1
  %8 = sext i32 %7 to i64
  %9 = icmp eq i32 %7, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %3
  %11 = and i64 %2, -4294967296
  %12 = add i64 %2, 7
  %13 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 3
  br label %15

14:                                               ; preds = %85, %3
  ret void

15:                                               ; preds = %10, %85
  %16 = phi i64 [ 0, %10 ], [ %86, %85 ]
  %17 = trunc i64 %16 to i32
  %18 = shl i32 %17, 1
  %19 = add nsw i32 %18, 3
  %20 = add nsw i32 %18, 4
  %21 = shl i32 %19, 2
  %22 = sext i32 %21 to i64
  %23 = add i64 %12, %22
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %11, %26
  %28 = shl i32 %20, 2
  %29 = or i32 %28, 7
  %30 = sext i32 %29 to i64
  %31 = add i64 %30, %2
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %11, %34
  %36 = add nsw i32 %21, 8
  tail call void @_ZN2v88internal14V8HeapExplorer16SetWeakReferenceEPNS0_9HeapEntryEiNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i32 %19, i64 %27, i32 %36)
  %37 = add nsw i32 %28, 8
  tail call void @_ZN2v88internal14V8HeapExplorer16SetWeakReferenceEPNS0_9HeapEntryEiNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i32 %20, i64 %35, i32 %37)
  %38 = tail call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8GetEntryENS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"* %0, i64 %27)
  %39 = tail call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8GetEntryENS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"* %0, i64 %35)
  %40 = tail call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8GetEntryENS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"* %0, i64 %2)
  %41 = icmp ne %"class.v8::internal::HeapEntry"* %38, null
  %42 = icmp ne %"class.v8::internal::HeapEntry"* %39, null
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %85

44:                                               ; preds = %15
  %45 = and i64 %26, 1
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %70, label %47

47:                                               ; preds = %44
  %48 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %49 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %48, null
  br i1 %49, label %56, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %48, i64 0, i32 0, i32 1
  %52 = load i8, i8* %51, align 8, !range !4
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %48, i64 0, i32 1, i64 0
  br label %64

56:                                               ; preds = %50, %47
  %57 = and i64 %27, -262144
  %58 = or i64 %57, 16
  %59 = inttoptr i64 %58 to i64*
  %60 = load i64, i64* %59, align 16
  %61 = add i64 %60, -41416
  %62 = inttoptr i64 %61 to %"class.v8::internal::Isolate"*
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %62, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %64

64:                                               ; preds = %54, %56
  %65 = phi i64* [ %63, %56 ], [ %55, %54 ]
  %66 = getelementptr inbounds i64, i64* %65, i64 4
  %67 = load i64, i64* %66, align 8
  %68 = trunc i64 %67 to i32
  %69 = icmp eq i32 %25, %68
  br i1 %69, label %85, label %70

70:                                               ; preds = %44, %64
  %71 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %13, align 8
  %72 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %38, i64 0, i32 5
  %73 = load i8*, i8** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %38, i64 0, i32 6
  %75 = load i32, i32* %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %39, i64 0, i32 5
  %77 = load i8*, i8** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %39, i64 0, i32 6
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %40, i64 0, i32 6
  %81 = load i32, i32* %80, align 8
  %82 = tail call i8* (%"class.v8::internal::StringsStorage"*, i8*, ...) @_ZN2v88internal14StringsStorage12GetFormattedEPKcz(%"class.v8::internal::StringsStorage"* %71, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.298, i64 0, i64 0), i8* %73, i32 %75, i8* %77, i32 %79, i32 %81) #13
  %83 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %13, align 8
  tail call void @_ZN2v88internal9HeapEntry26SetNamedAutoIndexReferenceENS0_13HeapGraphEdge4TypeEPKcPS1_PNS0_14StringsStorageE(%"class.v8::internal::HeapEntry"* nonnull %38, i32 3, i8* %82, %"class.v8::internal::HeapEntry"* nonnull %39, %"class.v8::internal::StringsStorage"* %83)
  %84 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %13, align 8
  tail call void @_ZN2v88internal9HeapEntry26SetNamedAutoIndexReferenceENS0_13HeapGraphEdge4TypeEPKcPS1_PNS0_14StringsStorageE(%"class.v8::internal::HeapEntry"* %40, i32 3, i8* %82, %"class.v8::internal::HeapEntry"* nonnull %39, %"class.v8::internal::StringsStorage"* %84)
  br label %85

85:                                               ; preds = %70, %64, %15
  %86 = add i64 %16, 1
  %87 = icmp eq i64 %86, %8
  br i1 %87, label %14, label %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer27ExtractFixedArrayReferencesEPNS0_9HeapEntryENS0_10FixedArrayE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = add i64 %2, 3
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 1
  br i1 %7, label %8, label %13

8:                                                ; preds = %3
  %9 = lshr i32 %6, 1
  %10 = and i64 %2, -4294967296
  %11 = add i64 %2, 7
  %12 = zext i32 %9 to i64
  br label %14

13:                                               ; preds = %14, %3
  ret void

14:                                               ; preds = %8, %14
  %15 = phi i64 [ 0, %8 ], [ %26, %14 ]
  %16 = trunc i64 %15 to i32
  %17 = shl i32 %16, 2
  %18 = sext i32 %17 to i64
  %19 = add i64 %11, %18
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %10, %22
  %24 = add nsw i32 %17, 8
  %25 = trunc i64 %15 to i32
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEiNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i32 %25, i64 %23, i32 %24)
  %26 = add nuw nsw i64 %15, 1
  %27 = icmp ult i64 %26, %12
  br i1 %27, label %14, label %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i8*, i64, i32) local_unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 1
  %7 = bitcast %"class.v8::internal::Heap"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, -41416
  %10 = inttoptr i64 %9 to %"class.v8::internal::Isolate"*
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 0
  %12 = and i64 %3, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %153, label %14

14:                                               ; preds = %5
  %15 = and i64 %3, -4294967296
  %16 = add i64 %3, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %15, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = icmp eq i16 %23, 67
  br i1 %24, label %153, label %25

25:                                               ; preds = %14
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 107
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %3 to i32
  %29 = trunc i64 %27 to i32
  %30 = icmp eq i32 %28, %29
  br i1 %30, label %153, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 29
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %33 to i32
  %35 = icmp eq i32 %28, %34
  br i1 %35, label %153, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 119
  %38 = load i64, i64* %37, align 8
  %39 = trunc i64 %38 to i32
  %40 = icmp eq i32 %28, %39
  br i1 %40, label %153, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 30
  %43 = load i64, i64* %42, align 8
  %44 = trunc i64 %43 to i32
  %45 = icmp eq i32 %28, %44
  br i1 %45, label %153, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 12
  %48 = load i64, i64* %47, align 8
  %49 = trunc i64 %48 to i32
  %50 = icmp eq i32 %28, %49
  br i1 %50, label %153, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 21
  %53 = load i64, i64* %52, align 8
  %54 = trunc i64 %53 to i32
  %55 = icmp eq i32 %28, %54
  br i1 %55, label %153, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 22
  %58 = load i64, i64* %57, align 8
  %59 = trunc i64 %58 to i32
  %60 = icmp eq i32 %28, %59
  br i1 %60, label %153, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 19
  %63 = load i64, i64* %62, align 8
  %64 = trunc i64 %63 to i32
  %65 = icmp eq i32 %28, %64
  br i1 %65, label %153, label %66

66:                                               ; preds = %61
  %67 = load i64, i64* %11, align 8
  %68 = trunc i64 %67 to i32
  %69 = icmp eq i32 %28, %68
  br i1 %69, label %153, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 1
  %72 = load i64, i64* %71, align 8
  %73 = trunc i64 %72 to i32
  %74 = icmp eq i32 %28, %73
  br i1 %74, label %153, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 2
  %77 = load i64, i64* %76, align 8
  %78 = trunc i64 %77 to i32
  %79 = icmp eq i32 %28, %78
  br i1 %79, label %153, label %80

80:                                               ; preds = %75
  %81 = tail call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8GetEntryENS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"* %0, i64 %3)
  %82 = ptrtoint i8* %2 to i64
  %83 = ptrtoint %"class.v8::internal::HeapEntry"* %81 to i64
  %84 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 1, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = add i32 %85, 1
  store i32 %86, i32* %84, align 4
  %87 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 4
  %88 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %88, i64 0, i32 5, i32 0, i32 0, i32 2
  %90 = bitcast %"class.v8::internal::HeapGraphEdge"*** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %88, i64 0, i32 5, i32 0, i32 0, i32 1
  %93 = bitcast %"class.v8::internal::HeapGraphEdge"*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %91, %94
  %96 = ashr exact i64 %95, 3
  %97 = icmp eq i64 %95, 0
  %98 = mul i64 %96, 170
  %99 = add i64 %98, -1
  %100 = select i1 %97, i64 0, i64 %99
  %101 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %88, i64 0, i32 5, i32 0, i32 1
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %88, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %104 = load i64, i64* %103, align 8
  %105 = add i64 %104, %102
  %106 = icmp eq i64 %100, %105
  %107 = inttoptr i64 %94 to %"class.v8::internal::HeapGraphEdge"**
  %108 = inttoptr i64 %91 to %"class.v8::internal::HeapGraphEdge"**
  br i1 %106, label %109, label %116

109:                                              ; preds = %80
  %110 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %88, i64 0, i32 5
  tail call void @_ZNSt3__15dequeIN2v88internal13HeapGraphEdgeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.758"* %110) #13
  %111 = load i64, i64* %103, align 8
  %112 = load i64, i64* %101, align 8
  %113 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %92, align 8
  %114 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %89, align 8
  %115 = add i64 %112, %111
  br label %116

116:                                              ; preds = %109, %80
  %117 = phi i64 [ %115, %109 ], [ %105, %80 ]
  %118 = phi %"class.v8::internal::HeapGraphEdge"** [ %114, %109 ], [ %108, %80 ]
  %119 = phi %"class.v8::internal::HeapGraphEdge"** [ %113, %109 ], [ %107, %80 ]
  %120 = icmp eq %"class.v8::internal::HeapGraphEdge"** %118, %119
  br i1 %120, label %127, label %121

121:                                              ; preds = %116
  %122 = udiv i64 %117, 170
  %123 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %119, i64 %122
  %124 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %123, align 8
  %125 = urem i64 %117, 170
  %126 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %124, i64 %125
  br label %127

127:                                              ; preds = %116, %121
  %128 = phi %"class.v8::internal::HeapGraphEdge"* [ %126, %121 ], [ null, %116 ]
  %129 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %128, i64 0, i32 0
  %130 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 0
  %131 = load i32, i32* %130, align 8
  %132 = lshr i32 %131, 4
  %133 = shl nuw nsw i32 %132, 3
  %134 = or i32 %133, 3
  store i32 %134, i32* %129, align 8
  %135 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %128, i64 0, i32 1
  %136 = bitcast %"class.v8::internal::HeapEntry"** %135 to i64*
  store i64 %83, i64* %136, align 8
  %137 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %128, i64 0, i32 2, i32 0
  %138 = bitcast i8** %137 to i64*
  store i64 %82, i64* %138, align 8
  %139 = load i64, i64* %103, align 8
  %140 = add i64 %139, 1
  store i64 %140, i64* %103, align 8
  %141 = icmp slt i32 %4, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %127
  %143 = lshr i32 %4, 2
  %144 = zext i32 %143 to i64
  %145 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 12, i32 0
  %146 = load i64*, i64** %145, align 8
  %147 = lshr i64 %144, 6
  %148 = getelementptr inbounds i64, i64* %146, i64 %147
  %149 = and i64 %144, 63
  %150 = shl i64 1, %149
  %151 = load i64, i64* %148, align 8
  %152 = or i64 %151, %150
  store i64 %152, i64* %148, align 8
  br label %153

153:                                              ; preds = %75, %5, %14, %25, %31, %36, %41, %46, %51, %56, %61, %66, %70, %142, %127
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer25ExtractPropertyReferencesENS0_8JSObjectEPNS0_9HeapEntryE(%"class.v8::internal::V8HeapExplorer"*, i64, %"class.v8::internal::HeapEntry"* nocapture) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.v8::internal::Representation", align 1
  %5 = and i64 %1, -262144
  %6 = or i64 %5, 16
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 16
  %9 = add i64 %8, -41416
  %10 = inttoptr i64 %9 to %"class.v8::internal::Isolate"*
  %11 = and i64 %1, -4294967296
  %12 = add i64 %1, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = add i64 %16, 11
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2097152
  %21 = icmp eq i32 %20, 0
  %22 = load atomic i32, i32* %13 monotonic, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %11, %23
  br i1 %21, label %25, label %222

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 4
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %24, 23
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = and i64 %27, 4294967295
  %32 = icmp eq i64 %31, 0
  tail call void @llvm.assume(i1 %32) #13
  %33 = zext i32 %30 to i64
  %34 = or i64 %27, %33
  %35 = load atomic i32, i32* %13 monotonic, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %11, %36
  %38 = add i64 %37, 11
  %39 = inttoptr i64 %38 to i32*
  %40 = load atomic i32, i32* %39 acquire, align 4
  %41 = lshr i32 %40, 10
  %42 = and i32 %41, 1023
  %43 = zext i32 %42 to i64
  %44 = icmp eq i32 %42, 0
  br i1 %44, label %354, label %45

45:                                               ; preds = %25
  %46 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 2
  %47 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %4, i64 0, i32 0
  %48 = add i64 %1, 3
  %49 = inttoptr i64 %48 to i32*
  br label %50

50:                                               ; preds = %45, %219
  %51 = phi i64 [ 0, %45 ], [ %220, %219 ]
  %52 = mul nuw nsw i64 %51, 51539607552
  %53 = add nuw nsw i64 %52, 68719476736
  %54 = lshr exact i64 %53, 32
  %55 = or i64 %54, 3
  %56 = add i64 %55, %34
  %57 = inttoptr i64 %56 to i32*
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = lshr i32 %58, 7
  %60 = and i32 %58, 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %203

62:                                               ; preds = %50
  %63 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %46, align 8
  %64 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %63, i64 0, i32 11
  %65 = load i8, i8* %64, align 1, !range !4
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = trunc i32 %59 to i8
  %69 = and i8 %68, 7
  %70 = add nsw i8 %69, -1
  %71 = icmp ult i8 %70, 2
  br i1 %71, label %219, label %72

72:                                               ; preds = %62, %67
  %73 = add i64 %54, %34
  %74 = add i64 %73, -1
  %75 = inttoptr i64 %74 to i32*
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = zext i32 %76 to i64
  %78 = or i64 %27, %77
  %79 = load atomic i32, i32* %13 monotonic, align 4
  %80 = zext i32 %79 to i64
  %81 = or i64 %11, %80
  %82 = add i64 %81, 23
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %11, %85
  %87 = add i64 %86, %55
  %88 = inttoptr i64 %87 to i32*
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = ashr i32 %89, 1
  %91 = lshr i32 %90, 19
  %92 = and i32 %91, 1023
  %93 = lshr i32 %90, 6
  %94 = trunc i32 %93 to i8
  %95 = and i8 %94, 7
  %96 = add i64 %81, 3
  %97 = inttoptr i64 %96 to i8*
  %98 = load atomic i8, i8* %97 monotonic, align 1
  %99 = zext i8 %98 to i32
  %100 = add i64 %81, 4
  %101 = inttoptr i64 %100 to i8*
  %102 = load atomic i8, i8* %101 monotonic, align 1
  %103 = zext i8 %102 to i32
  %104 = sub nsw i32 %99, %103
  %105 = icmp slt i32 %92, %104
  br i1 %105, label %106, label %114

106:                                              ; preds = %72
  %107 = load atomic i8, i8* %101 monotonic, align 1
  %108 = zext i8 %107 to i64
  %109 = shl nuw nsw i64 %108, 28
  %110 = load atomic i8, i8* %101 monotonic, align 1
  %111 = zext i8 %110 to i32
  %112 = add nuw nsw i32 %92, %111
  %113 = shl nuw nsw i32 %112, 2
  br label %118

114:                                              ; preds = %72
  %115 = sub nsw i32 %92, %104
  %116 = shl nsw i32 %115, 2
  %117 = add nsw i32 %116, 8
  br label %118

118:                                              ; preds = %114, %106
  %119 = phi i32 [ %113, %106 ], [ %117, %114 ]
  %120 = phi i64 [ %109, %106 ], [ 536870912, %114 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %47) #13
  store i8 %95, i8* %47, align 1
  %121 = icmp ult i8 %95, 5
  br i1 %121, label %124, label %122

122:                                              ; preds = %118
  %123 = call i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"* nonnull %4) #13
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.634, i64 0, i64 0), i8* %123) #13
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.271, i64 0, i64 0)) #20
  unreachable

124:                                              ; preds = %118
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %47) #13
  %125 = zext i1 %105 to i64
  %126 = shl nuw nsw i64 %125, 13
  %127 = sext i32 %119 to i64
  %128 = sext i32 %104 to i64
  %129 = shl nsw i64 %128, 16
  %130 = or i64 %126, %129
  %131 = or i64 %130, %127
  %132 = or i64 %131, %120
  %133 = and i64 %131, 8192
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %188

135:                                              ; preds = %124
  %136 = load i32, i32* %49, align 4
  %137 = zext i32 %136 to i64
  %138 = or i64 %11, %137
  %139 = and i64 %137, 1
  %140 = icmp eq i64 %139, 0
  %141 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  br i1 %140, label %161, label %142

142:                                              ; preds = %135
  %143 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %141, null
  br i1 %143, label %150, label %144

144:                                              ; preds = %142
  %145 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %141, i64 0, i32 0, i32 1
  %146 = load i8, i8* %145, align 8, !range !4
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %150, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %141, i64 0, i32 1, i64 0
  br label %155

150:                                              ; preds = %144, %142
  %151 = load i64, i64* %7, align 16
  %152 = add i64 %151, -41416
  %153 = inttoptr i64 %152 to %"class.v8::internal::Isolate"*
  %154 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %153, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %155

155:                                              ; preds = %150, %148
  %156 = phi i64* [ %154, %150 ], [ %149, %148 ]
  %157 = getelementptr inbounds i64, i64* %156, i64 29
  %158 = load i64, i64* %157, align 8
  %159 = trunc i64 %158 to i32
  %160 = icmp eq i32 %136, %159
  br i1 %160, label %161, label %178

161:                                              ; preds = %155, %135
  %162 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %141, null
  br i1 %162, label %169, label %163

163:                                              ; preds = %161
  %164 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %141, i64 0, i32 0, i32 1
  %165 = load i8, i8* %164, align 8, !range !4
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %169, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %141, i64 0, i32 1, i64 0
  br label %174

169:                                              ; preds = %163, %161
  %170 = load i64, i64* %7, align 16
  %171 = add i64 %170, -41416
  %172 = inttoptr i64 %171 to %"class.v8::internal::Isolate"*
  %173 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %172, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %174

174:                                              ; preds = %169, %167
  %175 = phi i64* [ %173, %169 ], [ %168, %167 ]
  %176 = getelementptr inbounds i64, i64* %175, i64 106
  %177 = load i64, i64* %176, align 8
  br label %178

178:                                              ; preds = %155, %174
  %179 = phi i64 [ %177, %174 ], [ %138, %155 ]
  %180 = lshr i64 %132, 26
  %181 = and i64 %180, 124
  %182 = and i64 %127, 8188
  %183 = add nuw nsw i64 %182, 7
  %184 = sub nsw i64 %183, %181
  %185 = add i64 %184, %179
  %186 = inttoptr i64 %185 to i32*
  %187 = load atomic i32, i32* %186 monotonic, align 4
  br label %193

188:                                              ; preds = %124
  %189 = and i64 %127, 8191
  %190 = add i64 %12, %189
  %191 = inttoptr i64 %190 to i32*
  %192 = and i32 %119, 8191
  br label %193

193:                                              ; preds = %178, %188
  %194 = phi i32* [ %191, %188 ], [ %186, %178 ]
  %195 = phi i32 [ %192, %188 ], [ -1, %178 ]
  %196 = load i32, i32* %194, align 4
  %197 = zext i32 %196 to i64
  %198 = or i64 %11, %197
  %199 = and i32 %58, 2
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %202, label %201

201:                                              ; preds = %193
  tail call void @_ZN2v88internal14V8HeapExplorer27ExtractAccessorPairPropertyEPNS0_9HeapEntryENS0_4NameENS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %2, i64 %78, i64 %198, i32 %195) #13
  br label %219

202:                                              ; preds = %193
  tail call void @_ZN2v88internal14V8HeapExplorer20SetPropertyReferenceEPNS0_9HeapEntryENS0_4NameENS0_6ObjectEPKci(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %2, i64 %78, i64 %198, i8* null, i32 %195) #13
  br label %219

203:                                              ; preds = %50
  %204 = and i32 %58, 2
  %205 = add i64 %54, %34
  %206 = add i64 %205, -1
  %207 = inttoptr i64 %206 to i32*
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = zext i32 %208 to i64
  %210 = or i64 %27, %209
  %211 = add i64 %205, 7
  %212 = inttoptr i64 %211 to i32*
  %213 = load atomic i32, i32* %212 monotonic, align 4
  %214 = zext i32 %213 to i64
  %215 = or i64 %27, %214
  %216 = icmp eq i32 %204, 0
  br i1 %216, label %218, label %217

217:                                              ; preds = %203
  tail call void @_ZN2v88internal14V8HeapExplorer27ExtractAccessorPairPropertyEPNS0_9HeapEntryENS0_4NameENS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %2, i64 %210, i64 %215, i32 -1) #13
  br label %219

218:                                              ; preds = %203
  tail call void @_ZN2v88internal14V8HeapExplorer20SetPropertyReferenceEPNS0_9HeapEntryENS0_4NameENS0_6ObjectEPKci(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %2, i64 %210, i64 %215, i8* null, i32 -1) #13
  br label %219

219:                                              ; preds = %67, %218, %217, %202, %201
  %220 = add nuw nsw i64 %51, 1
  %221 = icmp eq i64 %220, %43
  br i1 %221, label %354, label %50

222:                                              ; preds = %3
  %223 = add i64 %24, 7
  %224 = inttoptr i64 %223 to i16*
  %225 = load atomic i16, i16* %224 monotonic, align 2
  %226 = icmp eq i16 %225, 189
  %227 = add i64 %1, 3
  %228 = inttoptr i64 %227 to i32*
  br i1 %226, label %229, label %283

229:                                              ; preds = %222
  %230 = load atomic i32, i32* %228 acquire, align 4
  %231 = zext i32 %230 to i64
  %232 = or i64 %11, %231
  %233 = add i64 %232, 15
  %234 = inttoptr i64 %233 to i32*
  %235 = load atomic i32, i32* %234 monotonic, align 4
  %236 = ashr i32 %235, 1
  %237 = sext i32 %236 to i64
  %238 = icmp eq i32 %236, 0
  br i1 %238, label %354, label %239

239:                                              ; preds = %229
  %240 = add i64 %232, 7
  %241 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 4
  %242 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 5
  br label %243

243:                                              ; preds = %239, %280
  %244 = phi i64 [ 0, %239 ], [ %281, %280 ]
  %245 = trunc i64 %244 to i32
  %246 = shl i32 %245, 2
  %247 = add i32 %246, 20
  %248 = sext i32 %247 to i64
  %249 = add i64 %240, %248
  %250 = inttoptr i64 %249 to i32*
  %251 = load atomic i32, i32* %250 monotonic, align 4
  %252 = load i64, i64* %241, align 8
  %253 = trunc i64 %252 to i32
  %254 = icmp eq i32 %251, %253
  br i1 %254, label %280, label %255

255:                                              ; preds = %243
  %256 = load i64, i64* %242, align 8
  %257 = trunc i64 %256 to i32
  %258 = icmp eq i32 %251, %257
  br i1 %258, label %280, label %259

259:                                              ; preds = %255
  %260 = load atomic i32, i32* %250 monotonic, align 4
  %261 = zext i32 %260 to i64
  %262 = or i64 %11, %261
  %263 = add i64 %262, 3
  %264 = inttoptr i64 %263 to i32*
  %265 = load i32, i32* %264, align 4
  %266 = zext i32 %265 to i64
  %267 = or i64 %11, %266
  %268 = add i64 %262, 11
  %269 = inttoptr i64 %268 to i32*
  %270 = load i32, i32* %269, align 4
  %271 = zext i32 %270 to i64
  %272 = or i64 %11, %271
  %273 = add i64 %262, 7
  %274 = inttoptr i64 %273 to i32*
  %275 = load i32, i32* %274, align 4
  %276 = and i32 %275, 2
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %279, label %278

278:                                              ; preds = %259
  tail call void @_ZN2v88internal14V8HeapExplorer27ExtractAccessorPairPropertyEPNS0_9HeapEntryENS0_4NameENS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %2, i64 %267, i64 %272, i32 -1) #13
  br label %280

279:                                              ; preds = %259
  tail call void @_ZN2v88internal14V8HeapExplorer20SetPropertyReferenceEPNS0_9HeapEntryENS0_4NameENS0_6ObjectEPKci(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %2, i64 %267, i64 %272, i8* null, i32 -1) #13
  br label %280

280:                                              ; preds = %255, %243, %279, %278
  %281 = add i64 %244, 1
  %282 = icmp eq i64 %281, %237
  br i1 %282, label %354, label %243

283:                                              ; preds = %222
  %284 = load i32, i32* %228, align 4
  %285 = zext i32 %284 to i64
  %286 = or i64 %11, %285
  %287 = and i64 %285, 1
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %289, label %304

289:                                              ; preds = %283
  %290 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %291 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %290, null
  br i1 %291, label %298, label %292

292:                                              ; preds = %289
  %293 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %290, i64 0, i32 0, i32 1
  %294 = load i8, i8* %293, align 8, !range !4
  %295 = icmp eq i8 %294, 0
  br i1 %295, label %298, label %296

296:                                              ; preds = %292
  %297 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %290, i64 0, i32 1, i64 0
  br label %300

298:                                              ; preds = %292, %289
  %299 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %300

300:                                              ; preds = %298, %296
  %301 = phi i64* [ %299, %298 ], [ %297, %296 ]
  %302 = getelementptr inbounds i64, i64* %301, i64 115
  %303 = load i64, i64* %302, align 8
  br label %304

304:                                              ; preds = %283, %300
  %305 = phi i64 [ %303, %300 ], [ %286, %283 ]
  %306 = add i64 %305, 15
  %307 = inttoptr i64 %306 to i32*
  %308 = load atomic i32, i32* %307 monotonic, align 4
  %309 = ashr i32 %308, 1
  %310 = sext i32 %309 to i64
  %311 = icmp eq i32 %309, 0
  br i1 %311, label %354, label %312

312:                                              ; preds = %304
  %313 = and i64 %305, -4294967296
  %314 = add i64 %305, 7
  %315 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 4
  %316 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 5
  br label %317

317:                                              ; preds = %312, %351
  %318 = phi i64 [ 0, %312 ], [ %352, %351 ]
  %319 = mul i64 %318, 51539607552
  %320 = add i64 %319, 85899345920
  %321 = ashr exact i64 %320, 32
  %322 = add i64 %314, %321
  %323 = inttoptr i64 %322 to i32*
  %324 = load atomic i32, i32* %323 monotonic, align 4
  %325 = zext i32 %324 to i64
  %326 = or i64 %313, %325
  %327 = load i64, i64* %315, align 8
  %328 = trunc i64 %327 to i32
  %329 = icmp eq i32 %324, %328
  br i1 %329, label %351, label %330

330:                                              ; preds = %317
  %331 = load i64, i64* %316, align 8
  %332 = trunc i64 %331 to i32
  %333 = icmp eq i32 %324, %332
  br i1 %333, label %351, label %334

334:                                              ; preds = %330
  %335 = add i64 %319, 103079215104
  %336 = ashr exact i64 %335, 32
  %337 = add i64 %314, %336
  %338 = inttoptr i64 %337 to i32*
  %339 = load atomic i32, i32* %338 monotonic, align 4
  %340 = zext i32 %339 to i64
  %341 = or i64 %313, %340
  %342 = add i64 %319, 120259084288
  %343 = ashr exact i64 %342, 32
  %344 = add i64 %314, %343
  %345 = inttoptr i64 %344 to i32*
  %346 = load atomic i32, i32* %345 monotonic, align 4
  %347 = and i32 %346, 2
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %350, label %349

349:                                              ; preds = %334
  tail call void @_ZN2v88internal14V8HeapExplorer27ExtractAccessorPairPropertyEPNS0_9HeapEntryENS0_4NameENS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %2, i64 %326, i64 %341, i32 -1) #13
  br label %351

350:                                              ; preds = %334
  tail call void @_ZN2v88internal14V8HeapExplorer20SetPropertyReferenceEPNS0_9HeapEntryENS0_4NameENS0_6ObjectEPKci(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %2, i64 %326, i64 %341, i8* null, i32 -1) #13
  br label %351

351:                                              ; preds = %330, %317, %350, %349
  %352 = add i64 %318, 1
  %353 = icmp eq i64 %352, %310
  br i1 %353, label %354, label %317

354:                                              ; preds = %351, %280, %219, %304, %229, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer24ExtractElementReferencesENS0_8JSObjectEPNS0_9HeapEntryE(%"class.v8::internal::V8HeapExplorer"*, i64, %"class.v8::internal::HeapEntry"* nocapture) local_unnamed_addr #2 align 2 {
  %4 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %5 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %4, i64 0, i32 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %4, i64 0, i32 1, i64 0
  br label %20

12:                                               ; preds = %6, %3
  %13 = and i64 %1, -262144
  %14 = or i64 %13, 16
  %15 = inttoptr i64 %14 to i64*
  %16 = load i64, i64* %15, align 16
  %17 = add i64 %16, -41416
  %18 = inttoptr i64 %17 to %"class.v8::internal::Isolate"*
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %20

20:                                               ; preds = %10, %12
  %21 = phi i64* [ %19, %12 ], [ %11, %10 ]
  %22 = and i64 %1, -4294967296
  %23 = add i64 %1, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %22, %26
  %28 = add i64 %27, 10
  %29 = inttoptr i64 %28 to i8*
  %30 = load i8, i8* %29, align 1
  %31 = and i8 %30, -8
  %32 = icmp eq i8 %31, 8
  br i1 %32, label %33, label %137

33:                                               ; preds = %20
  %34 = add i64 %1, 7
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %22, %37
  %39 = load atomic i32, i32* %24 monotonic, align 4
  %40 = zext i32 %39 to i64
  %41 = or i64 %22, %40
  %42 = add i64 %41, 7
  %43 = inttoptr i64 %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = icmp eq i16 %44, 1085
  %46 = add i64 %1, 11
  %47 = add i64 %38, 3
  %48 = select i1 %45, i64 %46, i64 %47
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = icmp sgt i32 %50, 1
  br i1 %51, label %52, label %263

52:                                               ; preds = %33
  %53 = lshr i32 %50, 1
  %54 = add i64 %38, 7
  %55 = getelementptr inbounds i64, i64* %21, i64 5
  %56 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %2, i64 0, i32 1, i32 0
  %57 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %2, i64 0, i32 4
  %58 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %2, i64 0, i32 0
  %59 = zext i32 %53 to i64
  br label %60

60:                                               ; preds = %52, %134
  %61 = phi i64 [ 0, %52 ], [ %135, %134 ]
  %62 = trunc i64 %61 to i32
  %63 = shl i32 %62, 2
  %64 = sext i32 %63 to i64
  %65 = add i64 %54, %64
  %66 = inttoptr i64 %65 to i32*
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = load i64, i64* %55, align 8
  %69 = trunc i64 %68 to i32
  %70 = icmp eq i32 %67, %69
  br i1 %70, label %134, label %71

71:                                               ; preds = %60
  %72 = load atomic i32, i32* %66 monotonic, align 4
  %73 = zext i32 %72 to i64
  %74 = or i64 %22, %73
  %75 = tail call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8GetEntryENS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"* %0, i64 %74) #13
  %76 = icmp eq %"class.v8::internal::HeapEntry"* %75, null
  br i1 %76, label %134, label %77

77:                                               ; preds = %71
  %78 = ptrtoint %"class.v8::internal::HeapEntry"* %75 to i64
  %79 = load i32, i32* %56, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %56, align 4
  %81 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %57, align 8
  %82 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %81, i64 0, i32 5, i32 0, i32 0, i32 2
  %83 = bitcast %"class.v8::internal::HeapGraphEdge"*** %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %81, i64 0, i32 5, i32 0, i32 0, i32 1
  %86 = bitcast %"class.v8::internal::HeapGraphEdge"*** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = sub i64 %84, %87
  %89 = ashr exact i64 %88, 3
  %90 = icmp eq i64 %88, 0
  %91 = mul i64 %89, 170
  %92 = add i64 %91, -1
  %93 = select i1 %90, i64 0, i64 %92
  %94 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %81, i64 0, i32 5, i32 0, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %81, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %97 = load i64, i64* %96, align 8
  %98 = add i64 %97, %95
  %99 = icmp eq i64 %93, %98
  %100 = inttoptr i64 %87 to %"class.v8::internal::HeapGraphEdge"**
  %101 = inttoptr i64 %84 to %"class.v8::internal::HeapGraphEdge"**
  br i1 %99, label %102, label %109

102:                                              ; preds = %77
  %103 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %81, i64 0, i32 5
  tail call void @_ZNSt3__15dequeIN2v88internal13HeapGraphEdgeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.758"* %103) #13
  %104 = load i64, i64* %96, align 8
  %105 = load i64, i64* %94, align 8
  %106 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %85, align 8
  %107 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %82, align 8
  %108 = add i64 %105, %104
  br label %109

109:                                              ; preds = %102, %77
  %110 = phi i64 [ %108, %102 ], [ %98, %77 ]
  %111 = phi %"class.v8::internal::HeapGraphEdge"** [ %107, %102 ], [ %101, %77 ]
  %112 = phi %"class.v8::internal::HeapGraphEdge"** [ %106, %102 ], [ %100, %77 ]
  %113 = icmp eq %"class.v8::internal::HeapGraphEdge"** %111, %112
  br i1 %113, label %120, label %114

114:                                              ; preds = %109
  %115 = udiv i64 %110, 170
  %116 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %112, i64 %115
  %117 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %116, align 8
  %118 = urem i64 %110, 170
  %119 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %117, i64 %118
  br label %120

120:                                              ; preds = %114, %109
  %121 = phi %"class.v8::internal::HeapGraphEdge"* [ %119, %114 ], [ null, %109 ]
  %122 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %121, i64 0, i32 0
  %123 = load i32, i32* %58, align 8
  %124 = lshr i32 %123, 4
  %125 = shl nuw nsw i32 %124, 3
  %126 = or i32 %125, 1
  store i32 %126, i32* %122, align 8
  %127 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %121, i64 0, i32 1
  %128 = bitcast %"class.v8::internal::HeapEntry"** %127 to i64*
  store i64 %78, i64* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %121, i64 0, i32 2
  %130 = bitcast %union.anon.807* %129 to i32*
  %131 = trunc i64 %61 to i32
  store i32 %131, i32* %130, align 8
  %132 = load i64, i64* %96, align 8
  %133 = add i64 %132, 1
  store i64 %133, i64* %96, align 8
  br label %134

134:                                              ; preds = %120, %71, %60
  %135 = add nuw nsw i64 %61, 1
  %136 = icmp ult i64 %135, %59
  br i1 %136, label %60, label %263

137:                                              ; preds = %20
  %138 = load atomic i32, i32* %24 monotonic, align 4
  %139 = zext i32 %138 to i64
  %140 = or i64 %22, %139
  %141 = add i64 %140, 10
  %142 = inttoptr i64 %141 to i8*
  %143 = load i8, i8* %142, align 1
  %144 = and i8 %143, -4
  %145 = icmp eq i8 %144, 48
  br i1 %145, label %146, label %263

146:                                              ; preds = %137
  %147 = add i64 %1, 7
  %148 = inttoptr i64 %147 to i32*
  %149 = load i32, i32* %148, align 4
  %150 = zext i32 %149 to i64
  %151 = or i64 %22, %150
  %152 = add i64 %151, 15
  %153 = inttoptr i64 %152 to i32*
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = ashr i32 %154, 1
  %156 = sext i32 %155 to i64
  %157 = icmp eq i32 %155, 0
  br i1 %157, label %263, label %158

158:                                              ; preds = %146
  %159 = add i64 %151, 7
  %160 = getelementptr inbounds i64, i64* %21, i64 4
  %161 = getelementptr inbounds i64, i64* %21, i64 5
  %162 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %2, i64 0, i32 1, i32 0
  %163 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %2, i64 0, i32 4
  %164 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %2, i64 0, i32 0
  br label %165

165:                                              ; preds = %158, %260
  %166 = phi i64 [ 0, %158 ], [ %261, %260 ]
  %167 = mul i64 %166, 51539607552
  %168 = add i64 %167, 68719476736
  %169 = ashr exact i64 %168, 32
  %170 = add i64 %159, %169
  %171 = inttoptr i64 %170 to i32*
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = zext i32 %172 to i64
  %174 = or i64 %22, %173
  %175 = load i64, i64* %160, align 8
  %176 = trunc i64 %175 to i32
  %177 = icmp eq i32 %172, %176
  br i1 %177, label %260, label %178

178:                                              ; preds = %165
  %179 = load i64, i64* %161, align 8
  %180 = trunc i64 %179 to i32
  %181 = icmp eq i32 %172, %180
  br i1 %181, label %260, label %182

182:                                              ; preds = %178
  %183 = and i64 %173, 1
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %188

185:                                              ; preds = %182
  %186 = ashr i32 %172, 1
  %187 = sitofp i32 %186 to double
  br label %192

188:                                              ; preds = %182
  %189 = add i64 %174, 3
  %190 = inttoptr i64 %189 to double*
  %191 = load double, double* %190, align 1
  br label %192

192:                                              ; preds = %185, %188
  %193 = phi double [ %187, %185 ], [ %191, %188 ]
  %194 = fptoui double %193 to i32
  %195 = add i64 %167, 85899345920
  %196 = ashr exact i64 %195, 32
  %197 = add i64 %159, %196
  %198 = inttoptr i64 %197 to i32*
  %199 = load atomic i32, i32* %198 monotonic, align 4
  %200 = zext i32 %199 to i64
  %201 = or i64 %22, %200
  %202 = tail call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8GetEntryENS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"* %0, i64 %201) #13
  %203 = icmp eq %"class.v8::internal::HeapEntry"* %202, null
  br i1 %203, label %260, label %204

204:                                              ; preds = %192
  %205 = ptrtoint %"class.v8::internal::HeapEntry"* %202 to i64
  %206 = load i32, i32* %162, align 4
  %207 = add i32 %206, 1
  store i32 %207, i32* %162, align 4
  %208 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %163, align 8
  %209 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %208, i64 0, i32 5, i32 0, i32 0, i32 2
  %210 = bitcast %"class.v8::internal::HeapGraphEdge"*** %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %208, i64 0, i32 5, i32 0, i32 0, i32 1
  %213 = bitcast %"class.v8::internal::HeapGraphEdge"*** %212 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = sub i64 %211, %214
  %216 = ashr exact i64 %215, 3
  %217 = icmp eq i64 %215, 0
  %218 = mul i64 %216, 170
  %219 = add i64 %218, -1
  %220 = select i1 %217, i64 0, i64 %219
  %221 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %208, i64 0, i32 5, i32 0, i32 1
  %222 = load i64, i64* %221, align 8
  %223 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %208, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %224 = load i64, i64* %223, align 8
  %225 = add i64 %224, %222
  %226 = icmp eq i64 %220, %225
  %227 = inttoptr i64 %214 to %"class.v8::internal::HeapGraphEdge"**
  %228 = inttoptr i64 %211 to %"class.v8::internal::HeapGraphEdge"**
  br i1 %226, label %229, label %236

229:                                              ; preds = %204
  %230 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %208, i64 0, i32 5
  tail call void @_ZNSt3__15dequeIN2v88internal13HeapGraphEdgeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.758"* %230) #13
  %231 = load i64, i64* %223, align 8
  %232 = load i64, i64* %221, align 8
  %233 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %212, align 8
  %234 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %209, align 8
  %235 = add i64 %232, %231
  br label %236

236:                                              ; preds = %229, %204
  %237 = phi i64 [ %235, %229 ], [ %225, %204 ]
  %238 = phi %"class.v8::internal::HeapGraphEdge"** [ %234, %229 ], [ %228, %204 ]
  %239 = phi %"class.v8::internal::HeapGraphEdge"** [ %233, %229 ], [ %227, %204 ]
  %240 = icmp eq %"class.v8::internal::HeapGraphEdge"** %238, %239
  br i1 %240, label %247, label %241

241:                                              ; preds = %236
  %242 = udiv i64 %237, 170
  %243 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %239, i64 %242
  %244 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %243, align 8
  %245 = urem i64 %237, 170
  %246 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %244, i64 %245
  br label %247

247:                                              ; preds = %241, %236
  %248 = phi %"class.v8::internal::HeapGraphEdge"* [ %246, %241 ], [ null, %236 ]
  %249 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %248, i64 0, i32 0
  %250 = load i32, i32* %164, align 8
  %251 = lshr i32 %250, 4
  %252 = shl nuw nsw i32 %251, 3
  %253 = or i32 %252, 1
  store i32 %253, i32* %249, align 8
  %254 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %248, i64 0, i32 1
  %255 = bitcast %"class.v8::internal::HeapEntry"** %254 to i64*
  store i64 %205, i64* %255, align 8
  %256 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %248, i64 0, i32 2
  %257 = bitcast %union.anon.807* %256 to i32*
  store i32 %194, i32* %257, align 8
  %258 = load i64, i64* %223, align 8
  %259 = add i64 %258, 1
  store i64 %259, i64* %223, align 8
  br label %260

260:                                              ; preds = %178, %165, %247, %192
  %261 = add i64 %166, 1
  %262 = icmp eq i64 %261, %156
  br i1 %262, label %263, label %165

263:                                              ; preds = %260, %134, %146, %33, %137
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer25ExtractInternalReferencesENS0_8JSObjectEPNS0_9HeapEntryE(%"class.v8::internal::V8HeapExplorer"*, i64, %"class.v8::internal::HeapEntry"* nocapture) local_unnamed_addr #2 align 2 {
  %4 = and i64 %1, -4294967296
  %5 = add i64 %1, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 3
  %11 = inttoptr i64 %10 to i8*
  %12 = load atomic i8, i8* %11 monotonic, align 1
  %13 = zext i8 %12 to i32
  %14 = shl nuw nsw i32 %13, 2
  %15 = icmp eq i8 %12, 0
  br i1 %15, label %41, label %16

16:                                               ; preds = %3
  %17 = add i64 %9, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = icmp eq i16 %19, 1057
  br i1 %20, label %27, label %21

21:                                               ; preds = %16
  %22 = add i64 %9, 9
  %23 = inttoptr i64 %22 to i8*
  %24 = load atomic i8, i8* %23 monotonic, align 1
  %25 = icmp slt i8 %24, 0
  %26 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %19, i1 zeroext %25) #13
  br label %27

27:                                               ; preds = %16, %21
  %28 = phi i32 [ %26, %21 ], [ 12, %16 ]
  %29 = sub nsw i32 %14, %28
  %30 = ashr i32 %29, 2
  %31 = load atomic i8, i8* %11 monotonic, align 1
  %32 = zext i8 %31 to i32
  %33 = add i64 %9, 4
  %34 = inttoptr i64 %33 to i8*
  %35 = load atomic i8, i8* %34 monotonic, align 1
  %36 = zext i8 %35 to i32
  %37 = sub nsw i32 %30, %32
  %38 = add nsw i32 %37, %36
  %39 = sdiv i32 %38, 2
  %40 = icmp sgt i32 %38, 1
  br i1 %40, label %42, label %41

41:                                               ; preds = %81, %3, %27
  ret void

42:                                               ; preds = %27, %81
  %43 = phi i32 [ %84, %81 ], [ 0, %27 ]
  %44 = load atomic i32, i32* %6 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %4, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = icmp eq i16 %49, 1057
  br i1 %50, label %57, label %51

51:                                               ; preds = %42
  %52 = add i64 %46, 9
  %53 = inttoptr i64 %52 to i8*
  %54 = load atomic i8, i8* %53 monotonic, align 1
  %55 = icmp slt i8 %54, 0
  %56 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %49, i1 zeroext %55) #13
  br label %57

57:                                               ; preds = %42, %51
  %58 = phi i32 [ %56, %51 ], [ 12, %42 ]
  %59 = shl i32 %43, 3
  %60 = add nsw i32 %58, %59
  %61 = sext i32 %60 to i64
  %62 = add i64 %5, %61
  %63 = inttoptr i64 %62 to i32*
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i64 %62, -4294967296
  %66 = zext i32 %64 to i64
  %67 = or i64 %65, %66
  %68 = load atomic i32, i32* %6 monotonic, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %4, %69
  %71 = add i64 %70, 7
  %72 = inttoptr i64 %71 to i16*
  %73 = load atomic i16, i16* %72 monotonic, align 2
  %74 = icmp eq i16 %73, 1057
  br i1 %74, label %81, label %75

75:                                               ; preds = %57
  %76 = add i64 %70, 9
  %77 = inttoptr i64 %76 to i8*
  %78 = load atomic i8, i8* %77 monotonic, align 1
  %79 = icmp slt i8 %78, 0
  %80 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %73, i1 zeroext %79) #13
  br label %81

81:                                               ; preds = %57, %75
  %82 = phi i32 [ %80, %75 ], [ 12, %57 ]
  %83 = add nsw i32 %82, %59
  tail call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEiNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %2, i32 %43, i64 %67, i32 %83)
  %84 = add nuw nsw i32 %43, 1
  %85 = icmp eq i32 %84, %39
  br i1 %85, label %41, label %42
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer20SetPropertyReferenceEPNS0_9HeapEntryENS0_4NameENS0_6ObjectEPKci(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i64, i64, i8*, i32) local_unnamed_addr #2 align 2 {
  %7 = alloca %"class.v8::internal::String", align 8
  %8 = tail call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8GetEntryENS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"* %0, i64 %3)
  %9 = icmp eq %"class.v8::internal::HeapEntry"* %8, null
  br i1 %9, label %124, label %10

10:                                               ; preds = %6
  %11 = and i64 %2, -4294967296
  %12 = add i64 %2, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = icmp eq i16 %19, 64
  br i1 %20, label %27, label %21

21:                                               ; preds = %10
  %22 = add i64 %2, 7
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = icmp sgt i32 %24, 0
  %26 = select i1 %25, i32 2, i32 3
  br label %27

27:                                               ; preds = %21, %10
  %28 = phi i32 [ 2, %10 ], [ %26, %21 ]
  %29 = icmp eq i8* %4, null
  %30 = bitcast %"class.v8::internal::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #13
  br i1 %29, label %47, label %31

31:                                               ; preds = %27
  %32 = load atomic i32, i32* %13 monotonic, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %11, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = icmp ult i16 %37, 64
  br i1 %38, label %39, label %47

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 3
  %41 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %42, align 8
  %43 = call i8* @_ZN2v88internal6String9ToCStringENS0_14AllowNullsFlagENS0_14RobustnessFlagEPi(%"class.v8::internal::String"* nonnull %7, i32 1, i32 0, i32* null) #13
  %44 = call i8* (%"class.v8::internal::StringsStorage"*, i8*, ...) @_ZN2v88internal14StringsStorage12GetFormattedEPKcz(%"class.v8::internal::StringsStorage"* %41, i8* nonnull %4, i8* %43) #13
  %45 = icmp eq i8* %43, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %39
  call void @_ZdaPv(i8* nonnull %43) #21
  br label %51

47:                                               ; preds = %27, %31
  %48 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 3
  %49 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %48, align 8
  %50 = tail call i8* @_ZN2v88internal14StringsStorage7GetNameENS0_4NameE(%"class.v8::internal::StringsStorage"* %49, i64 %2) #13
  br label %51

51:                                               ; preds = %46, %39, %47
  %52 = phi i8* [ %50, %47 ], [ %44, %39 ], [ %44, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #13
  %53 = ptrtoint i8* %52 to i64
  %54 = ptrtoint %"class.v8::internal::HeapEntry"* %8 to i64
  %55 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 1, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %55, align 4
  %58 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 4
  %59 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %59, i64 0, i32 5, i32 0, i32 0, i32 2
  %61 = bitcast %"class.v8::internal::HeapGraphEdge"*** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %59, i64 0, i32 5, i32 0, i32 0, i32 1
  %64 = bitcast %"class.v8::internal::HeapGraphEdge"*** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %62, %65
  %67 = ashr exact i64 %66, 3
  %68 = icmp eq i64 %66, 0
  %69 = mul i64 %67, 170
  %70 = add i64 %69, -1
  %71 = select i1 %68, i64 0, i64 %70
  %72 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %59, i64 0, i32 5, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %59, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = add i64 %75, %73
  %77 = icmp eq i64 %71, %76
  %78 = inttoptr i64 %65 to %"class.v8::internal::HeapGraphEdge"**
  %79 = inttoptr i64 %62 to %"class.v8::internal::HeapGraphEdge"**
  br i1 %77, label %80, label %87

80:                                               ; preds = %51
  %81 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %59, i64 0, i32 5
  call void @_ZNSt3__15dequeIN2v88internal13HeapGraphEdgeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.758"* %81) #13
  %82 = load i64, i64* %74, align 8
  %83 = load i64, i64* %72, align 8
  %84 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %63, align 8
  %85 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %60, align 8
  %86 = add i64 %83, %82
  br label %87

87:                                               ; preds = %80, %51
  %88 = phi i64 [ %86, %80 ], [ %76, %51 ]
  %89 = phi %"class.v8::internal::HeapGraphEdge"** [ %85, %80 ], [ %79, %51 ]
  %90 = phi %"class.v8::internal::HeapGraphEdge"** [ %84, %80 ], [ %78, %51 ]
  %91 = icmp eq %"class.v8::internal::HeapGraphEdge"** %89, %90
  br i1 %91, label %98, label %92

92:                                               ; preds = %87
  %93 = udiv i64 %88, 170
  %94 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %90, i64 %93
  %95 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %94, align 8
  %96 = urem i64 %88, 170
  %97 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %95, i64 %96
  br label %98

98:                                               ; preds = %87, %92
  %99 = phi %"class.v8::internal::HeapGraphEdge"* [ %97, %92 ], [ null, %87 ]
  %100 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %99, i64 0, i32 0
  %101 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 0
  %102 = load i32, i32* %101, align 8
  %103 = lshr i32 %102, 4
  %104 = shl nuw nsw i32 %103, 3
  %105 = or i32 %104, %28
  store i32 %105, i32* %100, align 8
  %106 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %99, i64 0, i32 1
  %107 = bitcast %"class.v8::internal::HeapEntry"** %106 to i64*
  store i64 %54, i64* %107, align 8
  %108 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %99, i64 0, i32 2, i32 0
  %109 = bitcast i8** %108 to i64*
  store i64 %53, i64* %109, align 8
  %110 = load i64, i64* %74, align 8
  %111 = add i64 %110, 1
  store i64 %111, i64* %74, align 8
  %112 = icmp slt i32 %5, 0
  br i1 %112, label %124, label %113

113:                                              ; preds = %98
  %114 = lshr i32 %5, 2
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 12, i32 0
  %117 = load i64*, i64** %116, align 8
  %118 = lshr i64 %115, 6
  %119 = getelementptr inbounds i64, i64* %117, i64 %118
  %120 = and i64 %115, 63
  %121 = shl i64 1, %120
  %122 = load i64, i64* %119, align 8
  %123 = or i64 %122, %121
  store i64 %123, i64* %119, align 8
  br label %124

124:                                              ; preds = %113, %98, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"*, i64, i8*) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 1
  %5 = bitcast %"class.v8::internal::Heap"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -41416
  %8 = inttoptr i64 %7 to %"class.v8::internal::Isolate"*
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 7, i32 0, i64 0
  %10 = and i64 %1, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %85, label %12

12:                                               ; preds = %3
  %13 = and i64 %1, -4294967296
  %14 = add i64 %1, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %13, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = icmp eq i16 %21, 67
  br i1 %22, label %85, label %23

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 7, i32 0, i64 107
  %25 = load i64, i64* %24, align 8
  %26 = trunc i64 %1 to i32
  %27 = trunc i64 %25 to i32
  %28 = icmp eq i32 %26, %27
  br i1 %28, label %85, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 7, i32 0, i64 29
  %31 = load i64, i64* %30, align 8
  %32 = trunc i64 %31 to i32
  %33 = icmp eq i32 %26, %32
  br i1 %33, label %85, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 7, i32 0, i64 119
  %36 = load i64, i64* %35, align 8
  %37 = trunc i64 %36 to i32
  %38 = icmp eq i32 %26, %37
  br i1 %38, label %85, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 7, i32 0, i64 30
  %41 = load i64, i64* %40, align 8
  %42 = trunc i64 %41 to i32
  %43 = icmp eq i32 %26, %42
  br i1 %43, label %85, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 7, i32 0, i64 12
  %46 = load i64, i64* %45, align 8
  %47 = trunc i64 %46 to i32
  %48 = icmp eq i32 %26, %47
  br i1 %48, label %85, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 7, i32 0, i64 21
  %51 = load i64, i64* %50, align 8
  %52 = trunc i64 %51 to i32
  %53 = icmp eq i32 %26, %52
  br i1 %53, label %85, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 7, i32 0, i64 22
  %56 = load i64, i64* %55, align 8
  %57 = trunc i64 %56 to i32
  %58 = icmp eq i32 %26, %57
  br i1 %58, label %85, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 7, i32 0, i64 19
  %61 = load i64, i64* %60, align 8
  %62 = trunc i64 %61 to i32
  %63 = icmp eq i32 %26, %62
  br i1 %63, label %85, label %64

64:                                               ; preds = %59
  %65 = load i64, i64* %9, align 8
  %66 = trunc i64 %65 to i32
  %67 = icmp eq i32 %26, %66
  br i1 %67, label %85, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 7, i32 0, i64 1
  %70 = load i64, i64* %69, align 8
  %71 = trunc i64 %70 to i32
  %72 = icmp eq i32 %26, %71
  br i1 %72, label %85, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 7, i32 0, i64 2
  %75 = load i64, i64* %74, align 8
  %76 = trunc i64 %75 to i32
  %77 = icmp eq i32 %26, %76
  br i1 %77, label %85, label %78

78:                                               ; preds = %73
  %79 = tail call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8GetEntryENS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"* %0, i64 %1)
  %80 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %79, i64 0, i32 5
  %81 = load i8*, i8** %80, align 8
  %82 = load i8, i8* %81, align 1
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %78
  store i8* %2, i8** %80, align 8
  br label %85

85:                                               ; preds = %73, %3, %12, %23, %29, %34, %39, %44, %49, %54, %59, %64, %68, %78, %84
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer22SetNativeBindReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i8*, i64) local_unnamed_addr #2 align 2 {
  %5 = tail call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8GetEntryENS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"* %0, i64 %3)
  %6 = icmp eq %"class.v8::internal::HeapEntry"* %5, null
  br i1 %6, label %67, label %7

7:                                                ; preds = %4
  %8 = ptrtoint i8* %2 to i64
  %9 = ptrtoint %"class.v8::internal::HeapEntry"* %5 to i64
  %10 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, 1
  store i32 %12, i32* %10, align 4
  %13 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 4
  %14 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %14, i64 0, i32 5, i32 0, i32 0, i32 2
  %16 = bitcast %"class.v8::internal::HeapGraphEdge"*** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %14, i64 0, i32 5, i32 0, i32 0, i32 1
  %19 = bitcast %"class.v8::internal::HeapGraphEdge"*** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = icmp eq i64 %21, 0
  %24 = mul i64 %22, 170
  %25 = add i64 %24, -1
  %26 = select i1 %23, i64 0, i64 %25
  %27 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %14, i64 0, i32 5, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %14, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, %28
  %32 = icmp eq i64 %26, %31
  %33 = inttoptr i64 %20 to %"class.v8::internal::HeapGraphEdge"**
  %34 = inttoptr i64 %17 to %"class.v8::internal::HeapGraphEdge"**
  br i1 %32, label %35, label %42

35:                                               ; preds = %7
  %36 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %14, i64 0, i32 5
  tail call void @_ZNSt3__15dequeIN2v88internal13HeapGraphEdgeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.758"* %36) #13
  %37 = load i64, i64* %29, align 8
  %38 = load i64, i64* %27, align 8
  %39 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %18, align 8
  %40 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %15, align 8
  %41 = add i64 %38, %37
  br label %42

42:                                               ; preds = %35, %7
  %43 = phi i64 [ %41, %35 ], [ %31, %7 ]
  %44 = phi %"class.v8::internal::HeapGraphEdge"** [ %40, %35 ], [ %34, %7 ]
  %45 = phi %"class.v8::internal::HeapGraphEdge"** [ %39, %35 ], [ %33, %7 ]
  %46 = icmp eq %"class.v8::internal::HeapGraphEdge"** %44, %45
  br i1 %46, label %53, label %47

47:                                               ; preds = %42
  %48 = udiv i64 %43, 170
  %49 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %45, i64 %48
  %50 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %49, align 8
  %51 = urem i64 %43, 170
  %52 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %50, i64 %51
  br label %53

53:                                               ; preds = %42, %47
  %54 = phi %"class.v8::internal::HeapGraphEdge"* [ %52, %47 ], [ null, %42 ]
  %55 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %54, i64 0, i32 0
  %56 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = lshr i32 %57, 4
  %59 = shl nuw nsw i32 %58, 3
  %60 = or i32 %59, 5
  store i32 %60, i32* %55, align 8
  %61 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %54, i64 0, i32 1
  %62 = bitcast %"class.v8::internal::HeapEntry"** %61 to i64*
  store i64 %9, i64* %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %54, i64 0, i32 2, i32 0
  %64 = bitcast i8** %63 to i64*
  store i64 %8, i64* %64, align 8
  %65 = load i64, i64* %29, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %29, align 8
  br label %67

67:                                               ; preds = %4, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer16SetWeakReferenceEPNS0_9HeapEntryEiNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i32, i64, i32) local_unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 1
  %7 = bitcast %"class.v8::internal::Heap"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, -41416
  %10 = inttoptr i64 %9 to %"class.v8::internal::Isolate"*
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 0
  %12 = and i64 %3, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %156, label %14

14:                                               ; preds = %5
  %15 = and i64 %3, -4294967296
  %16 = add i64 %3, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %15, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = icmp eq i16 %23, 67
  br i1 %24, label %156, label %25

25:                                               ; preds = %14
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 107
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %3 to i32
  %29 = trunc i64 %27 to i32
  %30 = icmp eq i32 %28, %29
  br i1 %30, label %156, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 29
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %33 to i32
  %35 = icmp eq i32 %28, %34
  br i1 %35, label %156, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 119
  %38 = load i64, i64* %37, align 8
  %39 = trunc i64 %38 to i32
  %40 = icmp eq i32 %28, %39
  br i1 %40, label %156, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 30
  %43 = load i64, i64* %42, align 8
  %44 = trunc i64 %43 to i32
  %45 = icmp eq i32 %28, %44
  br i1 %45, label %156, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 12
  %48 = load i64, i64* %47, align 8
  %49 = trunc i64 %48 to i32
  %50 = icmp eq i32 %28, %49
  br i1 %50, label %156, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 21
  %53 = load i64, i64* %52, align 8
  %54 = trunc i64 %53 to i32
  %55 = icmp eq i32 %28, %54
  br i1 %55, label %156, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 22
  %58 = load i64, i64* %57, align 8
  %59 = trunc i64 %58 to i32
  %60 = icmp eq i32 %28, %59
  br i1 %60, label %156, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 19
  %63 = load i64, i64* %62, align 8
  %64 = trunc i64 %63 to i32
  %65 = icmp eq i32 %28, %64
  br i1 %65, label %156, label %66

66:                                               ; preds = %61
  %67 = load i64, i64* %11, align 8
  %68 = trunc i64 %67 to i32
  %69 = icmp eq i32 %28, %68
  br i1 %69, label %156, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 1
  %72 = load i64, i64* %71, align 8
  %73 = trunc i64 %72 to i32
  %74 = icmp eq i32 %28, %73
  br i1 %74, label %156, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 2
  %77 = load i64, i64* %76, align 8
  %78 = trunc i64 %77 to i32
  %79 = icmp eq i32 %28, %78
  br i1 %79, label %156, label %80

80:                                               ; preds = %75
  %81 = tail call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8GetEntryENS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"* %0, i64 %3)
  %82 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 3
  %83 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %82, align 8
  %84 = tail call i8* (%"class.v8::internal::StringsStorage"*, i8*, ...) @_ZN2v88internal14StringsStorage12GetFormattedEPKcz(%"class.v8::internal::StringsStorage"* %83, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i32 %2) #13
  %85 = ptrtoint i8* %84 to i64
  %86 = ptrtoint %"class.v8::internal::HeapEntry"* %81 to i64
  %87 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 1, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = add i32 %88, 1
  store i32 %89, i32* %87, align 4
  %90 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 4
  %91 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %91, i64 0, i32 5, i32 0, i32 0, i32 2
  %93 = bitcast %"class.v8::internal::HeapGraphEdge"*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %91, i64 0, i32 5, i32 0, i32 0, i32 1
  %96 = bitcast %"class.v8::internal::HeapGraphEdge"*** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = sub i64 %94, %97
  %99 = ashr exact i64 %98, 3
  %100 = icmp eq i64 %98, 0
  %101 = mul i64 %99, 170
  %102 = add i64 %101, -1
  %103 = select i1 %100, i64 0, i64 %102
  %104 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %91, i64 0, i32 5, i32 0, i32 1
  %105 = load i64, i64* %104, align 8
  %106 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %91, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %107 = load i64, i64* %106, align 8
  %108 = add i64 %107, %105
  %109 = icmp eq i64 %103, %108
  %110 = inttoptr i64 %97 to %"class.v8::internal::HeapGraphEdge"**
  %111 = inttoptr i64 %94 to %"class.v8::internal::HeapGraphEdge"**
  br i1 %109, label %112, label %119

112:                                              ; preds = %80
  %113 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %91, i64 0, i32 5
  tail call void @_ZNSt3__15dequeIN2v88internal13HeapGraphEdgeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.758"* %113) #13
  %114 = load i64, i64* %106, align 8
  %115 = load i64, i64* %104, align 8
  %116 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %95, align 8
  %117 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %92, align 8
  %118 = add i64 %115, %114
  br label %119

119:                                              ; preds = %112, %80
  %120 = phi i64 [ %118, %112 ], [ %108, %80 ]
  %121 = phi %"class.v8::internal::HeapGraphEdge"** [ %117, %112 ], [ %111, %80 ]
  %122 = phi %"class.v8::internal::HeapGraphEdge"** [ %116, %112 ], [ %110, %80 ]
  %123 = icmp eq %"class.v8::internal::HeapGraphEdge"** %121, %122
  br i1 %123, label %130, label %124

124:                                              ; preds = %119
  %125 = udiv i64 %120, 170
  %126 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %122, i64 %125
  %127 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %126, align 8
  %128 = urem i64 %120, 170
  %129 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %127, i64 %128
  br label %130

130:                                              ; preds = %119, %124
  %131 = phi %"class.v8::internal::HeapGraphEdge"* [ %129, %124 ], [ null, %119 ]
  %132 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %131, i64 0, i32 0
  %133 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 0
  %134 = load i32, i32* %133, align 8
  %135 = lshr i32 %134, 4
  %136 = shl nuw nsw i32 %135, 3
  %137 = or i32 %136, 6
  store i32 %137, i32* %132, align 8
  %138 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %131, i64 0, i32 1
  %139 = bitcast %"class.v8::internal::HeapEntry"** %138 to i64*
  store i64 %86, i64* %139, align 8
  %140 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %131, i64 0, i32 2, i32 0
  %141 = bitcast i8** %140 to i64*
  store i64 %85, i64* %141, align 8
  %142 = load i64, i64* %106, align 8
  %143 = add i64 %142, 1
  store i64 %143, i64* %106, align 8
  %144 = icmp slt i32 %4, 0
  br i1 %144, label %156, label %145

145:                                              ; preds = %130
  %146 = lshr i32 %4, 2
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 12, i32 0
  %149 = load i64*, i64** %148, align 8
  %150 = lshr i64 %147, 6
  %151 = getelementptr inbounds i64, i64* %149, i64 %150
  %152 = and i64 %147, 63
  %153 = shl i64 1, %152
  %154 = load i64, i64* %151, align 8
  %155 = or i64 %154, %153
  store i64 %155, i64* %151, align 8
  br label %156

156:                                              ; preds = %75, %5, %14, %25, %31, %36, %41, %46, %51, %56, %61, %66, %70, %145, %130
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8GetEntryENS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"*, i64) local_unnamed_addr #2 align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca %"class.v8::internal::HeapEntry"*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.v8::internal::HeapEntry"*, align 8
  %8 = and i64 %1, 1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %38, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 6
  %12 = load %"class.v8::internal::HeapSnapshotGenerator"*, %"class.v8::internal::HeapSnapshotGenerator"** %11, align 8
  %13 = inttoptr i64 %1 to i8*
  %14 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 0
  %15 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #13
  store i8* %13, i8** %5, align 8
  %16 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %12, i64 0, i32 5, i32 0
  %17 = call %"struct.std::__1::__hash_node_base.1424"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIS2_S7_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS2_EENS_15__hash_iteratorIPNS_11__hash_nodeIS7_S2_EEEERKT_(%"class.std::__1::__hash_table.1420"* %16, i8** nonnull dereferenceable(8) %5) #13
  %18 = icmp eq %"struct.std::__1::__hash_node_base.1424"* %17, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #13
  br label %25

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %17, i64 3
  %22 = bitcast %"struct.std::__1::__hash_node_base.1424"* %21 to %"class.v8::internal::HeapEntry"**
  %23 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #13
  %24 = icmp eq %"class.v8::internal::HeapEntry"* %23, null
  br i1 %24, label %25, label %137

25:                                               ; preds = %20, %19
  %26 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #13
  store i8* %13, i8** %3, align 8
  %27 = bitcast %"class.v8::internal::HeapEntry"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  %28 = bitcast %"class.v8::internal::V8HeapExplorer"* %0 to %"class.v8::internal::HeapEntry"* (%"class.v8::internal::HeapEntriesAllocator"*, i8*)***
  %29 = load %"class.v8::internal::HeapEntry"* (%"class.v8::internal::HeapEntriesAllocator"*, i8*)**, %"class.v8::internal::HeapEntry"* (%"class.v8::internal::HeapEntriesAllocator"*, i8*)*** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::HeapEntry"* (%"class.v8::internal::HeapEntriesAllocator"*, i8*)*, %"class.v8::internal::HeapEntry"* (%"class.v8::internal::HeapEntriesAllocator"*, i8*)** %29, i64 2
  %31 = load %"class.v8::internal::HeapEntry"* (%"class.v8::internal::HeapEntriesAllocator"*, i8*)*, %"class.v8::internal::HeapEntry"* (%"class.v8::internal::HeapEntriesAllocator"*, i8*)** %30, align 8
  %32 = call %"class.v8::internal::HeapEntry"* %31(%"class.v8::internal::HeapEntriesAllocator"* %14, i8* %13) #13
  store %"class.v8::internal::HeapEntry"* %32, %"class.v8::internal::HeapEntry"** %4, align 8
  %33 = call { %"struct.std::__1::__hash_node_base.1424"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIS2_S7_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS2_JRS2_S6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_S2_EEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1420"* %16, i8** nonnull dereferenceable(8) %3, i8** nonnull dereferenceable(8) %3, %"class.v8::internal::HeapEntry"** nonnull dereferenceable(8) %4) #13
  %34 = extractvalue { %"struct.std::__1::__hash_node_base.1424"*, i8 } %33, 0
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %34, i64 3
  %36 = bitcast %"struct.std::__1::__hash_node_base.1424"* %35 to %"class.v8::internal::HeapEntry"**
  %37 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #13
  br label %137

38:                                               ; preds = %2
  %39 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 2
  %40 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %40, i64 0, i32 11
  %42 = load i8, i8* %41, align 1, !range !4
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %137, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 6
  %46 = load %"class.v8::internal::HeapSnapshotGenerator"*, %"class.v8::internal::HeapSnapshotGenerator"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 0
  %48 = trunc i64 %1 to i32
  %49 = ashr i32 %48, 1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %46, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %123, label %54

54:                                               ; preds = %44
  %55 = tail call i64 @llvm.ctpop.i64(i64 %52) #13, !range !3
  %56 = icmp ugt i64 %55, 1
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = add i64 %52, -1
  %59 = and i64 %58, %50
  br label %64

60:                                               ; preds = %54
  %61 = icmp ugt i64 %52, %50
  br i1 %61, label %64, label %62

62:                                               ; preds = %60
  %63 = urem i64 %50, %52
  br label %64

64:                                               ; preds = %62, %60, %57
  %65 = phi i64 [ %59, %57 ], [ %63, %62 ], [ %50, %60 ]
  %66 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %46, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load %"struct.std::__1::__hash_node_base.1448"**, %"struct.std::__1::__hash_node_base.1448"*** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %67, i64 %65
  %69 = load %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %68, align 8
  %70 = icmp eq %"struct.std::__1::__hash_node_base.1448"* %69, null
  br i1 %70, label %123, label %71

71:                                               ; preds = %64
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %69, i64 0, i32 0
  %73 = load %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %72, align 8
  %74 = icmp eq %"struct.std::__1::__hash_node_base.1448"* %73, null
  br i1 %74, label %123, label %75

75:                                               ; preds = %71
  %76 = add i64 %52, -1
  br i1 %56, label %77, label %99

77:                                               ; preds = %75, %95
  %78 = phi %"struct.std::__1::__hash_node_base.1448"* [ %97, %95 ], [ %73, %75 ]
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %78, i64 1
  %80 = bitcast %"struct.std::__1::__hash_node_base.1448"* %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = icmp eq i64 %81, %50
  br i1 %82, label %90, label %83

83:                                               ; preds = %77
  %84 = icmp ult i64 %81, %52
  br i1 %84, label %87, label %85

85:                                               ; preds = %83
  %86 = urem i64 %81, %52
  br label %87

87:                                               ; preds = %85, %83
  %88 = phi i64 [ %86, %85 ], [ %81, %83 ]
  %89 = icmp eq i64 %88, %65
  br i1 %89, label %95, label %123

90:                                               ; preds = %77
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %78, i64 2
  %92 = bitcast %"struct.std::__1::__hash_node_base.1448"* %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, %49
  br i1 %94, label %117, label %95

95:                                               ; preds = %90, %87
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %78, i64 0, i32 0
  %97 = load %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %96, align 8
  %98 = icmp eq %"struct.std::__1::__hash_node_base.1448"* %97, null
  br i1 %98, label %123, label %77

99:                                               ; preds = %75, %113
  %100 = phi %"struct.std::__1::__hash_node_base.1448"* [ %115, %113 ], [ %73, %75 ]
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %100, i64 1
  %102 = bitcast %"struct.std::__1::__hash_node_base.1448"* %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = icmp eq i64 %103, %50
  br i1 %104, label %108, label %105

105:                                              ; preds = %99
  %106 = and i64 %103, %76
  %107 = icmp eq i64 %106, %65
  br i1 %107, label %113, label %123

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %100, i64 2
  %110 = bitcast %"struct.std::__1::__hash_node_base.1448"* %109 to i32*
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %111, %49
  br i1 %112, label %117, label %113

113:                                              ; preds = %108, %105
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %100, i64 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.1448"* %115, null
  br i1 %116, label %123, label %99

117:                                              ; preds = %108, %90
  %118 = phi %"struct.std::__1::__hash_node_base.1448"* [ %78, %90 ], [ %100, %108 ]
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %118, i64 3
  %120 = bitcast %"struct.std::__1::__hash_node_base.1448"* %119 to %"class.v8::internal::HeapEntry"**
  %121 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %120, align 8
  %122 = icmp eq %"class.v8::internal::HeapEntry"* %121, null
  br i1 %122, label %123, label %137

123:                                              ; preds = %113, %105, %95, %87, %71, %44, %64, %117
  %124 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %124) #13
  store i32 %49, i32* %6, align 4
  %125 = bitcast %"class.v8::internal::HeapEntry"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #13
  %126 = bitcast %"class.v8::internal::V8HeapExplorer"* %0 to %"class.v8::internal::HeapEntry"* (%"class.v8::internal::HeapEntriesAllocator"*, i64)***
  %127 = load %"class.v8::internal::HeapEntry"* (%"class.v8::internal::HeapEntriesAllocator"*, i64)**, %"class.v8::internal::HeapEntry"* (%"class.v8::internal::HeapEntriesAllocator"*, i64)*** %126, align 8
  %128 = getelementptr inbounds %"class.v8::internal::HeapEntry"* (%"class.v8::internal::HeapEntriesAllocator"*, i64)*, %"class.v8::internal::HeapEntry"* (%"class.v8::internal::HeapEntriesAllocator"*, i64)** %127, i64 3
  %129 = load %"class.v8::internal::HeapEntry"* (%"class.v8::internal::HeapEntriesAllocator"*, i64)*, %"class.v8::internal::HeapEntry"* (%"class.v8::internal::HeapEntriesAllocator"*, i64)** %128, align 8
  %130 = tail call %"class.v8::internal::HeapEntry"* %129(%"class.v8::internal::HeapEntriesAllocator"* %47, i64 %1) #13
  store %"class.v8::internal::HeapEntry"* %130, %"class.v8::internal::HeapEntry"** %7, align 8
  %131 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %46, i64 0, i32 6, i32 0
  %132 = call { %"struct.std::__1::__hash_node_base.1448"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIiJiS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1444"* %131, i32* nonnull dereferenceable(4) %6, i32* nonnull dereferenceable(4) %6, %"class.v8::internal::HeapEntry"** nonnull dereferenceable(8) %7) #13
  %133 = extractvalue { %"struct.std::__1::__hash_node_base.1448"*, i8 } %132, 0
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %133, i64 3
  %135 = bitcast %"struct.std::__1::__hash_node_base.1448"* %134 to %"class.v8::internal::HeapEntry"**
  %136 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %135, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %124) #13
  br label %137

137:                                              ; preds = %38, %123, %117, %25, %20
  %138 = phi %"class.v8::internal::HeapEntry"* [ null, %38 ], [ %37, %25 ], [ %23, %20 ], [ %136, %123 ], [ %121, %117 ]
  ret %"class.v8::internal::HeapEntry"* %138
}

declare zeroext i1 @_ZN2v88internal7Context22is_declaration_contextEv(%"class.v8::internal::Context"*) local_unnamed_addr #4

declare i64 @_ZN2v88internal7Context10scope_infoEv(%"class.v8::internal::Context"*) local_unnamed_addr #4

declare i64 @_ZNK2v88internal9ScopeInfo16ContextLocalNameEi(%"class.v8::internal::ScopeInfo"*, i32) local_unnamed_addr #4

declare i32 @_ZNK2v88internal9ScopeInfo19ContextHeaderLengthEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer19SetContextReferenceEPNS0_9HeapEntryENS0_6StringENS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i64, i64, i32) local_unnamed_addr #2 align 2 {
  %6 = tail call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8GetEntryENS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"* %0, i64 %3)
  %7 = icmp eq %"class.v8::internal::HeapEntry"* %6, null
  br i1 %7, label %82, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 3
  %10 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %9, align 8
  %11 = tail call i8* @_ZN2v88internal14StringsStorage7GetNameENS0_4NameE(%"class.v8::internal::StringsStorage"* %10, i64 %2) #13
  %12 = ptrtoint i8* %11 to i64
  %13 = ptrtoint %"class.v8::internal::HeapEntry"* %6 to i64
  %14 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 1, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = add i32 %15, 1
  store i32 %16, i32* %14, align 4
  %17 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 4
  %18 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %18, i64 0, i32 5, i32 0, i32 0, i32 2
  %20 = bitcast %"class.v8::internal::HeapGraphEdge"*** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %18, i64 0, i32 5, i32 0, i32 0, i32 1
  %23 = bitcast %"class.v8::internal::HeapGraphEdge"*** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %21, %24
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  %28 = mul i64 %26, 170
  %29 = add i64 %28, -1
  %30 = select i1 %27, i64 0, i64 %29
  %31 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %18, i64 0, i32 5, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %18, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, %32
  %36 = icmp eq i64 %30, %35
  %37 = inttoptr i64 %24 to %"class.v8::internal::HeapGraphEdge"**
  %38 = inttoptr i64 %21 to %"class.v8::internal::HeapGraphEdge"**
  br i1 %36, label %39, label %46

39:                                               ; preds = %8
  %40 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %18, i64 0, i32 5
  tail call void @_ZNSt3__15dequeIN2v88internal13HeapGraphEdgeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.758"* %40) #13
  %41 = load i64, i64* %33, align 8
  %42 = load i64, i64* %31, align 8
  %43 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %22, align 8
  %44 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %19, align 8
  %45 = add i64 %42, %41
  br label %46

46:                                               ; preds = %39, %8
  %47 = phi i64 [ %45, %39 ], [ %35, %8 ]
  %48 = phi %"class.v8::internal::HeapGraphEdge"** [ %44, %39 ], [ %38, %8 ]
  %49 = phi %"class.v8::internal::HeapGraphEdge"** [ %43, %39 ], [ %37, %8 ]
  %50 = icmp eq %"class.v8::internal::HeapGraphEdge"** %48, %49
  br i1 %50, label %57, label %51

51:                                               ; preds = %46
  %52 = udiv i64 %47, 170
  %53 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %49, i64 %52
  %54 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %53, align 8
  %55 = urem i64 %47, 170
  %56 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %54, i64 %55
  br label %57

57:                                               ; preds = %46, %51
  %58 = phi %"class.v8::internal::HeapGraphEdge"* [ %56, %51 ], [ null, %46 ]
  %59 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %58, i64 0, i32 0
  %60 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 0
  %61 = load i32, i32* %60, align 8
  %62 = lshr i32 %61, 4
  %63 = shl nuw nsw i32 %62, 3
  store i32 %63, i32* %59, align 8
  %64 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %58, i64 0, i32 1
  %65 = bitcast %"class.v8::internal::HeapEntry"** %64 to i64*
  store i64 %13, i64* %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %58, i64 0, i32 2, i32 0
  %67 = bitcast i8** %66 to i64*
  store i64 %12, i64* %67, align 8
  %68 = load i64, i64* %33, align 8
  %69 = add i64 %68, 1
  store i64 %69, i64* %33, align 8
  %70 = icmp slt i32 %4, 0
  br i1 %70, label %82, label %71

71:                                               ; preds = %57
  %72 = lshr i32 %4, 2
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 12, i32 0
  %75 = load i64*, i64** %74, align 8
  %76 = lshr i64 %73, 6
  %77 = getelementptr inbounds i64, i64* %75, i64 %76
  %78 = and i64 %73, 63
  %79 = shl i64 1, %78
  %80 = load i64, i64* %77, align 8
  %81 = or i64 %80, %79
  store i64 %81, i64* %77, align 8
  br label %82

82:                                               ; preds = %71, %57, %5
  ret void
}

declare zeroext i1 @_ZNK2v88internal9ScopeInfo15HasFunctionNameEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #4

declare i64 @_ZNK2v88internal9ScopeInfo12FunctionNameEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #4

declare i32 @_ZNK2v88internal9ScopeInfo24FunctionContextSlotIndexENS0_6StringE(%"class.v8::internal::ScopeInfo"*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer16SetWeakReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i8*, i64, i32) local_unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 1
  %7 = bitcast %"class.v8::internal::Heap"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, -41416
  %10 = inttoptr i64 %9 to %"class.v8::internal::Isolate"*
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 0
  %12 = and i64 %3, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %153, label %14

14:                                               ; preds = %5
  %15 = and i64 %3, -4294967296
  %16 = add i64 %3, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %15, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = icmp eq i16 %23, 67
  br i1 %24, label %153, label %25

25:                                               ; preds = %14
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 107
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %3 to i32
  %29 = trunc i64 %27 to i32
  %30 = icmp eq i32 %28, %29
  br i1 %30, label %153, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 29
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %33 to i32
  %35 = icmp eq i32 %28, %34
  br i1 %35, label %153, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 119
  %38 = load i64, i64* %37, align 8
  %39 = trunc i64 %38 to i32
  %40 = icmp eq i32 %28, %39
  br i1 %40, label %153, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 30
  %43 = load i64, i64* %42, align 8
  %44 = trunc i64 %43 to i32
  %45 = icmp eq i32 %28, %44
  br i1 %45, label %153, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 12
  %48 = load i64, i64* %47, align 8
  %49 = trunc i64 %48 to i32
  %50 = icmp eq i32 %28, %49
  br i1 %50, label %153, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 21
  %53 = load i64, i64* %52, align 8
  %54 = trunc i64 %53 to i32
  %55 = icmp eq i32 %28, %54
  br i1 %55, label %153, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 22
  %58 = load i64, i64* %57, align 8
  %59 = trunc i64 %58 to i32
  %60 = icmp eq i32 %28, %59
  br i1 %60, label %153, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 19
  %63 = load i64, i64* %62, align 8
  %64 = trunc i64 %63 to i32
  %65 = icmp eq i32 %28, %64
  br i1 %65, label %153, label %66

66:                                               ; preds = %61
  %67 = load i64, i64* %11, align 8
  %68 = trunc i64 %67 to i32
  %69 = icmp eq i32 %28, %68
  br i1 %69, label %153, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 1
  %72 = load i64, i64* %71, align 8
  %73 = trunc i64 %72 to i32
  %74 = icmp eq i32 %28, %73
  br i1 %74, label %153, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 2
  %77 = load i64, i64* %76, align 8
  %78 = trunc i64 %77 to i32
  %79 = icmp eq i32 %28, %78
  br i1 %79, label %153, label %80

80:                                               ; preds = %75
  %81 = tail call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8GetEntryENS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"* %0, i64 %3)
  %82 = ptrtoint i8* %2 to i64
  %83 = ptrtoint %"class.v8::internal::HeapEntry"* %81 to i64
  %84 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 1, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = add i32 %85, 1
  store i32 %86, i32* %84, align 4
  %87 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 4
  %88 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %88, i64 0, i32 5, i32 0, i32 0, i32 2
  %90 = bitcast %"class.v8::internal::HeapGraphEdge"*** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %88, i64 0, i32 5, i32 0, i32 0, i32 1
  %93 = bitcast %"class.v8::internal::HeapGraphEdge"*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %91, %94
  %96 = ashr exact i64 %95, 3
  %97 = icmp eq i64 %95, 0
  %98 = mul i64 %96, 170
  %99 = add i64 %98, -1
  %100 = select i1 %97, i64 0, i64 %99
  %101 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %88, i64 0, i32 5, i32 0, i32 1
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %88, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %104 = load i64, i64* %103, align 8
  %105 = add i64 %104, %102
  %106 = icmp eq i64 %100, %105
  %107 = inttoptr i64 %94 to %"class.v8::internal::HeapGraphEdge"**
  %108 = inttoptr i64 %91 to %"class.v8::internal::HeapGraphEdge"**
  br i1 %106, label %109, label %116

109:                                              ; preds = %80
  %110 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %88, i64 0, i32 5
  tail call void @_ZNSt3__15dequeIN2v88internal13HeapGraphEdgeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.758"* %110) #13
  %111 = load i64, i64* %103, align 8
  %112 = load i64, i64* %101, align 8
  %113 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %92, align 8
  %114 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %89, align 8
  %115 = add i64 %112, %111
  br label %116

116:                                              ; preds = %109, %80
  %117 = phi i64 [ %115, %109 ], [ %105, %80 ]
  %118 = phi %"class.v8::internal::HeapGraphEdge"** [ %114, %109 ], [ %108, %80 ]
  %119 = phi %"class.v8::internal::HeapGraphEdge"** [ %113, %109 ], [ %107, %80 ]
  %120 = icmp eq %"class.v8::internal::HeapGraphEdge"** %118, %119
  br i1 %120, label %127, label %121

121:                                              ; preds = %116
  %122 = udiv i64 %117, 170
  %123 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %119, i64 %122
  %124 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %123, align 8
  %125 = urem i64 %117, 170
  %126 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %124, i64 %125
  br label %127

127:                                              ; preds = %116, %121
  %128 = phi %"class.v8::internal::HeapGraphEdge"* [ %126, %121 ], [ null, %116 ]
  %129 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %128, i64 0, i32 0
  %130 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 0
  %131 = load i32, i32* %130, align 8
  %132 = lshr i32 %131, 4
  %133 = shl nuw nsw i32 %132, 3
  %134 = or i32 %133, 6
  store i32 %134, i32* %129, align 8
  %135 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %128, i64 0, i32 1
  %136 = bitcast %"class.v8::internal::HeapEntry"** %135 to i64*
  store i64 %83, i64* %136, align 8
  %137 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %128, i64 0, i32 2, i32 0
  %138 = bitcast i8** %137 to i64*
  store i64 %82, i64* %138, align 8
  %139 = load i64, i64* %103, align 8
  %140 = add i64 %139, 1
  store i64 %140, i64* %103, align 8
  %141 = icmp slt i32 %4, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %127
  %143 = lshr i32 %4, 2
  %144 = zext i32 %143 to i64
  %145 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 12, i32 0
  %146 = load i64*, i64** %145, align 8
  %147 = lshr i64 %144, 6
  %148 = getelementptr inbounds i64, i64* %146, i64 %147
  %149 = and i64 %144, 63
  %150 = shl i64 1, %149
  %151 = load i64, i64* %148, align 8
  %152 = or i64 %151, %150
  store i64 %152, i64* %148, align 8
  br label %153

153:                                              ; preds = %75, %5, %14, %25, %31, %36, %41, %46, %51, %56, %61, %66, %70, %142, %127
  ret void
}

declare i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #4

declare i64 @_ZNK2v88internal18SharedFunctionInfo7GetCodeEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #4

declare i8* @_ZN2v88internal16CodeKindToStringENS0_8CodeKindE(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer20TagBuiltinCodeObjectENS0_4CodeEPKc(%"class.v8::internal::V8HeapExplorer"*, i64, i8*) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 3
  %5 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %4, align 8
  %6 = tail call i8* (%"class.v8::internal::StringsStorage"*, i8*, ...) @_ZN2v88internal14StringsStorage12GetFormattedEPKcz(%"class.v8::internal::StringsStorage"* %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.338, i64 0, i64 0), i8* %2) #13
  tail call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %0, i64 %1, i8* %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEiNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i32, i64, i32) local_unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 1
  %7 = bitcast %"class.v8::internal::Heap"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, -41416
  %10 = inttoptr i64 %9 to %"class.v8::internal::Isolate"*
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 0
  %12 = and i64 %3, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %156, label %14

14:                                               ; preds = %5
  %15 = and i64 %3, -4294967296
  %16 = add i64 %3, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %15, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = icmp eq i16 %23, 67
  br i1 %24, label %156, label %25

25:                                               ; preds = %14
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 107
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %3 to i32
  %29 = trunc i64 %27 to i32
  %30 = icmp eq i32 %28, %29
  br i1 %30, label %156, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 29
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %33 to i32
  %35 = icmp eq i32 %28, %34
  br i1 %35, label %156, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 119
  %38 = load i64, i64* %37, align 8
  %39 = trunc i64 %38 to i32
  %40 = icmp eq i32 %28, %39
  br i1 %40, label %156, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 30
  %43 = load i64, i64* %42, align 8
  %44 = trunc i64 %43 to i32
  %45 = icmp eq i32 %28, %44
  br i1 %45, label %156, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 12
  %48 = load i64, i64* %47, align 8
  %49 = trunc i64 %48 to i32
  %50 = icmp eq i32 %28, %49
  br i1 %50, label %156, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 21
  %53 = load i64, i64* %52, align 8
  %54 = trunc i64 %53 to i32
  %55 = icmp eq i32 %28, %54
  br i1 %55, label %156, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 22
  %58 = load i64, i64* %57, align 8
  %59 = trunc i64 %58 to i32
  %60 = icmp eq i32 %28, %59
  br i1 %60, label %156, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 19
  %63 = load i64, i64* %62, align 8
  %64 = trunc i64 %63 to i32
  %65 = icmp eq i32 %28, %64
  br i1 %65, label %156, label %66

66:                                               ; preds = %61
  %67 = load i64, i64* %11, align 8
  %68 = trunc i64 %67 to i32
  %69 = icmp eq i32 %28, %68
  br i1 %69, label %156, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 1
  %72 = load i64, i64* %71, align 8
  %73 = trunc i64 %72 to i32
  %74 = icmp eq i32 %28, %73
  br i1 %74, label %156, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 2
  %77 = load i64, i64* %76, align 8
  %78 = trunc i64 %77 to i32
  %79 = icmp eq i32 %28, %78
  br i1 %79, label %156, label %80

80:                                               ; preds = %75
  %81 = tail call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8GetEntryENS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"* %0, i64 %3)
  %82 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 3
  %83 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %82, align 8
  %84 = tail call i8* @_ZN2v88internal14StringsStorage7GetNameEi(%"class.v8::internal::StringsStorage"* %83, i32 %2) #13
  %85 = ptrtoint i8* %84 to i64
  %86 = ptrtoint %"class.v8::internal::HeapEntry"* %81 to i64
  %87 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 1, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = add i32 %88, 1
  store i32 %89, i32* %87, align 4
  %90 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 4
  %91 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %91, i64 0, i32 5, i32 0, i32 0, i32 2
  %93 = bitcast %"class.v8::internal::HeapGraphEdge"*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %91, i64 0, i32 5, i32 0, i32 0, i32 1
  %96 = bitcast %"class.v8::internal::HeapGraphEdge"*** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = sub i64 %94, %97
  %99 = ashr exact i64 %98, 3
  %100 = icmp eq i64 %98, 0
  %101 = mul i64 %99, 170
  %102 = add i64 %101, -1
  %103 = select i1 %100, i64 0, i64 %102
  %104 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %91, i64 0, i32 5, i32 0, i32 1
  %105 = load i64, i64* %104, align 8
  %106 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %91, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %107 = load i64, i64* %106, align 8
  %108 = add i64 %107, %105
  %109 = icmp eq i64 %103, %108
  %110 = inttoptr i64 %97 to %"class.v8::internal::HeapGraphEdge"**
  %111 = inttoptr i64 %94 to %"class.v8::internal::HeapGraphEdge"**
  br i1 %109, label %112, label %119

112:                                              ; preds = %80
  %113 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %91, i64 0, i32 5
  tail call void @_ZNSt3__15dequeIN2v88internal13HeapGraphEdgeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.758"* %113) #13
  %114 = load i64, i64* %106, align 8
  %115 = load i64, i64* %104, align 8
  %116 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %95, align 8
  %117 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %92, align 8
  %118 = add i64 %115, %114
  br label %119

119:                                              ; preds = %112, %80
  %120 = phi i64 [ %118, %112 ], [ %108, %80 ]
  %121 = phi %"class.v8::internal::HeapGraphEdge"** [ %117, %112 ], [ %111, %80 ]
  %122 = phi %"class.v8::internal::HeapGraphEdge"** [ %116, %112 ], [ %110, %80 ]
  %123 = icmp eq %"class.v8::internal::HeapGraphEdge"** %121, %122
  br i1 %123, label %130, label %124

124:                                              ; preds = %119
  %125 = udiv i64 %120, 170
  %126 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %122, i64 %125
  %127 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %126, align 8
  %128 = urem i64 %120, 170
  %129 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %127, i64 %128
  br label %130

130:                                              ; preds = %119, %124
  %131 = phi %"class.v8::internal::HeapGraphEdge"* [ %129, %124 ], [ null, %119 ]
  %132 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %131, i64 0, i32 0
  %133 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 0
  %134 = load i32, i32* %133, align 8
  %135 = lshr i32 %134, 4
  %136 = shl nuw nsw i32 %135, 3
  %137 = or i32 %136, 3
  store i32 %137, i32* %132, align 8
  %138 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %131, i64 0, i32 1
  %139 = bitcast %"class.v8::internal::HeapEntry"** %138 to i64*
  store i64 %86, i64* %139, align 8
  %140 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %131, i64 0, i32 2, i32 0
  %141 = bitcast i8** %140 to i64*
  store i64 %85, i64* %141, align 8
  %142 = load i64, i64* %106, align 8
  %143 = add i64 %142, 1
  store i64 %143, i64* %106, align 8
  %144 = icmp slt i32 %4, 0
  br i1 %144, label %156, label %145

145:                                              ; preds = %130
  %146 = lshr i32 %4, 2
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 12, i32 0
  %149 = load i64*, i64** %148, align 8
  %150 = lshr i64 %147, 6
  %151 = getelementptr inbounds i64, i64* %149, i64 %150
  %152 = and i64 %147, 63
  %153 = shl i64 1, %152
  %154 = load i64, i64* %151, align 8
  %155 = or i64 %154, %153
  store i64 %155, i64* %151, align 8
  br label %156

156:                                              ; preds = %75, %5, %14, %25, %31, %36, %41, %46, %51, %56, %61, %66, %70, %145, %130
  ret void
}

declare i8* @_ZN2v88internal12IntToCStringEiNS0_6VectorIcEE(i32, i8*, i64) local_unnamed_addr #4

declare i8* @_ZN2v88internal15DoubleToCStringEdNS0_6VectorIcEE(double, i8*, i64) local_unnamed_addr #4

declare i8* @_ZN2v88internal14StringsStorage7GetCopyEPKc(%"class.v8::internal::StringsStorage"*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer34SetDataOrAccessorPropertyReferenceENS0_12PropertyKindEPNS0_9HeapEntryENS0_4NameENS0_6ObjectEPKci(%"class.v8::internal::V8HeapExplorer"*, i32, %"class.v8::internal::HeapEntry"* nocapture, i64, i64, i8*, i32) local_unnamed_addr #2 align 2 {
  %8 = icmp eq i32 %1, 1
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  tail call void @_ZN2v88internal14V8HeapExplorer27ExtractAccessorPairPropertyEPNS0_9HeapEntryENS0_4NameENS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %2, i64 %3, i64 %4, i32 %6)
  br label %11

10:                                               ; preds = %7
  tail call void @_ZN2v88internal14V8HeapExplorer20SetPropertyReferenceEPNS0_9HeapEntryENS0_4NameENS0_6ObjectEPKci(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %2, i64 %3, i64 %4, i8* %5, i32 %6)
  br label %11

11:                                               ; preds = %10, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer27ExtractAccessorPairPropertyEPNS0_9HeapEntryENS0_4NameENS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i64, i64, i32) local_unnamed_addr #2 align 2 {
  %6 = and i64 %3, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %57, label %8

8:                                                ; preds = %5
  %9 = and i64 %3, -4294967296
  %10 = add i64 %3, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = icmp eq i16 %17, 87
  br i1 %18, label %19, label %57

19:                                               ; preds = %8
  tail call void @_ZN2v88internal14V8HeapExplorer20SetPropertyReferenceEPNS0_9HeapEntryENS0_4NameENS0_6ObjectEPKci(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i64 %2, i64 %3, i8* null, i32 %4)
  %20 = add i64 %3, 3
  %21 = inttoptr i64 %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %9, %23
  %25 = and i64 %23, 1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %37, label %27

27:                                               ; preds = %19
  %28 = add i64 %24, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %9, %31
  %33 = add i64 %32, 7
  %34 = inttoptr i64 %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = icmp eq i16 %35, 67
  br i1 %36, label %38, label %37

37:                                               ; preds = %19, %27
  tail call void @_ZN2v88internal14V8HeapExplorer20SetPropertyReferenceEPNS0_9HeapEntryENS0_4NameENS0_6ObjectEPKci(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i64 %2, i64 %24, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.359, i64 0, i64 0), i32 -1)
  br label %38

38:                                               ; preds = %37, %27
  %39 = add i64 %3, 7
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %9, %42
  %44 = and i64 %42, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %38
  %47 = add i64 %43, -1
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = zext i32 %49 to i64
  %51 = or i64 %9, %50
  %52 = add i64 %51, 7
  %53 = inttoptr i64 %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = icmp eq i16 %54, 67
  br i1 %55, label %57, label %56

56:                                               ; preds = %38, %46
  tail call void @_ZN2v88internal14V8HeapExplorer20SetPropertyReferenceEPNS0_9HeapEntryENS0_4NameENS0_6ObjectEPKci(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %1, i64 %2, i64 %43, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.360, i64 0, i64 0), i32 -1)
  br label %57

57:                                               ; preds = %5, %46, %56, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer19SetElementReferenceEPNS0_9HeapEntryEiNS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapEntry"* nocapture, i32, i64) local_unnamed_addr #2 align 2 {
  %5 = tail call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8GetEntryENS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"* %0, i64 %3)
  %6 = icmp eq %"class.v8::internal::HeapEntry"* %5, null
  br i1 %6, label %66, label %7

7:                                                ; preds = %4
  %8 = ptrtoint %"class.v8::internal::HeapEntry"* %5 to i64
  %9 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = add i32 %10, 1
  store i32 %11, i32* %9, align 4
  %12 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 4
  %13 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %13, i64 0, i32 5, i32 0, i32 0, i32 2
  %15 = bitcast %"class.v8::internal::HeapGraphEdge"*** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %13, i64 0, i32 5, i32 0, i32 0, i32 1
  %18 = bitcast %"class.v8::internal::HeapGraphEdge"*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %16, %19
  %21 = ashr exact i64 %20, 3
  %22 = icmp eq i64 %20, 0
  %23 = mul i64 %21, 170
  %24 = add i64 %23, -1
  %25 = select i1 %22, i64 0, i64 %24
  %26 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %13, i64 0, i32 5, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %13, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, %27
  %31 = icmp eq i64 %25, %30
  %32 = inttoptr i64 %19 to %"class.v8::internal::HeapGraphEdge"**
  %33 = inttoptr i64 %16 to %"class.v8::internal::HeapGraphEdge"**
  br i1 %31, label %34, label %41

34:                                               ; preds = %7
  %35 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %13, i64 0, i32 5
  tail call void @_ZNSt3__15dequeIN2v88internal13HeapGraphEdgeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.758"* %35) #13
  %36 = load i64, i64* %28, align 8
  %37 = load i64, i64* %26, align 8
  %38 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %17, align 8
  %39 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %14, align 8
  %40 = add i64 %37, %36
  br label %41

41:                                               ; preds = %34, %7
  %42 = phi i64 [ %40, %34 ], [ %30, %7 ]
  %43 = phi %"class.v8::internal::HeapGraphEdge"** [ %39, %34 ], [ %33, %7 ]
  %44 = phi %"class.v8::internal::HeapGraphEdge"** [ %38, %34 ], [ %32, %7 ]
  %45 = icmp eq %"class.v8::internal::HeapGraphEdge"** %43, %44
  br i1 %45, label %52, label %46

46:                                               ; preds = %41
  %47 = udiv i64 %42, 170
  %48 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %44, i64 %47
  %49 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %48, align 8
  %50 = urem i64 %42, 170
  %51 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %49, i64 %50
  br label %52

52:                                               ; preds = %41, %46
  %53 = phi %"class.v8::internal::HeapGraphEdge"* [ %51, %46 ], [ null, %41 ]
  %54 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %53, i64 0, i32 0
  %55 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = lshr i32 %56, 4
  %58 = shl nuw nsw i32 %57, 3
  %59 = or i32 %58, 1
  store i32 %59, i32* %54, align 8
  %60 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %53, i64 0, i32 1
  %61 = bitcast %"class.v8::internal::HeapEntry"** %60 to i64*
  store i64 %8, i64* %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %53, i64 0, i32 2
  %63 = bitcast %union.anon.807* %62 to i32*
  store i32 %2, i32* %63, align 8
  %64 = load i64, i64* %28, align 8
  %65 = add i64 %64, 1
  store i64 %65, i64* %28, align 8
  br label %66

66:                                               ; preds = %4, %52
  ret void
}

declare i64* @_ZN2v88internal10JSReceiver14GetConstructorENS0_6HandleIS1_EE(i64*) local_unnamed_addr #4

declare i64* @_ZN2v88internal10JSReceiver18GetConstructorNameENS0_6HandleIS1_EE(i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal14V8HeapExplorer27IterateAndExtractReferencesEPNS0_21HeapSnapshotGeneratorE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::HeapSnapshotGenerator"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.v8::internal::RootsReferencesExtractor", align 8
  %4 = alloca %"class.v8::internal::ReadOnlyRoots", align 8
  %5 = alloca %"class.v8::internal::CombinedHeapObjectIterator", align 8
  %6 = alloca %"class.v8::internal::HeapObject", align 8
  %7 = alloca %"class.v8::internal::IndexedReferencesExtractor", align 8
  %8 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 6
  store %"class.v8::internal::HeapSnapshotGenerator"* %1, %"class.v8::internal::HeapSnapshotGenerator"** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 2
  %10 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %10, i64 0, i32 1
  %12 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %10, i64 0, i32 2
  %14 = bitcast %"class.v8::internal::HeapEntry"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %12, i64 0, i32 1, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, 1
  store i32 %18, i32* %16, align 4
  %19 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %12, i64 0, i32 4
  %20 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %20, i64 0, i32 5, i32 0, i32 0, i32 2
  %22 = bitcast %"class.v8::internal::HeapGraphEdge"*** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %20, i64 0, i32 5, i32 0, i32 0, i32 1
  %25 = bitcast %"class.v8::internal::HeapGraphEdge"*** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %23, %26
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  %30 = mul i64 %28, 170
  %31 = add i64 %30, -1
  %32 = select i1 %29, i64 0, i64 %31
  %33 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %20, i64 0, i32 5, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %20, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, %34
  %38 = icmp eq i64 %32, %37
  %39 = inttoptr i64 %26 to %"class.v8::internal::HeapGraphEdge"**
  %40 = inttoptr i64 %23 to %"class.v8::internal::HeapGraphEdge"**
  br i1 %38, label %41, label %48

41:                                               ; preds = %2
  %42 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %20, i64 0, i32 5
  tail call void @_ZNSt3__15dequeIN2v88internal13HeapGraphEdgeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.758"* %42) #13
  %43 = load i64, i64* %35, align 8
  %44 = load i64, i64* %33, align 8
  %45 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %24, align 8
  %46 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %21, align 8
  %47 = add i64 %44, %43
  br label %48

48:                                               ; preds = %41, %2
  %49 = phi i64 [ %47, %41 ], [ %37, %2 ]
  %50 = phi %"class.v8::internal::HeapGraphEdge"** [ %46, %41 ], [ %40, %2 ]
  %51 = phi %"class.v8::internal::HeapGraphEdge"** [ %45, %41 ], [ %39, %2 ]
  %52 = icmp eq %"class.v8::internal::HeapGraphEdge"** %50, %51
  br i1 %52, label %59, label %53

53:                                               ; preds = %48
  %54 = udiv i64 %49, 170
  %55 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %51, i64 %54
  %56 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %55, align 8
  %57 = urem i64 %49, 170
  %58 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %56, i64 %57
  br label %59

59:                                               ; preds = %48, %53
  %60 = phi %"class.v8::internal::HeapGraphEdge"* [ %58, %53 ], [ null, %48 ]
  %61 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %60, i64 0, i32 0
  %62 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %12, i64 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = lshr i32 %63, 4
  %65 = shl nuw nsw i32 %64, 3
  %66 = or i32 %65, 1
  store i32 %66, i32* %61, align 8
  %67 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %60, i64 0, i32 1
  %68 = bitcast %"class.v8::internal::HeapEntry"** %67 to i64*
  store i64 %15, i64* %68, align 8
  %69 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %60, i64 0, i32 2
  %70 = bitcast %union.anon.807* %69 to i32*
  store i32 %18, i32* %70, align 8
  %71 = load i64, i64* %35, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %35, align 8
  br label %116

73:                                               ; preds = %167
  %74 = bitcast %"class.v8::internal::RootsReferencesExtractor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #13
  %75 = getelementptr inbounds %"class.v8::internal::RootsReferencesExtractor", %"class.v8::internal::RootsReferencesExtractor"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal24RootsReferencesExtractorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %75, align 8
  %76 = getelementptr inbounds %"class.v8::internal::RootsReferencesExtractor", %"class.v8::internal::RootsReferencesExtractor"* %3, i64 0, i32 1
  store %"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::V8HeapExplorer"** %76, align 8
  %77 = getelementptr inbounds %"class.v8::internal::RootsReferencesExtractor", %"class.v8::internal::RootsReferencesExtractor"* %3, i64 0, i32 2
  store i8 0, i8* %77, align 8
  %78 = bitcast %"class.v8::internal::ReadOnlyRoots"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #13
  %79 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 1
  %80 = bitcast %"class.v8::internal::Heap"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = add i64 %81, -41416
  %83 = inttoptr i64 %82 to %"class.v8::internal::Isolate"*
  %84 = getelementptr inbounds %"class.v8::internal::ReadOnlyRoots", %"class.v8::internal::ReadOnlyRoots"* %4, i64 0, i32 0
  %85 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %83, i64 0, i32 0, i32 7, i32 0, i64 0
  store i64* %85, i64** %84, align 8
  %86 = getelementptr inbounds %"class.v8::internal::RootsReferencesExtractor", %"class.v8::internal::RootsReferencesExtractor"* %3, i64 0, i32 0
  call void @_ZN2v88internal13ReadOnlyRoots7IterateEPNS0_11RootVisitorE(%"class.v8::internal::ReadOnlyRoots"* nonnull %4, %"class.v8::internal::RootVisitor"* nonnull %86) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #13
  %87 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %79, align 8
  call void @_ZN2v88internal4Heap12IterateRootsEPNS0_11RootVisitorENS_4base7EnumSetINS0_8SkipRootEiEE(%"class.v8::internal::Heap"* %87, %"class.v8::internal::RootVisitor"* nonnull %86, i32 64) #13
  %88 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %79, align 8
  call void @_ZN2v88internal4Heap16IterateWeakRootsEPNS0_11RootVisitorENS_4base7EnumSetINS0_8SkipRootEiEE(%"class.v8::internal::Heap"* %88, %"class.v8::internal::RootVisitor"* nonnull %86, i32 0) #13
  store i8 1, i8* %77, align 8
  %89 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %79, align 8
  call void @_ZN2v88internal4Heap24IterateWeakGlobalHandlesEPNS0_11RootVisitorE(%"class.v8::internal::Heap"* %89, %"class.v8::internal::RootVisitor"* nonnull %86) #13
  %90 = bitcast %"class.v8::internal::CombinedHeapObjectIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %90) #13
  %91 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %79, align 8
  call void @_ZN2v88internal26CombinedHeapObjectIteratorC1EPNS0_4HeapENS0_18HeapObjectIterator20HeapObjectsFilteringE(%"class.v8::internal::CombinedHeapObjectIterator"* nonnull %5, %"class.v8::internal::Heap"* %91, i32 1) #13
  %92 = bitcast %"class.v8::internal::HeapObject"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #13
  %93 = call i64 @_ZN2v88internal26CombinedHeapObjectIterator4NextEv(%"class.v8::internal::CombinedHeapObjectIterator"* nonnull %5) #13
  %94 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %6, i64 0, i32 0, i32 0, i32 0
  store i64 %93, i64* %94, align 8
  %95 = trunc i64 %93 to i32
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %73
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #13
  store %"class.v8::internal::HeapSnapshotGenerator"* null, %"class.v8::internal::HeapSnapshotGenerator"** %8, align 8
  br label %251

98:                                               ; preds = %73
  %99 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 12
  %100 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 12, i32 1
  %101 = bitcast %"class.std::__1::vector.1411"* %99 to i64*
  %102 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 12, i32 2, i32 0, i32 0
  %103 = bitcast %"class.v8::internal::IndexedReferencesExtractor"* %7 to i8*
  %104 = getelementptr inbounds %"class.v8::internal::IndexedReferencesExtractor", %"class.v8::internal::IndexedReferencesExtractor"* %7, i64 0, i32 0, i32 0
  %105 = getelementptr inbounds %"class.v8::internal::IndexedReferencesExtractor", %"class.v8::internal::IndexedReferencesExtractor"* %7, i64 0, i32 1
  %106 = getelementptr inbounds %"class.v8::internal::IndexedReferencesExtractor", %"class.v8::internal::IndexedReferencesExtractor"* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  %107 = getelementptr inbounds %"class.v8::internal::IndexedReferencesExtractor", %"class.v8::internal::IndexedReferencesExtractor"* %7, i64 0, i32 2
  %108 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %107, i64 0, i32 0, i32 0, i32 0
  %109 = getelementptr inbounds %"class.v8::internal::IndexedReferencesExtractor", %"class.v8::internal::IndexedReferencesExtractor"* %7, i64 0, i32 3, i32 0, i32 0
  %110 = getelementptr inbounds %"class.v8::internal::IndexedReferencesExtractor", %"class.v8::internal::IndexedReferencesExtractor"* %7, i64 0, i32 4, i32 0, i32 0
  %111 = getelementptr inbounds %"class.v8::internal::IndexedReferencesExtractor", %"class.v8::internal::IndexedReferencesExtractor"* %7, i64 0, i32 5
  %112 = getelementptr inbounds %"class.v8::internal::IndexedReferencesExtractor", %"class.v8::internal::IndexedReferencesExtractor"* %7, i64 0, i32 6
  %113 = getelementptr inbounds %"class.v8::internal::IndexedReferencesExtractor", %"class.v8::internal::IndexedReferencesExtractor"* %7, i64 0, i32 0
  %114 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 5
  %115 = bitcast %"class.std::__1::vector.1411"* %99 to i8*
  br label %186

116:                                              ; preds = %167, %59
  %117 = phi i64 [ 0, %59 ], [ %181, %167 ]
  %118 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %9, align 8
  %119 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %118, i64 0, i32 2
  %120 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %119, align 8
  %121 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %118, i64 0, i32 3, i64 %117
  %122 = bitcast %"class.v8::internal::HeapEntry"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %120, i64 0, i32 1, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = add i32 %125, 1
  store i32 %126, i32* %124, align 4
  %127 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %120, i64 0, i32 4
  %128 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %127, align 8
  %129 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %128, i64 0, i32 5, i32 0, i32 0, i32 2
  %130 = bitcast %"class.v8::internal::HeapGraphEdge"*** %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %128, i64 0, i32 5, i32 0, i32 0, i32 1
  %133 = bitcast %"class.v8::internal::HeapGraphEdge"*** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = sub i64 %131, %134
  %136 = ashr exact i64 %135, 3
  %137 = icmp eq i64 %135, 0
  %138 = mul i64 %136, 170
  %139 = add i64 %138, -1
  %140 = select i1 %137, i64 0, i64 %139
  %141 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %128, i64 0, i32 5, i32 0, i32 1
  %142 = load i64, i64* %141, align 8
  %143 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %128, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %144 = load i64, i64* %143, align 8
  %145 = add i64 %144, %142
  %146 = icmp eq i64 %140, %145
  %147 = inttoptr i64 %134 to %"class.v8::internal::HeapGraphEdge"**
  %148 = inttoptr i64 %131 to %"class.v8::internal::HeapGraphEdge"**
  br i1 %146, label %149, label %156

149:                                              ; preds = %116
  %150 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %128, i64 0, i32 5
  tail call void @_ZNSt3__15dequeIN2v88internal13HeapGraphEdgeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.758"* %150) #13
  %151 = load i64, i64* %143, align 8
  %152 = load i64, i64* %141, align 8
  %153 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %132, align 8
  %154 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %129, align 8
  %155 = add i64 %152, %151
  br label %156

156:                                              ; preds = %149, %116
  %157 = phi i64 [ %155, %149 ], [ %145, %116 ]
  %158 = phi %"class.v8::internal::HeapGraphEdge"** [ %154, %149 ], [ %148, %116 ]
  %159 = phi %"class.v8::internal::HeapGraphEdge"** [ %153, %149 ], [ %147, %116 ]
  %160 = icmp eq %"class.v8::internal::HeapGraphEdge"** %158, %159
  br i1 %160, label %167, label %161

161:                                              ; preds = %156
  %162 = udiv i64 %157, 170
  %163 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %159, i64 %162
  %164 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %163, align 8
  %165 = urem i64 %157, 170
  %166 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %164, i64 %165
  br label %167

167:                                              ; preds = %156, %161
  %168 = phi %"class.v8::internal::HeapGraphEdge"* [ %166, %161 ], [ null, %156 ]
  %169 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %168, i64 0, i32 0
  %170 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %120, i64 0, i32 0
  %171 = load i32, i32* %170, align 8
  %172 = lshr i32 %171, 4
  %173 = shl nuw nsw i32 %172, 3
  %174 = or i32 %173, 1
  store i32 %174, i32* %169, align 8
  %175 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %168, i64 0, i32 1
  %176 = bitcast %"class.v8::internal::HeapEntry"** %175 to i64*
  store i64 %123, i64* %176, align 8
  %177 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %168, i64 0, i32 2
  %178 = bitcast %union.anon.807* %177 to i32*
  store i32 %126, i32* %178, align 8
  %179 = load i64, i64* %143, align 8
  %180 = add i64 %179, 1
  store i64 %180, i64* %143, align 8
  %181 = add nuw nsw i64 %117, 1
  %182 = icmp eq i64 %181, 25
  br i1 %182, label %73, label %116

183:                                              ; preds = %240
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #13
  store %"class.v8::internal::HeapSnapshotGenerator"* null, %"class.v8::internal::HeapSnapshotGenerator"** %8, align 8
  %184 = and i8 %241, 1
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %251, label %259

186:                                              ; preds = %98, %240
  %187 = phi i64 [ %93, %98 ], [ %248, %240 ]
  %188 = phi i8 [ 0, %98 ], [ %241, %240 ]
  %189 = and i8 %188, 1
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %191, label %240

191:                                              ; preds = %186
  %192 = and i64 %187, -4294967296
  %193 = add i64 %187, -1
  %194 = inttoptr i64 %193 to i32*
  %195 = load atomic i32, i32* %194 monotonic, align 4
  %196 = zext i32 %195 to i64
  %197 = or i64 %192, %196
  %198 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %6, i64 %197) #13
  %199 = sdiv i32 %198, 4
  %200 = sext i32 %199 to i64
  %201 = load i64, i64* %100, align 8
  %202 = icmp ult i64 %201, %200
  br i1 %202, label %203, label %209

203:                                              ; preds = %191
  %204 = load i64, i64* %101, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 16, i1 false)
  store i64 0, i64* %102, align 8
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %208, label %206

206:                                              ; preds = %203
  %207 = inttoptr i64 %204 to i8*
  call void @_ZdlPv(i8* %207) #21
  br label %208

208:                                              ; preds = %203, %206
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE6resizeEmb(%"class.std::__1::vector.1411"* %99, i64 %200, i1 zeroext false)
  br label %209

209:                                              ; preds = %208, %191
  %210 = load i64, i64* %94, align 8
  %211 = call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8GetEntryENS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"* %0, i64 %210)
  %212 = load i64, i64* %94, align 8
  call void @_ZN2v88internal14V8HeapExplorer17ExtractReferencesEPNS0_9HeapEntryENS0_10HeapObjectE(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %211, i64 %212)
  %213 = load i64, i64* %94, align 8
  %214 = and i64 %213, -4294967296
  %215 = add i64 %213, -1
  %216 = inttoptr i64 %215 to i32*
  %217 = load atomic i32, i32* %216 monotonic, align 4
  %218 = zext i32 %217 to i64
  %219 = or i64 %214, %218
  call void @_ZN2v88internal14V8HeapExplorer20SetInternalReferenceEPNS0_9HeapEntryEPKcNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %211, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.361, i64 0, i64 0), i64 %219, i32 0)
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %103) #13
  %220 = load i64, i64* %94, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN2v88internal26IndexedReferencesExtractorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %104, align 8
  store %"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::V8HeapExplorer"** %105, align 8
  store i64 %220, i64* %106, align 8
  %221 = add i64 %220, -1
  store i64 %221, i64* %109, align 8
  %222 = and i64 %220, -4294967296
  %223 = inttoptr i64 %221 to i32*
  %224 = load atomic i32, i32* %223 monotonic, align 4
  %225 = zext i32 %224 to i64
  %226 = or i64 %222, %225
  %227 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* %107, i64 %226) #13
  %228 = sext i32 %227 to i64
  %229 = load i64, i64* %108, align 8
  %230 = add nsw i64 %228, -1
  %231 = add i64 %230, %229
  store i64 %231, i64* %110, align 8
  store %"class.v8::internal::HeapEntry"* %211, %"class.v8::internal::HeapEntry"** %111, align 8
  store i32 0, i32* %112, align 8
  call void @_ZN2v88internal10HeapObject7IterateEPNS0_13ObjectVisitorE(%"class.v8::internal::HeapObject"* nonnull %6, %"class.v8::internal::ObjectVisitor"* nonnull %113) #13
  %232 = load i64, i64* %94, align 8
  call void @_ZN2v88internal14V8HeapExplorer15ExtractLocationEPNS0_9HeapEntryENS0_10HeapObjectE(%"class.v8::internal::V8HeapExplorer"* %0, %"class.v8::internal::HeapEntry"* %211, i64 %232)
  %233 = load %"class.v8::internal::SnapshottingProgressReportingInterface"*, %"class.v8::internal::SnapshottingProgressReportingInterface"** %114, align 8
  %234 = bitcast %"class.v8::internal::SnapshottingProgressReportingInterface"* %233 to i1 (%"class.v8::internal::SnapshottingProgressReportingInterface"*, i1)***
  %235 = load i1 (%"class.v8::internal::SnapshottingProgressReportingInterface"*, i1)**, i1 (%"class.v8::internal::SnapshottingProgressReportingInterface"*, i1)*** %234, align 8
  %236 = getelementptr inbounds i1 (%"class.v8::internal::SnapshottingProgressReportingInterface"*, i1)*, i1 (%"class.v8::internal::SnapshottingProgressReportingInterface"*, i1)** %235, i64 3
  %237 = load i1 (%"class.v8::internal::SnapshottingProgressReportingInterface"*, i1)*, i1 (%"class.v8::internal::SnapshottingProgressReportingInterface"*, i1)** %236, align 8
  %238 = call zeroext i1 %237(%"class.v8::internal::SnapshottingProgressReportingInterface"* %233, i1 zeroext false) #13
  %239 = select i1 %238, i8 %188, i8 1
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %103) #13
  br label %240

240:                                              ; preds = %186, %209
  %241 = phi i8 [ %239, %209 ], [ %188, %186 ]
  %242 = call i64 @_ZN2v88internal26CombinedHeapObjectIterator4NextEv(%"class.v8::internal::CombinedHeapObjectIterator"* nonnull %5) #13
  store i64 %242, i64* %94, align 8
  %243 = load %"class.v8::internal::SnapshottingProgressReportingInterface"*, %"class.v8::internal::SnapshottingProgressReportingInterface"** %114, align 8
  %244 = bitcast %"class.v8::internal::SnapshottingProgressReportingInterface"* %243 to void (%"class.v8::internal::SnapshottingProgressReportingInterface"*)***
  %245 = load void (%"class.v8::internal::SnapshottingProgressReportingInterface"*)**, void (%"class.v8::internal::SnapshottingProgressReportingInterface"*)*** %244, align 8
  %246 = getelementptr inbounds void (%"class.v8::internal::SnapshottingProgressReportingInterface"*)*, void (%"class.v8::internal::SnapshottingProgressReportingInterface"*)** %245, i64 2
  %247 = load void (%"class.v8::internal::SnapshottingProgressReportingInterface"*)*, void (%"class.v8::internal::SnapshottingProgressReportingInterface"*)** %246, align 8
  call void %247(%"class.v8::internal::SnapshottingProgressReportingInterface"* %243) #13
  %248 = load i64, i64* %94, align 8
  %249 = trunc i64 %248 to i32
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %183, label %186

251:                                              ; preds = %97, %183
  %252 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 5
  %253 = load %"class.v8::internal::SnapshottingProgressReportingInterface"*, %"class.v8::internal::SnapshottingProgressReportingInterface"** %252, align 8
  %254 = bitcast %"class.v8::internal::SnapshottingProgressReportingInterface"* %253 to i1 (%"class.v8::internal::SnapshottingProgressReportingInterface"*, i1)***
  %255 = load i1 (%"class.v8::internal::SnapshottingProgressReportingInterface"*, i1)**, i1 (%"class.v8::internal::SnapshottingProgressReportingInterface"*, i1)*** %254, align 8
  %256 = getelementptr inbounds i1 (%"class.v8::internal::SnapshottingProgressReportingInterface"*, i1)*, i1 (%"class.v8::internal::SnapshottingProgressReportingInterface"*, i1)** %255, i64 3
  %257 = load i1 (%"class.v8::internal::SnapshottingProgressReportingInterface"*, i1)*, i1 (%"class.v8::internal::SnapshottingProgressReportingInterface"*, i1)** %256, align 8
  %258 = call zeroext i1 %257(%"class.v8::internal::SnapshottingProgressReportingInterface"* %253, i1 zeroext true) #13
  br label %259

259:                                              ; preds = %183, %251
  %260 = phi i1 [ %258, %251 ], [ false, %183 ]
  %261 = getelementptr inbounds %"class.v8::internal::CombinedHeapObjectIterator", %"class.v8::internal::CombinedHeapObjectIterator"* %5, i64 0, i32 1
  call void @_ZN2v88internal18HeapObjectIteratorD1Ev(%"class.v8::internal::HeapObjectIterator"* %261) #13
  %262 = getelementptr inbounds %"class.v8::internal::CombinedHeapObjectIterator", %"class.v8::internal::CombinedHeapObjectIterator"* %5, i64 0, i32 0
  call void @_ZN2v88internal14SafepointScopeD1Ev(%"class.v8::internal::SafepointScope"* nonnull %262) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %90) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #13
  ret i1 %260
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer23SetRootGcRootsReferenceEv(%"class.v8::internal::V8HeapExplorer"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 2
  %3 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %3, i64 0, i32 1
  %5 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %3, i64 0, i32 2
  %7 = bitcast %"class.v8::internal::HeapEntry"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %5, i64 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = add i32 %10, 1
  store i32 %11, i32* %9, align 4
  %12 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %5, i64 0, i32 4
  %13 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %13, i64 0, i32 5, i32 0, i32 0, i32 2
  %15 = bitcast %"class.v8::internal::HeapGraphEdge"*** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %13, i64 0, i32 5, i32 0, i32 0, i32 1
  %18 = bitcast %"class.v8::internal::HeapGraphEdge"*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %16, %19
  %21 = ashr exact i64 %20, 3
  %22 = icmp eq i64 %20, 0
  %23 = mul i64 %21, 170
  %24 = add i64 %23, -1
  %25 = select i1 %22, i64 0, i64 %24
  %26 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %13, i64 0, i32 5, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %13, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, %27
  %31 = icmp eq i64 %25, %30
  %32 = inttoptr i64 %19 to %"class.v8::internal::HeapGraphEdge"**
  %33 = inttoptr i64 %16 to %"class.v8::internal::HeapGraphEdge"**
  br i1 %31, label %34, label %41

34:                                               ; preds = %1
  %35 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %13, i64 0, i32 5
  tail call void @_ZNSt3__15dequeIN2v88internal13HeapGraphEdgeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.758"* %35) #13
  %36 = load i64, i64* %28, align 8
  %37 = load i64, i64* %26, align 8
  %38 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %17, align 8
  %39 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %14, align 8
  %40 = add i64 %37, %36
  br label %41

41:                                               ; preds = %34, %1
  %42 = phi i64 [ %40, %34 ], [ %30, %1 ]
  %43 = phi %"class.v8::internal::HeapGraphEdge"** [ %39, %34 ], [ %33, %1 ]
  %44 = phi %"class.v8::internal::HeapGraphEdge"** [ %38, %34 ], [ %32, %1 ]
  %45 = icmp eq %"class.v8::internal::HeapGraphEdge"** %43, %44
  br i1 %45, label %52, label %46

46:                                               ; preds = %41
  %47 = udiv i64 %42, 170
  %48 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %44, i64 %47
  %49 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %48, align 8
  %50 = urem i64 %42, 170
  %51 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %49, i64 %50
  br label %52

52:                                               ; preds = %41, %46
  %53 = phi %"class.v8::internal::HeapGraphEdge"* [ %51, %46 ], [ null, %41 ]
  %54 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %53, i64 0, i32 0
  %55 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %5, i64 0, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = lshr i32 %56, 4
  %58 = shl nuw nsw i32 %57, 3
  %59 = or i32 %58, 1
  store i32 %59, i32* %54, align 8
  %60 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %53, i64 0, i32 1
  %61 = bitcast %"class.v8::internal::HeapEntry"** %60 to i64*
  store i64 %8, i64* %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %53, i64 0, i32 2
  %63 = bitcast %union.anon.807* %62 to i32*
  store i32 %11, i32* %63, align 8
  %64 = load i64, i64* %28, align 8
  %65 = add i64 %64, 1
  store i64 %65, i64* %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer19SetGcRootsReferenceENS0_4RootE(%"class.v8::internal::V8HeapExplorer"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %4, i64 0, i32 2
  %6 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %5, align 8
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %4, i64 0, i32 3, i64 %7
  %9 = bitcast %"class.v8::internal::HeapEntry"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %6, i64 0, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = add i32 %12, 1
  store i32 %13, i32* %11, align 4
  %14 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %6, i64 0, i32 4
  %15 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %15, i64 0, i32 5, i32 0, i32 0, i32 2
  %17 = bitcast %"class.v8::internal::HeapGraphEdge"*** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %15, i64 0, i32 5, i32 0, i32 0, i32 1
  %20 = bitcast %"class.v8::internal::HeapGraphEdge"*** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %18, %21
  %23 = ashr exact i64 %22, 3
  %24 = icmp eq i64 %22, 0
  %25 = mul i64 %23, 170
  %26 = add i64 %25, -1
  %27 = select i1 %24, i64 0, i64 %26
  %28 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %15, i64 0, i32 5, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %15, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, %29
  %33 = icmp eq i64 %27, %32
  %34 = inttoptr i64 %21 to %"class.v8::internal::HeapGraphEdge"**
  %35 = inttoptr i64 %18 to %"class.v8::internal::HeapGraphEdge"**
  br i1 %33, label %36, label %43

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %15, i64 0, i32 5
  tail call void @_ZNSt3__15dequeIN2v88internal13HeapGraphEdgeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.758"* %37) #13
  %38 = load i64, i64* %30, align 8
  %39 = load i64, i64* %28, align 8
  %40 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %19, align 8
  %41 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %16, align 8
  %42 = add i64 %39, %38
  br label %43

43:                                               ; preds = %36, %2
  %44 = phi i64 [ %42, %36 ], [ %32, %2 ]
  %45 = phi %"class.v8::internal::HeapGraphEdge"** [ %41, %36 ], [ %35, %2 ]
  %46 = phi %"class.v8::internal::HeapGraphEdge"** [ %40, %36 ], [ %34, %2 ]
  %47 = icmp eq %"class.v8::internal::HeapGraphEdge"** %45, %46
  br i1 %47, label %54, label %48

48:                                               ; preds = %43
  %49 = udiv i64 %44, 170
  %50 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %46, i64 %49
  %51 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %50, align 8
  %52 = urem i64 %44, 170
  %53 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %51, i64 %52
  br label %54

54:                                               ; preds = %43, %48
  %55 = phi %"class.v8::internal::HeapGraphEdge"* [ %53, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %55, i64 0, i32 0
  %57 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %6, i64 0, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = lshr i32 %58, 4
  %60 = shl nuw nsw i32 %59, 3
  %61 = or i32 %60, 1
  store i32 %61, i32* %56, align 8
  %62 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %55, i64 0, i32 1
  %63 = bitcast %"class.v8::internal::HeapEntry"** %62 to i64*
  store i64 %10, i64* %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %55, i64 0, i32 2
  %65 = bitcast %union.anon.807* %64 to i32*
  store i32 %13, i32* %65, align 8
  %66 = load i64, i64* %30, align 8
  %67 = add i64 %66, 1
  store i64 %67, i64* %30, align 8
  ret void
}

declare void @_ZN2v88internal13ReadOnlyRoots7IterateEPNS0_11RootVisitorE(%"class.v8::internal::ReadOnlyRoots"*, %"class.v8::internal::RootVisitor"*) local_unnamed_addr #4

declare void @_ZN2v88internal4Heap12IterateRootsEPNS0_11RootVisitorENS_4base7EnumSetINS0_8SkipRootEiEE(%"class.v8::internal::Heap"*, %"class.v8::internal::RootVisitor"*, i32) local_unnamed_addr #4

declare void @_ZN2v88internal4Heap16IterateWeakRootsEPNS0_11RootVisitorENS_4base7EnumSetINS0_8SkipRootEiEE(%"class.v8::internal::Heap"*, %"class.v8::internal::RootVisitor"*, i32) local_unnamed_addr #4

declare void @_ZN2v88internal4Heap24IterateWeakGlobalHandlesEPNS0_11RootVisitorE(%"class.v8::internal::Heap"*, %"class.v8::internal::RootVisitor"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE6resizeEmb(%"class.std::__1::vector.1411"*, i64, i1 zeroext) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.std::__1::vector.1411", align 16
  %5 = getelementptr inbounds %"class.std::__1::vector.1411", %"class.std::__1::vector.1411"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %1
  br i1 %7, label %8, label %159

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::vector.1411", %"class.std::__1::vector.1411"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 6
  %12 = sub i64 %1, %6
  %13 = icmp ult i64 %11, %12
  %14 = sub i64 %11, %12
  %15 = icmp ugt i64 %6, %14
  %16 = or i1 %13, %15
  br i1 %16, label %25, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.std::__1::vector.1411", %"class.std::__1::vector.1411"* %0, i64 0, i32 0
  %19 = load i64*, i64** %18, align 8, !noalias !5
  %20 = lshr i64 %6, 6
  %21 = getelementptr inbounds i64, i64* %19, i64 %20
  %22 = trunc i64 %6 to i32
  %23 = and i32 %22, 63
  %24 = ptrtoint i64* %21 to i64
  store i64 %1, i64* %5, align 8
  br label %86

25:                                               ; preds = %8
  %26 = bitcast %"class.std::__1::vector.1411"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %26, i8 0, i64 24, i1 false) #13
  %27 = icmp slt i64 %1, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %25
  %29 = bitcast %"class.std::__1::vector.1411"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #20
  unreachable

30:                                               ; preds = %25
  %31 = icmp ult i64 %11, 4611686018427387903
  br i1 %31, label %32, label %38

32:                                               ; preds = %30
  %33 = shl i64 %10, 7
  %34 = add nuw i64 %1, 63
  %35 = and i64 %34, -64
  %36 = icmp ult i64 %33, %35
  %37 = select i1 %36, i64 %35, i64 %33
  br label %38

38:                                               ; preds = %32, %30
  %39 = phi i64 [ %37, %32 ], [ 9223372036854775807, %30 ]
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm(%"class.std::__1::vector.1411"* nonnull %4, i64 %39)
  %40 = load i64, i64* %5, align 8
  %41 = add i64 %40, %12
  %42 = getelementptr inbounds %"class.std::__1::vector.1411", %"class.std::__1::vector.1411"* %4, i64 0, i32 1
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::vector.1411", %"class.std::__1::vector.1411"* %0, i64 0, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = bitcast %"class.std::__1::vector.1411"* %4 to i64*
  %46 = load i64, i64* %45, align 16, !noalias !10
  %47 = icmp sgt i64 %40, 0
  br i1 %47, label %48, label %69

48:                                               ; preds = %38
  %49 = inttoptr i64 %46 to i8*
  %50 = lshr i64 %40, 6
  %51 = bitcast i64* %44 to i8*
  %52 = shl nuw nsw i64 %50, 3
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %51, i64 %52, i1 false) #13, !noalias !15
  %53 = and i64 %40, 63
  %54 = inttoptr i64 %46 to i64*
  %55 = getelementptr inbounds i64, i64* %54, i64 %50
  %56 = ptrtoint i64* %55 to i64
  %57 = icmp eq i64 %53, 0
  br i1 %57, label %69, label %58

58:                                               ; preds = %48
  %59 = getelementptr inbounds i64, i64* %44, i64 %50
  %60 = sub nuw nsw i64 64, %53
  %61 = lshr i64 -1, %60
  %62 = load i64, i64* %59, align 8, !noalias !18
  %63 = and i64 %62, %61
  %64 = xor i64 %61, -1
  %65 = load i64, i64* %55, align 8, !noalias !15
  %66 = and i64 %65, %64
  %67 = or i64 %66, %63
  store i64 %67, i64* %55, align 8, !noalias !15
  %68 = trunc i64 %53 to i32
  br label %69

69:                                               ; preds = %48, %38, %58
  %70 = phi i32 [ %68, %58 ], [ 0, %48 ], [ 0, %38 ]
  %71 = phi i64 [ %56, %58 ], [ %56, %48 ], [ %46, %38 ]
  %72 = bitcast %"class.std::__1::vector.1411"* %4 to <2 x i64>*
  %73 = load <2 x i64>, <2 x i64>* %72, align 16
  %74 = bitcast %"class.std::__1::vector.1411"* %0 to <2 x i64>*
  %75 = load <2 x i64>, <2 x i64>* %74, align 8
  %76 = bitcast %"class.std::__1::vector.1411"* %0 to <2 x i64>*
  store <2 x i64> %73, <2 x i64>* %76, align 8
  %77 = bitcast %"class.std::__1::vector.1411"* %4 to <2 x i64>*
  store <2 x i64> %75, <2 x i64>* %77, align 16
  %78 = getelementptr inbounds %"class.std::__1::vector.1411", %"class.std::__1::vector.1411"* %4, i64 0, i32 2, i32 0, i32 0
  %79 = load i64, i64* %9, align 8
  %80 = load i64, i64* %78, align 16
  store i64 %80, i64* %9, align 8
  store i64 %79, i64* %78, align 16
  %81 = extractelement <2 x i64> %75, i32 0
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %69
  %84 = inttoptr i64 %81 to i8*
  call void @_ZdlPv(i8* %84) #21
  br label %85

85:                                               ; preds = %69, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #13
  br label %86

86:                                               ; preds = %85, %17
  %87 = phi i64 [ %71, %85 ], [ %24, %17 ]
  %88 = phi i32 [ %70, %85 ], [ %23, %17 ]
  %89 = inttoptr i64 %87 to i64*
  %90 = icmp eq i64 %12, 0
  br i1 %90, label %160, label %91

91:                                               ; preds = %86
  %92 = icmp eq i32 %88, 0
  br i1 %2, label %93, label %125

93:                                               ; preds = %91
  br i1 %92, label %94, label %96

94:                                               ; preds = %93
  %95 = inttoptr i64 %87 to i8*
  br label %111

96:                                               ; preds = %93
  %97 = sub nuw nsw i32 64, %88
  %98 = zext i32 %97 to i64
  %99 = icmp ult i64 %12, %98
  %100 = select i1 %99, i64 %12, i64 %98
  %101 = zext i32 %88 to i64
  %102 = shl i64 -1, %101
  %103 = sub nsw i64 %98, %100
  %104 = lshr i64 -1, %103
  %105 = and i64 %104, %102
  %106 = load i64, i64* %89, align 8
  %107 = or i64 %106, %105
  store i64 %107, i64* %89, align 8
  %108 = sub i64 %12, %100
  %109 = getelementptr inbounds i64, i64* %89, i64 1
  %110 = bitcast i64* %109 to i8*
  br label %111

111:                                              ; preds = %96, %94
  %112 = phi i64* [ %89, %94 ], [ %109, %96 ]
  %113 = phi i8* [ %95, %94 ], [ %110, %96 ]
  %114 = phi i64 [ %12, %94 ], [ %108, %96 ]
  %115 = lshr i64 %114, 6
  %116 = shl nuw nsw i64 %115, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 -1, i64 %116, i1 false) #13
  %117 = and i64 %114, 63
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %160, label %119

119:                                              ; preds = %111
  %120 = getelementptr inbounds i64, i64* %112, i64 %115
  %121 = sub nuw nsw i64 64, %117
  %122 = lshr i64 -1, %121
  %123 = load i64, i64* %120, align 8
  %124 = or i64 %123, %122
  store i64 %124, i64* %120, align 8
  br label %160

125:                                              ; preds = %91
  br i1 %92, label %126, label %128

126:                                              ; preds = %125
  %127 = inttoptr i64 %87 to i8*
  br label %144

128:                                              ; preds = %125
  %129 = sub nuw nsw i32 64, %88
  %130 = zext i32 %129 to i64
  %131 = icmp ult i64 %12, %130
  %132 = select i1 %131, i64 %12, i64 %130
  %133 = zext i32 %88 to i64
  %134 = shl i64 -1, %133
  %135 = sub nsw i64 %130, %132
  %136 = lshr i64 -1, %135
  %137 = and i64 %136, %134
  %138 = xor i64 %137, -1
  %139 = load i64, i64* %89, align 8
  %140 = and i64 %139, %138
  store i64 %140, i64* %89, align 8
  %141 = sub i64 %12, %132
  %142 = getelementptr inbounds i64, i64* %89, i64 1
  %143 = bitcast i64* %142 to i8*
  br label %144

144:                                              ; preds = %128, %126
  %145 = phi i64* [ %89, %126 ], [ %142, %128 ]
  %146 = phi i8* [ %127, %126 ], [ %143, %128 ]
  %147 = phi i64 [ %12, %126 ], [ %141, %128 ]
  %148 = lshr i64 %147, 6
  %149 = shl nuw nsw i64 %148, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 %149, i1 false) #13
  %150 = and i64 %147, 63
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %160, label %152

152:                                              ; preds = %144
  %153 = getelementptr inbounds i64, i64* %145, i64 %148
  %154 = sub nuw nsw i64 64, %150
  %155 = lshr i64 -1, %154
  %156 = xor i64 %155, -1
  %157 = load i64, i64* %153, align 8
  %158 = and i64 %157, %156
  store i64 %158, i64* %153, align 8
  br label %160

159:                                              ; preds = %3
  store i64 %1, i64* %5, align 8
  br label %160

160:                                              ; preds = %152, %144, %119, %111, %86, %159
  ret void
}

declare void @_ZN2v88internal10HeapObject7IterateEPNS0_13ObjectVisitorE(%"class.v8::internal::HeapObject"*, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitorD2Ev(%"class.v8::internal::ObjectVisitor"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RootVisitorD2Ev(%"class.v8::internal::RootVisitor"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal14V8HeapExplorer17IsEssentialObjectENS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"* nocapture readonly, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 1
  %4 = bitcast %"class.v8::internal::Heap"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -41416
  %7 = inttoptr i64 %6 to %"class.v8::internal::Isolate"*
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 0
  %9 = and i64 %1, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %77, label %11

11:                                               ; preds = %2
  %12 = and i64 %1, -4294967296
  %13 = add i64 %1, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = icmp eq i16 %20, 67
  br i1 %21, label %77, label %22

22:                                               ; preds = %11
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 107
  %24 = load i64, i64* %23, align 8
  %25 = trunc i64 %1 to i32
  %26 = trunc i64 %24 to i32
  %27 = icmp eq i32 %25, %26
  br i1 %27, label %77, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 29
  %30 = load i64, i64* %29, align 8
  %31 = trunc i64 %30 to i32
  %32 = icmp eq i32 %25, %31
  br i1 %32, label %77, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 119
  %35 = load i64, i64* %34, align 8
  %36 = trunc i64 %35 to i32
  %37 = icmp eq i32 %25, %36
  br i1 %37, label %77, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 30
  %40 = load i64, i64* %39, align 8
  %41 = trunc i64 %40 to i32
  %42 = icmp eq i32 %25, %41
  br i1 %42, label %77, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 12
  %45 = load i64, i64* %44, align 8
  %46 = trunc i64 %45 to i32
  %47 = icmp eq i32 %25, %46
  br i1 %47, label %77, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 21
  %50 = load i64, i64* %49, align 8
  %51 = trunc i64 %50 to i32
  %52 = icmp eq i32 %25, %51
  br i1 %52, label %77, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 22
  %55 = load i64, i64* %54, align 8
  %56 = trunc i64 %55 to i32
  %57 = icmp eq i32 %25, %56
  br i1 %57, label %77, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 19
  %60 = load i64, i64* %59, align 8
  %61 = trunc i64 %60 to i32
  %62 = icmp eq i32 %25, %61
  br i1 %62, label %77, label %63

63:                                               ; preds = %58
  %64 = load i64, i64* %8, align 8
  %65 = trunc i64 %64 to i32
  %66 = icmp eq i32 %25, %65
  br i1 %66, label %77, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = trunc i64 %69 to i32
  %71 = icmp eq i32 %25, %70
  br i1 %71, label %77, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 2
  %74 = load i64, i64* %73, align 8
  %75 = trunc i64 %74 to i32
  %76 = icmp ne i32 %25, %75
  br label %77

77:                                               ; preds = %67, %63, %58, %53, %48, %43, %38, %33, %28, %22, %2, %72, %11
  %78 = phi i1 [ false, %67 ], [ false, %63 ], [ false, %58 ], [ false, %53 ], [ false, %48 ], [ false, %43 ], [ false, %38 ], [ false, %33 ], [ false, %28 ], [ false, %22 ], [ false, %11 ], [ false, %2 ], [ %76, %72 ]
  ret i1 %78
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal14V8HeapExplorer26IsEssentialHiddenReferenceENS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* nocapture readnone, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = and i64 %1, 1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %40, label %6

6:                                                ; preds = %3
  %7 = and i64 %1, -4294967296
  %8 = add i64 %1, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = icmp eq i16 %15, 90
  %17 = icmp eq i32 %2, 24
  %18 = and i1 %17, %16
  br i1 %18, label %41, label %19

19:                                               ; preds = %6
  %20 = load atomic i32, i32* %9 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %7, %21
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = icmp eq i16 %25, 163
  %27 = icmp eq i32 %2, 4
  %28 = and i1 %27, %26
  br i1 %28, label %41, label %29

29:                                               ; preds = %19
  %30 = load atomic i32, i32* %9 monotonic, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %7, %31
  %33 = add i64 %32, 7
  %34 = inttoptr i64 %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = add i16 %35, -137
  %37 = icmp ult i16 %36, 10
  %38 = icmp eq i32 %2, 1024
  %39 = and i1 %38, %37
  br i1 %39, label %41, label %40

40:                                               ; preds = %3, %29
  br label %41

41:                                               ; preds = %29, %19, %6, %40
  %42 = phi i1 [ true, %40 ], [ false, %6 ], [ false, %19 ], [ false, %29 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer16MarkVisitedFieldEi(%"class.v8::internal::V8HeapExplorer"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = lshr i32 %1, 2
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 12, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = lshr i64 %6, 6
  %10 = getelementptr inbounds i64, i64* %8, i64 %9
  %11 = and i64 %6, 63
  %12 = shl i64 1, %11
  %13 = load i64, i64* %10, align 8
  %14 = or i64 %13, %12
  store i64 %14, i64* %10, align 8
  br label %15

15:                                               ; preds = %2, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer18SetHiddenReferenceENS0_10HeapObjectEPNS0_9HeapEntryEiNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"*, i64, %"class.v8::internal::HeapEntry"* nocapture, i32, i64, i32) local_unnamed_addr #2 align 2 {
  %7 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 1
  %8 = bitcast %"class.v8::internal::Heap"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, -41416
  %11 = inttoptr i64 %10 to %"class.v8::internal::Isolate"*
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 7, i32 0, i64 0
  %13 = and i64 %4, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %178, label %15

15:                                               ; preds = %6
  %16 = and i64 %4, -4294967296
  %17 = add i64 %4, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %16, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = icmp eq i16 %24, 67
  br i1 %25, label %178, label %26

26:                                               ; preds = %15
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 7, i32 0, i64 107
  %28 = load i64, i64* %27, align 8
  %29 = trunc i64 %4 to i32
  %30 = trunc i64 %28 to i32
  %31 = icmp eq i32 %29, %30
  br i1 %31, label %178, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 7, i32 0, i64 29
  %34 = load i64, i64* %33, align 8
  %35 = trunc i64 %34 to i32
  %36 = icmp eq i32 %29, %35
  br i1 %36, label %178, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 7, i32 0, i64 119
  %39 = load i64, i64* %38, align 8
  %40 = trunc i64 %39 to i32
  %41 = icmp eq i32 %29, %40
  br i1 %41, label %178, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 7, i32 0, i64 30
  %44 = load i64, i64* %43, align 8
  %45 = trunc i64 %44 to i32
  %46 = icmp eq i32 %29, %45
  br i1 %46, label %178, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 7, i32 0, i64 12
  %49 = load i64, i64* %48, align 8
  %50 = trunc i64 %49 to i32
  %51 = icmp eq i32 %29, %50
  br i1 %51, label %178, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 7, i32 0, i64 21
  %54 = load i64, i64* %53, align 8
  %55 = trunc i64 %54 to i32
  %56 = icmp eq i32 %29, %55
  br i1 %56, label %178, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 7, i32 0, i64 22
  %59 = load i64, i64* %58, align 8
  %60 = trunc i64 %59 to i32
  %61 = icmp eq i32 %29, %60
  br i1 %61, label %178, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 7, i32 0, i64 19
  %64 = load i64, i64* %63, align 8
  %65 = trunc i64 %64 to i32
  %66 = icmp eq i32 %29, %65
  br i1 %66, label %178, label %67

67:                                               ; preds = %62
  %68 = load i64, i64* %12, align 8
  %69 = trunc i64 %68 to i32
  %70 = icmp eq i32 %29, %69
  br i1 %70, label %178, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 7, i32 0, i64 1
  %73 = load i64, i64* %72, align 8
  %74 = trunc i64 %73 to i32
  %75 = icmp eq i32 %29, %74
  br i1 %75, label %178, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 7, i32 0, i64 2
  %78 = load i64, i64* %77, align 8
  %79 = trunc i64 %78 to i32
  %80 = icmp eq i32 %29, %79
  br i1 %80, label %178, label %81

81:                                               ; preds = %76
  %82 = tail call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8GetEntryENS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"* %0, i64 %4)
  %83 = and i64 %1, 1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %119, label %85

85:                                               ; preds = %81
  %86 = and i64 %1, -4294967296
  %87 = add i64 %1, -1
  %88 = inttoptr i64 %87 to i32*
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = zext i32 %89 to i64
  %91 = or i64 %86, %90
  %92 = add i64 %91, 7
  %93 = inttoptr i64 %92 to i16*
  %94 = load atomic i16, i16* %93 monotonic, align 2
  %95 = icmp eq i16 %94, 90
  %96 = icmp eq i32 %5, 24
  %97 = and i1 %96, %95
  br i1 %97, label %178, label %98

98:                                               ; preds = %85
  %99 = load atomic i32, i32* %88 monotonic, align 4
  %100 = zext i32 %99 to i64
  %101 = or i64 %86, %100
  %102 = add i64 %101, 7
  %103 = inttoptr i64 %102 to i16*
  %104 = load atomic i16, i16* %103 monotonic, align 2
  %105 = icmp eq i16 %104, 163
  %106 = icmp eq i32 %5, 4
  %107 = and i1 %106, %105
  br i1 %107, label %178, label %108

108:                                              ; preds = %98
  %109 = load atomic i32, i32* %88 monotonic, align 4
  %110 = zext i32 %109 to i64
  %111 = or i64 %86, %110
  %112 = add i64 %111, 7
  %113 = inttoptr i64 %112 to i16*
  %114 = load atomic i16, i16* %113 monotonic, align 2
  %115 = add i16 %114, -137
  %116 = icmp ult i16 %115, 10
  %117 = icmp eq i32 %5, 1024
  %118 = and i1 %117, %116
  br i1 %118, label %178, label %119

119:                                              ; preds = %108, %81
  %120 = ptrtoint %"class.v8::internal::HeapEntry"* %82 to i64
  %121 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %2, i64 0, i32 1, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = add i32 %122, 1
  store i32 %123, i32* %121, align 4
  %124 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %2, i64 0, i32 4
  %125 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %124, align 8
  %126 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %125, i64 0, i32 5, i32 0, i32 0, i32 2
  %127 = bitcast %"class.v8::internal::HeapGraphEdge"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %125, i64 0, i32 5, i32 0, i32 0, i32 1
  %130 = bitcast %"class.v8::internal::HeapGraphEdge"*** %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = sub i64 %128, %131
  %133 = ashr exact i64 %132, 3
  %134 = icmp eq i64 %132, 0
  %135 = mul i64 %133, 170
  %136 = add i64 %135, -1
  %137 = select i1 %134, i64 0, i64 %136
  %138 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %125, i64 0, i32 5, i32 0, i32 1
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %125, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %141 = load i64, i64* %140, align 8
  %142 = add i64 %141, %139
  %143 = icmp eq i64 %137, %142
  %144 = inttoptr i64 %131 to %"class.v8::internal::HeapGraphEdge"**
  %145 = inttoptr i64 %128 to %"class.v8::internal::HeapGraphEdge"**
  br i1 %143, label %146, label %153

146:                                              ; preds = %119
  %147 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %125, i64 0, i32 5
  tail call void @_ZNSt3__15dequeIN2v88internal13HeapGraphEdgeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.758"* %147) #13
  %148 = load i64, i64* %140, align 8
  %149 = load i64, i64* %138, align 8
  %150 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %129, align 8
  %151 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %126, align 8
  %152 = add i64 %149, %148
  br label %153

153:                                              ; preds = %146, %119
  %154 = phi i64 [ %152, %146 ], [ %142, %119 ]
  %155 = phi %"class.v8::internal::HeapGraphEdge"** [ %151, %146 ], [ %145, %119 ]
  %156 = phi %"class.v8::internal::HeapGraphEdge"** [ %150, %146 ], [ %144, %119 ]
  %157 = icmp eq %"class.v8::internal::HeapGraphEdge"** %155, %156
  br i1 %157, label %164, label %158

158:                                              ; preds = %153
  %159 = udiv i64 %154, 170
  %160 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %156, i64 %159
  %161 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %160, align 8
  %162 = urem i64 %154, 170
  %163 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %161, i64 %162
  br label %164

164:                                              ; preds = %153, %158
  %165 = phi %"class.v8::internal::HeapGraphEdge"* [ %163, %158 ], [ null, %153 ]
  %166 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %165, i64 0, i32 0
  %167 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %2, i64 0, i32 0
  %168 = load i32, i32* %167, align 8
  %169 = lshr i32 %168, 4
  %170 = shl nuw nsw i32 %169, 3
  %171 = or i32 %170, 4
  store i32 %171, i32* %166, align 8
  %172 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %165, i64 0, i32 1
  %173 = bitcast %"class.v8::internal::HeapEntry"** %172 to i64*
  store i64 %120, i64* %173, align 8
  %174 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %165, i64 0, i32 2
  %175 = bitcast %union.anon.807* %174 to i32*
  store i32 %3, i32* %175, align 8
  %176 = load i64, i64* %140, align 8
  %177 = add i64 %176, 1
  store i64 %177, i64* %140, align 8
  br label %178

178:                                              ; preds = %76, %108, %98, %85, %6, %15, %26, %32, %37, %42, %47, %52, %57, %62, %67, %71, %164
  ret void
}

declare i8* @_ZN2v88internal6String9ToCStringENS0_14AllowNullsFlagENS0_14RobustnessFlagEPi(%"class.v8::internal::String"*, i32, i32, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer22SetUserGlobalReferenceENS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"*, i64) local_unnamed_addr #2 align 2 {
  %3 = tail call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8GetEntryENS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"* %0, i64 %1)
  %4 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 2
  %5 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %5, i64 0, i32 1
  %7 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 3
  %9 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %7, i64 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, 1
  %13 = tail call i8* @_ZN2v88internal14StringsStorage7GetNameEi(%"class.v8::internal::StringsStorage"* %9, i32 %12) #13
  %14 = ptrtoint i8* %13 to i64
  %15 = ptrtoint %"class.v8::internal::HeapEntry"* %3 to i64
  %16 = load i32, i32* %10, align 4
  %17 = add i32 %16, 1
  store i32 %17, i32* %10, align 4
  %18 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %7, i64 0, i32 4
  %19 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %19, i64 0, i32 5, i32 0, i32 0, i32 2
  %21 = bitcast %"class.v8::internal::HeapGraphEdge"*** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %19, i64 0, i32 5, i32 0, i32 0, i32 1
  %24 = bitcast %"class.v8::internal::HeapGraphEdge"*** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %22, %25
  %27 = ashr exact i64 %26, 3
  %28 = icmp eq i64 %26, 0
  %29 = mul i64 %27, 170
  %30 = add i64 %29, -1
  %31 = select i1 %28, i64 0, i64 %30
  %32 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %19, i64 0, i32 5, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %19, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = add i64 %35, %33
  %37 = icmp eq i64 %31, %36
  %38 = inttoptr i64 %25 to %"class.v8::internal::HeapGraphEdge"**
  %39 = inttoptr i64 %22 to %"class.v8::internal::HeapGraphEdge"**
  br i1 %37, label %40, label %47

40:                                               ; preds = %2
  %41 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %19, i64 0, i32 5
  tail call void @_ZNSt3__15dequeIN2v88internal13HeapGraphEdgeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.758"* %41) #13
  %42 = load i64, i64* %34, align 8
  %43 = load i64, i64* %32, align 8
  %44 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %23, align 8
  %45 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %20, align 8
  %46 = add i64 %43, %42
  br label %47

47:                                               ; preds = %40, %2
  %48 = phi i64 [ %46, %40 ], [ %36, %2 ]
  %49 = phi %"class.v8::internal::HeapGraphEdge"** [ %45, %40 ], [ %39, %2 ]
  %50 = phi %"class.v8::internal::HeapGraphEdge"** [ %44, %40 ], [ %38, %2 ]
  %51 = icmp eq %"class.v8::internal::HeapGraphEdge"** %49, %50
  br i1 %51, label %58, label %52

52:                                               ; preds = %47
  %53 = udiv i64 %48, 170
  %54 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %50, i64 %53
  %55 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %54, align 8
  %56 = urem i64 %48, 170
  %57 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %55, i64 %56
  br label %58

58:                                               ; preds = %47, %52
  %59 = phi %"class.v8::internal::HeapGraphEdge"* [ %57, %52 ], [ null, %47 ]
  %60 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %59, i64 0, i32 0
  %61 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %7, i64 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = lshr i32 %62, 4
  %64 = shl nuw nsw i32 %63, 3
  %65 = or i32 %64, 5
  store i32 %65, i32* %60, align 8
  %66 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %59, i64 0, i32 1
  %67 = bitcast %"class.v8::internal::HeapEntry"** %66 to i64*
  store i64 %15, i64* %67, align 8
  %68 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %59, i64 0, i32 2, i32 0
  %69 = bitcast i8** %68 to i64*
  store i64 %14, i64* %69, align 8
  %70 = load i64, i64* %34, align 8
  %71 = add i64 %70, 1
  store i64 %71, i64* %34, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer21SetGcSubrootReferenceENS0_4RootEPKcbNS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"*, i32, i8*, i1 zeroext, i64) local_unnamed_addr #2 align 2 {
  %6 = alloca %"class.v8::internal::JSGlobalObject", align 8
  %7 = alloca %"class.v8::internal::Context", align 8
  %8 = and i64 %4, 1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %127, label %10

10:                                               ; preds = %5
  %11 = tail call %"class.v8::internal::HeapEntry"* @_ZN2v88internal14V8HeapExplorer8GetEntryENS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"* %0, i64 %4)
  %12 = icmp eq %"class.v8::internal::HeapEntry"* %11, null
  br i1 %12, label %127, label %13

13:                                               ; preds = %10
  %14 = tail call i8* @_ZN2v88internal14V8HeapExplorer22GetStrongGcSubrootNameENS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"* %0, i64 %4)
  %15 = select i1 %3, i32 6, i32 3
  %16 = icmp eq i8* %14, null
  %17 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 2
  %18 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %17, align 8
  %19 = sext i32 %1 to i64
  %20 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %18, i64 0, i32 3, i64 %19
  %21 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %20, align 8
  br i1 %16, label %82, label %22

22:                                               ; preds = %13
  %23 = ptrtoint i8* %14 to i64
  %24 = ptrtoint %"class.v8::internal::HeapEntry"* %11 to i64
  %25 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %21, i64 0, i32 1, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = add i32 %26, 1
  store i32 %27, i32* %25, align 4
  %28 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %21, i64 0, i32 4
  %29 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %29, i64 0, i32 5, i32 0, i32 0, i32 2
  %31 = bitcast %"class.v8::internal::HeapGraphEdge"*** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %29, i64 0, i32 5, i32 0, i32 0, i32 1
  %34 = bitcast %"class.v8::internal::HeapGraphEdge"*** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %32, %35
  %37 = ashr exact i64 %36, 3
  %38 = icmp eq i64 %36, 0
  %39 = mul i64 %37, 170
  %40 = add i64 %39, -1
  %41 = select i1 %38, i64 0, i64 %40
  %42 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %29, i64 0, i32 5, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %29, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, %43
  %47 = icmp eq i64 %41, %46
  %48 = inttoptr i64 %35 to %"class.v8::internal::HeapGraphEdge"**
  %49 = inttoptr i64 %32 to %"class.v8::internal::HeapGraphEdge"**
  br i1 %47, label %50, label %57

50:                                               ; preds = %22
  %51 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %29, i64 0, i32 5
  tail call void @_ZNSt3__15dequeIN2v88internal13HeapGraphEdgeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.758"* %51) #13
  %52 = load i64, i64* %44, align 8
  %53 = load i64, i64* %42, align 8
  %54 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %33, align 8
  %55 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %30, align 8
  %56 = add i64 %53, %52
  br label %57

57:                                               ; preds = %50, %22
  %58 = phi i64 [ %56, %50 ], [ %46, %22 ]
  %59 = phi %"class.v8::internal::HeapGraphEdge"** [ %55, %50 ], [ %49, %22 ]
  %60 = phi %"class.v8::internal::HeapGraphEdge"** [ %54, %50 ], [ %48, %22 ]
  %61 = icmp eq %"class.v8::internal::HeapGraphEdge"** %59, %60
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = udiv i64 %58, 170
  %64 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %60, i64 %63
  %65 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %64, align 8
  %66 = urem i64 %58, 170
  %67 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %65, i64 %66
  br label %68

68:                                               ; preds = %57, %62
  %69 = phi %"class.v8::internal::HeapGraphEdge"* [ %67, %62 ], [ null, %57 ]
  %70 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %69, i64 0, i32 0
  %71 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %21, i64 0, i32 0
  %72 = load i32, i32* %71, align 8
  %73 = lshr i32 %72, 4
  %74 = shl nuw nsw i32 %73, 3
  %75 = or i32 %74, %15
  store i32 %75, i32* %70, align 8
  %76 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %69, i64 0, i32 1
  %77 = bitcast %"class.v8::internal::HeapEntry"** %76 to i64*
  store i64 %24, i64* %77, align 8
  %78 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %69, i64 0, i32 2, i32 0
  %79 = bitcast i8** %78 to i64*
  store i64 %23, i64* %79, align 8
  %80 = load i64, i64* %44, align 8
  %81 = add i64 %80, 1
  store i64 %81, i64* %44, align 8
  br label %85

82:                                               ; preds = %13
  %83 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 3
  %84 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %83, align 8
  tail call void @_ZN2v88internal9HeapEntry26SetNamedAutoIndexReferenceENS0_13HeapGraphEdge4TypeEPKcPS1_PNS0_14StringsStorageE(%"class.v8::internal::HeapEntry"* %21, i32 %15, i8* %2, %"class.v8::internal::HeapEntry"* nonnull %11, %"class.v8::internal::StringsStorage"* %84)
  br label %85

85:                                               ; preds = %82, %68
  %86 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %17, align 8
  %87 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %86, i64 0, i32 10
  %88 = load i8, i8* %87, align 4, !range !4
  %89 = icmp eq i8 %88, 0
  %90 = or i1 %89, %3
  br i1 %90, label %127, label %91

91:                                               ; preds = %85
  %92 = and i64 %4, -4294967296
  %93 = add i64 %4, -1
  %94 = inttoptr i64 %93 to i32*
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = zext i32 %95 to i64
  %97 = or i64 %92, %96
  %98 = add i64 %97, 7
  %99 = inttoptr i64 %98 to i16*
  %100 = load atomic i16, i16* %99 monotonic, align 2
  %101 = icmp eq i16 %100, 144
  br i1 %101, label %102, label %127

102:                                              ; preds = %91
  %103 = bitcast %"class.v8::internal::JSGlobalObject"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #13
  %104 = bitcast %"class.v8::internal::Context"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #13
  %105 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %4, i64* %105, align 8
  %106 = call i64 @_ZN2v88internal7Context13global_objectEv(%"class.v8::internal::Context"* nonnull %7) #13
  %107 = getelementptr inbounds %"class.v8::internal::JSGlobalObject", %"class.v8::internal::JSGlobalObject"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %106, i64* %107, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #13
  %108 = and i64 %106, -4294967296
  %109 = add i64 %106, -1
  %110 = inttoptr i64 %109 to i32*
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = zext i32 %111 to i64
  %113 = or i64 %108, %112
  %114 = add i64 %113, 7
  %115 = inttoptr i64 %114 to i16*
  %116 = load atomic i16, i16* %115 monotonic, align 2
  %117 = icmp eq i16 %116, 189
  br i1 %117, label %118, label %126

118:                                              ; preds = %102
  %119 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 10, i32 0
  %120 = call { %"struct.std::__1::__hash_node_base.1394"*, i8 } @_ZNSt3__112__hash_tableIN2v88internal14JSGlobalObjectENS2_6Object6HasherENS_8equal_toIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1390"* %119, %"class.v8::internal::JSGlobalObject"* nonnull dereferenceable(8) %6, %"class.v8::internal::JSGlobalObject"* nonnull dereferenceable(8) %6) #13
  %121 = extractvalue { %"struct.std::__1::__hash_node_base.1394"*, i8 } %120, 1
  %122 = and i8 %121, 1
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %118
  %125 = load i64, i64* %107, align 8
  call void @_ZN2v88internal14V8HeapExplorer22SetUserGlobalReferenceENS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"* %0, i64 %125)
  br label %126

126:                                              ; preds = %118, %102, %124
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #13
  br label %127

127:                                              ; preds = %85, %10, %91, %126, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal14V8HeapExplorer22GetStrongGcSubrootNameENS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"*, i64) local_unnamed_addr #2 align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca %"class.v8::internal::Object", align 8
  %5 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 9
  %6 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %34

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 1
  %11 = bitcast %"class.v8::internal::Heap"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, -41416
  %14 = inttoptr i64 %13 to %"class.v8::internal::Isolate"*
  %15 = bitcast i8** %3 to i8*
  %16 = bitcast i8** %3 to i64*
  %17 = bitcast %"class.v8::internal::Object"* %4 to i8*
  %18 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %4, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::unordered_map.1363", %"class.std::__1::unordered_map.1363"* %5, i64 0, i32 0
  br label %23

20:                                               ; preds = %23
  %21 = load i64, i64* %6, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %33, label %34, !prof !2

23:                                               ; preds = %23, %9
  %24 = phi i64 [ 0, %9 ], [ %31, %23 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #13
  %25 = getelementptr inbounds [669 x i8*], [669 x i8*]* @_ZN2v88internal10RootsTable11root_names_E, i64 0, i64 %24
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 0, i32 7, i32 0, i64 %24
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %18, align 8
  %30 = call { %"struct.std::__1::__hash_node_base.1368"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6ObjectEPKcEENS_22__unordered_map_hasherIS4_S7_NS4_6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S7_SB_S9_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS4_JS4_RS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1364"* %19, %"class.v8::internal::Object"* nonnull dereferenceable(8) %4, %"class.v8::internal::Object"* nonnull dereferenceable(8) %4, i8** nonnull dereferenceable(8) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #13
  %31 = add nuw nsw i64 %24, 1
  %32 = icmp eq i64 %31, 663
  br i1 %32, label %20, label %23

33:                                               ; preds = %20
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.362, i64 0, i64 0)) #20
  unreachable

34:                                               ; preds = %20, %2
  %35 = and i64 %1, 4294967295
  %36 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %110, label %39

39:                                               ; preds = %34
  %40 = call i64 @llvm.ctpop.i64(i64 %37) #13, !range !3
  %41 = icmp ugt i64 %40, 1
  br i1 %41, label %45, label %42

42:                                               ; preds = %39
  %43 = add i64 %37, 4294967295
  %44 = and i64 %43, %35
  br label %49

45:                                               ; preds = %39
  %46 = icmp ult i64 %35, %37
  br i1 %46, label %49, label %47

47:                                               ; preds = %45
  %48 = urem i64 %35, %37
  br label %49

49:                                               ; preds = %47, %45, %42
  %50 = phi i64 [ %44, %42 ], [ %48, %47 ], [ %35, %45 ]
  %51 = getelementptr inbounds %"class.std::__1::unordered_map.1363", %"class.std::__1::unordered_map.1363"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base.1368"**, %"struct.std::__1::__hash_node_base.1368"*** %51, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %52, i64 %50
  %54 = load %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base.1368"* %54, null
  br i1 %55, label %110, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %54, i64 0, i32 0
  %58 = load %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %57, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base.1368"* %58, null
  br i1 %59, label %110, label %60

60:                                               ; preds = %56
  %61 = add i64 %37, -1
  %62 = trunc i64 %1 to i32
  br i1 %41, label %63, label %86

63:                                               ; preds = %60, %82
  %64 = phi %"struct.std::__1::__hash_node_base.1368"* [ %84, %82 ], [ %58, %60 ]
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %64, i64 1
  %66 = bitcast %"struct.std::__1::__hash_node_base.1368"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = icmp eq i64 %67, %35
  br i1 %68, label %76, label %69

69:                                               ; preds = %63
  %70 = icmp ult i64 %67, %37
  br i1 %70, label %73, label %71

71:                                               ; preds = %69
  %72 = urem i64 %67, %37
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %72, %71 ], [ %67, %69 ]
  %75 = icmp eq i64 %74, %50
  br i1 %75, label %82, label %110

76:                                               ; preds = %63
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %64, i64 2
  %78 = bitcast %"struct.std::__1::__hash_node_base.1368"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = trunc i64 %79 to i32
  %81 = icmp eq i32 %80, %62
  br i1 %81, label %105, label %82

82:                                               ; preds = %76, %73
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %64, i64 0, i32 0
  %84 = load %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %83, align 8
  %85 = icmp eq %"struct.std::__1::__hash_node_base.1368"* %84, null
  br i1 %85, label %110, label %63

86:                                               ; preds = %60, %101
  %87 = phi %"struct.std::__1::__hash_node_base.1368"* [ %103, %101 ], [ %58, %60 ]
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %87, i64 1
  %89 = bitcast %"struct.std::__1::__hash_node_base.1368"* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = icmp eq i64 %90, %35
  br i1 %91, label %95, label %92

92:                                               ; preds = %86
  %93 = and i64 %90, %61
  %94 = icmp eq i64 %93, %50
  br i1 %94, label %101, label %110

95:                                               ; preds = %86
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %87, i64 2
  %97 = bitcast %"struct.std::__1::__hash_node_base.1368"* %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = trunc i64 %98 to i32
  %100 = icmp eq i32 %99, %62
  br i1 %100, label %105, label %101

101:                                              ; preds = %95, %92
  %102 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %87, i64 0, i32 0
  %103 = load %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %102, align 8
  %104 = icmp eq %"struct.std::__1::__hash_node_base.1368"* %103, null
  br i1 %104, label %110, label %86

105:                                              ; preds = %95, %76
  %106 = phi %"struct.std::__1::__hash_node_base.1368"* [ %64, %76 ], [ %87, %95 ]
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %106, i64 3
  %108 = bitcast %"struct.std::__1::__hash_node_base.1368"* %107 to i8**
  %109 = load i8*, i8** %108, align 8
  br label %110

110:                                              ; preds = %101, %92, %82, %73, %56, %34, %49, %105
  %111 = phi i8* [ %109, %105 ], [ null, %49 ], [ null, %34 ], [ null, %56 ], [ null, %73 ], [ null, %82 ], [ null, %92 ], [ null, %101 ]
  ret i8* %111
}

declare i64 @_ZN2v88internal7Context13global_objectEv(%"class.v8::internal::Context"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer24CollectGlobalObjectsTagsEv(%"class.v8::internal::V8HeapExplorer"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.v8::internal::GlobalObjectsEnumerator", align 8
  %3 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 11
  %4 = load %"class.v8::HeapProfiler::ObjectNameResolver"*, %"class.v8::HeapProfiler::ObjectNameResolver"** %3, align 8
  %5 = icmp eq %"class.v8::HeapProfiler::ObjectNameResolver"* %4, null
  br i1 %5, label %131, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 1
  %8 = bitcast %"class.v8::internal::Heap"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, -41416
  %11 = inttoptr i64 %10 to %"class.v8::internal::Isolate"*
  %12 = bitcast %"class.v8::internal::GlobalObjectsEnumerator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #13
  %13 = getelementptr inbounds %"class.v8::internal::GlobalObjectsEnumerator", %"class.v8::internal::GlobalObjectsEnumerator"* %2, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal23GlobalObjectsEnumeratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::GlobalObjectsEnumerator", %"class.v8::internal::GlobalObjectsEnumerator"* %2, i64 0, i32 1
  store %"class.v8::internal::Isolate"* %11, %"class.v8::internal::Isolate"** %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::GlobalObjectsEnumerator", %"class.v8::internal::GlobalObjectsEnumerator"* %2, i64 0, i32 2
  %16 = bitcast %"class.std::__1::vector.1499"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #13
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 36
  %18 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::GlobalObjectsEnumerator", %"class.v8::internal::GlobalObjectsEnumerator"* %2, i64 0, i32 0
  call void @_ZN2v88internal13GlobalHandles15IterateAllRootsEPNS0_11RootVisitorE(%"class.v8::internal::GlobalHandles"* %18, %"class.v8::internal::RootVisitor"* nonnull %19) #13
  %20 = getelementptr inbounds %"class.v8::internal::GlobalObjectsEnumerator", %"class.v8::internal::GlobalObjectsEnumerator"* %2, i64 0, i32 2, i32 0, i32 1
  %21 = bitcast %"class.v8::internal::Handle.1331"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.1499"* %15 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = lshr exact i64 %25, 3
  %27 = trunc i64 %26 to i32
  %28 = icmp sgt i32 %27, 0
  %29 = inttoptr i64 %24 to %"class.v8::internal::Handle.1331"*
  br i1 %28, label %30, label %40

30:                                               ; preds = %6
  %31 = getelementptr inbounds %"class.v8::internal::GlobalObjectsEnumerator", %"class.v8::internal::GlobalObjectsEnumerator"* %2, i64 0, i32 2, i32 0, i32 0
  %32 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 7
  %33 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 7, i32 0, i32 1
  %34 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %35 = bitcast %"struct.std::__1::pair.1330"** %33 to i64*
  %36 = bitcast %"class.std::__1::vector.1328"* %32 to i64*
  %37 = bitcast %"struct.std::__1::pair.1330"** %34 to i64*
  %38 = getelementptr inbounds %"class.std::__1::vector.1328", %"class.std::__1::vector.1328"* %32, i64 0, i32 0, i32 0
  %39 = and i64 %26, 4294967295
  br label %47

40:                                               ; preds = %127, %6
  %41 = phi %"class.v8::internal::Handle.1331"* [ %29, %6 ], [ %130, %127 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal23GlobalObjectsEnumeratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %42 = icmp eq %"class.v8::internal::Handle.1331"* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %40
  %44 = ptrtoint %"class.v8::internal::Handle.1331"* %41 to i64
  store i64 %44, i64* %21, align 8
  %45 = bitcast %"class.v8::internal::Handle.1331"* %41 to i8*
  call void @_ZdlPv(i8* %45) #21
  br label %46

46:                                               ; preds = %40, %43
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #13
  br label %131

47:                                               ; preds = %127, %30
  %48 = phi %"class.v8::internal::Handle.1331"* [ %29, %30 ], [ %130, %127 ]
  %49 = phi i64 [ 0, %30 ], [ %128, %127 ]
  %50 = getelementptr inbounds %"class.v8::internal::Handle.1331", %"class.v8::internal::Handle.1331"* %48, i64 %49
  %51 = bitcast %"class.v8::internal::Handle.1331"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = load %"class.v8::HeapProfiler::ObjectNameResolver"*, %"class.v8::HeapProfiler::ObjectNameResolver"** %3, align 8
  %54 = inttoptr i64 %52 to %"class.v8::Object"*
  %55 = bitcast %"class.v8::HeapProfiler::ObjectNameResolver"* %53 to i8* (%"class.v8::HeapProfiler::ObjectNameResolver"*, %"class.v8::Object"*)***
  %56 = load i8* (%"class.v8::HeapProfiler::ObjectNameResolver"*, %"class.v8::Object"*)**, i8* (%"class.v8::HeapProfiler::ObjectNameResolver"*, %"class.v8::Object"*)*** %55, align 8
  %57 = load i8* (%"class.v8::HeapProfiler::ObjectNameResolver"*, %"class.v8::Object"*)*, i8* (%"class.v8::HeapProfiler::ObjectNameResolver"*, %"class.v8::Object"*)** %56, align 8
  %58 = call i8* %57(%"class.v8::HeapProfiler::ObjectNameResolver"* %53, %"class.v8::Object"* %54) #13
  %59 = ptrtoint i8* %58 to i64
  %60 = icmp eq i8* %58, null
  br i1 %60, label %127, label %61

61:                                               ; preds = %47
  %62 = load %"struct.std::__1::pair.1330"*, %"struct.std::__1::pair.1330"** %33, align 8
  %63 = load %"struct.std::__1::pair.1330"*, %"struct.std::__1::pair.1330"** %34, align 8
  %64 = icmp ult %"struct.std::__1::pair.1330"* %62, %63
  %65 = ptrtoint %"struct.std::__1::pair.1330"* %63 to i64
  br i1 %64, label %66, label %72

66:                                               ; preds = %61
  %67 = bitcast %"struct.std::__1::pair.1330"* %62 to i64*
  store i64 %52, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair.1330", %"struct.std::__1::pair.1330"* %62, i64 0, i32 1
  %69 = bitcast i8** %68 to i64*
  store i64 %59, i64* %69, align 8
  %70 = getelementptr inbounds %"struct.std::__1::pair.1330", %"struct.std::__1::pair.1330"* %62, i64 1
  %71 = ptrtoint %"struct.std::__1::pair.1330"* %70 to i64
  store i64 %71, i64* %35, align 8
  br label %127

72:                                               ; preds = %61
  %73 = ptrtoint %"struct.std::__1::pair.1330"* %62 to i64
  %74 = load i64, i64* %36, align 8
  %75 = sub i64 %73, %74
  %76 = ashr exact i64 %75, 4
  %77 = add nsw i64 %76, 1
  %78 = icmp ugt i64 %77, 1152921504606846975
  br i1 %78, label %79, label %81

79:                                               ; preds = %72
  %80 = bitcast %"class.std::__1::vector.1328"* %32 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %80) #20
  unreachable

81:                                               ; preds = %72
  %82 = sub i64 %65, %74
  %83 = ashr exact i64 %82, 4
  %84 = icmp ult i64 %83, 576460752303423487
  br i1 %84, label %85, label %93

85:                                               ; preds = %81
  %86 = ashr exact i64 %82, 3
  %87 = icmp ult i64 %86, %77
  %88 = select i1 %87, i64 %77, i64 %86
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %98, label %90

90:                                               ; preds = %85
  %91 = icmp ugt i64 %88, 1152921504606846975
  br i1 %91, label %92, label %93

92:                                               ; preds = %90
  call void @abort() #20
  unreachable

93:                                               ; preds = %90, %81
  %94 = phi i64 [ %88, %90 ], [ 1152921504606846975, %81 ]
  %95 = shl i64 %94, 4
  %96 = call i8* @_Znwm(i64 %95) #21
  %97 = bitcast i8* %96 to %"struct.std::__1::pair.1330"*
  br label %98

98:                                               ; preds = %93, %85
  %99 = phi i64 [ %94, %93 ], [ 0, %85 ]
  %100 = phi %"struct.std::__1::pair.1330"* [ %97, %93 ], [ null, %85 ]
  %101 = getelementptr inbounds %"struct.std::__1::pair.1330", %"struct.std::__1::pair.1330"* %100, i64 %76
  %102 = getelementptr inbounds %"struct.std::__1::pair.1330", %"struct.std::__1::pair.1330"* %100, i64 %99
  %103 = ptrtoint %"struct.std::__1::pair.1330"* %102 to i64
  %104 = bitcast %"struct.std::__1::pair.1330"* %101 to i64*
  store i64 %52, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.1330", %"struct.std::__1::pair.1330"* %100, i64 %76, i32 1
  %106 = bitcast i8** %105 to i64*
  store i64 %59, i64* %106, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair.1330", %"struct.std::__1::pair.1330"* %101, i64 1
  %108 = ptrtoint %"struct.std::__1::pair.1330"* %107 to i64
  %109 = load %"struct.std::__1::pair.1330"*, %"struct.std::__1::pair.1330"** %38, align 8
  %110 = load i64, i64* %35, align 8
  %111 = ptrtoint %"struct.std::__1::pair.1330"* %109 to i64
  %112 = sub i64 %110, %111
  %113 = ashr exact i64 %112, 4
  %114 = sub nsw i64 0, %113
  %115 = getelementptr inbounds %"struct.std::__1::pair.1330", %"struct.std::__1::pair.1330"* %101, i64 %114
  %116 = ptrtoint %"struct.std::__1::pair.1330"* %115 to i64
  %117 = icmp sgt i64 %112, 0
  br i1 %117, label %118, label %122

118:                                              ; preds = %98
  %119 = bitcast %"struct.std::__1::pair.1330"* %115 to i8*
  %120 = bitcast %"struct.std::__1::pair.1330"* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 %112, i1 false) #13
  %121 = load %"struct.std::__1::pair.1330"*, %"struct.std::__1::pair.1330"** %38, align 8
  br label %122

122:                                              ; preds = %118, %98
  %123 = phi %"struct.std::__1::pair.1330"* [ %109, %98 ], [ %121, %118 ]
  store i64 %116, i64* %36, align 8
  store i64 %108, i64* %35, align 8
  store i64 %103, i64* %37, align 8
  %124 = icmp eq %"struct.std::__1::pair.1330"* %123, null
  br i1 %124, label %127, label %125

125:                                              ; preds = %122
  %126 = bitcast %"struct.std::__1::pair.1330"* %123 to i8*
  call void @_ZdlPv(i8* %126) #21
  br label %127

127:                                              ; preds = %66, %122, %125, %47
  %128 = add nuw nsw i64 %49, 1
  %129 = icmp eq i64 %128, %39
  %130 = load %"class.v8::internal::Handle.1331"*, %"class.v8::internal::Handle.1331"** %31, align 8
  br i1 %129, label %40, label %47

131:                                              ; preds = %1, %46
  ret void
}

declare void @_ZN2v88internal13GlobalHandles15IterateAllRootsEPNS0_11RootVisitorE(%"class.v8::internal::GlobalHandles"*, %"class.v8::internal::RootVisitor"*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal23GlobalObjectsEnumeratorD2Ev(%"class.v8::internal::GlobalObjectsEnumerator"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::GlobalObjectsEnumerator", %"class.v8::internal::GlobalObjectsEnumerator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal23GlobalObjectsEnumeratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::GlobalObjectsEnumerator", %"class.v8::internal::GlobalObjectsEnumerator"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.v8::internal::Handle.1331"*, %"class.v8::internal::Handle.1331"** %3, align 8
  %5 = icmp eq %"class.v8::internal::Handle.1331"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.v8::internal::Handle.1331"* %4 to i64
  %8 = getelementptr inbounds %"class.v8::internal::GlobalObjectsEnumerator", %"class.v8::internal::GlobalObjectsEnumerator"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %"class.v8::internal::Handle.1331"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.v8::internal::Handle.1331"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #21
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14V8HeapExplorer22MakeGlobalObjectTagMapERKNS0_14SafepointScopeE(%"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::SafepointScope"* nocapture readnone dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.v8::internal::JSGlobalObject", align 8
  %4 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 7, i32 0, i32 0
  %5 = load %"struct.std::__1::pair.1330"*, %"struct.std::__1::pair.1330"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 7, i32 0, i32 1
  %7 = load %"struct.std::__1::pair.1330"*, %"struct.std::__1::pair.1330"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair.1330"* %5, %7
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.v8::internal::JSGlobalObject"* %3 to i8*
  %11 = getelementptr inbounds %"class.v8::internal::JSGlobalObject", %"class.v8::internal::JSGlobalObject"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 8, i32 0
  br label %14

13:                                               ; preds = %14, %2
  ret void

14:                                               ; preds = %9, %14
  %15 = phi %"struct.std::__1::pair.1330"* [ %5, %9 ], [ %21, %14 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  %16 = getelementptr inbounds %"struct.std::__1::pair.1330", %"struct.std::__1::pair.1330"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %11, align 8
  %19 = getelementptr inbounds %"struct.std::__1::pair.1330", %"struct.std::__1::pair.1330"* %15, i64 0, i32 1
  %20 = call { %"struct.std::__1::__hash_node_base.1342"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14JSGlobalObjectEPKcEENS_22__unordered_map_hasherIS4_S7_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS4_JS4_RKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1338"* %12, %"class.v8::internal::JSGlobalObject"* nonnull dereferenceable(8) %3, %"class.v8::internal::JSGlobalObject"* nonnull dereferenceable(8) %3, i8** dereferenceable(8) %19) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  %21 = getelementptr inbounds %"struct.std::__1::pair.1330", %"struct.std::__1::pair.1330"* %15, i64 1
  %22 = icmp eq %"struct.std::__1::pair.1330"* %21, %7
  br i1 %22, label %13, label %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::HeapEntry"* @_ZN2v88internal29EmbedderGraphEntriesAllocator13AllocateEntryEPv(%"class.v8::internal::EmbedderGraphEntriesAllocator"* nocapture readonly, i8*) unnamed_addr #2 align 2 {
  %3 = bitcast i8* %1 to %"class.v8::EmbedderGraph::Node"*
  %4 = bitcast i8* %1 to i64 (%"class.v8::EmbedderGraph::Node"*)***
  %5 = load i64 (%"class.v8::EmbedderGraph::Node"*)**, i64 (%"class.v8::EmbedderGraph::Node"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.v8::EmbedderGraph::Node"*)*, i64 (%"class.v8::EmbedderGraph::Node"*)** %5, i64 3
  %7 = load i64 (%"class.v8::EmbedderGraph::Node"*)*, i64 (%"class.v8::EmbedderGraph::Node"*)** %6, align 8
  %8 = tail call i64 %7(%"class.v8::EmbedderGraph::Node"* %3) #13
  %9 = bitcast i8* %1 to i8* (%"class.v8::EmbedderGraph::Node"*)***
  %10 = load i8* (%"class.v8::EmbedderGraph::Node"*)**, i8* (%"class.v8::EmbedderGraph::Node"*)*** %9, align 8
  %11 = getelementptr inbounds i8* (%"class.v8::EmbedderGraph::Node"*)*, i8* (%"class.v8::EmbedderGraph::Node"*)** %10, i64 8
  %12 = load i8* (%"class.v8::EmbedderGraph::Node"*)*, i8* (%"class.v8::EmbedderGraph::Node"*)** %11, align 8
  %13 = tail call i8* %12(%"class.v8::EmbedderGraph::Node"* %3) #13
  %14 = icmp eq i8* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %2
  %16 = ptrtoint i8* %13 to i64
  %17 = getelementptr inbounds %"class.v8::internal::EmbedderGraphEntriesAllocator", %"class.v8::internal::EmbedderGraphEntriesAllocator"* %0, i64 0, i32 3
  %18 = load %"class.v8::internal::HeapObjectsMap"*, %"class.v8::internal::HeapObjectsMap"** %17, align 8
  %19 = tail call i32 @_ZN2v88internal14HeapObjectsMap14FindOrAddEntryEmjb(%"class.v8::internal::HeapObjectsMap"* %18, i64 %16, i32 0, i1 zeroext true)
  br label %24

20:                                               ; preds = %2
  %21 = ptrtoint i8* %1 to i64
  %22 = trunc i64 %21 to i32
  %23 = shl i32 %22, 1
  br label %24

24:                                               ; preds = %20, %15
  %25 = phi i32 [ %19, %15 ], [ %23, %20 ]
  %26 = getelementptr inbounds %"class.v8::internal::EmbedderGraphEntriesAllocator", %"class.v8::internal::EmbedderGraphEntriesAllocator"* %0, i64 0, i32 1
  %27 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %26, align 8
  %28 = bitcast i8* %1 to i1 (%"class.v8::EmbedderGraph::Node"*)***
  %29 = load i1 (%"class.v8::EmbedderGraph::Node"*)**, i1 (%"class.v8::EmbedderGraph::Node"*)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.v8::EmbedderGraph::Node"*)*, i1 (%"class.v8::EmbedderGraph::Node"*)** %29, i64 5
  %31 = load i1 (%"class.v8::EmbedderGraph::Node"*)*, i1 (%"class.v8::EmbedderGraph::Node"*)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.v8::EmbedderGraph::Node"* %3) #13
  %33 = select i1 %32, i32 9, i32 8
  %34 = getelementptr inbounds %"class.v8::internal::EmbedderGraphEntriesAllocator", %"class.v8::internal::EmbedderGraphEntriesAllocator"* %0, i64 0, i32 2
  %35 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %34, align 8
  %36 = load i8* (%"class.v8::EmbedderGraph::Node"*)**, i8* (%"class.v8::EmbedderGraph::Node"*)*** %9, align 8
  %37 = getelementptr inbounds i8* (%"class.v8::EmbedderGraph::Node"*)*, i8* (%"class.v8::EmbedderGraph::Node"*)** %36, i64 7
  %38 = load i8* (%"class.v8::EmbedderGraph::Node"*)*, i8* (%"class.v8::EmbedderGraph::Node"*)** %37, align 8
  %39 = tail call i8* %38(%"class.v8::EmbedderGraph::Node"* %3) #13
  %40 = icmp eq i8* %39, null
  %41 = load i8* (%"class.v8::EmbedderGraph::Node"*)**, i8* (%"class.v8::EmbedderGraph::Node"*)*** %9, align 8
  %42 = getelementptr inbounds i8* (%"class.v8::EmbedderGraph::Node"*)*, i8* (%"class.v8::EmbedderGraph::Node"*)** %41, i64 2
  %43 = load i8* (%"class.v8::EmbedderGraph::Node"*)*, i8* (%"class.v8::EmbedderGraph::Node"*)** %42, align 8
  %44 = tail call i8* %43(%"class.v8::EmbedderGraph::Node"* %3) #13
  br i1 %40, label %47, label %45

45:                                               ; preds = %24
  %46 = tail call i8* (%"class.v8::internal::StringsStorage"*, i8*, ...) @_ZN2v88internal14StringsStorage12GetFormattedEPKcz(%"class.v8::internal::StringsStorage"* %35, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.644, i64 0, i64 0), i8* nonnull %39, i8* %44) #13
  br label %49

47:                                               ; preds = %24
  %48 = tail call i8* @_ZN2v88internal14StringsStorage7GetCopyEPKc(%"class.v8::internal::StringsStorage"* %35, i8* %44) #13
  br label %49

49:                                               ; preds = %45, %47
  %50 = phi i8* [ %46, %45 ], [ %48, %47 ]
  %51 = shl i64 %8, 32
  %52 = ashr exact i64 %51, 32
  %53 = ptrtoint i8* %50 to i64
  %54 = ptrtoint %"class.v8::internal::HeapSnapshot"* %27 to i64
  %55 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %27, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = trunc i64 %56 to i32
  %58 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %27, i64 0, i32 4, i32 0, i32 0, i32 2
  %59 = bitcast %"class.v8::internal::HeapEntry"*** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %27, i64 0, i32 4, i32 0, i32 0, i32 1
  %62 = bitcast %"class.v8::internal::HeapEntry"*** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = sub i64 %60, %63
  %65 = ashr exact i64 %64, 3
  %66 = icmp eq i64 %64, 0
  %67 = mul i64 %65, 102
  %68 = add i64 %67, -1
  %69 = select i1 %66, i64 0, i64 %68
  %70 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %27, i64 0, i32 4, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, %56
  %73 = icmp eq i64 %69, %72
  %74 = inttoptr i64 %63 to %"class.v8::internal::HeapEntry"**
  %75 = inttoptr i64 %60 to %"class.v8::internal::HeapEntry"**
  br i1 %73, label %76, label %83

76:                                               ; preds = %49
  %77 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %27, i64 0, i32 4
  tail call void @_ZNSt3__15dequeIN2v88internal9HeapEntryENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %77) #13
  %78 = load i64, i64* %55, align 8
  %79 = load i64, i64* %70, align 8
  %80 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %61, align 8
  %81 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %58, align 8
  %82 = add i64 %79, %78
  br label %83

83:                                               ; preds = %76, %49
  %84 = phi i64 [ %82, %76 ], [ %72, %49 ]
  %85 = phi %"class.v8::internal::HeapEntry"** [ %81, %76 ], [ %75, %49 ]
  %86 = phi %"class.v8::internal::HeapEntry"** [ %80, %76 ], [ %74, %49 ]
  %87 = icmp eq %"class.v8::internal::HeapEntry"** %85, %86
  br i1 %87, label %94, label %88

88:                                               ; preds = %83
  %89 = udiv i64 %84, 102
  %90 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %86, i64 %89
  %91 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %90, align 8
  %92 = urem i64 %84, 102
  %93 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %91, i64 %92
  br label %94

94:                                               ; preds = %83, %88
  %95 = phi %"class.v8::internal::HeapEntry"* [ %93, %88 ], [ null, %83 ]
  %96 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %95, i64 0, i32 0
  %97 = shl i32 %57, 4
  %98 = or i32 %97, %33
  store i32 %98, i32* %96, align 8
  %99 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %95, i64 0, i32 1, i32 0
  store i32 0, i32* %99, align 4
  %100 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %95, i64 0, i32 2
  %101 = bitcast [6 x i8]* %100 to i48*
  %102 = trunc i64 %52 to i48
  store i48 %102, i48* %101, align 8
  %103 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %95, i64 0, i32 3
  store i8 0, i8* %103, align 2
  %104 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %95, i64 0, i32 4
  %105 = bitcast %"class.v8::internal::HeapSnapshot"** %104 to i64*
  store i64 %54, i64* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %95, i64 0, i32 5
  %107 = bitcast i8** %106 to i64*
  store i64 %53, i64* %107, align 8
  %108 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %95, i64 0, i32 6
  store i32 %25, i32* %108, align 8
  %109 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %95, i64 0, i32 7
  store i32 0, i32* %109, align 4
  %110 = load i64, i64* %55, align 8
  %111 = add i64 %110, 1
  store i64 %111, i64* %55, align 8
  %112 = load i64, i64* %70, align 8
  %113 = add i64 %112, %110
  %114 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %61, align 8
  %115 = udiv i64 %113, 102
  %116 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %114, i64 %115
  %117 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %116, align 8
  %118 = urem i64 %113, 102
  %119 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %117, i64 %118
  %120 = bitcast i8* %1 to i8 (%"class.v8::EmbedderGraph::Node"*)***
  %121 = load i8 (%"class.v8::EmbedderGraph::Node"*)**, i8 (%"class.v8::EmbedderGraph::Node"*)*** %120, align 8
  %122 = getelementptr inbounds i8 (%"class.v8::EmbedderGraph::Node"*)*, i8 (%"class.v8::EmbedderGraph::Node"*)** %121, i64 9
  %123 = load i8 (%"class.v8::EmbedderGraph::Node"*)*, i8 (%"class.v8::EmbedderGraph::Node"*)** %122, align 8
  %124 = tail call zeroext i8 %123(%"class.v8::EmbedderGraph::Node"* %3) #13
  %125 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %117, i64 %118, i32 3
  store i8 %124, i8* %125, align 2
  ret %"class.v8::internal::HeapEntry"* %119
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.v8::internal::HeapEntry"* @_ZN2v88internal29EmbedderGraphEntriesAllocator13AllocateEntryENS0_3SmiE(%"class.v8::internal::EmbedderGraphEntriesAllocator"* nocapture readnone, i64) unnamed_addr #8 align 2 {
  ret %"class.v8::internal::HeapEntry"* null
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN2v88internal21NativeObjectsExplorerC2EPNS0_12HeapSnapshotEPNS0_38SnapshottingProgressReportingInterfaceE(%"class.v8::internal::NativeObjectsExplorer"* nocapture, %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::SnapshottingProgressReportingInterface"* nocapture readnone) unnamed_addr #9 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::NativeObjectsExplorer", %"class.v8::internal::NativeObjectsExplorer"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %1, i64 0, i32 0
  %6 = load %"class.v8::internal::HeapProfiler"*, %"class.v8::internal::HeapProfiler"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::HeapProfiler", %"class.v8::internal::HeapProfiler"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.v8::internal::HeapObjectsMap"*, %"class.v8::internal::HeapObjectsMap"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %8, i64 0, i32 5
  %10 = bitcast %"class.v8::internal::Heap"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, -41416
  %13 = inttoptr i64 %12 to %"class.v8::internal::Isolate"*
  store %"class.v8::internal::Isolate"* %13, %"class.v8::internal::Isolate"** %4, align 8
  %14 = getelementptr inbounds %"class.v8::internal::NativeObjectsExplorer", %"class.v8::internal::NativeObjectsExplorer"* %0, i64 0, i32 1
  store %"class.v8::internal::HeapSnapshot"* %1, %"class.v8::internal::HeapSnapshot"** %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::NativeObjectsExplorer", %"class.v8::internal::NativeObjectsExplorer"* %0, i64 0, i32 2
  %16 = load %"class.v8::internal::HeapProfiler"*, %"class.v8::internal::HeapProfiler"** %5, align 8
  %17 = getelementptr inbounds %"class.v8::internal::HeapProfiler", %"class.v8::internal::HeapProfiler"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = bitcast %"class.v8::internal::StringsStorage"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.v8::internal::StringsStorage"** %15 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::NativeObjectsExplorer", %"class.v8::internal::NativeObjectsExplorer"* %0, i64 0, i32 3
  %22 = load %"class.v8::internal::HeapProfiler"*, %"class.v8::internal::HeapProfiler"** %5, align 8
  %23 = getelementptr inbounds %"class.v8::internal::HeapProfiler", %"class.v8::internal::HeapProfiler"* %22, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = bitcast %"class.v8::internal::HeapObjectsMap"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.v8::internal::HeapObjectsMap"** %21 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.v8::internal::NativeObjectsExplorer", %"class.v8::internal::NativeObjectsExplorer"* %0, i64 0, i32 4
  %28 = tail call i8* @_Znwm(i64 32) #21
  %29 = bitcast i8* %28 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal29EmbedderGraphEntriesAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %30 = getelementptr inbounds i8, i8* %28, i64 8
  %31 = bitcast i8* %30 to %"class.v8::internal::HeapSnapshot"**
  store %"class.v8::internal::HeapSnapshot"* %1, %"class.v8::internal::HeapSnapshot"** %31, align 8
  %32 = getelementptr inbounds i8, i8* %28, i64 16
  %33 = load %"class.v8::internal::HeapProfiler"*, %"class.v8::internal::HeapProfiler"** %5, align 8
  %34 = getelementptr inbounds %"class.v8::internal::HeapProfiler", %"class.v8::internal::HeapProfiler"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = bitcast %"class.v8::internal::StringsStorage"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast i8* %32 to i64*
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds i8, i8* %28, i64 24
  %39 = getelementptr inbounds %"class.v8::internal::HeapProfiler", %"class.v8::internal::HeapProfiler"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %40 = bitcast %"class.v8::internal::HeapObjectsMap"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast i8* %38 to i64*
  store i64 %41, i64* %42, align 8
  %43 = ptrtoint i8* %28 to i64
  %44 = bitcast %"class.std::__1::unique_ptr.1413"* %27 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::NativeObjectsExplorer", %"class.v8::internal::NativeObjectsExplorer"* %0, i64 0, i32 5
  store %"class.v8::internal::HeapSnapshotGenerator"* null, %"class.v8::internal::HeapSnapshotGenerator"** %45, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal21NativeObjectsExplorer18MergeNodeIntoEntryEPNS0_9HeapEntryEPNS_13EmbedderGraph4NodeES6_(%"class.v8::internal::NativeObjectsExplorer"* nocapture readonly, %"class.v8::internal::HeapEntry"* nocapture, %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"*) local_unnamed_addr #2 align 2 {
  %5 = alloca %"struct.std::__1::pair.1274", align 8
  %6 = bitcast %"class.v8::EmbedderGraph::Node"* %3 to i1 (%"class.v8::EmbedderGraph::Node"*)***
  %7 = load i1 (%"class.v8::EmbedderGraph::Node"*)**, i1 (%"class.v8::EmbedderGraph::Node"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.v8::EmbedderGraph::Node"*)*, i1 (%"class.v8::EmbedderGraph::Node"*)** %7, i64 6
  %9 = load i1 (%"class.v8::EmbedderGraph::Node"*)*, i1 (%"class.v8::EmbedderGraph::Node"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.v8::EmbedderGraph::Node"* %3) #13
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  %12 = bitcast %"class.v8::EmbedderGraph::Node"* %2 to i8* (%"class.v8::EmbedderGraph::Node"*)***
  br label %93

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.v8::EmbedderGraph::Node", %"class.v8::EmbedderGraph::Node"* %3, i64 1
  %15 = bitcast %"class.v8::EmbedderGraph::Node"* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.v8::EmbedderGraph::Node"* %2 to i8* (%"class.v8::EmbedderGraph::Node"*)***
  %18 = load i8* (%"class.v8::EmbedderGraph::Node"*)**, i8* (%"class.v8::EmbedderGraph::Node"*)*** %17, align 8
  %19 = getelementptr inbounds i8* (%"class.v8::EmbedderGraph::Node"*)*, i8* (%"class.v8::EmbedderGraph::Node"*)** %18, i64 8
  %20 = load i8* (%"class.v8::EmbedderGraph::Node"*)*, i8* (%"class.v8::EmbedderGraph::Node"*)** %19, align 8
  %21 = tail call i8* %20(%"class.v8::EmbedderGraph::Node"* %2) #13
  %22 = icmp eq i8* %21, null
  br i1 %22, label %93, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.v8::internal::NativeObjectsExplorer", %"class.v8::internal::NativeObjectsExplorer"* %0, i64 0, i32 3
  %25 = load %"class.v8::internal::HeapObjectsMap"*, %"class.v8::internal::HeapObjectsMap"** %24, align 8
  %26 = load i8* (%"class.v8::EmbedderGraph::Node"*)**, i8* (%"class.v8::EmbedderGraph::Node"*)*** %17, align 8
  %27 = getelementptr inbounds i8* (%"class.v8::EmbedderGraph::Node"*)*, i8* (%"class.v8::EmbedderGraph::Node"*)** %26, i64 8
  %28 = load i8* (%"class.v8::EmbedderGraph::Node"*)*, i8* (%"class.v8::EmbedderGraph::Node"*)** %27, align 8
  %29 = tail call i8* %28(%"class.v8::EmbedderGraph::Node"* %2) #13
  %30 = add i64 %16, -1
  %31 = ptrtoint i8* %29 to i64
  %32 = inttoptr i64 %30 to i8*
  %33 = trunc i64 %30 to i32
  %34 = xor i32 %33, -1
  %35 = shl i32 %33, 15
  %36 = add i32 %35, %34
  %37 = lshr i32 %36, 12
  %38 = xor i32 %37, %36
  %39 = mul i32 %38, 5
  %40 = lshr i32 %39, 4
  %41 = xor i32 %40, %39
  %42 = mul i32 %41, 2057
  %43 = lshr i32 %42, 16
  %44 = and i32 %42, 1073741823
  %45 = xor i32 %44, %43
  %46 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %25, i64 0, i32 1, i32 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = add i32 %47, -1
  %49 = and i32 %48, %45
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %25, i64 0, i32 1, i32 0, i32 0, i32 0
  %52 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %51, align 8
  %53 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %52, i64 %50
  %54 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %53, i64 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, null
  %57 = icmp eq i8* %55, %32
  %58 = or i1 %56, %57
  br i1 %58, label %71, label %59

59:                                               ; preds = %23
  %60 = zext i32 %48 to i64
  br label %61

61:                                               ; preds = %61, %59
  %62 = phi i64 [ %50, %59 ], [ %64, %61 ]
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, %60
  %65 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %52, i64 %64
  %66 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %65, i64 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = icmp eq i8* %67, null
  %69 = icmp eq i8* %67, %32
  %70 = or i1 %68, %69
  br i1 %70, label %71, label %61

71:                                               ; preds = %61, %23
  %72 = phi i8* [ %55, %23 ], [ %67, %61 ]
  %73 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %53, %23 ], [ %65, %61 ]
  %74 = icmp eq i8* %72, null
  %75 = select i1 %74, %"struct.v8::base::TemplateHashMapEntry"* null, %"struct.v8::base::TemplateHashMapEntry"* %73
  %76 = bitcast %"struct.std::__1::pair.1274"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #13
  %77 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %75, i64 0, i32 1
  %78 = bitcast i8** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"struct.std::__1::pair.1274"* %5 to i64*
  store i64 %31, i64* %80, align 8
  %81 = getelementptr inbounds %"struct.std::__1::pair.1274", %"struct.std::__1::pair.1274"* %5, i64 0, i32 1
  store i64 %79, i64* %81, align 8
  %82 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %25, i64 0, i32 4, i32 0
  %83 = getelementptr inbounds %"struct.std::__1::pair.1274", %"struct.std::__1::pair.1274"* %5, i64 0, i32 0
  %84 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvmEENS_22__unordered_map_hasherIS2_S3_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S3_S8_S6_Lb1EEENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS2_JNS_4pairIKS2_mEEEEENSG_INS_15__hash_iteratorIPNS_11__hash_nodeIS3_S2_EEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %82, i8** nonnull dereferenceable(8) %83, %"struct.std::__1::pair.1274"* nonnull dereferenceable(16) %5) #13
  %85 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %84, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #13
  %86 = and i8 %85, 1
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %93

88:                                               ; preds = %71
  %89 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %84, 0
  %90 = load i64, i64* %78, align 8
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %89, i64 3
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %91 to i64*
  store i64 %90, i64* %92, align 8
  br label %93

93:                                               ; preds = %11, %88, %71, %13
  %94 = phi i8* (%"class.v8::EmbedderGraph::Node"*)*** [ %12, %11 ], [ %17, %88 ], [ %17, %71 ], [ %17, %13 ]
  %95 = bitcast %"class.v8::EmbedderGraph::Node"* %2 to i8 (%"class.v8::EmbedderGraph::Node"*)***
  %96 = load i8 (%"class.v8::EmbedderGraph::Node"*)**, i8 (%"class.v8::EmbedderGraph::Node"*)*** %95, align 8
  %97 = getelementptr inbounds i8 (%"class.v8::EmbedderGraph::Node"*)*, i8 (%"class.v8::EmbedderGraph::Node"*)** %96, i64 9
  %98 = load i8 (%"class.v8::EmbedderGraph::Node"*)*, i8 (%"class.v8::EmbedderGraph::Node"*)** %97, align 8
  %99 = call zeroext i8 %98(%"class.v8::EmbedderGraph::Node"* %2) #13
  %100 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 3
  store i8 %99, i8* %100, align 2
  %101 = getelementptr inbounds %"class.v8::internal::NativeObjectsExplorer", %"class.v8::internal::NativeObjectsExplorer"* %0, i64 0, i32 2
  %102 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %101, align 8
  %103 = load i8* (%"class.v8::EmbedderGraph::Node"*)**, i8* (%"class.v8::EmbedderGraph::Node"*)*** %94, align 8
  %104 = getelementptr inbounds i8* (%"class.v8::EmbedderGraph::Node"*)*, i8* (%"class.v8::EmbedderGraph::Node"*)** %103, i64 7
  %105 = load i8* (%"class.v8::EmbedderGraph::Node"*)*, i8* (%"class.v8::EmbedderGraph::Node"*)** %104, align 8
  %106 = call i8* %105(%"class.v8::EmbedderGraph::Node"* %2) #13
  %107 = icmp eq i8* %106, null
  %108 = load i8* (%"class.v8::EmbedderGraph::Node"*)**, i8* (%"class.v8::EmbedderGraph::Node"*)*** %94, align 8
  %109 = getelementptr inbounds i8* (%"class.v8::EmbedderGraph::Node"*)*, i8* (%"class.v8::EmbedderGraph::Node"*)** %108, i64 2
  %110 = load i8* (%"class.v8::EmbedderGraph::Node"*)*, i8* (%"class.v8::EmbedderGraph::Node"*)** %109, align 8
  %111 = call i8* %110(%"class.v8::EmbedderGraph::Node"* %2) #13
  br i1 %107, label %114, label %112

112:                                              ; preds = %93
  %113 = call i8* (%"class.v8::internal::StringsStorage"*, i8*, ...) @_ZN2v88internal14StringsStorage12GetFormattedEPKcz(%"class.v8::internal::StringsStorage"* %102, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.644, i64 0, i64 0), i8* nonnull %106, i8* %111) #13
  br label %116

114:                                              ; preds = %93
  %115 = call i8* @_ZN2v88internal14StringsStorage7GetCopyEPKc(%"class.v8::internal::StringsStorage"* %102, i8* %111) #13
  br label %116

116:                                              ; preds = %112, %114
  %117 = phi i8* [ %113, %112 ], [ %115, %114 ]
  %118 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 5
  %119 = load i8*, i8** %118, align 8
  %120 = call i8* @strchr(i8* %119, i32 47) #22
  %121 = icmp eq i8* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %116
  %123 = call i8* (%"class.v8::internal::StringsStorage"*, i8*, ...) @_ZN2v88internal14StringsStorage12GetFormattedEPKcz(%"class.v8::internal::StringsStorage"* %102, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.644, i64 0, i64 0), i8* %117, i8* nonnull %120) #13
  br label %124

124:                                              ; preds = %116, %122
  %125 = phi i8* [ %123, %122 ], [ %117, %116 ]
  store i8* %125, i8** %118, align 8
  %126 = bitcast %"class.v8::EmbedderGraph::Node"* %2 to i1 (%"class.v8::EmbedderGraph::Node"*)***
  %127 = load i1 (%"class.v8::EmbedderGraph::Node"*)**, i1 (%"class.v8::EmbedderGraph::Node"*)*** %126, align 8
  %128 = getelementptr inbounds i1 (%"class.v8::EmbedderGraph::Node"*)*, i1 (%"class.v8::EmbedderGraph::Node"*)** %127, i64 5
  %129 = load i1 (%"class.v8::EmbedderGraph::Node"*)*, i1 (%"class.v8::EmbedderGraph::Node"*)** %128, align 8
  %130 = call zeroext i1 %129(%"class.v8::EmbedderGraph::Node"* %2) #13
  %131 = select i1 %130, i32 9, i32 8
  %132 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 0
  %133 = load i32, i32* %132, align 8
  %134 = and i32 %133, -16
  %135 = or i32 %134, %131
  store i32 %135, i32* %132, align 8
  %136 = bitcast %"class.v8::EmbedderGraph::Node"* %2 to i64 (%"class.v8::EmbedderGraph::Node"*)***
  %137 = load i64 (%"class.v8::EmbedderGraph::Node"*)**, i64 (%"class.v8::EmbedderGraph::Node"*)*** %136, align 8
  %138 = getelementptr inbounds i64 (%"class.v8::EmbedderGraph::Node"*)*, i64 (%"class.v8::EmbedderGraph::Node"*)** %137, i64 3
  %139 = load i64 (%"class.v8::EmbedderGraph::Node"*)*, i64 (%"class.v8::EmbedderGraph::Node"*)** %138, align 8
  %140 = call i64 %139(%"class.v8::EmbedderGraph::Node"* %2) #13
  %141 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 2
  %142 = bitcast [6 x i8]* %141 to i48*
  %143 = load i48, i48* %142, align 8
  %144 = zext i48 %143 to i64
  %145 = add i64 %140, %144
  %146 = trunc i64 %145 to i48
  store i48 %146, i48* %142, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::HeapEntry"* @_ZN2v88internal21NativeObjectsExplorer25EntryForEmbedderGraphNodeEPNS_13EmbedderGraph4NodeE(%"class.v8::internal::NativeObjectsExplorer"* nocapture readonly, %"class.v8::EmbedderGraph::Node"*) local_unnamed_addr #2 align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca %"class.v8::internal::HeapEntry"*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = bitcast %"class.v8::EmbedderGraph::Node"* %1 to %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph::Node"*)***
  %8 = load %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph::Node"*)**, %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph::Node"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph::Node"*)*, %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph::Node"*)** %8, i64 4
  %10 = load %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph::Node"*)*, %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph::Node"*)** %9, align 8
  %11 = tail call %"class.v8::EmbedderGraph::Node"* %10(%"class.v8::EmbedderGraph::Node"* %1) #13
  %12 = icmp eq %"class.v8::EmbedderGraph::Node"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %2
  %14 = load %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph::Node"*)**, %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph::Node"*)*** %7, align 8
  %15 = getelementptr inbounds %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph::Node"*)*, %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph::Node"*)** %14, i64 4
  %16 = load %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph::Node"*)*, %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph::Node"*)** %15, align 8
  %17 = tail call %"class.v8::EmbedderGraph::Node"* %16(%"class.v8::EmbedderGraph::Node"* %1) #13
  br label %18

18:                                               ; preds = %2, %13
  %19 = phi %"class.v8::EmbedderGraph::Node"* [ %17, %13 ], [ %1, %2 ]
  %20 = bitcast %"class.v8::EmbedderGraph::Node"* %19 to i1 (%"class.v8::EmbedderGraph::Node"*)***
  %21 = load i1 (%"class.v8::EmbedderGraph::Node"*)**, i1 (%"class.v8::EmbedderGraph::Node"*)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.v8::EmbedderGraph::Node"*)*, i1 (%"class.v8::EmbedderGraph::Node"*)** %21, i64 6
  %23 = load i1 (%"class.v8::EmbedderGraph::Node"*)*, i1 (%"class.v8::EmbedderGraph::Node"*)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.v8::EmbedderGraph::Node"* %19) #13
  br i1 %24, label %25, label %56

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.v8::internal::NativeObjectsExplorer", %"class.v8::internal::NativeObjectsExplorer"* %0, i64 0, i32 5
  %27 = load %"class.v8::internal::HeapSnapshotGenerator"*, %"class.v8::internal::HeapSnapshotGenerator"** %26, align 8
  %28 = bitcast %"class.v8::EmbedderGraph::Node"* %19 to i8*
  %29 = getelementptr inbounds %"class.v8::internal::NativeObjectsExplorer", %"class.v8::internal::NativeObjectsExplorer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %30 = load %"class.v8::internal::HeapEntriesAllocator"*, %"class.v8::internal::HeapEntriesAllocator"** %29, align 8
  %31 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #13
  %32 = bitcast i8** %5 to %"class.v8::EmbedderGraph::Node"**
  store %"class.v8::EmbedderGraph::Node"* %19, %"class.v8::EmbedderGraph::Node"** %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %27, i64 0, i32 5, i32 0
  %34 = call %"struct.std::__1::__hash_node_base.1424"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIS2_S7_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS2_EENS_15__hash_iteratorIPNS_11__hash_nodeIS7_S2_EEEERKT_(%"class.std::__1::__hash_table.1420"* %33, i8** nonnull dereferenceable(8) %5) #13
  %35 = icmp eq %"struct.std::__1::__hash_node_base.1424"* %34, null
  br i1 %35, label %36, label %37

36:                                               ; preds = %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  br label %42

37:                                               ; preds = %25
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %34, i64 3
  %39 = bitcast %"struct.std::__1::__hash_node_base.1424"* %38 to %"class.v8::internal::HeapEntry"**
  %40 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  %41 = icmp eq %"class.v8::internal::HeapEntry"* %40, null
  br i1 %41, label %42, label %76

42:                                               ; preds = %37, %36
  %43 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #13
  %44 = bitcast i8** %3 to %"class.v8::EmbedderGraph::Node"**
  store %"class.v8::EmbedderGraph::Node"* %19, %"class.v8::EmbedderGraph::Node"** %44, align 8
  %45 = bitcast %"class.v8::internal::HeapEntry"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #13
  %46 = bitcast %"class.v8::internal::HeapEntriesAllocator"* %30 to %"class.v8::internal::HeapEntry"* (%"class.v8::internal::HeapEntriesAllocator"*, i8*)***
  %47 = load %"class.v8::internal::HeapEntry"* (%"class.v8::internal::HeapEntriesAllocator"*, i8*)**, %"class.v8::internal::HeapEntry"* (%"class.v8::internal::HeapEntriesAllocator"*, i8*)*** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::HeapEntry"* (%"class.v8::internal::HeapEntriesAllocator"*, i8*)*, %"class.v8::internal::HeapEntry"* (%"class.v8::internal::HeapEntriesAllocator"*, i8*)** %47, i64 2
  %49 = load %"class.v8::internal::HeapEntry"* (%"class.v8::internal::HeapEntriesAllocator"*, i8*)*, %"class.v8::internal::HeapEntry"* (%"class.v8::internal::HeapEntriesAllocator"*, i8*)** %48, align 8
  %50 = call %"class.v8::internal::HeapEntry"* %49(%"class.v8::internal::HeapEntriesAllocator"* %30, i8* %28) #13
  store %"class.v8::internal::HeapEntry"* %50, %"class.v8::internal::HeapEntry"** %4, align 8
  %51 = call { %"struct.std::__1::__hash_node_base.1424"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIS2_S7_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS2_JRS2_S6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_S2_EEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1420"* %33, i8** nonnull dereferenceable(8) %3, i8** nonnull dereferenceable(8) %3, %"class.v8::internal::HeapEntry"** nonnull dereferenceable(8) %4) #13
  %52 = extractvalue { %"struct.std::__1::__hash_node_base.1424"*, i8 } %51, 0
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %52, i64 3
  %54 = bitcast %"struct.std::__1::__hash_node_base.1424"* %53 to %"class.v8::internal::HeapEntry"**
  %55 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #13
  br label %76

56:                                               ; preds = %18
  %57 = getelementptr inbounds %"class.v8::EmbedderGraph::Node", %"class.v8::EmbedderGraph::Node"* %19, i64 1
  %58 = bitcast %"class.v8::EmbedderGraph::Node"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = and i64 %59, 1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %76, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.v8::internal::NativeObjectsExplorer", %"class.v8::internal::NativeObjectsExplorer"* %0, i64 0, i32 5
  %64 = load %"class.v8::internal::HeapSnapshotGenerator"*, %"class.v8::internal::HeapSnapshotGenerator"** %63, align 8
  %65 = inttoptr i64 %59 to i8*
  %66 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66)
  store i8* %65, i8** %6, align 8
  %67 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %64, i64 0, i32 5, i32 0
  %68 = call %"struct.std::__1::__hash_node_base.1424"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIS2_S7_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS2_EENS_15__hash_iteratorIPNS_11__hash_nodeIS7_S2_EEEERKT_(%"class.std::__1::__hash_table.1420"* %67, i8** nonnull dereferenceable(8) %6) #13
  %69 = icmp eq %"struct.std::__1::__hash_node_base.1424"* %68, null
  br i1 %69, label %74, label %70

70:                                               ; preds = %62
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %68, i64 3
  %72 = bitcast %"struct.std::__1::__hash_node_base.1424"* %71 to %"class.v8::internal::HeapEntry"**
  %73 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %72, align 8
  br label %74

74:                                               ; preds = %62, %70
  %75 = phi %"class.v8::internal::HeapEntry"* [ %73, %70 ], [ null, %62 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66)
  br label %76

76:                                               ; preds = %74, %56, %42, %37
  %77 = phi %"class.v8::internal::HeapEntry"* [ %55, %42 ], [ %40, %37 ], [ %75, %74 ], [ null, %56 ]
  ret %"class.v8::internal::HeapEntry"* %77
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal21NativeObjectsExplorer27IterateAndExtractReferencesEPNS0_21HeapSnapshotGeneratorE(%"class.v8::internal::NativeObjectsExplorer"* nocapture, %"class.v8::internal::HeapSnapshotGenerator"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.v8::HandleScope", align 8
  %4 = alloca %"class.v8::internal::EmbedderGraphImpl", align 8
  %5 = getelementptr inbounds %"class.v8::internal::NativeObjectsExplorer", %"class.v8::internal::NativeObjectsExplorer"* %0, i64 0, i32 5
  store %"class.v8::internal::HeapSnapshotGenerator"* %1, %"class.v8::internal::HeapSnapshotGenerator"** %5, align 8
  %6 = load i8, i8* @_ZN2v88internal37FLAG_heap_profiler_use_embedder_graphE, align 1, !range !4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %319, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::NativeObjectsExplorer", %"class.v8::internal::NativeObjectsExplorer"* %0, i64 0, i32 1
  %10 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %10, i64 0, i32 0
  %12 = load %"class.v8::internal::HeapProfiler"*, %"class.v8::internal::HeapProfiler"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::HeapProfiler", %"class.v8::internal::HeapProfiler"* %12, i64 0, i32 9, i32 0, i32 0
  %14 = load %"struct.std::__1::pair.742"*, %"struct.std::__1::pair.742"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::HeapProfiler", %"class.v8::internal::HeapProfiler"* %12, i64 0, i32 9, i32 0, i32 1
  %16 = load %"struct.std::__1::pair.742"*, %"struct.std::__1::pair.742"** %15, align 8
  %17 = icmp eq %"struct.std::__1::pair.742"* %14, %16
  br i1 %17, label %319, label %18

18:                                               ; preds = %8
  %19 = bitcast %"class.v8::HandleScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #13
  %20 = getelementptr inbounds %"class.v8::internal::NativeObjectsExplorer", %"class.v8::internal::NativeObjectsExplorer"* %0, i64 0, i32 0
  %21 = bitcast %"class.v8::internal::NativeObjectsExplorer"* %0 to %"class.v8::Isolate"**
  %22 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %21, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %3, %"class.v8::Isolate"* %22) #13
  %23 = bitcast %"class.v8::internal::EmbedderGraphImpl"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %23) #13
  %24 = getelementptr inbounds %"class.v8::internal::EmbedderGraphImpl", %"class.v8::internal::EmbedderGraphImpl"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2v88internal17EmbedderGraphImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::EmbedderGraphImpl", %"class.v8::internal::EmbedderGraphImpl"* %4, i64 0, i32 1
  %26 = bitcast %"class.std::__1::vector.1509"* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 48, i1 false) #13
  %27 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %9, align 8
  %28 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %27, i64 0, i32 0
  %29 = load %"class.v8::internal::HeapProfiler"*, %"class.v8::internal::HeapProfiler"** %28, align 8
  %30 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %20, align 8
  %31 = getelementptr inbounds %"class.v8::internal::EmbedderGraphImpl", %"class.v8::internal::EmbedderGraphImpl"* %4, i64 0, i32 0
  call void @_ZN2v88internal12HeapProfiler18BuildEmbedderGraphEPNS0_7IsolateEPNS_13EmbedderGraphE(%"class.v8::internal::HeapProfiler"* %29, %"class.v8::internal::Isolate"* %30, %"class.v8::EmbedderGraph"* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::vector.1509", %"class.std::__1::vector.1509"* %25, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::unique_ptr.1511"*, %"class.std::__1::unique_ptr.1511"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::EmbedderGraphImpl", %"class.v8::internal::EmbedderGraphImpl"* %4, i64 0, i32 1, i32 0, i32 1
  %35 = load %"class.std::__1::unique_ptr.1511"*, %"class.std::__1::unique_ptr.1511"** %34, align 8
  %36 = icmp eq %"class.std::__1::unique_ptr.1511"* %33, %35
  br i1 %36, label %37, label %45

37:                                               ; preds = %142, %18
  %38 = getelementptr inbounds %"class.v8::internal::EmbedderGraphImpl", %"class.v8::internal::EmbedderGraphImpl"* %4, i64 0, i32 2, i32 0, i32 0
  %39 = load %"struct.v8::internal::EmbedderGraphImpl::Edge"*, %"struct.v8::internal::EmbedderGraphImpl::Edge"** %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::EmbedderGraphImpl", %"class.v8::internal::EmbedderGraphImpl"* %4, i64 0, i32 2, i32 0, i32 1
  %41 = load %"struct.v8::internal::EmbedderGraphImpl::Edge"*, %"struct.v8::internal::EmbedderGraphImpl::Edge"** %40, align 8
  %42 = icmp eq %"struct.v8::internal::EmbedderGraphImpl::Edge"* %39, %41
  br i1 %42, label %147, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.v8::internal::NativeObjectsExplorer", %"class.v8::internal::NativeObjectsExplorer"* %0, i64 0, i32 2
  br label %180

45:                                               ; preds = %18, %142
  %46 = phi %"class.std::__1::unique_ptr.1511"* [ %143, %142 ], [ %33, %18 ]
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"** %47, align 8
  %49 = bitcast %"class.v8::EmbedderGraph::Node"* %48 to i1 (%"class.v8::EmbedderGraph::Node"*)***
  %50 = load i1 (%"class.v8::EmbedderGraph::Node"*)**, i1 (%"class.v8::EmbedderGraph::Node"*)*** %49, align 8
  %51 = getelementptr inbounds i1 (%"class.v8::EmbedderGraph::Node"*)*, i1 (%"class.v8::EmbedderGraph::Node"*)** %50, i64 6
  %52 = load i1 (%"class.v8::EmbedderGraph::Node"*)*, i1 (%"class.v8::EmbedderGraph::Node"*)** %51, align 8
  %53 = call zeroext i1 %52(%"class.v8::EmbedderGraph::Node"* %48) #13
  br i1 %53, label %54, label %142

54:                                               ; preds = %45
  %55 = load %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"** %47, align 8
  %56 = call %"class.v8::internal::HeapEntry"* @_ZN2v88internal21NativeObjectsExplorer25EntryForEmbedderGraphNodeEPNS_13EmbedderGraph4NodeE(%"class.v8::internal::NativeObjectsExplorer"* %0, %"class.v8::EmbedderGraph::Node"* %55)
  %57 = icmp eq %"class.v8::internal::HeapEntry"* %56, null
  br i1 %57, label %142, label %58

58:                                               ; preds = %54
  %59 = load %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"** %47, align 8
  %60 = bitcast %"class.v8::EmbedderGraph::Node"* %59 to i1 (%"class.v8::EmbedderGraph::Node"*)***
  %61 = load i1 (%"class.v8::EmbedderGraph::Node"*)**, i1 (%"class.v8::EmbedderGraph::Node"*)*** %60, align 8
  %62 = getelementptr inbounds i1 (%"class.v8::EmbedderGraph::Node"*)*, i1 (%"class.v8::EmbedderGraph::Node"*)** %61, i64 5
  %63 = load i1 (%"class.v8::EmbedderGraph::Node"*)*, i1 (%"class.v8::EmbedderGraph::Node"*)** %62, align 8
  %64 = call zeroext i1 %63(%"class.v8::EmbedderGraph::Node"* %59) #13
  br i1 %64, label %65, label %127

65:                                               ; preds = %58
  %66 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %9, align 8
  %67 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %66, i64 0, i32 1
  %68 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %68, i64 0, i32 1, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = add i32 %70, 1
  %72 = ptrtoint %"class.v8::internal::HeapEntry"* %56 to i64
  store i32 %71, i32* %69, align 4
  %73 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %68, i64 0, i32 4
  %74 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %74, i64 0, i32 5, i32 0, i32 0, i32 2
  %76 = bitcast %"class.v8::internal::HeapGraphEdge"*** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %74, i64 0, i32 5, i32 0, i32 0, i32 1
  %79 = bitcast %"class.v8::internal::HeapGraphEdge"*** %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = sub i64 %77, %80
  %82 = ashr exact i64 %81, 3
  %83 = icmp eq i64 %81, 0
  %84 = mul i64 %82, 170
  %85 = add i64 %84, -1
  %86 = select i1 %83, i64 0, i64 %85
  %87 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %74, i64 0, i32 5, i32 0, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %74, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, %88
  %92 = icmp eq i64 %86, %91
  %93 = inttoptr i64 %80 to %"class.v8::internal::HeapGraphEdge"**
  %94 = inttoptr i64 %77 to %"class.v8::internal::HeapGraphEdge"**
  br i1 %92, label %95, label %102

95:                                               ; preds = %65
  %96 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %74, i64 0, i32 5
  call void @_ZNSt3__15dequeIN2v88internal13HeapGraphEdgeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.758"* %96) #13
  %97 = load i64, i64* %89, align 8
  %98 = load i64, i64* %87, align 8
  %99 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %78, align 8
  %100 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %75, align 8
  %101 = add i64 %98, %97
  br label %102

102:                                              ; preds = %95, %65
  %103 = phi i64 [ %101, %95 ], [ %91, %65 ]
  %104 = phi %"class.v8::internal::HeapGraphEdge"** [ %100, %95 ], [ %94, %65 ]
  %105 = phi %"class.v8::internal::HeapGraphEdge"** [ %99, %95 ], [ %93, %65 ]
  %106 = icmp eq %"class.v8::internal::HeapGraphEdge"** %104, %105
  br i1 %106, label %113, label %107

107:                                              ; preds = %102
  %108 = udiv i64 %103, 170
  %109 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %105, i64 %108
  %110 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %109, align 8
  %111 = urem i64 %103, 170
  %112 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %110, i64 %111
  br label %113

113:                                              ; preds = %102, %107
  %114 = phi %"class.v8::internal::HeapGraphEdge"* [ %112, %107 ], [ null, %102 ]
  %115 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %114, i64 0, i32 0
  %116 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %68, i64 0, i32 0
  %117 = load i32, i32* %116, align 8
  %118 = lshr i32 %117, 4
  %119 = shl nuw nsw i32 %118, 3
  %120 = or i32 %119, 1
  store i32 %120, i32* %115, align 8
  %121 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %114, i64 0, i32 1
  %122 = bitcast %"class.v8::internal::HeapEntry"** %121 to i64*
  store i64 %72, i64* %122, align 8
  %123 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %114, i64 0, i32 2
  %124 = bitcast %union.anon.807* %123 to i32*
  store i32 %71, i32* %124, align 8
  %125 = load i64, i64* %89, align 8
  %126 = add i64 %125, 1
  store i64 %126, i64* %89, align 8
  br label %127

127:                                              ; preds = %113, %58
  %128 = load %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"** %47, align 8
  %129 = bitcast %"class.v8::EmbedderGraph::Node"* %128 to %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph::Node"*)***
  %130 = load %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph::Node"*)**, %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph::Node"*)*** %129, align 8
  %131 = getelementptr inbounds %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph::Node"*)*, %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph::Node"*)** %130, i64 4
  %132 = load %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph::Node"*)*, %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph::Node"*)** %131, align 8
  %133 = call %"class.v8::EmbedderGraph::Node"* %132(%"class.v8::EmbedderGraph::Node"* %128) #13
  %134 = icmp eq %"class.v8::EmbedderGraph::Node"* %133, null
  br i1 %134, label %142, label %135

135:                                              ; preds = %127
  %136 = load %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"** %47, align 8
  %137 = bitcast %"class.v8::EmbedderGraph::Node"* %136 to %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph::Node"*)***
  %138 = load %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph::Node"*)**, %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph::Node"*)*** %137, align 8
  %139 = getelementptr inbounds %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph::Node"*)*, %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph::Node"*)** %138, i64 4
  %140 = load %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph::Node"*)*, %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph::Node"*)** %139, align 8
  %141 = call %"class.v8::EmbedderGraph::Node"* %140(%"class.v8::EmbedderGraph::Node"* %136) #13
  call void @_ZN2v88internal21NativeObjectsExplorer18MergeNodeIntoEntryEPNS0_9HeapEntryEPNS_13EmbedderGraph4NodeES6_(%"class.v8::internal::NativeObjectsExplorer"* %0, %"class.v8::internal::HeapEntry"* nonnull %56, %"class.v8::EmbedderGraph::Node"* %136, %"class.v8::EmbedderGraph::Node"* %141)
  br label %142

142:                                              ; preds = %135, %54, %127, %45
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %46, i64 1
  %144 = icmp eq %"class.std::__1::unique_ptr.1511"* %143, %35
  br i1 %144, label %37, label %45

145:                                              ; preds = %316
  %146 = load %"struct.v8::internal::EmbedderGraphImpl::Edge"*, %"struct.v8::internal::EmbedderGraphImpl::Edge"** %38, align 8
  br label %147

147:                                              ; preds = %145, %37
  %148 = phi %"struct.v8::internal::EmbedderGraphImpl::Edge"* [ %146, %145 ], [ %39, %37 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2v88internal17EmbedderGraphImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %149 = icmp eq %"struct.v8::internal::EmbedderGraphImpl::Edge"* %148, null
  br i1 %149, label %154, label %150

150:                                              ; preds = %147
  %151 = ptrtoint %"struct.v8::internal::EmbedderGraphImpl::Edge"* %148 to i64
  %152 = bitcast %"struct.v8::internal::EmbedderGraphImpl::Edge"** %40 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.v8::internal::EmbedderGraphImpl::Edge"* %148 to i8*
  call void @_ZdlPv(i8* %153) #21
  br label %154

154:                                              ; preds = %150, %147
  %155 = load %"class.std::__1::unique_ptr.1511"*, %"class.std::__1::unique_ptr.1511"** %32, align 8
  %156 = icmp eq %"class.std::__1::unique_ptr.1511"* %155, null
  br i1 %156, label %179, label %157

157:                                              ; preds = %154
  %158 = bitcast %"class.std::__1::unique_ptr.1511"* %155 to i8*
  %159 = load %"class.std::__1::unique_ptr.1511"*, %"class.std::__1::unique_ptr.1511"** %34, align 8
  %160 = icmp eq %"class.std::__1::unique_ptr.1511"* %159, %155
  br i1 %160, label %177, label %161

161:                                              ; preds = %157, %172
  %162 = phi %"class.std::__1::unique_ptr.1511"* [ %163, %172 ], [ %159, %157 ]
  %163 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %162, i64 -1
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %163, i64 0, i32 0, i32 0, i32 0
  %165 = load %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"** %164, align 8
  store %"class.v8::EmbedderGraph::Node"* null, %"class.v8::EmbedderGraph::Node"** %164, align 8
  %166 = icmp eq %"class.v8::EmbedderGraph::Node"* %165, null
  br i1 %166, label %172, label %167

167:                                              ; preds = %161
  %168 = bitcast %"class.v8::EmbedderGraph::Node"* %165 to void (%"class.v8::EmbedderGraph::Node"*)***
  %169 = load void (%"class.v8::EmbedderGraph::Node"*)**, void (%"class.v8::EmbedderGraph::Node"*)*** %168, align 8
  %170 = getelementptr inbounds void (%"class.v8::EmbedderGraph::Node"*)*, void (%"class.v8::EmbedderGraph::Node"*)** %169, i64 1
  %171 = load void (%"class.v8::EmbedderGraph::Node"*)*, void (%"class.v8::EmbedderGraph::Node"*)** %170, align 8
  call void %171(%"class.v8::EmbedderGraph::Node"* nonnull %165) #13
  br label %172

172:                                              ; preds = %167, %161
  %173 = icmp eq %"class.std::__1::unique_ptr.1511"* %163, %155
  br i1 %173, label %174, label %161

174:                                              ; preds = %172
  %175 = bitcast %"class.std::__1::vector.1509"* %25 to i8**
  %176 = load i8*, i8** %175, align 8
  br label %177

177:                                              ; preds = %174, %157
  %178 = phi i8* [ %176, %174 ], [ %158, %157 ]
  store %"class.std::__1::unique_ptr.1511"* %155, %"class.std::__1::unique_ptr.1511"** %34, align 8
  call void @_ZdlPv(i8* %178) #21
  br label %179

179:                                              ; preds = %154, %177
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %23) #13
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #13
  br label %319

180:                                              ; preds = %43, %316
  %181 = phi %"struct.v8::internal::EmbedderGraphImpl::Edge"* [ %39, %43 ], [ %317, %316 ]
  %182 = getelementptr inbounds %"struct.v8::internal::EmbedderGraphImpl::Edge", %"struct.v8::internal::EmbedderGraphImpl::Edge"* %181, i64 0, i32 0
  %183 = load %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"** %182, align 8
  %184 = call %"class.v8::internal::HeapEntry"* @_ZN2v88internal21NativeObjectsExplorer25EntryForEmbedderGraphNodeEPNS_13EmbedderGraph4NodeE(%"class.v8::internal::NativeObjectsExplorer"* %0, %"class.v8::EmbedderGraph::Node"* %183)
  %185 = icmp eq %"class.v8::internal::HeapEntry"* %184, null
  br i1 %185, label %316, label %186

186:                                              ; preds = %180
  %187 = getelementptr inbounds %"struct.v8::internal::EmbedderGraphImpl::Edge", %"struct.v8::internal::EmbedderGraphImpl::Edge"* %181, i64 0, i32 1
  %188 = load %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"** %187, align 8
  %189 = call %"class.v8::internal::HeapEntry"* @_ZN2v88internal21NativeObjectsExplorer25EntryForEmbedderGraphNodeEPNS_13EmbedderGraph4NodeE(%"class.v8::internal::NativeObjectsExplorer"* %0, %"class.v8::EmbedderGraph::Node"* %188)
  %190 = icmp eq %"class.v8::internal::HeapEntry"* %189, null
  br i1 %190, label %316, label %191

191:                                              ; preds = %186
  %192 = getelementptr inbounds %"struct.v8::internal::EmbedderGraphImpl::Edge", %"struct.v8::internal::EmbedderGraphImpl::Edge"* %181, i64 0, i32 2
  %193 = load i8*, i8** %192, align 8
  %194 = icmp eq i8* %193, null
  br i1 %194, label %195, label %254

195:                                              ; preds = %191
  %196 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %184, i64 0, i32 1, i32 0
  %197 = load i32, i32* %196, align 4
  %198 = add i32 %197, 1
  %199 = ptrtoint %"class.v8::internal::HeapEntry"* %189 to i64
  store i32 %198, i32* %196, align 4
  %200 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %184, i64 0, i32 4
  %201 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %200, align 8
  %202 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %201, i64 0, i32 5, i32 0, i32 0, i32 2
  %203 = bitcast %"class.v8::internal::HeapGraphEdge"*** %202 to i64*
  %204 = load i64, i64* %203, align 8
  %205 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %201, i64 0, i32 5, i32 0, i32 0, i32 1
  %206 = bitcast %"class.v8::internal::HeapGraphEdge"*** %205 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = sub i64 %204, %207
  %209 = ashr exact i64 %208, 3
  %210 = icmp eq i64 %208, 0
  %211 = mul i64 %209, 170
  %212 = add i64 %211, -1
  %213 = select i1 %210, i64 0, i64 %212
  %214 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %201, i64 0, i32 5, i32 0, i32 1
  %215 = load i64, i64* %214, align 8
  %216 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %201, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %217 = load i64, i64* %216, align 8
  %218 = add i64 %217, %215
  %219 = icmp eq i64 %213, %218
  %220 = inttoptr i64 %207 to %"class.v8::internal::HeapGraphEdge"**
  %221 = inttoptr i64 %204 to %"class.v8::internal::HeapGraphEdge"**
  br i1 %219, label %222, label %229

222:                                              ; preds = %195
  %223 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %201, i64 0, i32 5
  call void @_ZNSt3__15dequeIN2v88internal13HeapGraphEdgeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.758"* %223) #13
  %224 = load i64, i64* %216, align 8
  %225 = load i64, i64* %214, align 8
  %226 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %205, align 8
  %227 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %202, align 8
  %228 = add i64 %225, %224
  br label %229

229:                                              ; preds = %222, %195
  %230 = phi i64 [ %228, %222 ], [ %218, %195 ]
  %231 = phi %"class.v8::internal::HeapGraphEdge"** [ %227, %222 ], [ %221, %195 ]
  %232 = phi %"class.v8::internal::HeapGraphEdge"** [ %226, %222 ], [ %220, %195 ]
  %233 = icmp eq %"class.v8::internal::HeapGraphEdge"** %231, %232
  br i1 %233, label %240, label %234

234:                                              ; preds = %229
  %235 = udiv i64 %230, 170
  %236 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %232, i64 %235
  %237 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %236, align 8
  %238 = urem i64 %230, 170
  %239 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %237, i64 %238
  br label %240

240:                                              ; preds = %229, %234
  %241 = phi %"class.v8::internal::HeapGraphEdge"* [ %239, %234 ], [ null, %229 ]
  %242 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %241, i64 0, i32 0
  %243 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %184, i64 0, i32 0
  %244 = load i32, i32* %243, align 8
  %245 = lshr i32 %244, 4
  %246 = shl nuw nsw i32 %245, 3
  %247 = or i32 %246, 1
  store i32 %247, i32* %242, align 8
  %248 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %241, i64 0, i32 1
  %249 = bitcast %"class.v8::internal::HeapEntry"** %248 to i64*
  store i64 %199, i64* %249, align 8
  %250 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %241, i64 0, i32 2
  %251 = bitcast %union.anon.807* %250 to i32*
  store i32 %198, i32* %251, align 8
  %252 = load i64, i64* %216, align 8
  %253 = add i64 %252, 1
  store i64 %253, i64* %216, align 8
  br label %316

254:                                              ; preds = %191
  %255 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %44, align 8
  %256 = call i8* @_ZN2v88internal14StringsStorage7GetCopyEPKc(%"class.v8::internal::StringsStorage"* %255, i8* nonnull %193) #13
  %257 = ptrtoint i8* %256 to i64
  %258 = ptrtoint %"class.v8::internal::HeapEntry"* %189 to i64
  %259 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %184, i64 0, i32 1, i32 0
  %260 = load i32, i32* %259, align 4
  %261 = add i32 %260, 1
  store i32 %261, i32* %259, align 4
  %262 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %184, i64 0, i32 4
  %263 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %262, align 8
  %264 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %263, i64 0, i32 5, i32 0, i32 0, i32 2
  %265 = bitcast %"class.v8::internal::HeapGraphEdge"*** %264 to i64*
  %266 = load i64, i64* %265, align 8
  %267 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %263, i64 0, i32 5, i32 0, i32 0, i32 1
  %268 = bitcast %"class.v8::internal::HeapGraphEdge"*** %267 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = sub i64 %266, %269
  %271 = ashr exact i64 %270, 3
  %272 = icmp eq i64 %270, 0
  %273 = mul i64 %271, 170
  %274 = add i64 %273, -1
  %275 = select i1 %272, i64 0, i64 %274
  %276 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %263, i64 0, i32 5, i32 0, i32 1
  %277 = load i64, i64* %276, align 8
  %278 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %263, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %279 = load i64, i64* %278, align 8
  %280 = add i64 %279, %277
  %281 = icmp eq i64 %275, %280
  %282 = inttoptr i64 %269 to %"class.v8::internal::HeapGraphEdge"**
  %283 = inttoptr i64 %266 to %"class.v8::internal::HeapGraphEdge"**
  br i1 %281, label %284, label %291

284:                                              ; preds = %254
  %285 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %263, i64 0, i32 5
  call void @_ZNSt3__15dequeIN2v88internal13HeapGraphEdgeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.758"* %285) #13
  %286 = load i64, i64* %278, align 8
  %287 = load i64, i64* %276, align 8
  %288 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %267, align 8
  %289 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %264, align 8
  %290 = add i64 %287, %286
  br label %291

291:                                              ; preds = %284, %254
  %292 = phi i64 [ %290, %284 ], [ %280, %254 ]
  %293 = phi %"class.v8::internal::HeapGraphEdge"** [ %289, %284 ], [ %283, %254 ]
  %294 = phi %"class.v8::internal::HeapGraphEdge"** [ %288, %284 ], [ %282, %254 ]
  %295 = icmp eq %"class.v8::internal::HeapGraphEdge"** %293, %294
  br i1 %295, label %302, label %296

296:                                              ; preds = %291
  %297 = udiv i64 %292, 170
  %298 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %294, i64 %297
  %299 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %298, align 8
  %300 = urem i64 %292, 170
  %301 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %299, i64 %300
  br label %302

302:                                              ; preds = %291, %296
  %303 = phi %"class.v8::internal::HeapGraphEdge"* [ %301, %296 ], [ null, %291 ]
  %304 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %303, i64 0, i32 0
  %305 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %184, i64 0, i32 0
  %306 = load i32, i32* %305, align 8
  %307 = lshr i32 %306, 4
  %308 = shl nuw nsw i32 %307, 3
  %309 = or i32 %308, 3
  store i32 %309, i32* %304, align 8
  %310 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %303, i64 0, i32 1
  %311 = bitcast %"class.v8::internal::HeapEntry"** %310 to i64*
  store i64 %258, i64* %311, align 8
  %312 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %303, i64 0, i32 2, i32 0
  %313 = bitcast i8** %312 to i64*
  store i64 %257, i64* %313, align 8
  %314 = load i64, i64* %278, align 8
  %315 = add i64 %314, 1
  store i64 %315, i64* %278, align 8
  br label %316

316:                                              ; preds = %186, %302, %240, %180
  %317 = getelementptr inbounds %"struct.v8::internal::EmbedderGraphImpl::Edge", %"struct.v8::internal::EmbedderGraphImpl::Edge"* %181, i64 1
  %318 = icmp eq %"struct.v8::internal::EmbedderGraphImpl::Edge"* %317, %41
  br i1 %318, label %145, label %180

319:                                              ; preds = %8, %2, %179
  store %"class.v8::internal::HeapSnapshotGenerator"* null, %"class.v8::internal::HeapSnapshotGenerator"** %5, align 8
  ret i1 true
}

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #4

declare void @_ZN2v88internal12HeapProfiler18BuildEmbedderGraphEPNS0_7IsolateEPNS_13EmbedderGraphE(%"class.v8::internal::HeapProfiler"*, %"class.v8::internal::Isolate"*, %"class.v8::EmbedderGraph"*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal17EmbedderGraphImplD2Ev(%"class.v8::internal::EmbedderGraphImpl"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::EmbedderGraphImpl", %"class.v8::internal::EmbedderGraphImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2v88internal17EmbedderGraphImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::EmbedderGraphImpl", %"class.v8::internal::EmbedderGraphImpl"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"struct.v8::internal::EmbedderGraphImpl::Edge"*, %"struct.v8::internal::EmbedderGraphImpl::Edge"** %3, align 8
  %5 = icmp eq %"struct.v8::internal::EmbedderGraphImpl::Edge"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.v8::internal::EmbedderGraphImpl::Edge"* %4 to i64
  %8 = getelementptr inbounds %"class.v8::internal::EmbedderGraphImpl", %"class.v8::internal::EmbedderGraphImpl"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %"struct.v8::internal::EmbedderGraphImpl::Edge"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.v8::internal::EmbedderGraphImpl::Edge"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #21
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.v8::internal::EmbedderGraphImpl", %"class.v8::internal::EmbedderGraphImpl"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.1509", %"class.std::__1::vector.1509"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.std::__1::unique_ptr.1511"*, %"class.std::__1::unique_ptr.1511"** %13, align 8
  %15 = icmp eq %"class.std::__1::unique_ptr.1511"* %14, null
  br i1 %15, label %39, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.std::__1::unique_ptr.1511"* %14 to i8*
  %18 = getelementptr inbounds %"class.v8::internal::EmbedderGraphImpl", %"class.v8::internal::EmbedderGraphImpl"* %0, i64 0, i32 1, i32 0, i32 1
  %19 = load %"class.std::__1::unique_ptr.1511"*, %"class.std::__1::unique_ptr.1511"** %18, align 8
  %20 = icmp eq %"class.std::__1::unique_ptr.1511"* %19, %14
  br i1 %20, label %37, label %21

21:                                               ; preds = %16, %32
  %22 = phi %"class.std::__1::unique_ptr.1511"* [ %23, %32 ], [ %19, %16 ]
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %22, i64 -1
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"** %24, align 8
  store %"class.v8::EmbedderGraph::Node"* null, %"class.v8::EmbedderGraph::Node"** %24, align 8
  %26 = icmp eq %"class.v8::EmbedderGraph::Node"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.v8::EmbedderGraph::Node"* %25 to void (%"class.v8::EmbedderGraph::Node"*)***
  %29 = load void (%"class.v8::EmbedderGraph::Node"*)**, void (%"class.v8::EmbedderGraph::Node"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.v8::EmbedderGraph::Node"*)*, void (%"class.v8::EmbedderGraph::Node"*)** %29, i64 1
  %31 = load void (%"class.v8::EmbedderGraph::Node"*)*, void (%"class.v8::EmbedderGraph::Node"*)** %30, align 8
  tail call void %31(%"class.v8::EmbedderGraph::Node"* nonnull %25) #13
  br label %32

32:                                               ; preds = %27, %21
  %33 = icmp eq %"class.std::__1::unique_ptr.1511"* %23, %14
  br i1 %33, label %34, label %21

34:                                               ; preds = %32
  %35 = bitcast %"class.std::__1::vector.1509"* %12 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %16
  %38 = phi i8* [ %36, %34 ], [ %17, %16 ]
  store %"class.std::__1::unique_ptr.1511"* %14, %"class.std::__1::unique_ptr.1511"** %18, align 8
  tail call void @_ZdlPv(i8* %38) #21
  br label %39

39:                                               ; preds = %11, %37
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal21HeapSnapshotGeneratorC2EPNS0_12HeapSnapshotEPNS_15ActivityControlEPNS_12HeapProfiler18ObjectNameResolverEPNS0_4HeapE(%"class.v8::internal::HeapSnapshotGenerator"*, %"class.v8::internal::HeapSnapshot"*, %"class.v8::ActivityControl"*, %"class.v8::HeapProfiler::ObjectNameResolver"*, %"class.v8::internal::Heap"*) unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal21HeapSnapshotGeneratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 1
  store %"class.v8::internal::HeapSnapshot"* %1, %"class.v8::internal::HeapSnapshot"** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 2
  store %"class.v8::ActivityControl"* %2, %"class.v8::ActivityControl"** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 3, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal14V8HeapExplorerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 3, i32 1
  %12 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %1, i64 0, i32 0
  %13 = load %"class.v8::internal::HeapProfiler"*, %"class.v8::internal::HeapProfiler"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::HeapProfiler", %"class.v8::internal::HeapProfiler"* %13, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.v8::internal::HeapObjectsMap"*, %"class.v8::internal::HeapObjectsMap"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %15, i64 0, i32 5
  %17 = bitcast %"class.v8::internal::Heap"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.v8::internal::Heap"** %11 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 3, i32 2
  store %"class.v8::internal::HeapSnapshot"* %1, %"class.v8::internal::HeapSnapshot"** %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 3, i32 3
  %22 = load %"class.v8::internal::HeapProfiler"*, %"class.v8::internal::HeapProfiler"** %12, align 8
  %23 = getelementptr inbounds %"class.v8::internal::HeapProfiler", %"class.v8::internal::HeapProfiler"* %22, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = bitcast %"class.v8::internal::StringsStorage"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.v8::internal::StringsStorage"** %21 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 3, i32 4
  %28 = load %"class.v8::internal::HeapProfiler"*, %"class.v8::internal::HeapProfiler"** %12, align 8
  %29 = getelementptr inbounds %"class.v8::internal::HeapProfiler", %"class.v8::internal::HeapProfiler"* %28, i64 0, i32 1, i32 0, i32 0, i32 0
  %30 = bitcast %"class.v8::internal::HeapObjectsMap"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.v8::internal::HeapObjectsMap"** %27 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 3, i32 5
  store %"class.v8::internal::SnapshottingProgressReportingInterface"* %6, %"class.v8::internal::SnapshottingProgressReportingInterface"** %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 3, i32 6
  %35 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 3, i32 8, i32 0, i32 3
  %36 = bitcast %"class.std::__1::__compressed_pair.1357"* %35 to i32*
  %37 = bitcast %"class.v8::internal::HeapSnapshotGenerator"** %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 64, i1 false) #13
  store i32 1065353216, i32* %36, align 4
  %38 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 3, i32 9
  %39 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 3, i32 9, i32 0, i32 3
  %40 = bitcast %"class.std::__1::__compressed_pair.1383"* %39 to i32*
  %41 = bitcast %"class.std::__1::unordered_map.1363"* %38 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %40, align 4
  %42 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 3, i32 10
  %43 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 3, i32 10, i32 0, i32 3
  %44 = bitcast %"class.std::__1::__compressed_pair.1408"* %43 to i32*
  %45 = bitcast %"class.std::__1::unordered_set.1389"* %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %44, align 4
  %46 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 3, i32 11
  store %"class.v8::HeapProfiler::ObjectNameResolver"* %3, %"class.v8::HeapProfiler::ObjectNameResolver"** %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 3, i32 12
  %48 = bitcast %"class.std::__1::vector.1411"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #13
  %49 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 4, i32 0
  %50 = load %"class.v8::internal::HeapProfiler"*, %"class.v8::internal::HeapProfiler"** %12, align 8
  %51 = getelementptr inbounds %"class.v8::internal::HeapProfiler", %"class.v8::internal::HeapProfiler"* %50, i64 0, i32 1, i32 0, i32 0, i32 0
  %52 = load %"class.v8::internal::HeapObjectsMap"*, %"class.v8::internal::HeapObjectsMap"** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %52, i64 0, i32 5
  %54 = bitcast %"class.v8::internal::Heap"** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, -41416
  %57 = inttoptr i64 %56 to %"class.v8::internal::Isolate"*
  store %"class.v8::internal::Isolate"* %57, %"class.v8::internal::Isolate"** %49, align 8
  %58 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 4, i32 1
  store %"class.v8::internal::HeapSnapshot"* %1, %"class.v8::internal::HeapSnapshot"** %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 4, i32 2
  %60 = load %"class.v8::internal::HeapProfiler"*, %"class.v8::internal::HeapProfiler"** %12, align 8
  %61 = getelementptr inbounds %"class.v8::internal::HeapProfiler", %"class.v8::internal::HeapProfiler"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %62 = bitcast %"class.v8::internal::StringsStorage"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.v8::internal::StringsStorage"** %59 to i64*
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 4, i32 3
  %66 = load %"class.v8::internal::HeapProfiler"*, %"class.v8::internal::HeapProfiler"** %12, align 8
  %67 = getelementptr inbounds %"class.v8::internal::HeapProfiler", %"class.v8::internal::HeapProfiler"* %66, i64 0, i32 1, i32 0, i32 0, i32 0
  %68 = bitcast %"class.v8::internal::HeapObjectsMap"** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.v8::internal::HeapObjectsMap"** %65 to i64*
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 4, i32 4
  %72 = tail call i8* @_Znwm(i64 32) #21
  %73 = bitcast i8* %72 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal29EmbedderGraphEntriesAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %73, align 8
  %74 = getelementptr inbounds i8, i8* %72, i64 8
  %75 = bitcast i8* %74 to %"class.v8::internal::HeapSnapshot"**
  store %"class.v8::internal::HeapSnapshot"* %1, %"class.v8::internal::HeapSnapshot"** %75, align 8
  %76 = getelementptr inbounds i8, i8* %72, i64 16
  %77 = load %"class.v8::internal::HeapProfiler"*, %"class.v8::internal::HeapProfiler"** %12, align 8
  %78 = getelementptr inbounds %"class.v8::internal::HeapProfiler", %"class.v8::internal::HeapProfiler"* %77, i64 0, i32 3, i32 0, i32 0, i32 0
  %79 = bitcast %"class.v8::internal::StringsStorage"** %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast i8* %76 to i64*
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds i8, i8* %72, i64 24
  %83 = getelementptr inbounds %"class.v8::internal::HeapProfiler", %"class.v8::internal::HeapProfiler"* %77, i64 0, i32 1, i32 0, i32 0, i32 0
  %84 = bitcast %"class.v8::internal::HeapObjectsMap"** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast i8* %82 to i64*
  store i64 %85, i64* %86, align 8
  %87 = ptrtoint i8* %72 to i64
  %88 = bitcast %"class.std::__1::unique_ptr.1413"* %71 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 4, i32 5
  %90 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 5, i32 0, i32 3
  %91 = bitcast %"class.std::__1::__compressed_pair.1439"* %90 to i32*
  %92 = bitcast %"class.v8::internal::HeapSnapshotGenerator"** %89 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 40, i1 false)
  store i32 1065353216, i32* %91, align 4
  %93 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 6
  %94 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 6, i32 0, i32 3
  %95 = bitcast %"class.std::__1::__compressed_pair.1463"* %94 to i32*
  %96 = bitcast %"class.std::__1::unordered_map.1443"* %93 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %95, align 4
  %97 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 9
  store %"class.v8::internal::Heap"* %4, %"class.v8::internal::Heap"** %97, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal21HeapSnapshotGenerator16GenerateSnapshotEv(%"class.v8::internal::HeapSnapshotGenerator"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.v8::internal::CombinedHeapObjectIterator", align 8
  %3 = alloca %"class.v8::internal::JSGlobalObject", align 8
  %4 = alloca %"class.v8::internal::SafepointScope", align 8
  %5 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 9
  %6 = bitcast %"class.v8::internal::Heap"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -41416
  %9 = inttoptr i64 %8 to %"class.v8::internal::Isolate"*
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31
  %11 = bitcast %"struct.v8::internal::HandleScopeData"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 8
  %18 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 3
  tail call void @_ZN2v88internal14V8HeapExplorer24CollectGlobalObjectsTagsEv(%"class.v8::internal::V8HeapExplorer"* %18)
  %19 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %5, align 8
  tail call void @_ZN2v88internal4Heap26CollectAllAvailableGarbageENS0_23GarbageCollectionReasonE(%"class.v8::internal::Heap"* %19, i32 11) #13
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  store i64 0, i64* %20, align 8
  %22 = bitcast %"class.v8::internal::SafepointScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  %23 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %5, align 8
  call void @_ZN2v88internal14SafepointScopeC1EPNS0_4HeapE(%"class.v8::internal::SafepointScope"* nonnull %4, %"class.v8::internal::Heap"* %23) #13
  %24 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 3, i32 7, i32 0, i32 0
  %25 = load %"struct.std::__1::pair.1330"*, %"struct.std::__1::pair.1330"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 3, i32 7, i32 0, i32 1
  %27 = load %"struct.std::__1::pair.1330"*, %"struct.std::__1::pair.1330"** %26, align 8
  %28 = icmp eq %"struct.std::__1::pair.1330"* %25, %27
  br i1 %28, label %42, label %29

29:                                               ; preds = %1
  %30 = bitcast %"class.v8::internal::JSGlobalObject"* %3 to i8*
  %31 = getelementptr inbounds %"class.v8::internal::JSGlobalObject", %"class.v8::internal::JSGlobalObject"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 3, i32 8, i32 0
  br label %33

33:                                               ; preds = %33, %29
  %34 = phi %"struct.std::__1::pair.1330"* [ %25, %29 ], [ %40, %33 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #13
  %35 = getelementptr inbounds %"struct.std::__1::pair.1330", %"struct.std::__1::pair.1330"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load i64*, i64** %35, align 8
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %31, align 8
  %38 = getelementptr inbounds %"struct.std::__1::pair.1330", %"struct.std::__1::pair.1330"* %34, i64 0, i32 1
  %39 = call { %"struct.std::__1::__hash_node_base.1342"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14JSGlobalObjectEPKcEENS_22__unordered_map_hasherIS4_S7_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS4_JS4_RKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1338"* %32, %"class.v8::internal::JSGlobalObject"* nonnull dereferenceable(8) %3, %"class.v8::internal::JSGlobalObject"* nonnull dereferenceable(8) %3, i8** dereferenceable(8) %38) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #13
  %40 = getelementptr inbounds %"struct.std::__1::pair.1330", %"struct.std::__1::pair.1330"* %34, i64 1
  %41 = icmp eq %"struct.std::__1::pair.1330"* %40, %27
  br i1 %41, label %42, label %33

42:                                               ; preds = %33, %1
  %43 = icmp eq i64 %8, 0
  br i1 %43, label %57, label %44

44:                                               ; preds = %42
  %45 = inttoptr i64 %12 to i64*
  %46 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %10, i64 0, i32 0
  %47 = load i64*, i64** %46, align 8
  store i64 %12, i64* %11, align 8
  %48 = load i32, i32* %15, align 8
  %49 = add nsw i32 %48, -1
  store i32 %49, i32* %15, align 8
  %50 = load i64*, i64** %13, align 8
  %51 = icmp eq i64* %50, %14
  br i1 %51, label %54, label %52

52:                                               ; preds = %44
  store i64* %14, i64** %13, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %9) #13
  %53 = load i64*, i64** %46, align 8
  br label %54

54:                                               ; preds = %52, %44
  %55 = phi i64* [ %53, %52 ], [ %45, %44 ]
  %56 = phi i64* [ %14, %52 ], [ %47, %44 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %55, i64* %56) #13
  br label %57

57:                                               ; preds = %42, %54
  %58 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 2
  %59 = load %"class.v8::ActivityControl"*, %"class.v8::ActivityControl"** %58, align 8
  %60 = icmp eq %"class.v8::ActivityControl"* %59, null
  br i1 %60, label %76, label %61

61:                                               ; preds = %57
  %62 = bitcast %"class.v8::internal::CombinedHeapObjectIterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %62) #13
  %63 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 3, i32 1
  %64 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %63, align 8
  call void @_ZN2v88internal26CombinedHeapObjectIteratorC1EPNS0_4HeapENS0_18HeapObjectIterator20HeapObjectsFilteringE(%"class.v8::internal::CombinedHeapObjectIterator"* nonnull %2, %"class.v8::internal::Heap"* %64, i32 1) #13
  br label %65

65:                                               ; preds = %65, %61
  %66 = phi i32 [ 0, %61 ], [ %70, %65 ]
  %67 = call i64 @_ZN2v88internal26CombinedHeapObjectIterator4NextEv(%"class.v8::internal::CombinedHeapObjectIterator"* nonnull %2) #13
  %68 = trunc i64 %67 to i32
  %69 = icmp eq i32 %68, 0
  %70 = add nuw nsw i32 %66, 1
  br i1 %69, label %71, label %65

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.v8::internal::CombinedHeapObjectIterator", %"class.v8::internal::CombinedHeapObjectIterator"* %2, i64 0, i32 1
  call void @_ZN2v88internal18HeapObjectIteratorD1Ev(%"class.v8::internal::HeapObjectIterator"* %72) #13
  %73 = getelementptr inbounds %"class.v8::internal::CombinedHeapObjectIterator", %"class.v8::internal::CombinedHeapObjectIterator"* %2, i64 0, i32 0
  call void @_ZN2v88internal14SafepointScopeD1Ev(%"class.v8::internal::SafepointScope"* nonnull %73) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %62) #13
  %74 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 8
  store i32 %70, i32* %74, align 4
  %75 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 7
  store i32 0, i32* %75, align 8
  br label %76

76:                                               ; preds = %57, %71
  %77 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 1
  %78 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %77, align 8
  call void @_ZN2v88internal12HeapSnapshot23AddSyntheticRootEntriesEv(%"class.v8::internal::HeapSnapshot"* %78)
  %79 = call zeroext i1 @_ZN2v88internal14V8HeapExplorer27IterateAndExtractReferencesEPNS0_21HeapSnapshotGeneratorE(%"class.v8::internal::V8HeapExplorer"* %18, %"class.v8::internal::HeapSnapshotGenerator"* %0) #13
  br i1 %79, label %80, label %101

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 4
  %82 = call zeroext i1 @_ZN2v88internal21NativeObjectsExplorer27IterateAndExtractReferencesEPNS0_21HeapSnapshotGeneratorE(%"class.v8::internal::NativeObjectsExplorer"* %81, %"class.v8::internal::HeapSnapshotGenerator"* %0) #13
  %83 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %77, align 8
  call void @_ZN2v88internal12HeapSnapshot12FillChildrenEv(%"class.v8::internal::HeapSnapshot"* %83)
  %84 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %77, align 8
  %85 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %84, i64 0, i32 0
  %86 = load %"class.v8::internal::HeapProfiler"*, %"class.v8::internal::HeapProfiler"** %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::HeapProfiler", %"class.v8::internal::HeapProfiler"* %86, i64 0, i32 1, i32 0, i32 0, i32 0
  %88 = load %"class.v8::internal::HeapObjectsMap"*, %"class.v8::internal::HeapObjectsMap"** %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %88, i64 0, i32 0
  %90 = load i32, i32* %89, align 8
  %91 = add i32 %90, -2
  %92 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %84, i64 0, i32 9
  store i32 %91, i32* %92, align 8
  %93 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 8
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 7
  store i32 %94, i32* %95, align 8
  %96 = bitcast %"class.v8::internal::HeapSnapshotGenerator"* %0 to i1 (%"class.v8::internal::HeapSnapshotGenerator"*, i1)***
  %97 = load i1 (%"class.v8::internal::HeapSnapshotGenerator"*, i1)**, i1 (%"class.v8::internal::HeapSnapshotGenerator"*, i1)*** %96, align 8
  %98 = getelementptr inbounds i1 (%"class.v8::internal::HeapSnapshotGenerator"*, i1)*, i1 (%"class.v8::internal::HeapSnapshotGenerator"*, i1)** %97, i64 3
  %99 = load i1 (%"class.v8::internal::HeapSnapshotGenerator"*, i1)*, i1 (%"class.v8::internal::HeapSnapshotGenerator"*, i1)** %98, align 8
  %100 = call zeroext i1 %99(%"class.v8::internal::HeapSnapshotGenerator"* %0, i1 zeroext true) #13
  br label %101

101:                                              ; preds = %80, %76
  %102 = phi i1 [ %100, %80 ], [ false, %76 ]
  call void @_ZN2v88internal14SafepointScopeD1Ev(%"class.v8::internal::SafepointScope"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  store i64 %21, i64* %20, align 8
  ret i1 %102
}

declare void @_ZN2v88internal4Heap26CollectAllAvailableGarbageENS0_23GarbageCollectionReasonE(%"class.v8::internal::Heap"*, i32) local_unnamed_addr #4

declare void @_ZN2v88internal14SafepointScopeC1EPNS0_4HeapE(%"class.v8::internal::SafepointScope"*, %"class.v8::internal::Heap"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal21HeapSnapshotGenerator19InitProgressCounterEv(%"class.v8::internal::HeapSnapshotGenerator"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.v8::internal::CombinedHeapObjectIterator", align 8
  %3 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 2
  %4 = load %"class.v8::ActivityControl"*, %"class.v8::ActivityControl"** %3, align 8
  %5 = icmp eq %"class.v8::ActivityControl"* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.v8::internal::CombinedHeapObjectIterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 3, i32 1
  %9 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %8, align 8
  call void @_ZN2v88internal26CombinedHeapObjectIteratorC1EPNS0_4HeapENS0_18HeapObjectIterator20HeapObjectsFilteringE(%"class.v8::internal::CombinedHeapObjectIterator"* nonnull %2, %"class.v8::internal::Heap"* %9, i32 1) #13
  br label %10

10:                                               ; preds = %10, %6
  %11 = phi i32 [ 0, %6 ], [ %15, %10 ]
  %12 = call i64 @_ZN2v88internal26CombinedHeapObjectIterator4NextEv(%"class.v8::internal::CombinedHeapObjectIterator"* nonnull %2) #13
  %13 = trunc i64 %12 to i32
  %14 = icmp eq i32 %13, 0
  %15 = add nuw nsw i32 %11, 1
  br i1 %14, label %16, label %10

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.v8::internal::CombinedHeapObjectIterator", %"class.v8::internal::CombinedHeapObjectIterator"* %2, i64 0, i32 1
  call void @_ZN2v88internal18HeapObjectIteratorD1Ev(%"class.v8::internal::HeapObjectIterator"* %17) #13
  %18 = getelementptr inbounds %"class.v8::internal::CombinedHeapObjectIterator", %"class.v8::internal::CombinedHeapObjectIterator"* %2, i64 0, i32 0
  call void @_ZN2v88internal14SafepointScopeD1Ev(%"class.v8::internal::SafepointScope"* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7) #13
  %19 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 8
  store i32 %15, i32* %19, align 4
  %20 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 7
  store i32 0, i32* %20, align 8
  br label %21

21:                                               ; preds = %1, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal21HeapSnapshotGenerator14FillReferencesEv(%"class.v8::internal::HeapSnapshotGenerator"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 3
  %3 = tail call zeroext i1 @_ZN2v88internal14V8HeapExplorer27IterateAndExtractReferencesEPNS0_21HeapSnapshotGeneratorE(%"class.v8::internal::V8HeapExplorer"* %2, %"class.v8::internal::HeapSnapshotGenerator"* %0)
  br i1 %3, label %4, label %7

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 4
  %6 = tail call zeroext i1 @_ZN2v88internal21NativeObjectsExplorer27IterateAndExtractReferencesEPNS0_21HeapSnapshotGeneratorE(%"class.v8::internal::NativeObjectsExplorer"* %5, %"class.v8::internal::HeapSnapshotGenerator"* %0)
  br label %7

7:                                                ; preds = %4, %1
  %8 = phi i1 [ false, %1 ], [ true, %4 ]
  ret i1 %8
}

; Function Attrs: nounwind
declare void @_ZN2v88internal14SafepointScopeD1Ev(%"class.v8::internal::SafepointScope"*) unnamed_addr #11

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal21HeapSnapshotGenerator12ProgressStepEv(%"class.v8::internal::HeapSnapshotGenerator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal21HeapSnapshotGenerator14ProgressReportEb(%"class.v8::internal::HeapSnapshotGenerator"* nocapture readonly, i1 zeroext) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 2
  %4 = load %"class.v8::ActivityControl"*, %"class.v8::ActivityControl"** %3, align 8
  %5 = icmp eq %"class.v8::ActivityControl"* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 7
  %8 = load i32, i32* %7, align 8
  %9 = srem i32 %8, 10000
  %10 = icmp eq i32 %9, 0
  %11 = or i1 %10, %1
  br i1 %11, label %12, label %21

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 8
  %14 = load i32, i32* %13, align 4
  %15 = bitcast %"class.v8::ActivityControl"* %4 to i32 (%"class.v8::ActivityControl"*, i32, i32)***
  %16 = load i32 (%"class.v8::ActivityControl"*, i32, i32)**, i32 (%"class.v8::ActivityControl"*, i32, i32)*** %15, align 8
  %17 = getelementptr inbounds i32 (%"class.v8::ActivityControl"*, i32, i32)*, i32 (%"class.v8::ActivityControl"*, i32, i32)** %16, i64 2
  %18 = load i32 (%"class.v8::ActivityControl"*, i32, i32)*, i32 (%"class.v8::ActivityControl"*, i32, i32)** %17, align 8
  %19 = tail call i32 %18(%"class.v8::ActivityControl"* nonnull %4, i32 %8, i32 %14) #13
  %20 = icmp eq i32 %19, 0
  br label %21

21:                                               ; preds = %6, %2, %12
  %22 = phi i1 [ %20, %12 ], [ true, %2 ], [ true, %6 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26HeapSnapshotJSONSerializer9SerializeEPNS_12OutputStreamE(%"class.v8::internal::HeapSnapshotJSONSerializer"*, %"class.v8::OutputStream"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %4, i64 0, i32 0
  %6 = load %"class.v8::internal::HeapProfiler"*, %"class.v8::internal::HeapProfiler"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::HeapProfiler", %"class.v8::internal::HeapProfiler"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %8 = load %"class.v8::internal::AllocationTracker"*, %"class.v8::internal::AllocationTracker"** %7, align 8
  %9 = icmp eq %"class.v8::internal::AllocationTracker"* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %2
  tail call void @_ZN2v88internal17AllocationTracker23PrepareForSerializationEv(%"class.v8::internal::AllocationTracker"* nonnull %8) #13
  br label %11

11:                                               ; preds = %2, %10
  %12 = tail call i8* @_Znwm(i64 40) #21
  %13 = bitcast i8* %12 to %"class.v8::OutputStream"**
  store %"class.v8::OutputStream"* %1, %"class.v8::OutputStream"** %13, align 8
  %14 = getelementptr inbounds i8, i8* %12, i64 8
  %15 = bitcast i8* %14 to i32*
  %16 = bitcast %"class.v8::OutputStream"* %1 to i32 (%"class.v8::OutputStream"*)***
  %17 = load i32 (%"class.v8::OutputStream"*)**, i32 (%"class.v8::OutputStream"*)*** %16, align 8
  %18 = getelementptr inbounds i32 (%"class.v8::OutputStream"*)*, i32 (%"class.v8::OutputStream"*)** %17, i64 3
  %19 = load i32 (%"class.v8::OutputStream"*)*, i32 (%"class.v8::OutputStream"*)** %18, align 8
  %20 = tail call i32 %19(%"class.v8::OutputStream"* %1) #13
  store i32 %20, i32* %15, align 8
  %21 = sext i32 %20 to i64
  %22 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %21, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %33

24:                                               ; preds = %11
  %25 = tail call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #13
  %26 = bitcast %"class.v8::Platform"* %25 to void (%"class.v8::Platform"*)***
  %27 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %27, i64 3
  %29 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %28, align 8
  tail call void %29(%"class.v8::Platform"* %25) #13
  %30 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %21, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %33

32:                                               ; preds = %24
  tail call void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.645, i64 0, i64 0)) #20
  unreachable

33:                                               ; preds = %11, %24
  %34 = phi i8* [ %30, %24 ], [ %22, %11 ]
  %35 = getelementptr inbounds i8, i8* %12, i64 16
  %36 = bitcast i8* %35 to i8**
  store i8* %34, i8** %36, align 8
  %37 = getelementptr inbounds i8, i8* %12, i64 24
  %38 = bitcast i8* %37 to i64*
  store i64 %21, i64* %38, align 8
  %39 = getelementptr inbounds i8, i8* %12, i64 32
  %40 = bitcast i8* %39 to i32*
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds i8, i8* %12, i64 36
  store i8 0, i8* %41, align 4
  %42 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 4
  %43 = bitcast %"class.v8::internal::OutputStreamWriter"** %42 to i8**
  store i8* %12, i8** %43, align 8
  tail call void @_ZN2v88internal26HeapSnapshotJSONSerializer13SerializeImplEv(%"class.v8::internal::HeapSnapshotJSONSerializer"* %0)
  %44 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %42, align 8
  %45 = icmp eq %"class.v8::internal::OutputStreamWriter"* %44, null
  br i1 %45, label %53, label %46

46:                                               ; preds = %33
  %47 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %44, i64 0, i32 3, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %51, label %50

50:                                               ; preds = %46
  tail call void @_ZdaPv(i8* nonnull %48) #21
  br label %51

51:                                               ; preds = %46, %50
  %52 = bitcast %"class.v8::internal::OutputStreamWriter"* %44 to i8*
  tail call void @_ZdlPv(i8* %52) #21
  br label %53

53:                                               ; preds = %51, %33
  store %"class.v8::internal::OutputStreamWriter"* null, %"class.v8::internal::OutputStreamWriter"** %42, align 8
  ret void
}

declare void @_ZN2v88internal17AllocationTracker23PrepareForSerializationEv(%"class.v8::internal::AllocationTracker"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26HeapSnapshotJSONSerializer13SerializeImplEv(%"class.v8::internal::HeapSnapshotJSONSerializer"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 4
  %3 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %3, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = add nsw i32 %5, 1
  store i32 %6, i32* %4, align 8
  %7 = sext i32 %5 to i64
  %8 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %3, i64 0, i32 3, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 %7
  store i8 123, i8* %10, align 1
  %11 = load i32, i32* %4, align 8
  %12 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %3, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %15, label %31

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %3, i64 0, i32 5
  %17 = load i8, i8* %16, align 4, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %3, i64 0, i32 0
  %21 = load %"class.v8::OutputStream"*, %"class.v8::OutputStream"** %20, align 8
  %22 = load i8*, i8** %8, align 8
  %23 = bitcast %"class.v8::OutputStream"* %21 to i32 (%"class.v8::OutputStream"*, i8*, i32)***
  %24 = load i32 (%"class.v8::OutputStream"*, i8*, i32)**, i32 (%"class.v8::OutputStream"*, i8*, i32)*** %23, align 8
  %25 = getelementptr inbounds i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %24, i64 4
  %26 = load i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %25, align 8
  %27 = tail call i32 %26(%"class.v8::OutputStream"* %21, i8* %22, i32 %11) #13
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %30

29:                                               ; preds = %19
  store i8 1, i8* %16, align 4
  br label %30

30:                                               ; preds = %29, %19
  store i32 0, i32* %4, align 8
  br label %31

31:                                               ; preds = %1, %15, %30
  %32 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  tail call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %32, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.363, i64 0, i64 0), i32 12) #13
  tail call void @_ZN2v88internal26HeapSnapshotJSONSerializer17SerializeSnapshotEv(%"class.v8::internal::HeapSnapshotJSONSerializer"* %0)
  %33 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  %34 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %33, i64 0, i32 5
  %35 = load i8, i8* %34, align 4, !range !4
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %307

37:                                               ; preds = %31
  tail call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %33, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.364, i64 0, i64 0), i32 3) #13
  %38 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  tail call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %38, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.365, i64 0, i64 0), i32 9) #13
  %39 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 0
  %40 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %40, i64 0, i32 4, i32 0, i32 0, i32 1
  %42 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %40, i64 0, i32 4, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = udiv i64 %44, 102
  %46 = urem i64 %44, 102
  %47 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %42, i64 %45
  %48 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %40, i64 0, i32 4, i32 0, i32 0, i32 2
  %49 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %48, align 8
  %50 = icmp eq %"class.v8::internal::HeapEntry"** %49, %42
  br i1 %50, label %86, label %51

51:                                               ; preds = %37
  %52 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %47, align 8
  %53 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %52, i64 %46
  %54 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %40, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, %44
  %57 = udiv i64 %56, 102
  %58 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %42, i64 %57
  %59 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %58, align 8
  %60 = urem i64 %56, 102
  %61 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %59, i64 %60
  %62 = icmp eq %"class.v8::internal::HeapEntry"* %61, %53
  br i1 %62, label %86, label %63

63:                                               ; preds = %51, %81
  %64 = phi %"class.v8::internal::HeapEntry"* [ %84, %81 ], [ %53, %51 ]
  %65 = phi %"class.v8::internal::HeapEntry"** [ %82, %81 ], [ %47, %51 ]
  tail call void @_ZN2v88internal26HeapSnapshotJSONSerializer13SerializeNodeEPKNS0_9HeapEntryE(%"class.v8::internal::HeapSnapshotJSONSerializer"* %0, %"class.v8::internal::HeapEntry"* %64) #13
  %66 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  %67 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %66, i64 0, i32 5
  %68 = load i8, i8* %67, align 4, !range !4
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %86

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %64, i64 1
  %72 = ptrtoint %"class.v8::internal::HeapEntry"* %71 to i64
  %73 = bitcast %"class.v8::internal::HeapEntry"** %65 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = sub i64 %72, %74
  %76 = icmp eq i64 %75, 4080
  br i1 %76, label %77, label %81

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %65, i64 1
  %79 = bitcast %"class.v8::internal::HeapEntry"** %78 to i64*
  %80 = load i64, i64* %79, align 8
  br label %81

81:                                               ; preds = %77, %70
  %82 = phi %"class.v8::internal::HeapEntry"** [ %78, %77 ], [ %65, %70 ]
  %83 = phi i64 [ %80, %77 ], [ %72, %70 ]
  %84 = inttoptr i64 %83 to %"class.v8::internal::HeapEntry"*
  %85 = icmp eq %"class.v8::internal::HeapEntry"* %61, %84
  br i1 %85, label %86, label %63

86:                                               ; preds = %63, %81, %37, %51
  %87 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  %88 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %87, i64 0, i32 5
  %89 = load i8, i8* %88, align 4, !range !4
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %91, label %307

91:                                               ; preds = %86
  tail call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %87, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.366, i64 0, i64 0), i32 3) #13
  %92 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  tail call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %92, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.367, i64 0, i64 0), i32 9) #13
  %93 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %39, align 8
  %94 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %93, i64 0, i32 6
  %95 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %93, i64 0, i32 6, i32 0, i32 1
  %96 = bitcast %"class.v8::internal::HeapGraphEdge"*** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.std::__1::vector.770"* %94 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = icmp eq i64 %97, %99
  br i1 %100, label %119, label %107

101:                                              ; preds = %107
  %102 = load i64, i64* %96, align 8
  %103 = load i64, i64* %98, align 8
  %104 = sub i64 %102, %103
  %105 = ashr exact i64 %104, 3
  %106 = icmp ult i64 %118, %105
  br i1 %106, label %107, label %124

107:                                              ; preds = %91, %101
  %108 = phi i64 [ %103, %101 ], [ %99, %91 ]
  %109 = phi i64 [ %118, %101 ], [ 0, %91 ]
  %110 = inttoptr i64 %108 to %"class.v8::internal::HeapGraphEdge"**
  %111 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %110, i64 %109
  %112 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %111, align 8
  %113 = icmp eq i64 %109, 0
  tail call void @_ZN2v88internal26HeapSnapshotJSONSerializer13SerializeEdgeEPNS0_13HeapGraphEdgeEb(%"class.v8::internal::HeapSnapshotJSONSerializer"* %0, %"class.v8::internal::HeapGraphEdge"* %112, i1 zeroext %113) #13
  %114 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  %115 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %114, i64 0, i32 5
  %116 = load i8, i8* %115, align 4, !range !4
  %117 = icmp eq i8 %116, 0
  %118 = add nuw i64 %109, 1
  br i1 %117, label %101, label %307

119:                                              ; preds = %91
  %120 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  %121 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %120, i64 0, i32 5
  %122 = load i8, i8* %121, align 4, !range !4
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %307

124:                                              ; preds = %101, %119
  %125 = phi %"class.v8::internal::OutputStreamWriter"* [ %120, %119 ], [ %114, %101 ]
  tail call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %125, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.366, i64 0, i64 0), i32 3) #13
  %126 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  tail call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %126, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.368, i64 0, i64 0), i32 24) #13
  tail call void @_ZN2v88internal26HeapSnapshotJSONSerializer23SerializeTraceNodeInfosEv(%"class.v8::internal::HeapSnapshotJSONSerializer"* %0)
  %127 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  %128 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %127, i64 0, i32 5
  %129 = load i8, i8* %128, align 4, !range !4
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %131, label %307

131:                                              ; preds = %124
  tail call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %127, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.366, i64 0, i64 0), i32 3) #13
  %132 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  tail call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %132, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.369, i64 0, i64 0), i32 14) #13
  %133 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %39, align 8
  %134 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %133, i64 0, i32 0
  %135 = load %"class.v8::internal::HeapProfiler"*, %"class.v8::internal::HeapProfiler"** %134, align 8
  %136 = getelementptr inbounds %"class.v8::internal::HeapProfiler", %"class.v8::internal::HeapProfiler"* %135, i64 0, i32 4, i32 0, i32 0, i32 0
  %137 = load %"class.v8::internal::AllocationTracker"*, %"class.v8::internal::AllocationTracker"** %136, align 8
  %138 = icmp eq %"class.v8::internal::AllocationTracker"* %137, null
  br i1 %138, label %141, label %139

139:                                              ; preds = %131
  %140 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %137, i64 0, i32 2, i32 1
  tail call void @_ZN2v88internal26HeapSnapshotJSONSerializer18SerializeTraceNodeEPNS0_19AllocationTraceNodeE(%"class.v8::internal::HeapSnapshotJSONSerializer"* %0, %"class.v8::internal::AllocationTraceNode"* %140) #13
  br label %141

141:                                              ; preds = %131, %139
  %142 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  %143 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %142, i64 0, i32 5
  %144 = load i8, i8* %143, align 4, !range !4
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %146, label %307

146:                                              ; preds = %141
  tail call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %142, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.366, i64 0, i64 0), i32 3) #13
  %147 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  tail call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %147, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.370, i64 0, i64 0), i32 11) #13
  tail call void @_ZN2v88internal26HeapSnapshotJSONSerializer16SerializeSamplesEv(%"class.v8::internal::HeapSnapshotJSONSerializer"* %0)
  %148 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  %149 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %148, i64 0, i32 5
  %150 = load i8, i8* %149, align 4, !range !4
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %152, label %307

152:                                              ; preds = %146
  tail call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %148, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.366, i64 0, i64 0), i32 3) #13
  %153 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  tail call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %153, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.371, i64 0, i64 0), i32 13) #13
  %154 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %39, align 8
  %155 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %154, i64 0, i32 8
  %156 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %154, i64 0, i32 8, i32 0, i32 1
  %157 = bitcast %"struct.v8::internal::SourceLocation"** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"class.std::__1::vector.800"* %155 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = icmp eq i64 %158, %160
  br i1 %161, label %210, label %162

162:                                              ; preds = %152
  %163 = getelementptr inbounds %"class.std::__1::vector.800", %"class.std::__1::vector.800"* %155, i64 0, i32 0, i32 0
  br label %170

164:                                              ; preds = %202
  %165 = load i64, i64* %157, align 8
  %166 = load i64, i64* %159, align 8
  %167 = sub i64 %165, %166
  %168 = ashr exact i64 %167, 4
  %169 = icmp ult i64 %209, %168
  br i1 %169, label %170, label %215

170:                                              ; preds = %164, %162
  %171 = phi i64 [ 0, %162 ], [ %209, %164 ]
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %202, label %173

173:                                              ; preds = %170
  %174 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  %175 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %174, i64 0, i32 4
  %176 = load i32, i32* %175, align 8
  %177 = add nsw i32 %176, 1
  store i32 %177, i32* %175, align 8
  %178 = sext i32 %176 to i64
  %179 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %174, i64 0, i32 3, i32 0, i32 0
  %180 = load i8*, i8** %179, align 8
  %181 = getelementptr inbounds i8, i8* %180, i64 %178
  store i8 44, i8* %181, align 1
  %182 = load i32, i32* %175, align 8
  %183 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %174, i64 0, i32 1
  %184 = load i32, i32* %183, align 8
  %185 = icmp eq i32 %182, %184
  br i1 %185, label %186, label %202

186:                                              ; preds = %173
  %187 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %174, i64 0, i32 5
  %188 = load i8, i8* %187, align 4, !range !4
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %190, label %202

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %174, i64 0, i32 0
  %192 = load %"class.v8::OutputStream"*, %"class.v8::OutputStream"** %191, align 8
  %193 = load i8*, i8** %179, align 8
  %194 = bitcast %"class.v8::OutputStream"* %192 to i32 (%"class.v8::OutputStream"*, i8*, i32)***
  %195 = load i32 (%"class.v8::OutputStream"*, i8*, i32)**, i32 (%"class.v8::OutputStream"*, i8*, i32)*** %194, align 8
  %196 = getelementptr inbounds i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %195, i64 4
  %197 = load i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %196, align 8
  %198 = tail call i32 %197(%"class.v8::OutputStream"* %192, i8* %193, i32 %182) #13
  %199 = icmp eq i32 %198, 1
  br i1 %199, label %200, label %201

200:                                              ; preds = %190
  store i8 1, i8* %187, align 4
  br label %201

201:                                              ; preds = %200, %190
  store i32 0, i32* %175, align 8
  br label %202

202:                                              ; preds = %201, %186, %173, %170
  %203 = load %"struct.v8::internal::SourceLocation"*, %"struct.v8::internal::SourceLocation"** %163, align 8
  %204 = getelementptr inbounds %"struct.v8::internal::SourceLocation", %"struct.v8::internal::SourceLocation"* %203, i64 %171
  tail call void @_ZN2v88internal26HeapSnapshotJSONSerializer17SerializeLocationERKNS0_14SourceLocationE(%"class.v8::internal::HeapSnapshotJSONSerializer"* %0, %"struct.v8::internal::SourceLocation"* dereferenceable(16) %204) #13
  %205 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  %206 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %205, i64 0, i32 5
  %207 = load i8, i8* %206, align 4, !range !4
  %208 = icmp eq i8 %207, 0
  %209 = add nuw i64 %171, 1
  br i1 %208, label %164, label %307

210:                                              ; preds = %152
  %211 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  %212 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %211, i64 0, i32 5
  %213 = load i8, i8* %212, align 4, !range !4
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %215, label %307

215:                                              ; preds = %164, %210
  %216 = phi %"class.v8::internal::OutputStreamWriter"* [ %211, %210 ], [ %205, %164 ]
  tail call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %216, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.366, i64 0, i64 0), i32 3) #13
  %217 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  tail call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %217, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.372, i64 0, i64 0), i32 11) #13
  tail call void @_ZN2v88internal26HeapSnapshotJSONSerializer16SerializeStringsEv(%"class.v8::internal::HeapSnapshotJSONSerializer"* %0)
  %218 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  %219 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %218, i64 0, i32 5
  %220 = load i8, i8* %219, align 4, !range !4
  %221 = icmp eq i8 %220, 0
  br i1 %221, label %222, label %307

222:                                              ; preds = %215
  %223 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %218, i64 0, i32 4
  %224 = load i32, i32* %223, align 8
  %225 = add nsw i32 %224, 1
  store i32 %225, i32* %223, align 8
  %226 = sext i32 %224 to i64
  %227 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %218, i64 0, i32 3, i32 0, i32 0
  %228 = load i8*, i8** %227, align 8
  %229 = getelementptr inbounds i8, i8* %228, i64 %226
  store i8 93, i8* %229, align 1
  %230 = load i32, i32* %223, align 8
  %231 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %218, i64 0, i32 1
  %232 = load i32, i32* %231, align 8
  %233 = icmp eq i32 %230, %232
  br i1 %233, label %234, label %249

234:                                              ; preds = %222
  %235 = load i8, i8* %219, align 4, !range !4
  %236 = icmp eq i8 %235, 0
  br i1 %236, label %237, label %249

237:                                              ; preds = %234
  %238 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %218, i64 0, i32 0
  %239 = load %"class.v8::OutputStream"*, %"class.v8::OutputStream"** %238, align 8
  %240 = load i8*, i8** %227, align 8
  %241 = bitcast %"class.v8::OutputStream"* %239 to i32 (%"class.v8::OutputStream"*, i8*, i32)***
  %242 = load i32 (%"class.v8::OutputStream"*, i8*, i32)**, i32 (%"class.v8::OutputStream"*, i8*, i32)*** %241, align 8
  %243 = getelementptr inbounds i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %242, i64 4
  %244 = load i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %243, align 8
  %245 = tail call i32 %244(%"class.v8::OutputStream"* %239, i8* %240, i32 %230) #13
  %246 = icmp eq i32 %245, 1
  br i1 %246, label %247, label %248

247:                                              ; preds = %237
  store i8 1, i8* %219, align 4
  br label %248

248:                                              ; preds = %247, %237
  store i32 0, i32* %223, align 8
  br label %249

249:                                              ; preds = %222, %234, %248
  %250 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  %251 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %250, i64 0, i32 4
  %252 = load i32, i32* %251, align 8
  %253 = add nsw i32 %252, 1
  store i32 %253, i32* %251, align 8
  %254 = sext i32 %252 to i64
  %255 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %250, i64 0, i32 3, i32 0, i32 0
  %256 = load i8*, i8** %255, align 8
  %257 = getelementptr inbounds i8, i8* %256, i64 %254
  store i8 125, i8* %257, align 1
  %258 = load i32, i32* %251, align 8
  %259 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %250, i64 0, i32 1
  %260 = load i32, i32* %259, align 8
  %261 = icmp eq i32 %258, %260
  br i1 %261, label %262, label %278

262:                                              ; preds = %249
  %263 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %250, i64 0, i32 5
  %264 = load i8, i8* %263, align 4, !range !4
  %265 = icmp eq i8 %264, 0
  br i1 %265, label %266, label %278

266:                                              ; preds = %262
  %267 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %250, i64 0, i32 0
  %268 = load %"class.v8::OutputStream"*, %"class.v8::OutputStream"** %267, align 8
  %269 = load i8*, i8** %255, align 8
  %270 = bitcast %"class.v8::OutputStream"* %268 to i32 (%"class.v8::OutputStream"*, i8*, i32)***
  %271 = load i32 (%"class.v8::OutputStream"*, i8*, i32)**, i32 (%"class.v8::OutputStream"*, i8*, i32)*** %270, align 8
  %272 = getelementptr inbounds i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %271, i64 4
  %273 = load i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %272, align 8
  %274 = tail call i32 %273(%"class.v8::OutputStream"* %268, i8* %269, i32 %258) #13
  %275 = icmp eq i32 %274, 1
  br i1 %275, label %276, label %277

276:                                              ; preds = %266
  store i8 1, i8* %263, align 4
  br label %277

277:                                              ; preds = %276, %266
  store i32 0, i32* %251, align 8
  br label %278

278:                                              ; preds = %249, %262, %277
  %279 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  %280 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %279, i64 0, i32 5
  %281 = load i8, i8* %280, align 4, !range !4
  %282 = icmp eq i8 %281, 0
  br i1 %282, label %283, label %307

283:                                              ; preds = %278
  %284 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %279, i64 0, i32 4
  %285 = load i32, i32* %284, align 8
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %300, label %287

287:                                              ; preds = %283
  %288 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %279, i64 0, i32 0
  %289 = load %"class.v8::OutputStream"*, %"class.v8::OutputStream"** %288, align 8
  %290 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %279, i64 0, i32 3, i32 0, i32 0
  %291 = load i8*, i8** %290, align 8
  %292 = bitcast %"class.v8::OutputStream"* %289 to i32 (%"class.v8::OutputStream"*, i8*, i32)***
  %293 = load i32 (%"class.v8::OutputStream"*, i8*, i32)**, i32 (%"class.v8::OutputStream"*, i8*, i32)*** %292, align 8
  %294 = getelementptr inbounds i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %293, i64 4
  %295 = load i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %294, align 8
  %296 = tail call i32 %295(%"class.v8::OutputStream"* %289, i8* %291, i32 %285) #13
  %297 = icmp eq i32 %296, 1
  br i1 %297, label %298, label %299

298:                                              ; preds = %287
  store i8 1, i8* %280, align 4
  br label %299

299:                                              ; preds = %298, %287
  store i32 0, i32* %284, align 8
  br label %300

300:                                              ; preds = %299, %283
  %301 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %279, i64 0, i32 0
  %302 = load %"class.v8::OutputStream"*, %"class.v8::OutputStream"** %301, align 8
  %303 = bitcast %"class.v8::OutputStream"* %302 to void (%"class.v8::OutputStream"*)***
  %304 = load void (%"class.v8::OutputStream"*)**, void (%"class.v8::OutputStream"*)*** %303, align 8
  %305 = getelementptr inbounds void (%"class.v8::OutputStream"*)*, void (%"class.v8::OutputStream"*)** %304, i64 2
  %306 = load void (%"class.v8::OutputStream"*)*, void (%"class.v8::OutputStream"*)** %305, align 8
  tail call void %306(%"class.v8::OutputStream"* %302) #13
  br label %307

307:                                              ; preds = %107, %202, %215, %210, %146, %141, %124, %119, %86, %31, %300, %278
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26HeapSnapshotJSONSerializer17SerializeSnapshotEv(%"class.v8::internal::HeapSnapshotJSONSerializer"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 4
  %3 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  tail call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.373, i64 0, i64 0), i32 7) #13
  %4 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  tail call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %4, i8* getelementptr inbounds ([756 x i8], [756 x i8]* @.str.374, i64 0, i64 0), i32 755) #13
  %5 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  tail call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.375, i64 0, i64 0), i32 14) #13
  %6 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  %7 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 0
  %8 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %8, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  tail call void @_ZN2v88internal18OutputStreamWriter13AddNumberImplIjEEvT_PKc(%"class.v8::internal::OutputStreamWriter"* %6, i32 %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.646, i64 0, i64 0)) #13
  %12 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  tail call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.376, i64 0, i64 0), i32 14) #13
  %13 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  %14 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %7, align 8
  %15 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %14, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = trunc i64 %16 to i32
  tail call void @_ZN2v88internal18OutputStreamWriter13AddNumberImplIjEEvT_PKc(%"class.v8::internal::OutputStreamWriter"* %13, i32 %17, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.646, i64 0, i64 0)) #13
  %18 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  tail call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %18, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.377, i64 0, i64 0), i32 24) #13
  %19 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %7, align 8
  %20 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %19, i64 0, i32 0
  %21 = load %"class.v8::internal::HeapProfiler"*, %"class.v8::internal::HeapProfiler"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::HeapProfiler", %"class.v8::internal::HeapProfiler"* %21, i64 0, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.v8::internal::AllocationTracker"*, %"class.v8::internal::AllocationTracker"** %22, align 8
  %24 = icmp eq %"class.v8::internal::AllocationTracker"* %23, null
  br i1 %24, label %35, label %25

25:                                               ; preds = %1
  %26 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %23, i64 0, i32 4
  %27 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %23, i64 0, i32 4, i32 0, i32 1
  %28 = bitcast %"struct.v8::internal::AllocationTracker::FunctionInfo"*** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::vector.710"* %26 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %29, %31
  %33 = lshr exact i64 %32, 3
  %34 = trunc i64 %33 to i32
  br label %35

35:                                               ; preds = %1, %25
  %36 = phi i32 [ %34, %25 ], [ 0, %1 ]
  %37 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %2, align 8
  tail call void @_ZN2v88internal18OutputStreamWriter13AddNumberImplIjEEvT_PKc(%"class.v8::internal::OutputStreamWriter"* %37, i32 %36, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.646, i64 0, i64 0)) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26HeapSnapshotJSONSerializer14SerializeNodesEv(%"class.v8::internal::HeapSnapshotJSONSerializer"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %3, i64 0, i32 4, i32 0, i32 0, i32 1
  %5 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %3, i64 0, i32 4, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = udiv i64 %7, 102
  %9 = urem i64 %7, 102
  %10 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %5, i64 %8
  %11 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %3, i64 0, i32 4, i32 0, i32 0, i32 2
  %12 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %11, align 8
  %13 = icmp eq %"class.v8::internal::HeapEntry"** %12, %5
  br i1 %13, label %51, label %14

14:                                               ; preds = %1
  %15 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %10, align 8
  %16 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %15, i64 %9
  %17 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %3, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, %7
  %20 = udiv i64 %19, 102
  %21 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %5, i64 %20
  %22 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %21, align 8
  %23 = urem i64 %19, 102
  %24 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %22, i64 %23
  %25 = icmp eq %"class.v8::internal::HeapEntry"* %24, %16
  br i1 %25, label %51, label %26

26:                                               ; preds = %14
  %27 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 4
  br label %28

28:                                               ; preds = %26, %46
  %29 = phi %"class.v8::internal::HeapEntry"* [ %16, %26 ], [ %49, %46 ]
  %30 = phi %"class.v8::internal::HeapEntry"** [ %10, %26 ], [ %47, %46 ]
  tail call void @_ZN2v88internal26HeapSnapshotJSONSerializer13SerializeNodeEPKNS0_9HeapEntryE(%"class.v8::internal::HeapSnapshotJSONSerializer"* %0, %"class.v8::internal::HeapEntry"* %29)
  %31 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %27, align 8
  %32 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %31, i64 0, i32 5
  %33 = load i8, i8* %32, align 4, !range !4
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %51

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %29, i64 1
  %37 = ptrtoint %"class.v8::internal::HeapEntry"* %36 to i64
  %38 = bitcast %"class.v8::internal::HeapEntry"** %30 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %37, %39
  %41 = icmp eq i64 %40, 4080
  br i1 %41, label %42, label %46

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %30, i64 1
  %44 = bitcast %"class.v8::internal::HeapEntry"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  br label %46

46:                                               ; preds = %35, %42
  %47 = phi %"class.v8::internal::HeapEntry"** [ %43, %42 ], [ %30, %35 ]
  %48 = phi i64 [ %45, %42 ], [ %37, %35 ]
  %49 = inttoptr i64 %48 to %"class.v8::internal::HeapEntry"*
  %50 = icmp eq %"class.v8::internal::HeapEntry"* %24, %49
  br i1 %50, label %51, label %28

51:                                               ; preds = %28, %46, %1, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26HeapSnapshotJSONSerializer14SerializeEdgesEv(%"class.v8::internal::HeapSnapshotJSONSerializer"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %3, i64 0, i32 6
  %5 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %3, i64 0, i32 6, i32 0, i32 1
  %6 = bitcast %"class.v8::internal::HeapGraphEdge"*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.770"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  br i1 %10, label %31, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 4
  br label %19

13:                                               ; preds = %19
  %14 = load i64, i64* %6, align 8
  %15 = load i64, i64* %8, align 8
  %16 = sub i64 %14, %15
  %17 = ashr exact i64 %16, 3
  %18 = icmp ult i64 %30, %17
  br i1 %18, label %19, label %31

19:                                               ; preds = %11, %13
  %20 = phi i64 [ %9, %11 ], [ %15, %13 ]
  %21 = phi i64 [ 0, %11 ], [ %30, %13 ]
  %22 = inttoptr i64 %20 to %"class.v8::internal::HeapGraphEdge"**
  %23 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %22, i64 %21
  %24 = load %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %23, align 8
  %25 = icmp eq i64 %21, 0
  tail call void @_ZN2v88internal26HeapSnapshotJSONSerializer13SerializeEdgeEPNS0_13HeapGraphEdgeEb(%"class.v8::internal::HeapSnapshotJSONSerializer"* %0, %"class.v8::internal::HeapGraphEdge"* %24, i1 zeroext %25)
  %26 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %12, align 8
  %27 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %26, i64 0, i32 5
  %28 = load i8, i8* %27, align 4, !range !4
  %29 = icmp eq i8 %28, 0
  %30 = add nuw i64 %21, 1
  br i1 %29, label %13, label %31

31:                                               ; preds = %13, %19, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26HeapSnapshotJSONSerializer23SerializeTraceNodeInfosEv(%"class.v8::internal::HeapSnapshotJSONSerializer"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %class.anon.1721, align 8
  %3 = alloca %class.anon.1719, align 1
  %4 = alloca i8*, align 8
  %5 = alloca %class.anon.1721, align 8
  %6 = alloca %class.anon.1719, align 1
  %7 = alloca i8*, align 8
  %8 = alloca %"class.v8::internal::EmbeddedVector.1545", align 8
  %9 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 0
  %10 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %10, i64 0, i32 0
  %12 = load %"class.v8::internal::HeapProfiler"*, %"class.v8::internal::HeapProfiler"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::HeapProfiler", %"class.v8::internal::HeapProfiler"* %12, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.v8::internal::AllocationTracker"*, %"class.v8::internal::AllocationTracker"** %13, align 8
  %15 = icmp eq %"class.v8::internal::AllocationTracker"* %14, null
  br i1 %15, label %268, label %16

16:                                               ; preds = %1
  %17 = bitcast %"class.v8::internal::EmbeddedVector.1545"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1545", %"class.v8::internal::EmbeddedVector.1545"* %8, i64 0, i32 1, i64 0
  %19 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1545", %"class.v8::internal::EmbeddedVector.1545"* %8, i64 0, i32 0, i32 0
  store i8* %18, i8** %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1545", %"class.v8::internal::EmbeddedVector.1545"* %8, i64 0, i32 0, i32 1
  store i64 68, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %14, i64 0, i32 4, i32 0, i32 0
  %22 = load %"struct.v8::internal::AllocationTracker::FunctionInfo"**, %"struct.v8::internal::AllocationTracker::FunctionInfo"*** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %14, i64 0, i32 4, i32 0, i32 1
  %24 = load %"struct.v8::internal::AllocationTracker::FunctionInfo"**, %"struct.v8::internal::AllocationTracker::FunctionInfo"*** %23, align 8
  %25 = icmp eq %"struct.v8::internal::AllocationTracker::FunctionInfo"** %22, %24
  br i1 %25, label %38, label %26

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 1, i32 0
  %28 = bitcast i8** %4 to i8*
  %29 = getelementptr inbounds %class.anon.1719, %class.anon.1719* %3, i64 0, i32 0
  %30 = bitcast %class.anon.1721* %2 to i8*
  %31 = getelementptr inbounds %class.anon.1721, %class.anon.1721* %2, i64 0, i32 0
  %32 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 3
  %33 = bitcast i8** %7 to i8*
  %34 = getelementptr inbounds %class.anon.1719, %class.anon.1719* %6, i64 0, i32 0
  %35 = bitcast %class.anon.1721* %5 to i8*
  %36 = getelementptr inbounds %class.anon.1721, %class.anon.1721* %5, i64 0, i32 0
  %37 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 4
  br label %39

38:                                               ; preds = %253, %16
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %17) #13
  br label %268

39:                                               ; preds = %26, %253
  %40 = phi i32 [ 0, %26 ], [ %43, %253 ]
  %41 = phi %"struct.v8::internal::AllocationTracker::FunctionInfo"** [ %22, %26 ], [ %266, %253 ]
  %42 = load %"struct.v8::internal::AllocationTracker::FunctionInfo"*, %"struct.v8::internal::AllocationTracker::FunctionInfo"** %41, align 8
  %43 = add nuw nsw i32 %40, 1
  %44 = icmp eq i32 %40, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %39
  %46 = load i8*, i8** %19, align 8
  store i8 44, i8* %46, align 1
  br label %47

47:                                               ; preds = %39, %45
  %48 = phi i32 [ 1, %45 ], [ 0, %39 ]
  %49 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo", %"struct.v8::internal::AllocationTracker::FunctionInfo"* %42, i64 0, i32 1
  %50 = load i32, i32* %49, align 8
  br label %51

51:                                               ; preds = %51, %47
  %52 = phi i32 [ 0, %47 ], [ %54, %51 ]
  %53 = phi i32 [ %50, %47 ], [ %55, %51 ]
  %54 = add nuw nsw i32 %52, 1
  %55 = udiv i32 %53, 10
  %56 = icmp ugt i32 %53, 9
  br i1 %56, label %51, label %57

57:                                               ; preds = %51
  %58 = add nuw i32 %54, %48
  %59 = sext i32 %58 to i64
  br label %60

60:                                               ; preds = %60, %57
  %61 = phi i64 [ %66, %60 ], [ %59, %57 ]
  %62 = phi i32 [ %69, %60 ], [ %50, %57 ]
  %63 = urem i32 %62, 10
  %64 = trunc i32 %63 to i8
  %65 = or i8 %64, 48
  %66 = add i64 %61, -1
  %67 = load i8*, i8** %19, align 8
  %68 = getelementptr inbounds i8, i8* %67, i64 %66
  store i8 %65, i8* %68, align 1
  %69 = udiv i32 %62, 10
  %70 = icmp ugt i32 %62, 9
  br i1 %70, label %60, label %71

71:                                               ; preds = %60
  %72 = add nsw i32 %58, 1
  %73 = load i8*, i8** %19, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 %59
  store i8 44, i8* %74, align 1
  %75 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo", %"struct.v8::internal::AllocationTracker::FunctionInfo"* %42, i64 0, i32 0
  %76 = load i8*, i8** %75, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  store i8* %76, i8** %4, align 8
  %77 = call i64 @strlen(i8* %76) #22
  %78 = trunc i64 %77 to i32
  %79 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIcEEjPKT_im(i8* %76, i32 %78, i64 0) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %29) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #13
  store i8** %4, i8*** %31, align 8
  %80 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_26HashEqualityThenKeyMatcherIS2_PFbS2_S2_EEENS0_23DefaultAllocationPolicyEE14LookupOrInsertIS2_ZNS8_14LookupOrInsertIZNS8_14LookupOrInsertERKS2_jEUlvE_EEPNS0_20TemplateHashMapEntryIS2_S2_EESC_jRKT_EUlvE_SD_EESG_SJ_jRKT0_RKT1_(%"class.v8::base::TemplateHashMapImpl.696"* %27, i8** nonnull dereferenceable(8) %4, i32 %79, %class.anon.1721* nonnull dereferenceable(8) %2, %class.anon.1719* nonnull dereferenceable(1) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %29) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  %81 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %80, i64 0, i32 1
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, null
  %84 = ptrtoint i8* %82 to i64
  br i1 %83, label %85, label %90

85:                                               ; preds = %71
  %86 = load i32, i32* %32, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %32, align 4
  %88 = sext i32 %86 to i64
  %89 = inttoptr i64 %88 to i8*
  store i8* %89, i8** %81, align 8
  br label %90

90:                                               ; preds = %71, %85
  %91 = phi i64 [ %88, %85 ], [ %84, %71 ]
  %92 = trunc i64 %91 to i32
  br label %93

93:                                               ; preds = %93, %90
  %94 = phi i32 [ 0, %90 ], [ %96, %93 ]
  %95 = phi i32 [ %92, %90 ], [ %97, %93 ]
  %96 = add nuw nsw i32 %94, 1
  %97 = udiv i32 %95, 10
  %98 = icmp ugt i32 %95, 9
  br i1 %98, label %93, label %99

99:                                               ; preds = %93
  %100 = add i32 %72, %96
  %101 = sext i32 %100 to i64
  br label %102

102:                                              ; preds = %102, %99
  %103 = phi i64 [ %108, %102 ], [ %101, %99 ]
  %104 = phi i32 [ %111, %102 ], [ %92, %99 ]
  %105 = urem i32 %104, 10
  %106 = trunc i32 %105 to i8
  %107 = or i8 %106, 48
  %108 = add i64 %103, -1
  %109 = load i8*, i8** %19, align 8
  %110 = getelementptr inbounds i8, i8* %109, i64 %108
  store i8 %107, i8* %110, align 1
  %111 = udiv i32 %104, 10
  %112 = icmp ugt i32 %104, 9
  br i1 %112, label %102, label %113

113:                                              ; preds = %102
  %114 = add nsw i32 %100, 1
  %115 = load i8*, i8** %19, align 8
  %116 = getelementptr inbounds i8, i8* %115, i64 %101
  store i8 44, i8* %116, align 1
  %117 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo", %"struct.v8::internal::AllocationTracker::FunctionInfo"* %42, i64 0, i32 3
  %118 = load i8*, i8** %117, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  store i8* %118, i8** %7, align 8
  %119 = call i64 @strlen(i8* %118) #22
  %120 = trunc i64 %119 to i32
  %121 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIcEEjPKT_im(i8* %118, i32 %120, i64 0) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %34) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #13
  store i8** %7, i8*** %36, align 8
  %122 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_26HashEqualityThenKeyMatcherIS2_PFbS2_S2_EEENS0_23DefaultAllocationPolicyEE14LookupOrInsertIS2_ZNS8_14LookupOrInsertIZNS8_14LookupOrInsertERKS2_jEUlvE_EEPNS0_20TemplateHashMapEntryIS2_S2_EESC_jRKT_EUlvE_SD_EESG_SJ_jRKT0_RKT1_(%"class.v8::base::TemplateHashMapImpl.696"* %27, i8** nonnull dereferenceable(8) %7, i32 %121, %class.anon.1721* nonnull dereferenceable(8) %5, %class.anon.1719* nonnull dereferenceable(1) %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %34) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %123 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %122, i64 0, i32 1
  %124 = load i8*, i8** %123, align 8
  %125 = icmp eq i8* %124, null
  %126 = ptrtoint i8* %124 to i64
  br i1 %125, label %127, label %132

127:                                              ; preds = %113
  %128 = load i32, i32* %32, align 4
  %129 = add nsw i32 %128, 1
  store i32 %129, i32* %32, align 4
  %130 = sext i32 %128 to i64
  %131 = inttoptr i64 %130 to i8*
  store i8* %131, i8** %123, align 8
  br label %132

132:                                              ; preds = %113, %127
  %133 = phi i64 [ %130, %127 ], [ %126, %113 ]
  %134 = trunc i64 %133 to i32
  br label %135

135:                                              ; preds = %135, %132
  %136 = phi i32 [ 0, %132 ], [ %138, %135 ]
  %137 = phi i32 [ %134, %132 ], [ %139, %135 ]
  %138 = add nuw nsw i32 %136, 1
  %139 = udiv i32 %137, 10
  %140 = icmp ugt i32 %137, 9
  br i1 %140, label %135, label %141

141:                                              ; preds = %135
  %142 = add i32 %114, %138
  %143 = sext i32 %142 to i64
  br label %144

144:                                              ; preds = %144, %141
  %145 = phi i64 [ %150, %144 ], [ %143, %141 ]
  %146 = phi i32 [ %153, %144 ], [ %134, %141 ]
  %147 = urem i32 %146, 10
  %148 = trunc i32 %147 to i8
  %149 = or i8 %148, 48
  %150 = add i64 %145, -1
  %151 = load i8*, i8** %19, align 8
  %152 = getelementptr inbounds i8, i8* %151, i64 %150
  store i8 %149, i8* %152, align 1
  %153 = udiv i32 %146, 10
  %154 = icmp ugt i32 %146, 9
  br i1 %154, label %144, label %155

155:                                              ; preds = %144
  %156 = load i8*, i8** %19, align 8
  %157 = getelementptr inbounds i8, i8* %156, i64 %143
  store i8 44, i8* %157, align 1
  %158 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo", %"struct.v8::internal::AllocationTracker::FunctionInfo"* %42, i64 0, i32 4
  %159 = load i32, i32* %158, align 8
  br label %160

160:                                              ; preds = %160, %155
  %161 = phi i32 [ 0, %155 ], [ %163, %160 ]
  %162 = phi i32 [ %159, %155 ], [ %164, %160 ]
  %163 = add nuw nsw i32 %161, 1
  %164 = udiv i32 %162, 10
  %165 = icmp ugt i32 %162, 9
  br i1 %165, label %160, label %166

166:                                              ; preds = %160
  %167 = add nsw i32 %142, 1
  %168 = add i32 %167, %163
  %169 = sext i32 %168 to i64
  br label %170

170:                                              ; preds = %170, %166
  %171 = phi i64 [ %176, %170 ], [ %169, %166 ]
  %172 = phi i32 [ %179, %170 ], [ %159, %166 ]
  %173 = urem i32 %172, 10
  %174 = trunc i32 %173 to i8
  %175 = or i8 %174, 48
  %176 = add i64 %171, -1
  %177 = load i8*, i8** %19, align 8
  %178 = getelementptr inbounds i8, i8* %177, i64 %176
  store i8 %175, i8* %178, align 1
  %179 = udiv i32 %172, 10
  %180 = icmp ugt i32 %172, 9
  br i1 %180, label %170, label %181

181:                                              ; preds = %170
  %182 = add nsw i32 %168, 1
  %183 = load i8*, i8** %19, align 8
  %184 = getelementptr inbounds i8, i8* %183, i64 %169
  store i8 44, i8* %184, align 1
  %185 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo", %"struct.v8::internal::AllocationTracker::FunctionInfo"* %42, i64 0, i32 5
  %186 = load i32, i32* %185, align 4
  %187 = icmp eq i32 %186, -1
  br i1 %187, label %188, label %194

188:                                              ; preds = %181
  %189 = add nsw i32 %168, 2
  %190 = sext i32 %182 to i64
  %191 = load i8*, i8** %19, align 8
  %192 = getelementptr inbounds i8, i8* %191, i64 %190
  store i8 48, i8* %192, align 1
  %193 = sext i32 %189 to i64
  br label %216

194:                                              ; preds = %181
  %195 = add nuw nsw i32 %186, 1
  br label %196

196:                                              ; preds = %196, %194
  %197 = phi i32 [ 0, %194 ], [ %199, %196 ]
  %198 = phi i32 [ %195, %194 ], [ %200, %196 ]
  %199 = add nuw nsw i32 %197, 1
  %200 = udiv i32 %198, 10
  %201 = icmp ugt i32 %198, 9
  br i1 %201, label %196, label %202

202:                                              ; preds = %196
  %203 = add i32 %199, %182
  %204 = sext i32 %203 to i64
  br label %205

205:                                              ; preds = %205, %202
  %206 = phi i64 [ %211, %205 ], [ %204, %202 ]
  %207 = phi i32 [ %214, %205 ], [ %195, %202 ]
  %208 = urem i32 %207, 10
  %209 = trunc i32 %208 to i8
  %210 = or i8 %209, 48
  %211 = add i64 %206, -1
  %212 = load i8*, i8** %19, align 8
  %213 = getelementptr inbounds i8, i8* %212, i64 %211
  store i8 %210, i8* %213, align 1
  %214 = udiv i32 %207, 10
  %215 = icmp ugt i32 %207, 9
  br i1 %215, label %205, label %216

216:                                              ; preds = %205, %188
  %217 = phi i64 [ %193, %188 ], [ %204, %205 ]
  %218 = phi i32 [ %189, %188 ], [ %203, %205 ]
  %219 = add nsw i32 %218, 1
  %220 = load i8*, i8** %19, align 8
  %221 = getelementptr inbounds i8, i8* %220, i64 %217
  store i8 44, i8* %221, align 1
  %222 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo", %"struct.v8::internal::AllocationTracker::FunctionInfo"* %42, i64 0, i32 6
  %223 = load i32, i32* %222, align 8
  %224 = icmp eq i32 %223, -1
  br i1 %224, label %225, label %231

225:                                              ; preds = %216
  %226 = add nsw i32 %218, 2
  %227 = sext i32 %219 to i64
  %228 = load i8*, i8** %19, align 8
  %229 = getelementptr inbounds i8, i8* %228, i64 %227
  store i8 48, i8* %229, align 1
  %230 = sext i32 %226 to i64
  br label %253

231:                                              ; preds = %216
  %232 = add nuw nsw i32 %223, 1
  br label %233

233:                                              ; preds = %233, %231
  %234 = phi i32 [ 0, %231 ], [ %236, %233 ]
  %235 = phi i32 [ %232, %231 ], [ %237, %233 ]
  %236 = add nuw nsw i32 %234, 1
  %237 = udiv i32 %235, 10
  %238 = icmp ugt i32 %235, 9
  br i1 %238, label %233, label %239

239:                                              ; preds = %233
  %240 = add i32 %236, %219
  %241 = sext i32 %240 to i64
  br label %242

242:                                              ; preds = %242, %239
  %243 = phi i64 [ %248, %242 ], [ %241, %239 ]
  %244 = phi i32 [ %251, %242 ], [ %232, %239 ]
  %245 = urem i32 %244, 10
  %246 = trunc i32 %245 to i8
  %247 = or i8 %246, 48
  %248 = add i64 %243, -1
  %249 = load i8*, i8** %19, align 8
  %250 = getelementptr inbounds i8, i8* %249, i64 %248
  store i8 %247, i8* %250, align 1
  %251 = udiv i32 %244, 10
  %252 = icmp ugt i32 %244, 9
  br i1 %252, label %242, label %253

253:                                              ; preds = %242, %225
  %254 = phi i64 [ %230, %225 ], [ %241, %242 ]
  %255 = phi i32 [ %226, %225 ], [ %240, %242 ]
  %256 = add nsw i32 %255, 1
  %257 = load i8*, i8** %19, align 8
  %258 = getelementptr inbounds i8, i8* %257, i64 %254
  store i8 10, i8* %258, align 1
  %259 = sext i32 %256 to i64
  %260 = load i8*, i8** %19, align 8
  %261 = getelementptr inbounds i8, i8* %260, i64 %259
  store i8 0, i8* %261, align 1
  %262 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %37, align 8
  %263 = load i8*, i8** %19, align 8
  %264 = call i64 @strlen(i8* %263) #22
  %265 = trunc i64 %264 to i32
  call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %262, i8* %263, i32 %265) #13
  %266 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo"*, %"struct.v8::internal::AllocationTracker::FunctionInfo"** %41, i64 1
  %267 = icmp eq %"struct.v8::internal::AllocationTracker::FunctionInfo"** %266, %24
  br i1 %267, label %38, label %39

268:                                              ; preds = %1, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26HeapSnapshotJSONSerializer18SerializeTraceTreeEv(%"class.v8::internal::HeapSnapshotJSONSerializer"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %3, i64 0, i32 0
  %5 = load %"class.v8::internal::HeapProfiler"*, %"class.v8::internal::HeapProfiler"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::HeapProfiler", %"class.v8::internal::HeapProfiler"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %7 = load %"class.v8::internal::AllocationTracker"*, %"class.v8::internal::AllocationTracker"** %6, align 8
  %8 = icmp eq %"class.v8::internal::AllocationTracker"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %7, i64 0, i32 2, i32 1
  tail call void @_ZN2v88internal26HeapSnapshotJSONSerializer18SerializeTraceNodeEPNS0_19AllocationTraceNodeE(%"class.v8::internal::HeapSnapshotJSONSerializer"* %0, %"class.v8::internal::AllocationTraceNode"* %10)
  br label %11

11:                                               ; preds = %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26HeapSnapshotJSONSerializer16SerializeSamplesEv(%"class.v8::internal::HeapSnapshotJSONSerializer"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.v8::internal::EmbeddedVector.1548", align 8
  %3 = alloca %"class.v8::base::TimeDelta", align 8
  %4 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 0
  %5 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %5, i64 0, i32 0
  %7 = load %"class.v8::internal::HeapProfiler"*, %"class.v8::internal::HeapProfiler"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::HeapProfiler", %"class.v8::internal::HeapProfiler"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.v8::internal::HeapObjectsMap"*, %"class.v8::internal::HeapObjectsMap"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %9, i64 0, i32 3, i32 0, i32 0
  %11 = load %"struct.v8::internal::HeapObjectsMap::TimeInterval"*, %"struct.v8::internal::HeapObjectsMap::TimeInterval"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %9, i64 0, i32 3, i32 0, i32 1
  %13 = load %"struct.v8::internal::HeapObjectsMap::TimeInterval"*, %"struct.v8::internal::HeapObjectsMap::TimeInterval"** %12, align 8
  %14 = icmp eq %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %11, %13
  br i1 %14, label %99, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::TimeInterval", %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %11, i64 0, i32 3, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.v8::internal::EmbeddedVector.1548"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %18) #13
  %19 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1548", %"class.v8::internal::EmbeddedVector.1548"* %2, i64 0, i32 1, i64 0
  %20 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1548", %"class.v8::internal::EmbeddedVector.1548"* %2, i64 0, i32 0, i32 0
  store i8* %19, i8** %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1548", %"class.v8::internal::EmbeddedVector.1548"* %2, i64 0, i32 0, i32 1
  store i64 34, i64* %21, align 8
  %22 = bitcast %"class.v8::base::TimeDelta"* %3 to i8*
  %23 = getelementptr inbounds %"class.v8::base::TimeDelta", %"class.v8::base::TimeDelta"* %3, i64 0, i32 0
  %24 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 4
  br label %26

25:                                               ; preds = %86
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %18) #13
  br label %99

26:                                               ; preds = %15, %86
  %27 = phi i32 [ 0, %15 ], [ %29, %86 ]
  %28 = phi %"struct.v8::internal::HeapObjectsMap::TimeInterval"* [ %11, %15 ], [ %97, %86 ]
  %29 = add nuw nsw i32 %27, 1
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %26
  %32 = load i8*, i8** %20, align 8
  store i8 44, i8* %32, align 1
  br label %33

33:                                               ; preds = %26, %31
  %34 = phi i32 [ 1, %31 ], [ 0, %26 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  %35 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::TimeInterval", %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %28, i64 0, i32 3, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = sub nsw i64 %36, %17
  store i64 %37, i64* %23, align 8
  %38 = call i64 @_ZNK2v84base9TimeDelta14InMicrosecondsEv(%"class.v8::base::TimeDelta"* nonnull %3) #13
  br label %39

39:                                               ; preds = %39, %33
  %40 = phi i32 [ 0, %33 ], [ %42, %39 ]
  %41 = phi i64 [ %38, %33 ], [ %43, %39 ]
  %42 = add nuw nsw i32 %40, 1
  %43 = udiv i64 %41, 10
  %44 = icmp ugt i64 %41, 9
  br i1 %44, label %39, label %45

45:                                               ; preds = %39
  %46 = add nuw i32 %42, %34
  %47 = sext i32 %46 to i64
  br label %48

48:                                               ; preds = %48, %45
  %49 = phi i64 [ %54, %48 ], [ %47, %45 ]
  %50 = phi i64 [ %57, %48 ], [ %38, %45 ]
  %51 = urem i64 %50, 10
  %52 = trunc i64 %51 to i8
  %53 = or i8 %52, 48
  %54 = add i64 %49, -1
  %55 = load i8*, i8** %20, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  store i8 %53, i8* %56, align 1
  %57 = udiv i64 %50, 10
  %58 = icmp ugt i64 %50, 9
  br i1 %58, label %48, label %59

59:                                               ; preds = %48
  %60 = load i8*, i8** %20, align 8
  %61 = getelementptr inbounds i8, i8* %60, i64 %47
  store i8 44, i8* %61, align 1
  %62 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::TimeInterval", %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %28, i64 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = add i32 %63, -2
  br label %65

65:                                               ; preds = %65, %59
  %66 = phi i32 [ 0, %59 ], [ %68, %65 ]
  %67 = phi i32 [ %64, %59 ], [ %69, %65 ]
  %68 = add nuw nsw i32 %66, 1
  %69 = udiv i32 %67, 10
  %70 = icmp ugt i32 %67, 9
  br i1 %70, label %65, label %71

71:                                               ; preds = %65
  %72 = add nsw i32 %46, 1
  %73 = add i32 %72, %68
  %74 = sext i32 %73 to i64
  br label %75

75:                                               ; preds = %75, %71
  %76 = phi i64 [ %81, %75 ], [ %74, %71 ]
  %77 = phi i32 [ %84, %75 ], [ %64, %71 ]
  %78 = urem i32 %77, 10
  %79 = trunc i32 %78 to i8
  %80 = or i8 %79, 48
  %81 = add i64 %76, -1
  %82 = load i8*, i8** %20, align 8
  %83 = getelementptr inbounds i8, i8* %82, i64 %81
  store i8 %80, i8* %83, align 1
  %84 = udiv i32 %77, 10
  %85 = icmp ugt i32 %77, 9
  br i1 %85, label %75, label %86

86:                                               ; preds = %75
  %87 = add nsw i32 %73, 1
  %88 = load i8*, i8** %20, align 8
  %89 = getelementptr inbounds i8, i8* %88, i64 %74
  store i8 10, i8* %89, align 1
  %90 = sext i32 %87 to i64
  %91 = load i8*, i8** %20, align 8
  %92 = getelementptr inbounds i8, i8* %91, i64 %90
  store i8 0, i8* %92, align 1
  %93 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %24, align 8
  %94 = load i8*, i8** %20, align 8
  %95 = call i64 @strlen(i8* %94) #22
  %96 = trunc i64 %95 to i32
  call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %93, i8* %94, i32 %96) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  %97 = getelementptr inbounds %"struct.v8::internal::HeapObjectsMap::TimeInterval", %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %28, i64 1
  %98 = icmp eq %"struct.v8::internal::HeapObjectsMap::TimeInterval"* %97, %13
  br i1 %98, label %25, label %26

99:                                               ; preds = %1, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26HeapSnapshotJSONSerializer18SerializeLocationsEv(%"class.v8::internal::HeapSnapshotJSONSerializer"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %3, i64 0, i32 8
  %5 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %3, i64 0, i32 8, i32 0, i32 1
  %6 = bitcast %"struct.v8::internal::SourceLocation"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.800"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  br i1 %10, label %60, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %"class.std::__1::vector.800", %"class.std::__1::vector.800"* %4, i64 0, i32 0, i32 0
  br label %20

14:                                               ; preds = %52
  %15 = load i64, i64* %6, align 8
  %16 = load i64, i64* %8, align 8
  %17 = sub i64 %15, %16
  %18 = ashr exact i64 %17, 4
  %19 = icmp ult i64 %59, %18
  br i1 %19, label %20, label %60

20:                                               ; preds = %11, %14
  %21 = phi i64 [ 0, %11 ], [ %59, %14 ]
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %52, label %23

23:                                               ; preds = %20
  %24 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %12, align 8
  %25 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %24, i64 0, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %25, align 8
  %28 = sext i32 %26 to i64
  %29 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %24, i64 0, i32 3, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 %28
  store i8 44, i8* %31, align 1
  %32 = load i32, i32* %25, align 8
  %33 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %24, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %32, %34
  br i1 %35, label %36, label %52

36:                                               ; preds = %23
  %37 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %24, i64 0, i32 5
  %38 = load i8, i8* %37, align 4, !range !4
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %24, i64 0, i32 0
  %42 = load %"class.v8::OutputStream"*, %"class.v8::OutputStream"** %41, align 8
  %43 = load i8*, i8** %29, align 8
  %44 = bitcast %"class.v8::OutputStream"* %42 to i32 (%"class.v8::OutputStream"*, i8*, i32)***
  %45 = load i32 (%"class.v8::OutputStream"*, i8*, i32)**, i32 (%"class.v8::OutputStream"*, i8*, i32)*** %44, align 8
  %46 = getelementptr inbounds i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %45, i64 4
  %47 = load i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %46, align 8
  %48 = tail call i32 %47(%"class.v8::OutputStream"* %42, i8* %43, i32 %32) #13
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %51

50:                                               ; preds = %40
  store i8 1, i8* %37, align 4
  br label %51

51:                                               ; preds = %50, %40
  store i32 0, i32* %25, align 8
  br label %52

52:                                               ; preds = %51, %36, %23, %20
  %53 = load %"struct.v8::internal::SourceLocation"*, %"struct.v8::internal::SourceLocation"** %13, align 8
  %54 = getelementptr inbounds %"struct.v8::internal::SourceLocation", %"struct.v8::internal::SourceLocation"* %53, i64 %21
  tail call void @_ZN2v88internal26HeapSnapshotJSONSerializer17SerializeLocationERKNS0_14SourceLocationE(%"class.v8::internal::HeapSnapshotJSONSerializer"* %0, %"struct.v8::internal::SourceLocation"* dereferenceable(16) %54)
  %55 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %12, align 8
  %56 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %55, i64 0, i32 5
  %57 = load i8, i8* %56, align 4, !range !4
  %58 = icmp eq i8 %57, 0
  %59 = add nuw i64 %21, 1
  br i1 %58, label %14, label %60

60:                                               ; preds = %14, %52, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26HeapSnapshotJSONSerializer16SerializeStringsEv(%"class.v8::internal::HeapSnapshotJSONSerializer"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, 1
  %5 = zext i32 %4 to i64
  %6 = shl nuw nsw i64 %5, 3
  %7 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %6, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %18

9:                                                ; preds = %1
  %10 = tail call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #13
  %11 = bitcast %"class.v8::Platform"* %10 to void (%"class.v8::Platform"*)***
  %12 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %12, i64 3
  %14 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %13, align 8
  tail call void %14(%"class.v8::Platform"* %10) #13
  %15 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %6, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #21
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %9
  tail call void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.645, i64 0, i64 0)) #20
  unreachable

18:                                               ; preds = %1, %9
  %19 = phi i8* [ %15, %9 ], [ %7, %1 ]
  %20 = bitcast i8* %19 to i8**
  %21 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %22 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %21, align 8
  %23 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %22, i64 -1
  %24 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %22, i64 %26
  br label %28

28:                                               ; preds = %32, %18
  %29 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %23, %18 ], [ %30, %32 ]
  %30 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %29, i64 1
  %31 = icmp ult %"struct.v8::base::TemplateHashMapEntry"* %30, %27
  br i1 %31, label %32, label %38

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %30, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %28, label %36

36:                                               ; preds = %32
  %37 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %30, null
  br i1 %37, label %38, label %45

38:                                               ; preds = %28, %64, %56, %36
  %39 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 4
  %40 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %39, align 8
  tail call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %40, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.382, i64 0, i64 0), i32 9) #13
  %41 = icmp sgt i32 %4, 1
  br i1 %41, label %42, label %106

42:                                               ; preds = %38
  %43 = sext i32 %4 to i64
  %44 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %39, align 8
  br label %66

45:                                               ; preds = %36, %64
  %46 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %58, %64 ], [ %30, %36 ]
  %47 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %46, i64 0, i32 1
  %48 = bitcast i8** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %46 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = shl i64 %49, 32
  %53 = ashr exact i64 %52, 32
  %54 = getelementptr inbounds i8*, i8** %20, i64 %53
  %55 = bitcast i8** %54 to i64*
  store i64 %51, i64* %55, align 8
  br label %56

56:                                               ; preds = %60, %45
  %57 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %46, %45 ], [ %58, %60 ]
  %58 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %57, i64 1
  %59 = icmp ult %"struct.v8::base::TemplateHashMapEntry"* %58, %27
  br i1 %59, label %60, label %38

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %58, i64 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = icmp eq i8* %62, null
  br i1 %63, label %56, label %64

64:                                               ; preds = %60
  %65 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %58, null
  br i1 %65, label %38, label %45

66:                                               ; preds = %96, %42
  %67 = phi %"class.v8::internal::OutputStreamWriter"* [ %99, %96 ], [ %44, %42 ]
  %68 = phi i64 [ %103, %96 ], [ 1, %42 ]
  %69 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %67, i64 0, i32 4
  %70 = load i32, i32* %69, align 8
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %69, align 8
  %72 = sext i32 %70 to i64
  %73 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %67, i64 0, i32 3, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds i8, i8* %74, i64 %72
  store i8 44, i8* %75, align 1
  %76 = load i32, i32* %69, align 8
  %77 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %67, i64 0, i32 1
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %76, %78
  br i1 %79, label %80, label %96

80:                                               ; preds = %66
  %81 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %67, i64 0, i32 5
  %82 = load i8, i8* %81, align 4, !range !4
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %96

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %67, i64 0, i32 0
  %86 = load %"class.v8::OutputStream"*, %"class.v8::OutputStream"** %85, align 8
  %87 = load i8*, i8** %73, align 8
  %88 = bitcast %"class.v8::OutputStream"* %86 to i32 (%"class.v8::OutputStream"*, i8*, i32)***
  %89 = load i32 (%"class.v8::OutputStream"*, i8*, i32)**, i32 (%"class.v8::OutputStream"*, i8*, i32)*** %88, align 8
  %90 = getelementptr inbounds i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %89, i64 4
  %91 = load i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %90, align 8
  %92 = tail call i32 %91(%"class.v8::OutputStream"* %86, i8* %87, i32 %76) #13
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %95

94:                                               ; preds = %84
  store i8 1, i8* %81, align 4
  br label %95

95:                                               ; preds = %94, %84
  store i32 0, i32* %69, align 8
  br label %96

96:                                               ; preds = %66, %80, %95
  %97 = getelementptr inbounds i8*, i8** %20, i64 %68
  %98 = load i8*, i8** %97, align 8
  tail call void @_ZN2v88internal26HeapSnapshotJSONSerializer15SerializeStringEPKh(%"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i8* %98)
  %99 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %39, align 8
  %100 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %99, i64 0, i32 5
  %101 = load i8, i8* %100, align 4, !range !4
  %102 = icmp eq i8 %101, 0
  %103 = add nuw nsw i64 %68, 1
  %104 = icmp slt i64 %103, %43
  %105 = and i1 %102, %104
  br i1 %105, label %66, label %106

106:                                              ; preds = %96, %38
  %107 = icmp eq i8* %19, null
  br i1 %107, label %109, label %108

108:                                              ; preds = %106
  tail call void @_ZdaPv(i8* nonnull %19) #21
  br label %109

109:                                              ; preds = %106, %108
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal26HeapSnapshotJSONSerializer11GetStringIdEPKc(%"class.v8::internal::HeapSnapshotJSONSerializer"*, i8*) local_unnamed_addr #2 align 2 {
  %3 = alloca %class.anon.1721, align 8
  %4 = alloca %class.anon.1719, align 1
  %5 = alloca i8*, align 8
  %6 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 1, i32 0
  %7 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  store i8* %1, i8** %5, align 8
  %8 = tail call i64 @strlen(i8* %1) #22
  %9 = trunc i64 %8 to i32
  %10 = tail call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIcEEjPKT_im(i8* %1, i32 %9, i64 0) #13
  %11 = getelementptr inbounds %class.anon.1719, %class.anon.1719* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #13
  %12 = bitcast %class.anon.1721* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #13
  %13 = getelementptr inbounds %class.anon.1721, %class.anon.1721* %3, i64 0, i32 0
  store i8** %5, i8*** %13, align 8
  %14 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_26HashEqualityThenKeyMatcherIS2_PFbS2_S2_EEENS0_23DefaultAllocationPolicyEE14LookupOrInsertIS2_ZNS8_14LookupOrInsertIZNS8_14LookupOrInsertERKS2_jEUlvE_EEPNS0_20TemplateHashMapEntryIS2_S2_EESC_jRKT_EUlvE_SD_EESG_SJ_jRKT0_RKT1_(%"class.v8::base::TemplateHashMapImpl.696"* %6, i8** nonnull dereferenceable(8) %5, i32 %10, %class.anon.1721* nonnull dereferenceable(8) %3, %class.anon.1719* nonnull dereferenceable(1) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  %15 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %14, i64 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, null
  %18 = ptrtoint i8* %16 to i64
  br i1 %17, label %19, label %25

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %20, align 4
  %23 = sext i32 %21 to i64
  %24 = inttoptr i64 %23 to i8*
  store i8* %24, i8** %15, align 8
  br label %25

25:                                               ; preds = %19, %2
  %26 = phi i64 [ %23, %19 ], [ %18, %2 ]
  %27 = trunc i64 %26 to i32
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26HeapSnapshotJSONSerializer13SerializeEdgeEPNS0_13HeapGraphEdgeEb(%"class.v8::internal::HeapSnapshotJSONSerializer"*, %"class.v8::internal::HeapGraphEdge"* nocapture readonly, i1 zeroext) local_unnamed_addr #2 align 2 {
  %4 = alloca %class.anon.1721, align 8
  %5 = alloca %class.anon.1719, align 1
  %6 = alloca i8*, align 8
  %7 = alloca %"class.v8::internal::EmbeddedVector.1538", align 8
  %8 = bitcast %"class.v8::internal::EmbeddedVector.1538"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #13
  %9 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1538", %"class.v8::internal::EmbeddedVector.1538"* %7, i64 0, i32 1, i64 0
  %10 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1538", %"class.v8::internal::EmbeddedVector.1538"* %7, i64 0, i32 0, i32 0
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1538", %"class.v8::internal::EmbeddedVector.1538"* %7, i64 0, i32 0, i32 1
  store i64 35, i64* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 7
  switch i32 %14, label %19 [
    i32 1, label %15
    i32 4, label %15
  ]

15:                                               ; preds = %3, %3
  %16 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %1, i64 0, i32 2
  %17 = bitcast %union.anon.807* %16 to i32*
  %18 = load i32, i32* %17, align 8
  br label %44

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %1, i64 0, i32 2, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 1, i32 0
  %23 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  store i8* %21, i8** %6, align 8
  %24 = call i64 @strlen(i8* %21) #22
  %25 = trunc i64 %24 to i32
  %26 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIcEEjPKT_im(i8* %21, i32 %25, i64 0) #13
  %27 = getelementptr inbounds %class.anon.1719, %class.anon.1719* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %27) #13
  %28 = bitcast %class.anon.1721* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  %29 = getelementptr inbounds %class.anon.1721, %class.anon.1721* %4, i64 0, i32 0
  store i8** %6, i8*** %29, align 8
  %30 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_26HashEqualityThenKeyMatcherIS2_PFbS2_S2_EEENS0_23DefaultAllocationPolicyEE14LookupOrInsertIS2_ZNS8_14LookupOrInsertIZNS8_14LookupOrInsertERKS2_jEUlvE_EEPNS0_20TemplateHashMapEntryIS2_S2_EESC_jRKT_EUlvE_SD_EESG_SJ_jRKT0_RKT1_(%"class.v8::base::TemplateHashMapImpl.696"* %22, i8** nonnull dereferenceable(8) %6, i32 %26, %class.anon.1721* nonnull dereferenceable(8) %4, %class.anon.1719* nonnull dereferenceable(1) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %27) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  %31 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %30, i64 0, i32 1
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  %34 = ptrtoint i8* %32 to i64
  br i1 %33, label %35, label %41

35:                                               ; preds = %19
  %36 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %36, align 4
  %39 = sext i32 %37 to i64
  %40 = inttoptr i64 %39 to i8*
  store i8* %40, i8** %31, align 8
  br label %41

41:                                               ; preds = %19, %35
  %42 = phi i64 [ %39, %35 ], [ %34, %19 ]
  %43 = trunc i64 %42 to i32
  br label %44

44:                                               ; preds = %41, %15
  %45 = phi i32 [ %18, %15 ], [ %43, %41 ]
  br i1 %2, label %48, label %46

46:                                               ; preds = %44
  %47 = load i8*, i8** %10, align 8
  store i8 44, i8* %47, align 1
  br label %48

48:                                               ; preds = %46, %44
  %49 = phi i32 [ 0, %44 ], [ 1, %46 ]
  %50 = load i32, i32* %12, align 8
  %51 = and i32 %50, 7
  br label %52

52:                                               ; preds = %52, %48
  %53 = phi i32 [ 0, %48 ], [ %55, %52 ]
  %54 = phi i32 [ %51, %48 ], [ %56, %52 ]
  %55 = add nuw nsw i32 %53, 1
  %56 = udiv i32 %54, 10
  %57 = icmp ugt i32 %54, 9
  br i1 %57, label %52, label %58

58:                                               ; preds = %52
  %59 = add nuw i32 %55, %49
  %60 = sext i32 %59 to i64
  br label %61

61:                                               ; preds = %61, %58
  %62 = phi i64 [ %67, %61 ], [ %60, %58 ]
  %63 = phi i32 [ %70, %61 ], [ %51, %58 ]
  %64 = urem i32 %63, 10
  %65 = trunc i32 %64 to i8
  %66 = or i8 %65, 48
  %67 = add i64 %62, -1
  %68 = load i8*, i8** %10, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 %67
  store i8 %66, i8* %69, align 1
  %70 = udiv i32 %63, 10
  %71 = icmp ugt i32 %63, 9
  br i1 %71, label %61, label %72

72:                                               ; preds = %61
  %73 = load i8*, i8** %10, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 %60
  store i8 44, i8* %74, align 1
  br label %75

75:                                               ; preds = %75, %72
  %76 = phi i32 [ 0, %72 ], [ %78, %75 ]
  %77 = phi i32 [ %45, %72 ], [ %79, %75 ]
  %78 = add nuw nsw i32 %76, 1
  %79 = udiv i32 %77, 10
  %80 = icmp ugt i32 %77, 9
  br i1 %80, label %75, label %81

81:                                               ; preds = %75
  %82 = add nsw i32 %59, 1
  %83 = add i32 %82, %78
  %84 = sext i32 %83 to i64
  br label %85

85:                                               ; preds = %85, %81
  %86 = phi i64 [ %91, %85 ], [ %84, %81 ]
  %87 = phi i32 [ %94, %85 ], [ %45, %81 ]
  %88 = urem i32 %87, 10
  %89 = trunc i32 %88 to i8
  %90 = or i8 %89, 48
  %91 = add i64 %86, -1
  %92 = load i8*, i8** %10, align 8
  %93 = getelementptr inbounds i8, i8* %92, i64 %91
  store i8 %90, i8* %93, align 1
  %94 = udiv i32 %87, 10
  %95 = icmp ugt i32 %87, 9
  br i1 %95, label %85, label %96

96:                                               ; preds = %85
  %97 = load i8*, i8** %10, align 8
  %98 = getelementptr inbounds i8, i8* %97, i64 %84
  store i8 44, i8* %98, align 1
  %99 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge", %"class.v8::internal::HeapGraphEdge"* %1, i64 0, i32 1
  %100 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %99, align 8
  %101 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %100, i64 0, i32 0
  %102 = load i32, i32* %101, align 8
  %103 = lshr i32 %102, 4
  %104 = mul nuw nsw i32 %103, 7
  br label %105

105:                                              ; preds = %105, %96
  %106 = phi i32 [ 0, %96 ], [ %108, %105 ]
  %107 = phi i32 [ %104, %96 ], [ %109, %105 ]
  %108 = add nuw nsw i32 %106, 1
  %109 = udiv i32 %107, 10
  %110 = icmp ugt i32 %107, 9
  br i1 %110, label %105, label %111

111:                                              ; preds = %105
  %112 = add nsw i32 %83, 1
  %113 = add i32 %112, %108
  %114 = sext i32 %113 to i64
  br label %115

115:                                              ; preds = %115, %111
  %116 = phi i64 [ %121, %115 ], [ %114, %111 ]
  %117 = phi i32 [ %124, %115 ], [ %104, %111 ]
  %118 = urem i32 %117, 10
  %119 = trunc i32 %118 to i8
  %120 = or i8 %119, 48
  %121 = add i64 %116, -1
  %122 = load i8*, i8** %10, align 8
  %123 = getelementptr inbounds i8, i8* %122, i64 %121
  store i8 %120, i8* %123, align 1
  %124 = udiv i32 %117, 10
  %125 = icmp ugt i32 %117, 9
  br i1 %125, label %115, label %126

126:                                              ; preds = %115
  %127 = add nsw i32 %113, 1
  %128 = load i8*, i8** %10, align 8
  %129 = getelementptr inbounds i8, i8* %128, i64 %114
  store i8 10, i8* %129, align 1
  %130 = sext i32 %127 to i64
  %131 = load i8*, i8** %10, align 8
  %132 = getelementptr inbounds i8, i8* %131, i64 %130
  store i8 0, i8* %132, align 1
  %133 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 4
  %134 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %133, align 8
  %135 = load i8*, i8** %10, align 8
  %136 = call i64 @strlen(i8* %135) #22
  %137 = trunc i64 %136 to i32
  call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %134, i8* %135, i32 %137) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26HeapSnapshotJSONSerializer13SerializeNodeEPKNS0_9HeapEntryE(%"class.v8::internal::HeapSnapshotJSONSerializer"*, %"class.v8::internal::HeapEntry"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = alloca %class.anon.1721, align 8
  %4 = alloca %class.anon.1719, align 1
  %5 = alloca i8*, align 8
  %6 = alloca %"class.v8::internal::EmbeddedVector.1539", align 8
  %7 = bitcast %"class.v8::internal::EmbeddedVector.1539"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1539", %"class.v8::internal::EmbeddedVector.1539"* %6, i64 0, i32 1, i64 0
  %9 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1539", %"class.v8::internal::EmbeddedVector.1539"* %6, i64 0, i32 0, i32 0
  store i8* %8, i8** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1539", %"class.v8::internal::EmbeddedVector.1539"* %6, i64 0, i32 0, i32 1
  store i64 82, i64* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp ult i32 %12, 16
  br i1 %13, label %15, label %14

14:                                               ; preds = %2
  store i8 44, i8* %8, align 8
  br label %15

15:                                               ; preds = %2, %14
  %16 = phi i32 [ 1, %14 ], [ 0, %2 ]
  %17 = and i32 %12, 15
  br label %18

18:                                               ; preds = %18, %15
  %19 = phi i32 [ 0, %15 ], [ %21, %18 ]
  %20 = phi i32 [ %17, %15 ], [ %22, %18 ]
  %21 = add nuw nsw i32 %19, 1
  %22 = udiv i32 %20, 10
  %23 = icmp ugt i32 %20, 9
  br i1 %23, label %18, label %24

24:                                               ; preds = %18
  %25 = add nuw i32 %21, %16
  %26 = sext i32 %25 to i64
  %27 = urem i32 %17, 10
  %28 = trunc i32 %27 to i8
  %29 = or i8 %28, 48
  %30 = add nsw i64 %26, -1
  %31 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1539", %"class.v8::internal::EmbeddedVector.1539"* %6, i64 0, i32 1, i64 %30
  store i8 %29, i8* %31, align 1
  %32 = icmp ugt i32 %17, 9
  br i1 %32, label %33, label %44

33:                                               ; preds = %24, %33
  %34 = phi i64 [ %41, %33 ], [ %30, %24 ]
  %35 = phi i32 [ %36, %33 ], [ %17, %24 ]
  %36 = udiv i32 %35, 10
  %37 = load i8*, i8** %9, align 8
  %38 = urem i32 %36, 10
  %39 = trunc i32 %38 to i8
  %40 = or i8 %39, 48
  %41 = add i64 %34, -1
  %42 = getelementptr inbounds i8, i8* %37, i64 %41
  store i8 %40, i8* %42, align 1
  %43 = icmp ugt i32 %35, 99
  br i1 %43, label %33, label %44

44:                                               ; preds = %33, %24
  %45 = add nsw i32 %25, 1
  %46 = load i8*, i8** %9, align 8
  %47 = getelementptr inbounds i8, i8* %46, i64 %26
  store i8 44, i8* %47, align 1
  %48 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 5
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 1, i32 0
  %51 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #13
  store i8* %49, i8** %5, align 8
  %52 = call i64 @strlen(i8* %49) #22
  %53 = trunc i64 %52 to i32
  %54 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIcEEjPKT_im(i8* %49, i32 %53, i64 0) #13
  %55 = getelementptr inbounds %class.anon.1719, %class.anon.1719* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %55) #13
  %56 = bitcast %class.anon.1721* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #13
  %57 = getelementptr inbounds %class.anon.1721, %class.anon.1721* %3, i64 0, i32 0
  store i8** %5, i8*** %57, align 8
  %58 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_26HashEqualityThenKeyMatcherIS2_PFbS2_S2_EEENS0_23DefaultAllocationPolicyEE14LookupOrInsertIS2_ZNS8_14LookupOrInsertIZNS8_14LookupOrInsertERKS2_jEUlvE_EEPNS0_20TemplateHashMapEntryIS2_S2_EESC_jRKT_EUlvE_SD_EESG_SJ_jRKT0_RKT1_(%"class.v8::base::TemplateHashMapImpl.696"* %50, i8** nonnull dereferenceable(8) %5, i32 %54, %class.anon.1721* nonnull dereferenceable(8) %3, %class.anon.1719* nonnull dereferenceable(1) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %55) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #13
  %59 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %58, i64 0, i32 1
  %60 = load i8*, i8** %59, align 8
  %61 = icmp eq i8* %60, null
  %62 = ptrtoint i8* %60 to i64
  br i1 %61, label %63, label %69

63:                                               ; preds = %44
  %64 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %64, align 4
  %67 = sext i32 %65 to i64
  %68 = inttoptr i64 %67 to i8*
  store i8* %68, i8** %59, align 8
  br label %69

69:                                               ; preds = %44, %63
  %70 = phi i64 [ %67, %63 ], [ %62, %44 ]
  %71 = trunc i64 %70 to i32
  br label %72

72:                                               ; preds = %72, %69
  %73 = phi i32 [ 0, %69 ], [ %75, %72 ]
  %74 = phi i32 [ %71, %69 ], [ %76, %72 ]
  %75 = add nuw nsw i32 %73, 1
  %76 = udiv i32 %74, 10
  %77 = icmp ugt i32 %74, 9
  br i1 %77, label %72, label %78

78:                                               ; preds = %72
  %79 = add i32 %45, %75
  %80 = sext i32 %79 to i64
  br label %81

81:                                               ; preds = %81, %78
  %82 = phi i64 [ %87, %81 ], [ %80, %78 ]
  %83 = phi i32 [ %90, %81 ], [ %71, %78 ]
  %84 = urem i32 %83, 10
  %85 = trunc i32 %84 to i8
  %86 = or i8 %85, 48
  %87 = add i64 %82, -1
  %88 = load i8*, i8** %9, align 8
  %89 = getelementptr inbounds i8, i8* %88, i64 %87
  store i8 %86, i8* %89, align 1
  %90 = udiv i32 %83, 10
  %91 = icmp ugt i32 %83, 9
  br i1 %91, label %81, label %92

92:                                               ; preds = %81
  %93 = load i8*, i8** %9, align 8
  %94 = getelementptr inbounds i8, i8* %93, i64 %80
  store i8 44, i8* %94, align 1
  %95 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 6
  %96 = load i32, i32* %95, align 8
  br label %97

97:                                               ; preds = %97, %92
  %98 = phi i32 [ 0, %92 ], [ %100, %97 ]
  %99 = phi i32 [ %96, %92 ], [ %101, %97 ]
  %100 = add nuw nsw i32 %98, 1
  %101 = udiv i32 %99, 10
  %102 = icmp ugt i32 %99, 9
  br i1 %102, label %97, label %103

103:                                              ; preds = %97
  %104 = add nsw i32 %79, 1
  %105 = add i32 %104, %100
  %106 = sext i32 %105 to i64
  br label %107

107:                                              ; preds = %107, %103
  %108 = phi i64 [ %113, %107 ], [ %106, %103 ]
  %109 = phi i32 [ %116, %107 ], [ %96, %103 ]
  %110 = urem i32 %109, 10
  %111 = trunc i32 %110 to i8
  %112 = or i8 %111, 48
  %113 = add i64 %108, -1
  %114 = load i8*, i8** %9, align 8
  %115 = getelementptr inbounds i8, i8* %114, i64 %113
  store i8 %112, i8* %115, align 1
  %116 = udiv i32 %109, 10
  %117 = icmp ugt i32 %109, 9
  br i1 %117, label %107, label %118

118:                                              ; preds = %107
  %119 = load i8*, i8** %9, align 8
  %120 = getelementptr inbounds i8, i8* %119, i64 %106
  store i8 44, i8* %120, align 1
  %121 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 2
  %122 = bitcast [6 x i8]* %121 to i48*
  %123 = load i48, i48* %122, align 8
  %124 = zext i48 %123 to i64
  br label %125

125:                                              ; preds = %125, %118
  %126 = phi i32 [ 0, %118 ], [ %128, %125 ]
  %127 = phi i64 [ %124, %118 ], [ %129, %125 ]
  %128 = add nuw nsw i32 %126, 1
  %129 = udiv i64 %127, 10
  %130 = icmp ugt i64 %127, 9
  br i1 %130, label %125, label %131

131:                                              ; preds = %125
  %132 = add nsw i32 %105, 1
  %133 = add i32 %132, %128
  %134 = sext i32 %133 to i64
  br label %135

135:                                              ; preds = %135, %131
  %136 = phi i64 [ %141, %135 ], [ %134, %131 ]
  %137 = phi i64 [ %144, %135 ], [ %124, %131 ]
  %138 = urem i64 %137, 10
  %139 = trunc i64 %138 to i8
  %140 = or i8 %139, 48
  %141 = add i64 %136, -1
  %142 = load i8*, i8** %9, align 8
  %143 = getelementptr inbounds i8, i8* %142, i64 %141
  store i8 %140, i8* %143, align 1
  %144 = udiv i64 %137, 10
  %145 = icmp ugt i64 %137, 9
  br i1 %145, label %135, label %146

146:                                              ; preds = %135
  %147 = add nsw i32 %133, 1
  %148 = load i8*, i8** %9, align 8
  %149 = getelementptr inbounds i8, i8* %148, i64 %134
  store i8 44, i8* %149, align 1
  %150 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 4
  %151 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %150, align 8
  %152 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %151, i64 0, i32 6, i32 0, i32 0
  %153 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %152, align 8
  %154 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 1, i32 0
  %155 = load i32, i32* %154, align 4
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %153, i64 %156
  %158 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %157 to i64
  %159 = load i32, i32* %11, align 8
  %160 = icmp ult i32 %159, 16
  br i1 %160, label %182, label %161

161:                                              ; preds = %146
  %162 = lshr i32 %159, 4
  %163 = add nsw i32 %162, -1
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %151, i64 0, i32 4, i32 0, i32 1
  %166 = load i64, i64* %165, align 8
  %167 = add i64 %166, %164
  %168 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %151, i64 0, i32 4, i32 0, i32 0, i32 1
  %169 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %168, align 8
  %170 = udiv i64 %167, 102
  %171 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %169, i64 %170
  %172 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %171, align 8
  %173 = urem i64 %167, 102
  %174 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %172, i64 %173, i32 4
  %175 = load %"class.v8::internal::HeapSnapshot"*, %"class.v8::internal::HeapSnapshot"** %174, align 8
  %176 = getelementptr inbounds %"class.v8::internal::HeapSnapshot", %"class.v8::internal::HeapSnapshot"* %175, i64 0, i32 6, i32 0, i32 0
  %177 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %176, align 8
  %178 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %172, i64 %173, i32 1, i32 0
  %179 = load i32, i32* %178, align 4
  %180 = zext i32 %179 to i64
  %181 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %177, i64 %180
  br label %182

182:                                              ; preds = %146, %161
  %183 = phi %"class.v8::internal::HeapGraphEdge"** [ %181, %161 ], [ %153, %146 ]
  %184 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %183 to i64
  %185 = sub i64 %158, %184
  %186 = lshr exact i64 %185, 3
  %187 = trunc i64 %186 to i32
  br label %188

188:                                              ; preds = %188, %182
  %189 = phi i32 [ 0, %182 ], [ %191, %188 ]
  %190 = phi i32 [ %187, %182 ], [ %192, %188 ]
  %191 = add nuw nsw i32 %189, 1
  %192 = udiv i32 %190, 10
  %193 = icmp ugt i32 %190, 9
  br i1 %193, label %188, label %194

194:                                              ; preds = %188
  %195 = add i32 %147, %191
  %196 = sext i32 %195 to i64
  br label %197

197:                                              ; preds = %197, %194
  %198 = phi i64 [ %203, %197 ], [ %196, %194 ]
  %199 = phi i32 [ %206, %197 ], [ %187, %194 ]
  %200 = urem i32 %199, 10
  %201 = trunc i32 %200 to i8
  %202 = or i8 %201, 48
  %203 = add i64 %198, -1
  %204 = load i8*, i8** %9, align 8
  %205 = getelementptr inbounds i8, i8* %204, i64 %203
  store i8 %202, i8* %205, align 1
  %206 = udiv i32 %199, 10
  %207 = icmp ugt i32 %199, 9
  br i1 %207, label %197, label %208

208:                                              ; preds = %197
  %209 = load i8*, i8** %9, align 8
  %210 = getelementptr inbounds i8, i8* %209, i64 %196
  store i8 44, i8* %210, align 1
  %211 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 7
  %212 = load i32, i32* %211, align 4
  br label %213

213:                                              ; preds = %213, %208
  %214 = phi i32 [ 0, %208 ], [ %216, %213 ]
  %215 = phi i32 [ %212, %208 ], [ %217, %213 ]
  %216 = add nuw nsw i32 %214, 1
  %217 = udiv i32 %215, 10
  %218 = icmp ugt i32 %215, 9
  br i1 %218, label %213, label %219

219:                                              ; preds = %213
  %220 = add nsw i32 %195, 1
  %221 = add i32 %220, %216
  %222 = sext i32 %221 to i64
  br label %223

223:                                              ; preds = %223, %219
  %224 = phi i64 [ %229, %223 ], [ %222, %219 ]
  %225 = phi i32 [ %232, %223 ], [ %212, %219 ]
  %226 = urem i32 %225, 10
  %227 = trunc i32 %226 to i8
  %228 = or i8 %227, 48
  %229 = add i64 %224, -1
  %230 = load i8*, i8** %9, align 8
  %231 = getelementptr inbounds i8, i8* %230, i64 %229
  store i8 %228, i8* %231, align 1
  %232 = udiv i32 %225, 10
  %233 = icmp ugt i32 %225, 9
  br i1 %233, label %223, label %234

234:                                              ; preds = %223
  %235 = load i8*, i8** %9, align 8
  %236 = getelementptr inbounds i8, i8* %235, i64 %222
  store i8 44, i8* %236, align 1
  %237 = getelementptr inbounds %"class.v8::internal::HeapEntry", %"class.v8::internal::HeapEntry"* %1, i64 0, i32 3
  %238 = load i8, i8* %237, align 2
  br label %239

239:                                              ; preds = %239, %234
  %240 = phi i32 [ 0, %234 ], [ %242, %239 ]
  %241 = phi i8 [ %238, %234 ], [ %243, %239 ]
  %242 = add nuw nsw i32 %240, 1
  %243 = udiv i8 %241, 10
  %244 = icmp ugt i8 %241, 9
  br i1 %244, label %239, label %245

245:                                              ; preds = %239
  %246 = add nsw i32 %221, 1
  %247 = add i32 %246, %242
  %248 = sext i32 %247 to i64
  br label %249

249:                                              ; preds = %249, %245
  %250 = phi i64 [ %254, %249 ], [ %248, %245 ]
  %251 = phi i8 [ %257, %249 ], [ %238, %245 ]
  %252 = urem i8 %251, 10
  %253 = or i8 %252, 48
  %254 = add i64 %250, -1
  %255 = load i8*, i8** %9, align 8
  %256 = getelementptr inbounds i8, i8* %255, i64 %254
  store i8 %253, i8* %256, align 1
  %257 = udiv i8 %251, 10
  %258 = icmp ugt i8 %251, 9
  br i1 %258, label %249, label %259

259:                                              ; preds = %249
  %260 = add nsw i32 %247, 1
  %261 = load i8*, i8** %9, align 8
  %262 = getelementptr inbounds i8, i8* %261, i64 %248
  store i8 10, i8* %262, align 1
  %263 = sext i32 %260 to i64
  %264 = load i8*, i8** %9, align 8
  %265 = getelementptr inbounds i8, i8* %264, i64 %263
  store i8 0, i8* %265, align 1
  %266 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 4
  %267 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %266, align 8
  %268 = load i8*, i8** %9, align 8
  %269 = call i64 @strlen(i8* %268) #22
  %270 = trunc i64 %269 to i32
  call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %267, i8* %268, i32 %270) #13
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26HeapSnapshotJSONSerializer18SerializeTraceNodeEPNS0_19AllocationTraceNodeE(%"class.v8::internal::HeapSnapshotJSONSerializer"* nocapture readonly, %"class.v8::internal::AllocationTraceNode"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.v8::internal::EmbeddedVector.1542", align 8
  %4 = bitcast %"class.v8::internal::EmbeddedVector.1542"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1542", %"class.v8::internal::EmbeddedVector.1542"* %3, i64 0, i32 1, i64 0
  %6 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1542", %"class.v8::internal::EmbeddedVector.1542"* %3, i64 0, i32 0, i32 0
  store i8* %5, i8** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1542", %"class.v8::internal::EmbeddedVector.1542"* %3, i64 0, i32 0, i32 1
  store i64 46, i64* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %1, i64 0, i32 4
  %9 = load i32, i32* %8, align 4
  br label %10

10:                                               ; preds = %10, %2
  %11 = phi i32 [ 0, %2 ], [ %13, %10 ]
  %12 = phi i32 [ %9, %2 ], [ %14, %10 ]
  %13 = add nuw nsw i32 %11, 1
  %14 = udiv i32 %12, 10
  %15 = icmp ugt i32 %12, 9
  br i1 %15, label %10, label %16

16:                                               ; preds = %10
  %17 = zext i32 %13 to i64
  %18 = urem i32 %9, 10
  %19 = trunc i32 %18 to i8
  %20 = or i8 %19, 48
  %21 = add nsw i64 %17, -1
  %22 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1542", %"class.v8::internal::EmbeddedVector.1542"* %3, i64 0, i32 1, i64 %21
  store i8 %20, i8* %22, align 1
  %23 = icmp ugt i32 %9, 9
  br i1 %23, label %24, label %35

24:                                               ; preds = %16, %24
  %25 = phi i64 [ %32, %24 ], [ %21, %16 ]
  %26 = phi i32 [ %27, %24 ], [ %9, %16 ]
  %27 = udiv i32 %26, 10
  %28 = load i8*, i8** %6, align 8
  %29 = urem i32 %27, 10
  %30 = trunc i32 %29 to i8
  %31 = or i8 %30, 48
  %32 = add i64 %25, -1
  %33 = getelementptr inbounds i8, i8* %28, i64 %32
  store i8 %31, i8* %33, align 1
  %34 = icmp ugt i32 %26, 99
  br i1 %34, label %24, label %35

35:                                               ; preds = %24, %16
  %36 = load i8*, i8** %6, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %17
  store i8 44, i8* %37, align 1
  %38 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %1, i64 0, i32 1
  %39 = load i32, i32* %38, align 8
  br label %40

40:                                               ; preds = %40, %35
  %41 = phi i32 [ 0, %35 ], [ %43, %40 ]
  %42 = phi i32 [ %39, %35 ], [ %44, %40 ]
  %43 = add nuw nsw i32 %41, 1
  %44 = udiv i32 %42, 10
  %45 = icmp ugt i32 %42, 9
  br i1 %45, label %40, label %46

46:                                               ; preds = %40
  %47 = add nuw nsw i32 %11, 2
  %48 = add nuw i32 %47, %43
  %49 = sext i32 %48 to i64
  br label %50

50:                                               ; preds = %50, %46
  %51 = phi i64 [ %56, %50 ], [ %49, %46 ]
  %52 = phi i32 [ %59, %50 ], [ %39, %46 ]
  %53 = urem i32 %52, 10
  %54 = trunc i32 %53 to i8
  %55 = or i8 %54, 48
  %56 = add i64 %51, -1
  %57 = load i8*, i8** %6, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %56
  store i8 %55, i8* %58, align 1
  %59 = udiv i32 %52, 10
  %60 = icmp ugt i32 %52, 9
  br i1 %60, label %50, label %61

61:                                               ; preds = %50
  %62 = load i8*, i8** %6, align 8
  %63 = getelementptr inbounds i8, i8* %62, i64 %49
  store i8 44, i8* %63, align 1
  %64 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %1, i64 0, i32 3
  %65 = load i32, i32* %64, align 8
  br label %66

66:                                               ; preds = %66, %61
  %67 = phi i32 [ 0, %61 ], [ %69, %66 ]
  %68 = phi i32 [ %65, %61 ], [ %70, %66 ]
  %69 = add nuw nsw i32 %67, 1
  %70 = udiv i32 %68, 10
  %71 = icmp ugt i32 %68, 9
  br i1 %71, label %66, label %72

72:                                               ; preds = %66
  %73 = add nsw i32 %48, 1
  %74 = add i32 %73, %69
  %75 = sext i32 %74 to i64
  br label %76

76:                                               ; preds = %76, %72
  %77 = phi i64 [ %82, %76 ], [ %75, %72 ]
  %78 = phi i32 [ %85, %76 ], [ %65, %72 ]
  %79 = urem i32 %78, 10
  %80 = trunc i32 %79 to i8
  %81 = or i8 %80, 48
  %82 = add i64 %77, -1
  %83 = load i8*, i8** %6, align 8
  %84 = getelementptr inbounds i8, i8* %83, i64 %82
  store i8 %81, i8* %84, align 1
  %85 = udiv i32 %78, 10
  %86 = icmp ugt i32 %78, 9
  br i1 %86, label %76, label %87

87:                                               ; preds = %76
  %88 = load i8*, i8** %6, align 8
  %89 = getelementptr inbounds i8, i8* %88, i64 %75
  store i8 44, i8* %89, align 1
  %90 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %1, i64 0, i32 2
  %91 = load i32, i32* %90, align 4
  br label %92

92:                                               ; preds = %92, %87
  %93 = phi i32 [ 0, %87 ], [ %95, %92 ]
  %94 = phi i32 [ %91, %87 ], [ %96, %92 ]
  %95 = add nuw nsw i32 %93, 1
  %96 = udiv i32 %94, 10
  %97 = icmp ugt i32 %94, 9
  br i1 %97, label %92, label %98

98:                                               ; preds = %92
  %99 = add nsw i32 %74, 1
  %100 = add i32 %99, %95
  %101 = sext i32 %100 to i64
  br label %102

102:                                              ; preds = %102, %98
  %103 = phi i64 [ %108, %102 ], [ %101, %98 ]
  %104 = phi i32 [ %111, %102 ], [ %91, %98 ]
  %105 = urem i32 %104, 10
  %106 = trunc i32 %105 to i8
  %107 = or i8 %106, 48
  %108 = add i64 %103, -1
  %109 = load i8*, i8** %6, align 8
  %110 = getelementptr inbounds i8, i8* %109, i64 %108
  store i8 %107, i8* %110, align 1
  %111 = udiv i32 %104, 10
  %112 = icmp ugt i32 %104, 9
  br i1 %112, label %102, label %113

113:                                              ; preds = %102
  %114 = add nsw i32 %100, 1
  %115 = load i8*, i8** %6, align 8
  %116 = getelementptr inbounds i8, i8* %115, i64 %101
  store i8 44, i8* %116, align 1
  %117 = add nsw i32 %100, 2
  %118 = sext i32 %114 to i64
  %119 = load i8*, i8** %6, align 8
  %120 = getelementptr inbounds i8, i8* %119, i64 %118
  store i8 91, i8* %120, align 1
  %121 = sext i32 %117 to i64
  %122 = load i8*, i8** %6, align 8
  %123 = getelementptr inbounds i8, i8* %122, i64 %121
  store i8 0, i8* %123, align 1
  %124 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 4
  %125 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %124, align 8
  %126 = load i8*, i8** %6, align 8
  %127 = call i64 @strlen(i8* %126) #22
  %128 = trunc i64 %127 to i32
  call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %125, i8* %126, i32 %128) #13
  %129 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %1, i64 0, i32 5, i32 0, i32 0
  %130 = load %"class.v8::internal::AllocationTraceNode"**, %"class.v8::internal::AllocationTraceNode"*** %129, align 8
  %131 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %1, i64 0, i32 5, i32 0, i32 1
  %132 = load %"class.v8::internal::AllocationTraceNode"**, %"class.v8::internal::AllocationTraceNode"*** %131, align 8
  %133 = icmp eq %"class.v8::internal::AllocationTraceNode"** %130, %132
  br i1 %133, label %134, label %164

134:                                              ; preds = %199, %113
  %135 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %124, align 8
  %136 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %135, i64 0, i32 4
  %137 = load i32, i32* %136, align 8
  %138 = add nsw i32 %137, 1
  store i32 %138, i32* %136, align 8
  %139 = sext i32 %137 to i64
  %140 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %135, i64 0, i32 3, i32 0, i32 0
  %141 = load i8*, i8** %140, align 8
  %142 = getelementptr inbounds i8, i8* %141, i64 %139
  store i8 93, i8* %142, align 1
  %143 = load i32, i32* %136, align 8
  %144 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %135, i64 0, i32 1
  %145 = load i32, i32* %144, align 8
  %146 = icmp eq i32 %143, %145
  br i1 %146, label %147, label %163

147:                                              ; preds = %134
  %148 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %135, i64 0, i32 5
  %149 = load i8, i8* %148, align 4, !range !4
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %151, label %163

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %135, i64 0, i32 0
  %153 = load %"class.v8::OutputStream"*, %"class.v8::OutputStream"** %152, align 8
  %154 = load i8*, i8** %140, align 8
  %155 = bitcast %"class.v8::OutputStream"* %153 to i32 (%"class.v8::OutputStream"*, i8*, i32)***
  %156 = load i32 (%"class.v8::OutputStream"*, i8*, i32)**, i32 (%"class.v8::OutputStream"*, i8*, i32)*** %155, align 8
  %157 = getelementptr inbounds i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %156, i64 4
  %158 = load i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %157, align 8
  %159 = call i32 %158(%"class.v8::OutputStream"* %153, i8* %154, i32 %143) #13
  %160 = icmp eq i32 %159, 1
  br i1 %160, label %161, label %162

161:                                              ; preds = %151
  store i8 1, i8* %148, align 4
  br label %162

162:                                              ; preds = %161, %151
  store i32 0, i32* %136, align 8
  br label %163

163:                                              ; preds = %134, %147, %162
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #13
  ret void

164:                                              ; preds = %113, %199
  %165 = phi i32 [ %168, %199 ], [ 0, %113 ]
  %166 = phi %"class.v8::internal::AllocationTraceNode"** [ %200, %199 ], [ %130, %113 ]
  %167 = load %"class.v8::internal::AllocationTraceNode"*, %"class.v8::internal::AllocationTraceNode"** %166, align 8
  %168 = add nuw nsw i32 %165, 1
  %169 = icmp eq i32 %165, 0
  br i1 %169, label %199, label %170

170:                                              ; preds = %164
  %171 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %124, align 8
  %172 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %171, i64 0, i32 4
  %173 = load i32, i32* %172, align 8
  %174 = add nsw i32 %173, 1
  store i32 %174, i32* %172, align 8
  %175 = sext i32 %173 to i64
  %176 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %171, i64 0, i32 3, i32 0, i32 0
  %177 = load i8*, i8** %176, align 8
  %178 = getelementptr inbounds i8, i8* %177, i64 %175
  store i8 44, i8* %178, align 1
  %179 = load i32, i32* %172, align 8
  %180 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %171, i64 0, i32 1
  %181 = load i32, i32* %180, align 8
  %182 = icmp eq i32 %179, %181
  br i1 %182, label %183, label %199

183:                                              ; preds = %170
  %184 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %171, i64 0, i32 5
  %185 = load i8, i8* %184, align 4, !range !4
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %187, label %199

187:                                              ; preds = %183
  %188 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %171, i64 0, i32 0
  %189 = load %"class.v8::OutputStream"*, %"class.v8::OutputStream"** %188, align 8
  %190 = load i8*, i8** %176, align 8
  %191 = bitcast %"class.v8::OutputStream"* %189 to i32 (%"class.v8::OutputStream"*, i8*, i32)***
  %192 = load i32 (%"class.v8::OutputStream"*, i8*, i32)**, i32 (%"class.v8::OutputStream"*, i8*, i32)*** %191, align 8
  %193 = getelementptr inbounds i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %192, i64 4
  %194 = load i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %193, align 8
  %195 = call i32 %194(%"class.v8::OutputStream"* %189, i8* %190, i32 %179) #13
  %196 = icmp eq i32 %195, 1
  br i1 %196, label %197, label %198

197:                                              ; preds = %187
  store i8 1, i8* %184, align 4
  br label %198

198:                                              ; preds = %197, %187
  store i32 0, i32* %172, align 8
  br label %199

199:                                              ; preds = %198, %183, %170, %164
  call void @_ZN2v88internal26HeapSnapshotJSONSerializer18SerializeTraceNodeEPNS0_19AllocationTraceNodeE(%"class.v8::internal::HeapSnapshotJSONSerializer"* %0, %"class.v8::internal::AllocationTraceNode"* %167)
  %200 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode"*, %"class.v8::internal::AllocationTraceNode"** %166, i64 1
  %201 = icmp eq %"class.v8::internal::AllocationTraceNode"** %200, %132
  br i1 %201, label %134, label %164
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26HeapSnapshotJSONSerializer15SerializeStringEPKh(%"class.v8::internal::HeapSnapshotJSONSerializer"* nocapture readonly, i8*) local_unnamed_addr #2 align 2 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 4
  %5 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %5, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = add nsw i32 %7, 1
  store i32 %8, i32* %6, align 8
  %9 = sext i32 %7 to i64
  %10 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %5, i64 0, i32 3, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %9
  store i8 10, i8* %12, align 1
  %13 = load i32, i32* %6, align 8
  %14 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %5, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %17, label %33

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %5, i64 0, i32 5
  %19 = load i8, i8* %18, align 4, !range !4
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %5, i64 0, i32 0
  %23 = load %"class.v8::OutputStream"*, %"class.v8::OutputStream"** %22, align 8
  %24 = load i8*, i8** %10, align 8
  %25 = bitcast %"class.v8::OutputStream"* %23 to i32 (%"class.v8::OutputStream"*, i8*, i32)***
  %26 = load i32 (%"class.v8::OutputStream"*, i8*, i32)**, i32 (%"class.v8::OutputStream"*, i8*, i32)*** %25, align 8
  %27 = getelementptr inbounds i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %26, i64 4
  %28 = load i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %27, align 8
  %29 = tail call i32 %28(%"class.v8::OutputStream"* %23, i8* %24, i32 %13) #13
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %32

31:                                               ; preds = %21
  store i8 1, i8* %18, align 4
  br label %32

32:                                               ; preds = %31, %21
  store i32 0, i32* %6, align 8
  br label %33

33:                                               ; preds = %2, %17, %32
  %34 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %4, align 8
  %35 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %34, i64 0, i32 4
  %36 = load i32, i32* %35, align 8
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %35, align 8
  %38 = sext i32 %36 to i64
  %39 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %34, i64 0, i32 3, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 %38
  store i8 34, i8* %41, align 1
  %42 = load i32, i32* %35, align 8
  %43 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %34, i64 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %42, %44
  br i1 %45, label %46, label %62

46:                                               ; preds = %33
  %47 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %34, i64 0, i32 5
  %48 = load i8, i8* %47, align 4, !range !4
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %62

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %34, i64 0, i32 0
  %52 = load %"class.v8::OutputStream"*, %"class.v8::OutputStream"** %51, align 8
  %53 = load i8*, i8** %39, align 8
  %54 = bitcast %"class.v8::OutputStream"* %52 to i32 (%"class.v8::OutputStream"*, i8*, i32)***
  %55 = load i32 (%"class.v8::OutputStream"*, i8*, i32)**, i32 (%"class.v8::OutputStream"*, i8*, i32)*** %54, align 8
  %56 = getelementptr inbounds i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %55, i64 4
  %57 = load i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %56, align 8
  %58 = tail call i32 %57(%"class.v8::OutputStream"* %52, i8* %53, i32 %42) #13
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %61

60:                                               ; preds = %50
  store i8 1, i8* %47, align 4
  br label %61

61:                                               ; preds = %60, %50
  store i32 0, i32* %35, align 8
  br label %62

62:                                               ; preds = %33, %46, %61
  %63 = bitcast i64* %3 to i8*
  br label %64

64:                                               ; preds = %221, %62
  %65 = phi i8* [ %1, %62 ], [ %223, %221 ]
  %66 = load i8, i8* %65, align 1
  switch i8 %66, label %136 [
    i8 0, label %224
    i8 8, label %67
    i8 12, label %69
    i8 10, label %71
    i8 13, label %73
    i8 9, label %75
    i8 34, label %77
    i8 92, label %77
  ]

67:                                               ; preds = %64
  %68 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %4, align 8
  call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %68, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.378, i64 0, i64 0), i32 2) #13
  br label %221

69:                                               ; preds = %64
  %70 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %4, align 8
  call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %70, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.379, i64 0, i64 0), i32 2) #13
  br label %221

71:                                               ; preds = %64
  %72 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %4, align 8
  call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %72, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i32 2) #13
  br label %221

73:                                               ; preds = %64
  %74 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %4, align 8
  call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %74, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.380, i64 0, i64 0), i32 2) #13
  br label %221

75:                                               ; preds = %64
  %76 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %4, align 8
  call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %76, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.381, i64 0, i64 0), i32 2) #13
  br label %221

77:                                               ; preds = %64, %64
  %78 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %4, align 8
  %79 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %78, i64 0, i32 4
  %80 = load i32, i32* %79, align 8
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %79, align 8
  %82 = sext i32 %80 to i64
  %83 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %78, i64 0, i32 3, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  %85 = getelementptr inbounds i8, i8* %84, i64 %82
  store i8 92, i8* %85, align 1
  %86 = load i32, i32* %79, align 8
  %87 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %78, i64 0, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %86, %88
  br i1 %89, label %90, label %106

90:                                               ; preds = %77
  %91 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %78, i64 0, i32 5
  %92 = load i8, i8* %91, align 4, !range !4
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %94, label %106

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %78, i64 0, i32 0
  %96 = load %"class.v8::OutputStream"*, %"class.v8::OutputStream"** %95, align 8
  %97 = load i8*, i8** %83, align 8
  %98 = bitcast %"class.v8::OutputStream"* %96 to i32 (%"class.v8::OutputStream"*, i8*, i32)***
  %99 = load i32 (%"class.v8::OutputStream"*, i8*, i32)**, i32 (%"class.v8::OutputStream"*, i8*, i32)*** %98, align 8
  %100 = getelementptr inbounds i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %99, i64 4
  %101 = load i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %100, align 8
  %102 = call i32 %101(%"class.v8::OutputStream"* %96, i8* %97, i32 %86) #13
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %104, label %105

104:                                              ; preds = %94
  store i8 1, i8* %91, align 4
  br label %105

105:                                              ; preds = %104, %94
  store i32 0, i32* %79, align 8
  br label %106

106:                                              ; preds = %77, %90, %105
  %107 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %4, align 8
  %108 = load i8, i8* %65, align 1
  %109 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %107, i64 0, i32 4
  %110 = load i32, i32* %109, align 8
  %111 = add nsw i32 %110, 1
  store i32 %111, i32* %109, align 8
  %112 = sext i32 %110 to i64
  %113 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %107, i64 0, i32 3, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  %115 = getelementptr inbounds i8, i8* %114, i64 %112
  store i8 %108, i8* %115, align 1
  %116 = load i32, i32* %109, align 8
  %117 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %107, i64 0, i32 1
  %118 = load i32, i32* %117, align 8
  %119 = icmp eq i32 %116, %118
  br i1 %119, label %120, label %221

120:                                              ; preds = %106
  %121 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %107, i64 0, i32 5
  %122 = load i8, i8* %121, align 4, !range !4
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %221

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %107, i64 0, i32 0
  %126 = load %"class.v8::OutputStream"*, %"class.v8::OutputStream"** %125, align 8
  %127 = load i8*, i8** %113, align 8
  %128 = bitcast %"class.v8::OutputStream"* %126 to i32 (%"class.v8::OutputStream"*, i8*, i32)***
  %129 = load i32 (%"class.v8::OutputStream"*, i8*, i32)**, i32 (%"class.v8::OutputStream"*, i8*, i32)*** %128, align 8
  %130 = getelementptr inbounds i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %129, i64 4
  %131 = load i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %130, align 8
  %132 = call i32 %131(%"class.v8::OutputStream"* %126, i8* %127, i32 %116) #13
  %133 = icmp eq i32 %132, 1
  br i1 %133, label %134, label %135

134:                                              ; preds = %124
  store i8 1, i8* %121, align 4
  br label %135

135:                                              ; preds = %134, %124
  store i32 0, i32* %109, align 8
  br label %221

136:                                              ; preds = %64
  %137 = icmp ugt i8 %66, 31
  %138 = icmp sgt i8 %66, -1
  %139 = and i1 %137, %138
  br i1 %139, label %140, label %169

140:                                              ; preds = %136
  %141 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %4, align 8
  %142 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %141, i64 0, i32 4
  %143 = load i32, i32* %142, align 8
  %144 = add nsw i32 %143, 1
  store i32 %144, i32* %142, align 8
  %145 = sext i32 %143 to i64
  %146 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %141, i64 0, i32 3, i32 0, i32 0
  %147 = load i8*, i8** %146, align 8
  %148 = getelementptr inbounds i8, i8* %147, i64 %145
  store i8 %66, i8* %148, align 1
  %149 = load i32, i32* %142, align 8
  %150 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %141, i64 0, i32 1
  %151 = load i32, i32* %150, align 8
  %152 = icmp eq i32 %149, %151
  br i1 %152, label %153, label %221

153:                                              ; preds = %140
  %154 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %141, i64 0, i32 5
  %155 = load i8, i8* %154, align 4, !range !4
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %157, label %221

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %141, i64 0, i32 0
  %159 = load %"class.v8::OutputStream"*, %"class.v8::OutputStream"** %158, align 8
  %160 = load i8*, i8** %146, align 8
  %161 = bitcast %"class.v8::OutputStream"* %159 to i32 (%"class.v8::OutputStream"*, i8*, i32)***
  %162 = load i32 (%"class.v8::OutputStream"*, i8*, i32)**, i32 (%"class.v8::OutputStream"*, i8*, i32)*** %161, align 8
  %163 = getelementptr inbounds i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %162, i64 4
  %164 = load i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %163, align 8
  %165 = call i32 %164(%"class.v8::OutputStream"* %159, i8* %160, i32 %149) #13
  %166 = icmp eq i32 %165, 1
  br i1 %166, label %167, label %168

167:                                              ; preds = %157
  store i8 1, i8* %154, align 4
  br label %168

168:                                              ; preds = %167, %157
  store i32 0, i32* %142, align 8
  br label %221

169:                                              ; preds = %136
  %170 = icmp ult i8 %66, 32
  br i1 %170, label %171, label %174

171:                                              ; preds = %169
  %172 = zext i8 %66 to i32
  %173 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %4, align 8
  call fastcc void @_ZN2v88internalL10WriteUCharEPNS0_18OutputStreamWriterEj(%"class.v8::internal::OutputStreamWriter"* %173, i32 %172)
  br label %221

174:                                              ; preds = %169
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #13
  store i64 0, i64* %3, align 8
  %175 = getelementptr inbounds i8, i8* %65, i64 1
  %176 = load i8, i8* %175, align 1
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %182, label %178

178:                                              ; preds = %174
  %179 = getelementptr inbounds i8, i8* %65, i64 2
  %180 = load i8, i8* %179, align 1
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %182, label %254

182:                                              ; preds = %258, %254, %178, %174
  %183 = phi i64 [ 1, %174 ], [ 2, %178 ], [ 3, %254 ], [ %262, %258 ]
  %184 = call i32 @_ZN7unibrow4Utf814CalculateValueEPKhmPm(i8* %65, i64 %183, i64* nonnull %3) #13
  %185 = icmp eq i32 %184, 65533
  %186 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %4, align 8
  br i1 %185, label %191, label %187

187:                                              ; preds = %182
  call fastcc void @_ZN2v88internalL10WriteUCharEPNS0_18OutputStreamWriterEj(%"class.v8::internal::OutputStreamWriter"* %186, i32 %184)
  %188 = load i64, i64* %3, align 8
  %189 = add i64 %188, -1
  %190 = getelementptr inbounds i8, i8* %65, i64 %189
  br label %219

191:                                              ; preds = %182
  %192 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %186, i64 0, i32 4
  %193 = load i32, i32* %192, align 8
  %194 = add nsw i32 %193, 1
  store i32 %194, i32* %192, align 8
  %195 = sext i32 %193 to i64
  %196 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %186, i64 0, i32 3, i32 0, i32 0
  %197 = load i8*, i8** %196, align 8
  %198 = getelementptr inbounds i8, i8* %197, i64 %195
  store i8 63, i8* %198, align 1
  %199 = load i32, i32* %192, align 8
  %200 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %186, i64 0, i32 1
  %201 = load i32, i32* %200, align 8
  %202 = icmp eq i32 %199, %201
  br i1 %202, label %203, label %219

203:                                              ; preds = %191
  %204 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %186, i64 0, i32 5
  %205 = load i8, i8* %204, align 4, !range !4
  %206 = icmp eq i8 %205, 0
  br i1 %206, label %207, label %219

207:                                              ; preds = %203
  %208 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %186, i64 0, i32 0
  %209 = load %"class.v8::OutputStream"*, %"class.v8::OutputStream"** %208, align 8
  %210 = load i8*, i8** %196, align 8
  %211 = bitcast %"class.v8::OutputStream"* %209 to i32 (%"class.v8::OutputStream"*, i8*, i32)***
  %212 = load i32 (%"class.v8::OutputStream"*, i8*, i32)**, i32 (%"class.v8::OutputStream"*, i8*, i32)*** %211, align 8
  %213 = getelementptr inbounds i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %212, i64 4
  %214 = load i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %213, align 8
  %215 = call i32 %214(%"class.v8::OutputStream"* %209, i8* %210, i32 %199) #13
  %216 = icmp eq i32 %215, 1
  br i1 %216, label %217, label %218

217:                                              ; preds = %207
  store i8 1, i8* %204, align 4
  br label %218

218:                                              ; preds = %217, %207
  store i32 0, i32* %192, align 8
  br label %219

219:                                              ; preds = %218, %203, %191, %187
  %220 = phi i8* [ %190, %187 ], [ %65, %191 ], [ %65, %203 ], [ %65, %218 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #13
  br label %221

221:                                              ; preds = %168, %153, %140, %135, %120, %106, %171, %219, %75, %73, %71, %69, %67
  %222 = phi i8* [ %65, %171 ], [ %220, %219 ], [ %65, %75 ], [ %65, %73 ], [ %65, %71 ], [ %65, %69 ], [ %65, %67 ], [ %65, %106 ], [ %65, %120 ], [ %65, %135 ], [ %65, %140 ], [ %65, %153 ], [ %65, %168 ]
  %223 = getelementptr inbounds i8, i8* %222, i64 1
  br label %64

224:                                              ; preds = %64
  %225 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %4, align 8
  %226 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %225, i64 0, i32 4
  %227 = load i32, i32* %226, align 8
  %228 = add nsw i32 %227, 1
  store i32 %228, i32* %226, align 8
  %229 = sext i32 %227 to i64
  %230 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %225, i64 0, i32 3, i32 0, i32 0
  %231 = load i8*, i8** %230, align 8
  %232 = getelementptr inbounds i8, i8* %231, i64 %229
  store i8 34, i8* %232, align 1
  %233 = load i32, i32* %226, align 8
  %234 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %225, i64 0, i32 1
  %235 = load i32, i32* %234, align 8
  %236 = icmp eq i32 %233, %235
  br i1 %236, label %237, label %253

237:                                              ; preds = %224
  %238 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %225, i64 0, i32 5
  %239 = load i8, i8* %238, align 4, !range !4
  %240 = icmp eq i8 %239, 0
  br i1 %240, label %241, label %253

241:                                              ; preds = %237
  %242 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %225, i64 0, i32 0
  %243 = load %"class.v8::OutputStream"*, %"class.v8::OutputStream"** %242, align 8
  %244 = load i8*, i8** %230, align 8
  %245 = bitcast %"class.v8::OutputStream"* %243 to i32 (%"class.v8::OutputStream"*, i8*, i32)***
  %246 = load i32 (%"class.v8::OutputStream"*, i8*, i32)**, i32 (%"class.v8::OutputStream"*, i8*, i32)*** %245, align 8
  %247 = getelementptr inbounds i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %246, i64 4
  %248 = load i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %247, align 8
  %249 = call i32 %248(%"class.v8::OutputStream"* %243, i8* %244, i32 %233) #13
  %250 = icmp eq i32 %249, 1
  br i1 %250, label %251, label %252

251:                                              ; preds = %241
  store i8 1, i8* %238, align 4
  br label %252

252:                                              ; preds = %251, %241
  store i32 0, i32* %226, align 8
  br label %253

253:                                              ; preds = %224, %237, %252
  ret void

254:                                              ; preds = %178
  %255 = getelementptr inbounds i8, i8* %65, i64 3
  %256 = load i8, i8* %255, align 1
  %257 = icmp eq i8 %256, 0
  br i1 %257, label %182, label %258

258:                                              ; preds = %254
  %259 = getelementptr inbounds i8, i8* %65, i64 4
  %260 = load i8, i8* %259, align 1
  %261 = icmp eq i8 %260, 0
  %262 = select i1 %261, i64 4, i64 5
  br label %182
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internalL10WriteUCharEPNS0_18OutputStreamWriterEj(%"class.v8::internal::OutputStreamWriter"*, i32) unnamed_addr #2 {
  tail call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.647, i64 0, i64 0), i32 2) #13
  %3 = lshr i32 %1, 12
  %4 = and i32 %3, 15
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN2v88internalL10WriteUCharEPNS0_18OutputStreamWriterEjE9hex_chars, i64 0, i64 %5
  %7 = load i8, i8* %6, align 1
  %8 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %0, i64 0, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, 1
  store i32 %10, i32* %8, align 8
  %11 = sext i32 %9 to i64
  %12 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %11
  store i8 %7, i8* %14, align 1
  %15 = load i32, i32* %8, align 8
  %16 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %15, %17
  br i1 %18, label %19, label %35

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %0, i64 0, i32 5
  %21 = load i8, i8* %20, align 4, !range !4
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %0, i64 0, i32 0
  %25 = load %"class.v8::OutputStream"*, %"class.v8::OutputStream"** %24, align 8
  %26 = load i8*, i8** %12, align 8
  %27 = bitcast %"class.v8::OutputStream"* %25 to i32 (%"class.v8::OutputStream"*, i8*, i32)***
  %28 = load i32 (%"class.v8::OutputStream"*, i8*, i32)**, i32 (%"class.v8::OutputStream"*, i8*, i32)*** %27, align 8
  %29 = getelementptr inbounds i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %28, i64 4
  %30 = load i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %29, align 8
  %31 = tail call i32 %30(%"class.v8::OutputStream"* %25, i8* %26, i32 %15) #13
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %34

33:                                               ; preds = %23
  store i8 1, i8* %20, align 4
  br label %34

34:                                               ; preds = %33, %23
  store i32 0, i32* %8, align 8
  br label %35

35:                                               ; preds = %2, %19, %34
  %36 = phi i32 [ %15, %2 ], [ %15, %19 ], [ 0, %34 ]
  %37 = lshr i32 %1, 8
  %38 = and i32 %37, 15
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN2v88internalL10WriteUCharEPNS0_18OutputStreamWriterEjE9hex_chars, i64 0, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = add nsw i32 %36, 1
  store i32 %42, i32* %8, align 8
  %43 = sext i32 %36 to i64
  %44 = load i8*, i8** %12, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 %43
  store i8 %41, i8* %45, align 1
  %46 = load i32, i32* %8, align 8
  %47 = load i32, i32* %16, align 8
  %48 = icmp eq i32 %46, %47
  br i1 %48, label %49, label %65

49:                                               ; preds = %35
  %50 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %0, i64 0, i32 5
  %51 = load i8, i8* %50, align 4, !range !4
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %65

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %0, i64 0, i32 0
  %55 = load %"class.v8::OutputStream"*, %"class.v8::OutputStream"** %54, align 8
  %56 = load i8*, i8** %12, align 8
  %57 = bitcast %"class.v8::OutputStream"* %55 to i32 (%"class.v8::OutputStream"*, i8*, i32)***
  %58 = load i32 (%"class.v8::OutputStream"*, i8*, i32)**, i32 (%"class.v8::OutputStream"*, i8*, i32)*** %57, align 8
  %59 = getelementptr inbounds i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %58, i64 4
  %60 = load i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %59, align 8
  %61 = tail call i32 %60(%"class.v8::OutputStream"* %55, i8* %56, i32 %46) #13
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %64

63:                                               ; preds = %53
  store i8 1, i8* %50, align 4
  br label %64

64:                                               ; preds = %63, %53
  store i32 0, i32* %8, align 8
  br label %65

65:                                               ; preds = %35, %49, %64
  %66 = phi i32 [ %46, %35 ], [ %46, %49 ], [ 0, %64 ]
  %67 = lshr i32 %1, 4
  %68 = and i32 %67, 15
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN2v88internalL10WriteUCharEPNS0_18OutputStreamWriterEjE9hex_chars, i64 0, i64 %69
  %71 = load i8, i8* %70, align 1
  %72 = add nsw i32 %66, 1
  store i32 %72, i32* %8, align 8
  %73 = sext i32 %66 to i64
  %74 = load i8*, i8** %12, align 8
  %75 = getelementptr inbounds i8, i8* %74, i64 %73
  store i8 %71, i8* %75, align 1
  %76 = load i32, i32* %8, align 8
  %77 = load i32, i32* %16, align 8
  %78 = icmp eq i32 %76, %77
  br i1 %78, label %79, label %95

79:                                               ; preds = %65
  %80 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %0, i64 0, i32 5
  %81 = load i8, i8* %80, align 4, !range !4
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %0, i64 0, i32 0
  %85 = load %"class.v8::OutputStream"*, %"class.v8::OutputStream"** %84, align 8
  %86 = load i8*, i8** %12, align 8
  %87 = bitcast %"class.v8::OutputStream"* %85 to i32 (%"class.v8::OutputStream"*, i8*, i32)***
  %88 = load i32 (%"class.v8::OutputStream"*, i8*, i32)**, i32 (%"class.v8::OutputStream"*, i8*, i32)*** %87, align 8
  %89 = getelementptr inbounds i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %88, i64 4
  %90 = load i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %89, align 8
  %91 = tail call i32 %90(%"class.v8::OutputStream"* %85, i8* %86, i32 %76) #13
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %94

93:                                               ; preds = %83
  store i8 1, i8* %80, align 4
  br label %94

94:                                               ; preds = %93, %83
  store i32 0, i32* %8, align 8
  br label %95

95:                                               ; preds = %65, %79, %94
  %96 = phi i32 [ %76, %65 ], [ %76, %79 ], [ 0, %94 ]
  %97 = and i32 %1, 15
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN2v88internalL10WriteUCharEPNS0_18OutputStreamWriterEjE9hex_chars, i64 0, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = add nsw i32 %96, 1
  store i32 %101, i32* %8, align 8
  %102 = sext i32 %96 to i64
  %103 = load i8*, i8** %12, align 8
  %104 = getelementptr inbounds i8, i8* %103, i64 %102
  store i8 %100, i8* %104, align 1
  %105 = load i32, i32* %8, align 8
  %106 = load i32, i32* %16, align 8
  %107 = icmp eq i32 %105, %106
  br i1 %107, label %108, label %124

108:                                              ; preds = %95
  %109 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %0, i64 0, i32 5
  %110 = load i8, i8* %109, align 4, !range !4
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %112, label %124

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %0, i64 0, i32 0
  %114 = load %"class.v8::OutputStream"*, %"class.v8::OutputStream"** %113, align 8
  %115 = load i8*, i8** %12, align 8
  %116 = bitcast %"class.v8::OutputStream"* %114 to i32 (%"class.v8::OutputStream"*, i8*, i32)***
  %117 = load i32 (%"class.v8::OutputStream"*, i8*, i32)**, i32 (%"class.v8::OutputStream"*, i8*, i32)*** %116, align 8
  %118 = getelementptr inbounds i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %117, i64 4
  %119 = load i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %118, align 8
  %120 = tail call i32 %119(%"class.v8::OutputStream"* %114, i8* %115, i32 %105) #13
  %121 = icmp eq i32 %120, 1
  br i1 %121, label %122, label %123

122:                                              ; preds = %112
  store i8 1, i8* %109, align 4
  br label %123

123:                                              ; preds = %122, %112
  store i32 0, i32* %8, align 8
  br label %124

124:                                              ; preds = %95, %108, %123
  ret void
}

declare i32 @_ZN7unibrow4Utf814CalculateValueEPKhmPm(i8*, i64, i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26HeapSnapshotJSONSerializer17SerializeLocationERKNS0_14SourceLocationE(%"class.v8::internal::HeapSnapshotJSONSerializer"* nocapture readonly, %"struct.v8::internal::SourceLocation"* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.v8::internal::EmbeddedVector.1553", align 8
  %4 = bitcast %"class.v8::internal::EmbeddedVector.1553"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1553", %"class.v8::internal::EmbeddedVector.1553"* %3, i64 0, i32 1, i64 0
  %6 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1553", %"class.v8::internal::EmbeddedVector.1553"* %3, i64 0, i32 0, i32 0
  store i8* %5, i8** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1553", %"class.v8::internal::EmbeddedVector.1553"* %3, i64 0, i32 0, i32 1
  store i64 45, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.v8::internal::SourceLocation", %"struct.v8::internal::SourceLocation"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = mul nsw i32 %9, 7
  br label %11

11:                                               ; preds = %11, %2
  %12 = phi i32 [ 0, %2 ], [ %14, %11 ]
  %13 = phi i32 [ %10, %2 ], [ %15, %11 ]
  %14 = add nuw nsw i32 %12, 1
  %15 = udiv i32 %13, 10
  %16 = icmp ugt i32 %13, 9
  br i1 %16, label %11, label %17

17:                                               ; preds = %11
  %18 = zext i32 %14 to i64
  %19 = urem i32 %10, 10
  %20 = trunc i32 %19 to i8
  %21 = or i8 %20, 48
  %22 = add nsw i64 %18, -1
  %23 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1553", %"class.v8::internal::EmbeddedVector.1553"* %3, i64 0, i32 1, i64 %22
  store i8 %21, i8* %23, align 1
  %24 = icmp ugt i32 %10, 9
  br i1 %24, label %25, label %36

25:                                               ; preds = %17, %25
  %26 = phi i64 [ %33, %25 ], [ %22, %17 ]
  %27 = phi i32 [ %28, %25 ], [ %10, %17 ]
  %28 = udiv i32 %27, 10
  %29 = load i8*, i8** %6, align 8
  %30 = urem i32 %28, 10
  %31 = trunc i32 %30 to i8
  %32 = or i8 %31, 48
  %33 = add i64 %26, -1
  %34 = getelementptr inbounds i8, i8* %29, i64 %33
  store i8 %32, i8* %34, align 1
  %35 = icmp ugt i32 %27, 99
  br i1 %35, label %25, label %36

36:                                               ; preds = %25, %17
  %37 = load i8*, i8** %6, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %18
  store i8 44, i8* %38, align 1
  %39 = getelementptr inbounds %"struct.v8::internal::SourceLocation", %"struct.v8::internal::SourceLocation"* %1, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  br label %41

41:                                               ; preds = %41, %36
  %42 = phi i32 [ 0, %36 ], [ %44, %41 ]
  %43 = phi i32 [ %40, %36 ], [ %45, %41 ]
  %44 = add nuw nsw i32 %42, 1
  %45 = udiv i32 %43, 10
  %46 = icmp ugt i32 %43, 9
  br i1 %46, label %41, label %47

47:                                               ; preds = %41
  %48 = add nuw nsw i32 %12, 2
  %49 = add nuw i32 %48, %44
  %50 = sext i32 %49 to i64
  br label %51

51:                                               ; preds = %51, %47
  %52 = phi i64 [ %57, %51 ], [ %50, %47 ]
  %53 = phi i32 [ %60, %51 ], [ %40, %47 ]
  %54 = urem i32 %53, 10
  %55 = trunc i32 %54 to i8
  %56 = or i8 %55, 48
  %57 = add i64 %52, -1
  %58 = load i8*, i8** %6, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %57
  store i8 %56, i8* %59, align 1
  %60 = udiv i32 %53, 10
  %61 = icmp ugt i32 %53, 9
  br i1 %61, label %51, label %62

62:                                               ; preds = %51
  %63 = load i8*, i8** %6, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 %50
  store i8 44, i8* %64, align 1
  %65 = getelementptr inbounds %"struct.v8::internal::SourceLocation", %"struct.v8::internal::SourceLocation"* %1, i64 0, i32 2
  %66 = load i32, i32* %65, align 4
  br label %67

67:                                               ; preds = %67, %62
  %68 = phi i32 [ 0, %62 ], [ %70, %67 ]
  %69 = phi i32 [ %66, %62 ], [ %71, %67 ]
  %70 = add nuw nsw i32 %68, 1
  %71 = udiv i32 %69, 10
  %72 = icmp ugt i32 %69, 9
  br i1 %72, label %67, label %73

73:                                               ; preds = %67
  %74 = add nsw i32 %49, 1
  %75 = add i32 %74, %70
  %76 = sext i32 %75 to i64
  br label %77

77:                                               ; preds = %77, %73
  %78 = phi i64 [ %83, %77 ], [ %76, %73 ]
  %79 = phi i32 [ %86, %77 ], [ %66, %73 ]
  %80 = urem i32 %79, 10
  %81 = trunc i32 %80 to i8
  %82 = or i8 %81, 48
  %83 = add i64 %78, -1
  %84 = load i8*, i8** %6, align 8
  %85 = getelementptr inbounds i8, i8* %84, i64 %83
  store i8 %82, i8* %85, align 1
  %86 = udiv i32 %79, 10
  %87 = icmp ugt i32 %79, 9
  br i1 %87, label %77, label %88

88:                                               ; preds = %77
  %89 = load i8*, i8** %6, align 8
  %90 = getelementptr inbounds i8, i8* %89, i64 %76
  store i8 44, i8* %90, align 1
  %91 = getelementptr inbounds %"struct.v8::internal::SourceLocation", %"struct.v8::internal::SourceLocation"* %1, i64 0, i32 3
  %92 = load i32, i32* %91, align 4
  br label %93

93:                                               ; preds = %93, %88
  %94 = phi i32 [ 0, %88 ], [ %96, %93 ]
  %95 = phi i32 [ %92, %88 ], [ %97, %93 ]
  %96 = add nuw nsw i32 %94, 1
  %97 = udiv i32 %95, 10
  %98 = icmp ugt i32 %95, 9
  br i1 %98, label %93, label %99

99:                                               ; preds = %93
  %100 = add nsw i32 %75, 1
  %101 = add i32 %100, %96
  %102 = sext i32 %101 to i64
  br label %103

103:                                              ; preds = %103, %99
  %104 = phi i64 [ %109, %103 ], [ %102, %99 ]
  %105 = phi i32 [ %112, %103 ], [ %92, %99 ]
  %106 = urem i32 %105, 10
  %107 = trunc i32 %106 to i8
  %108 = or i8 %107, 48
  %109 = add i64 %104, -1
  %110 = load i8*, i8** %6, align 8
  %111 = getelementptr inbounds i8, i8* %110, i64 %109
  store i8 %108, i8* %111, align 1
  %112 = udiv i32 %105, 10
  %113 = icmp ugt i32 %105, 9
  br i1 %113, label %103, label %114

114:                                              ; preds = %103
  %115 = add nsw i32 %101, 1
  %116 = load i8*, i8** %6, align 8
  %117 = getelementptr inbounds i8, i8* %116, i64 %102
  store i8 10, i8* %117, align 1
  %118 = sext i32 %115 to i64
  %119 = load i8*, i8** %6, align 8
  %120 = getelementptr inbounds i8, i8* %119, i64 %118
  store i8 0, i8* %120, align 1
  %121 = getelementptr inbounds %"class.v8::internal::HeapSnapshotJSONSerializer", %"class.v8::internal::HeapSnapshotJSONSerializer"* %0, i64 0, i32 4
  %122 = load %"class.v8::internal::OutputStreamWriter"*, %"class.v8::internal::OutputStreamWriter"** %121, align 8
  %123 = load i8*, i8** %6, align 8
  %124 = call i64 @strlen(i8* %123) #22
  %125 = trunc i64 %124 to i32
  call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %122, i8* %123, i32 %125) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14V8HeapExplorerD2Ev(%"class.v8::internal::V8HeapExplorer"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal14V8HeapExplorerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 12, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast i64* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #21
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %9, align 8
  %11 = icmp eq %"struct.std::__1::__hash_node_base.1394"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %8, %12
  %13 = phi %"struct.std::__1::__hash_node_base.1394"* [ %15, %12 ], [ %10, %8 ]
  %14 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394", %"struct.std::__1::__hash_node_base.1394"* %13, i64 0, i32 0
  %15 = load %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %14, align 8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1394"* %13 to i8*
  tail call void @_ZdlPv(i8* %16) #21
  %17 = icmp eq %"struct.std::__1::__hash_node_base.1394"* %15, null
  br i1 %17, label %18, label %12

18:                                               ; preds = %12, %8
  %19 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.1394"**, %"struct.std::__1::__hash_node_base.1394"*** %19, align 8
  store %"struct.std::__1::__hash_node_base.1394"** null, %"struct.std::__1::__hash_node_base.1394"*** %19, align 8
  %21 = icmp eq %"struct.std::__1::__hash_node_base.1394"** %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = bitcast %"struct.std::__1::__hash_node_base.1394"** %20 to i8*
  tail call void @_ZdlPv(i8* %23) #21
  br label %24

24:                                               ; preds = %18, %22
  %25 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.1368"* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %24, %28
  %29 = phi %"struct.std::__1::__hash_node_base.1368"* [ %31, %28 ], [ %26, %24 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %30, align 8
  %32 = bitcast %"struct.std::__1::__hash_node_base.1368"* %29 to i8*
  tail call void @_ZdlPv(i8* %32) #21
  %33 = icmp eq %"struct.std::__1::__hash_node_base.1368"* %31, null
  br i1 %33, label %34, label %28

34:                                               ; preds = %28, %24
  %35 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.1368"**, %"struct.std::__1::__hash_node_base.1368"*** %35, align 8
  store %"struct.std::__1::__hash_node_base.1368"** null, %"struct.std::__1::__hash_node_base.1368"*** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.1368"** %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  %39 = bitcast %"struct.std::__1::__hash_node_base.1368"** %36 to i8*
  tail call void @_ZdlPv(i8* %39) #21
  br label %40

40:                                               ; preds = %34, %38
  %41 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %41, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base.1342"* %42, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %40, %44
  %45 = phi %"struct.std::__1::__hash_node_base.1342"* [ %47, %44 ], [ %42, %40 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %46, align 8
  %48 = bitcast %"struct.std::__1::__hash_node_base.1342"* %45 to i8*
  tail call void @_ZdlPv(i8* %48) #21
  %49 = icmp eq %"struct.std::__1::__hash_node_base.1342"* %47, null
  br i1 %49, label %50, label %44

50:                                               ; preds = %44, %40
  %51 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base.1342"**, %"struct.std::__1::__hash_node_base.1342"*** %51, align 8
  store %"struct.std::__1::__hash_node_base.1342"** null, %"struct.std::__1::__hash_node_base.1342"*** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base.1342"** %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = bitcast %"struct.std::__1::__hash_node_base.1342"** %52 to i8*
  tail call void @_ZdlPv(i8* %55) #21
  br label %56

56:                                               ; preds = %50, %54
  %57 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 7, i32 0, i32 0
  %58 = load %"struct.std::__1::pair.1330"*, %"struct.std::__1::pair.1330"** %57, align 8
  %59 = icmp eq %"struct.std::__1::pair.1330"* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint %"struct.std::__1::pair.1330"* %58 to i64
  %62 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %0, i64 0, i32 7, i32 0, i32 1
  %63 = bitcast %"struct.std::__1::pair.1330"** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast %"struct.std::__1::pair.1330"* %58 to i8*
  tail call void @_ZdlPv(i8* %64) #21
  br label %65

65:                                               ; preds = %56, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14V8HeapExplorerD0Ev(%"class.v8::internal::V8HeapExplorer"*) unnamed_addr #2 comdat align 2 {
  tail call void @_ZN2v88internal14V8HeapExplorerD2Ev(%"class.v8::internal::V8HeapExplorer"* %0) #13
  %2 = bitcast %"class.v8::internal::V8HeapExplorer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal20HeapEntriesAllocatorD2Ev(%"class.v8::internal::HeapEntriesAllocator"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal29EmbedderGraphEntriesAllocatorD0Ev(%"class.v8::internal::EmbedderGraphEntriesAllocator"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.v8::internal::EmbedderGraphEntriesAllocator"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #21
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal21HeapSnapshotGeneratorD2Ev(%"class.v8::internal::HeapSnapshotGenerator"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal21HeapSnapshotGeneratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.1448"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.1448"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.1448"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #21
  %11 = icmp eq %"struct.std::__1::__hash_node_base.1448"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.1448"**, %"struct.std::__1::__hash_node_base.1448"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.1448"** null, %"struct.std::__1::__hash_node_base.1448"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.1448"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.1448"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #21
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %19, align 8
  %21 = icmp eq %"struct.std::__1::__hash_node_base.1424"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %18, %22
  %23 = phi %"struct.std::__1::__hash_node_base.1424"* [ %25, %22 ], [ %20, %18 ]
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %23, i64 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %24, align 8
  %26 = bitcast %"struct.std::__1::__hash_node_base.1424"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #21
  %27 = icmp eq %"struct.std::__1::__hash_node_base.1424"* %25, null
  br i1 %27, label %28, label %22

28:                                               ; preds = %22, %18
  %29 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.1424"**, %"struct.std::__1::__hash_node_base.1424"*** %29, align 8
  store %"struct.std::__1::__hash_node_base.1424"** null, %"struct.std::__1::__hash_node_base.1424"*** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.1424"** %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = bitcast %"struct.std::__1::__hash_node_base.1424"** %30 to i8*
  tail call void @_ZdlPv(i8* %33) #21
  br label %34

34:                                               ; preds = %28, %32
  %35 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 4, i32 4, i32 0, i32 0, i32 0
  %36 = load %"class.v8::internal::HeapEntriesAllocator"*, %"class.v8::internal::HeapEntriesAllocator"** %35, align 8
  store %"class.v8::internal::HeapEntriesAllocator"* null, %"class.v8::internal::HeapEntriesAllocator"** %35, align 8
  %37 = icmp eq %"class.v8::internal::HeapEntriesAllocator"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.v8::internal::HeapEntriesAllocator"* %36 to void (%"class.v8::internal::HeapEntriesAllocator"*)***
  %40 = load void (%"class.v8::internal::HeapEntriesAllocator"*)**, void (%"class.v8::internal::HeapEntriesAllocator"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.v8::internal::HeapEntriesAllocator"*)*, void (%"class.v8::internal::HeapEntriesAllocator"*)** %40, i64 1
  %42 = load void (%"class.v8::internal::HeapEntriesAllocator"*)*, void (%"class.v8::internal::HeapEntriesAllocator"*)** %41, align 8
  tail call void %42(%"class.v8::internal::HeapEntriesAllocator"* nonnull %36) #13
  br label %43

43:                                               ; preds = %34, %38
  %44 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 3
  tail call void @_ZN2v88internal14V8HeapExplorerD2Ev(%"class.v8::internal::V8HeapExplorer"* %44) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal21HeapSnapshotGeneratorD0Ev(%"class.v8::internal::HeapSnapshotGenerator"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal21HeapSnapshotGeneratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.1448"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.1448"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.1448"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #21
  %11 = icmp eq %"struct.std::__1::__hash_node_base.1448"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.1448"**, %"struct.std::__1::__hash_node_base.1448"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.1448"** null, %"struct.std::__1::__hash_node_base.1448"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.1448"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.1448"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #21
  br label %18

18:                                               ; preds = %16, %12
  %19 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %19, align 8
  %21 = icmp eq %"struct.std::__1::__hash_node_base.1424"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %18, %22
  %23 = phi %"struct.std::__1::__hash_node_base.1424"* [ %25, %22 ], [ %20, %18 ]
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %23, i64 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %24, align 8
  %26 = bitcast %"struct.std::__1::__hash_node_base.1424"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #21
  %27 = icmp eq %"struct.std::__1::__hash_node_base.1424"* %25, null
  br i1 %27, label %28, label %22

28:                                               ; preds = %22, %18
  %29 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.1424"**, %"struct.std::__1::__hash_node_base.1424"*** %29, align 8
  store %"struct.std::__1::__hash_node_base.1424"** null, %"struct.std::__1::__hash_node_base.1424"*** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.1424"** %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = bitcast %"struct.std::__1::__hash_node_base.1424"** %30 to i8*
  tail call void @_ZdlPv(i8* %33) #21
  br label %34

34:                                               ; preds = %32, %28
  %35 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 4, i32 4, i32 0, i32 0, i32 0
  %36 = load %"class.v8::internal::HeapEntriesAllocator"*, %"class.v8::internal::HeapEntriesAllocator"** %35, align 8
  store %"class.v8::internal::HeapEntriesAllocator"* null, %"class.v8::internal::HeapEntriesAllocator"** %35, align 8
  %37 = icmp eq %"class.v8::internal::HeapEntriesAllocator"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.v8::internal::HeapEntriesAllocator"* %36 to void (%"class.v8::internal::HeapEntriesAllocator"*)***
  %40 = load void (%"class.v8::internal::HeapEntriesAllocator"*)**, void (%"class.v8::internal::HeapEntriesAllocator"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.v8::internal::HeapEntriesAllocator"*)*, void (%"class.v8::internal::HeapEntriesAllocator"*)** %40, i64 1
  %42 = load void (%"class.v8::internal::HeapEntriesAllocator"*)*, void (%"class.v8::internal::HeapEntriesAllocator"*)** %41, align 8
  tail call void %42(%"class.v8::internal::HeapEntriesAllocator"* nonnull %36) #13
  br label %43

43:                                               ; preds = %34, %38
  %44 = getelementptr inbounds %"class.v8::internal::HeapSnapshotGenerator", %"class.v8::internal::HeapSnapshotGenerator"* %0, i64 0, i32 3
  tail call void @_ZN2v88internal14V8HeapExplorerD2Ev(%"class.v8::internal::V8HeapExplorer"* %44) #13
  %45 = bitcast %"class.v8::internal::HeapSnapshotGenerator"* %0 to i8*
  tail call void @_ZdlPv(i8* %45) #21
  ret void
}

declare i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"*, i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2v88internal18HeapObjectIteratorD1Ev(%"class.v8::internal::HeapObjectIterator"*) unnamed_addr #11

; Function Attrs: nounwind
declare void @llvm.assume(i1) #13

declare zeroext i1 @_ZNK2v88internal9ScopeInfo21HasSharedFunctionNameEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"*) local_unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.v8::internal::Handle.1133", %"class.v8::internal::Handle.1133"* %2, i64 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %6, label %28

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %47, label %11

11:                                               ; preds = %6
  %12 = and i64 %8, -4294967296
  %13 = add i64 %8, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = icmp eq i16 %20, 188
  br i1 %21, label %22, label %47

22:                                               ; preds = %11
  %23 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 4
  store i8 1, i8* %23, align 4
  %24 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 0
  %25 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %25, i64 0, i32 0, i32 7, i32 0, i64 6
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %7, align 8
  br label %104

28:                                               ; preds = %1
  %29 = load i64, i64* %4, align 8
  %30 = and i64 %29, -4294967296
  %31 = add i64 %29, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %30, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = icmp eq i16 %38, 188
  br i1 %39, label %40, label %47

40:                                               ; preds = %28
  %41 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 4
  store i8 1, i8* %41, align 4
  %42 = bitcast %"class.v8::internal::PrototypeIterator"* %0 to %"class.v8::internal::Factory"**
  %43 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %43, i64 176
  %45 = ptrtoint %"class.v8::internal::Factory"* %44 to i64
  %46 = bitcast %"class.v8::internal::Handle.1133"* %2 to i64*
  store i64 %45, i64* %46, align 8
  br label %104

47:                                               ; preds = %6, %11, %28
  %48 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 2, i32 0, i32 0
  %49 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 1, i32 0, i32 0
  %50 = select i1 %5, i64* %49, i64* %4
  %51 = load i64, i64* %50, align 8
  %52 = and i64 %51, -4294967296
  %53 = add i64 %51, -1
  %54 = inttoptr i64 %53 to i32*
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = zext i32 %55 to i64
  %57 = or i64 %52, %56
  %58 = add i64 %57, 15
  %59 = inttoptr i64 %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %52, %61
  %63 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 0
  %64 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 0, i32 7, i32 0, i64 6
  %66 = load i64, i64* %65, align 8
  %67 = trunc i64 %66 to i32
  %68 = icmp eq i32 %60, %67
  br i1 %68, label %79, label %69

69:                                               ; preds = %47
  %70 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %79

73:                                               ; preds = %69
  %74 = add i64 %57, 7
  %75 = inttoptr i64 %74 to i16*
  %76 = load atomic i16, i16* %75 monotonic, align 2
  %77 = icmp ne i16 %76, 190
  %78 = zext i1 %77 to i8
  br label %79

79:                                               ; preds = %73, %69, %47
  %80 = phi i8 [ 1, %47 ], [ 0, %69 ], [ %78, %73 ]
  %81 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 4
  store i8 %80, i8* %81, align 4
  br i1 %5, label %82, label %83

82:                                               ; preds = %79
  store i64 %62, i64* %49, align 8
  br label %104

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 31, i32 4
  %85 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %84, align 8
  %86 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  %88 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %85, i64 %62) #13
  br label %102

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 31, i32 0
  %91 = load i64*, i64** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 31, i32 1
  %93 = load i64*, i64** %92, align 8
  %94 = icmp eq i64* %91, %93
  br i1 %94, label %95, label %97

95:                                               ; preds = %89
  %96 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %64) #13
  br label %97

97:                                               ; preds = %95, %89
  %98 = phi i64* [ %96, %95 ], [ %91, %89 ]
  %99 = ptrtoint i64* %98 to i64
  %100 = add i64 %99, 8
  %101 = inttoptr i64 %100 to i64*
  store i64* %101, i64** %90, align 8
  store i64 %62, i64* %98, align 8
  br label %102

102:                                              ; preds = %97, %87
  %103 = phi i64* [ %88, %87 ], [ %98, %97 ]
  store i64* %103, i64** %48, align 8
  br label %104

104:                                              ; preds = %102, %82, %40, %22
  ret void
}

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #4

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK2v88internal10JSFunction9prototypeENS0_16PtrComprCageBaseE(%"class.v8::internal::JSFunction"*, i64) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::JSFunction", %"class.v8::internal::JSFunction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i64 %1, 4294967295
  %9 = icmp eq i64 %8, 0
  tail call void @llvm.assume(i1 %9) #13
  %10 = zext i32 %7 to i64
  %11 = or i64 %10, %1
  %12 = add i64 %11, 9
  %13 = inttoptr i64 %12 to i8*
  %14 = load atomic i8, i8* %13 monotonic, align 1
  %15 = and i8 %14, 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %98, label %17

17:                                               ; preds = %2
  %18 = load atomic i32, i32* %6 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %19, %1
  %21 = add i64 %20, 19
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %24, %1
  %26 = and i64 %24, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %125, label %28

28:                                               ; preds = %17
  %29 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %30 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %29, null
  %31 = and i64 %20, -262144
  %32 = or i64 %31, 16
  %33 = inttoptr i64 %32 to i64*
  br i1 %30, label %63, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %29, i64 0, i32 0, i32 1
  %36 = load i8, i8* %35, align 8, !range !4
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %29, i64 0, i32 1, i64 10
  %40 = load i64, i64* %39, align 8
  %41 = trunc i64 %40 to i32
  br label %84

42:                                               ; preds = %34
  %43 = load i64, i64* %33, align 16
  %44 = add i64 %43, -41416
  %45 = inttoptr i64 %44 to %"class.v8::internal::Isolate"*
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %45, i64 0, i32 0, i32 7, i32 0, i64 10
  %47 = load i64, i64* %46, align 8
  %48 = trunc i64 %47 to i32
  br label %49

49:                                               ; preds = %42, %55
  %50 = phi i64 [ %60, %55 ], [ %25, %42 ]
  %51 = add i64 %50, -1
  %52 = inttoptr i64 %51 to i32*
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = icmp eq i32 %53, %48
  br i1 %54, label %55, label %125

55:                                               ; preds = %49
  %56 = add i64 %50, 19
  %57 = inttoptr i64 %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %59, %1
  %61 = and i64 %59, 1
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %125, label %49

63:                                               ; preds = %28
  %64 = load i64, i64* %33, align 16
  %65 = add i64 %64, -41416
  %66 = inttoptr i64 %65 to %"class.v8::internal::Isolate"*
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %66, i64 0, i32 0, i32 7, i32 0, i64 10
  %68 = load i64, i64* %67, align 8
  %69 = trunc i64 %68 to i32
  br label %70

70:                                               ; preds = %76, %63
  %71 = phi i64 [ %81, %76 ], [ %25, %63 ]
  %72 = add i64 %71, -1
  %73 = inttoptr i64 %72 to i32*
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = icmp eq i32 %74, %69
  br i1 %75, label %76, label %125

76:                                               ; preds = %70
  %77 = add i64 %71, 19
  %78 = inttoptr i64 %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i64
  %81 = or i64 %80, %1
  %82 = and i64 %80, 1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %125, label %70

84:                                               ; preds = %38, %90
  %85 = phi i64 [ %95, %90 ], [ %25, %38 ]
  %86 = add i64 %85, -1
  %87 = inttoptr i64 %86 to i32*
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = icmp eq i32 %88, %41
  br i1 %89, label %90, label %125

90:                                               ; preds = %84
  %91 = add i64 %85, 19
  %92 = inttoptr i64 %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = zext i32 %93 to i64
  %95 = or i64 %94, %1
  %96 = and i64 %94, 1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %125, label %84

98:                                               ; preds = %2
  %99 = add i64 %4, 27
  %100 = inttoptr i64 %99 to i32*
  %101 = load atomic i32, i32* %100 acquire, align 4
  %102 = zext i32 %101 to i64
  %103 = or i64 %102, %1
  %104 = add i64 %103, -1
  %105 = inttoptr i64 %104 to i32*
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = zext i32 %106 to i64
  %108 = or i64 %107, %1
  %109 = add i64 %108, 7
  %110 = inttoptr i64 %109 to i16*
  %111 = load atomic i16, i16* %110 monotonic, align 2
  %112 = icmp eq i16 %111, 172
  %113 = load i64, i64* %3, align 8
  %114 = add i64 %113, 27
  %115 = inttoptr i64 %114 to i32*
  %116 = load atomic i32, i32* %115 acquire, align 4
  %117 = zext i32 %116 to i64
  %118 = or i64 %117, %1
  br i1 %112, label %119, label %125

119:                                              ; preds = %98
  %120 = add i64 %118, 15
  %121 = inttoptr i64 %120 to i32*
  %122 = load i32, i32* %121, align 4
  %123 = zext i32 %122 to i64
  %124 = or i64 %123, %1
  br label %125

125:                                              ; preds = %90, %84, %55, %49, %76, %70, %119, %98, %17
  %126 = phi i64 [ %25, %17 ], [ %124, %119 ], [ %118, %98 ], [ %71, %70 ], [ %81, %76 ], [ %60, %55 ], [ %50, %49 ], [ %95, %90 ], [ %85, %84 ]
  ret i64 %126
}

declare zeroext i1 @_ZNK2v88internal9ScopeInfo23HasContextExtensionSlotEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1424"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIS2_S7_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS2_JRS2_S6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_S2_EEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1420"*, i8** dereferenceable(8), i8** dereferenceable(8), %"class.v8::internal::HeapEntry"** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %5 = bitcast i8** %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %6, 32
  %8 = shl i64 %6, 3
  %9 = and i64 %8, 4294967288
  %10 = add nuw nsw i64 %9, 8
  %11 = xor i64 %10, %7
  %12 = mul i64 %11, -7070675565921424023
  %13 = lshr i64 %12, 47
  %14 = xor i64 %12, %7
  %15 = xor i64 %14, %13
  %16 = mul i64 %15, -7070675565921424023
  %17 = lshr i64 %16, 47
  %18 = xor i64 %17, %16
  %19 = mul i64 %18, -7070675565921424023
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.1420", %"class.std::__1::__hash_table.1420"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  %23 = inttoptr i64 %6 to i8*
  br i1 %22, label %83, label %24

24:                                               ; preds = %4
  %25 = tail call i64 @llvm.ctpop.i64(i64 %21) #13, !range !3
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %21, -1
  %29 = and i64 %19, %28
  br label %34

30:                                               ; preds = %24
  %31 = icmp ult i64 %19, %21
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %19, %21
  br label %34

34:                                               ; preds = %27, %30, %32
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %19, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1420", %"class.std::__1::__hash_table.1420"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.1424"**, %"struct.std::__1::__hash_node_base.1424"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.1424"* %39, null
  br i1 %40, label %83, label %41

41:                                               ; preds = %34
  %42 = add i64 %21, -1
  br i1 %26, label %43, label %65

43:                                               ; preds = %41, %60
  %44 = phi %"struct.std::__1::__hash_node_base.1424"* [ %46, %60 ], [ %39, %41 ]
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %44, i64 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.1424"* %46, null
  br i1 %47, label %83, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %46, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base.1424"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %19
  br i1 %52, label %60, label %53

53:                                               ; preds = %48
  %54 = icmp ult i64 %51, %21
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = urem i64 %51, %21
  br label %57

57:                                               ; preds = %55, %53
  %58 = phi i64 [ %56, %55 ], [ %51, %53 ]
  %59 = icmp eq i64 %58, %35
  br i1 %59, label %60, label %83

60:                                               ; preds = %57, %48
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %46, i64 2
  %62 = bitcast %"struct.std::__1::__hash_node_base.1424"* %61 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = icmp eq i8* %63, %23
  br i1 %64, label %175, label %43

65:                                               ; preds = %41, %78
  %66 = phi %"struct.std::__1::__hash_node_base.1424"* [ %68, %78 ], [ %39, %41 ]
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %66, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.1424"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %68, i64 1
  %72 = bitcast %"struct.std::__1::__hash_node_base.1424"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq i64 %73, %19
  %75 = and i64 %73, %42
  %76 = icmp eq i64 %75, %35
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %83

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %68, i64 2
  %80 = bitcast %"struct.std::__1::__hash_node_base.1424"* %79 to i8**
  %81 = load i8*, i8** %80, align 8
  %82 = icmp eq i8* %81, %23
  br i1 %82, label %175, label %65

83:                                               ; preds = %70, %65, %57, %43, %34, %4
  %84 = phi i64 [ %35, %34 ], [ undef, %4 ], [ %35, %43 ], [ %35, %57 ], [ %35, %65 ], [ %35, %70 ]
  %85 = tail call i8* @_Znwm(i64 32) #21, !noalias !21
  %86 = getelementptr inbounds i8, i8* %85, i64 16
  %87 = bitcast i8** %2 to i64*
  %88 = load i64, i64* %87, align 8, !noalias !21
  %89 = bitcast i8* %86 to i64*
  store i64 %88, i64* %89, align 8, !noalias !21
  %90 = getelementptr inbounds i8, i8* %85, i64 24
  %91 = bitcast %"class.v8::internal::HeapEntry"** %3 to i64*
  %92 = load i64, i64* %91, align 8, !noalias !21
  %93 = bitcast i8* %90 to i64*
  store i64 %92, i64* %93, align 8, !noalias !21
  %94 = getelementptr inbounds i8, i8* %85, i64 8
  %95 = bitcast i8* %94 to i64*
  store i64 %19, i64* %95, align 8, !noalias !21
  %96 = bitcast i8* %85 to %"struct.std::__1::__hash_node_base.1424"**
  store %"struct.std::__1::__hash_node_base.1424"* null, %"struct.std::__1::__hash_node_base.1424"** %96, align 8, !noalias !21
  %97 = getelementptr inbounds %"class.std::__1::__hash_table.1420", %"class.std::__1::__hash_table.1420"* %0, i64 0, i32 2, i32 0, i32 0
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  %100 = uitofp i64 %99 to float
  %101 = uitofp i64 %21 to float
  %102 = getelementptr inbounds %"class.std::__1::__hash_table.1420", %"class.std::__1::__hash_table.1420"* %0, i64 0, i32 3, i32 0, i32 0
  %103 = load float, float* %102, align 4
  %104 = fmul float %103, %101
  %105 = fcmp olt float %104, %100
  %106 = or i1 %22, %105
  br i1 %106, label %107, label %130

107:                                              ; preds = %83
  %108 = shl i64 %21, 1
  %109 = icmp ult i64 %21, 3
  %110 = tail call i64 @llvm.ctpop.i64(i64 %21) #13, !range !3
  %111 = icmp ugt i64 %110, 1
  %112 = or i1 %109, %111
  %113 = zext i1 %112 to i64
  %114 = or i64 %108, %113
  %115 = fdiv float %100, %103
  %116 = tail call float @llvm.ceil.f32(float %115) #13
  %117 = fptoui float %116 to i64
  %118 = icmp ult i64 %114, %117
  %119 = select i1 %118, i64 %117, i64 %114
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIS2_S7_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.1420"* %0, i64 %119)
  %120 = load i64, i64* %20, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %120) #13, !range !3
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %107
  %124 = add i64 %120, -1
  %125 = and i64 %124, %19
  br label %130

126:                                              ; preds = %107
  %127 = icmp ult i64 %19, %120
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %19, %120
  br label %130

130:                                              ; preds = %128, %126, %123, %83
  %131 = phi i64 [ %21, %83 ], [ %120, %123 ], [ %120, %126 ], [ %120, %128 ]
  %132 = phi i64 [ %84, %83 ], [ %125, %123 ], [ %19, %126 ], [ %129, %128 ]
  %133 = getelementptr inbounds %"class.std::__1::__hash_table.1420", %"class.std::__1::__hash_table.1420"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %134 = load %"struct.std::__1::__hash_node_base.1424"**, %"struct.std::__1::__hash_node_base.1424"*** %133, align 8
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %134, i64 %132
  %136 = load %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.1424"* %136, null
  br i1 %137, label %138, label %164

138:                                              ; preds = %130
  %139 = getelementptr inbounds %"class.std::__1::__hash_table.1420", %"class.std::__1::__hash_table.1420"* %0, i64 0, i32 1, i32 0, i32 0
  %140 = bitcast %"struct.std::__1::__hash_node_base.1424"* %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast i8* %85 to i64*
  store i64 %141, i64* %142, align 8
  %143 = bitcast %"struct.std::__1::__hash_node_base.1424"* %139 to i8**
  store i8* %85, i8** %143, align 8
  store %"struct.std::__1::__hash_node_base.1424"* %139, %"struct.std::__1::__hash_node_base.1424"** %135, align 8
  %144 = load %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %96, align 8
  %145 = icmp eq %"struct.std::__1::__hash_node_base.1424"* %144, null
  br i1 %145, label %171, label %146

146:                                              ; preds = %138
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %144, i64 1
  %148 = bitcast %"struct.std::__1::__hash_node_base.1424"* %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = tail call i64 @llvm.ctpop.i64(i64 %131) #13, !range !3
  %151 = icmp ugt i64 %150, 1
  br i1 %151, label %155, label %152

152:                                              ; preds = %146
  %153 = add i64 %131, -1
  %154 = and i64 %149, %153
  br label %159

155:                                              ; preds = %146
  %156 = icmp ult i64 %149, %131
  br i1 %156, label %159, label %157

157:                                              ; preds = %155
  %158 = urem i64 %149, %131
  br label %159

159:                                              ; preds = %152, %155, %157
  %160 = phi i64 [ %154, %152 ], [ %158, %157 ], [ %149, %155 ]
  %161 = load %"struct.std::__1::__hash_node_base.1424"**, %"struct.std::__1::__hash_node_base.1424"*** %133, align 8
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %161, i64 %160
  %163 = bitcast %"struct.std::__1::__hash_node_base.1424"** %162 to i8**
  br label %169

164:                                              ; preds = %130
  %165 = bitcast %"struct.std::__1::__hash_node_base.1424"* %136 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast i8* %85 to i64*
  store i64 %166, i64* %167, align 8
  %168 = bitcast %"struct.std::__1::__hash_node_base.1424"* %136 to i8**
  br label %169

169:                                              ; preds = %159, %164
  %170 = phi i8** [ %168, %164 ], [ %163, %159 ]
  store i8* %85, i8** %170, align 8
  br label %171

171:                                              ; preds = %169, %138
  %172 = bitcast i8* %85 to %"struct.std::__1::__hash_node_base.1424"*
  %173 = load i64, i64* %97, align 8
  %174 = add i64 %173, 1
  store i64 %174, i64* %97, align 8
  br label %175

175:                                              ; preds = %78, %60, %171
  %176 = phi i8 [ 1, %171 ], [ 0, %60 ], [ 0, %78 ]
  %177 = phi %"struct.std::__1::__hash_node_base.1424"* [ %172, %171 ], [ %46, %60 ], [ %68, %78 ]
  %178 = insertvalue { %"struct.std::__1::__hash_node_base.1424"*, i8 } undef, %"struct.std::__1::__hash_node_base.1424"* %177, 0
  %179 = insertvalue { %"struct.std::__1::__hash_node_base.1424"*, i8 } %178, i8 %176, 1
  ret { %"struct.std::__1::__hash_node_base.1424"*, i8 } %179
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIS2_S7_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.1420"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1420", %"class.std::__1::__hash_table.1420"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIS2_S7_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1420"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1420", %"class.std::__1::__hash_table.1420"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1420", %"class.std::__1::__hash_table.1420"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIS2_S7_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1420"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #14

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIS2_S7_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1420"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1420", %"class.std::__1::__hash_table.1420"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #20
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #21
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1420", %"class.std::__1::__hash_table.1420"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1424"**, %"struct.std::__1::__hash_node_base.1424"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1420"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1424"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1424"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #21
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1426", %"class.std::__1::__bucket_list_deallocator.1426"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1424"**, %"struct.std::__1::__hash_node_base.1424"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1424"* null, %"struct.std::__1::__hash_node_base.1424"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !24

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1420", %"class.std::__1::__hash_table.1420"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1424"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1424"**, %"struct.std::__1::__hash_node_base.1424"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1424"* null, %"struct.std::__1::__hash_node_base.1424"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1424"**, %"struct.std::__1::__hash_node_base.1424"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1424"* null, %"struct.std::__1::__hash_node_base.1424"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1424"**, %"struct.std::__1::__hash_node_base.1424"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1424"* null, %"struct.std::__1::__hash_node_base.1424"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1424"**, %"struct.std::__1::__hash_node_base.1424"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1424"* null, %"struct.std::__1::__hash_node_base.1424"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1424"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1424"**, %"struct.std::__1::__hash_node_base.1424"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1424"* %36, %"struct.std::__1::__hash_node_base.1424"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1424"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base.1424"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1424"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1424"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.1424"**, %"struct.std::__1::__hash_node_base.1424"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.1424"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base.1424"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.1424"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base.1424"* %103 to i8**
  %105 = load i8*, i8** %130, align 8
  %106 = load i8*, i8** %104, align 8
  %107 = icmp eq i8* %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base.1424"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base.1424"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base.1424"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base.1424"**, %"struct.std::__1::__hash_node_base.1424"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base.1424"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base.1424"**, %"struct.std::__1::__hash_node_base.1424"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1424"* %80, %"struct.std::__1::__hash_node_base.1424"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.1424"* %82, %"struct.std::__1::__hash_node_base.1424"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base.1424"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base.1424"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base.1424"* %129 to i8**
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base.1424"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base.1424"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base.1424"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base.1424"**, %"struct.std::__1::__hash_node_base.1424"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.1424"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base.1424"* %146 to i8**
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base.1424"* %134, %"struct.std::__1::__hash_node_base.1424"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base.1424"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base.1424"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base.1424"* %155 to i8**
  %157 = load i8*, i8** %147, align 8
  %158 = load i8*, i8** %156, align 8
  %159 = icmp eq i8* %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base.1424"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base.1424"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base.1424"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base.1424"**, %"struct.std::__1::__hash_node_base.1424"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base.1424"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base.1424"**, %"struct.std::__1::__hash_node_base.1424"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1424"* %132, %"struct.std::__1::__hash_node_base.1424"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base.1424"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base.1424"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table.1420", %"class.std::__1::__hash_table.1420"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base.1424"**, %"struct.std::__1::__hash_node_base.1424"*** %180, align 8
  store %"struct.std::__1::__hash_node_base.1424"** null, %"struct.std::__1::__hash_node_base.1424"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base.1424"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base.1424"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #21
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1426", %"class.std::__1::__bucket_list_deallocator.1426"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #15

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #15

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 1
  %4 = icmp ult i8 %3, 6
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.271, i64 0, i64 0)) #20
  unreachable

6:                                                ; preds = %1
  %7 = sext i8 %3 to i64
  %8 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table._ZNK2v88internal14Representation8MnemonicEv, i64 0, i64 %7
  %9 = load i8*, i8** %8, align 8
  ret i8* %9
}

declare i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext, i1 zeroext) local_unnamed_addr #4

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1448"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIiJiS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1444"*, i32* dereferenceable(4), i32* dereferenceable(4), %"class.v8::internal::HeapEntry"** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %5 = load i32, i32* %1, align 4
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::__1::__hash_table.1444", %"class.std::__1::__hash_table.1444"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %69, label %10

10:                                               ; preds = %4
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #13, !range !3
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, -1
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ugt i64 %8, %6
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %13, %16, %18
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1444", %"class.std::__1::__hash_table.1444"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.1448"**, %"struct.std::__1::__hash_node_base.1448"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.1448"* %25, null
  br i1 %26, label %69, label %27

27:                                               ; preds = %20
  %28 = add i64 %8, -1
  br i1 %12, label %29, label %51

29:                                               ; preds = %27, %46
  %30 = phi %"struct.std::__1::__hash_node_base.1448"* [ %32, %46 ], [ %25, %27 ]
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %30, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base.1448"* %32, null
  br i1 %33, label %69, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %32, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base.1448"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %6
  br i1 %38, label %46, label %39

39:                                               ; preds = %34
  %40 = icmp ult i64 %37, %8
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %37, %8
  br label %43

43:                                               ; preds = %41, %39
  %44 = phi i64 [ %42, %41 ], [ %37, %39 ]
  %45 = icmp eq i64 %44, %21
  br i1 %45, label %46, label %69

46:                                               ; preds = %43, %34
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %32, i64 2
  %48 = bitcast %"struct.std::__1::__hash_node_base.1448"* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %5
  br i1 %50, label %160, label %29

51:                                               ; preds = %27, %64
  %52 = phi %"struct.std::__1::__hash_node_base.1448"* [ %54, %64 ], [ %25, %27 ]
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %52, i64 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base.1448"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %54, i64 1
  %58 = bitcast %"struct.std::__1::__hash_node_base.1448"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, %6
  %61 = and i64 %59, %28
  %62 = icmp eq i64 %61, %21
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %69

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %54, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.1448"* %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, %5
  br i1 %68, label %160, label %51

69:                                               ; preds = %56, %51, %43, %29, %20, %4
  %70 = phi i64 [ %21, %20 ], [ undef, %4 ], [ %21, %29 ], [ %21, %43 ], [ %21, %51 ], [ %21, %56 ]
  %71 = tail call i8* @_Znwm(i64 32) #21, !noalias !26
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast i8* %72 to i32*
  %74 = load i32, i32* %2, align 4, !noalias !26
  store i32 %74, i32* %73, align 8, !noalias !26
  %75 = getelementptr inbounds i8, i8* %71, i64 24
  %76 = bitcast %"class.v8::internal::HeapEntry"** %3 to i64*
  %77 = load i64, i64* %76, align 8, !noalias !26
  %78 = bitcast i8* %75 to i64*
  store i64 %77, i64* %78, align 8, !noalias !26
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %6, i64* %80, align 8, !noalias !26
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.1448"**
  store %"struct.std::__1::__hash_node_base.1448"* null, %"struct.std::__1::__hash_node_base.1448"** %81, align 8, !noalias !26
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.1444", %"class.std::__1::__hash_table.1444"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %8 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.1444", %"class.std::__1::__hash_table.1444"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %9, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %8, 1
  %94 = icmp ult i64 %8, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %8) #13, !range !3
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #13
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.1444"* %0, i64 %104)
  %105 = load i64, i64* %7, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #13, !range !3
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %6
  br label %115

111:                                              ; preds = %92
  %112 = icmp ugt i64 %105, %6
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %6, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %8, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %6, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.1444", %"class.std::__1::__hash_table.1444"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.1448"**, %"struct.std::__1::__hash_node_base.1448"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.1448"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.1444", %"class.std::__1::__hash_table.1444"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.1448"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.1448"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.1448"* %124, %"struct.std::__1::__hash_node_base.1448"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.1448"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.1448"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #13, !range !3
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.1448"**, %"struct.std::__1::__hash_node_base.1448"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.1448"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.1448"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.1448"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.1448"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %46, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %46 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.1448"* [ %157, %156 ], [ %32, %46 ], [ %54, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.1448"*, i8 } undef, %"struct.std::__1::__hash_node_base.1448"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.1448"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.1448"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.1444"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1444", %"class.std::__1::__hash_table.1444"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1444"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1444", %"class.std::__1::__hash_table.1444"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1444", %"class.std::__1::__hash_table.1444"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1444"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1444"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1444", %"class.std::__1::__hash_table.1444"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #20
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #21
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1444", %"class.std::__1::__hash_table.1444"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1448"**, %"struct.std::__1::__hash_node_base.1448"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1444"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1448"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1448"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #21
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1450", %"class.std::__1::__bucket_list_deallocator.1450"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1448"**, %"struct.std::__1::__hash_node_base.1448"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1448"* null, %"struct.std::__1::__hash_node_base.1448"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !29

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1444", %"class.std::__1::__hash_table.1444"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1448"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1448"**, %"struct.std::__1::__hash_node_base.1448"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1448"* null, %"struct.std::__1::__hash_node_base.1448"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1448"**, %"struct.std::__1::__hash_node_base.1448"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1448"* null, %"struct.std::__1::__hash_node_base.1448"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1448"**, %"struct.std::__1::__hash_node_base.1448"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1448"* null, %"struct.std::__1::__hash_node_base.1448"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1448"**, %"struct.std::__1::__hash_node_base.1448"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1448"* null, %"struct.std::__1::__hash_node_base.1448"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1448"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1448"**, %"struct.std::__1::__hash_node_base.1448"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1448"* %36, %"struct.std::__1::__hash_node_base.1448"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1448"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base.1448"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1448"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1448"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.1448"**, %"struct.std::__1::__hash_node_base.1448"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.1448"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base.1448"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.1448"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base.1448"* %103 to i32*
  %105 = load i32, i32* %130, align 4
  %106 = load i32, i32* %104, align 4
  %107 = icmp eq i32 %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base.1448"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base.1448"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base.1448"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base.1448"**, %"struct.std::__1::__hash_node_base.1448"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base.1448"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base.1448"**, %"struct.std::__1::__hash_node_base.1448"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1448"* %80, %"struct.std::__1::__hash_node_base.1448"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.1448"* %82, %"struct.std::__1::__hash_node_base.1448"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base.1448"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base.1448"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base.1448"* %129 to i32*
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base.1448"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base.1448"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base.1448"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base.1448"**, %"struct.std::__1::__hash_node_base.1448"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.1448"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base.1448"* %146 to i32*
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base.1448"* %134, %"struct.std::__1::__hash_node_base.1448"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base.1448"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base.1448"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base.1448"* %155 to i32*
  %157 = load i32, i32* %147, align 4
  %158 = load i32, i32* %156, align 4
  %159 = icmp eq i32 %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base.1448"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base.1448"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base.1448"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base.1448"**, %"struct.std::__1::__hash_node_base.1448"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base.1448"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base.1448"**, %"struct.std::__1::__hash_node_base.1448"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1448"* %132, %"struct.std::__1::__hash_node_base.1448"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base.1448"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1448", %"struct.std::__1::__hash_node_base.1448"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base.1448"*, %"struct.std::__1::__hash_node_base.1448"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base.1448"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table.1444", %"class.std::__1::__hash_table.1444"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base.1448"**, %"struct.std::__1::__hash_node_base.1448"*** %180, align 8
  store %"struct.std::__1::__hash_node_base.1448"** null, %"struct.std::__1::__hash_node_base.1448"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base.1448"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base.1448"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #21
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1450", %"class.std::__1::__bucket_list_deallocator.1450"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal24RootsReferencesExtractorD0Ev(%"class.v8::internal::RootsReferencesExtractor"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.v8::internal::RootsReferencesExtractor"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal24RootsReferencesExtractor17VisitRootPointersENS0_4RootEPKcNS0_14FullObjectSlotES5_(%"class.v8::internal::RootsReferencesExtractor"*, i32, i8*, i64, i64) unnamed_addr #2 comdat align 2 {
  %6 = icmp ult i64 %3, %4
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = bitcast %"class.v8::internal::RootsReferencesExtractor"* %0 to void (%"class.v8::internal::RootsReferencesExtractor"*, i32, i8*, i64)***
  br label %10

9:                                                ; preds = %10, %5
  ret void

10:                                               ; preds = %7, %10
  %11 = phi i64 [ %3, %7 ], [ %15, %10 ]
  %12 = load void (%"class.v8::internal::RootsReferencesExtractor"*, i32, i8*, i64)**, void (%"class.v8::internal::RootsReferencesExtractor"*, i32, i8*, i64)*** %8, align 8
  %13 = getelementptr inbounds void (%"class.v8::internal::RootsReferencesExtractor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootsReferencesExtractor"*, i32, i8*, i64)** %12, i64 3
  %14 = load void (%"class.v8::internal::RootsReferencesExtractor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootsReferencesExtractor"*, i32, i8*, i64)** %13, align 8
  tail call void %14(%"class.v8::internal::RootsReferencesExtractor"* %0, i32 %1, i8* %2, i64 %11) #13
  %15 = add i64 %11, 8
  %16 = icmp ult i64 %15, %4
  br i1 %16, label %10, label %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal24RootsReferencesExtractor16VisitRootPointerENS0_4RootEPKcNS0_14FullObjectSlotE(%"class.v8::internal::RootsReferencesExtractor"*, i32, i8*, i64) unnamed_addr #2 comdat align 2 {
  %5 = icmp eq i32 %1, 11
  %6 = getelementptr inbounds %"class.v8::internal::RootsReferencesExtractor", %"class.v8::internal::RootsReferencesExtractor"* %0, i64 0, i32 1
  %7 = load %"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::V8HeapExplorer"** %6, align 8
  br i1 %5, label %14, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.v8::internal::RootsReferencesExtractor", %"class.v8::internal::RootsReferencesExtractor"* %0, i64 0, i32 2
  %10 = load i8, i8* %9, align 8, !range !4
  %11 = icmp ne i8 %10, 0
  %12 = inttoptr i64 %3 to i64*
  %13 = load i64, i64* %12, align 8
  tail call void @_ZN2v88internal14V8HeapExplorer21SetGcSubrootReferenceENS0_4RootEPKcbNS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"* %7, i32 %1, i8* %2, i1 zeroext %11, i64 %13)
  br label %25

14:                                               ; preds = %4
  %15 = inttoptr i64 %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %7, i64 0, i32 3
  %18 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %17, align 8
  %19 = tail call i8* (%"class.v8::internal::StringsStorage"*, i8*, ...) @_ZN2v88internal14StringsStorage12GetFormattedEPKcz(%"class.v8::internal::StringsStorage"* %18, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.338, i64 0, i64 0), i8* %2) #13
  tail call void @_ZN2v88internal14V8HeapExplorer9TagObjectENS0_6ObjectEPKc(%"class.v8::internal::V8HeapExplorer"* %7, i64 %16, i8* %19) #13
  %20 = load %"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::V8HeapExplorer"** %6, align 8
  %21 = getelementptr inbounds %"class.v8::internal::RootsReferencesExtractor", %"class.v8::internal::RootsReferencesExtractor"* %0, i64 0, i32 2
  %22 = load i8, i8* %21, align 8, !range !4
  %23 = icmp ne i8 %22, 0
  %24 = load i64, i64* %15, align 8
  tail call void @_ZN2v88internal14V8HeapExplorer21SetGcSubrootReferenceENS0_4RootEPKcbNS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"* %20, i32 11, i8* %2, i1 zeroext %23, i64 %24)
  br label %25

25:                                               ; preds = %8, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal24RootsReferencesExtractor17VisitRootPointersENS0_4RootEPKcNS0_27OffHeapCompressedObjectSlotES5_(%"class.v8::internal::RootsReferencesExtractor"*, i32, i8*, i64, i64) unnamed_addr #2 comdat align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::RootsReferencesExtractor", %"class.v8::internal::RootsReferencesExtractor"* %0, i64 0, i32 1
  %7 = load %"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::V8HeapExplorer"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %7, i64 0, i32 1
  %9 = bitcast %"class.v8::internal::Heap"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, -41416
  %12 = inttoptr i64 %11 to %"class.v8::internal::Isolate"*
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %3, %4
  br i1 %15, label %16, label %28

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.v8::internal::RootsReferencesExtractor", %"class.v8::internal::RootsReferencesExtractor"* %0, i64 0, i32 2
  %18 = and i64 %14, 4294967295
  %19 = icmp eq i64 %18, 0
  tail call void @llvm.assume(i1 %19) #13
  %20 = load i8, i8* %17, align 8, !range !4
  %21 = icmp ne i8 %20, 0
  %22 = inttoptr i64 %3 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %14, %24
  tail call void @_ZN2v88internal14V8HeapExplorer21SetGcSubrootReferenceENS0_4RootEPKcbNS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"* %7, i32 %1, i8* %2, i1 zeroext %21, i64 %25)
  %26 = add i64 %3, 4
  %27 = icmp ult i64 %26, %4
  br i1 %27, label %29, label %28

28:                                               ; preds = %29, %16, %5
  ret void

29:                                               ; preds = %16, %29
  %30 = phi i64 [ %38, %29 ], [ %26, %16 ]
  %31 = load %"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::V8HeapExplorer"** %6, align 8
  %32 = load i8, i8* %17, align 8, !range !4
  %33 = icmp ne i8 %32, 0
  %34 = inttoptr i64 %30 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %14, %36
  tail call void @_ZN2v88internal14V8HeapExplorer21SetGcSubrootReferenceENS0_4RootEPKcbNS0_6ObjectE(%"class.v8::internal::V8HeapExplorer"* %31, i32 %1, i8* %2, i1 zeroext %33, i64 %37)
  %38 = add i64 %30, 4
  %39 = icmp ult i64 %38, %4
  br i1 %39, label %29, label %28
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RootVisitor11SynchronizeENS0_22VisitorSynchronization7SyncTagE(%"class.v8::internal::RootVisitor"*, i32) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RootVisitor16VisitRootPointerENS0_4RootEPKcNS0_14FullObjectSlotE(%"class.v8::internal::RootVisitor"*, i32, i8*, i64) unnamed_addr #2 comdat align 2 {
  %5 = add i64 %3, 8
  %6 = bitcast %"class.v8::internal::RootVisitor"* %0 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)***
  %7 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %7, i64 2
  %9 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %8, align 8
  tail call void %9(%"class.v8::internal::RootVisitor"* %0, i32 %1, i8* %2, i64 %3, i64 %5) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal26IndexedReferencesExtractorD0Ev(%"class.v8::internal::IndexedReferencesExtractor"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.v8::internal::IndexedReferencesExtractor"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal26IndexedReferencesExtractor13VisitPointersENS0_10HeapObjectENS0_20CompressedObjectSlotES3_(%"class.v8::internal::IndexedReferencesExtractor"*, i64, i64, i64) unnamed_addr #2 comdat align 2 {
  %5 = bitcast %"class.v8::internal::IndexedReferencesExtractor"* %0 to void (%"class.v8::internal::IndexedReferencesExtractor"*, i64, i64, i64)***
  %6 = load void (%"class.v8::internal::IndexedReferencesExtractor"*, i64, i64, i64)**, void (%"class.v8::internal::IndexedReferencesExtractor"*, i64, i64, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::internal::IndexedReferencesExtractor"*, i64, i64, i64)*, void (%"class.v8::internal::IndexedReferencesExtractor"*, i64, i64, i64)** %6, i64 3
  %8 = load void (%"class.v8::internal::IndexedReferencesExtractor"*, i64, i64, i64)*, void (%"class.v8::internal::IndexedReferencesExtractor"*, i64, i64, i64)** %7, align 8
  tail call void %8(%"class.v8::internal::IndexedReferencesExtractor"* %0, i64 %1, i64 %2, i64 %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal26IndexedReferencesExtractor13VisitPointersENS0_10HeapObjectENS0_25CompressedMaybeObjectSlotES3_(%"class.v8::internal::IndexedReferencesExtractor"*, i64, i64, i64) unnamed_addr #2 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::IndexedReferencesExtractor", %"class.v8::internal::IndexedReferencesExtractor"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, %2
  br i1 %7, label %8, label %9, !prof !2

8:                                                ; preds = %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.640, i64 0, i64 0)) #20
  unreachable

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.v8::internal::IndexedReferencesExtractor", %"class.v8::internal::IndexedReferencesExtractor"* %0, i64 0, i32 4, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %11, %3
  br i1 %12, label %20, label %13, !prof !2

13:                                               ; preds = %9
  %14 = icmp ult i64 %2, %3
  br i1 %14, label %15, label %21

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.v8::internal::IndexedReferencesExtractor", %"class.v8::internal::IndexedReferencesExtractor"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.v8::internal::IndexedReferencesExtractor", %"class.v8::internal::IndexedReferencesExtractor"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.v8::internal::IndexedReferencesExtractor", %"class.v8::internal::IndexedReferencesExtractor"* %0, i64 0, i32 5
  %19 = getelementptr inbounds %"class.v8::internal::IndexedReferencesExtractor", %"class.v8::internal::IndexedReferencesExtractor"* %0, i64 0, i32 6
  br label %22

20:                                               ; preds = %9
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.641, i64 0, i64 0)) #20
  unreachable

21:                                               ; preds = %60, %13
  ret void

22:                                               ; preds = %63, %15
  %23 = phi i64 [ %6, %15 ], [ %64, %63 ]
  %24 = phi i64 [ %2, %15 ], [ %61, %63 ]
  %25 = sub i64 %24, %23
  %26 = lshr i64 %25, 2
  %27 = load %"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::V8HeapExplorer"** %16, align 8
  %28 = shl i64 %26, 32
  %29 = ashr exact i64 %28, 32
  %30 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %27, i64 0, i32 12, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = lshr i64 %29, 6
  %33 = getelementptr inbounds i64, i64* %31, i64 %32
  %34 = and i64 %29, 63
  %35 = shl i64 1, %34
  %36 = load i64, i64* %33, align 8
  %37 = and i64 %35, %36
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %22
  %40 = xor i64 %35, -1
  %41 = and i64 %36, %40
  store i64 %41, i64* %33, align 8
  br label %60

42:                                               ; preds = %22
  %43 = inttoptr i64 %24 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = and i64 %45, 1
  %47 = icmp ne i64 %46, 0
  %48 = icmp ne i32 %44, 3
  %49 = and i1 %48, %47
  br i1 %49, label %50, label %60

50:                                               ; preds = %42
  %51 = and i64 %24, -4294967296
  %52 = and i64 %45, 4294967293
  %53 = or i64 %52, %51
  %54 = load i64, i64* %17, align 8
  %55 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %18, align 8
  %56 = load i32, i32* %19, align 8
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %19, align 8
  %58 = trunc i64 %25 to i32
  %59 = and i32 %58, -4
  tail call void @_ZN2v88internal14V8HeapExplorer18SetHiddenReferenceENS0_10HeapObjectEPNS0_9HeapEntryEiNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %27, i64 %54, %"class.v8::internal::HeapEntry"* %55, i32 %56, i64 %53, i32 %59) #13
  br label %60

60:                                               ; preds = %50, %42, %39
  %61 = add i64 %24, 4
  %62 = icmp ult i64 %61, %3
  br i1 %62, label %63, label %21

63:                                               ; preds = %60
  %64 = load i64, i64* %5, align 8
  br label %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor23VisitCustomWeakPointersENS0_10HeapObjectENS0_20CompressedObjectSlotES3_(%"class.v8::internal::ObjectVisitor"*, i64, i64, i64) unnamed_addr #2 comdat align 2 {
  %5 = bitcast %"class.v8::internal::ObjectVisitor"* %0 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %6 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %6, i64 2
  %8 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %7, align 8
  tail call void %8(%"class.v8::internal::ObjectVisitor"* %0, i64 %1, i64 %2, i64 %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor12VisitPointerENS0_10HeapObjectENS0_20CompressedObjectSlotE(%"class.v8::internal::ObjectVisitor"*, i64, i64) unnamed_addr #2 comdat align 2 {
  %4 = add i64 %2, 4
  %5 = bitcast %"class.v8::internal::ObjectVisitor"* %0 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %6 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %6, i64 2
  %8 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %7, align 8
  tail call void %8(%"class.v8::internal::ObjectVisitor"* %0, i64 %1, i64 %2, i64 %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor12VisitPointerENS0_10HeapObjectENS0_25CompressedMaybeObjectSlotE(%"class.v8::internal::ObjectVisitor"*, i64, i64) unnamed_addr #2 comdat align 2 {
  %4 = add i64 %2, 4
  %5 = bitcast %"class.v8::internal::ObjectVisitor"* %0 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %6 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %6, i64 3
  %8 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %7, align 8
  tail call void %8(%"class.v8::internal::ObjectVisitor"* %0, i64 %1, i64 %2, i64 %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor22VisitCustomWeakPointerENS0_10HeapObjectENS0_20CompressedObjectSlotE(%"class.v8::internal::ObjectVisitor"*, i64, i64) unnamed_addr #2 comdat align 2 {
  %4 = add i64 %2, 4
  %5 = bitcast %"class.v8::internal::ObjectVisitor"* %0 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %6 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %6, i64 4
  %8 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %7, align 8
  tail call void %8(%"class.v8::internal::ObjectVisitor"* %0, i64 %1, i64 %2, i64 %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor14VisitEphemeronENS0_10HeapObjectEiNS0_20CompressedObjectSlotES3_(%"class.v8::internal::ObjectVisitor"*, i64, i32, i64, i64) unnamed_addr #2 comdat align 2 {
  %6 = bitcast %"class.v8::internal::ObjectVisitor"* %0 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64)***
  %7 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %7, i64 5
  %9 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %8, align 8
  tail call void %9(%"class.v8::internal::ObjectVisitor"* %0, i64 %1, i64 %3) #13
  %10 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %6, align 8
  %11 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %10, i64 5
  %12 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %11, align 8
  tail call void %12(%"class.v8::internal::ObjectVisitor"* %0, i64 %1, i64 %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal26IndexedReferencesExtractor15VisitCodeTargetENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::IndexedReferencesExtractor"*, i64, %"class.v8::internal::RelocInfo"*) unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %2, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 1
  %8 = sext i32 %7 to i64
  %9 = add i64 %5, 4
  %10 = add i64 %9, %8
  %11 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() #13
  %12 = ptrtoint i8* %11 to i64
  %13 = tail call i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobCodeSizeEv() #13
  %14 = icmp uge i64 %10, %12
  %15 = zext i32 %13 to i64
  %16 = add i64 %15, %12
  %17 = icmp ugt i64 %16, %10
  %18 = and i1 %14, %17
  br i1 %18, label %19, label %20, !prof !2

19:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.642, i64 0, i64 0)) #20
  unreachable

20:                                               ; preds = %3
  %21 = add i64 %10, -63
  %22 = getelementptr inbounds %"class.v8::internal::IndexedReferencesExtractor", %"class.v8::internal::IndexedReferencesExtractor"* %0, i64 0, i32 1
  %23 = load %"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::V8HeapExplorer"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::IndexedReferencesExtractor", %"class.v8::internal::IndexedReferencesExtractor"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::IndexedReferencesExtractor", %"class.v8::internal::IndexedReferencesExtractor"* %0, i64 0, i32 5
  %27 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::IndexedReferencesExtractor", %"class.v8::internal::IndexedReferencesExtractor"* %0, i64 0, i32 6
  %29 = load i32, i32* %28, align 8
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %28, align 8
  tail call void @_ZN2v88internal14V8HeapExplorer18SetHiddenReferenceENS0_10HeapObjectEPNS0_9HeapEntryEiNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %23, i64 %25, %"class.v8::internal::HeapEntry"* %27, i32 %29, i64 %21, i32 -4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal26IndexedReferencesExtractor20VisitEmbeddedPointerENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::IndexedReferencesExtractor"*, i64, %"class.v8::internal::RelocInfo"*) unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %2, i64 0, i32 1
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 3
  br i1 %6, label %7, label %20

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i32
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13, !prof !2

12:                                               ; preds = %7
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.643, i64 0, i64 0)) #20
  unreachable

13:                                               ; preds = %7
  %14 = bitcast %"class.v8::internal::RelocInfo"* %2 to i32**
  %15 = load i32*, i32** %14, align 8
  %16 = load i32, i32* %15, align 1
  %17 = and i64 %9, -4294967296
  %18 = zext i32 %16 to i64
  %19 = or i64 %17, %18
  br label %24

20:                                               ; preds = %3
  %21 = bitcast %"class.v8::internal::RelocInfo"* %2 to i64**
  %22 = load i64*, i64** %21, align 8
  %23 = load i64, i64* %22, align 1
  br label %24

24:                                               ; preds = %13, %20
  %25 = phi i64 [ %19, %13 ], [ %23, %20 ]
  %26 = getelementptr inbounds %"class.v8::internal::IndexedReferencesExtractor", %"class.v8::internal::IndexedReferencesExtractor"* %0, i64 0, i32 1
  %27 = load %"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::V8HeapExplorer"** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::IndexedReferencesExtractor", %"class.v8::internal::IndexedReferencesExtractor"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::IndexedReferencesExtractor", %"class.v8::internal::IndexedReferencesExtractor"* %0, i64 0, i32 5
  %31 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::IndexedReferencesExtractor", %"class.v8::internal::IndexedReferencesExtractor"* %0, i64 0, i32 6
  %33 = load i32, i32* %32, align 8
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %32, align 8
  tail call void @_ZN2v88internal14V8HeapExplorer18SetHiddenReferenceENS0_10HeapObjectEPNS0_9HeapEntryEiNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %27, i64 %29, %"class.v8::internal::HeapEntry"* %31, i32 %33, i64 %25, i32 -4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor17VisitRuntimeEntryENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor22VisitExternalReferenceENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor22VisitExternalReferenceENS0_7ForeignEPm(%"class.v8::internal::ObjectVisitor"*, i64, i64*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor22VisitInternalReferenceENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor18VisitOffHeapTargetENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*) unnamed_addr #2 comdat align 2 {
  ret void
}

declare void @_ZN2v88internal13ObjectVisitor14VisitRelocInfoEPNS0_13RelocIteratorE(%"class.v8::internal::ObjectVisitor"*, %"class.v8::internal::RelocIterator"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal26IndexedReferencesExtractor15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::IndexedReferencesExtractor"*, i64) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::IndexedReferencesExtractor", %"class.v8::internal::IndexedReferencesExtractor"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::V8HeapExplorer"*, %"class.v8::internal::V8HeapExplorer"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::V8HeapExplorer", %"class.v8::internal::V8HeapExplorer"* %4, i64 0, i32 12, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = and i64 %7, -2
  store i64 %11, i64* %6, align 8
  br label %26

12:                                               ; preds = %2
  %13 = and i64 %1, -4294967296
  %14 = add i64 %1, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %13, %17
  %19 = getelementptr inbounds %"class.v8::internal::IndexedReferencesExtractor", %"class.v8::internal::IndexedReferencesExtractor"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::IndexedReferencesExtractor", %"class.v8::internal::IndexedReferencesExtractor"* %0, i64 0, i32 5
  %22 = load %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::IndexedReferencesExtractor", %"class.v8::internal::IndexedReferencesExtractor"* %0, i64 0, i32 6
  %24 = load i32, i32* %23, align 8
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %23, align 8
  tail call void @_ZN2v88internal14V8HeapExplorer18SetHiddenReferenceENS0_10HeapObjectEPNS0_9HeapEntryEiNS0_6ObjectEi(%"class.v8::internal::V8HeapExplorer"* %4, i64 %20, %"class.v8::internal::HeapEntry"* %22, i32 %24, i64 %18, i32 0) #13
  br label %26

26:                                               ; preds = %12, %10
  ret void
}

declare i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() local_unnamed_addr #4

declare i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobCodeSizeEv() local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal23GlobalObjectsEnumeratorD0Ev(%"class.v8::internal::GlobalObjectsEnumerator"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::GlobalObjectsEnumerator", %"class.v8::internal::GlobalObjectsEnumerator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal23GlobalObjectsEnumeratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::GlobalObjectsEnumerator", %"class.v8::internal::GlobalObjectsEnumerator"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.v8::internal::Handle.1331"*, %"class.v8::internal::Handle.1331"** %3, align 8
  %5 = icmp eq %"class.v8::internal::Handle.1331"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.v8::internal::Handle.1331"* %4 to i64
  %8 = getelementptr inbounds %"class.v8::internal::GlobalObjectsEnumerator", %"class.v8::internal::GlobalObjectsEnumerator"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %"class.v8::internal::Handle.1331"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.v8::internal::Handle.1331"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #21
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.v8::internal::GlobalObjectsEnumerator"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal23GlobalObjectsEnumerator17VisitRootPointersENS0_4RootEPKcNS0_14FullObjectSlotES5_(%"class.v8::internal::GlobalObjectsEnumerator"*, i32, i8*, i64, i64) unnamed_addr #2 comdat align 2 {
  tail call void @_ZN2v88internal23GlobalObjectsEnumerator21VisitRootPointersImplINS0_14FullObjectSlotEEEvNS0_4RootEPKcT_S7_(%"class.v8::internal::GlobalObjectsEnumerator"* %0, i32 %1, i8* %2, i64 %3, i64 %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal23GlobalObjectsEnumerator17VisitRootPointersENS0_4RootEPKcNS0_27OffHeapCompressedObjectSlotES5_(%"class.v8::internal::GlobalObjectsEnumerator"*, i32, i8*, i64, i64) unnamed_addr #2 comdat align 2 {
  tail call void @_ZN2v88internal23GlobalObjectsEnumerator21VisitRootPointersImplINS0_27OffHeapCompressedObjectSlotEEEvNS0_4RootEPKcT_S7_(%"class.v8::internal::GlobalObjectsEnumerator"* %0, i32 %1, i8* %2, i64 %3, i64 %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal23GlobalObjectsEnumerator21VisitRootPointersImplINS0_14FullObjectSlotEEEvNS0_4RootEPKcT_S7_(%"class.v8::internal::GlobalObjectsEnumerator"*, i32, i8*, i64, i64) local_unnamed_addr #2 comdat align 2 {
  %6 = alloca %"class.v8::internal::Context", align 8
  %7 = icmp ult i64 %3, %4
  br i1 %7, label %8, label %19

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.v8::internal::GlobalObjectsEnumerator", %"class.v8::internal::GlobalObjectsEnumerator"* %0, i64 0, i32 1
  %10 = bitcast %"class.v8::internal::Context"* %6 to i8*
  %11 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::GlobalObjectsEnumerator", %"class.v8::internal::GlobalObjectsEnumerator"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.v8::internal::GlobalObjectsEnumerator", %"class.v8::internal::GlobalObjectsEnumerator"* %0, i64 0, i32 2, i32 0, i32 1
  %14 = getelementptr inbounds %"class.v8::internal::GlobalObjectsEnumerator", %"class.v8::internal::GlobalObjectsEnumerator"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.v8::internal::Handle.1331"** %13 to i64*
  %16 = bitcast %"class.std::__1::vector.1499"* %12 to i64*
  %17 = bitcast %"class.v8::internal::Handle.1331"** %14 to i64*
  %18 = getelementptr inbounds %"class.std::__1::vector.1499", %"class.std::__1::vector.1499"* %12, i64 0, i32 0, i32 0
  br label %20

19:                                               ; preds = %161, %5
  ret void

20:                                               ; preds = %8, %161
  %21 = phi i64 [ %3, %8 ], [ %162, %161 ]
  %22 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 0, i32 4
  %24 = inttoptr i64 %21 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = load i64, i64* %23, align 8
  %27 = and i64 %25, 1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %161, label %29

29:                                               ; preds = %20
  %30 = add i64 %25, -1
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i64 %26, 4294967295
  %34 = icmp eq i64 %33, 0
  call void @llvm.assume(i1 %34) #13
  %35 = zext i32 %32 to i64
  %36 = or i64 %26, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = icmp eq i16 %39, 144
  br i1 %40, label %41, label %161

41:                                               ; preds = %29
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  store i64 %25, i64* %11, align 8
  %42 = call i64 @_ZN2v88internal7Context12global_proxyEv(%"class.v8::internal::Context"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  %43 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %43, i64 0, i32 0, i32 4
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %42, -1
  %47 = inttoptr i64 %46 to i32*
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i64 %45, 4294967295
  %50 = icmp eq i64 %49, 0
  call void @llvm.assume(i1 %50) #13
  %51 = zext i32 %48 to i64
  %52 = or i64 %45, %51
  %53 = add i64 %52, 7
  %54 = inttoptr i64 %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = icmp eq i16 %55, 190
  br i1 %56, label %57, label %161

57:                                               ; preds = %41
  %58 = load atomic i32, i32* %47 monotonic, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %45, %59
  %61 = add i64 %60, 15
  %62 = inttoptr i64 %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %45, %64
  %66 = and i64 %64, 1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %161, label %68

68:                                               ; preds = %57
  %69 = add i64 %65, -1
  %70 = inttoptr i64 %69 to i32*
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = zext i32 %71 to i64
  %73 = or i64 %45, %72
  %74 = add i64 %73, 7
  %75 = inttoptr i64 %74 to i16*
  %76 = load atomic i16, i16* %75 monotonic, align 2
  %77 = icmp eq i16 %76, 189
  br i1 %77, label %78, label %161

78:                                               ; preds = %68
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %43, i64 0, i32 31, i32 4
  %80 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %79, align 8
  %81 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %80, null
  br i1 %81, label %85, label %82

82:                                               ; preds = %78
  %83 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %80, i64 %65) #13
  %84 = ptrtoint i64* %83 to i64
  br label %98

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %43, i64 0, i32 31, i32 0
  %87 = load i64*, i64** %86, align 8
  %88 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %43, i64 0, i32 31, i32 1
  %89 = load i64*, i64** %88, align 8
  %90 = icmp eq i64* %87, %89
  br i1 %90, label %91, label %93

91:                                               ; preds = %85
  %92 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %43) #13
  br label %93

93:                                               ; preds = %91, %85
  %94 = phi i64* [ %92, %91 ], [ %87, %85 ]
  %95 = ptrtoint i64* %94 to i64
  %96 = add i64 %95, 8
  %97 = inttoptr i64 %96 to i64*
  store i64* %97, i64** %86, align 8
  store i64 %65, i64* %94, align 8
  br label %98

98:                                               ; preds = %82, %93
  %99 = phi i64 [ %84, %82 ], [ %95, %93 ]
  %100 = load %"class.v8::internal::Handle.1331"*, %"class.v8::internal::Handle.1331"** %13, align 8
  %101 = load %"class.v8::internal::Handle.1331"*, %"class.v8::internal::Handle.1331"** %14, align 8
  %102 = icmp ult %"class.v8::internal::Handle.1331"* %100, %101
  %103 = ptrtoint %"class.v8::internal::Handle.1331"* %101 to i64
  br i1 %102, label %104, label %108

104:                                              ; preds = %98
  %105 = bitcast %"class.v8::internal::Handle.1331"* %100 to i64*
  store i64 %99, i64* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::Handle.1331", %"class.v8::internal::Handle.1331"* %100, i64 1
  %107 = ptrtoint %"class.v8::internal::Handle.1331"* %106 to i64
  store i64 %107, i64* %15, align 8
  br label %161

108:                                              ; preds = %98
  %109 = ptrtoint %"class.v8::internal::Handle.1331"* %100 to i64
  %110 = load i64, i64* %16, align 8
  %111 = sub i64 %109, %110
  %112 = ashr exact i64 %111, 3
  %113 = add nsw i64 %112, 1
  %114 = icmp ugt i64 %113, 2305843009213693951
  br i1 %114, label %115, label %117

115:                                              ; preds = %108
  %116 = bitcast %"class.std::__1::vector.1499"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %116) #20
  unreachable

117:                                              ; preds = %108
  %118 = sub i64 %103, %110
  %119 = ashr exact i64 %118, 3
  %120 = icmp ult i64 %119, 1152921504606846975
  br i1 %120, label %121, label %129

121:                                              ; preds = %117
  %122 = ashr exact i64 %118, 2
  %123 = icmp ult i64 %122, %113
  %124 = select i1 %123, i64 %113, i64 %122
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %134, label %126

126:                                              ; preds = %121
  %127 = icmp ugt i64 %124, 2305843009213693951
  br i1 %127, label %128, label %129

128:                                              ; preds = %126
  call void @abort() #20
  unreachable

129:                                              ; preds = %126, %117
  %130 = phi i64 [ %124, %126 ], [ 2305843009213693951, %117 ]
  %131 = shl i64 %130, 3
  %132 = call i8* @_Znwm(i64 %131) #21
  %133 = bitcast i8* %132 to %"class.v8::internal::Handle.1331"*
  br label %134

134:                                              ; preds = %129, %121
  %135 = phi i64 [ %130, %129 ], [ 0, %121 ]
  %136 = phi %"class.v8::internal::Handle.1331"* [ %133, %129 ], [ null, %121 ]
  %137 = getelementptr inbounds %"class.v8::internal::Handle.1331", %"class.v8::internal::Handle.1331"* %136, i64 %112
  %138 = getelementptr inbounds %"class.v8::internal::Handle.1331", %"class.v8::internal::Handle.1331"* %136, i64 %135
  %139 = ptrtoint %"class.v8::internal::Handle.1331"* %138 to i64
  %140 = bitcast %"class.v8::internal::Handle.1331"* %137 to i64*
  store i64 %99, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::Handle.1331", %"class.v8::internal::Handle.1331"* %137, i64 1
  %142 = ptrtoint %"class.v8::internal::Handle.1331"* %141 to i64
  %143 = load %"class.v8::internal::Handle.1331"*, %"class.v8::internal::Handle.1331"** %18, align 8
  %144 = load i64, i64* %15, align 8
  %145 = ptrtoint %"class.v8::internal::Handle.1331"* %143 to i64
  %146 = sub i64 %144, %145
  %147 = ashr exact i64 %146, 3
  %148 = sub nsw i64 0, %147
  %149 = getelementptr inbounds %"class.v8::internal::Handle.1331", %"class.v8::internal::Handle.1331"* %137, i64 %148
  %150 = ptrtoint %"class.v8::internal::Handle.1331"* %149 to i64
  %151 = icmp sgt i64 %146, 0
  br i1 %151, label %152, label %156

152:                                              ; preds = %134
  %153 = bitcast %"class.v8::internal::Handle.1331"* %149 to i8*
  %154 = bitcast %"class.v8::internal::Handle.1331"* %143 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %153, i8* align 8 %154, i64 %146, i1 false) #13
  %155 = load %"class.v8::internal::Handle.1331"*, %"class.v8::internal::Handle.1331"** %18, align 8
  br label %156

156:                                              ; preds = %152, %134
  %157 = phi %"class.v8::internal::Handle.1331"* [ %143, %134 ], [ %155, %152 ]
  store i64 %150, i64* %16, align 8
  store i64 %142, i64* %15, align 8
  store i64 %139, i64* %17, align 8
  %158 = icmp eq %"class.v8::internal::Handle.1331"* %157, null
  br i1 %158, label %161, label %159

159:                                              ; preds = %156
  %160 = bitcast %"class.v8::internal::Handle.1331"* %157 to i8*
  call void @_ZdlPv(i8* %160) #21
  br label %161

161:                                              ; preds = %57, %20, %41, %159, %156, %104, %68, %29
  %162 = add i64 %21, 8
  %163 = icmp ult i64 %162, %4
  br i1 %163, label %20, label %19
}

declare i64 @_ZN2v88internal7Context12global_proxyEv(%"class.v8::internal::Context"*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal23GlobalObjectsEnumerator21VisitRootPointersImplINS0_27OffHeapCompressedObjectSlotEEEvNS0_4RootEPKcT_S7_(%"class.v8::internal::GlobalObjectsEnumerator"*, i32, i8*, i64, i64) local_unnamed_addr #2 comdat align 2 {
  %6 = alloca %"class.v8::internal::Context", align 8
  %7 = icmp ult i64 %3, %4
  br i1 %7, label %8, label %19

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.v8::internal::GlobalObjectsEnumerator", %"class.v8::internal::GlobalObjectsEnumerator"* %0, i64 0, i32 1
  %10 = bitcast %"class.v8::internal::Context"* %6 to i8*
  %11 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::GlobalObjectsEnumerator", %"class.v8::internal::GlobalObjectsEnumerator"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.v8::internal::GlobalObjectsEnumerator", %"class.v8::internal::GlobalObjectsEnumerator"* %0, i64 0, i32 2, i32 0, i32 1
  %14 = getelementptr inbounds %"class.v8::internal::GlobalObjectsEnumerator", %"class.v8::internal::GlobalObjectsEnumerator"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.v8::internal::Handle.1331"** %13 to i64*
  %16 = bitcast %"class.std::__1::vector.1499"* %12 to i64*
  %17 = bitcast %"class.v8::internal::Handle.1331"** %14 to i64*
  %18 = getelementptr inbounds %"class.std::__1::vector.1499", %"class.std::__1::vector.1499"* %12, i64 0, i32 0, i32 0
  br label %20

19:                                               ; preds = %163, %5
  ret void

20:                                               ; preds = %8, %163
  %21 = phi i64 [ %3, %8 ], [ %164, %163 ]
  %22 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 0, i32 4
  %24 = load i64, i64* %23, align 8
  %25 = inttoptr i64 %21 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %24, 4294967295
  %28 = icmp eq i64 %27, 0
  call void @llvm.assume(i1 %28) #13
  %29 = zext i32 %26 to i64
  %30 = or i64 %24, %29
  %31 = and i64 %29, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %163, label %33

33:                                               ; preds = %20
  %34 = add i64 %30, -1
  %35 = inttoptr i64 %34 to i32*
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %24, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i16*
  %41 = load atomic i16, i16* %40 monotonic, align 2
  %42 = icmp eq i16 %41, 144
  br i1 %42, label %43, label %163

43:                                               ; preds = %33
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  store i64 %30, i64* %11, align 8
  %44 = call i64 @_ZN2v88internal7Context12global_proxyEv(%"class.v8::internal::Context"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  %45 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %45, i64 0, i32 0, i32 4
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %44, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i64 %47, 4294967295
  %52 = icmp eq i64 %51, 0
  call void @llvm.assume(i1 %52) #13
  %53 = zext i32 %50 to i64
  %54 = or i64 %47, %53
  %55 = add i64 %54, 7
  %56 = inttoptr i64 %55 to i16*
  %57 = load atomic i16, i16* %56 monotonic, align 2
  %58 = icmp eq i16 %57, 190
  br i1 %58, label %59, label %163

59:                                               ; preds = %43
  %60 = load atomic i32, i32* %49 monotonic, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %47, %61
  %63 = add i64 %62, 15
  %64 = inttoptr i64 %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %47, %66
  %68 = and i64 %66, 1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %163, label %70

70:                                               ; preds = %59
  %71 = add i64 %67, -1
  %72 = inttoptr i64 %71 to i32*
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = zext i32 %73 to i64
  %75 = or i64 %47, %74
  %76 = add i64 %75, 7
  %77 = inttoptr i64 %76 to i16*
  %78 = load atomic i16, i16* %77 monotonic, align 2
  %79 = icmp eq i16 %78, 189
  br i1 %79, label %80, label %163

80:                                               ; preds = %70
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %45, i64 0, i32 31, i32 4
  %82 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %81, align 8
  %83 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %82, null
  br i1 %83, label %87, label %84

84:                                               ; preds = %80
  %85 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %82, i64 %67) #13
  %86 = ptrtoint i64* %85 to i64
  br label %100

87:                                               ; preds = %80
  %88 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %45, i64 0, i32 31, i32 0
  %89 = load i64*, i64** %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %45, i64 0, i32 31, i32 1
  %91 = load i64*, i64** %90, align 8
  %92 = icmp eq i64* %89, %91
  br i1 %92, label %93, label %95

93:                                               ; preds = %87
  %94 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %45) #13
  br label %95

95:                                               ; preds = %93, %87
  %96 = phi i64* [ %94, %93 ], [ %89, %87 ]
  %97 = ptrtoint i64* %96 to i64
  %98 = add i64 %97, 8
  %99 = inttoptr i64 %98 to i64*
  store i64* %99, i64** %88, align 8
  store i64 %67, i64* %96, align 8
  br label %100

100:                                              ; preds = %84, %95
  %101 = phi i64 [ %86, %84 ], [ %97, %95 ]
  %102 = load %"class.v8::internal::Handle.1331"*, %"class.v8::internal::Handle.1331"** %13, align 8
  %103 = load %"class.v8::internal::Handle.1331"*, %"class.v8::internal::Handle.1331"** %14, align 8
  %104 = icmp ult %"class.v8::internal::Handle.1331"* %102, %103
  %105 = ptrtoint %"class.v8::internal::Handle.1331"* %103 to i64
  br i1 %104, label %106, label %110

106:                                              ; preds = %100
  %107 = bitcast %"class.v8::internal::Handle.1331"* %102 to i64*
  store i64 %101, i64* %107, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Handle.1331", %"class.v8::internal::Handle.1331"* %102, i64 1
  %109 = ptrtoint %"class.v8::internal::Handle.1331"* %108 to i64
  store i64 %109, i64* %15, align 8
  br label %163

110:                                              ; preds = %100
  %111 = ptrtoint %"class.v8::internal::Handle.1331"* %102 to i64
  %112 = load i64, i64* %16, align 8
  %113 = sub i64 %111, %112
  %114 = ashr exact i64 %113, 3
  %115 = add nsw i64 %114, 1
  %116 = icmp ugt i64 %115, 2305843009213693951
  br i1 %116, label %117, label %119

117:                                              ; preds = %110
  %118 = bitcast %"class.std::__1::vector.1499"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %118) #20
  unreachable

119:                                              ; preds = %110
  %120 = sub i64 %105, %112
  %121 = ashr exact i64 %120, 3
  %122 = icmp ult i64 %121, 1152921504606846975
  br i1 %122, label %123, label %131

123:                                              ; preds = %119
  %124 = ashr exact i64 %120, 2
  %125 = icmp ult i64 %124, %115
  %126 = select i1 %125, i64 %115, i64 %124
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %136, label %128

128:                                              ; preds = %123
  %129 = icmp ugt i64 %126, 2305843009213693951
  br i1 %129, label %130, label %131

130:                                              ; preds = %128
  call void @abort() #20
  unreachable

131:                                              ; preds = %128, %119
  %132 = phi i64 [ %126, %128 ], [ 2305843009213693951, %119 ]
  %133 = shl i64 %132, 3
  %134 = call i8* @_Znwm(i64 %133) #21
  %135 = bitcast i8* %134 to %"class.v8::internal::Handle.1331"*
  br label %136

136:                                              ; preds = %131, %123
  %137 = phi i64 [ %132, %131 ], [ 0, %123 ]
  %138 = phi %"class.v8::internal::Handle.1331"* [ %135, %131 ], [ null, %123 ]
  %139 = getelementptr inbounds %"class.v8::internal::Handle.1331", %"class.v8::internal::Handle.1331"* %138, i64 %114
  %140 = getelementptr inbounds %"class.v8::internal::Handle.1331", %"class.v8::internal::Handle.1331"* %138, i64 %137
  %141 = ptrtoint %"class.v8::internal::Handle.1331"* %140 to i64
  %142 = bitcast %"class.v8::internal::Handle.1331"* %139 to i64*
  store i64 %101, i64* %142, align 8
  %143 = getelementptr inbounds %"class.v8::internal::Handle.1331", %"class.v8::internal::Handle.1331"* %139, i64 1
  %144 = ptrtoint %"class.v8::internal::Handle.1331"* %143 to i64
  %145 = load %"class.v8::internal::Handle.1331"*, %"class.v8::internal::Handle.1331"** %18, align 8
  %146 = load i64, i64* %15, align 8
  %147 = ptrtoint %"class.v8::internal::Handle.1331"* %145 to i64
  %148 = sub i64 %146, %147
  %149 = ashr exact i64 %148, 3
  %150 = sub nsw i64 0, %149
  %151 = getelementptr inbounds %"class.v8::internal::Handle.1331", %"class.v8::internal::Handle.1331"* %139, i64 %150
  %152 = ptrtoint %"class.v8::internal::Handle.1331"* %151 to i64
  %153 = icmp sgt i64 %148, 0
  br i1 %153, label %154, label %158

154:                                              ; preds = %136
  %155 = bitcast %"class.v8::internal::Handle.1331"* %151 to i8*
  %156 = bitcast %"class.v8::internal::Handle.1331"* %145 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %156, i64 %148, i1 false) #13
  %157 = load %"class.v8::internal::Handle.1331"*, %"class.v8::internal::Handle.1331"** %18, align 8
  br label %158

158:                                              ; preds = %154, %136
  %159 = phi %"class.v8::internal::Handle.1331"* [ %145, %136 ], [ %157, %154 ]
  store i64 %152, i64* %16, align 8
  store i64 %144, i64* %15, align 8
  store i64 %141, i64* %17, align 8
  %160 = icmp eq %"class.v8::internal::Handle.1331"* %159, null
  br i1 %160, label %163, label %161

161:                                              ; preds = %158
  %162 = bitcast %"class.v8::internal::Handle.1331"* %159 to i8*
  call void @_ZdlPv(i8* %162) #21
  br label %163

163:                                              ; preds = %59, %20, %43, %161, %158, %106, %70, %33
  %164 = add i64 %21, 4
  %165 = icmp ult i64 %164, %4
  br i1 %165, label %20, label %19
}

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #16

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.1424"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIS2_S7_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS2_EENS_15__hash_iteratorIPNS_11__hash_nodeIS7_S2_EEEERKT_(%"class.std::__1::__hash_table.1420"*, i8** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = bitcast i8** %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 32
  %6 = shl i64 %4, 3
  %7 = and i64 %6, 4294967288
  %8 = add nuw nsw i64 %7, 8
  %9 = xor i64 %8, %5
  %10 = mul i64 %9, -7070675565921424023
  %11 = lshr i64 %10, 47
  %12 = xor i64 %10, %5
  %13 = xor i64 %12, %11
  %14 = mul i64 %13, -7070675565921424023
  %15 = lshr i64 %14, 47
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = getelementptr inbounds %"class.std::__1::__hash_table.1420", %"class.std::__1::__hash_table.1420"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  %21 = inttoptr i64 %4 to i8*
  br i1 %20, label %85, label %22

22:                                               ; preds = %2
  %23 = tail call i64 @llvm.ctpop.i64(i64 %19) #13, !range !3
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %19, -1
  %27 = and i64 %17, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %17, %19
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %17, %19
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %17, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.1420", %"class.std::__1::__hash_table.1420"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.1424"**, %"struct.std::__1::__hash_node_base.1424"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.1424"* %37, null
  br i1 %38, label %85, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %37, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.1424"* %41, null
  br i1 %42, label %85, label %43

43:                                               ; preds = %39
  %44 = add i64 %19, -1
  br i1 %24, label %45, label %67

45:                                               ; preds = %43, %63
  %46 = phi %"struct.std::__1::__hash_node_base.1424"* [ %65, %63 ], [ %41, %43 ]
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %46, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.1424"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %17
  br i1 %50, label %58, label %51

51:                                               ; preds = %45
  %52 = icmp ult i64 %49, %19
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = urem i64 %49, %19
  br label %55

55:                                               ; preds = %53, %51
  %56 = phi i64 [ %54, %53 ], [ %49, %51 ]
  %57 = icmp eq i64 %56, %33
  br i1 %57, label %63, label %85

58:                                               ; preds = %45
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %46, i64 2
  %60 = bitcast %"struct.std::__1::__hash_node_base.1424"* %59 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, %21
  br i1 %62, label %85, label %63

63:                                               ; preds = %58, %55
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %46, i64 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %64, align 8
  %66 = icmp eq %"struct.std::__1::__hash_node_base.1424"* %65, null
  br i1 %66, label %85, label %45

67:                                               ; preds = %43, %81
  %68 = phi %"struct.std::__1::__hash_node_base.1424"* [ %83, %81 ], [ %41, %43 ]
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %68, i64 1
  %70 = bitcast %"struct.std::__1::__hash_node_base.1424"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, %17
  br i1 %72, label %76, label %73

73:                                               ; preds = %67
  %74 = and i64 %71, %44
  %75 = icmp eq i64 %74, %33
  br i1 %75, label %81, label %85

76:                                               ; preds = %67
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %68, i64 2
  %78 = bitcast %"struct.std::__1::__hash_node_base.1424"* %77 to i8**
  %79 = load i8*, i8** %78, align 8
  %80 = icmp eq i8* %79, %21
  br i1 %80, label %85, label %81

81:                                               ; preds = %73, %76
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1424", %"struct.std::__1::__hash_node_base.1424"* %68, i64 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.1424"*, %"struct.std::__1::__hash_node_base.1424"** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.1424"* %83, null
  br i1 %84, label %85, label %67

85:                                               ; preds = %76, %81, %73, %58, %63, %55, %39, %2, %32
  %86 = phi %"struct.std::__1::__hash_node_base.1424"* [ null, %32 ], [ null, %2 ], [ null, %39 ], [ %46, %58 ], [ null, %63 ], [ null, %55 ], [ %68, %76 ], [ null, %81 ], [ null, %73 ]
  ret %"struct.std::__1::__hash_node_base.1424"* %86
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::EmbedderGraph::Node"* @_ZN2v88internal17EmbedderGraphImpl6V8NodeERKNS_5LocalINS_5ValueEEE(%"class.v8::internal::EmbedderGraphImpl"*, %"class.v8::Local"* dereferenceable(8)) unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.1511", align 8
  %4 = bitcast %"class.v8::Local"* %1 to i64**
  %5 = load i64*, i64** %4, align 8
  %6 = tail call i8* @_Znwm(i64 16) #21
  %7 = load i64, i64* %5, align 8
  %8 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN2v88internal17EmbedderGraphImpl10V8NodeImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %6, i64 8
  %10 = bitcast i8* %9 to i64*
  store i64 %7, i64* %10, align 8
  %11 = bitcast i8* %6 to %"class.v8::EmbedderGraph::Node"*
  %12 = bitcast %"class.std::__1::unique_ptr.1511"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12)
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %3, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::unique_ptr.1511"* %3 to i8**
  store i8* %6, i8** %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::EmbedderGraphImpl", %"class.v8::internal::EmbedderGraphImpl"* %0, i64 0, i32 1, i32 0, i32 1
  %16 = load %"class.std::__1::unique_ptr.1511"*, %"class.std::__1::unique_ptr.1511"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::EmbedderGraphImpl", %"class.v8::internal::EmbedderGraphImpl"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %18 = load %"class.std::__1::unique_ptr.1511"*, %"class.std::__1::unique_ptr.1511"** %17, align 8
  %19 = icmp ult %"class.std::__1::unique_ptr.1511"* %16, %18
  br i1 %19, label %20, label %26

20:                                               ; preds = %2
  %21 = ptrtoint i8* %6 to i64
  store %"class.v8::EmbedderGraph::Node"* null, %"class.v8::EmbedderGraph::Node"** %13, align 8
  %22 = bitcast %"class.std::__1::unique_ptr.1511"* %16 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %16, i64 1
  %24 = ptrtoint %"class.std::__1::unique_ptr.1511"* %23 to i64
  %25 = bitcast %"class.std::__1::unique_ptr.1511"** %15 to i64*
  store i64 %24, i64* %25, align 8
  br label %28

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.v8::internal::EmbedderGraphImpl", %"class.v8::internal::EmbedderGraphImpl"* %0, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2v813EmbedderGraph4NodeENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.1509"* %27, %"class.std::__1::unique_ptr.1511"* nonnull dereferenceable(8) %3) #13
  br label %28

28:                                               ; preds = %26, %20
  %29 = load %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"** %13, align 8
  store %"class.v8::EmbedderGraph::Node"* null, %"class.v8::EmbedderGraph::Node"** %13, align 8
  %30 = icmp eq %"class.v8::EmbedderGraph::Node"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = bitcast %"class.v8::EmbedderGraph::Node"* %29 to void (%"class.v8::EmbedderGraph::Node"*)***
  %33 = load void (%"class.v8::EmbedderGraph::Node"*)**, void (%"class.v8::EmbedderGraph::Node"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.v8::EmbedderGraph::Node"*)*, void (%"class.v8::EmbedderGraph::Node"*)** %33, i64 1
  %35 = load void (%"class.v8::EmbedderGraph::Node"*)*, void (%"class.v8::EmbedderGraph::Node"*)** %34, align 8
  call void %35(%"class.v8::EmbedderGraph::Node"* nonnull %29) #13
  br label %36

36:                                               ; preds = %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  ret %"class.v8::EmbedderGraph::Node"* %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::EmbedderGraph::Node"* @_ZN2v88internal17EmbedderGraphImpl7AddNodeENSt3__110unique_ptrINS_13EmbedderGraph4NodeENS2_14default_deleteIS5_EEEE(%"class.v8::internal::EmbedderGraphImpl"*, %"class.v8::EmbedderGraph::Node"*) unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.1511", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::EmbedderGraph::Node"* %1, %"class.v8::EmbedderGraph::Node"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::EmbedderGraphImpl", %"class.v8::internal::EmbedderGraphImpl"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr.1511"*, %"class.std::__1::unique_ptr.1511"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::EmbedderGraphImpl", %"class.v8::internal::EmbedderGraphImpl"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr.1511"*, %"class.std::__1::unique_ptr.1511"** %7, align 8
  %9 = icmp ult %"class.std::__1::unique_ptr.1511"* %6, %8
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = ptrtoint %"class.v8::EmbedderGraph::Node"* %1 to i64
  store %"class.v8::EmbedderGraph::Node"* null, %"class.v8::EmbedderGraph::Node"** %4, align 8
  %12 = bitcast %"class.std::__1::unique_ptr.1511"* %6 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %6, i64 1
  %14 = ptrtoint %"class.std::__1::unique_ptr.1511"* %13 to i64
  %15 = bitcast %"class.std::__1::unique_ptr.1511"** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %18

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.v8::internal::EmbedderGraphImpl", %"class.v8::internal::EmbedderGraphImpl"* %0, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2v813EmbedderGraph4NodeENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.1509"* %17, %"class.std::__1::unique_ptr.1511"* nonnull dereferenceable(8) %3) #13
  br label %18

18:                                               ; preds = %10, %16
  %19 = load %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"** %4, align 8
  store %"class.v8::EmbedderGraph::Node"* null, %"class.v8::EmbedderGraph::Node"** %4, align 8
  %20 = icmp eq %"class.v8::EmbedderGraph::Node"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %18
  %22 = bitcast %"class.v8::EmbedderGraph::Node"* %19 to void (%"class.v8::EmbedderGraph::Node"*)***
  %23 = load void (%"class.v8::EmbedderGraph::Node"*)**, void (%"class.v8::EmbedderGraph::Node"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.v8::EmbedderGraph::Node"*)*, void (%"class.v8::EmbedderGraph::Node"*)** %23, i64 1
  %25 = load void (%"class.v8::EmbedderGraph::Node"*)*, void (%"class.v8::EmbedderGraph::Node"*)** %24, align 8
  call void %25(%"class.v8::EmbedderGraph::Node"* nonnull %19) #13
  br label %26

26:                                               ; preds = %18, %21
  ret %"class.v8::EmbedderGraph::Node"* %1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal17EmbedderGraphImpl7AddEdgeEPNS_13EmbedderGraph4NodeES4_PKc(%"class.v8::internal::EmbedderGraphImpl"*, %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"*, i8*) unnamed_addr #2 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::EmbedderGraphImpl", %"class.v8::internal::EmbedderGraphImpl"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.v8::internal::EmbedderGraphImpl", %"class.v8::internal::EmbedderGraphImpl"* %0, i64 0, i32 2, i32 0, i32 1
  %7 = load %"struct.v8::internal::EmbedderGraphImpl::Edge"*, %"struct.v8::internal::EmbedderGraphImpl::Edge"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::EmbedderGraphImpl", %"class.v8::internal::EmbedderGraphImpl"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %9 = load %"struct.v8::internal::EmbedderGraphImpl::Edge"*, %"struct.v8::internal::EmbedderGraphImpl::Edge"** %8, align 8
  %10 = icmp ult %"struct.v8::internal::EmbedderGraphImpl::Edge"* %7, %9
  %11 = ptrtoint %"struct.v8::internal::EmbedderGraphImpl::Edge"* %9 to i64
  br i1 %10, label %12, label %19

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"struct.v8::internal::EmbedderGraphImpl::Edge", %"struct.v8::internal::EmbedderGraphImpl::Edge"* %7, i64 0, i32 0
  store %"class.v8::EmbedderGraph::Node"* %1, %"class.v8::EmbedderGraph::Node"** %13, align 8
  %14 = getelementptr inbounds %"struct.v8::internal::EmbedderGraphImpl::Edge", %"struct.v8::internal::EmbedderGraphImpl::Edge"* %7, i64 0, i32 1
  store %"class.v8::EmbedderGraph::Node"* %2, %"class.v8::EmbedderGraph::Node"** %14, align 8
  %15 = getelementptr inbounds %"struct.v8::internal::EmbedderGraphImpl::Edge", %"struct.v8::internal::EmbedderGraphImpl::Edge"* %7, i64 0, i32 2
  store i8* %3, i8** %15, align 8
  %16 = getelementptr inbounds %"struct.v8::internal::EmbedderGraphImpl::Edge", %"struct.v8::internal::EmbedderGraphImpl::Edge"* %7, i64 1
  %17 = ptrtoint %"struct.v8::internal::EmbedderGraphImpl::Edge"* %16 to i64
  %18 = bitcast %"struct.v8::internal::EmbedderGraphImpl::Edge"** %6 to i64*
  store i64 %17, i64* %18, align 8
  br label %74

19:                                               ; preds = %4
  %20 = ptrtoint %"struct.v8::internal::EmbedderGraphImpl::Edge"* %7 to i64
  %21 = bitcast %"struct.v8::internal::EmbedderGraphImpl::Edge"** %6 to i64*
  %22 = bitcast %"class.std::__1::vector.1522"* %5 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %20, %23
  %25 = sdiv exact i64 %24, 24
  %26 = add nsw i64 %25, 1
  %27 = icmp ugt i64 %26, 768614336404564650
  br i1 %27, label %28, label %30

28:                                               ; preds = %19
  %29 = bitcast %"class.std::__1::vector.1522"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #20
  unreachable

30:                                               ; preds = %19
  %31 = bitcast %"struct.v8::internal::EmbedderGraphImpl::Edge"** %8 to i64*
  %32 = sub i64 %11, %23
  %33 = sdiv exact i64 %32, 24
  %34 = icmp ult i64 %33, 384307168202282325
  br i1 %34, label %35, label %40

35:                                               ; preds = %30
  %36 = shl nsw i64 %33, 1
  %37 = icmp ult i64 %36, %26
  %38 = select i1 %37, i64 %26, i64 %36
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %35, %30
  %41 = phi i64 [ %38, %35 ], [ 768614336404564650, %30 ]
  %42 = mul i64 %41, 24
  %43 = tail call i8* @_Znwm(i64 %42) #21
  %44 = bitcast i8* %43 to %"struct.v8::internal::EmbedderGraphImpl::Edge"*
  br label %45

45:                                               ; preds = %40, %35
  %46 = phi i64 [ %41, %40 ], [ 0, %35 ]
  %47 = phi %"struct.v8::internal::EmbedderGraphImpl::Edge"* [ %44, %40 ], [ null, %35 ]
  %48 = getelementptr inbounds %"struct.v8::internal::EmbedderGraphImpl::Edge", %"struct.v8::internal::EmbedderGraphImpl::Edge"* %47, i64 %25
  %49 = getelementptr inbounds %"struct.v8::internal::EmbedderGraphImpl::Edge", %"struct.v8::internal::EmbedderGraphImpl::Edge"* %47, i64 %46
  %50 = ptrtoint %"struct.v8::internal::EmbedderGraphImpl::Edge"* %49 to i64
  %51 = getelementptr inbounds %"struct.v8::internal::EmbedderGraphImpl::Edge", %"struct.v8::internal::EmbedderGraphImpl::Edge"* %48, i64 0, i32 0
  store %"class.v8::EmbedderGraph::Node"* %1, %"class.v8::EmbedderGraph::Node"** %51, align 8
  %52 = getelementptr inbounds %"struct.v8::internal::EmbedderGraphImpl::Edge", %"struct.v8::internal::EmbedderGraphImpl::Edge"* %47, i64 %25, i32 1
  store %"class.v8::EmbedderGraph::Node"* %2, %"class.v8::EmbedderGraph::Node"** %52, align 8
  %53 = getelementptr inbounds %"struct.v8::internal::EmbedderGraphImpl::Edge", %"struct.v8::internal::EmbedderGraphImpl::Edge"* %47, i64 %25, i32 2
  store i8* %3, i8** %53, align 8
  %54 = getelementptr inbounds %"struct.v8::internal::EmbedderGraphImpl::Edge", %"struct.v8::internal::EmbedderGraphImpl::Edge"* %48, i64 1
  %55 = ptrtoint %"struct.v8::internal::EmbedderGraphImpl::Edge"* %54 to i64
  %56 = getelementptr inbounds %"class.std::__1::vector.1522", %"class.std::__1::vector.1522"* %5, i64 0, i32 0, i32 0
  %57 = load %"struct.v8::internal::EmbedderGraphImpl::Edge"*, %"struct.v8::internal::EmbedderGraphImpl::Edge"** %56, align 8
  %58 = load i64, i64* %21, align 8
  %59 = ptrtoint %"struct.v8::internal::EmbedderGraphImpl::Edge"* %57 to i64
  %60 = sub i64 %58, %59
  %61 = sdiv exact i64 %60, -24
  %62 = getelementptr inbounds %"struct.v8::internal::EmbedderGraphImpl::Edge", %"struct.v8::internal::EmbedderGraphImpl::Edge"* %48, i64 %61
  %63 = ptrtoint %"struct.v8::internal::EmbedderGraphImpl::Edge"* %62 to i64
  %64 = icmp sgt i64 %60, 0
  br i1 %64, label %65, label %69

65:                                               ; preds = %45
  %66 = bitcast %"struct.v8::internal::EmbedderGraphImpl::Edge"* %62 to i8*
  %67 = bitcast %"struct.v8::internal::EmbedderGraphImpl::Edge"* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 %60, i1 false) #13
  %68 = load %"struct.v8::internal::EmbedderGraphImpl::Edge"*, %"struct.v8::internal::EmbedderGraphImpl::Edge"** %56, align 8
  br label %69

69:                                               ; preds = %65, %45
  %70 = phi %"struct.v8::internal::EmbedderGraphImpl::Edge"* [ %57, %45 ], [ %68, %65 ]
  store i64 %63, i64* %22, align 8
  store i64 %55, i64* %21, align 8
  store i64 %50, i64* %31, align 8
  %71 = icmp eq %"struct.v8::internal::EmbedderGraphImpl::Edge"* %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %69
  %73 = bitcast %"struct.v8::internal::EmbedderGraphImpl::Edge"* %70 to i8*
  tail call void @_ZdlPv(i8* %73) #21
  br label %74

74:                                               ; preds = %12, %69, %72
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal17EmbedderGraphImplD0Ev(%"class.v8::internal::EmbedderGraphImpl"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::EmbedderGraphImpl", %"class.v8::internal::EmbedderGraphImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2v88internal17EmbedderGraphImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::EmbedderGraphImpl", %"class.v8::internal::EmbedderGraphImpl"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"struct.v8::internal::EmbedderGraphImpl::Edge"*, %"struct.v8::internal::EmbedderGraphImpl::Edge"** %3, align 8
  %5 = icmp eq %"struct.v8::internal::EmbedderGraphImpl::Edge"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.v8::internal::EmbedderGraphImpl::Edge"* %4 to i64
  %8 = getelementptr inbounds %"class.v8::internal::EmbedderGraphImpl", %"class.v8::internal::EmbedderGraphImpl"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %"struct.v8::internal::EmbedderGraphImpl::Edge"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.v8::internal::EmbedderGraphImpl::Edge"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #21
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.v8::internal::EmbedderGraphImpl", %"class.v8::internal::EmbedderGraphImpl"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.1509", %"class.std::__1::vector.1509"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.std::__1::unique_ptr.1511"*, %"class.std::__1::unique_ptr.1511"** %13, align 8
  %15 = icmp eq %"class.std::__1::unique_ptr.1511"* %14, null
  br i1 %15, label %39, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.std::__1::unique_ptr.1511"* %14 to i8*
  %18 = getelementptr inbounds %"class.v8::internal::EmbedderGraphImpl", %"class.v8::internal::EmbedderGraphImpl"* %0, i64 0, i32 1, i32 0, i32 1
  %19 = load %"class.std::__1::unique_ptr.1511"*, %"class.std::__1::unique_ptr.1511"** %18, align 8
  %20 = icmp eq %"class.std::__1::unique_ptr.1511"* %19, %14
  br i1 %20, label %37, label %21

21:                                               ; preds = %16, %32
  %22 = phi %"class.std::__1::unique_ptr.1511"* [ %23, %32 ], [ %19, %16 ]
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %22, i64 -1
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"** %24, align 8
  store %"class.v8::EmbedderGraph::Node"* null, %"class.v8::EmbedderGraph::Node"** %24, align 8
  %26 = icmp eq %"class.v8::EmbedderGraph::Node"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.v8::EmbedderGraph::Node"* %25 to void (%"class.v8::EmbedderGraph::Node"*)***
  %29 = load void (%"class.v8::EmbedderGraph::Node"*)**, void (%"class.v8::EmbedderGraph::Node"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.v8::EmbedderGraph::Node"*)*, void (%"class.v8::EmbedderGraph::Node"*)** %29, i64 1
  %31 = load void (%"class.v8::EmbedderGraph::Node"*)*, void (%"class.v8::EmbedderGraph::Node"*)** %30, align 8
  tail call void %31(%"class.v8::EmbedderGraph::Node"* nonnull %25) #13
  br label %32

32:                                               ; preds = %27, %21
  %33 = icmp eq %"class.std::__1::unique_ptr.1511"* %23, %14
  br i1 %33, label %34, label %21

34:                                               ; preds = %32
  %35 = bitcast %"class.std::__1::vector.1509"* %12 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %16
  %38 = phi i8* [ %36, %34 ], [ %17, %16 ]
  store %"class.std::__1::unique_ptr.1511"* %14, %"class.std::__1::unique_ptr.1511"** %18, align 8
  tail call void @_ZdlPv(i8* %38) #21
  br label %39

39:                                               ; preds = %11, %37
  %40 = bitcast %"class.v8::internal::EmbedderGraphImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #21
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal17EmbedderGraphImpl10V8NodeImplD0Ev(%"class.v8::internal::EmbedderGraphImpl::V8NodeImpl"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.v8::internal::EmbedderGraphImpl::V8NodeImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN2v88internal17EmbedderGraphImpl10V8NodeImpl4NameEv(%"class.v8::internal::EmbedderGraphImpl::V8NodeImpl"*) unnamed_addr #2 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.271, i64 0, i64 0)) #20
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal17EmbedderGraphImpl10V8NodeImpl11SizeInBytesEv(%"class.v8::internal::EmbedderGraphImpl::V8NodeImpl"*) unnamed_addr #2 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.271, i64 0, i64 0)) #20
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::EmbedderGraph::Node"* @_ZN2v813EmbedderGraph4Node11WrapperNodeEv(%"class.v8::EmbedderGraph::Node"*) unnamed_addr #2 comdat align 2 {
  ret %"class.v8::EmbedderGraph::Node"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v813EmbedderGraph4Node10IsRootNodeEv(%"class.v8::EmbedderGraph::Node"*) unnamed_addr #2 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal17EmbedderGraphImpl10V8NodeImpl14IsEmbedderNodeEv(%"class.v8::internal::EmbedderGraphImpl::V8NodeImpl"*) unnamed_addr #2 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN2v813EmbedderGraph4Node10NamePrefixEv(%"class.v8::EmbedderGraph::Node"*) unnamed_addr #2 comdat align 2 {
  ret i8* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN2v813EmbedderGraph4Node15GetNativeObjectEv(%"class.v8::EmbedderGraph::Node"*) unnamed_addr #2 comdat align 2 {
  ret i8* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZN2v813EmbedderGraph4Node15GetDetachednessEv(%"class.v8::EmbedderGraph::Node"*) unnamed_addr #2 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v813EmbedderGraph4NodeD2Ev(%"class.v8::EmbedderGraph::Node"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN2v813EmbedderGraph4NodeENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.1509"*, %"class.std::__1::unique_ptr.1511"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1509", %"class.std::__1::vector.1509"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.1511"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1509"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1509"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1509", %"class.std::__1::vector.1509"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.1511"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #20
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #21
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.1511"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.1511"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.1511"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.1511"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.v8::EmbedderGraph::Node"* null, %"class.v8::EmbedderGraph::Node"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.1511"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.1511"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.1509", %"class.std::__1::vector.1509"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.1511"*, %"class.std::__1::unique_ptr.1511"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.1511"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.1511"*, %"class.std::__1::unique_ptr.1511"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.1511"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.v8::EmbedderGraph::Node"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.1511"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.1511"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.1511"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.v8::EmbedderGraph::Node"* null, %"class.v8::EmbedderGraph::Node"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.1511"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !30

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.1511"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.1511"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.1511"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.1511"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.1511"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.1511"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.v8::EmbedderGraph::Node"* null, %"class.v8::EmbedderGraph::Node"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.1511"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.1511"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.v8::EmbedderGraph::Node"* null, %"class.v8::EmbedderGraph::Node"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.1511"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.1511"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.v8::EmbedderGraph::Node"* null, %"class.v8::EmbedderGraph::Node"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.1511"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.1511"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.v8::EmbedderGraph::Node"* null, %"class.v8::EmbedderGraph::Node"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.1511"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.1511"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.v8::EmbedderGraph::Node"* null, %"class.v8::EmbedderGraph::Node"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.1511"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.1511"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.v8::EmbedderGraph::Node"* null, %"class.v8::EmbedderGraph::Node"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.1511"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.1511"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.v8::EmbedderGraph::Node"* null, %"class.v8::EmbedderGraph::Node"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.1511"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.1511"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.v8::EmbedderGraph::Node"* null, %"class.v8::EmbedderGraph::Node"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.1511"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.1511"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.1511"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.1511"*, %"class.std::__1::unique_ptr.1511"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.1511"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.1511"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.1511"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.1511"*
  %138 = icmp eq %"class.std::__1::unique_ptr.1511"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.1511"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"** %142, align 8
  store %"class.v8::EmbedderGraph::Node"* null, %"class.v8::EmbedderGraph::Node"** %142, align 8
  %144 = icmp eq %"class.v8::EmbedderGraph::Node"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.v8::EmbedderGraph::Node"* %143 to void (%"class.v8::EmbedderGraph::Node"*)***
  %147 = load void (%"class.v8::EmbedderGraph::Node"*)**, void (%"class.v8::EmbedderGraph::Node"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.v8::EmbedderGraph::Node"*)*, void (%"class.v8::EmbedderGraph::Node"*)** %147, i64 1
  %149 = load void (%"class.v8::EmbedderGraph::Node"*)*, void (%"class.v8::EmbedderGraph::Node"*)** %148, align 8
  tail call void %149(%"class.v8::EmbedderGraph::Node"* nonnull %143) #13
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.1511"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #21
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnamRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #17

declare %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"*, i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #12

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"*, i8*, i32) local_unnamed_addr #2 comdat align 2 {
  %4 = icmp slt i32 %2, 1
  br i1 %4, label %79, label %5

5:                                                ; preds = %3
  %6 = sext i32 %2 to i64
  %7 = getelementptr inbounds i8, i8* %1, i64 %6
  %8 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %0, i64 0, i32 4
  %10 = ptrtoint i8* %7 to i64
  %11 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %0, i64 0, i32 5
  %13 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %0, i64 0, i32 0
  %14 = load i32, i32* %9, align 8
  br label %15

15:                                               ; preds = %5, %76
  %16 = phi i32 [ %14, %5 ], [ %77, %76 ]
  %17 = phi i8* [ %1, %5 ], [ %57, %76 ]
  %18 = load i32, i32* %8, align 8
  %19 = sub nsw i32 %18, %16
  %20 = ptrtoint i8* %17 to i64
  %21 = sub i64 %10, %20
  %22 = trunc i64 %21 to i32
  %23 = icmp sgt i32 %19, %22
  %24 = select i1 %23, i32 %22, i32 %19
  %25 = load i8*, i8** %11, align 8
  %26 = sext i32 %16 to i64
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  %28 = sext i32 %24 to i64
  switch i64 %28, label %55 [
    i64 1, label %29
    i64 2, label %31
    i64 3, label %35
    i64 4, label %36
    i64 5, label %40
    i64 6, label %41
    i64 7, label %42
    i64 8, label %43
    i64 9, label %47
    i64 10, label %48
    i64 11, label %49
    i64 12, label %50
    i64 13, label %51
    i64 14, label %52
    i64 15, label %53
    i64 16, label %54
  ]

29:                                               ; preds = %15
  %30 = load i8, i8* %17, align 1
  store i8 %30, i8* %27, align 1
  br label %56

31:                                               ; preds = %15
  %32 = bitcast i8* %17 to i16*
  %33 = bitcast i8* %27 to i16*
  %34 = load i16, i16* %32, align 1
  store i16 %34, i16* %33, align 1
  br label %56

35:                                               ; preds = %15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %17, i64 3, i1 false) #13
  br label %56

36:                                               ; preds = %15
  %37 = bitcast i8* %17 to i32*
  %38 = bitcast i8* %27 to i32*
  %39 = load i32, i32* %37, align 1
  store i32 %39, i32* %38, align 1
  br label %56

40:                                               ; preds = %15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %17, i64 5, i1 false) #13
  br label %56

41:                                               ; preds = %15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %17, i64 6, i1 false) #13
  br label %56

42:                                               ; preds = %15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %17, i64 7, i1 false) #13
  br label %56

43:                                               ; preds = %15
  %44 = bitcast i8* %17 to i64*
  %45 = bitcast i8* %27 to i64*
  %46 = load i64, i64* %44, align 1
  store i64 %46, i64* %45, align 1
  br label %56

47:                                               ; preds = %15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %17, i64 9, i1 false) #13
  br label %56

48:                                               ; preds = %15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %17, i64 10, i1 false) #13
  br label %56

49:                                               ; preds = %15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %17, i64 11, i1 false) #13
  br label %56

50:                                               ; preds = %15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %17, i64 12, i1 false) #13
  br label %56

51:                                               ; preds = %15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %17, i64 13, i1 false) #13
  br label %56

52:                                               ; preds = %15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %17, i64 14, i1 false) #13
  br label %56

53:                                               ; preds = %15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %17, i64 15, i1 false) #13
  br label %56

54:                                               ; preds = %15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %17, i64 16, i1 false) #13
  br label %56

55:                                               ; preds = %15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %17, i64 %28, i1 false) #13
  br label %56

56:                                               ; preds = %29, %31, %35, %36, %40, %41, %42, %43, %47, %48, %49, %50, %51, %52, %53, %54, %55
  %57 = getelementptr inbounds i8, i8* %17, i64 %28
  %58 = load i32, i32* %9, align 8
  %59 = add nsw i32 %58, %24
  store i32 %59, i32* %9, align 8
  %60 = load i32, i32* %8, align 8
  %61 = icmp eq i32 %59, %60
  br i1 %61, label %62, label %76

62:                                               ; preds = %56
  %63 = load i8, i8* %12, align 4, !range !4
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %76

65:                                               ; preds = %62
  %66 = load %"class.v8::OutputStream"*, %"class.v8::OutputStream"** %13, align 8
  %67 = load i8*, i8** %11, align 8
  %68 = bitcast %"class.v8::OutputStream"* %66 to i32 (%"class.v8::OutputStream"*, i8*, i32)***
  %69 = load i32 (%"class.v8::OutputStream"*, i8*, i32)**, i32 (%"class.v8::OutputStream"*, i8*, i32)*** %68, align 8
  %70 = getelementptr inbounds i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %69, i64 4
  %71 = load i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %70, align 8
  %72 = tail call i32 %71(%"class.v8::OutputStream"* %66, i8* %67, i32 %59) #13
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %75

74:                                               ; preds = %65
  store i8 1, i8* %12, align 4
  br label %75

75:                                               ; preds = %74, %65
  store i32 0, i32* %9, align 8
  br label %76

76:                                               ; preds = %56, %62, %75
  %77 = phi i32 [ %59, %56 ], [ %59, %62 ], [ 0, %75 ]
  %78 = icmp ult i8* %57, %7
  br i1 %78, label %15, label %79

79:                                               ; preds = %76, %3
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringHasher20HashSequentialStringIcEEjPKT_im(i8*, i32, i64) local_unnamed_addr #7 comdat align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %97

5:                                                ; preds = %3
  %6 = load i8, i8* %0, align 1
  %7 = zext i8 %6 to i32
  %8 = add nsw i32 %7, -48
  %9 = icmp ult i32 %8, 10
  br i1 %9, label %10, label %90

10:                                               ; preds = %5
  %11 = icmp eq i32 %1, 1
  br i1 %11, label %36, label %12

12:                                               ; preds = %10
  %13 = icmp eq i8 %6, 48
  br i1 %13, label %90, label %14

14:                                               ; preds = %12
  %15 = icmp slt i32 %1, 11
  br i1 %15, label %16, label %39

16:                                               ; preds = %14
  %17 = zext i32 %1 to i64
  br label %18

18:                                               ; preds = %16, %32
  %19 = phi i64 [ 1, %16 ], [ %21, %32 ]
  %20 = phi i32 [ %8, %16 ], [ %34, %32 ]
  %21 = add nuw nsw i64 %19, 1
  %22 = getelementptr inbounds i8, i8* %0, i64 %19
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = add nsw i32 %24, -48
  %26 = icmp ult i32 %25, 10
  br i1 %26, label %27, label %39

27:                                               ; preds = %18
  %28 = add nsw i32 %24, -45
  %29 = ashr i32 %28, 3
  %30 = sub nuw nsw i32 429496729, %29
  %31 = icmp ugt i32 %20, %30
  br i1 %31, label %39, label %32

32:                                               ; preds = %27
  %33 = mul i32 %20, 10
  %34 = add i32 %25, %33
  %35 = icmp eq i64 %21, %17
  br i1 %35, label %36, label %18

36:                                               ; preds = %32, %10
  %37 = phi i32 [ %8, %10 ], [ %34, %32 ]
  %38 = tail call i32 @_ZN2v88internal12StringHasher18MakeArrayIndexHashEji(i32 %37, i32 %1) #13
  br label %170

39:                                               ; preds = %18, %27, %14
  %40 = icmp slt i32 %1, 17
  br i1 %40, label %41, label %90

41:                                               ; preds = %39
  %42 = trunc i64 %2 to i32
  %43 = sext i32 %1 to i64
  %44 = getelementptr inbounds i8, i8* %0, i64 %43
  %45 = icmp eq i32 %1, 0
  br i1 %45, label %72, label %46

46:                                               ; preds = %41, %63
  %47 = phi i8* [ %66, %63 ], [ %0, %41 ]
  %48 = phi i32 [ %70, %63 ], [ %42, %41 ]
  %49 = phi i32 [ %65, %63 ], [ 0, %41 ]
  %50 = phi i64 [ %64, %63 ], [ 0, %41 ]
  %51 = icmp eq i32 %49, 0
  %52 = load i8, i8* %47, align 1
  %53 = zext i8 %52 to i32
  br i1 %51, label %54, label %63

54:                                               ; preds = %46
  %55 = add nsw i32 %53, -48
  %56 = icmp ult i32 %55, 10
  br i1 %56, label %57, label %63

57:                                               ; preds = %54
  %58 = mul i64 %50, 10
  %59 = sext i32 %55 to i64
  %60 = add i64 %58, %59
  %61 = icmp ult i64 %60, 9007199254740992
  %62 = select i1 %61, i32 0, i32 2
  br label %63

63:                                               ; preds = %46, %57, %54
  %64 = phi i64 [ %60, %57 ], [ %50, %54 ], [ %50, %46 ]
  %65 = phi i32 [ %62, %57 ], [ 2, %54 ], [ %49, %46 ]
  %66 = getelementptr inbounds i8, i8* %47, i64 1
  %67 = add i32 %48, %53
  %68 = mul i32 %67, 1025
  %69 = lshr i32 %68, 6
  %70 = xor i32 %69, %68
  %71 = icmp eq i8* %66, %44
  br i1 %71, label %72, label %46

72:                                               ; preds = %63, %41
  %73 = phi i32 [ 0, %41 ], [ %65, %63 ]
  %74 = phi i32 [ %42, %41 ], [ %70, %63 ]
  %75 = mul i32 %74, 9
  %76 = lshr i32 %75, 11
  %77 = xor i32 %76, %75
  %78 = mul i32 %77, 32769
  %79 = and i32 %78, 1073741823
  %80 = add nsw i32 %79, -1
  %81 = ashr i32 %80, 31
  %82 = and i32 %81, 27
  %83 = or i32 %82, %78
  %84 = shl i32 %83, 2
  %85 = or i32 %84, %73
  %86 = and i32 %85, -536870910
  %87 = icmp eq i32 %86, 0
  %88 = or i32 %85, 536870912
  %89 = select i1 %87, i32 %88, i32 %85
  br label %170

90:                                               ; preds = %12, %39, %5
  %91 = icmp sgt i32 %1, 16383
  br i1 %91, label %94, label %92

92:                                               ; preds = %90
  %93 = trunc i64 %2 to i32
  br label %100

94:                                               ; preds = %90
  %95 = shl i32 %1, 2
  %96 = or i32 %95, 2
  br label %170

97:                                               ; preds = %3
  %98 = trunc i64 %2 to i32
  %99 = icmp eq i32 %1, 0
  br i1 %99, label %157, label %100

100:                                              ; preds = %92, %97
  %101 = phi i32 [ %93, %92 ], [ %98, %97 ]
  %102 = sext i32 %1 to i64
  %103 = getelementptr inbounds i8, i8* %0, i64 %102
  %104 = add nsw i64 %102, -1
  %105 = and i64 %102, 3
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %120, label %107

107:                                              ; preds = %100, %107
  %108 = phi i32 [ %117, %107 ], [ %101, %100 ]
  %109 = phi i8* [ %111, %107 ], [ %0, %100 ]
  %110 = phi i64 [ %118, %107 ], [ %105, %100 ]
  %111 = getelementptr inbounds i8, i8* %109, i64 1
  %112 = load i8, i8* %109, align 1
  %113 = zext i8 %112 to i32
  %114 = add i32 %108, %113
  %115 = mul i32 %114, 1025
  %116 = lshr i32 %115, 6
  %117 = xor i32 %116, %115
  %118 = add i64 %110, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %107, !llvm.loop !31

120:                                              ; preds = %107, %100
  %121 = phi i32 [ undef, %100 ], [ %117, %107 ]
  %122 = phi i32 [ %101, %100 ], [ %117, %107 ]
  %123 = phi i8* [ %0, %100 ], [ %111, %107 ]
  %124 = icmp ult i64 %104, 3
  br i1 %124, label %157, label %125

125:                                              ; preds = %120, %125
  %126 = phi i32 [ %155, %125 ], [ %122, %120 ]
  %127 = phi i8* [ %149, %125 ], [ %123, %120 ]
  %128 = getelementptr inbounds i8, i8* %127, i64 1
  %129 = load i8, i8* %127, align 1
  %130 = zext i8 %129 to i32
  %131 = add i32 %126, %130
  %132 = mul i32 %131, 1025
  %133 = lshr i32 %132, 6
  %134 = xor i32 %133, %132
  %135 = getelementptr inbounds i8, i8* %127, i64 2
  %136 = load i8, i8* %128, align 1
  %137 = zext i8 %136 to i32
  %138 = add i32 %134, %137
  %139 = mul i32 %138, 1025
  %140 = lshr i32 %139, 6
  %141 = xor i32 %140, %139
  %142 = getelementptr inbounds i8, i8* %127, i64 3
  %143 = load i8, i8* %135, align 1
  %144 = zext i8 %143 to i32
  %145 = add i32 %141, %144
  %146 = mul i32 %145, 1025
  %147 = lshr i32 %146, 6
  %148 = xor i32 %147, %146
  %149 = getelementptr inbounds i8, i8* %127, i64 4
  %150 = load i8, i8* %142, align 1
  %151 = zext i8 %150 to i32
  %152 = add i32 %148, %151
  %153 = mul i32 %152, 1025
  %154 = lshr i32 %153, 6
  %155 = xor i32 %154, %153
  %156 = icmp eq i8* %149, %103
  br i1 %156, label %157, label %125

157:                                              ; preds = %120, %125, %97
  %158 = phi i32 [ %98, %97 ], [ %121, %120 ], [ %155, %125 ]
  %159 = mul i32 %158, 9
  %160 = lshr i32 %159, 11
  %161 = xor i32 %160, %159
  %162 = mul i32 %161, 32769
  %163 = and i32 %162, 1073741823
  %164 = add nsw i32 %163, -1
  %165 = ashr i32 %164, 31
  %166 = and i32 %165, 27
  %167 = or i32 %166, %162
  %168 = shl i32 %167, 2
  %169 = or i32 %168, 2
  br label %170

170:                                              ; preds = %36, %157, %94, %72
  %171 = phi i32 [ %89, %72 ], [ %96, %94 ], [ %169, %157 ], [ %38, %36 ]
  ret i32 %171
}

declare i32 @_ZN2v88internal12StringHasher18MakeArrayIndexHashEji(i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18OutputStreamWriter13AddNumberImplIjEEvT_PKc(%"class.v8::internal::OutputStreamWriter"*, i32, i8*) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.v8::internal::EmbeddedVector.1617", align 8
  %5 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = sub nsw i32 %6, %8
  %10 = icmp sgt i32 %9, 10
  br i1 %10, label %11, label %39

11:                                               ; preds = %3
  %12 = sext i32 %8 to i64
  %13 = sext i32 %6 to i64
  %14 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %0, i64 0, i32 3, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 %12
  %17 = sub nsw i64 %13, %12
  %18 = tail call i32 (i8*, i64, i8*, ...) @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8* %16, i64 %17, i8* %2, i32 %1) #13
  %19 = load i32, i32* %7, align 8
  %20 = add nsw i32 %19, %18
  store i32 %20, i32* %7, align 8
  %21 = load i32, i32* %5, align 8
  %22 = icmp eq i32 %20, %21
  br i1 %22, label %23, label %48

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %0, i64 0, i32 5
  %25 = load i8, i8* %24, align 4, !range !4
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %48

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.v8::internal::OutputStreamWriter", %"class.v8::internal::OutputStreamWriter"* %0, i64 0, i32 0
  %29 = load %"class.v8::OutputStream"*, %"class.v8::OutputStream"** %28, align 8
  %30 = load i8*, i8** %14, align 8
  %31 = bitcast %"class.v8::OutputStream"* %29 to i32 (%"class.v8::OutputStream"*, i8*, i32)***
  %32 = load i32 (%"class.v8::OutputStream"*, i8*, i32)**, i32 (%"class.v8::OutputStream"*, i8*, i32)*** %31, align 8
  %33 = getelementptr inbounds i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %32, i64 4
  %34 = load i32 (%"class.v8::OutputStream"*, i8*, i32)*, i32 (%"class.v8::OutputStream"*, i8*, i32)** %33, align 8
  %35 = tail call i32 %34(%"class.v8::OutputStream"* %29, i8* %30, i32 %20) #13
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %38

37:                                               ; preds = %27
  store i8 1, i8* %24, align 4
  br label %38

38:                                               ; preds = %37, %27
  store i32 0, i32* %7, align 8
  br label %48

39:                                               ; preds = %3
  %40 = bitcast %"class.v8::internal::EmbeddedVector.1617"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40) #13
  %41 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1617", %"class.v8::internal::EmbeddedVector.1617"* %4, i64 0, i32 1, i64 0
  %42 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1617", %"class.v8::internal::EmbeddedVector.1617"* %4, i64 0, i32 0, i32 0
  store i8* %41, i8** %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1617", %"class.v8::internal::EmbeddedVector.1617"* %4, i64 0, i32 0, i32 1
  store i64 11, i64* %43, align 8
  %44 = call i32 (i8*, i64, i8*, ...) @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8* %41, i64 11, i8* %2, i32 %1) #13
  %45 = load i8*, i8** %42, align 8
  %46 = call i64 @strlen(i8* %45) #22
  %47 = trunc i64 %46 to i32
  call void @_ZN2v88internal18OutputStreamWriter12AddSubstringEPKci(%"class.v8::internal::OutputStreamWriter"* %0, i8* %45, i32 %47) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40) #13
  br label %48

48:                                               ; preds = %38, %23, %11, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN2v88internal13HeapGraphEdgeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.758"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.v8::internal::HeapGraphEdge"*, align 8
  %3 = alloca %"class.v8::internal::HeapGraphEdge"*, align 8
  %4 = getelementptr inbounds %"class.std::__1::deque.758", %"class.std::__1::deque.758"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, 169
  br i1 %6, label %7, label %161

7:                                                ; preds = %1
  %8 = add i64 %5, -170
  store i64 %8, i64* %4, align 8
  %9 = getelementptr inbounds %"class.std::__1::deque.758", %"class.std::__1::deque.758"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %9, align 8
  %11 = bitcast %"class.v8::internal::HeapGraphEdge"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %10, i64 1
  store %"class.v8::internal::HeapGraphEdge"** %13, %"class.v8::internal::HeapGraphEdge"*** %9, align 8
  %14 = getelementptr inbounds %"class.std::__1::deque.758", %"class.std::__1::deque.758"* %0, i64 0, i32 0, i32 0, i32 2
  %15 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::deque.758", %"class.std::__1::deque.758"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %16, align 8
  %18 = icmp eq %"class.v8::internal::HeapGraphEdge"** %15, %17
  %19 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %17 to i64
  %20 = bitcast %"class.v8::internal::HeapGraphEdge"** %15 to i64*
  br i1 %18, label %21, label %157

21:                                               ; preds = %7
  %22 = getelementptr inbounds %"class.std::__1::deque.758", %"class.std::__1::deque.758"* %0, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %22, align 8
  %24 = icmp ugt %"class.v8::internal::HeapGraphEdge"** %13, %23
  %25 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %23 to i64
  br i1 %24, label %26, label %46

26:                                               ; preds = %21
  %27 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %13 to i64
  %28 = sub i64 %27, %25
  %29 = ashr exact i64 %28, 3
  %30 = add nsw i64 %29, 1
  %31 = sdiv i64 %30, -2
  %32 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %13, i64 %31
  %33 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %15 to i64
  %34 = sub i64 %33, %27
  %35 = ashr exact i64 %34, 3
  %36 = icmp eq i64 %34, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %26
  %38 = bitcast %"class.v8::internal::HeapGraphEdge"** %32 to i8*
  %39 = bitcast %"class.v8::internal::HeapGraphEdge"** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 %34, i1 false) #13
  %40 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %9, align 8
  br label %41

41:                                               ; preds = %37, %26
  %42 = phi %"class.v8::internal::HeapGraphEdge"** [ %13, %26 ], [ %40, %37 ]
  %43 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %32, i64 %35
  store %"class.v8::internal::HeapGraphEdge"** %43, %"class.v8::internal::HeapGraphEdge"*** %14, align 8
  %44 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %42, i64 %31
  store %"class.v8::internal::HeapGraphEdge"** %44, %"class.v8::internal::HeapGraphEdge"*** %9, align 8
  %45 = bitcast %"class.v8::internal::HeapGraphEdge"** %43 to i64*
  br label %157

46:                                               ; preds = %21
  %47 = bitcast %"class.v8::internal::HeapGraphEdge"*** %16 to i64*
  %48 = bitcast %"class.std::__1::deque.758"* %0 to i64*
  %49 = sub i64 %19, %25
  %50 = ashr exact i64 %49, 2
  %51 = icmp eq i64 %49, 0
  %52 = select i1 %51, i64 1, i64 %50
  %53 = icmp ugt i64 %52, 2305843009213693951
  br i1 %53, label %54, label %55

54:                                               ; preds = %46
  tail call void @abort() #20
  unreachable

55:                                               ; preds = %46
  %56 = lshr i64 %52, 2
  %57 = shl i64 %52, 3
  %58 = tail call i8* @_Znwm(i64 %57) #21
  %59 = bitcast i8* %58 to %"class.v8::internal::HeapGraphEdge"**
  %60 = ptrtoint i8* %58 to i64
  %61 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %59, i64 %56
  %62 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %61 to i64
  %63 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %59, i64 %52
  %64 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %63 to i64
  %65 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %13 to i64
  %66 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %15 to i64
  %67 = sub i64 %66, %65
  %68 = ashr exact i64 %67, 3
  %69 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %61, i64 %68
  %70 = icmp eq i64 %67, 0
  br i1 %70, label %146, label %71

71:                                               ; preds = %55
  %72 = add i64 %67, -8
  %73 = lshr i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 7
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %92, label %77

77:                                               ; preds = %71, %77
  %78 = phi %"class.v8::internal::HeapGraphEdge"** [ %85, %77 ], [ %61, %71 ]
  %79 = phi i64 [ %86, %77 ], [ %62, %71 ]
  %80 = phi %"class.v8::internal::HeapGraphEdge"** [ %87, %77 ], [ %13, %71 ]
  %81 = phi i64 [ %88, %77 ], [ %75, %71 ]
  %82 = bitcast %"class.v8::internal::HeapGraphEdge"** %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = inttoptr i64 %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %78, i64 1
  %86 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %85 to i64
  %87 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %80, i64 1
  %88 = add i64 %81, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %77, !llvm.loop !32

90:                                               ; preds = %77
  %91 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %85 to i64
  br label %92

92:                                               ; preds = %71, %90
  %93 = phi %"class.v8::internal::HeapGraphEdge"** [ %61, %71 ], [ %85, %90 ]
  %94 = phi i64 [ %62, %71 ], [ %91, %90 ]
  %95 = phi %"class.v8::internal::HeapGraphEdge"** [ %13, %71 ], [ %87, %90 ]
  %96 = icmp ult i64 %72, 56
  br i1 %96, label %143, label %97

97:                                               ; preds = %92, %97
  %98 = phi %"class.v8::internal::HeapGraphEdge"** [ %139, %97 ], [ %93, %92 ]
  %99 = phi i64 [ %140, %97 ], [ %94, %92 ]
  %100 = phi %"class.v8::internal::HeapGraphEdge"** [ %141, %97 ], [ %95, %92 ]
  %101 = bitcast %"class.v8::internal::HeapGraphEdge"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = inttoptr i64 %99 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %98, i64 1
  %105 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %100, i64 1
  %106 = bitcast %"class.v8::internal::HeapGraphEdge"** %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.v8::internal::HeapGraphEdge"** %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %98, i64 2
  %110 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %100, i64 2
  %111 = bitcast %"class.v8::internal::HeapGraphEdge"** %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %"class.v8::internal::HeapGraphEdge"** %109 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %98, i64 3
  %115 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %100, i64 3
  %116 = bitcast %"class.v8::internal::HeapGraphEdge"** %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.v8::internal::HeapGraphEdge"** %114 to i64*
  store i64 %117, i64* %118, align 8
  %119 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %98, i64 4
  %120 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %100, i64 4
  %121 = bitcast %"class.v8::internal::HeapGraphEdge"** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast %"class.v8::internal::HeapGraphEdge"** %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %98, i64 5
  %125 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %100, i64 5
  %126 = bitcast %"class.v8::internal::HeapGraphEdge"** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.v8::internal::HeapGraphEdge"** %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %98, i64 6
  %130 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %100, i64 6
  %131 = bitcast %"class.v8::internal::HeapGraphEdge"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.v8::internal::HeapGraphEdge"** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %98, i64 7
  %135 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %100, i64 7
  %136 = bitcast %"class.v8::internal::HeapGraphEdge"** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.v8::internal::HeapGraphEdge"** %134 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %98, i64 8
  %140 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %139 to i64
  %141 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %100, i64 8
  %142 = icmp eq %"class.v8::internal::HeapGraphEdge"** %69, %139
  br i1 %142, label %143, label %97

143:                                              ; preds = %97, %92
  %144 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %69 to i64
  %145 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %22, align 8
  br label %146

146:                                              ; preds = %143, %55
  %147 = phi %"class.v8::internal::HeapGraphEdge"** [ %145, %143 ], [ %23, %55 ]
  %148 = phi i64 [ %144, %143 ], [ %62, %55 ]
  store i64 %60, i64* %48, align 8
  %149 = bitcast %"class.v8::internal::HeapGraphEdge"*** %9 to i64*
  store i64 %62, i64* %149, align 8
  %150 = bitcast %"class.v8::internal::HeapGraphEdge"*** %14 to i64*
  store i64 %148, i64* %150, align 8
  store i64 %64, i64* %47, align 8
  %151 = icmp eq %"class.v8::internal::HeapGraphEdge"** %147, null
  %152 = inttoptr i64 %148 to i64*
  br i1 %151, label %157, label %153

153:                                              ; preds = %146
  %154 = bitcast %"class.v8::internal::HeapGraphEdge"** %147 to i8*
  tail call void @_ZdlPv(i8* %154) #21
  %155 = bitcast %"class.v8::internal::HeapGraphEdge"*** %14 to i64**
  %156 = load i64*, i64** %155, align 8
  br label %157

157:                                              ; preds = %7, %41, %146, %153
  %158 = phi i64* [ %156, %153 ], [ %152, %146 ], [ %45, %41 ], [ %20, %7 ]
  store i64 %12, i64* %158, align 8
  %159 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %14, align 8
  %160 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %159, i64 1
  store %"class.v8::internal::HeapGraphEdge"** %160, %"class.v8::internal::HeapGraphEdge"*** %14, align 8
  br label %549

161:                                              ; preds = %1
  %162 = getelementptr inbounds %"class.std::__1::deque.758", %"class.std::__1::deque.758"* %0, i64 0, i32 0, i32 0
  %163 = getelementptr inbounds %"class.std::__1::deque.758", %"class.std::__1::deque.758"* %0, i64 0, i32 0, i32 0, i32 2
  %164 = bitcast %"class.v8::internal::HeapGraphEdge"*** %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"class.std::__1::deque.758", %"class.std::__1::deque.758"* %0, i64 0, i32 0, i32 0, i32 1
  %167 = bitcast %"class.v8::internal::HeapGraphEdge"*** %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = sub i64 %165, %168
  %170 = ashr exact i64 %169, 3
  %171 = getelementptr inbounds %"class.std::__1::deque.758", %"class.std::__1::deque.758"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %172 = bitcast %"class.v8::internal::HeapGraphEdge"*** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.std::__1::deque.758"* %0 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = sub i64 %173, %175
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %170, %177
  %179 = inttoptr i64 %165 to %"class.v8::internal::HeapGraphEdge"**
  %180 = inttoptr i64 %168 to %"class.v8::internal::HeapGraphEdge"**
  br i1 %178, label %181, label %336

181:                                              ; preds = %161
  %182 = icmp eq i64 %173, %165
  br i1 %182, label %187, label %183

183:                                              ; preds = %181
  %184 = bitcast %"class.v8::internal::HeapGraphEdge"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184) #13
  %185 = tail call i8* @_Znwm(i64 4080) #21
  %186 = bitcast %"class.v8::internal::HeapGraphEdge"** %2 to i8**
  store i8* %185, i8** %186, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal13HeapGraphEdgeENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer.760"* %162, %"class.v8::internal::HeapGraphEdge"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #13
  br label %549

187:                                              ; preds = %181
  %188 = bitcast %"class.v8::internal::HeapGraphEdge"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %188) #13
  %189 = tail call i8* @_Znwm(i64 4080) #21
  %190 = bitcast %"class.v8::internal::HeapGraphEdge"** %3 to i8**
  store i8* %189, i8** %190, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal13HeapGraphEdgeENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer.760"* %162, %"class.v8::internal::HeapGraphEdge"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %188) #13
  %191 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %166, align 8
  %192 = bitcast %"class.v8::internal::HeapGraphEdge"** %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %191, i64 1
  store %"class.v8::internal::HeapGraphEdge"** %194, %"class.v8::internal::HeapGraphEdge"*** %166, align 8
  %195 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %163, align 8
  %196 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %171, align 8
  %197 = icmp eq %"class.v8::internal::HeapGraphEdge"** %195, %196
  %198 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %196 to i64
  %199 = bitcast %"class.v8::internal::HeapGraphEdge"** %195 to i64*
  br i1 %197, label %200, label %332

200:                                              ; preds = %187
  %201 = getelementptr inbounds %"class.std::__1::deque.758", %"class.std::__1::deque.758"* %0, i64 0, i32 0, i32 0, i32 0
  %202 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %201, align 8
  %203 = icmp ugt %"class.v8::internal::HeapGraphEdge"** %194, %202
  %204 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %202 to i64
  br i1 %203, label %205, label %225

205:                                              ; preds = %200
  %206 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %194 to i64
  %207 = sub i64 %206, %204
  %208 = ashr exact i64 %207, 3
  %209 = add nsw i64 %208, 1
  %210 = sdiv i64 %209, -2
  %211 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %194, i64 %210
  %212 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %195 to i64
  %213 = sub i64 %212, %206
  %214 = ashr exact i64 %213, 3
  %215 = icmp eq i64 %213, 0
  br i1 %215, label %220, label %216

216:                                              ; preds = %205
  %217 = bitcast %"class.v8::internal::HeapGraphEdge"** %211 to i8*
  %218 = bitcast %"class.v8::internal::HeapGraphEdge"** %194 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %217, i8* align 8 %218, i64 %213, i1 false) #13
  %219 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %166, align 8
  br label %220

220:                                              ; preds = %216, %205
  %221 = phi %"class.v8::internal::HeapGraphEdge"** [ %194, %205 ], [ %219, %216 ]
  %222 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %211, i64 %214
  store %"class.v8::internal::HeapGraphEdge"** %222, %"class.v8::internal::HeapGraphEdge"*** %163, align 8
  %223 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %221, i64 %210
  store %"class.v8::internal::HeapGraphEdge"** %223, %"class.v8::internal::HeapGraphEdge"*** %166, align 8
  %224 = bitcast %"class.v8::internal::HeapGraphEdge"** %222 to i64*
  br label %332

225:                                              ; preds = %200
  %226 = sub i64 %198, %204
  %227 = ashr exact i64 %226, 2
  %228 = icmp eq i64 %226, 0
  %229 = select i1 %228, i64 1, i64 %227
  %230 = icmp ugt i64 %229, 2305843009213693951
  br i1 %230, label %231, label %232

231:                                              ; preds = %225
  call void @abort() #20
  unreachable

232:                                              ; preds = %225
  %233 = lshr i64 %229, 2
  %234 = shl i64 %229, 3
  %235 = call i8* @_Znwm(i64 %234) #21
  %236 = bitcast i8* %235 to %"class.v8::internal::HeapGraphEdge"**
  %237 = ptrtoint i8* %235 to i64
  %238 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %236, i64 %233
  %239 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %238 to i64
  %240 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %236, i64 %229
  %241 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %240 to i64
  %242 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %194 to i64
  %243 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %195 to i64
  %244 = sub i64 %243, %242
  %245 = ashr exact i64 %244, 3
  %246 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %238, i64 %245
  %247 = icmp eq i64 %244, 0
  br i1 %247, label %323, label %248

248:                                              ; preds = %232
  %249 = add i64 %244, -8
  %250 = lshr i64 %249, 3
  %251 = add nuw nsw i64 %250, 1
  %252 = and i64 %251, 7
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %269, label %254

254:                                              ; preds = %248, %254
  %255 = phi %"class.v8::internal::HeapGraphEdge"** [ %262, %254 ], [ %238, %248 ]
  %256 = phi i64 [ %263, %254 ], [ %239, %248 ]
  %257 = phi %"class.v8::internal::HeapGraphEdge"** [ %264, %254 ], [ %194, %248 ]
  %258 = phi i64 [ %265, %254 ], [ %252, %248 ]
  %259 = bitcast %"class.v8::internal::HeapGraphEdge"** %257 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = inttoptr i64 %256 to i64*
  store i64 %260, i64* %261, align 8
  %262 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %255, i64 1
  %263 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %262 to i64
  %264 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %257, i64 1
  %265 = add i64 %258, -1
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %267, label %254, !llvm.loop !33

267:                                              ; preds = %254
  %268 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %262 to i64
  br label %269

269:                                              ; preds = %248, %267
  %270 = phi %"class.v8::internal::HeapGraphEdge"** [ %238, %248 ], [ %262, %267 ]
  %271 = phi i64 [ %239, %248 ], [ %268, %267 ]
  %272 = phi %"class.v8::internal::HeapGraphEdge"** [ %194, %248 ], [ %264, %267 ]
  %273 = icmp ult i64 %249, 56
  br i1 %273, label %320, label %274

274:                                              ; preds = %269, %274
  %275 = phi %"class.v8::internal::HeapGraphEdge"** [ %316, %274 ], [ %270, %269 ]
  %276 = phi i64 [ %317, %274 ], [ %271, %269 ]
  %277 = phi %"class.v8::internal::HeapGraphEdge"** [ %318, %274 ], [ %272, %269 ]
  %278 = bitcast %"class.v8::internal::HeapGraphEdge"** %277 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = inttoptr i64 %276 to i64*
  store i64 %279, i64* %280, align 8
  %281 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %275, i64 1
  %282 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %277, i64 1
  %283 = bitcast %"class.v8::internal::HeapGraphEdge"** %282 to i64*
  %284 = load i64, i64* %283, align 8
  %285 = bitcast %"class.v8::internal::HeapGraphEdge"** %281 to i64*
  store i64 %284, i64* %285, align 8
  %286 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %275, i64 2
  %287 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %277, i64 2
  %288 = bitcast %"class.v8::internal::HeapGraphEdge"** %287 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = bitcast %"class.v8::internal::HeapGraphEdge"** %286 to i64*
  store i64 %289, i64* %290, align 8
  %291 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %275, i64 3
  %292 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %277, i64 3
  %293 = bitcast %"class.v8::internal::HeapGraphEdge"** %292 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = bitcast %"class.v8::internal::HeapGraphEdge"** %291 to i64*
  store i64 %294, i64* %295, align 8
  %296 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %275, i64 4
  %297 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %277, i64 4
  %298 = bitcast %"class.v8::internal::HeapGraphEdge"** %297 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = bitcast %"class.v8::internal::HeapGraphEdge"** %296 to i64*
  store i64 %299, i64* %300, align 8
  %301 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %275, i64 5
  %302 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %277, i64 5
  %303 = bitcast %"class.v8::internal::HeapGraphEdge"** %302 to i64*
  %304 = load i64, i64* %303, align 8
  %305 = bitcast %"class.v8::internal::HeapGraphEdge"** %301 to i64*
  store i64 %304, i64* %305, align 8
  %306 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %275, i64 6
  %307 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %277, i64 6
  %308 = bitcast %"class.v8::internal::HeapGraphEdge"** %307 to i64*
  %309 = load i64, i64* %308, align 8
  %310 = bitcast %"class.v8::internal::HeapGraphEdge"** %306 to i64*
  store i64 %309, i64* %310, align 8
  %311 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %275, i64 7
  %312 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %277, i64 7
  %313 = bitcast %"class.v8::internal::HeapGraphEdge"** %312 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = bitcast %"class.v8::internal::HeapGraphEdge"** %311 to i64*
  store i64 %314, i64* %315, align 8
  %316 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %275, i64 8
  %317 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %316 to i64
  %318 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %277, i64 8
  %319 = icmp eq %"class.v8::internal::HeapGraphEdge"** %246, %316
  br i1 %319, label %320, label %274

320:                                              ; preds = %274, %269
  %321 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %246 to i64
  %322 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %201, align 8
  br label %323

323:                                              ; preds = %320, %232
  %324 = phi %"class.v8::internal::HeapGraphEdge"** [ %322, %320 ], [ %202, %232 ]
  %325 = phi i64 [ %321, %320 ], [ %239, %232 ]
  store i64 %237, i64* %174, align 8
  store i64 %239, i64* %167, align 8
  store i64 %325, i64* %164, align 8
  store i64 %241, i64* %172, align 8
  %326 = icmp eq %"class.v8::internal::HeapGraphEdge"** %324, null
  %327 = inttoptr i64 %325 to i64*
  br i1 %326, label %332, label %328

328:                                              ; preds = %323
  %329 = bitcast %"class.v8::internal::HeapGraphEdge"** %324 to i8*
  call void @_ZdlPv(i8* %329) #21
  %330 = bitcast %"class.v8::internal::HeapGraphEdge"*** %163 to i64**
  %331 = load i64*, i64** %330, align 8
  br label %332

332:                                              ; preds = %187, %220, %323, %328
  %333 = phi i64* [ %331, %328 ], [ %327, %323 ], [ %224, %220 ], [ %199, %187 ]
  store i64 %193, i64* %333, align 8
  %334 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %163, align 8
  %335 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %334, i64 1
  store %"class.v8::internal::HeapGraphEdge"** %335, %"class.v8::internal::HeapGraphEdge"*** %163, align 8
  br label %549

336:                                              ; preds = %161
  %337 = ashr exact i64 %176, 2
  %338 = icmp eq i64 %176, 0
  %339 = select i1 %338, i64 1, i64 %337
  %340 = icmp ugt i64 %339, 2305843009213693951
  br i1 %340, label %341, label %342

341:                                              ; preds = %336
  tail call void @abort() #20
  unreachable

342:                                              ; preds = %336
  %343 = shl i64 %339, 3
  %344 = tail call i8* @_Znwm(i64 %343) #21
  %345 = bitcast i8* %344 to %"class.v8::internal::HeapGraphEdge"**
  %346 = ptrtoint i8* %344 to i64
  %347 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %345, i64 %170
  %348 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %347 to i64
  %349 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %345, i64 %339
  %350 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %349 to i64
  %351 = tail call i8* @_Znwm(i64 4080) #21
  %352 = ptrtoint i8* %351 to i64
  %353 = icmp eq i64 %170, %339
  br i1 %353, label %354, label %382

354:                                              ; preds = %342
  %355 = icmp ugt %"class.v8::internal::HeapGraphEdge"** %347, %345
  br i1 %355, label %356, label %363

356:                                              ; preds = %354
  %357 = sub i64 %348, %346
  %358 = ashr exact i64 %357, 3
  %359 = add nsw i64 %358, 1
  %360 = sdiv i64 %359, -2
  %361 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %347, i64 %360
  %362 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %361 to i64
  br label %382

363:                                              ; preds = %354
  %364 = sub i64 %350, %346
  %365 = ashr exact i64 %364, 2
  %366 = icmp eq i64 %364, 0
  %367 = select i1 %366, i64 1, i64 %365
  %368 = icmp ugt i64 %367, 2305843009213693951
  br i1 %368, label %369, label %370

369:                                              ; preds = %363
  tail call void @abort() #20
  unreachable

370:                                              ; preds = %363
  %371 = lshr i64 %367, 2
  %372 = shl i64 %367, 3
  %373 = tail call i8* @_Znwm(i64 %372) #21
  %374 = bitcast i8* %373 to %"class.v8::internal::HeapGraphEdge"**
  %375 = ptrtoint i8* %373 to i64
  %376 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %374, i64 %371
  %377 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %376 to i64
  %378 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %374, i64 %367
  %379 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %378 to i64
  tail call void @_ZdlPv(i8* nonnull %344) #21
  %380 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %163, align 8
  %381 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %166, align 8
  br label %382

382:                                              ; preds = %342, %356, %370
  %383 = phi %"class.v8::internal::HeapGraphEdge"** [ %180, %356 ], [ %381, %370 ], [ %180, %342 ]
  %384 = phi %"class.v8::internal::HeapGraphEdge"** [ %179, %356 ], [ %380, %370 ], [ %179, %342 ]
  %385 = phi i64 [ %346, %356 ], [ %375, %370 ], [ %346, %342 ]
  %386 = phi i64 [ %362, %356 ], [ %377, %370 ], [ %348, %342 ]
  %387 = phi %"class.v8::internal::HeapGraphEdge"** [ %361, %356 ], [ %376, %370 ], [ %347, %342 ]
  %388 = phi i64 [ %350, %356 ], [ %379, %370 ], [ %350, %342 ]
  %389 = bitcast %"class.v8::internal::HeapGraphEdge"** %387 to i64*
  store i64 %352, i64* %389, align 8
  %390 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %387, i64 1
  %391 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %390 to i64
  %392 = icmp eq %"class.v8::internal::HeapGraphEdge"** %384, %383
  br i1 %392, label %395, label %405

393:                                              ; preds = %537
  %394 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %542 to i64
  br label %395

395:                                              ; preds = %393, %382
  %396 = phi i64 [ %385, %382 ], [ %538, %393 ]
  %397 = phi i64 [ %386, %382 ], [ %394, %393 ]
  %398 = phi i64 [ %391, %382 ], [ %539, %393 ]
  %399 = phi i64 [ %388, %382 ], [ %540, %393 ]
  %400 = getelementptr inbounds %"class.std::__1::deque.758", %"class.std::__1::deque.758"* %0, i64 0, i32 0, i32 0, i32 0
  %401 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %400, align 8
  store i64 %396, i64* %174, align 8
  store i64 %397, i64* %167, align 8
  store i64 %398, i64* %164, align 8
  store i64 %399, i64* %172, align 8
  %402 = icmp eq %"class.v8::internal::HeapGraphEdge"** %401, null
  br i1 %402, label %549, label %403

403:                                              ; preds = %395
  %404 = bitcast %"class.v8::internal::HeapGraphEdge"** %401 to i8*
  tail call void @_ZdlPv(i8* %404) #21
  br label %549

405:                                              ; preds = %382, %537
  %406 = phi %"class.v8::internal::HeapGraphEdge"** [ %411, %537 ], [ %384, %382 ]
  %407 = phi i64 [ %540, %537 ], [ %388, %382 ]
  %408 = phi i64 [ %539, %537 ], [ %391, %382 ]
  %409 = phi i64 [ %546, %537 ], [ %386, %382 ]
  %410 = phi i64 [ %538, %537 ], [ %385, %382 ]
  %411 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %406, i64 -1
  %412 = inttoptr i64 %409 to %"class.v8::internal::HeapGraphEdge"**
  %413 = inttoptr i64 %410 to %"class.v8::internal::HeapGraphEdge"**
  %414 = icmp eq %"class.v8::internal::HeapGraphEdge"** %412, %413
  br i1 %414, label %415, label %537

415:                                              ; preds = %405
  %416 = inttoptr i64 %408 to %"class.v8::internal::HeapGraphEdge"**
  %417 = inttoptr i64 %407 to %"class.v8::internal::HeapGraphEdge"**
  %418 = icmp ult %"class.v8::internal::HeapGraphEdge"** %416, %417
  br i1 %418, label %419, label %436

419:                                              ; preds = %415
  %420 = sub i64 %407, %408
  %421 = ashr exact i64 %420, 3
  %422 = add nsw i64 %421, 1
  %423 = sdiv i64 %422, 2
  %424 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %416, i64 %423
  %425 = sub i64 %408, %409
  %426 = icmp eq i64 %425, 0
  br i1 %426, label %433, label %427

427:                                              ; preds = %419
  %428 = ashr exact i64 %425, 3
  %429 = sub nsw i64 0, %428
  %430 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %424, i64 %429
  %431 = bitcast %"class.v8::internal::HeapGraphEdge"** %430 to i8*
  %432 = inttoptr i64 %409 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %431, i8* align 8 %432, i64 %425, i1 false) #13
  br label %433

433:                                              ; preds = %427, %419
  %434 = phi %"class.v8::internal::HeapGraphEdge"** [ %430, %427 ], [ %424, %419 ]
  %435 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %424 to i64
  br label %537

436:                                              ; preds = %415
  %437 = sub i64 %407, %410
  %438 = ashr exact i64 %437, 2
  %439 = icmp eq i64 %437, 0
  %440 = select i1 %439, i64 1, i64 %438
  %441 = icmp ugt i64 %440, 2305843009213693951
  br i1 %441, label %442, label %443

442:                                              ; preds = %436
  tail call void @abort() #20
  unreachable

443:                                              ; preds = %436
  %444 = add nuw nsw i64 %440, 3
  %445 = lshr i64 %444, 2
  %446 = shl i64 %440, 3
  %447 = tail call i8* @_Znwm(i64 %446) #21
  %448 = bitcast i8* %447 to %"class.v8::internal::HeapGraphEdge"**
  %449 = ptrtoint i8* %447 to i64
  %450 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %448, i64 %445
  %451 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %450 to i64
  %452 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %448, i64 %440
  %453 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %452 to i64
  %454 = sub i64 %408, %409
  %455 = ashr exact i64 %454, 3
  %456 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %450, i64 %455
  %457 = icmp eq i64 %454, 0
  br i1 %457, label %532, label %458

458:                                              ; preds = %443
  %459 = add i64 %454, -8
  %460 = lshr i64 %459, 3
  %461 = add nuw nsw i64 %460, 1
  %462 = and i64 %461, 7
  %463 = icmp eq i64 %462, 0
  br i1 %463, label %479, label %464

464:                                              ; preds = %458, %464
  %465 = phi %"class.v8::internal::HeapGraphEdge"** [ %472, %464 ], [ %450, %458 ]
  %466 = phi i64 [ %473, %464 ], [ %451, %458 ]
  %467 = phi %"class.v8::internal::HeapGraphEdge"** [ %474, %464 ], [ %412, %458 ]
  %468 = phi i64 [ %475, %464 ], [ %462, %458 ]
  %469 = bitcast %"class.v8::internal::HeapGraphEdge"** %467 to i64*
  %470 = load i64, i64* %469, align 8
  %471 = inttoptr i64 %466 to i64*
  store i64 %470, i64* %471, align 8
  %472 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %465, i64 1
  %473 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %472 to i64
  %474 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %467, i64 1
  %475 = add i64 %468, -1
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %477, label %464, !llvm.loop !34

477:                                              ; preds = %464
  %478 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %472 to i64
  br label %479

479:                                              ; preds = %458, %477
  %480 = phi %"class.v8::internal::HeapGraphEdge"** [ %450, %458 ], [ %472, %477 ]
  %481 = phi i64 [ %451, %458 ], [ %478, %477 ]
  %482 = phi %"class.v8::internal::HeapGraphEdge"** [ %412, %458 ], [ %474, %477 ]
  %483 = icmp ult i64 %459, 56
  br i1 %483, label %530, label %484

484:                                              ; preds = %479, %484
  %485 = phi %"class.v8::internal::HeapGraphEdge"** [ %526, %484 ], [ %480, %479 ]
  %486 = phi i64 [ %527, %484 ], [ %481, %479 ]
  %487 = phi %"class.v8::internal::HeapGraphEdge"** [ %528, %484 ], [ %482, %479 ]
  %488 = bitcast %"class.v8::internal::HeapGraphEdge"** %487 to i64*
  %489 = load i64, i64* %488, align 8
  %490 = inttoptr i64 %486 to i64*
  store i64 %489, i64* %490, align 8
  %491 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %485, i64 1
  %492 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %487, i64 1
  %493 = bitcast %"class.v8::internal::HeapGraphEdge"** %492 to i64*
  %494 = load i64, i64* %493, align 8
  %495 = bitcast %"class.v8::internal::HeapGraphEdge"** %491 to i64*
  store i64 %494, i64* %495, align 8
  %496 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %485, i64 2
  %497 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %487, i64 2
  %498 = bitcast %"class.v8::internal::HeapGraphEdge"** %497 to i64*
  %499 = load i64, i64* %498, align 8
  %500 = bitcast %"class.v8::internal::HeapGraphEdge"** %496 to i64*
  store i64 %499, i64* %500, align 8
  %501 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %485, i64 3
  %502 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %487, i64 3
  %503 = bitcast %"class.v8::internal::HeapGraphEdge"** %502 to i64*
  %504 = load i64, i64* %503, align 8
  %505 = bitcast %"class.v8::internal::HeapGraphEdge"** %501 to i64*
  store i64 %504, i64* %505, align 8
  %506 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %485, i64 4
  %507 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %487, i64 4
  %508 = bitcast %"class.v8::internal::HeapGraphEdge"** %507 to i64*
  %509 = load i64, i64* %508, align 8
  %510 = bitcast %"class.v8::internal::HeapGraphEdge"** %506 to i64*
  store i64 %509, i64* %510, align 8
  %511 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %485, i64 5
  %512 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %487, i64 5
  %513 = bitcast %"class.v8::internal::HeapGraphEdge"** %512 to i64*
  %514 = load i64, i64* %513, align 8
  %515 = bitcast %"class.v8::internal::HeapGraphEdge"** %511 to i64*
  store i64 %514, i64* %515, align 8
  %516 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %485, i64 6
  %517 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %487, i64 6
  %518 = bitcast %"class.v8::internal::HeapGraphEdge"** %517 to i64*
  %519 = load i64, i64* %518, align 8
  %520 = bitcast %"class.v8::internal::HeapGraphEdge"** %516 to i64*
  store i64 %519, i64* %520, align 8
  %521 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %485, i64 7
  %522 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %487, i64 7
  %523 = bitcast %"class.v8::internal::HeapGraphEdge"** %522 to i64*
  %524 = load i64, i64* %523, align 8
  %525 = bitcast %"class.v8::internal::HeapGraphEdge"** %521 to i64*
  store i64 %524, i64* %525, align 8
  %526 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %485, i64 8
  %527 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %526 to i64
  %528 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %487, i64 8
  %529 = icmp eq %"class.v8::internal::HeapGraphEdge"** %456, %526
  br i1 %529, label %530, label %484

530:                                              ; preds = %484, %479
  %531 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %456 to i64
  br label %532

532:                                              ; preds = %530, %443
  %533 = phi i64 [ %531, %530 ], [ %451, %443 ]
  %534 = icmp eq i64 %409, 0
  br i1 %534, label %537, label %535

535:                                              ; preds = %532
  %536 = inttoptr i64 %409 to i8*
  tail call void @_ZdlPv(i8* %536) #21
  br label %537

537:                                              ; preds = %405, %433, %532, %535
  %538 = phi i64 [ %410, %433 ], [ %449, %532 ], [ %449, %535 ], [ %410, %405 ]
  %539 = phi i64 [ %435, %433 ], [ %533, %532 ], [ %533, %535 ], [ %408, %405 ]
  %540 = phi i64 [ %407, %433 ], [ %453, %532 ], [ %453, %535 ], [ %407, %405 ]
  %541 = phi %"class.v8::internal::HeapGraphEdge"** [ %434, %433 ], [ %450, %532 ], [ %450, %535 ], [ %412, %405 ]
  %542 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %541, i64 -1
  %543 = bitcast %"class.v8::internal::HeapGraphEdge"** %411 to i64*
  %544 = load i64, i64* %543, align 8
  %545 = bitcast %"class.v8::internal::HeapGraphEdge"** %542 to i64*
  store i64 %544, i64* %545, align 8
  %546 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %542 to i64
  %547 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %166, align 8
  %548 = icmp eq %"class.v8::internal::HeapGraphEdge"** %411, %547
  br i1 %548, label %393, label %405

549:                                              ; preds = %403, %395, %332, %183, %157
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal13HeapGraphEdgeENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer.760"*, %"class.v8::internal::HeapGraphEdge"** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.760", %"struct.std::__1::__split_buffer.760"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.760", %"struct.std::__1::__split_buffer.760"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::HeapGraphEdge"** %4, %6
  %8 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %6 to i64
  %9 = bitcast %"class.v8::internal::HeapGraphEdge"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.760", %"struct.std::__1::__split_buffer.760"* %0, i64 0, i32 1
  %12 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.760", %"struct.std::__1::__split_buffer.760"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %13, align 8
  %15 = icmp ugt %"class.v8::internal::HeapGraphEdge"** %12, %14
  %16 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %12, i64 %22
  %24 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.v8::internal::HeapGraphEdge"** %23 to i8*
  %30 = bitcast %"class.v8::internal::HeapGraphEdge"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #13
  %31 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.v8::internal::HeapGraphEdge"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %23, i64 %26
  store %"class.v8::internal::HeapGraphEdge"** %34, %"class.v8::internal::HeapGraphEdge"*** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %33, i64 %22
  store %"class.v8::internal::HeapGraphEdge"** %35, %"class.v8::internal::HeapGraphEdge"*** %11, align 8
  %36 = bitcast %"class.v8::internal::HeapGraphEdge"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.v8::internal::HeapGraphEdge"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.760"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #20
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #21
  %50 = bitcast i8* %49 to %"class.v8::internal::HeapGraphEdge"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %50, i64 %47
  %53 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %52 to i64
  %54 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %50, i64 %43
  %55 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %54 to i64
  %56 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %12 to i64
  %57 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.v8::internal::HeapGraphEdge"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.v8::internal::HeapGraphEdge"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.v8::internal::HeapGraphEdge"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %69, i64 1
  %77 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %76 to i64
  %78 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !35

81:                                               ; preds = %68
  %82 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.v8::internal::HeapGraphEdge"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.v8::internal::HeapGraphEdge"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.v8::internal::HeapGraphEdge"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.v8::internal::HeapGraphEdge"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.v8::internal::HeapGraphEdge"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %89, i64 1
  %96 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %91, i64 1
  %97 = bitcast %"class.v8::internal::HeapGraphEdge"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.v8::internal::HeapGraphEdge"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %89, i64 2
  %101 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %91, i64 2
  %102 = bitcast %"class.v8::internal::HeapGraphEdge"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.v8::internal::HeapGraphEdge"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %89, i64 3
  %106 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %91, i64 3
  %107 = bitcast %"class.v8::internal::HeapGraphEdge"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.v8::internal::HeapGraphEdge"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %89, i64 4
  %111 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %91, i64 4
  %112 = bitcast %"class.v8::internal::HeapGraphEdge"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.v8::internal::HeapGraphEdge"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %89, i64 5
  %116 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %91, i64 5
  %117 = bitcast %"class.v8::internal::HeapGraphEdge"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.v8::internal::HeapGraphEdge"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %89, i64 6
  %121 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %91, i64 6
  %122 = bitcast %"class.v8::internal::HeapGraphEdge"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.v8::internal::HeapGraphEdge"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %89, i64 7
  %126 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %91, i64 7
  %127 = bitcast %"class.v8::internal::HeapGraphEdge"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.v8::internal::HeapGraphEdge"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %89, i64 8
  %131 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %130 to i64
  %132 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %91, i64 8
  %133 = icmp eq %"class.v8::internal::HeapGraphEdge"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %60 to i64
  %136 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.v8::internal::HeapGraphEdge"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.v8::internal::HeapGraphEdge"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.v8::internal::HeapGraphEdge"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.v8::internal::HeapGraphEdge"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.v8::internal::HeapGraphEdge"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #21
  %146 = bitcast %"class.v8::internal::HeapGraphEdge"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.v8::internal::HeapGraphEdge"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %3, align 8
  %153 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %152, i64 1
  store %"class.v8::internal::HeapGraphEdge"** %153, %"class.v8::internal::HeapGraphEdge"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal13HeapGraphEdgeENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer.760"*, %"class.v8::internal::HeapGraphEdge"** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.760", %"struct.std::__1::__split_buffer.760"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.760", %"struct.std::__1::__split_buffer.760"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::HeapGraphEdge"** %4, %6
  %8 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.760", %"struct.std::__1::__split_buffer.760"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.760", %"struct.std::__1::__split_buffer.760"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %12, align 8
  %14 = icmp ult %"class.v8::internal::HeapGraphEdge"** %11, %13
  %15 = bitcast %"class.v8::internal::HeapGraphEdge"*** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %23, i64 %29
  %31 = bitcast %"class.v8::internal::HeapGraphEdge"** %30 to i8*
  %32 = bitcast %"class.v8::internal::HeapGraphEdge"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #13
  %33 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.v8::internal::HeapGraphEdge"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.v8::internal::HeapGraphEdge"** [ %30, %27 ], [ %23, %17 ]
  store %"class.v8::internal::HeapGraphEdge"** %36, %"class.v8::internal::HeapGraphEdge"*** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %35, i64 %22
  store %"class.v8::internal::HeapGraphEdge"** %37, %"class.v8::internal::HeapGraphEdge"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.760"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #20
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #21
  %51 = bitcast i8* %50 to %"class.v8::internal::HeapGraphEdge"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %51, i64 %48
  %54 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %53 to i64
  %55 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %51, i64 %43
  %56 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %55 to i64
  %57 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %4 to i64
  %58 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.v8::internal::HeapGraphEdge"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.v8::internal::HeapGraphEdge"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.v8::internal::HeapGraphEdge"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %70, i64 1
  %78 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %77 to i64
  %79 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !36

82:                                               ; preds = %69
  %83 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.v8::internal::HeapGraphEdge"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.v8::internal::HeapGraphEdge"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.v8::internal::HeapGraphEdge"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.v8::internal::HeapGraphEdge"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.v8::internal::HeapGraphEdge"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %90, i64 1
  %97 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %92, i64 1
  %98 = bitcast %"class.v8::internal::HeapGraphEdge"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.v8::internal::HeapGraphEdge"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %90, i64 2
  %102 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %92, i64 2
  %103 = bitcast %"class.v8::internal::HeapGraphEdge"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.v8::internal::HeapGraphEdge"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %90, i64 3
  %107 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %92, i64 3
  %108 = bitcast %"class.v8::internal::HeapGraphEdge"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.v8::internal::HeapGraphEdge"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %90, i64 4
  %112 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %92, i64 4
  %113 = bitcast %"class.v8::internal::HeapGraphEdge"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.v8::internal::HeapGraphEdge"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %90, i64 5
  %117 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %92, i64 5
  %118 = bitcast %"class.v8::internal::HeapGraphEdge"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.v8::internal::HeapGraphEdge"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %90, i64 6
  %122 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %92, i64 6
  %123 = bitcast %"class.v8::internal::HeapGraphEdge"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.v8::internal::HeapGraphEdge"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %90, i64 7
  %127 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %92, i64 7
  %128 = bitcast %"class.v8::internal::HeapGraphEdge"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::HeapGraphEdge"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %90, i64 8
  %132 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %131 to i64
  %133 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %92, i64 8
  %134 = icmp eq %"class.v8::internal::HeapGraphEdge"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %61 to i64
  %137 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.v8::internal::HeapGraphEdge"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.v8::internal::HeapGraphEdge"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.v8::internal::HeapGraphEdge"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.v8::internal::HeapGraphEdge"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.v8::internal::HeapGraphEdge"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #21
  %146 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.v8::internal::HeapGraphEdge"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %148, i64 -1
  %150 = bitcast %"class.v8::internal::HeapGraphEdge"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.v8::internal::HeapGraphEdge"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %3, align 8
  %154 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %153, i64 -1
  store %"class.v8::internal::HeapGraphEdge"** %154, %"class.v8::internal::HeapGraphEdge"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN2v88internal9HeapEntryENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.v8::internal::HeapEntry"*, align 8
  %3 = alloca %"class.v8::internal::HeapEntry"*, align 8
  %4 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, 101
  br i1 %6, label %7, label %161

7:                                                ; preds = %1
  %8 = add i64 %5, -102
  store i64 %8, i64* %4, align 8
  %9 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %9, align 8
  %11 = bitcast %"class.v8::internal::HeapEntry"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %10, i64 1
  store %"class.v8::internal::HeapEntry"** %13, %"class.v8::internal::HeapEntry"*** %9, align 8
  %14 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %15 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %16, align 8
  %18 = icmp eq %"class.v8::internal::HeapEntry"** %15, %17
  %19 = ptrtoint %"class.v8::internal::HeapEntry"** %17 to i64
  %20 = bitcast %"class.v8::internal::HeapEntry"** %15 to i64*
  br i1 %18, label %21, label %157

21:                                               ; preds = %7
  %22 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %22, align 8
  %24 = icmp ugt %"class.v8::internal::HeapEntry"** %13, %23
  %25 = ptrtoint %"class.v8::internal::HeapEntry"** %23 to i64
  br i1 %24, label %26, label %46

26:                                               ; preds = %21
  %27 = ptrtoint %"class.v8::internal::HeapEntry"** %13 to i64
  %28 = sub i64 %27, %25
  %29 = ashr exact i64 %28, 3
  %30 = add nsw i64 %29, 1
  %31 = sdiv i64 %30, -2
  %32 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %13, i64 %31
  %33 = ptrtoint %"class.v8::internal::HeapEntry"** %15 to i64
  %34 = sub i64 %33, %27
  %35 = ashr exact i64 %34, 3
  %36 = icmp eq i64 %34, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %26
  %38 = bitcast %"class.v8::internal::HeapEntry"** %32 to i8*
  %39 = bitcast %"class.v8::internal::HeapEntry"** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 %34, i1 false) #13
  %40 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %9, align 8
  br label %41

41:                                               ; preds = %37, %26
  %42 = phi %"class.v8::internal::HeapEntry"** [ %13, %26 ], [ %40, %37 ]
  %43 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %32, i64 %35
  store %"class.v8::internal::HeapEntry"** %43, %"class.v8::internal::HeapEntry"*** %14, align 8
  %44 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %42, i64 %31
  store %"class.v8::internal::HeapEntry"** %44, %"class.v8::internal::HeapEntry"*** %9, align 8
  %45 = bitcast %"class.v8::internal::HeapEntry"** %43 to i64*
  br label %157

46:                                               ; preds = %21
  %47 = bitcast %"class.v8::internal::HeapEntry"*** %16 to i64*
  %48 = bitcast %"class.std::__1::deque"* %0 to i64*
  %49 = sub i64 %19, %25
  %50 = ashr exact i64 %49, 2
  %51 = icmp eq i64 %49, 0
  %52 = select i1 %51, i64 1, i64 %50
  %53 = icmp ugt i64 %52, 2305843009213693951
  br i1 %53, label %54, label %55

54:                                               ; preds = %46
  tail call void @abort() #20
  unreachable

55:                                               ; preds = %46
  %56 = lshr i64 %52, 2
  %57 = shl i64 %52, 3
  %58 = tail call i8* @_Znwm(i64 %57) #21
  %59 = bitcast i8* %58 to %"class.v8::internal::HeapEntry"**
  %60 = ptrtoint i8* %58 to i64
  %61 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %59, i64 %56
  %62 = ptrtoint %"class.v8::internal::HeapEntry"** %61 to i64
  %63 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %59, i64 %52
  %64 = ptrtoint %"class.v8::internal::HeapEntry"** %63 to i64
  %65 = ptrtoint %"class.v8::internal::HeapEntry"** %13 to i64
  %66 = ptrtoint %"class.v8::internal::HeapEntry"** %15 to i64
  %67 = sub i64 %66, %65
  %68 = ashr exact i64 %67, 3
  %69 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %61, i64 %68
  %70 = icmp eq i64 %67, 0
  br i1 %70, label %146, label %71

71:                                               ; preds = %55
  %72 = add i64 %67, -8
  %73 = lshr i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 7
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %92, label %77

77:                                               ; preds = %71, %77
  %78 = phi %"class.v8::internal::HeapEntry"** [ %85, %77 ], [ %61, %71 ]
  %79 = phi i64 [ %86, %77 ], [ %62, %71 ]
  %80 = phi %"class.v8::internal::HeapEntry"** [ %87, %77 ], [ %13, %71 ]
  %81 = phi i64 [ %88, %77 ], [ %75, %71 ]
  %82 = bitcast %"class.v8::internal::HeapEntry"** %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = inttoptr i64 %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %78, i64 1
  %86 = ptrtoint %"class.v8::internal::HeapEntry"** %85 to i64
  %87 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %80, i64 1
  %88 = add i64 %81, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %77, !llvm.loop !37

90:                                               ; preds = %77
  %91 = ptrtoint %"class.v8::internal::HeapEntry"** %85 to i64
  br label %92

92:                                               ; preds = %71, %90
  %93 = phi %"class.v8::internal::HeapEntry"** [ %61, %71 ], [ %85, %90 ]
  %94 = phi i64 [ %62, %71 ], [ %91, %90 ]
  %95 = phi %"class.v8::internal::HeapEntry"** [ %13, %71 ], [ %87, %90 ]
  %96 = icmp ult i64 %72, 56
  br i1 %96, label %143, label %97

97:                                               ; preds = %92, %97
  %98 = phi %"class.v8::internal::HeapEntry"** [ %139, %97 ], [ %93, %92 ]
  %99 = phi i64 [ %140, %97 ], [ %94, %92 ]
  %100 = phi %"class.v8::internal::HeapEntry"** [ %141, %97 ], [ %95, %92 ]
  %101 = bitcast %"class.v8::internal::HeapEntry"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = inttoptr i64 %99 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %98, i64 1
  %105 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %100, i64 1
  %106 = bitcast %"class.v8::internal::HeapEntry"** %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.v8::internal::HeapEntry"** %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %98, i64 2
  %110 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %100, i64 2
  %111 = bitcast %"class.v8::internal::HeapEntry"** %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %"class.v8::internal::HeapEntry"** %109 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %98, i64 3
  %115 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %100, i64 3
  %116 = bitcast %"class.v8::internal::HeapEntry"** %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.v8::internal::HeapEntry"** %114 to i64*
  store i64 %117, i64* %118, align 8
  %119 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %98, i64 4
  %120 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %100, i64 4
  %121 = bitcast %"class.v8::internal::HeapEntry"** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast %"class.v8::internal::HeapEntry"** %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %98, i64 5
  %125 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %100, i64 5
  %126 = bitcast %"class.v8::internal::HeapEntry"** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.v8::internal::HeapEntry"** %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %98, i64 6
  %130 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %100, i64 6
  %131 = bitcast %"class.v8::internal::HeapEntry"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.v8::internal::HeapEntry"** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %98, i64 7
  %135 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %100, i64 7
  %136 = bitcast %"class.v8::internal::HeapEntry"** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.v8::internal::HeapEntry"** %134 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %98, i64 8
  %140 = ptrtoint %"class.v8::internal::HeapEntry"** %139 to i64
  %141 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %100, i64 8
  %142 = icmp eq %"class.v8::internal::HeapEntry"** %69, %139
  br i1 %142, label %143, label %97

143:                                              ; preds = %97, %92
  %144 = ptrtoint %"class.v8::internal::HeapEntry"** %69 to i64
  %145 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %22, align 8
  br label %146

146:                                              ; preds = %143, %55
  %147 = phi %"class.v8::internal::HeapEntry"** [ %145, %143 ], [ %23, %55 ]
  %148 = phi i64 [ %144, %143 ], [ %62, %55 ]
  store i64 %60, i64* %48, align 8
  %149 = bitcast %"class.v8::internal::HeapEntry"*** %9 to i64*
  store i64 %62, i64* %149, align 8
  %150 = bitcast %"class.v8::internal::HeapEntry"*** %14 to i64*
  store i64 %148, i64* %150, align 8
  store i64 %64, i64* %47, align 8
  %151 = icmp eq %"class.v8::internal::HeapEntry"** %147, null
  %152 = inttoptr i64 %148 to i64*
  br i1 %151, label %157, label %153

153:                                              ; preds = %146
  %154 = bitcast %"class.v8::internal::HeapEntry"** %147 to i8*
  tail call void @_ZdlPv(i8* %154) #21
  %155 = bitcast %"class.v8::internal::HeapEntry"*** %14 to i64**
  %156 = load i64*, i64** %155, align 8
  br label %157

157:                                              ; preds = %7, %41, %146, %153
  %158 = phi i64* [ %156, %153 ], [ %152, %146 ], [ %45, %41 ], [ %20, %7 ]
  store i64 %12, i64* %158, align 8
  %159 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %14, align 8
  %160 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %159, i64 1
  store %"class.v8::internal::HeapEntry"** %160, %"class.v8::internal::HeapEntry"*** %14, align 8
  br label %549

161:                                              ; preds = %1
  %162 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %164 = bitcast %"class.v8::internal::HeapEntry"*** %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %167 = bitcast %"class.v8::internal::HeapEntry"*** %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = sub i64 %165, %168
  %170 = ashr exact i64 %169, 3
  %171 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %172 = bitcast %"class.v8::internal::HeapEntry"*** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.std::__1::deque"* %0 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = sub i64 %173, %175
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %170, %177
  %179 = inttoptr i64 %165 to %"class.v8::internal::HeapEntry"**
  %180 = inttoptr i64 %168 to %"class.v8::internal::HeapEntry"**
  br i1 %178, label %181, label %336

181:                                              ; preds = %161
  %182 = icmp eq i64 %173, %165
  br i1 %182, label %187, label %183

183:                                              ; preds = %181
  %184 = bitcast %"class.v8::internal::HeapEntry"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184) #13
  %185 = tail call i8* @_Znwm(i64 4080) #21
  %186 = bitcast %"class.v8::internal::HeapEntry"** %2 to i8**
  store i8* %185, i8** %186, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal9HeapEntryENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer"* %162, %"class.v8::internal::HeapEntry"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #13
  br label %549

187:                                              ; preds = %181
  %188 = bitcast %"class.v8::internal::HeapEntry"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %188) #13
  %189 = tail call i8* @_Znwm(i64 4080) #21
  %190 = bitcast %"class.v8::internal::HeapEntry"** %3 to i8**
  store i8* %189, i8** %190, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal9HeapEntryENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer"* %162, %"class.v8::internal::HeapEntry"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %188) #13
  %191 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %166, align 8
  %192 = bitcast %"class.v8::internal::HeapEntry"** %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %191, i64 1
  store %"class.v8::internal::HeapEntry"** %194, %"class.v8::internal::HeapEntry"*** %166, align 8
  %195 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %163, align 8
  %196 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %171, align 8
  %197 = icmp eq %"class.v8::internal::HeapEntry"** %195, %196
  %198 = ptrtoint %"class.v8::internal::HeapEntry"** %196 to i64
  %199 = bitcast %"class.v8::internal::HeapEntry"** %195 to i64*
  br i1 %197, label %200, label %332

200:                                              ; preds = %187
  %201 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %202 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %201, align 8
  %203 = icmp ugt %"class.v8::internal::HeapEntry"** %194, %202
  %204 = ptrtoint %"class.v8::internal::HeapEntry"** %202 to i64
  br i1 %203, label %205, label %225

205:                                              ; preds = %200
  %206 = ptrtoint %"class.v8::internal::HeapEntry"** %194 to i64
  %207 = sub i64 %206, %204
  %208 = ashr exact i64 %207, 3
  %209 = add nsw i64 %208, 1
  %210 = sdiv i64 %209, -2
  %211 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %194, i64 %210
  %212 = ptrtoint %"class.v8::internal::HeapEntry"** %195 to i64
  %213 = sub i64 %212, %206
  %214 = ashr exact i64 %213, 3
  %215 = icmp eq i64 %213, 0
  br i1 %215, label %220, label %216

216:                                              ; preds = %205
  %217 = bitcast %"class.v8::internal::HeapEntry"** %211 to i8*
  %218 = bitcast %"class.v8::internal::HeapEntry"** %194 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %217, i8* align 8 %218, i64 %213, i1 false) #13
  %219 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %166, align 8
  br label %220

220:                                              ; preds = %216, %205
  %221 = phi %"class.v8::internal::HeapEntry"** [ %194, %205 ], [ %219, %216 ]
  %222 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %211, i64 %214
  store %"class.v8::internal::HeapEntry"** %222, %"class.v8::internal::HeapEntry"*** %163, align 8
  %223 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %221, i64 %210
  store %"class.v8::internal::HeapEntry"** %223, %"class.v8::internal::HeapEntry"*** %166, align 8
  %224 = bitcast %"class.v8::internal::HeapEntry"** %222 to i64*
  br label %332

225:                                              ; preds = %200
  %226 = sub i64 %198, %204
  %227 = ashr exact i64 %226, 2
  %228 = icmp eq i64 %226, 0
  %229 = select i1 %228, i64 1, i64 %227
  %230 = icmp ugt i64 %229, 2305843009213693951
  br i1 %230, label %231, label %232

231:                                              ; preds = %225
  call void @abort() #20
  unreachable

232:                                              ; preds = %225
  %233 = lshr i64 %229, 2
  %234 = shl i64 %229, 3
  %235 = call i8* @_Znwm(i64 %234) #21
  %236 = bitcast i8* %235 to %"class.v8::internal::HeapEntry"**
  %237 = ptrtoint i8* %235 to i64
  %238 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %236, i64 %233
  %239 = ptrtoint %"class.v8::internal::HeapEntry"** %238 to i64
  %240 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %236, i64 %229
  %241 = ptrtoint %"class.v8::internal::HeapEntry"** %240 to i64
  %242 = ptrtoint %"class.v8::internal::HeapEntry"** %194 to i64
  %243 = ptrtoint %"class.v8::internal::HeapEntry"** %195 to i64
  %244 = sub i64 %243, %242
  %245 = ashr exact i64 %244, 3
  %246 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %238, i64 %245
  %247 = icmp eq i64 %244, 0
  br i1 %247, label %323, label %248

248:                                              ; preds = %232
  %249 = add i64 %244, -8
  %250 = lshr i64 %249, 3
  %251 = add nuw nsw i64 %250, 1
  %252 = and i64 %251, 7
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %269, label %254

254:                                              ; preds = %248, %254
  %255 = phi %"class.v8::internal::HeapEntry"** [ %262, %254 ], [ %238, %248 ]
  %256 = phi i64 [ %263, %254 ], [ %239, %248 ]
  %257 = phi %"class.v8::internal::HeapEntry"** [ %264, %254 ], [ %194, %248 ]
  %258 = phi i64 [ %265, %254 ], [ %252, %248 ]
  %259 = bitcast %"class.v8::internal::HeapEntry"** %257 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = inttoptr i64 %256 to i64*
  store i64 %260, i64* %261, align 8
  %262 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %255, i64 1
  %263 = ptrtoint %"class.v8::internal::HeapEntry"** %262 to i64
  %264 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %257, i64 1
  %265 = add i64 %258, -1
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %267, label %254, !llvm.loop !38

267:                                              ; preds = %254
  %268 = ptrtoint %"class.v8::internal::HeapEntry"** %262 to i64
  br label %269

269:                                              ; preds = %248, %267
  %270 = phi %"class.v8::internal::HeapEntry"** [ %238, %248 ], [ %262, %267 ]
  %271 = phi i64 [ %239, %248 ], [ %268, %267 ]
  %272 = phi %"class.v8::internal::HeapEntry"** [ %194, %248 ], [ %264, %267 ]
  %273 = icmp ult i64 %249, 56
  br i1 %273, label %320, label %274

274:                                              ; preds = %269, %274
  %275 = phi %"class.v8::internal::HeapEntry"** [ %316, %274 ], [ %270, %269 ]
  %276 = phi i64 [ %317, %274 ], [ %271, %269 ]
  %277 = phi %"class.v8::internal::HeapEntry"** [ %318, %274 ], [ %272, %269 ]
  %278 = bitcast %"class.v8::internal::HeapEntry"** %277 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = inttoptr i64 %276 to i64*
  store i64 %279, i64* %280, align 8
  %281 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %275, i64 1
  %282 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %277, i64 1
  %283 = bitcast %"class.v8::internal::HeapEntry"** %282 to i64*
  %284 = load i64, i64* %283, align 8
  %285 = bitcast %"class.v8::internal::HeapEntry"** %281 to i64*
  store i64 %284, i64* %285, align 8
  %286 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %275, i64 2
  %287 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %277, i64 2
  %288 = bitcast %"class.v8::internal::HeapEntry"** %287 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = bitcast %"class.v8::internal::HeapEntry"** %286 to i64*
  store i64 %289, i64* %290, align 8
  %291 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %275, i64 3
  %292 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %277, i64 3
  %293 = bitcast %"class.v8::internal::HeapEntry"** %292 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = bitcast %"class.v8::internal::HeapEntry"** %291 to i64*
  store i64 %294, i64* %295, align 8
  %296 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %275, i64 4
  %297 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %277, i64 4
  %298 = bitcast %"class.v8::internal::HeapEntry"** %297 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = bitcast %"class.v8::internal::HeapEntry"** %296 to i64*
  store i64 %299, i64* %300, align 8
  %301 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %275, i64 5
  %302 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %277, i64 5
  %303 = bitcast %"class.v8::internal::HeapEntry"** %302 to i64*
  %304 = load i64, i64* %303, align 8
  %305 = bitcast %"class.v8::internal::HeapEntry"** %301 to i64*
  store i64 %304, i64* %305, align 8
  %306 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %275, i64 6
  %307 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %277, i64 6
  %308 = bitcast %"class.v8::internal::HeapEntry"** %307 to i64*
  %309 = load i64, i64* %308, align 8
  %310 = bitcast %"class.v8::internal::HeapEntry"** %306 to i64*
  store i64 %309, i64* %310, align 8
  %311 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %275, i64 7
  %312 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %277, i64 7
  %313 = bitcast %"class.v8::internal::HeapEntry"** %312 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = bitcast %"class.v8::internal::HeapEntry"** %311 to i64*
  store i64 %314, i64* %315, align 8
  %316 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %275, i64 8
  %317 = ptrtoint %"class.v8::internal::HeapEntry"** %316 to i64
  %318 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %277, i64 8
  %319 = icmp eq %"class.v8::internal::HeapEntry"** %246, %316
  br i1 %319, label %320, label %274

320:                                              ; preds = %274, %269
  %321 = ptrtoint %"class.v8::internal::HeapEntry"** %246 to i64
  %322 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %201, align 8
  br label %323

323:                                              ; preds = %320, %232
  %324 = phi %"class.v8::internal::HeapEntry"** [ %322, %320 ], [ %202, %232 ]
  %325 = phi i64 [ %321, %320 ], [ %239, %232 ]
  store i64 %237, i64* %174, align 8
  store i64 %239, i64* %167, align 8
  store i64 %325, i64* %164, align 8
  store i64 %241, i64* %172, align 8
  %326 = icmp eq %"class.v8::internal::HeapEntry"** %324, null
  %327 = inttoptr i64 %325 to i64*
  br i1 %326, label %332, label %328

328:                                              ; preds = %323
  %329 = bitcast %"class.v8::internal::HeapEntry"** %324 to i8*
  call void @_ZdlPv(i8* %329) #21
  %330 = bitcast %"class.v8::internal::HeapEntry"*** %163 to i64**
  %331 = load i64*, i64** %330, align 8
  br label %332

332:                                              ; preds = %187, %220, %323, %328
  %333 = phi i64* [ %331, %328 ], [ %327, %323 ], [ %224, %220 ], [ %199, %187 ]
  store i64 %193, i64* %333, align 8
  %334 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %163, align 8
  %335 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %334, i64 1
  store %"class.v8::internal::HeapEntry"** %335, %"class.v8::internal::HeapEntry"*** %163, align 8
  br label %549

336:                                              ; preds = %161
  %337 = ashr exact i64 %176, 2
  %338 = icmp eq i64 %176, 0
  %339 = select i1 %338, i64 1, i64 %337
  %340 = icmp ugt i64 %339, 2305843009213693951
  br i1 %340, label %341, label %342

341:                                              ; preds = %336
  tail call void @abort() #20
  unreachable

342:                                              ; preds = %336
  %343 = shl i64 %339, 3
  %344 = tail call i8* @_Znwm(i64 %343) #21
  %345 = bitcast i8* %344 to %"class.v8::internal::HeapEntry"**
  %346 = ptrtoint i8* %344 to i64
  %347 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %345, i64 %170
  %348 = ptrtoint %"class.v8::internal::HeapEntry"** %347 to i64
  %349 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %345, i64 %339
  %350 = ptrtoint %"class.v8::internal::HeapEntry"** %349 to i64
  %351 = tail call i8* @_Znwm(i64 4080) #21
  %352 = ptrtoint i8* %351 to i64
  %353 = icmp eq i64 %170, %339
  br i1 %353, label %354, label %382

354:                                              ; preds = %342
  %355 = icmp ugt %"class.v8::internal::HeapEntry"** %347, %345
  br i1 %355, label %356, label %363

356:                                              ; preds = %354
  %357 = sub i64 %348, %346
  %358 = ashr exact i64 %357, 3
  %359 = add nsw i64 %358, 1
  %360 = sdiv i64 %359, -2
  %361 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %347, i64 %360
  %362 = ptrtoint %"class.v8::internal::HeapEntry"** %361 to i64
  br label %382

363:                                              ; preds = %354
  %364 = sub i64 %350, %346
  %365 = ashr exact i64 %364, 2
  %366 = icmp eq i64 %364, 0
  %367 = select i1 %366, i64 1, i64 %365
  %368 = icmp ugt i64 %367, 2305843009213693951
  br i1 %368, label %369, label %370

369:                                              ; preds = %363
  tail call void @abort() #20
  unreachable

370:                                              ; preds = %363
  %371 = lshr i64 %367, 2
  %372 = shl i64 %367, 3
  %373 = tail call i8* @_Znwm(i64 %372) #21
  %374 = bitcast i8* %373 to %"class.v8::internal::HeapEntry"**
  %375 = ptrtoint i8* %373 to i64
  %376 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %374, i64 %371
  %377 = ptrtoint %"class.v8::internal::HeapEntry"** %376 to i64
  %378 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %374, i64 %367
  %379 = ptrtoint %"class.v8::internal::HeapEntry"** %378 to i64
  tail call void @_ZdlPv(i8* nonnull %344) #21
  %380 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %163, align 8
  %381 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %166, align 8
  br label %382

382:                                              ; preds = %342, %356, %370
  %383 = phi %"class.v8::internal::HeapEntry"** [ %180, %356 ], [ %381, %370 ], [ %180, %342 ]
  %384 = phi %"class.v8::internal::HeapEntry"** [ %179, %356 ], [ %380, %370 ], [ %179, %342 ]
  %385 = phi i64 [ %346, %356 ], [ %375, %370 ], [ %346, %342 ]
  %386 = phi i64 [ %362, %356 ], [ %377, %370 ], [ %348, %342 ]
  %387 = phi %"class.v8::internal::HeapEntry"** [ %361, %356 ], [ %376, %370 ], [ %347, %342 ]
  %388 = phi i64 [ %350, %356 ], [ %379, %370 ], [ %350, %342 ]
  %389 = bitcast %"class.v8::internal::HeapEntry"** %387 to i64*
  store i64 %352, i64* %389, align 8
  %390 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %387, i64 1
  %391 = ptrtoint %"class.v8::internal::HeapEntry"** %390 to i64
  %392 = icmp eq %"class.v8::internal::HeapEntry"** %384, %383
  br i1 %392, label %395, label %405

393:                                              ; preds = %537
  %394 = ptrtoint %"class.v8::internal::HeapEntry"** %542 to i64
  br label %395

395:                                              ; preds = %393, %382
  %396 = phi i64 [ %385, %382 ], [ %538, %393 ]
  %397 = phi i64 [ %386, %382 ], [ %394, %393 ]
  %398 = phi i64 [ %391, %382 ], [ %539, %393 ]
  %399 = phi i64 [ %388, %382 ], [ %540, %393 ]
  %400 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %401 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %400, align 8
  store i64 %396, i64* %174, align 8
  store i64 %397, i64* %167, align 8
  store i64 %398, i64* %164, align 8
  store i64 %399, i64* %172, align 8
  %402 = icmp eq %"class.v8::internal::HeapEntry"** %401, null
  br i1 %402, label %549, label %403

403:                                              ; preds = %395
  %404 = bitcast %"class.v8::internal::HeapEntry"** %401 to i8*
  tail call void @_ZdlPv(i8* %404) #21
  br label %549

405:                                              ; preds = %382, %537
  %406 = phi %"class.v8::internal::HeapEntry"** [ %411, %537 ], [ %384, %382 ]
  %407 = phi i64 [ %540, %537 ], [ %388, %382 ]
  %408 = phi i64 [ %539, %537 ], [ %391, %382 ]
  %409 = phi i64 [ %546, %537 ], [ %386, %382 ]
  %410 = phi i64 [ %538, %537 ], [ %385, %382 ]
  %411 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %406, i64 -1
  %412 = inttoptr i64 %409 to %"class.v8::internal::HeapEntry"**
  %413 = inttoptr i64 %410 to %"class.v8::internal::HeapEntry"**
  %414 = icmp eq %"class.v8::internal::HeapEntry"** %412, %413
  br i1 %414, label %415, label %537

415:                                              ; preds = %405
  %416 = inttoptr i64 %408 to %"class.v8::internal::HeapEntry"**
  %417 = inttoptr i64 %407 to %"class.v8::internal::HeapEntry"**
  %418 = icmp ult %"class.v8::internal::HeapEntry"** %416, %417
  br i1 %418, label %419, label %436

419:                                              ; preds = %415
  %420 = sub i64 %407, %408
  %421 = ashr exact i64 %420, 3
  %422 = add nsw i64 %421, 1
  %423 = sdiv i64 %422, 2
  %424 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %416, i64 %423
  %425 = sub i64 %408, %409
  %426 = icmp eq i64 %425, 0
  br i1 %426, label %433, label %427

427:                                              ; preds = %419
  %428 = ashr exact i64 %425, 3
  %429 = sub nsw i64 0, %428
  %430 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %424, i64 %429
  %431 = bitcast %"class.v8::internal::HeapEntry"** %430 to i8*
  %432 = inttoptr i64 %409 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %431, i8* align 8 %432, i64 %425, i1 false) #13
  br label %433

433:                                              ; preds = %427, %419
  %434 = phi %"class.v8::internal::HeapEntry"** [ %430, %427 ], [ %424, %419 ]
  %435 = ptrtoint %"class.v8::internal::HeapEntry"** %424 to i64
  br label %537

436:                                              ; preds = %415
  %437 = sub i64 %407, %410
  %438 = ashr exact i64 %437, 2
  %439 = icmp eq i64 %437, 0
  %440 = select i1 %439, i64 1, i64 %438
  %441 = icmp ugt i64 %440, 2305843009213693951
  br i1 %441, label %442, label %443

442:                                              ; preds = %436
  tail call void @abort() #20
  unreachable

443:                                              ; preds = %436
  %444 = add nuw nsw i64 %440, 3
  %445 = lshr i64 %444, 2
  %446 = shl i64 %440, 3
  %447 = tail call i8* @_Znwm(i64 %446) #21
  %448 = bitcast i8* %447 to %"class.v8::internal::HeapEntry"**
  %449 = ptrtoint i8* %447 to i64
  %450 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %448, i64 %445
  %451 = ptrtoint %"class.v8::internal::HeapEntry"** %450 to i64
  %452 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %448, i64 %440
  %453 = ptrtoint %"class.v8::internal::HeapEntry"** %452 to i64
  %454 = sub i64 %408, %409
  %455 = ashr exact i64 %454, 3
  %456 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %450, i64 %455
  %457 = icmp eq i64 %454, 0
  br i1 %457, label %532, label %458

458:                                              ; preds = %443
  %459 = add i64 %454, -8
  %460 = lshr i64 %459, 3
  %461 = add nuw nsw i64 %460, 1
  %462 = and i64 %461, 7
  %463 = icmp eq i64 %462, 0
  br i1 %463, label %479, label %464

464:                                              ; preds = %458, %464
  %465 = phi %"class.v8::internal::HeapEntry"** [ %472, %464 ], [ %450, %458 ]
  %466 = phi i64 [ %473, %464 ], [ %451, %458 ]
  %467 = phi %"class.v8::internal::HeapEntry"** [ %474, %464 ], [ %412, %458 ]
  %468 = phi i64 [ %475, %464 ], [ %462, %458 ]
  %469 = bitcast %"class.v8::internal::HeapEntry"** %467 to i64*
  %470 = load i64, i64* %469, align 8
  %471 = inttoptr i64 %466 to i64*
  store i64 %470, i64* %471, align 8
  %472 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %465, i64 1
  %473 = ptrtoint %"class.v8::internal::HeapEntry"** %472 to i64
  %474 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %467, i64 1
  %475 = add i64 %468, -1
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %477, label %464, !llvm.loop !39

477:                                              ; preds = %464
  %478 = ptrtoint %"class.v8::internal::HeapEntry"** %472 to i64
  br label %479

479:                                              ; preds = %458, %477
  %480 = phi %"class.v8::internal::HeapEntry"** [ %450, %458 ], [ %472, %477 ]
  %481 = phi i64 [ %451, %458 ], [ %478, %477 ]
  %482 = phi %"class.v8::internal::HeapEntry"** [ %412, %458 ], [ %474, %477 ]
  %483 = icmp ult i64 %459, 56
  br i1 %483, label %530, label %484

484:                                              ; preds = %479, %484
  %485 = phi %"class.v8::internal::HeapEntry"** [ %526, %484 ], [ %480, %479 ]
  %486 = phi i64 [ %527, %484 ], [ %481, %479 ]
  %487 = phi %"class.v8::internal::HeapEntry"** [ %528, %484 ], [ %482, %479 ]
  %488 = bitcast %"class.v8::internal::HeapEntry"** %487 to i64*
  %489 = load i64, i64* %488, align 8
  %490 = inttoptr i64 %486 to i64*
  store i64 %489, i64* %490, align 8
  %491 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %485, i64 1
  %492 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %487, i64 1
  %493 = bitcast %"class.v8::internal::HeapEntry"** %492 to i64*
  %494 = load i64, i64* %493, align 8
  %495 = bitcast %"class.v8::internal::HeapEntry"** %491 to i64*
  store i64 %494, i64* %495, align 8
  %496 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %485, i64 2
  %497 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %487, i64 2
  %498 = bitcast %"class.v8::internal::HeapEntry"** %497 to i64*
  %499 = load i64, i64* %498, align 8
  %500 = bitcast %"class.v8::internal::HeapEntry"** %496 to i64*
  store i64 %499, i64* %500, align 8
  %501 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %485, i64 3
  %502 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %487, i64 3
  %503 = bitcast %"class.v8::internal::HeapEntry"** %502 to i64*
  %504 = load i64, i64* %503, align 8
  %505 = bitcast %"class.v8::internal::HeapEntry"** %501 to i64*
  store i64 %504, i64* %505, align 8
  %506 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %485, i64 4
  %507 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %487, i64 4
  %508 = bitcast %"class.v8::internal::HeapEntry"** %507 to i64*
  %509 = load i64, i64* %508, align 8
  %510 = bitcast %"class.v8::internal::HeapEntry"** %506 to i64*
  store i64 %509, i64* %510, align 8
  %511 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %485, i64 5
  %512 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %487, i64 5
  %513 = bitcast %"class.v8::internal::HeapEntry"** %512 to i64*
  %514 = load i64, i64* %513, align 8
  %515 = bitcast %"class.v8::internal::HeapEntry"** %511 to i64*
  store i64 %514, i64* %515, align 8
  %516 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %485, i64 6
  %517 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %487, i64 6
  %518 = bitcast %"class.v8::internal::HeapEntry"** %517 to i64*
  %519 = load i64, i64* %518, align 8
  %520 = bitcast %"class.v8::internal::HeapEntry"** %516 to i64*
  store i64 %519, i64* %520, align 8
  %521 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %485, i64 7
  %522 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %487, i64 7
  %523 = bitcast %"class.v8::internal::HeapEntry"** %522 to i64*
  %524 = load i64, i64* %523, align 8
  %525 = bitcast %"class.v8::internal::HeapEntry"** %521 to i64*
  store i64 %524, i64* %525, align 8
  %526 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %485, i64 8
  %527 = ptrtoint %"class.v8::internal::HeapEntry"** %526 to i64
  %528 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %487, i64 8
  %529 = icmp eq %"class.v8::internal::HeapEntry"** %456, %526
  br i1 %529, label %530, label %484

530:                                              ; preds = %484, %479
  %531 = ptrtoint %"class.v8::internal::HeapEntry"** %456 to i64
  br label %532

532:                                              ; preds = %530, %443
  %533 = phi i64 [ %531, %530 ], [ %451, %443 ]
  %534 = icmp eq i64 %409, 0
  br i1 %534, label %537, label %535

535:                                              ; preds = %532
  %536 = inttoptr i64 %409 to i8*
  tail call void @_ZdlPv(i8* %536) #21
  br label %537

537:                                              ; preds = %405, %433, %532, %535
  %538 = phi i64 [ %410, %433 ], [ %449, %532 ], [ %449, %535 ], [ %410, %405 ]
  %539 = phi i64 [ %435, %433 ], [ %533, %532 ], [ %533, %535 ], [ %408, %405 ]
  %540 = phi i64 [ %407, %433 ], [ %453, %532 ], [ %453, %535 ], [ %407, %405 ]
  %541 = phi %"class.v8::internal::HeapEntry"** [ %434, %433 ], [ %450, %532 ], [ %450, %535 ], [ %412, %405 ]
  %542 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %541, i64 -1
  %543 = bitcast %"class.v8::internal::HeapEntry"** %411 to i64*
  %544 = load i64, i64* %543, align 8
  %545 = bitcast %"class.v8::internal::HeapEntry"** %542 to i64*
  store i64 %544, i64* %545, align 8
  %546 = ptrtoint %"class.v8::internal::HeapEntry"** %542 to i64
  %547 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %166, align 8
  %548 = icmp eq %"class.v8::internal::HeapEntry"** %411, %547
  br i1 %548, label %393, label %405

549:                                              ; preds = %403, %395, %332, %183, %157
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal9HeapEntryENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer"*, %"class.v8::internal::HeapEntry"** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::HeapEntry"** %4, %6
  %8 = ptrtoint %"class.v8::internal::HeapEntry"** %6 to i64
  %9 = bitcast %"class.v8::internal::HeapEntry"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %13, align 8
  %15 = icmp ugt %"class.v8::internal::HeapEntry"** %12, %14
  %16 = ptrtoint %"class.v8::internal::HeapEntry"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.v8::internal::HeapEntry"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %12, i64 %22
  %24 = ptrtoint %"class.v8::internal::HeapEntry"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.v8::internal::HeapEntry"** %23 to i8*
  %30 = bitcast %"class.v8::internal::HeapEntry"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #13
  %31 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.v8::internal::HeapEntry"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %23, i64 %26
  store %"class.v8::internal::HeapEntry"** %34, %"class.v8::internal::HeapEntry"*** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %33, i64 %22
  store %"class.v8::internal::HeapEntry"** %35, %"class.v8::internal::HeapEntry"*** %11, align 8
  %36 = bitcast %"class.v8::internal::HeapEntry"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.v8::internal::HeapEntry"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #20
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #21
  %50 = bitcast i8* %49 to %"class.v8::internal::HeapEntry"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %50, i64 %47
  %53 = ptrtoint %"class.v8::internal::HeapEntry"** %52 to i64
  %54 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %50, i64 %43
  %55 = ptrtoint %"class.v8::internal::HeapEntry"** %54 to i64
  %56 = ptrtoint %"class.v8::internal::HeapEntry"** %12 to i64
  %57 = ptrtoint %"class.v8::internal::HeapEntry"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.v8::internal::HeapEntry"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.v8::internal::HeapEntry"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.v8::internal::HeapEntry"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %69, i64 1
  %77 = ptrtoint %"class.v8::internal::HeapEntry"** %76 to i64
  %78 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !40

81:                                               ; preds = %68
  %82 = ptrtoint %"class.v8::internal::HeapEntry"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.v8::internal::HeapEntry"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.v8::internal::HeapEntry"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.v8::internal::HeapEntry"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.v8::internal::HeapEntry"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.v8::internal::HeapEntry"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %89, i64 1
  %96 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %91, i64 1
  %97 = bitcast %"class.v8::internal::HeapEntry"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.v8::internal::HeapEntry"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %89, i64 2
  %101 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %91, i64 2
  %102 = bitcast %"class.v8::internal::HeapEntry"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.v8::internal::HeapEntry"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %89, i64 3
  %106 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %91, i64 3
  %107 = bitcast %"class.v8::internal::HeapEntry"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.v8::internal::HeapEntry"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %89, i64 4
  %111 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %91, i64 4
  %112 = bitcast %"class.v8::internal::HeapEntry"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.v8::internal::HeapEntry"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %89, i64 5
  %116 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %91, i64 5
  %117 = bitcast %"class.v8::internal::HeapEntry"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.v8::internal::HeapEntry"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %89, i64 6
  %121 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %91, i64 6
  %122 = bitcast %"class.v8::internal::HeapEntry"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.v8::internal::HeapEntry"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %89, i64 7
  %126 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %91, i64 7
  %127 = bitcast %"class.v8::internal::HeapEntry"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.v8::internal::HeapEntry"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %89, i64 8
  %131 = ptrtoint %"class.v8::internal::HeapEntry"** %130 to i64
  %132 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %91, i64 8
  %133 = icmp eq %"class.v8::internal::HeapEntry"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.v8::internal::HeapEntry"** %60 to i64
  %136 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.v8::internal::HeapEntry"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.v8::internal::HeapEntry"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.v8::internal::HeapEntry"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.v8::internal::HeapEntry"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.v8::internal::HeapEntry"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #21
  %146 = bitcast %"class.v8::internal::HeapEntry"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.v8::internal::HeapEntry"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %3, align 8
  %153 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %152, i64 1
  store %"class.v8::internal::HeapEntry"** %153, %"class.v8::internal::HeapEntry"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal9HeapEntryENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer"*, %"class.v8::internal::HeapEntry"** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::HeapEntry"** %4, %6
  %8 = ptrtoint %"class.v8::internal::HeapEntry"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %12, align 8
  %14 = icmp ult %"class.v8::internal::HeapEntry"** %11, %13
  %15 = bitcast %"class.v8::internal::HeapEntry"*** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::HeapEntry"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.v8::internal::HeapEntry"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::HeapEntry"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %23, i64 %29
  %31 = bitcast %"class.v8::internal::HeapEntry"** %30 to i8*
  %32 = bitcast %"class.v8::internal::HeapEntry"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #13
  %33 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.v8::internal::HeapEntry"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.v8::internal::HeapEntry"** [ %30, %27 ], [ %23, %17 ]
  store %"class.v8::internal::HeapEntry"** %36, %"class.v8::internal::HeapEntry"*** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %35, i64 %22
  store %"class.v8::internal::HeapEntry"** %37, %"class.v8::internal::HeapEntry"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #20
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #21
  %51 = bitcast i8* %50 to %"class.v8::internal::HeapEntry"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %51, i64 %48
  %54 = ptrtoint %"class.v8::internal::HeapEntry"** %53 to i64
  %55 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %51, i64 %43
  %56 = ptrtoint %"class.v8::internal::HeapEntry"** %55 to i64
  %57 = ptrtoint %"class.v8::internal::HeapEntry"** %4 to i64
  %58 = ptrtoint %"class.v8::internal::HeapEntry"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.v8::internal::HeapEntry"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.v8::internal::HeapEntry"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.v8::internal::HeapEntry"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %70, i64 1
  %78 = ptrtoint %"class.v8::internal::HeapEntry"** %77 to i64
  %79 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !41

82:                                               ; preds = %69
  %83 = ptrtoint %"class.v8::internal::HeapEntry"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.v8::internal::HeapEntry"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.v8::internal::HeapEntry"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.v8::internal::HeapEntry"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.v8::internal::HeapEntry"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.v8::internal::HeapEntry"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %90, i64 1
  %97 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %92, i64 1
  %98 = bitcast %"class.v8::internal::HeapEntry"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.v8::internal::HeapEntry"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %90, i64 2
  %102 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %92, i64 2
  %103 = bitcast %"class.v8::internal::HeapEntry"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.v8::internal::HeapEntry"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %90, i64 3
  %107 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %92, i64 3
  %108 = bitcast %"class.v8::internal::HeapEntry"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.v8::internal::HeapEntry"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %90, i64 4
  %112 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %92, i64 4
  %113 = bitcast %"class.v8::internal::HeapEntry"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.v8::internal::HeapEntry"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %90, i64 5
  %117 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %92, i64 5
  %118 = bitcast %"class.v8::internal::HeapEntry"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.v8::internal::HeapEntry"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %90, i64 6
  %122 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %92, i64 6
  %123 = bitcast %"class.v8::internal::HeapEntry"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.v8::internal::HeapEntry"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %90, i64 7
  %127 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %92, i64 7
  %128 = bitcast %"class.v8::internal::HeapEntry"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::HeapEntry"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %90, i64 8
  %132 = ptrtoint %"class.v8::internal::HeapEntry"** %131 to i64
  %133 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %92, i64 8
  %134 = icmp eq %"class.v8::internal::HeapEntry"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.v8::internal::HeapEntry"** %61 to i64
  %137 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.v8::internal::HeapEntry"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.v8::internal::HeapEntry"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.v8::internal::HeapEntry"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.v8::internal::HeapEntry"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.v8::internal::HeapEntry"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #21
  %146 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.v8::internal::HeapEntry"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %148, i64 -1
  %150 = bitcast %"class.v8::internal::HeapEntry"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.v8::internal::HeapEntry"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.v8::internal::HeapEntry"**, %"class.v8::internal::HeapEntry"*** %3, align 8
  %154 = getelementptr inbounds %"class.v8::internal::HeapEntry"*, %"class.v8::internal::HeapEntry"** %153, i64 -1
  store %"class.v8::internal::HeapEntry"** %154, %"class.v8::internal::HeapEntry"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN2v88internal13HeapGraphEdgeENS_9allocatorIS4_EEE8__appendEm(%"class.std::__1::vector.770"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.770", %"class.std::__1::vector.770"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.v8::internal::HeapGraphEdge"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.770", %"class.std::__1::vector.770"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.v8::internal::HeapGraphEdge"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.v8::internal::HeapGraphEdge"**
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %13, i64 %18
  %20 = bitcast %"class.v8::internal::HeapGraphEdge"** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #13
  %26 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.770"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.770"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #20
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #20
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #21
  %54 = bitcast i8* %53 to %"class.v8::internal::HeapGraphEdge"**
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"class.v8::internal::HeapGraphEdge"** [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %57, i64 %33
  %59 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %57, i64 %56
  %60 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %58, i64 %1
  %61 = bitcast %"class.v8::internal::HeapGraphEdge"** %58 to i8*
  %62 = shl i64 %1, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 %62, i1 false) #13
  %63 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %59 to i64
  %64 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.770", %"class.std::__1::vector.770"* %0, i64 0, i32 0, i32 0
  %66 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %"class.v8::internal::HeapGraphEdge"*, %"class.v8::internal::HeapGraphEdge"** %58, i64 %71
  %73 = ptrtoint %"class.v8::internal::HeapGraphEdge"** %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %"class.v8::internal::HeapGraphEdge"** %72 to i8*
  %77 = bitcast %"class.v8::internal::HeapGraphEdge"** %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 %69, i1 false) #13
  %78 = load %"class.v8::internal::HeapGraphEdge"**, %"class.v8::internal::HeapGraphEdge"*** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %"class.v8::internal::HeapGraphEdge"** [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %"class.v8::internal::HeapGraphEdge"** %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %"class.v8::internal::HeapGraphEdge"** %80 to i8*
  tail call void @_ZdlPv(i8* %83) #21
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.773"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.773", %"class.std::__1::__hash_table.773"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.773"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.773", %"class.std::__1::__hash_table.773"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.773", %"class.std::__1::__hash_table.773"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.773"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.773"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.773", %"class.std::__1::__hash_table.773"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #20
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #21
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.773", %"class.std::__1::__hash_table.773"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.777"**, %"struct.std::__1::__hash_node_base.777"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.773"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.777"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.777"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #21
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.779", %"class.std::__1::__bucket_list_deallocator.779"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.777"**, %"struct.std::__1::__hash_node_base.777"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.777"* null, %"struct.std::__1::__hash_node_base.777"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !42

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.773", %"class.std::__1::__hash_table.773"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.777"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.777"**, %"struct.std::__1::__hash_node_base.777"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.777"* null, %"struct.std::__1::__hash_node_base.777"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.777"**, %"struct.std::__1::__hash_node_base.777"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.777"* null, %"struct.std::__1::__hash_node_base.777"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.777"**, %"struct.std::__1::__hash_node_base.777"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.777"* null, %"struct.std::__1::__hash_node_base.777"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.777"**, %"struct.std::__1::__hash_node_base.777"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.777"* null, %"struct.std::__1::__hash_node_base.777"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.777"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.777"**, %"struct.std::__1::__hash_node_base.777"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.777"* %36, %"struct.std::__1::__hash_node_base.777"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.777"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base.777"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base.777"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.777"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.777"**, %"struct.std::__1::__hash_node_base.777"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.777"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base.777"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.777"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base.777"* %103 to i32*
  %105 = load i32, i32* %130, align 4
  %106 = load i32, i32* %104, align 4
  %107 = icmp eq i32 %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base.777"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base.777"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base.777"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base.777"**, %"struct.std::__1::__hash_node_base.777"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base.777"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base.777"**, %"struct.std::__1::__hash_node_base.777"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.777"* %80, %"struct.std::__1::__hash_node_base.777"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.777"* %82, %"struct.std::__1::__hash_node_base.777"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base.777"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base.777"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base.777"* %129 to i32*
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base.777"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base.777"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base.777"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base.777"**, %"struct.std::__1::__hash_node_base.777"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.777"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base.777"* %146 to i32*
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base.777"* %134, %"struct.std::__1::__hash_node_base.777"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base.777"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base.777"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base.777"* %155 to i32*
  %157 = load i32, i32* %147, align 4
  %158 = load i32, i32* %156, align 4
  %159 = icmp eq i32 %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base.777"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base.777"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base.777"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base.777"**, %"struct.std::__1::__hash_node_base.777"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base.777"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base.777"**, %"struct.std::__1::__hash_node_base.777"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.777"* %132, %"struct.std::__1::__hash_node_base.777"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base.777"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base.777"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table.773", %"class.std::__1::__hash_table.773"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base.777"**, %"struct.std::__1::__hash_node_base.777"*** %180, align 8
  store %"struct.std::__1::__hash_node_base.777"** null, %"struct.std::__1::__hash_node_base.777"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base.777"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base.777"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #21
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.779", %"class.std::__1::__bucket_list_deallocator.779"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.777"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJjS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.773"*, i32* dereferenceable(4), i32* dereferenceable(4), %"class.v8::internal::HeapEntry"** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %5 = load i32, i32* %1, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::__1::__hash_table.773", %"class.std::__1::__hash_table.773"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %69, label %10

10:                                               ; preds = %4
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #13, !range !3
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, 4294967295
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ugt i64 %8, %6
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %13, %16, %18
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.773", %"class.std::__1::__hash_table.773"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.777"**, %"struct.std::__1::__hash_node_base.777"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.777"* %25, null
  br i1 %26, label %69, label %27

27:                                               ; preds = %20
  %28 = add i64 %8, -1
  br i1 %12, label %29, label %51

29:                                               ; preds = %27, %46
  %30 = phi %"struct.std::__1::__hash_node_base.777"* [ %32, %46 ], [ %25, %27 ]
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %30, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base.777"* %32, null
  br i1 %33, label %69, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %32, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base.777"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %6
  br i1 %38, label %46, label %39

39:                                               ; preds = %34
  %40 = icmp ult i64 %37, %8
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %37, %8
  br label %43

43:                                               ; preds = %41, %39
  %44 = phi i64 [ %42, %41 ], [ %37, %39 ]
  %45 = icmp eq i64 %44, %21
  br i1 %45, label %46, label %69

46:                                               ; preds = %43, %34
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %32, i64 2
  %48 = bitcast %"struct.std::__1::__hash_node_base.777"* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %5
  br i1 %50, label %160, label %29

51:                                               ; preds = %27, %64
  %52 = phi %"struct.std::__1::__hash_node_base.777"* [ %54, %64 ], [ %25, %27 ]
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %52, i64 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base.777"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %54, i64 1
  %58 = bitcast %"struct.std::__1::__hash_node_base.777"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, %6
  %61 = and i64 %59, %28
  %62 = icmp eq i64 %61, %21
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %69

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %54, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.777"* %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, %5
  br i1 %68, label %160, label %51

69:                                               ; preds = %56, %51, %43, %29, %20, %4
  %70 = phi i64 [ %21, %20 ], [ undef, %4 ], [ %21, %29 ], [ %21, %43 ], [ %21, %51 ], [ %21, %56 ]
  %71 = tail call i8* @_Znwm(i64 32) #21, !noalias !43
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast i8* %72 to i32*
  %74 = load i32, i32* %2, align 4, !noalias !43
  store i32 %74, i32* %73, align 8, !noalias !43
  %75 = getelementptr inbounds i8, i8* %71, i64 24
  %76 = bitcast %"class.v8::internal::HeapEntry"** %3 to i64*
  %77 = load i64, i64* %76, align 8, !noalias !43
  %78 = bitcast i8* %75 to i64*
  store i64 %77, i64* %78, align 8, !noalias !43
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %6, i64* %80, align 8, !noalias !43
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.777"**
  store %"struct.std::__1::__hash_node_base.777"* null, %"struct.std::__1::__hash_node_base.777"** %81, align 8, !noalias !43
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.773", %"class.std::__1::__hash_table.773"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %8 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.773", %"class.std::__1::__hash_table.773"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %9, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %8, 1
  %94 = icmp ult i64 %8, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %8) #13, !range !3
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #13
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.773"* %0, i64 %104)
  %105 = load i64, i64* %7, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #13, !range !3
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, 4294967295
  %110 = and i64 %109, %6
  br label %115

111:                                              ; preds = %92
  %112 = icmp ugt i64 %105, %6
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %6, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %8, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %6, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.773", %"class.std::__1::__hash_table.773"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.777"**, %"struct.std::__1::__hash_node_base.777"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.777"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.773", %"class.std::__1::__hash_table.773"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.777"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.777"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.777"* %124, %"struct.std::__1::__hash_node_base.777"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.777"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777", %"struct.std::__1::__hash_node_base.777"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.777"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #13, !range !3
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.777"**, %"struct.std::__1::__hash_node_base.777"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.777"*, %"struct.std::__1::__hash_node_base.777"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.777"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.777"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.777"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.777"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %46, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %46 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.777"* [ %157, %156 ], [ %32, %46 ], [ %54, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.777"*, i8 } undef, %"struct.std::__1::__hash_node_base.777"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.777"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.777"*, i8 } %164
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #19

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_18KeyEqualityMatcherIS2_EENS0_23DefaultAllocationPolicyEE6ResizeEv(%"class.v8::base::TemplateHashMapImpl"*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 0
  %3 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = shl i32 %5, 1
  %9 = zext i32 %8 to i64
  %10 = mul nuw nsw i64 %9, 24
  %11 = tail call noalias i8* @malloc(i64 %10) #13
  %12 = bitcast %"class.v8::base::TemplateHashMapImpl"* %0 to i8**
  store i8* %11, i8** %12, align 8
  %13 = icmp eq i8* %11, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.648, i64 0, i64 0)) #20
  unreachable

15:                                               ; preds = %1
  store i32 %8, i32* %4, align 8
  %16 = icmp eq i32 %8, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %15
  %18 = bitcast i8* %11 to i8**
  store i8* null, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %11, i64 24
  %20 = bitcast i8* %19 to i8**
  store i8* null, i8** %20, align 8
  %21 = load i32, i32* %4, align 8
  %22 = icmp ugt i32 %21, 2
  br i1 %22, label %23, label %31

23:                                               ; preds = %17, %23
  %24 = phi i64 [ %27, %23 ], [ 2, %17 ]
  %25 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %2, align 8
  %26 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %25, i64 %24, i32 0
  store i8* null, i8** %26, align 8
  %27 = add nuw nsw i64 %24, 1
  %28 = load i32, i32* %4, align 8
  %29 = zext i32 %28 to i64
  %30 = icmp ult i64 %27, %29
  br i1 %30, label %23, label %31

31:                                               ; preds = %23, %17, %15
  %32 = phi i32 [ 0, %15 ], [ %21, %17 ], [ %28, %23 ]
  store i32 0, i32* %6, align 4
  %33 = icmp eq i32 %7, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %109, %31
  %35 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %3 to i8*
  tail call void @free(i8* %35) #13
  ret void

36:                                               ; preds = %31, %109
  %37 = phi i32 [ %110, %109 ], [ %32, %31 ]
  %38 = phi i32 [ %111, %109 ], [ %7, %31 ]
  %39 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %112, %109 ], [ %3, %31 ]
  %40 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %39, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %109, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %39, i64 0, i32 2
  %45 = load i32, i32* %44, align 8
  %46 = add i32 %37, -1
  %47 = and i32 %46, %45
  %48 = zext i32 %47 to i64
  %49 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %2, align 8
  %50 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %49, i64 %48
  %51 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %50, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, null
  %54 = icmp eq i8* %41, %52
  %55 = or i1 %53, %54
  br i1 %55, label %68, label %56

56:                                               ; preds = %43
  %57 = zext i32 %46 to i64
  br label %58

58:                                               ; preds = %58, %56
  %59 = phi i64 [ %48, %56 ], [ %61, %58 ]
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, %57
  %62 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %49, i64 %61
  %63 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %62, i64 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = icmp eq i8* %64, null
  %66 = icmp eq i8* %41, %64
  %67 = or i1 %65, %66
  br i1 %67, label %68, label %58

68:                                               ; preds = %58, %43
  %69 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %50, %43 ], [ %62, %58 ]
  %70 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %39, i64 0, i32 1
  %71 = bitcast i8** %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %69, i64 0, i32 0
  store i8* %41, i8** %73, align 8
  %74 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %69, i64 0, i32 1
  %75 = bitcast i8** %74 to i64*
  store i64 %72, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %69, i64 0, i32 2
  store i32 %45, i32* %76, align 8
  %77 = load i32, i32* %6, align 4
  %78 = add i32 %77, 1
  store i32 %78, i32* %6, align 4
  %79 = lshr i32 %78, 2
  %80 = add i32 %79, %78
  %81 = load i32, i32* %4, align 8
  %82 = icmp ult i32 %80, %81
  br i1 %82, label %106, label %83

83:                                               ; preds = %68
  tail call void @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_18KeyEqualityMatcherIS2_EENS0_23DefaultAllocationPolicyEE6ResizeEv(%"class.v8::base::TemplateHashMapImpl"* %0) #13
  %84 = load i32, i32* %4, align 8
  %85 = add i32 %84, -1
  %86 = and i32 %85, %45
  %87 = zext i32 %86 to i64
  %88 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %2, align 8
  %89 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %88, i64 %87, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = icmp eq i8* %90, null
  %92 = load i8*, i8** %40, align 8
  %93 = icmp eq i8* %92, %90
  %94 = or i1 %91, %93
  br i1 %94, label %106, label %95

95:                                               ; preds = %83
  %96 = zext i32 %85 to i64
  br label %97

97:                                               ; preds = %97, %95
  %98 = phi i64 [ %87, %95 ], [ %100, %97 ]
  %99 = add nuw nsw i64 %98, 1
  %100 = and i64 %99, %96
  %101 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %88, i64 %100, i32 0
  %102 = load i8*, i8** %101, align 8
  %103 = icmp eq i8* %102, null
  %104 = icmp eq i8* %92, %102
  %105 = or i1 %103, %104
  br i1 %105, label %106, label %97

106:                                              ; preds = %97, %83, %68
  %107 = phi i32 [ %84, %83 ], [ %81, %68 ], [ %84, %97 ]
  %108 = add i32 %38, -1
  br label %109

109:                                              ; preds = %36, %106
  %110 = phi i32 [ %107, %106 ], [ %37, %36 ]
  %111 = phi i32 [ %108, %106 ], [ %38, %36 ]
  %112 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %39, i64 1
  %113 = icmp eq i32 %111, 0
  br i1 %113, label %34, label %36
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvmEENS_22__unordered_map_hasherIS2_S3_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S3_S8_S6_Lb1EEENS_9allocatorIS3_EEE4findIS2_EENS_15__hash_iteratorIPNS_11__hash_nodeIS3_S2_EEEERKT_(%"class.std::__1::__hash_table"*, i8** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = bitcast i8** %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 32
  %6 = shl i64 %4, 3
  %7 = and i64 %6, 4294967288
  %8 = add nuw nsw i64 %7, 8
  %9 = xor i64 %8, %5
  %10 = mul i64 %9, -7070675565921424023
  %11 = lshr i64 %10, 47
  %12 = xor i64 %10, %5
  %13 = xor i64 %12, %11
  %14 = mul i64 %13, -7070675565921424023
  %15 = lshr i64 %14, 47
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  %21 = inttoptr i64 %4 to i8*
  br i1 %20, label %85, label %22

22:                                               ; preds = %2
  %23 = tail call i64 @llvm.ctpop.i64(i64 %19) #13, !range !3
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %19, -1
  %27 = and i64 %17, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %17, %19
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %17, %19
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %17, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base"* %37, null
  br i1 %38, label %85, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %42, label %85, label %43

43:                                               ; preds = %39
  %44 = add i64 %19, -1
  br i1 %24, label %45, label %67

45:                                               ; preds = %43, %63
  %46 = phi %"struct.std::__1::__hash_node_base"* [ %65, %63 ], [ %41, %43 ]
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %17
  br i1 %50, label %58, label %51

51:                                               ; preds = %45
  %52 = icmp ult i64 %49, %19
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = urem i64 %49, %19
  br label %55

55:                                               ; preds = %53, %51
  %56 = phi i64 [ %54, %53 ], [ %49, %51 ]
  %57 = icmp eq i64 %56, %33
  br i1 %57, label %63, label %85

58:                                               ; preds = %45
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 2
  %60 = bitcast %"struct.std::__1::__hash_node_base"* %59 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, %21
  br i1 %62, label %85, label %63

63:                                               ; preds = %58, %55
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %64, align 8
  %66 = icmp eq %"struct.std::__1::__hash_node_base"* %65, null
  br i1 %66, label %85, label %45

67:                                               ; preds = %43, %81
  %68 = phi %"struct.std::__1::__hash_node_base"* [ %83, %81 ], [ %41, %43 ]
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, %17
  br i1 %72, label %76, label %73

73:                                               ; preds = %67
  %74 = and i64 %71, %44
  %75 = icmp eq i64 %74, %33
  br i1 %75, label %81, label %85

76:                                               ; preds = %67
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 2
  %78 = bitcast %"struct.std::__1::__hash_node_base"* %77 to i8**
  %79 = load i8*, i8** %78, align 8
  %80 = icmp eq i8* %79, %21
  br i1 %80, label %85, label %81

81:                                               ; preds = %73, %76
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base"* %83, null
  br i1 %84, label %85, label %67

85:                                               ; preds = %76, %81, %73, %58, %63, %55, %39, %2, %32
  %86 = phi %"struct.std::__1::__hash_node_base"* [ null, %32 ], [ null, %2 ], [ null, %39 ], [ %46, %58 ], [ null, %63 ], [ null, %55 ], [ %68, %76 ], [ null, %81 ], [ null, %73 ]
  ret %"struct.std::__1::__hash_node_base"* %86
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvmEENS_22__unordered_map_hasherIS2_S3_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S3_S8_S6_Lb1EEENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS2_JNS_4pairIKS2_mEEEEENSG_INS_15__hash_iteratorIPNS_11__hash_nodeIS3_S2_EEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i8** dereferenceable(8), %"struct.std::__1::pair.1274"* dereferenceable(16)) local_unnamed_addr #2 comdat align 2 {
  %4 = bitcast i8** %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  %22 = inttoptr i64 %5 to i8*
  br i1 %21, label %82, label %23

23:                                               ; preds = %3
  %24 = tail call i64 @llvm.ctpop.i64(i64 %20) #13, !range !3
  %25 = icmp ugt i64 %24, 1
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = add i64 %20, -1
  %28 = and i64 %18, %27
  br label %33

29:                                               ; preds = %23
  %30 = icmp ult i64 %18, %20
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = urem i64 %18, %20
  br label %33

33:                                               ; preds = %26, %29, %31
  %34 = phi i64 [ %28, %26 ], [ %32, %31 ], [ %18, %29 ]
  %35 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, i64 %34
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %82, label %40

40:                                               ; preds = %33
  %41 = add i64 %20, -1
  br i1 %25, label %42, label %64

42:                                               ; preds = %40, %59
  %43 = phi %"struct.std::__1::__hash_node_base"* [ %45, %59 ], [ %38, %40 ]
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base"* %45, null
  br i1 %46, label %82, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 1
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, %18
  br i1 %51, label %59, label %52

52:                                               ; preds = %47
  %53 = icmp ult i64 %50, %20
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = urem i64 %50, %20
  br label %56

56:                                               ; preds = %54, %52
  %57 = phi i64 [ %55, %54 ], [ %50, %52 ]
  %58 = icmp eq i64 %57, %34
  br i1 %58, label %59, label %82

59:                                               ; preds = %56, %47
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 2
  %61 = bitcast %"struct.std::__1::__hash_node_base"* %60 to i8**
  %62 = load i8*, i8** %61, align 8
  %63 = icmp eq i8* %62, %22
  br i1 %63, label %168, label %42

64:                                               ; preds = %40, %77
  %65 = phi %"struct.std::__1::__hash_node_base"* [ %67, %77 ], [ %38, %40 ]
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %65, i64 0, i32 0
  %67 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %66, align 8
  %68 = icmp eq %"struct.std::__1::__hash_node_base"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %67, i64 1
  %71 = bitcast %"struct.std::__1::__hash_node_base"* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, %18
  %74 = and i64 %72, %41
  %75 = icmp eq i64 %74, %34
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %82

77:                                               ; preds = %69
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %67, i64 2
  %79 = bitcast %"struct.std::__1::__hash_node_base"* %78 to i8**
  %80 = load i8*, i8** %79, align 8
  %81 = icmp eq i8* %80, %22
  br i1 %81, label %168, label %64

82:                                               ; preds = %69, %64, %56, %42, %33, %3
  %83 = phi i64 [ %34, %33 ], [ undef, %3 ], [ %34, %42 ], [ %34, %56 ], [ %34, %64 ], [ %34, %69 ]
  %84 = tail call i8* @_Znwm(i64 32) #21, !noalias !46
  %85 = getelementptr inbounds i8, i8* %84, i64 16
  %86 = bitcast %"struct.std::__1::pair.1274"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 16, i1 false) #13, !noalias !46
  %87 = getelementptr inbounds i8, i8* %84, i64 8
  %88 = bitcast i8* %87 to i64*
  store i64 %18, i64* %88, align 8, !noalias !46
  %89 = bitcast i8* %84 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %89, align 8, !noalias !46
  %90 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, 1
  %93 = uitofp i64 %92 to float
  %94 = uitofp i64 %20 to float
  %95 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %96 = load float, float* %95, align 4
  %97 = fmul float %96, %94
  %98 = fcmp olt float %97, %93
  %99 = or i1 %21, %98
  br i1 %99, label %100, label %123

100:                                              ; preds = %82
  %101 = shl i64 %20, 1
  %102 = icmp ult i64 %20, 3
  %103 = tail call i64 @llvm.ctpop.i64(i64 %20) #13, !range !3
  %104 = icmp ugt i64 %103, 1
  %105 = or i1 %102, %104
  %106 = zext i1 %105 to i64
  %107 = or i64 %101, %106
  %108 = fdiv float %93, %96
  %109 = tail call float @llvm.ceil.f32(float %108) #13
  %110 = fptoui float %109 to i64
  %111 = icmp ult i64 %107, %110
  %112 = select i1 %111, i64 %110, i64 %107
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvmEENS_22__unordered_map_hasherIS2_S3_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S3_S8_S6_Lb1EEENS_9allocatorIS3_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %112)
  %113 = load i64, i64* %19, align 8
  %114 = tail call i64 @llvm.ctpop.i64(i64 %113) #13, !range !3
  %115 = icmp ugt i64 %114, 1
  br i1 %115, label %119, label %116

116:                                              ; preds = %100
  %117 = add i64 %113, -1
  %118 = and i64 %117, %18
  br label %123

119:                                              ; preds = %100
  %120 = icmp ult i64 %18, %113
  br i1 %120, label %123, label %121

121:                                              ; preds = %119
  %122 = urem i64 %18, %113
  br label %123

123:                                              ; preds = %121, %119, %116, %82
  %124 = phi i64 [ %20, %82 ], [ %113, %116 ], [ %113, %119 ], [ %113, %121 ]
  %125 = phi i64 [ %83, %82 ], [ %118, %116 ], [ %18, %119 ], [ %122, %121 ]
  %126 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %127 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %126, align 8
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %127, i64 %125
  %129 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %128, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base"* %129, null
  br i1 %130, label %131, label %157

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %133 = bitcast %"struct.std::__1::__hash_node_base"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast i8* %84 to i64*
  store i64 %134, i64* %135, align 8
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %132 to i8**
  store i8* %84, i8** %136, align 8
  store %"struct.std::__1::__hash_node_base"* %132, %"struct.std::__1::__hash_node_base"** %128, align 8
  %137 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %89, align 8
  %138 = icmp eq %"struct.std::__1::__hash_node_base"* %137, null
  br i1 %138, label %164, label %139

139:                                              ; preds = %131
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %137, i64 1
  %141 = bitcast %"struct.std::__1::__hash_node_base"* %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = tail call i64 @llvm.ctpop.i64(i64 %124) #13, !range !3
  %144 = icmp ugt i64 %143, 1
  br i1 %144, label %148, label %145

145:                                              ; preds = %139
  %146 = add i64 %124, -1
  %147 = and i64 %142, %146
  br label %152

148:                                              ; preds = %139
  %149 = icmp ult i64 %142, %124
  br i1 %149, label %152, label %150

150:                                              ; preds = %148
  %151 = urem i64 %142, %124
  br label %152

152:                                              ; preds = %145, %148, %150
  %153 = phi i64 [ %147, %145 ], [ %151, %150 ], [ %142, %148 ]
  %154 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %126, align 8
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %154, i64 %153
  %156 = bitcast %"struct.std::__1::__hash_node_base"** %155 to i8**
  br label %162

157:                                              ; preds = %123
  %158 = bitcast %"struct.std::__1::__hash_node_base"* %129 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast i8* %84 to i64*
  store i64 %159, i64* %160, align 8
  %161 = bitcast %"struct.std::__1::__hash_node_base"* %129 to i8**
  br label %162

162:                                              ; preds = %152, %157
  %163 = phi i8** [ %161, %157 ], [ %156, %152 ]
  store i8* %84, i8** %163, align 8
  br label %164

164:                                              ; preds = %162, %131
  %165 = bitcast i8* %84 to %"struct.std::__1::__hash_node_base"*
  %166 = load i64, i64* %90, align 8
  %167 = add i64 %166, 1
  store i64 %167, i64* %90, align 8
  br label %168

168:                                              ; preds = %77, %59, %164
  %169 = phi i8 [ 1, %164 ], [ 0, %59 ], [ 0, %77 ]
  %170 = phi %"struct.std::__1::__hash_node_base"* [ %165, %164 ], [ %45, %59 ], [ %67, %77 ]
  %171 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %170, 0
  %172 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %171, i8 %169, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %172
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvmEENS_22__unordered_map_hasherIS2_S3_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S3_S8_S6_Lb1EEENS_9allocatorIS3_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvmEENS_22__unordered_map_hasherIS2_S3_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S3_S8_S6_Lb1EEENS_9allocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvmEENS_22__unordered_map_hasherIS2_S3_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S3_S8_S6_Lb1EEENS_9allocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvmEENS_22__unordered_map_hasherIS2_S3_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S3_S8_S6_Lb1EEENS_9allocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #20
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #21
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #21
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !49

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base"* %103 to i8**
  %105 = load i8*, i8** %130, align 8
  %106 = load i8*, i8** %104, align 8
  %107 = icmp eq i8* %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base"* %129 to i8**
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base"* %146 to i8**
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base"* %134, %"struct.std::__1::__hash_node_base"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base"* %155 to i8**
  %157 = load i8*, i8** %147, align 8
  %158 = load i8*, i8** %156, align 8
  %159 = icmp eq i8* %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %132, %"struct.std::__1::__hash_node_base"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %180, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #21
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

declare i64 @_ZN2v84base9TimeTicks3NowEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1302"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImPvEENS_22__unordered_map_hasherImS3_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE25__emplace_unique_key_argsImJRKmRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_S2_EEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1298"*, i64* dereferenceable(8), i64* dereferenceable(8), i8** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %5 = load i64, i64* %1, align 8
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.1298", %"class.std::__1::__hash_table.1298"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %68, label %9

9:                                                ; preds = %4
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #13, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, -1
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ult i64 %5, %7
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.1298", %"class.std::__1::__hash_table.1298"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %24, null
  br i1 %25, label %68, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br i1 %11, label %28, label %50

28:                                               ; preds = %26, %45
  %29 = phi %"struct.std::__1::__hash_node_base.1302"* [ %31, %45 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %31, null
  br i1 %32, label %68, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.1302"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %45, label %38

38:                                               ; preds = %33
  %39 = icmp ult i64 %36, %7
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = urem i64 %36, %7
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi i64 [ %41, %40 ], [ %36, %38 ]
  %44 = icmp eq i64 %43, %20
  br i1 %44, label %45, label %68

45:                                               ; preds = %42, %33
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %31, i64 2
  %47 = bitcast %"struct.std::__1::__hash_node_base.1302"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, %5
  br i1 %49, label %159, label %28

50:                                               ; preds = %26, %63
  %51 = phi %"struct.std::__1::__hash_node_base.1302"* [ %53, %63 ], [ %24, %26 ]
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %51, i64 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %52, align 8
  %54 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %53, i64 1
  %57 = bitcast %"struct.std::__1::__hash_node_base.1302"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, %5
  %60 = and i64 %58, %27
  %61 = icmp eq i64 %60, %20
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %68

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %53, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base.1302"* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = icmp eq i64 %66, %5
  br i1 %67, label %159, label %50

68:                                               ; preds = %55, %50, %42, %28, %19, %4
  %69 = phi i64 [ %20, %19 ], [ undef, %4 ], [ %20, %28 ], [ %20, %42 ], [ %20, %50 ], [ %20, %55 ]
  %70 = tail call i8* @_Znwm(i64 32) #21, !noalias !50
  %71 = getelementptr inbounds i8, i8* %70, i64 16
  %72 = bitcast i8* %71 to i64*
  %73 = load i64, i64* %2, align 8, !noalias !50
  store i64 %73, i64* %72, align 8, !noalias !50
  %74 = getelementptr inbounds i8, i8* %70, i64 24
  %75 = bitcast i8** %3 to i64*
  %76 = load i64, i64* %75, align 8, !noalias !50
  %77 = bitcast i8* %74 to i64*
  store i64 %76, i64* %77, align 8, !noalias !50
  %78 = getelementptr inbounds i8, i8* %70, i64 8
  %79 = bitcast i8* %78 to i64*
  store i64 %5, i64* %79, align 8, !noalias !50
  %80 = bitcast i8* %70 to %"struct.std::__1::__hash_node_base.1302"**
  store %"struct.std::__1::__hash_node_base.1302"* null, %"struct.std::__1::__hash_node_base.1302"** %80, align 8, !noalias !50
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.1298", %"class.std::__1::__hash_table.1298"* %0, i64 0, i32 2, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 1
  %84 = uitofp i64 %83 to float
  %85 = uitofp i64 %7 to float
  %86 = getelementptr inbounds %"class.std::__1::__hash_table.1298", %"class.std::__1::__hash_table.1298"* %0, i64 0, i32 3, i32 0, i32 0
  %87 = load float, float* %86, align 4
  %88 = fmul float %87, %85
  %89 = fcmp olt float %88, %84
  %90 = or i1 %8, %89
  br i1 %90, label %91, label %114

91:                                               ; preds = %68
  %92 = shl i64 %7, 1
  %93 = icmp ult i64 %7, 3
  %94 = tail call i64 @llvm.ctpop.i64(i64 %7) #13, !range !3
  %95 = icmp ugt i64 %94, 1
  %96 = or i1 %93, %95
  %97 = zext i1 %96 to i64
  %98 = or i64 %92, %97
  %99 = fdiv float %84, %87
  %100 = tail call float @llvm.ceil.f32(float %99) #13
  %101 = fptoui float %100 to i64
  %102 = icmp ult i64 %98, %101
  %103 = select i1 %102, i64 %101, i64 %98
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImPvEENS_22__unordered_map_hasherImS3_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE6rehashEm(%"class.std::__1::__hash_table.1298"* %0, i64 %103)
  %104 = load i64, i64* %6, align 8
  %105 = tail call i64 @llvm.ctpop.i64(i64 %104) #13, !range !3
  %106 = icmp ugt i64 %105, 1
  br i1 %106, label %110, label %107

107:                                              ; preds = %91
  %108 = add i64 %104, -1
  %109 = and i64 %108, %5
  br label %114

110:                                              ; preds = %91
  %111 = icmp ult i64 %5, %104
  br i1 %111, label %114, label %112

112:                                              ; preds = %110
  %113 = urem i64 %5, %104
  br label %114

114:                                              ; preds = %112, %110, %107, %68
  %115 = phi i64 [ %7, %68 ], [ %104, %107 ], [ %104, %110 ], [ %104, %112 ]
  %116 = phi i64 [ %69, %68 ], [ %109, %107 ], [ %5, %110 ], [ %113, %112 ]
  %117 = getelementptr inbounds %"class.std::__1::__hash_table.1298", %"class.std::__1::__hash_table.1298"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %117, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %118, i64 %116
  %120 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %119, align 8
  %121 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %120, null
  br i1 %121, label %122, label %148

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.std::__1::__hash_table.1298", %"class.std::__1::__hash_table.1298"* %0, i64 0, i32 1, i32 0, i32 0
  %124 = bitcast %"struct.std::__1::__hash_node_base.1302"* %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast i8* %70 to i64*
  store i64 %125, i64* %126, align 8
  %127 = bitcast %"struct.std::__1::__hash_node_base.1302"* %123 to i8**
  store i8* %70, i8** %127, align 8
  store %"struct.std::__1::__hash_node_base.1302"* %123, %"struct.std::__1::__hash_node_base.1302"** %119, align 8
  %128 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %80, align 8
  %129 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %128, null
  br i1 %129, label %155, label %130

130:                                              ; preds = %122
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %128, i64 1
  %132 = bitcast %"struct.std::__1::__hash_node_base.1302"* %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = tail call i64 @llvm.ctpop.i64(i64 %115) #13, !range !3
  %135 = icmp ugt i64 %134, 1
  br i1 %135, label %139, label %136

136:                                              ; preds = %130
  %137 = add i64 %115, -1
  %138 = and i64 %133, %137
  br label %143

139:                                              ; preds = %130
  %140 = icmp ult i64 %133, %115
  br i1 %140, label %143, label %141

141:                                              ; preds = %139
  %142 = urem i64 %133, %115
  br label %143

143:                                              ; preds = %136, %139, %141
  %144 = phi i64 [ %138, %136 ], [ %142, %141 ], [ %133, %139 ]
  %145 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %117, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %145, i64 %144
  %147 = bitcast %"struct.std::__1::__hash_node_base.1302"** %146 to i8**
  br label %153

148:                                              ; preds = %114
  %149 = bitcast %"struct.std::__1::__hash_node_base.1302"* %120 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast i8* %70 to i64*
  store i64 %150, i64* %151, align 8
  %152 = bitcast %"struct.std::__1::__hash_node_base.1302"* %120 to i8**
  br label %153

153:                                              ; preds = %143, %148
  %154 = phi i8** [ %152, %148 ], [ %147, %143 ]
  store i8* %70, i8** %154, align 8
  br label %155

155:                                              ; preds = %153, %122
  %156 = bitcast i8* %70 to %"struct.std::__1::__hash_node_base.1302"*
  %157 = load i64, i64* %81, align 8
  %158 = add i64 %157, 1
  store i64 %158, i64* %81, align 8
  br label %159

159:                                              ; preds = %63, %45, %155
  %160 = phi i8 [ 1, %155 ], [ 0, %45 ], [ 0, %63 ]
  %161 = phi %"struct.std::__1::__hash_node_base.1302"* [ %156, %155 ], [ %31, %45 ], [ %53, %63 ]
  %162 = insertvalue { %"struct.std::__1::__hash_node_base.1302"*, i8 } undef, %"struct.std::__1::__hash_node_base.1302"* %161, 0
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.1302"*, i8 } %162, i8 %160, 1
  ret { %"struct.std::__1::__hash_node_base.1302"*, i8 } %163
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImPvEENS_22__unordered_map_hasherImS3_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE6rehashEm(%"class.std::__1::__hash_table.1298"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1298", %"class.std::__1::__hash_table.1298"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImPvEENS_22__unordered_map_hasherImS3_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table.1298"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1298", %"class.std::__1::__hash_table.1298"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1298", %"class.std::__1::__hash_table.1298"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImPvEENS_22__unordered_map_hasherImS3_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table.1298"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImPvEENS_22__unordered_map_hasherImS3_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table.1298"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1298", %"class.std::__1::__hash_table.1298"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #20
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #21
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1298", %"class.std::__1::__hash_table.1298"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1298"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1302"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1302"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #21
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1304", %"class.std::__1::__bucket_list_deallocator.1304"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1302"* null, %"struct.std::__1::__hash_node_base.1302"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !53

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1298", %"class.std::__1::__hash_table.1298"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1302"* null, %"struct.std::__1::__hash_node_base.1302"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1302"* null, %"struct.std::__1::__hash_node_base.1302"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1302"* null, %"struct.std::__1::__hash_node_base.1302"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1302"* null, %"struct.std::__1::__hash_node_base.1302"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1302"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1302"* %36, %"struct.std::__1::__hash_node_base.1302"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base.1302"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1302"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1302"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base.1302"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base.1302"* %103 to i64*
  %105 = load i64, i64* %130, align 8
  %106 = load i64, i64* %104, align 8
  %107 = icmp eq i64 %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base.1302"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base.1302"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base.1302"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base.1302"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1302"* %80, %"struct.std::__1::__hash_node_base.1302"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.1302"* %82, %"struct.std::__1::__hash_node_base.1302"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base.1302"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base.1302"* %129 to i64*
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base.1302"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base.1302"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base.1302"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base.1302"* %146 to i64*
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base.1302"* %134, %"struct.std::__1::__hash_node_base.1302"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base.1302"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base.1302"* %155 to i64*
  %157 = load i64, i64* %147, align 8
  %158 = load i64, i64* %156, align 8
  %159 = icmp eq i64 %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base.1302"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base.1302"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base.1302"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base.1302"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1302"* %132, %"struct.std::__1::__hash_node_base.1302"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base.1302"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table.1298", %"class.std::__1::__hash_table.1298"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %180, align 8
  store %"struct.std::__1::__hash_node_base.1302"** null, %"struct.std::__1::__hash_node_base.1302"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base.1302"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base.1302"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #21
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1304", %"class.std::__1::__bucket_list_deallocator.1304"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvmEENS_22__unordered_map_hasherIS2_S3_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S3_S8_S6_Lb1EEENS_9allocatorIS3_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_S2_EEEE(%"class.std::__1::unique_ptr.1663"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #13, !range !3
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.19"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.1663"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1663", %"class.std::__1::unique_ptr.1663"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.22"** %98 to %"class.std::__1::__compressed_pair.19"**
  store %"class.std::__1::__compressed_pair.19"* %30, %"class.std::__1::__compressed_pair.19"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.1663", %"class.std::__1::unique_ptr.1663"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm(%"class.std::__1::vector.1411"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.1411", align 16
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.1411", %"class.std::__1::vector.1411"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = shl i64 %7, 6
  %9 = icmp ult i64 %8, %1
  br i1 %9, label %10, label %49

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::vector.1411"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 0, i64 24, i1 false) #13
  %12 = icmp slt i64 %1, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %10
  %14 = bitcast %"class.std::__1::vector.1411"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %14) #20
  unreachable

15:                                               ; preds = %10
  %16 = add nsw i64 %1, -1
  %17 = lshr i64 %16, 6
  %18 = add nuw nsw i64 %17, 1
  %19 = shl nuw nsw i64 %18, 3
  %20 = tail call i8* @_Znwm(i64 %19) #21
  %21 = bitcast %"class.std::__1::vector.1411"* %3 to i8**
  store i8* %20, i8** %21, align 16
  %22 = getelementptr inbounds %"class.std::__1::vector.1411", %"class.std::__1::vector.1411"* %3, i64 0, i32 1
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::vector.1411", %"class.std::__1::vector.1411"* %3, i64 0, i32 2, i32 0, i32 0
  store i64 %18, i64* %23, align 16
  %24 = bitcast %"class.std::__1::vector.1411"* %0 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !54
  %26 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  store i64 %25, i64* %26, align 8, !alias.scope !54
  %27 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  store i32 0, i32* %27, align 8, !alias.scope !54
  %28 = getelementptr inbounds %"class.std::__1::vector.1411", %"class.std::__1::vector.1411"* %0, i64 0, i32 1
  %29 = load i64, i64* %28, align 8, !noalias !59
  %30 = inttoptr i64 %25 to i64*
  %31 = lshr i64 %29, 6
  %32 = getelementptr inbounds i64, i64* %30, i64 %31
  %33 = trunc i64 %29 to i32
  %34 = and i32 %33, 63
  %35 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 0
  store i64* %32, i64** %35, align 8, !alias.scope !62
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  store i32 %34, i32* %36, align 8, !alias.scope !62
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_(%"class.std::__1::vector.1411"* nonnull %3, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5)
  %37 = load i64, i64* %24, align 8
  %38 = bitcast %"class.std::__1::vector.1411"* %3 to i64*
  %39 = bitcast %"class.std::__1::vector.1411"* %3 to <2 x i64>*
  %40 = load <2 x i64>, <2 x i64>* %39, align 16
  store i64 %37, i64* %38, align 16
  %41 = load i64, i64* %28, align 8
  %42 = bitcast %"class.std::__1::vector.1411"* %0 to <2 x i64>*
  store <2 x i64> %40, <2 x i64>* %42, align 8
  store i64 %41, i64* %22, align 8
  %43 = load i64, i64* %6, align 8
  %44 = load i64, i64* %23, align 16
  store i64 %44, i64* %6, align 8
  store i64 %43, i64* %23, align 16
  %45 = icmp eq i64 %37, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %15
  %47 = inttoptr i64 %37 to i8*
  call void @_ZdlPv(i8* %47) #21
  br label %48

48:                                               ; preds = %15, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #13
  br label %49

49:                                               ; preds = %48, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_(%"class.std::__1::vector.1411"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = alloca %"class.std::__1::__bit_iterator", align 8
  %7 = alloca %"class.std::__1::__bit_iterator", align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.1411", %"class.std::__1::vector.1411"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = sub i64 %15, %11
  %19 = shl i64 %18, 3
  %20 = zext i32 %17 to i64
  %21 = zext i32 %13 to i64
  %22 = sub i64 %9, %21
  %23 = add i64 %22, %20
  %24 = add i64 %23, %19
  store i64 %24, i64* %8, align 8
  %25 = icmp eq i64 %9, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %3
  %27 = add i64 %9, -1
  %28 = add i64 %24, -1
  %29 = xor i64 %28, %27
  %30 = icmp ugt i64 %29, 63
  br i1 %30, label %31, label %39

31:                                               ; preds = %26, %3
  %32 = icmp ult i64 %24, 65
  %33 = getelementptr inbounds %"class.std::__1::vector.1411", %"class.std::__1::vector.1411"* %0, i64 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = add i64 %24, -1
  %36 = lshr i64 %35, 6
  %37 = getelementptr inbounds i64, i64* %34, i64 %36
  %38 = select i1 %32, i64* %34, i64* %37
  store i64 0, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %26
  %40 = load i64, i64* %10, align 8
  %41 = load i32, i32* %12, align 8
  %42 = load i64, i64* %14, align 8
  %43 = load i32, i32* %16, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.1411", %"class.std::__1::vector.1411"* %0, i64 0, i32 0
  %45 = load i64*, i64** %44, align 8, !noalias !65
  %46 = lshr i64 %9, 6
  %47 = getelementptr inbounds i64, i64* %45, i64 %46
  %48 = trunc i64 %9 to i32
  %49 = and i32 %48, 63
  %50 = ptrtoint i64* %47 to i64
  %51 = bitcast %"class.std::__1::__bit_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #13
  %52 = bitcast %"class.std::__1::__bit_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52)
  %53 = bitcast %"class.std::__1::__bit_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53)
  %54 = bitcast %"class.std::__1::__bit_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54)
  %55 = icmp eq i32 %41, %49
  br i1 %55, label %56, label %123

56:                                               ; preds = %39
  %57 = sub i64 %42, %40
  %58 = shl i64 %57, 3
  %59 = zext i32 %43 to i64
  %60 = zext i32 %41 to i64
  %61 = sub nsw i64 %59, %60
  %62 = add i64 %61, %58
  %63 = icmp sgt i64 %62, 0
  %64 = inttoptr i64 %40 to i64*
  br i1 %63, label %65, label %118

65:                                               ; preds = %56
  %66 = inttoptr i64 %40 to i8*
  %67 = icmp eq i32 %41, 0
  br i1 %67, label %92, label %68

68:                                               ; preds = %65
  %69 = sub i32 64, %41
  %70 = zext i32 %69 to i64
  %71 = icmp slt i64 %62, %70
  %72 = select i1 %71, i64 %62, i64 %70
  %73 = sub nsw i64 %62, %72
  %74 = shl i64 -1, %60
  %75 = sub nsw i64 %70, %72
  %76 = lshr i64 -1, %75
  %77 = and i64 %76, %74
  %78 = load i64, i64* %64, align 8, !noalias !68
  %79 = and i64 %78, %77
  %80 = xor i64 %77, -1
  %81 = load i64, i64* %47, align 8, !noalias !68
  %82 = and i64 %81, %80
  %83 = or i64 %82, %79
  store i64 %83, i64* %47, align 8, !noalias !68
  %84 = add nuw nsw i64 %72, %60
  %85 = sdiv i64 %84, 64
  %86 = getelementptr inbounds i64, i64* %47, i64 %85
  %87 = ptrtoint i64* %86 to i64
  %88 = srem i64 %84, 64
  %89 = trunc i64 %88 to i32
  %90 = getelementptr inbounds i64, i64* %64, i64 1
  %91 = bitcast i64* %90 to i8*
  br label %92

92:                                               ; preds = %68, %65
  %93 = phi i64* [ %64, %65 ], [ %90, %68 ]
  %94 = phi i32 [ 0, %65 ], [ %89, %68 ]
  %95 = phi i64 [ %50, %65 ], [ %87, %68 ]
  %96 = phi i8* [ %66, %65 ], [ %91, %68 ]
  %97 = phi i64 [ %62, %65 ], [ %73, %68 ]
  %98 = sdiv i64 %97, 64
  %99 = inttoptr i64 %95 to i8*
  %100 = shl nsw i64 %98, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %96, i64 %100, i1 false) #13, !noalias !68
  %101 = shl nsw i64 %98, 6
  %102 = sub i64 %97, %101
  %103 = inttoptr i64 %95 to i64*
  %104 = getelementptr inbounds i64, i64* %103, i64 %98
  %105 = ptrtoint i64* %104 to i64
  %106 = icmp sgt i64 %102, 0
  br i1 %106, label %107, label %118

107:                                              ; preds = %92
  %108 = getelementptr inbounds i64, i64* %93, i64 %98
  %109 = sub nsw i64 64, %102
  %110 = lshr i64 -1, %109
  %111 = load i64, i64* %108, align 8, !noalias !68
  %112 = and i64 %111, %110
  %113 = xor i64 %110, -1
  %114 = load i64, i64* %104, align 8, !noalias !68
  %115 = and i64 %114, %113
  %116 = or i64 %115, %112
  store i64 %116, i64* %104, align 8, !noalias !68
  %117 = trunc i64 %102 to i32
  br label %118

118:                                              ; preds = %107, %92, %56
  %119 = phi i32 [ %117, %107 ], [ %94, %92 ], [ %41, %56 ]
  %120 = phi i64 [ %105, %107 ], [ %105, %92 ], [ %50, %56 ]
  %121 = bitcast %"class.std::__1::__bit_iterator"* %7 to i64*
  store i64 %120, i64* %121, align 8, !alias.scope !71
  %122 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %7, i64 0, i32 1
  store i32 %119, i32* %122, align 8, !alias.scope !71
  br label %130

123:                                              ; preds = %39
  %124 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  store i64 %40, i64* %124, align 8, !noalias !74
  %125 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  store i32 %41, i32* %125, align 8, !noalias !74
  %126 = bitcast %"class.std::__1::__bit_iterator"* %5 to i64*
  store i64 %42, i64* %126, align 8, !noalias !74
  %127 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  store i32 %43, i32* %127, align 8, !noalias !74
  %128 = bitcast %"class.std::__1::__bit_iterator"* %6 to i64*
  store i64 %50, i64* %128, align 8, !noalias !74
  %129 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %6, i64 0, i32 1
  store i32 %49, i32* %129, align 8, !noalias !74
  call void @_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_(%"class.std::__1::__bit_iterator"* nonnull sret %7, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5, %"class.std::__1::__bit_iterator"* nonnull %6) #13
  br label %130

130:                                              ; preds = %118, %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_(%"class.std::__1::__bit_iterator"* noalias sret, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #2 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1394"*, i8 } @_ZNSt3__112__hash_tableIN2v88internal14JSGlobalObjectENS2_6Object6HasherENS_8equal_toIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1390"*, %"class.v8::internal::JSGlobalObject"* dereferenceable(8), %"class.v8::internal::JSGlobalObject"* dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::JSGlobalObject", %"class.v8::internal::JSGlobalObject"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967295
  %7 = getelementptr inbounds %"class.std::__1::__hash_table.1390", %"class.std::__1::__hash_table.1390"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %72, label %10

10:                                               ; preds = %3
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #13, !range !3
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, 4294967295
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ult i64 %6, %8
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %13, %16, %18
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1390", %"class.std::__1::__hash_table.1390"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.1394"**, %"struct.std::__1::__hash_node_base.1394"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.1394"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %20
  %28 = add i64 %8, -1
  %29 = trunc i64 %5 to i32
  br i1 %12, label %30, label %53

30:                                               ; preds = %27, %47
  %31 = phi %"struct.std::__1::__hash_node_base.1394"* [ %33, %47 ], [ %25, %27 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394", %"struct.std::__1::__hash_node_base.1394"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.1394"* %33, null
  br i1 %34, label %72, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394", %"struct.std::__1::__hash_node_base.1394"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.1394"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %6
  br i1 %39, label %47, label %40

40:                                               ; preds = %35
  %41 = icmp ult i64 %38, %8
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %38, %8
  br label %44

44:                                               ; preds = %42, %40
  %45 = phi i64 [ %43, %42 ], [ %38, %40 ]
  %46 = icmp eq i64 %45, %21
  br i1 %46, label %47, label %72

47:                                               ; preds = %44, %35
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394", %"struct.std::__1::__hash_node_base.1394"* %33, i64 2
  %49 = bitcast %"struct.std::__1::__hash_node_base.1394"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = trunc i64 %50 to i32
  %52 = icmp eq i32 %51, %29
  br i1 %52, label %160, label %30

53:                                               ; preds = %27, %66
  %54 = phi %"struct.std::__1::__hash_node_base.1394"* [ %56, %66 ], [ %25, %27 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394", %"struct.std::__1::__hash_node_base.1394"* %54, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.1394"* %56, null
  br i1 %57, label %72, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394", %"struct.std::__1::__hash_node_base.1394"* %56, i64 1
  %60 = bitcast %"struct.std::__1::__hash_node_base.1394"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %61, %6
  %63 = and i64 %61, %28
  %64 = icmp eq i64 %63, %21
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %72

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394", %"struct.std::__1::__hash_node_base.1394"* %56, i64 2
  %68 = bitcast %"struct.std::__1::__hash_node_base.1394"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = trunc i64 %69 to i32
  %71 = icmp eq i32 %70, %29
  br i1 %71, label %160, label %53

72:                                               ; preds = %58, %53, %44, %30, %20, %3
  %73 = phi i64 [ %21, %20 ], [ undef, %3 ], [ %21, %30 ], [ %21, %44 ], [ %21, %53 ], [ %21, %58 ]
  %74 = tail call i8* @_Znwm(i64 24) #21, !noalias !75
  %75 = getelementptr inbounds %"class.v8::internal::JSGlobalObject", %"class.v8::internal::JSGlobalObject"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds i8, i8* %74, i64 16
  %77 = bitcast i8* %76 to i64*
  %78 = load i64, i64* %75, align 8, !noalias !75
  store i64 %78, i64* %77, align 8, !noalias !75
  %79 = getelementptr inbounds i8, i8* %74, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %6, i64* %80, align 8, !noalias !75
  %81 = bitcast i8* %74 to %"struct.std::__1::__hash_node_base.1394"**
  store %"struct.std::__1::__hash_node_base.1394"* null, %"struct.std::__1::__hash_node_base.1394"** %81, align 8, !noalias !75
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.1390", %"class.std::__1::__hash_table.1390"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %8 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.1390", %"class.std::__1::__hash_table.1390"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %9, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %72
  %93 = shl i64 %8, 1
  %94 = icmp ult i64 %8, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %8) #13, !range !3
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #13
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableIN2v88internal14JSGlobalObjectENS2_6Object6HasherENS_8equal_toIS3_EENS_9allocatorIS3_EEE6rehashEm(%"class.std::__1::__hash_table.1390"* %0, i64 %104)
  %105 = load i64, i64* %7, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #13, !range !3
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, 4294967295
  %110 = and i64 %109, %6
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %6, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %6, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %72
  %116 = phi i64 [ %8, %72 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %73, %72 ], [ %110, %108 ], [ %6, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.1390", %"class.std::__1::__hash_table.1390"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.1394"**, %"struct.std::__1::__hash_node_base.1394"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.1394"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.1390", %"class.std::__1::__hash_table.1390"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.1394"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %74 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.1394"* %124 to i8**
  store i8* %74, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.1394"* %124, %"struct.std::__1::__hash_node_base.1394"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.1394"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394", %"struct.std::__1::__hash_node_base.1394"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.1394"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #13, !range !3
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.1394"**, %"struct.std::__1::__hash_node_base.1394"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.1394"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.1394"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %74 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.1394"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %74, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %74 to %"struct.std::__1::__hash_node_base.1394"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %66, %47, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %47 ], [ 0, %66 ]
  %162 = phi %"struct.std::__1::__hash_node_base.1394"* [ %157, %156 ], [ %33, %47 ], [ %56, %66 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.1394"*, i8 } undef, %"struct.std::__1::__hash_node_base.1394"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.1394"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.1394"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN2v88internal14JSGlobalObjectENS2_6Object6HasherENS_8equal_toIS3_EENS_9allocatorIS3_EEE6rehashEm(%"class.std::__1::__hash_table.1390"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1390", %"class.std::__1::__hash_table.1390"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIN2v88internal14JSGlobalObjectENS2_6Object6HasherENS_8equal_toIS3_EENS_9allocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table.1390"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1390", %"class.std::__1::__hash_table.1390"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1390", %"class.std::__1::__hash_table.1390"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIN2v88internal14JSGlobalObjectENS2_6Object6HasherENS_8equal_toIS3_EENS_9allocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table.1390"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN2v88internal14JSGlobalObjectENS2_6Object6HasherENS_8equal_toIS3_EENS_9allocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table.1390"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1390", %"class.std::__1::__hash_table.1390"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %183, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #20
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #21
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1390", %"class.std::__1::__hash_table.1390"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1394"**, %"struct.std::__1::__hash_node_base.1394"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1390"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1394"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1394"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #21
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1396", %"class.std::__1::__bucket_list_deallocator.1396"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1394"**, %"struct.std::__1::__hash_node_base.1394"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1394"* null, %"struct.std::__1::__hash_node_base.1394"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !78

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1390", %"class.std::__1::__hash_table.1390"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394", %"struct.std::__1::__hash_node_base.1394"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1394"* %38, null
  br i1 %39, label %191, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1394"**, %"struct.std::__1::__hash_node_base.1394"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1394"* null, %"struct.std::__1::__hash_node_base.1394"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1394"**, %"struct.std::__1::__hash_node_base.1394"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1394"* null, %"struct.std::__1::__hash_node_base.1394"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1394"**, %"struct.std::__1::__hash_node_base.1394"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1394"* null, %"struct.std::__1::__hash_node_base.1394"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1394"**, %"struct.std::__1::__hash_node_base.1394"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1394"* null, %"struct.std::__1::__hash_node_base.1394"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394", %"struct.std::__1::__hash_node_base.1394"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1394"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1394"**, %"struct.std::__1::__hash_node_base.1394"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1394"* %36, %"struct.std::__1::__hash_node_base.1394"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394", %"struct.std::__1::__hash_node_base.1394"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1394"* %75, null
  br i1 %76, label %191, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %133

79:                                               ; preds = %77, %124
  %80 = phi %"struct.std::__1::__hash_node_base.1394"* [ %128, %124 ], [ %75, %77 ]
  %81 = phi i64 [ %126, %124 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1394"* [ %125, %124 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394", %"struct.std::__1::__hash_node_base.1394"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1394"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %124, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.1394"**, %"struct.std::__1::__hash_node_base.1394"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.1394"* %95, null
  br i1 %96, label %123, label %130

97:                                               ; preds = %130, %102
  %98 = phi %"struct.std::__1::__hash_node_base.1394"* [ %100, %102 ], [ %80, %130 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394", %"struct.std::__1::__hash_node_base.1394"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.1394"* %100, null
  br i1 %101, label %110, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394", %"struct.std::__1::__hash_node_base.1394"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base.1394"* %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = load i64, i64* %132, align 8
  %107 = trunc i64 %106 to i32
  %108 = trunc i64 %105 to i32
  %109 = icmp eq i32 %107, %108
  br i1 %109, label %97, label %110

110:                                              ; preds = %102, %97
  %111 = ptrtoint %"struct.std::__1::__hash_node_base.1394"* %100 to i64
  %112 = bitcast %"struct.std::__1::__hash_node_base.1394"* %98 to i64*
  %113 = bitcast %"struct.std::__1::__hash_node_base.1394"* %82 to i64*
  store i64 %111, i64* %113, align 8
  %114 = load %"struct.std::__1::__hash_node_base.1394"**, %"struct.std::__1::__hash_node_base.1394"*** %11, align 8
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %114, i64 %90
  %116 = bitcast %"struct.std::__1::__hash_node_base.1394"** %115 to i64**
  %117 = load i64*, i64** %116, align 8
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %112, align 8
  %119 = load %"struct.std::__1::__hash_node_base.1394"**, %"struct.std::__1::__hash_node_base.1394"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %119, i64 %90
  %121 = load %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %120, align 8
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394", %"struct.std::__1::__hash_node_base.1394"* %121, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1394"* %80, %"struct.std::__1::__hash_node_base.1394"** %122, align 8
  br label %124

123:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.1394"* %82, %"struct.std::__1::__hash_node_base.1394"** %94, align 8
  br label %124

124:                                              ; preds = %123, %110, %89
  %125 = phi %"struct.std::__1::__hash_node_base.1394"* [ %80, %123 ], [ %82, %110 ], [ %80, %89 ]
  %126 = phi i64 [ %90, %123 ], [ %81, %110 ], [ %81, %89 ]
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394", %"struct.std::__1::__hash_node_base.1394"* %125, i64 0, i32 0
  %128 = load %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %127, align 8
  %129 = icmp eq %"struct.std::__1::__hash_node_base.1394"* %128, null
  br i1 %129, label %191, label %79

130:                                              ; preds = %92
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394", %"struct.std::__1::__hash_node_base.1394"* %80, i64 2
  %132 = bitcast %"struct.std::__1::__hash_node_base.1394"* %131 to i64*
  br label %97

133:                                              ; preds = %77, %177
  %134 = phi %"struct.std::__1::__hash_node_base.1394"* [ %181, %177 ], [ %75, %77 ]
  %135 = phi i64 [ %179, %177 ], [ %71, %77 ]
  %136 = phi %"struct.std::__1::__hash_node_base.1394"* [ %178, %177 ], [ %38, %77 ]
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394", %"struct.std::__1::__hash_node_base.1394"* %134, i64 1
  %138 = bitcast %"struct.std::__1::__hash_node_base.1394"* %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = and i64 %139, %78
  %141 = icmp eq i64 %140, %135
  br i1 %141, label %177, label %142

142:                                              ; preds = %133
  %143 = load %"struct.std::__1::__hash_node_base.1394"**, %"struct.std::__1::__hash_node_base.1394"*** %11, align 8
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %143, i64 %140
  %145 = load %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %144, align 8
  %146 = icmp eq %"struct.std::__1::__hash_node_base.1394"* %145, null
  br i1 %146, label %150, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394", %"struct.std::__1::__hash_node_base.1394"* %134, i64 2
  %149 = bitcast %"struct.std::__1::__hash_node_base.1394"* %148 to i64*
  br label %151

150:                                              ; preds = %142
  store %"struct.std::__1::__hash_node_base.1394"* %136, %"struct.std::__1::__hash_node_base.1394"** %144, align 8
  br label %177

151:                                              ; preds = %147, %156
  %152 = phi %"struct.std::__1::__hash_node_base.1394"* [ %154, %156 ], [ %134, %147 ]
  %153 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394", %"struct.std::__1::__hash_node_base.1394"* %152, i64 0, i32 0
  %154 = load %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %153, align 8
  %155 = icmp eq %"struct.std::__1::__hash_node_base.1394"* %154, null
  br i1 %155, label %164, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394", %"struct.std::__1::__hash_node_base.1394"* %154, i64 2
  %158 = bitcast %"struct.std::__1::__hash_node_base.1394"* %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = load i64, i64* %149, align 8
  %161 = trunc i64 %160 to i32
  %162 = trunc i64 %159 to i32
  %163 = icmp eq i32 %161, %162
  br i1 %163, label %151, label %164

164:                                              ; preds = %151, %156
  %165 = ptrtoint %"struct.std::__1::__hash_node_base.1394"* %154 to i64
  %166 = bitcast %"struct.std::__1::__hash_node_base.1394"* %152 to i64*
  %167 = bitcast %"struct.std::__1::__hash_node_base.1394"* %136 to i64*
  store i64 %165, i64* %167, align 8
  %168 = load %"struct.std::__1::__hash_node_base.1394"**, %"struct.std::__1::__hash_node_base.1394"*** %11, align 8
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %168, i64 %140
  %170 = bitcast %"struct.std::__1::__hash_node_base.1394"** %169 to i64**
  %171 = load i64*, i64** %170, align 8
  %172 = load i64, i64* %171, align 8
  store i64 %172, i64* %166, align 8
  %173 = load %"struct.std::__1::__hash_node_base.1394"**, %"struct.std::__1::__hash_node_base.1394"*** %11, align 8
  %174 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %173, i64 %140
  %175 = load %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %174, align 8
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394", %"struct.std::__1::__hash_node_base.1394"* %175, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1394"* %134, %"struct.std::__1::__hash_node_base.1394"** %176, align 8
  br label %177

177:                                              ; preds = %133, %164, %150
  %178 = phi %"struct.std::__1::__hash_node_base.1394"* [ %134, %150 ], [ %136, %164 ], [ %134, %133 ]
  %179 = phi i64 [ %140, %150 ], [ %135, %164 ], [ %135, %133 ]
  %180 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1394", %"struct.std::__1::__hash_node_base.1394"* %178, i64 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base.1394"*, %"struct.std::__1::__hash_node_base.1394"** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base.1394"* %181, null
  br i1 %182, label %191, label %133

183:                                              ; preds = %2
  %184 = getelementptr inbounds %"class.std::__1::__hash_table.1390", %"class.std::__1::__hash_table.1390"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %185 = load %"struct.std::__1::__hash_node_base.1394"**, %"struct.std::__1::__hash_node_base.1394"*** %184, align 8
  store %"struct.std::__1::__hash_node_base.1394"** null, %"struct.std::__1::__hash_node_base.1394"*** %184, align 8
  %186 = icmp eq %"struct.std::__1::__hash_node_base.1394"** %185, null
  br i1 %186, label %189, label %187

187:                                              ; preds = %183
  %188 = bitcast %"struct.std::__1::__hash_node_base.1394"** %185 to i8*
  tail call void @_ZdlPv(i8* %188) #21
  br label %189

189:                                              ; preds = %183, %187
  %190 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1396", %"class.std::__1::__bucket_list_deallocator.1396"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %190, align 8
  br label %191

191:                                              ; preds = %177, %124, %70, %35, %189
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1368"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6ObjectEPKcEENS_22__unordered_map_hasherIS4_S7_NS4_6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S7_SB_S9_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS4_JS4_RS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1364"*, %"class.v8::internal::Object"* dereferenceable(8), %"class.v8::internal::Object"* dereferenceable(8), i8** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %1, i64 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967295
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.1364", %"class.std::__1::__hash_table.1364"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %73, label %11

11:                                               ; preds = %4
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ult i64 %7, %9
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.1364", %"class.std::__1::__hash_table.1364"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.1368"**, %"struct.std::__1::__hash_node_base.1368"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.1368"* %26, null
  br i1 %27, label %73, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  %30 = trunc i64 %6 to i32
  br i1 %13, label %31, label %54

31:                                               ; preds = %28, %48
  %32 = phi %"struct.std::__1::__hash_node_base.1368"* [ %34, %48 ], [ %26, %28 ]
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %32, i64 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %33, align 8
  %35 = icmp eq %"struct.std::__1::__hash_node_base.1368"* %34, null
  br i1 %35, label %73, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %34, i64 1
  %38 = bitcast %"struct.std::__1::__hash_node_base.1368"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, %7
  br i1 %40, label %48, label %41

41:                                               ; preds = %36
  %42 = icmp ult i64 %39, %9
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %39, %9
  br label %45

45:                                               ; preds = %43, %41
  %46 = phi i64 [ %44, %43 ], [ %39, %41 ]
  %47 = icmp eq i64 %46, %22
  br i1 %47, label %48, label %73

48:                                               ; preds = %45, %36
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %34, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.1368"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = trunc i64 %51 to i32
  %53 = icmp eq i32 %52, %30
  br i1 %53, label %165, label %31

54:                                               ; preds = %28, %67
  %55 = phi %"struct.std::__1::__hash_node_base.1368"* [ %57, %67 ], [ %26, %28 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %55, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %56, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base.1368"* %57, null
  br i1 %58, label %73, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %57, i64 1
  %61 = bitcast %"struct.std::__1::__hash_node_base.1368"* %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %62, %7
  %64 = and i64 %62, %29
  %65 = icmp eq i64 %64, %22
  %66 = or i1 %63, %65
  br i1 %66, label %67, label %73

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %57, i64 2
  %69 = bitcast %"struct.std::__1::__hash_node_base.1368"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = trunc i64 %70 to i32
  %72 = icmp eq i32 %71, %30
  br i1 %72, label %165, label %54

73:                                               ; preds = %59, %54, %45, %31, %21, %4
  %74 = phi i64 [ %22, %21 ], [ undef, %4 ], [ %22, %31 ], [ %22, %45 ], [ %22, %54 ], [ %22, %59 ]
  %75 = tail call i8* @_Znwm(i64 32) #21, !noalias !79
  %76 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %2, i64 0, i32 0, i32 0
  %77 = getelementptr inbounds i8, i8* %75, i64 16
  %78 = bitcast i8* %77 to i64*
  %79 = load i64, i64* %76, align 8, !noalias !79
  store i64 %79, i64* %78, align 8, !noalias !79
  %80 = getelementptr inbounds i8, i8* %75, i64 24
  %81 = bitcast i8** %3 to i64*
  %82 = load i64, i64* %81, align 8, !noalias !79
  %83 = bitcast i8* %80 to i64*
  store i64 %82, i64* %83, align 8, !noalias !79
  %84 = getelementptr inbounds i8, i8* %75, i64 8
  %85 = bitcast i8* %84 to i64*
  store i64 %7, i64* %85, align 8, !noalias !79
  %86 = bitcast i8* %75 to %"struct.std::__1::__hash_node_base.1368"**
  store %"struct.std::__1::__hash_node_base.1368"* null, %"struct.std::__1::__hash_node_base.1368"** %86, align 8, !noalias !79
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.1364", %"class.std::__1::__hash_table.1364"* %0, i64 0, i32 2, i32 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, 1
  %90 = uitofp i64 %89 to float
  %91 = uitofp i64 %9 to float
  %92 = getelementptr inbounds %"class.std::__1::__hash_table.1364", %"class.std::__1::__hash_table.1364"* %0, i64 0, i32 3, i32 0, i32 0
  %93 = load float, float* %92, align 4
  %94 = fmul float %93, %91
  %95 = fcmp olt float %94, %90
  %96 = or i1 %10, %95
  br i1 %96, label %97, label %120

97:                                               ; preds = %73
  %98 = shl i64 %9, 1
  %99 = icmp ult i64 %9, 3
  %100 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !3
  %101 = icmp ugt i64 %100, 1
  %102 = or i1 %99, %101
  %103 = zext i1 %102 to i64
  %104 = or i64 %98, %103
  %105 = fdiv float %90, %93
  %106 = tail call float @llvm.ceil.f32(float %105) #13
  %107 = fptoui float %106 to i64
  %108 = icmp ult i64 %104, %107
  %109 = select i1 %108, i64 %107, i64 %104
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6ObjectEPKcEENS_22__unordered_map_hasherIS4_S7_NS4_6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S7_SB_S9_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.1364"* %0, i64 %109)
  %110 = load i64, i64* %8, align 8
  %111 = tail call i64 @llvm.ctpop.i64(i64 %110) #13, !range !3
  %112 = icmp ugt i64 %111, 1
  br i1 %112, label %116, label %113

113:                                              ; preds = %97
  %114 = add i64 %110, 4294967295
  %115 = and i64 %114, %7
  br label %120

116:                                              ; preds = %97
  %117 = icmp ult i64 %7, %110
  br i1 %117, label %120, label %118

118:                                              ; preds = %116
  %119 = urem i64 %7, %110
  br label %120

120:                                              ; preds = %118, %116, %113, %73
  %121 = phi i64 [ %9, %73 ], [ %110, %113 ], [ %110, %116 ], [ %110, %118 ]
  %122 = phi i64 [ %74, %73 ], [ %115, %113 ], [ %7, %116 ], [ %119, %118 ]
  %123 = getelementptr inbounds %"class.std::__1::__hash_table.1364", %"class.std::__1::__hash_table.1364"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %124 = load %"struct.std::__1::__hash_node_base.1368"**, %"struct.std::__1::__hash_node_base.1368"*** %123, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %124, i64 %122
  %126 = load %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base.1368"* %126, null
  br i1 %127, label %128, label %154

128:                                              ; preds = %120
  %129 = getelementptr inbounds %"class.std::__1::__hash_table.1364", %"class.std::__1::__hash_table.1364"* %0, i64 0, i32 1, i32 0, i32 0
  %130 = bitcast %"struct.std::__1::__hash_node_base.1368"* %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %75 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.1368"* %129 to i8**
  store i8* %75, i8** %133, align 8
  store %"struct.std::__1::__hash_node_base.1368"* %129, %"struct.std::__1::__hash_node_base.1368"** %125, align 8
  %134 = load %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %86, align 8
  %135 = icmp eq %"struct.std::__1::__hash_node_base.1368"* %134, null
  br i1 %135, label %161, label %136

136:                                              ; preds = %128
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %134, i64 1
  %138 = bitcast %"struct.std::__1::__hash_node_base.1368"* %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = tail call i64 @llvm.ctpop.i64(i64 %121) #13, !range !3
  %141 = icmp ugt i64 %140, 1
  br i1 %141, label %145, label %142

142:                                              ; preds = %136
  %143 = add i64 %121, -1
  %144 = and i64 %139, %143
  br label %149

145:                                              ; preds = %136
  %146 = icmp ult i64 %139, %121
  br i1 %146, label %149, label %147

147:                                              ; preds = %145
  %148 = urem i64 %139, %121
  br label %149

149:                                              ; preds = %142, %145, %147
  %150 = phi i64 [ %144, %142 ], [ %148, %147 ], [ %139, %145 ]
  %151 = load %"struct.std::__1::__hash_node_base.1368"**, %"struct.std::__1::__hash_node_base.1368"*** %123, align 8
  %152 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %151, i64 %150
  %153 = bitcast %"struct.std::__1::__hash_node_base.1368"** %152 to i8**
  br label %159

154:                                              ; preds = %120
  %155 = bitcast %"struct.std::__1::__hash_node_base.1368"* %126 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast i8* %75 to i64*
  store i64 %156, i64* %157, align 8
  %158 = bitcast %"struct.std::__1::__hash_node_base.1368"* %126 to i8**
  br label %159

159:                                              ; preds = %149, %154
  %160 = phi i8** [ %158, %154 ], [ %153, %149 ]
  store i8* %75, i8** %160, align 8
  br label %161

161:                                              ; preds = %159, %128
  %162 = bitcast i8* %75 to %"struct.std::__1::__hash_node_base.1368"*
  %163 = load i64, i64* %87, align 8
  %164 = add i64 %163, 1
  store i64 %164, i64* %87, align 8
  br label %165

165:                                              ; preds = %67, %48, %161
  %166 = phi i8 [ 1, %161 ], [ 0, %48 ], [ 0, %67 ]
  %167 = phi %"struct.std::__1::__hash_node_base.1368"* [ %162, %161 ], [ %34, %48 ], [ %57, %67 ]
  %168 = insertvalue { %"struct.std::__1::__hash_node_base.1368"*, i8 } undef, %"struct.std::__1::__hash_node_base.1368"* %167, 0
  %169 = insertvalue { %"struct.std::__1::__hash_node_base.1368"*, i8 } %168, i8 %166, 1
  ret { %"struct.std::__1::__hash_node_base.1368"*, i8 } %169
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6ObjectEPKcEENS_22__unordered_map_hasherIS4_S7_NS4_6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S7_SB_S9_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.1364"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1364", %"class.std::__1::__hash_table.1364"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6ObjectEPKcEENS_22__unordered_map_hasherIS4_S7_NS4_6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S7_SB_S9_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1364"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1364", %"class.std::__1::__hash_table.1364"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1364", %"class.std::__1::__hash_table.1364"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6ObjectEPKcEENS_22__unordered_map_hasherIS4_S7_NS4_6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S7_SB_S9_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1364"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6ObjectEPKcEENS_22__unordered_map_hasherIS4_S7_NS4_6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S7_SB_S9_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1364"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1364", %"class.std::__1::__hash_table.1364"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %183, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #20
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #21
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1364", %"class.std::__1::__hash_table.1364"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1368"**, %"struct.std::__1::__hash_node_base.1368"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1364"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1368"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1368"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #21
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1370", %"class.std::__1::__bucket_list_deallocator.1370"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1368"**, %"struct.std::__1::__hash_node_base.1368"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1368"* null, %"struct.std::__1::__hash_node_base.1368"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !82

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1364", %"class.std::__1::__hash_table.1364"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1368"* %38, null
  br i1 %39, label %191, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1368"**, %"struct.std::__1::__hash_node_base.1368"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1368"* null, %"struct.std::__1::__hash_node_base.1368"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1368"**, %"struct.std::__1::__hash_node_base.1368"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1368"* null, %"struct.std::__1::__hash_node_base.1368"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1368"**, %"struct.std::__1::__hash_node_base.1368"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1368"* null, %"struct.std::__1::__hash_node_base.1368"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1368"**, %"struct.std::__1::__hash_node_base.1368"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1368"* null, %"struct.std::__1::__hash_node_base.1368"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1368"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1368"**, %"struct.std::__1::__hash_node_base.1368"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1368"* %36, %"struct.std::__1::__hash_node_base.1368"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1368"* %75, null
  br i1 %76, label %191, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %133

79:                                               ; preds = %77, %124
  %80 = phi %"struct.std::__1::__hash_node_base.1368"* [ %128, %124 ], [ %75, %77 ]
  %81 = phi i64 [ %126, %124 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1368"* [ %125, %124 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1368"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %124, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.1368"**, %"struct.std::__1::__hash_node_base.1368"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.1368"* %95, null
  br i1 %96, label %123, label %130

97:                                               ; preds = %130, %102
  %98 = phi %"struct.std::__1::__hash_node_base.1368"* [ %100, %102 ], [ %80, %130 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.1368"* %100, null
  br i1 %101, label %110, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base.1368"* %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = load i64, i64* %132, align 8
  %107 = trunc i64 %106 to i32
  %108 = trunc i64 %105 to i32
  %109 = icmp eq i32 %107, %108
  br i1 %109, label %97, label %110

110:                                              ; preds = %102, %97
  %111 = ptrtoint %"struct.std::__1::__hash_node_base.1368"* %100 to i64
  %112 = bitcast %"struct.std::__1::__hash_node_base.1368"* %98 to i64*
  %113 = bitcast %"struct.std::__1::__hash_node_base.1368"* %82 to i64*
  store i64 %111, i64* %113, align 8
  %114 = load %"struct.std::__1::__hash_node_base.1368"**, %"struct.std::__1::__hash_node_base.1368"*** %11, align 8
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %114, i64 %90
  %116 = bitcast %"struct.std::__1::__hash_node_base.1368"** %115 to i64**
  %117 = load i64*, i64** %116, align 8
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %112, align 8
  %119 = load %"struct.std::__1::__hash_node_base.1368"**, %"struct.std::__1::__hash_node_base.1368"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %119, i64 %90
  %121 = load %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %120, align 8
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %121, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1368"* %80, %"struct.std::__1::__hash_node_base.1368"** %122, align 8
  br label %124

123:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.1368"* %82, %"struct.std::__1::__hash_node_base.1368"** %94, align 8
  br label %124

124:                                              ; preds = %123, %110, %89
  %125 = phi %"struct.std::__1::__hash_node_base.1368"* [ %80, %123 ], [ %82, %110 ], [ %80, %89 ]
  %126 = phi i64 [ %90, %123 ], [ %81, %110 ], [ %81, %89 ]
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %125, i64 0, i32 0
  %128 = load %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %127, align 8
  %129 = icmp eq %"struct.std::__1::__hash_node_base.1368"* %128, null
  br i1 %129, label %191, label %79

130:                                              ; preds = %92
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %80, i64 2
  %132 = bitcast %"struct.std::__1::__hash_node_base.1368"* %131 to i64*
  br label %97

133:                                              ; preds = %77, %177
  %134 = phi %"struct.std::__1::__hash_node_base.1368"* [ %181, %177 ], [ %75, %77 ]
  %135 = phi i64 [ %179, %177 ], [ %71, %77 ]
  %136 = phi %"struct.std::__1::__hash_node_base.1368"* [ %178, %177 ], [ %38, %77 ]
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %134, i64 1
  %138 = bitcast %"struct.std::__1::__hash_node_base.1368"* %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = and i64 %139, %78
  %141 = icmp eq i64 %140, %135
  br i1 %141, label %177, label %142

142:                                              ; preds = %133
  %143 = load %"struct.std::__1::__hash_node_base.1368"**, %"struct.std::__1::__hash_node_base.1368"*** %11, align 8
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %143, i64 %140
  %145 = load %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %144, align 8
  %146 = icmp eq %"struct.std::__1::__hash_node_base.1368"* %145, null
  br i1 %146, label %150, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %134, i64 2
  %149 = bitcast %"struct.std::__1::__hash_node_base.1368"* %148 to i64*
  br label %151

150:                                              ; preds = %142
  store %"struct.std::__1::__hash_node_base.1368"* %136, %"struct.std::__1::__hash_node_base.1368"** %144, align 8
  br label %177

151:                                              ; preds = %147, %156
  %152 = phi %"struct.std::__1::__hash_node_base.1368"* [ %154, %156 ], [ %134, %147 ]
  %153 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %152, i64 0, i32 0
  %154 = load %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %153, align 8
  %155 = icmp eq %"struct.std::__1::__hash_node_base.1368"* %154, null
  br i1 %155, label %164, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %154, i64 2
  %158 = bitcast %"struct.std::__1::__hash_node_base.1368"* %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = load i64, i64* %149, align 8
  %161 = trunc i64 %160 to i32
  %162 = trunc i64 %159 to i32
  %163 = icmp eq i32 %161, %162
  br i1 %163, label %151, label %164

164:                                              ; preds = %151, %156
  %165 = ptrtoint %"struct.std::__1::__hash_node_base.1368"* %154 to i64
  %166 = bitcast %"struct.std::__1::__hash_node_base.1368"* %152 to i64*
  %167 = bitcast %"struct.std::__1::__hash_node_base.1368"* %136 to i64*
  store i64 %165, i64* %167, align 8
  %168 = load %"struct.std::__1::__hash_node_base.1368"**, %"struct.std::__1::__hash_node_base.1368"*** %11, align 8
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %168, i64 %140
  %170 = bitcast %"struct.std::__1::__hash_node_base.1368"** %169 to i64**
  %171 = load i64*, i64** %170, align 8
  %172 = load i64, i64* %171, align 8
  store i64 %172, i64* %166, align 8
  %173 = load %"struct.std::__1::__hash_node_base.1368"**, %"struct.std::__1::__hash_node_base.1368"*** %11, align 8
  %174 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %173, i64 %140
  %175 = load %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %174, align 8
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %175, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1368"* %134, %"struct.std::__1::__hash_node_base.1368"** %176, align 8
  br label %177

177:                                              ; preds = %133, %164, %150
  %178 = phi %"struct.std::__1::__hash_node_base.1368"* [ %134, %150 ], [ %136, %164 ], [ %134, %133 ]
  %179 = phi i64 [ %140, %150 ], [ %135, %164 ], [ %135, %133 ]
  %180 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1368", %"struct.std::__1::__hash_node_base.1368"* %178, i64 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base.1368"*, %"struct.std::__1::__hash_node_base.1368"** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base.1368"* %181, null
  br i1 %182, label %191, label %133

183:                                              ; preds = %2
  %184 = getelementptr inbounds %"class.std::__1::__hash_table.1364", %"class.std::__1::__hash_table.1364"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %185 = load %"struct.std::__1::__hash_node_base.1368"**, %"struct.std::__1::__hash_node_base.1368"*** %184, align 8
  store %"struct.std::__1::__hash_node_base.1368"** null, %"struct.std::__1::__hash_node_base.1368"*** %184, align 8
  %186 = icmp eq %"struct.std::__1::__hash_node_base.1368"** %185, null
  br i1 %186, label %189, label %187

187:                                              ; preds = %183
  %188 = bitcast %"struct.std::__1::__hash_node_base.1368"** %185 to i8*
  tail call void @_ZdlPv(i8* %188) #21
  br label %189

189:                                              ; preds = %183, %187
  %190 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1370", %"class.std::__1::__bucket_list_deallocator.1370"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %190, align 8
  br label %191

191:                                              ; preds = %177, %124, %70, %35, %189
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1342"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14JSGlobalObjectEPKcEENS_22__unordered_map_hasherIS4_S7_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS4_JS4_RKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1338"*, %"class.v8::internal::JSGlobalObject"* dereferenceable(8), %"class.v8::internal::JSGlobalObject"* dereferenceable(8), i8** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::JSGlobalObject", %"class.v8::internal::JSGlobalObject"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967295
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.1338", %"class.std::__1::__hash_table.1338"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %73, label %11

11:                                               ; preds = %4
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ult i64 %7, %9
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.1338", %"class.std::__1::__hash_table.1338"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.1342"**, %"struct.std::__1::__hash_node_base.1342"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.1342"* %26, null
  br i1 %27, label %73, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  %30 = trunc i64 %6 to i32
  br i1 %13, label %31, label %54

31:                                               ; preds = %28, %48
  %32 = phi %"struct.std::__1::__hash_node_base.1342"* [ %34, %48 ], [ %26, %28 ]
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %32, i64 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %33, align 8
  %35 = icmp eq %"struct.std::__1::__hash_node_base.1342"* %34, null
  br i1 %35, label %73, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %34, i64 1
  %38 = bitcast %"struct.std::__1::__hash_node_base.1342"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, %7
  br i1 %40, label %48, label %41

41:                                               ; preds = %36
  %42 = icmp ult i64 %39, %9
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %39, %9
  br label %45

45:                                               ; preds = %43, %41
  %46 = phi i64 [ %44, %43 ], [ %39, %41 ]
  %47 = icmp eq i64 %46, %22
  br i1 %47, label %48, label %73

48:                                               ; preds = %45, %36
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %34, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.1342"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = trunc i64 %51 to i32
  %53 = icmp eq i32 %52, %30
  br i1 %53, label %165, label %31

54:                                               ; preds = %28, %67
  %55 = phi %"struct.std::__1::__hash_node_base.1342"* [ %57, %67 ], [ %26, %28 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %55, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %56, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base.1342"* %57, null
  br i1 %58, label %73, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %57, i64 1
  %61 = bitcast %"struct.std::__1::__hash_node_base.1342"* %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %62, %7
  %64 = and i64 %62, %29
  %65 = icmp eq i64 %64, %22
  %66 = or i1 %63, %65
  br i1 %66, label %67, label %73

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %57, i64 2
  %69 = bitcast %"struct.std::__1::__hash_node_base.1342"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = trunc i64 %70 to i32
  %72 = icmp eq i32 %71, %30
  br i1 %72, label %165, label %54

73:                                               ; preds = %59, %54, %45, %31, %21, %4
  %74 = phi i64 [ %22, %21 ], [ undef, %4 ], [ %22, %31 ], [ %22, %45 ], [ %22, %54 ], [ %22, %59 ]
  %75 = tail call i8* @_Znwm(i64 32) #21, !noalias !83
  %76 = getelementptr inbounds %"class.v8::internal::JSGlobalObject", %"class.v8::internal::JSGlobalObject"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds i8, i8* %75, i64 16
  %78 = bitcast i8* %77 to i64*
  %79 = load i64, i64* %76, align 8, !noalias !83
  store i64 %79, i64* %78, align 8, !noalias !83
  %80 = getelementptr inbounds i8, i8* %75, i64 24
  %81 = bitcast i8** %3 to i64*
  %82 = load i64, i64* %81, align 8, !noalias !83
  %83 = bitcast i8* %80 to i64*
  store i64 %82, i64* %83, align 8, !noalias !83
  %84 = getelementptr inbounds i8, i8* %75, i64 8
  %85 = bitcast i8* %84 to i64*
  store i64 %7, i64* %85, align 8, !noalias !83
  %86 = bitcast i8* %75 to %"struct.std::__1::__hash_node_base.1342"**
  store %"struct.std::__1::__hash_node_base.1342"* null, %"struct.std::__1::__hash_node_base.1342"** %86, align 8, !noalias !83
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.1338", %"class.std::__1::__hash_table.1338"* %0, i64 0, i32 2, i32 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, 1
  %90 = uitofp i64 %89 to float
  %91 = uitofp i64 %9 to float
  %92 = getelementptr inbounds %"class.std::__1::__hash_table.1338", %"class.std::__1::__hash_table.1338"* %0, i64 0, i32 3, i32 0, i32 0
  %93 = load float, float* %92, align 4
  %94 = fmul float %93, %91
  %95 = fcmp olt float %94, %90
  %96 = or i1 %10, %95
  br i1 %96, label %97, label %120

97:                                               ; preds = %73
  %98 = shl i64 %9, 1
  %99 = icmp ult i64 %9, 3
  %100 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !3
  %101 = icmp ugt i64 %100, 1
  %102 = or i1 %99, %101
  %103 = zext i1 %102 to i64
  %104 = or i64 %98, %103
  %105 = fdiv float %90, %93
  %106 = tail call float @llvm.ceil.f32(float %105) #13
  %107 = fptoui float %106 to i64
  %108 = icmp ult i64 %104, %107
  %109 = select i1 %108, i64 %107, i64 %104
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14JSGlobalObjectEPKcEENS_22__unordered_map_hasherIS4_S7_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.1338"* %0, i64 %109)
  %110 = load i64, i64* %8, align 8
  %111 = tail call i64 @llvm.ctpop.i64(i64 %110) #13, !range !3
  %112 = icmp ugt i64 %111, 1
  br i1 %112, label %116, label %113

113:                                              ; preds = %97
  %114 = add i64 %110, 4294967295
  %115 = and i64 %114, %7
  br label %120

116:                                              ; preds = %97
  %117 = icmp ult i64 %7, %110
  br i1 %117, label %120, label %118

118:                                              ; preds = %116
  %119 = urem i64 %7, %110
  br label %120

120:                                              ; preds = %118, %116, %113, %73
  %121 = phi i64 [ %9, %73 ], [ %110, %113 ], [ %110, %116 ], [ %110, %118 ]
  %122 = phi i64 [ %74, %73 ], [ %115, %113 ], [ %7, %116 ], [ %119, %118 ]
  %123 = getelementptr inbounds %"class.std::__1::__hash_table.1338", %"class.std::__1::__hash_table.1338"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %124 = load %"struct.std::__1::__hash_node_base.1342"**, %"struct.std::__1::__hash_node_base.1342"*** %123, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %124, i64 %122
  %126 = load %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base.1342"* %126, null
  br i1 %127, label %128, label %154

128:                                              ; preds = %120
  %129 = getelementptr inbounds %"class.std::__1::__hash_table.1338", %"class.std::__1::__hash_table.1338"* %0, i64 0, i32 1, i32 0, i32 0
  %130 = bitcast %"struct.std::__1::__hash_node_base.1342"* %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %75 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.1342"* %129 to i8**
  store i8* %75, i8** %133, align 8
  store %"struct.std::__1::__hash_node_base.1342"* %129, %"struct.std::__1::__hash_node_base.1342"** %125, align 8
  %134 = load %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %86, align 8
  %135 = icmp eq %"struct.std::__1::__hash_node_base.1342"* %134, null
  br i1 %135, label %161, label %136

136:                                              ; preds = %128
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %134, i64 1
  %138 = bitcast %"struct.std::__1::__hash_node_base.1342"* %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = tail call i64 @llvm.ctpop.i64(i64 %121) #13, !range !3
  %141 = icmp ugt i64 %140, 1
  br i1 %141, label %145, label %142

142:                                              ; preds = %136
  %143 = add i64 %121, -1
  %144 = and i64 %139, %143
  br label %149

145:                                              ; preds = %136
  %146 = icmp ult i64 %139, %121
  br i1 %146, label %149, label %147

147:                                              ; preds = %145
  %148 = urem i64 %139, %121
  br label %149

149:                                              ; preds = %142, %145, %147
  %150 = phi i64 [ %144, %142 ], [ %148, %147 ], [ %139, %145 ]
  %151 = load %"struct.std::__1::__hash_node_base.1342"**, %"struct.std::__1::__hash_node_base.1342"*** %123, align 8
  %152 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %151, i64 %150
  %153 = bitcast %"struct.std::__1::__hash_node_base.1342"** %152 to i8**
  br label %159

154:                                              ; preds = %120
  %155 = bitcast %"struct.std::__1::__hash_node_base.1342"* %126 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast i8* %75 to i64*
  store i64 %156, i64* %157, align 8
  %158 = bitcast %"struct.std::__1::__hash_node_base.1342"* %126 to i8**
  br label %159

159:                                              ; preds = %149, %154
  %160 = phi i8** [ %158, %154 ], [ %153, %149 ]
  store i8* %75, i8** %160, align 8
  br label %161

161:                                              ; preds = %159, %128
  %162 = bitcast i8* %75 to %"struct.std::__1::__hash_node_base.1342"*
  %163 = load i64, i64* %87, align 8
  %164 = add i64 %163, 1
  store i64 %164, i64* %87, align 8
  br label %165

165:                                              ; preds = %67, %48, %161
  %166 = phi i8 [ 1, %161 ], [ 0, %48 ], [ 0, %67 ]
  %167 = phi %"struct.std::__1::__hash_node_base.1342"* [ %162, %161 ], [ %34, %48 ], [ %57, %67 ]
  %168 = insertvalue { %"struct.std::__1::__hash_node_base.1342"*, i8 } undef, %"struct.std::__1::__hash_node_base.1342"* %167, 0
  %169 = insertvalue { %"struct.std::__1::__hash_node_base.1342"*, i8 } %168, i8 %166, 1
  ret { %"struct.std::__1::__hash_node_base.1342"*, i8 } %169
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14JSGlobalObjectEPKcEENS_22__unordered_map_hasherIS4_S7_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.1338"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1338", %"class.std::__1::__hash_table.1338"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14JSGlobalObjectEPKcEENS_22__unordered_map_hasherIS4_S7_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1338"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1338", %"class.std::__1::__hash_table.1338"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1338", %"class.std::__1::__hash_table.1338"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14JSGlobalObjectEPKcEENS_22__unordered_map_hasherIS4_S7_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1338"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14JSGlobalObjectEPKcEENS_22__unordered_map_hasherIS4_S7_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1338"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1338", %"class.std::__1::__hash_table.1338"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %183, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #20
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #21
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1338", %"class.std::__1::__hash_table.1338"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1342"**, %"struct.std::__1::__hash_node_base.1342"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1338"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1342"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1342"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #21
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1344", %"class.std::__1::__bucket_list_deallocator.1344"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1342"**, %"struct.std::__1::__hash_node_base.1342"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1342"* null, %"struct.std::__1::__hash_node_base.1342"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !86

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1338", %"class.std::__1::__hash_table.1338"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1342"* %38, null
  br i1 %39, label %191, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1342"**, %"struct.std::__1::__hash_node_base.1342"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1342"* null, %"struct.std::__1::__hash_node_base.1342"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1342"**, %"struct.std::__1::__hash_node_base.1342"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1342"* null, %"struct.std::__1::__hash_node_base.1342"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1342"**, %"struct.std::__1::__hash_node_base.1342"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1342"* null, %"struct.std::__1::__hash_node_base.1342"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1342"**, %"struct.std::__1::__hash_node_base.1342"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1342"* null, %"struct.std::__1::__hash_node_base.1342"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1342"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1342"**, %"struct.std::__1::__hash_node_base.1342"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1342"* %36, %"struct.std::__1::__hash_node_base.1342"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1342"* %75, null
  br i1 %76, label %191, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %133

79:                                               ; preds = %77, %124
  %80 = phi %"struct.std::__1::__hash_node_base.1342"* [ %128, %124 ], [ %75, %77 ]
  %81 = phi i64 [ %126, %124 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1342"* [ %125, %124 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1342"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %124, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.1342"**, %"struct.std::__1::__hash_node_base.1342"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.1342"* %95, null
  br i1 %96, label %123, label %130

97:                                               ; preds = %130, %102
  %98 = phi %"struct.std::__1::__hash_node_base.1342"* [ %100, %102 ], [ %80, %130 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.1342"* %100, null
  br i1 %101, label %110, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base.1342"* %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = load i64, i64* %132, align 8
  %107 = trunc i64 %106 to i32
  %108 = trunc i64 %105 to i32
  %109 = icmp eq i32 %107, %108
  br i1 %109, label %97, label %110

110:                                              ; preds = %102, %97
  %111 = ptrtoint %"struct.std::__1::__hash_node_base.1342"* %100 to i64
  %112 = bitcast %"struct.std::__1::__hash_node_base.1342"* %98 to i64*
  %113 = bitcast %"struct.std::__1::__hash_node_base.1342"* %82 to i64*
  store i64 %111, i64* %113, align 8
  %114 = load %"struct.std::__1::__hash_node_base.1342"**, %"struct.std::__1::__hash_node_base.1342"*** %11, align 8
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %114, i64 %90
  %116 = bitcast %"struct.std::__1::__hash_node_base.1342"** %115 to i64**
  %117 = load i64*, i64** %116, align 8
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %112, align 8
  %119 = load %"struct.std::__1::__hash_node_base.1342"**, %"struct.std::__1::__hash_node_base.1342"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %119, i64 %90
  %121 = load %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %120, align 8
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %121, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1342"* %80, %"struct.std::__1::__hash_node_base.1342"** %122, align 8
  br label %124

123:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.1342"* %82, %"struct.std::__1::__hash_node_base.1342"** %94, align 8
  br label %124

124:                                              ; preds = %123, %110, %89
  %125 = phi %"struct.std::__1::__hash_node_base.1342"* [ %80, %123 ], [ %82, %110 ], [ %80, %89 ]
  %126 = phi i64 [ %90, %123 ], [ %81, %110 ], [ %81, %89 ]
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %125, i64 0, i32 0
  %128 = load %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %127, align 8
  %129 = icmp eq %"struct.std::__1::__hash_node_base.1342"* %128, null
  br i1 %129, label %191, label %79

130:                                              ; preds = %92
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %80, i64 2
  %132 = bitcast %"struct.std::__1::__hash_node_base.1342"* %131 to i64*
  br label %97

133:                                              ; preds = %77, %177
  %134 = phi %"struct.std::__1::__hash_node_base.1342"* [ %181, %177 ], [ %75, %77 ]
  %135 = phi i64 [ %179, %177 ], [ %71, %77 ]
  %136 = phi %"struct.std::__1::__hash_node_base.1342"* [ %178, %177 ], [ %38, %77 ]
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %134, i64 1
  %138 = bitcast %"struct.std::__1::__hash_node_base.1342"* %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = and i64 %139, %78
  %141 = icmp eq i64 %140, %135
  br i1 %141, label %177, label %142

142:                                              ; preds = %133
  %143 = load %"struct.std::__1::__hash_node_base.1342"**, %"struct.std::__1::__hash_node_base.1342"*** %11, align 8
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %143, i64 %140
  %145 = load %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %144, align 8
  %146 = icmp eq %"struct.std::__1::__hash_node_base.1342"* %145, null
  br i1 %146, label %150, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %134, i64 2
  %149 = bitcast %"struct.std::__1::__hash_node_base.1342"* %148 to i64*
  br label %151

150:                                              ; preds = %142
  store %"struct.std::__1::__hash_node_base.1342"* %136, %"struct.std::__1::__hash_node_base.1342"** %144, align 8
  br label %177

151:                                              ; preds = %147, %156
  %152 = phi %"struct.std::__1::__hash_node_base.1342"* [ %154, %156 ], [ %134, %147 ]
  %153 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %152, i64 0, i32 0
  %154 = load %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %153, align 8
  %155 = icmp eq %"struct.std::__1::__hash_node_base.1342"* %154, null
  br i1 %155, label %164, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %154, i64 2
  %158 = bitcast %"struct.std::__1::__hash_node_base.1342"* %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = load i64, i64* %149, align 8
  %161 = trunc i64 %160 to i32
  %162 = trunc i64 %159 to i32
  %163 = icmp eq i32 %161, %162
  br i1 %163, label %151, label %164

164:                                              ; preds = %151, %156
  %165 = ptrtoint %"struct.std::__1::__hash_node_base.1342"* %154 to i64
  %166 = bitcast %"struct.std::__1::__hash_node_base.1342"* %152 to i64*
  %167 = bitcast %"struct.std::__1::__hash_node_base.1342"* %136 to i64*
  store i64 %165, i64* %167, align 8
  %168 = load %"struct.std::__1::__hash_node_base.1342"**, %"struct.std::__1::__hash_node_base.1342"*** %11, align 8
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %168, i64 %140
  %170 = bitcast %"struct.std::__1::__hash_node_base.1342"** %169 to i64**
  %171 = load i64*, i64** %170, align 8
  %172 = load i64, i64* %171, align 8
  store i64 %172, i64* %166, align 8
  %173 = load %"struct.std::__1::__hash_node_base.1342"**, %"struct.std::__1::__hash_node_base.1342"*** %11, align 8
  %174 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %173, i64 %140
  %175 = load %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %174, align 8
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %175, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1342"* %134, %"struct.std::__1::__hash_node_base.1342"** %176, align 8
  br label %177

177:                                              ; preds = %133, %164, %150
  %178 = phi %"struct.std::__1::__hash_node_base.1342"* [ %134, %150 ], [ %136, %164 ], [ %134, %133 ]
  %179 = phi i64 [ %140, %150 ], [ %135, %164 ], [ %135, %133 ]
  %180 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1342", %"struct.std::__1::__hash_node_base.1342"* %178, i64 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base.1342"*, %"struct.std::__1::__hash_node_base.1342"** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base.1342"* %181, null
  br i1 %182, label %191, label %133

183:                                              ; preds = %2
  %184 = getelementptr inbounds %"class.std::__1::__hash_table.1338", %"class.std::__1::__hash_table.1338"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %185 = load %"struct.std::__1::__hash_node_base.1342"**, %"struct.std::__1::__hash_node_base.1342"*** %184, align 8
  store %"struct.std::__1::__hash_node_base.1342"** null, %"struct.std::__1::__hash_node_base.1342"*** %184, align 8
  %186 = icmp eq %"struct.std::__1::__hash_node_base.1342"** %185, null
  br i1 %186, label %189, label %187

187:                                              ; preds = %183
  %188 = bitcast %"struct.std::__1::__hash_node_base.1342"** %185 to i8*
  tail call void @_ZdlPv(i8* %188) #21
  br label %189

189:                                              ; preds = %183, %187
  %190 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1344", %"class.std::__1::__bucket_list_deallocator.1344"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %190, align 8
  br label %191

191:                                              ; preds = %177, %124, %70, %35, %189
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_26HashEqualityThenKeyMatcherIS2_PFbS2_S2_EEENS0_23DefaultAllocationPolicyEE14LookupOrInsertIS2_ZNS8_14LookupOrInsertIZNS8_14LookupOrInsertERKS2_jEUlvE_EEPNS0_20TemplateHashMapEntryIS2_S2_EESC_jRKT_EUlvE_SD_EESG_SJ_jRKT0_RKT1_(%"class.v8::base::TemplateHashMapImpl.696"*, i8** dereferenceable(8), i32, %class.anon.1721* dereferenceable(8), %class.anon.1719* dereferenceable(1)) local_unnamed_addr #2 comdat align 2 {
  %6 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl.696", %"class.v8::base::TemplateHashMapImpl.696"* %0, i64 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -1
  %9 = and i32 %8, %2
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl.696", %"class.v8::base::TemplateHashMapImpl.696"* %0, i64 0, i32 0, i32 1
  %12 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %11, align 8
  %13 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %12, i64 %10
  %14 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %13, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %47, label %17

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl.696", %"class.v8::base::TemplateHashMapImpl.696"* %0, i64 0, i32 0, i32 0, i32 0
  br label %19

19:                                               ; preds = %33, %17
  %20 = phi i32 [ %7, %17 ], [ %34, %33 ]
  %21 = phi i8* [ %15, %17 ], [ %41, %33 ]
  %22 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %13, %17 ], [ %39, %33 ]
  %23 = phi i64 [ %10, %17 ], [ %38, %33 ]
  %24 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %12, i64 %23, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, %2
  br i1 %26, label %27, label %33

27:                                               ; preds = %19
  %28 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %18, align 8
  %29 = load i8*, i8** %1, align 8
  %30 = tail call zeroext i1 %28(i8* %29, i8* nonnull %21) #13
  br i1 %30, label %43, label %31

31:                                               ; preds = %27
  %32 = load i32, i32* %6, align 8
  br label %33

33:                                               ; preds = %31, %19
  %34 = phi i32 [ %32, %31 ], [ %20, %19 ]
  %35 = add nuw nsw i64 %23, 1
  %36 = add i32 %34, -1
  %37 = zext i32 %36 to i64
  %38 = and i64 %35, %37
  %39 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %12, i64 %38
  %40 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %39, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %47, label %19

43:                                               ; preds = %27
  %44 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %22, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %47, label %99

47:                                               ; preds = %33, %5, %43
  %48 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %22, %43 ], [ %13, %5 ], [ %39, %33 ]
  %49 = getelementptr inbounds %class.anon.1721, %class.anon.1721* %3, i64 0, i32 0
  %50 = load i8**, i8*** %49, align 8
  %51 = load i8*, i8** %50, align 8
  %52 = ptrtoint i8* %51 to i64
  %53 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %48 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %48, i64 0, i32 1
  %55 = bitcast i8** %54 to i64*
  store i64 0, i64* %55, align 8
  %56 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %48, i64 0, i32 2
  store i32 %2, i32* %56, align 8
  %57 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl.696", %"class.v8::base::TemplateHashMapImpl.696"* %0, i64 0, i32 0, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = add i32 %58, 1
  store i32 %59, i32* %57, align 4
  %60 = lshr i32 %59, 2
  %61 = add i32 %60, %59
  %62 = load i32, i32* %6, align 8
  %63 = icmp ult i32 %61, %62
  br i1 %63, label %99, label %64

64:                                               ; preds = %47
  tail call void @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_26HashEqualityThenKeyMatcherIS2_PFbS2_S2_EEENS0_23DefaultAllocationPolicyEE6ResizeEv(%"class.v8::base::TemplateHashMapImpl.696"* %0) #13
  %65 = load i32, i32* %6, align 8
  %66 = add i32 %65, -1
  %67 = and i32 %66, %2
  %68 = zext i32 %67 to i64
  %69 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %11, align 8
  %70 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %69, i64 %68
  %71 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %70, i64 0, i32 0
  %72 = load i8*, i8** %71, align 8
  %73 = icmp eq i8* %72, null
  br i1 %73, label %99, label %74

74:                                               ; preds = %64
  %75 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl.696", %"class.v8::base::TemplateHashMapImpl.696"* %0, i64 0, i32 0, i32 0, i32 0
  br label %76

76:                                               ; preds = %89, %74
  %77 = phi i32 [ %65, %74 ], [ %90, %89 ]
  %78 = phi i8* [ %72, %74 ], [ %97, %89 ]
  %79 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %70, %74 ], [ %95, %89 ]
  %80 = phi i64 [ %68, %74 ], [ %94, %89 ]
  %81 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %69, i64 %80, i32 2
  %82 = load i32, i32* %81, align 8
  %83 = icmp eq i32 %82, %2
  br i1 %83, label %84, label %89

84:                                               ; preds = %76
  %85 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %75, align 8
  %86 = tail call zeroext i1 %85(i8* %51, i8* nonnull %78) #13
  br i1 %86, label %99, label %87

87:                                               ; preds = %84
  %88 = load i32, i32* %6, align 8
  br label %89

89:                                               ; preds = %87, %76
  %90 = phi i32 [ %88, %87 ], [ %77, %76 ]
  %91 = add nuw nsw i64 %80, 1
  %92 = add i32 %90, -1
  %93 = zext i32 %92 to i64
  %94 = and i64 %91, %93
  %95 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %69, i64 %94
  %96 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %95, i64 0, i32 0
  %97 = load i8*, i8** %96, align 8
  %98 = icmp eq i8* %97, null
  br i1 %98, label %99, label %76

99:                                               ; preds = %89, %84, %43, %64, %47
  %100 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %22, %43 ], [ %48, %47 ], [ %70, %64 ], [ %95, %89 ], [ %79, %84 ]
  ret %"struct.v8::base::TemplateHashMapEntry"* %100
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_26HashEqualityThenKeyMatcherIS2_PFbS2_S2_EEENS0_23DefaultAllocationPolicyEE6ResizeEv(%"class.v8::base::TemplateHashMapImpl.696"*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl.696", %"class.v8::base::TemplateHashMapImpl.696"* %0, i64 0, i32 0, i32 1
  %3 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl.696", %"class.v8::base::TemplateHashMapImpl.696"* %0, i64 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl.696", %"class.v8::base::TemplateHashMapImpl.696"* %0, i64 0, i32 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = shl i32 %5, 1
  %9 = zext i32 %8 to i64
  %10 = mul nuw nsw i64 %9, 24
  %11 = tail call noalias i8* @malloc(i64 %10) #13
  %12 = bitcast %"struct.v8::base::TemplateHashMapEntry"** %2 to i8**
  store i8* %11, i8** %12, align 8
  %13 = icmp eq i8* %11, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.648, i64 0, i64 0)) #20
  unreachable

15:                                               ; preds = %1
  store i32 %8, i32* %4, align 8
  %16 = icmp eq i32 %8, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %15
  %18 = bitcast i8* %11 to i8**
  store i8* null, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %11, i64 24
  %20 = bitcast i8* %19 to i8**
  store i8* null, i8** %20, align 8
  %21 = load i32, i32* %4, align 8
  %22 = icmp ugt i32 %21, 2
  br i1 %22, label %23, label %31

23:                                               ; preds = %17, %23
  %24 = phi i64 [ %27, %23 ], [ 2, %17 ]
  %25 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %2, align 8
  %26 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %25, i64 %24, i32 0
  store i8* null, i8** %26, align 8
  %27 = add nuw nsw i64 %24, 1
  %28 = load i32, i32* %4, align 8
  %29 = zext i32 %28 to i64
  %30 = icmp ult i64 %27, %29
  br i1 %30, label %23, label %31

31:                                               ; preds = %23, %17, %15
  store i32 0, i32* %6, align 4
  %32 = icmp eq i32 %7, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl.696", %"class.v8::base::TemplateHashMapImpl.696"* %0, i64 0, i32 0, i32 0, i32 0
  br label %37

35:                                               ; preds = %135, %31
  %36 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %3 to i8*
  tail call void @free(i8* %36) #13
  ret void

37:                                               ; preds = %33, %135
  %38 = phi i32 [ %7, %33 ], [ %136, %135 ]
  %39 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %3, %33 ], [ %137, %135 ]
  %40 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %39, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %135, label %43

43:                                               ; preds = %37
  %44 = ptrtoint i8* %41 to i64
  %45 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %39, i64 0, i32 2
  %46 = load i32, i32* %45, align 8
  %47 = load i32, i32* %4, align 8
  %48 = add i32 %47, -1
  %49 = and i32 %48, %46
  %50 = zext i32 %49 to i64
  %51 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %2, align 8
  %52 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %51, i64 %50
  %53 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %52, i64 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = icmp eq i8* %54, null
  br i1 %55, label %85, label %56

56:                                               ; preds = %43, %70
  %57 = phi i32 [ %71, %70 ], [ %47, %43 ]
  %58 = phi i8* [ %78, %70 ], [ %54, %43 ]
  %59 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %76, %70 ], [ %52, %43 ]
  %60 = phi i64 [ %75, %70 ], [ %50, %43 ]
  %61 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %51, i64 %60, i32 2
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, %46
  br i1 %63, label %64, label %70

64:                                               ; preds = %56
  %65 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %34, align 8
  %66 = load i8*, i8** %40, align 8
  %67 = tail call zeroext i1 %65(i8* %66, i8* nonnull %58) #13
  br i1 %67, label %80, label %68

68:                                               ; preds = %64
  %69 = load i32, i32* %4, align 8
  br label %70

70:                                               ; preds = %68, %56
  %71 = phi i32 [ %69, %68 ], [ %57, %56 ]
  %72 = add nuw nsw i64 %60, 1
  %73 = add i32 %71, -1
  %74 = zext i32 %73 to i64
  %75 = and i64 %72, %74
  %76 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %51, i64 %75
  %77 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %76, i64 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %80, label %56

80:                                               ; preds = %70, %64
  %81 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %76, %70 ], [ %59, %64 ]
  %82 = load i32, i32* %45, align 8
  %83 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %39 to i64*
  %84 = load i64, i64* %83, align 8
  br label %85

85:                                               ; preds = %43, %80
  %86 = phi i64 [ %84, %80 ], [ %44, %43 ]
  %87 = phi i32 [ %82, %80 ], [ %46, %43 ]
  %88 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %81, %80 ], [ %52, %43 ]
  %89 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %39, i64 0, i32 1
  %90 = bitcast i8** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %88 to i64*
  store i64 %86, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %88, i64 0, i32 1
  %94 = bitcast i8** %93 to i64*
  store i64 %91, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %88, i64 0, i32 2
  store i32 %87, i32* %95, align 8
  %96 = load i32, i32* %6, align 4
  %97 = add i32 %96, 1
  store i32 %97, i32* %6, align 4
  %98 = lshr i32 %97, 2
  %99 = add i32 %98, %97
  %100 = load i32, i32* %4, align 8
  %101 = icmp ult i32 %99, %100
  br i1 %101, label %133, label %102

102:                                              ; preds = %85
  tail call void @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_26HashEqualityThenKeyMatcherIS2_PFbS2_S2_EEENS0_23DefaultAllocationPolicyEE6ResizeEv(%"class.v8::base::TemplateHashMapImpl.696"* %0) #13
  %103 = load i32, i32* %4, align 8
  %104 = add i32 %103, -1
  %105 = and i32 %104, %87
  %106 = zext i32 %105 to i64
  %107 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %2, align 8
  %108 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %107, i64 %106, i32 0
  %109 = load i8*, i8** %108, align 8
  %110 = icmp eq i8* %109, null
  br i1 %110, label %133, label %111

111:                                              ; preds = %102, %124
  %112 = phi i32 [ %125, %124 ], [ %103, %102 ]
  %113 = phi i8* [ %131, %124 ], [ %109, %102 ]
  %114 = phi i64 [ %129, %124 ], [ %106, %102 ]
  %115 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %107, i64 %114, i32 2
  %116 = load i32, i32* %115, align 8
  %117 = icmp eq i32 %116, %87
  br i1 %117, label %118, label %124

118:                                              ; preds = %111
  %119 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %34, align 8
  %120 = load i8*, i8** %40, align 8
  %121 = tail call zeroext i1 %119(i8* %120, i8* nonnull %113) #13
  br i1 %121, label %133, label %122

122:                                              ; preds = %118
  %123 = load i32, i32* %4, align 8
  br label %124

124:                                              ; preds = %122, %111
  %125 = phi i32 [ %123, %122 ], [ %112, %111 ]
  %126 = add nuw nsw i64 %114, 1
  %127 = add i32 %125, -1
  %128 = zext i32 %127 to i64
  %129 = and i64 %126, %128
  %130 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %107, i64 %129, i32 0
  %131 = load i8*, i8** %130, align 8
  %132 = icmp eq i8* %131, null
  br i1 %132, label %133, label %111

133:                                              ; preds = %118, %124, %102, %85
  %134 = add i32 %38, -1
  br label %135

135:                                              ; preds = %37, %133
  %136 = phi i32 [ %134, %133 ], [ %38, %37 ]
  %137 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %39, i64 1
  %138 = icmp eq i32 %136, 0
  br i1 %138, label %35, label %37
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #15

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind readnone speculatable }
attributes #16 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #19 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #20 = { noreturn nounwind }
attributes #21 = { builtin nounwind }
attributes #22 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i64 0, i64 65}
!4 = !{i8 0, i8 2}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!8 = distinct !{!8, !9, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv"}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!13 = distinct !{!13, !14, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!18 = !{!16, !19}
!19 = distinct !{!19, !20, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIS2_S7_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashIRS2_JS6_EEENS_10unique_ptrINS_11__hash_nodeIS7_S2_EENS_22__hash_node_destructorINSG_ISN_EEEEEEmOT_DpOT0_: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIS2_S7_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashIRS2_JS6_EEENS_10unique_ptrINS_11__hash_nodeIS7_S2_EENS_22__hash_node_destructorINSG_ISN_EEEEEEmOT_DpOT0_"}
!24 = distinct !{!24, !25}
!25 = !{!"llvm.loop.unroll.disable"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIiJS5_EEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISM_EEEEEEmOT_DpOT0_: argument 0"}
!28 = distinct !{!28, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIiJS5_EEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISM_EEEEEEmOT_DpOT0_"}
!29 = distinct !{!29, !25}
!30 = distinct !{!30, !25}
!31 = distinct !{!31, !25}
!32 = distinct !{!32, !25}
!33 = distinct !{!33, !25}
!34 = distinct !{!34, !25}
!35 = distinct !{!35, !25}
!36 = distinct !{!36, !25}
!37 = distinct !{!37, !25}
!38 = distinct !{!38, !25}
!39 = distinct !{!39, !25}
!40 = distinct !{!40, !25}
!41 = distinct !{!41, !25}
!42 = distinct !{!42, !25}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIjJS5_EEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISM_EEEEEEmOT_DpOT0_: argument 0"}
!45 = distinct !{!45, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN2v88internal9HeapEntryEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIjJS5_EEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISM_EEEEEEmOT_DpOT0_"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvmEENS_22__unordered_map_hasherIS2_S3_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S3_S8_S6_Lb1EEENS_9allocatorIS3_EEE21__construct_node_hashINS_4pairIKS2_mEEJEEENS_10unique_ptrINS_11__hash_nodeIS3_S2_EENS_22__hash_node_destructorINSC_ISL_EEEEEEmOT_DpOT0_: argument 0"}
!48 = distinct !{!48, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvmEENS_22__unordered_map_hasherIS2_S3_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S3_S8_S6_Lb1EEENS_9allocatorIS3_EEE21__construct_node_hashINS_4pairIKS2_mEEJEEENS_10unique_ptrINS_11__hash_nodeIS3_S2_EENS_22__hash_node_destructorINSC_ISL_EEEEEEmOT_DpOT0_"}
!49 = distinct !{!49, !25}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeImPvEENS_22__unordered_map_hasherImS3_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE21__construct_node_hashIRKmJRKS2_EEENS_10unique_ptrINS_11__hash_nodeIS3_S2_EENS_22__hash_node_destructorINSC_ISM_EEEEEEmOT_DpOT0_: argument 0"}
!52 = distinct !{!52, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeImPvEENS_22__unordered_map_hasherImS3_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE21__construct_node_hashIRKmJRKS2_EEENS_10unique_ptrINS_11__hash_nodeIS3_S2_EENS_22__hash_node_destructorINSC_ISM_EEEEEEmOT_DpOT0_"}
!53 = distinct !{!53, !25}
!54 = !{!55, !57}
!55 = distinct !{!55, !56, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!56 = distinct !{!56, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!57 = distinct !{!57, !58, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv: argument 0"}
!58 = distinct !{!58, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv: argument 0"}
!61 = distinct !{!61, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv"}
!62 = !{!63, !60}
!63 = distinct !{!63, !64, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!64 = distinct !{!64, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!67 = distinct !{!67, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!70 = distinct !{!70, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!71 = !{!69, !72}
!72 = distinct !{!72, !73, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!73 = distinct !{!73, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!74 = !{!72}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZNSt3__112__hash_tableIN2v88internal14JSGlobalObjectENS2_6Object6HasherENS_8equal_toIS3_EENS_9allocatorIS3_EEE21__construct_node_hashIRKS3_JEEENS_10unique_ptrINS_11__hash_nodeIS3_PvEENS_22__hash_node_destructorINS8_ISH_EEEEEEmOT_DpOT0_: argument 0"}
!77 = distinct !{!77, !"_ZNSt3__112__hash_tableIN2v88internal14JSGlobalObjectENS2_6Object6HasherENS_8equal_toIS3_EENS_9allocatorIS3_EEE21__construct_node_hashIRKS3_JEEENS_10unique_ptrINS_11__hash_nodeIS3_PvEENS_22__hash_node_destructorINS8_ISH_EEEEEEmOT_DpOT0_"}
!78 = distinct !{!78, !25}
!79 = !{!80}
!80 = distinct !{!80, !81, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6ObjectEPKcEENS_22__unordered_map_hasherIS4_S7_NS4_6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S7_SB_S9_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashIS4_JRS6_EEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSF_ISN_EEEEEEmOT_DpOT0_: argument 0"}
!81 = distinct !{!81, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6ObjectEPKcEENS_22__unordered_map_hasherIS4_S7_NS4_6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S7_SB_S9_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashIS4_JRS6_EEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSF_ISN_EEEEEEmOT_DpOT0_"}
!82 = distinct !{!82, !25}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14JSGlobalObjectEPKcEENS_22__unordered_map_hasherIS4_S7_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashIS4_JRKS6_EEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISP_EEEEEEmOT_DpOT0_: argument 0"}
!85 = distinct !{!85, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14JSGlobalObjectEPKcEENS_22__unordered_map_hasherIS4_S7_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashIS4_JRKS6_EEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISP_EEEEEEmOT_DpOT0_"}
!86 = distinct !{!86, !25}
