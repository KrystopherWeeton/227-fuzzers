; ModuleID = 'gen/printing/mojom/print.mojom.cc'
source_filename = "gen/printing/mojom/print.mojom.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.printing::mojom::PageSizeMargins" = type { double, double, double, double, double, double }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.perfetto::TracedDictionary" = type <{ %"class.protozero::Message"*, i32, %"class.perfetto::internal::CheckedScope", [3 x i8] }>
%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.12", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.6"*, %"class.mojo::ScopedHandleBase.6"*, %"class.std::__1::__compressed_pair.7" }
%"class.mojo::ScopedHandleBase.6" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.mojo::ScopedHandleBase.6"* }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.14" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.19 }
%class.scoped_refptr.19 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.23, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.25", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.21 }
%class.scoped_refptr.21 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.22", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.22" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.23 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.24" }>
%"class.base::RefCountedThreadSafe.24" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { i32 }
%"class.printing::mojom::internal::PageSizeMargins_Data" = type { %"struct.mojo::internal::StructHeader", double, double, double, double, double, double }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.printing::mojom::PageSizeMargins"* }

@.str = private unnamed_addr constant [14 x i8] c"content_width\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"content_height\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"margin_top\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"margin_right\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"margin_bottom\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"margin_left\00", align 1

@_ZN8printing5mojom15PageSizeMarginsC1Ev = hidden unnamed_addr alias void (%"class.printing::mojom::PageSizeMargins"*), void (%"class.printing::mojom::PageSizeMargins"*)* @_ZN8printing5mojom15PageSizeMarginsC2Ev
@_ZN8printing5mojom15PageSizeMarginsC1Edddddd = hidden unnamed_addr alias void (%"class.printing::mojom::PageSizeMargins"*, double, double, double, double, double, double), void (%"class.printing::mojom::PageSizeMargins"*, double, double, double, double, double, double)* @_ZN8printing5mojom15PageSizeMarginsC2Edddddd
@_ZN8printing5mojom15PageSizeMarginsD1Ev = hidden unnamed_addr alias void (%"class.printing::mojom::PageSizeMargins"*), void (%"class.printing::mojom::PageSizeMargins"*)* @_ZN8printing5mojom15PageSizeMarginsD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8printing5mojom15PageSizeMarginsC2Ev(%"class.printing::mojom::PageSizeMargins"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.printing::mojom::PageSizeMargins"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8printing5mojom15PageSizeMarginsC2Edddddd(%"class.printing::mojom::PageSizeMargins"* nocapture, double, double, double, double, double, double) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.printing::mojom::PageSizeMargins", %"class.printing::mojom::PageSizeMargins"* %0, i64 0, i32 0
  store double %1, double* %8, align 8
  %9 = getelementptr inbounds %"class.printing::mojom::PageSizeMargins", %"class.printing::mojom::PageSizeMargins"* %0, i64 0, i32 1
  store double %2, double* %9, align 8
  %10 = getelementptr inbounds %"class.printing::mojom::PageSizeMargins", %"class.printing::mojom::PageSizeMargins"* %0, i64 0, i32 2
  store double %3, double* %10, align 8
  %11 = getelementptr inbounds %"class.printing::mojom::PageSizeMargins", %"class.printing::mojom::PageSizeMargins"* %0, i64 0, i32 3
  store double %4, double* %11, align 8
  %12 = getelementptr inbounds %"class.printing::mojom::PageSizeMargins", %"class.printing::mojom::PageSizeMargins"* %0, i64 0, i32 4
  store double %5, double* %12, align 8
  %13 = getelementptr inbounds %"class.printing::mojom::PageSizeMargins", %"class.printing::mojom::PageSizeMargins"* %0, i64 0, i32 5
  store double %6, double* %13, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8printing5mojom15PageSizeMarginsD2Ev(%"class.printing::mojom::PageSizeMargins"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK8printing5mojom15PageSizeMargins4HashEm(%"class.printing::mojom::PageSizeMargins"* nocapture readonly, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.printing::mojom::PageSizeMargins", %"class.printing::mojom::PageSizeMargins"* %0, i64 0, i32 0
  %4 = load double, double* %3, align 8
  %5 = fcmp oeq double %4, 0.000000e+00
  %6 = bitcast double %4 to i64
  %7 = select i1 %5, i64 0, i64 %6
  %8 = shl i64 %1, 6
  %9 = lshr i64 %1, 2
  %10 = add i64 %9, %8
  %11 = add i64 %10, %7
  %12 = xor i64 %11, %1
  %13 = getelementptr inbounds %"class.printing::mojom::PageSizeMargins", %"class.printing::mojom::PageSizeMargins"* %0, i64 0, i32 1
  %14 = load double, double* %13, align 8
  %15 = fcmp oeq double %14, 0.000000e+00
  %16 = bitcast double %14 to i64
  %17 = select i1 %15, i64 0, i64 %16
  %18 = shl i64 %12, 6
  %19 = lshr i64 %12, 2
  %20 = add i64 %18, %17
  %21 = add i64 %20, %19
  %22 = xor i64 %21, %12
  %23 = getelementptr inbounds %"class.printing::mojom::PageSizeMargins", %"class.printing::mojom::PageSizeMargins"* %0, i64 0, i32 2
  %24 = load double, double* %23, align 8
  %25 = fcmp oeq double %24, 0.000000e+00
  %26 = bitcast double %24 to i64
  %27 = select i1 %25, i64 0, i64 %26
  %28 = shl i64 %22, 6
  %29 = lshr i64 %22, 2
  %30 = add i64 %28, %27
  %31 = add i64 %30, %29
  %32 = xor i64 %31, %22
  %33 = getelementptr inbounds %"class.printing::mojom::PageSizeMargins", %"class.printing::mojom::PageSizeMargins"* %0, i64 0, i32 3
  %34 = load double, double* %33, align 8
  %35 = fcmp oeq double %34, 0.000000e+00
  %36 = bitcast double %34 to i64
  %37 = select i1 %35, i64 0, i64 %36
  %38 = shl i64 %32, 6
  %39 = lshr i64 %32, 2
  %40 = add i64 %38, %37
  %41 = add i64 %40, %39
  %42 = xor i64 %41, %32
  %43 = getelementptr inbounds %"class.printing::mojom::PageSizeMargins", %"class.printing::mojom::PageSizeMargins"* %0, i64 0, i32 4
  %44 = load double, double* %43, align 8
  %45 = fcmp oeq double %44, 0.000000e+00
  %46 = bitcast double %44 to i64
  %47 = select i1 %45, i64 0, i64 %46
  %48 = shl i64 %42, 6
  %49 = lshr i64 %42, 2
  %50 = add i64 %48, %47
  %51 = add i64 %50, %49
  %52 = xor i64 %51, %42
  %53 = getelementptr inbounds %"class.printing::mojom::PageSizeMargins", %"class.printing::mojom::PageSizeMargins"* %0, i64 0, i32 5
  %54 = load double, double* %53, align 8
  %55 = fcmp oeq double %54, 0.000000e+00
  %56 = bitcast double %54 to i64
  %57 = select i1 %55, i64 0, i64 %56
  %58 = shl i64 %52, 6
  %59 = lshr i64 %52, 2
  %60 = add i64 %58, %57
  %61 = add i64 %60, %59
  %62 = xor i64 %61, %52
  ret i64 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8printing5mojom15PageSizeMargins14WriteIntoTraceEN8perfetto11TracedValueE(%"class.printing::mojom::PageSizeMargins"* nocapture readonly, %"class.perfetto::TracedValue"*) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedValue", align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = alloca %"class.perfetto::TracedValue", align 8
  %9 = alloca %"class.perfetto::TracedDictionary", align 8
  %10 = alloca %"class.perfetto::TracedValue", align 8
  %11 = alloca %"class.perfetto::TracedValue", align 8
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.perfetto::TracedValue", align 8
  %15 = alloca %"class.perfetto::TracedValue", align 8
  %16 = bitcast %"class.perfetto::TracedDictionary"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #8
  %17 = bitcast %"class.perfetto::TracedDictionary"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %9, %"class.perfetto::TracedValue"* %1) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %10, %"class.perfetto::TracedDictionary"* nonnull %9, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)) #8
  %18 = getelementptr inbounds %"class.printing::mojom::PageSizeMargins", %"class.printing::mojom::PageSizeMargins"* %0, i64 0, i32 0
  %19 = bitcast %"class.perfetto::TracedValue"* %10 to i8*
  %20 = bitcast %"class.perfetto::TracedValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* nonnull align 8 %19, i64 16, i1 false) #8
  %21 = load double, double* %18, align 8
  call void @_ZNO8perfetto11TracedValue11WriteDoubleEd(%"class.perfetto::TracedValue"* nonnull %7, double %21) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %11, %"class.perfetto::TracedDictionary"* nonnull %9, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #8
  %22 = getelementptr inbounds %"class.printing::mojom::PageSizeMargins", %"class.printing::mojom::PageSizeMargins"* %0, i64 0, i32 1
  %23 = bitcast %"class.perfetto::TracedValue"* %11 to i8*
  %24 = bitcast %"class.perfetto::TracedValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* nonnull align 8 %23, i64 16, i1 false) #8
  %25 = load double, double* %22, align 8
  call void @_ZNO8perfetto11TracedValue11WriteDoubleEd(%"class.perfetto::TracedValue"* nonnull %6, double %25) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %12, %"class.perfetto::TracedDictionary"* nonnull %9, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0)) #8
  %26 = getelementptr inbounds %"class.printing::mojom::PageSizeMargins", %"class.printing::mojom::PageSizeMargins"* %0, i64 0, i32 2
  %27 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  %28 = bitcast %"class.perfetto::TracedValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %27, i64 16, i1 false) #8
  %29 = load double, double* %26, align 8
  call void @_ZNO8perfetto11TracedValue11WriteDoubleEd(%"class.perfetto::TracedValue"* nonnull %5, double %29) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::TracedDictionary"* nonnull %9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)) #8
  %30 = getelementptr inbounds %"class.printing::mojom::PageSizeMargins", %"class.printing::mojom::PageSizeMargins"* %0, i64 0, i32 3
  %31 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  %32 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %31, i64 16, i1 false) #8
  %33 = load double, double* %30, align 8
  call void @_ZNO8perfetto11TracedValue11WriteDoubleEd(%"class.perfetto::TracedValue"* nonnull %4, double %33) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %14, %"class.perfetto::TracedDictionary"* nonnull %9, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0)) #8
  %34 = getelementptr inbounds %"class.printing::mojom::PageSizeMargins", %"class.printing::mojom::PageSizeMargins"* %0, i64 0, i32 4
  %35 = bitcast %"class.perfetto::TracedValue"* %14 to i8*
  %36 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* nonnull align 8 %35, i64 16, i1 false) #8
  %37 = load double, double* %34, align 8
  call void @_ZNO8perfetto11TracedValue11WriteDoubleEd(%"class.perfetto::TracedValue"* nonnull %3, double %37) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %15, %"class.perfetto::TracedDictionary"* nonnull %9, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0)) #8
  %38 = getelementptr inbounds %"class.printing::mojom::PageSizeMargins", %"class.printing::mojom::PageSizeMargins"* %0, i64 0, i32 5
  %39 = bitcast %"class.perfetto::TracedValue"* %15 to i8*
  %40 = bitcast %"class.perfetto::TracedValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* nonnull align 8 %39, i64 16, i1 false) #8
  %41 = load double, double* %38, align 8
  call void @_ZNO8perfetto11TracedValue11WriteDoubleEd(%"class.perfetto::TracedValue"* nonnull %8, double %41) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #5

declare void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedDictionary"*, i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8printing5mojom15PageSizeMargins8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #3 align 2 {
  %3 = tail call zeroext i1 @_ZN8printing5mojom8internal20PageSizeMargins_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8* %0, %"class.mojo::internal::ValidationContext"* %1) #8
  ret i1 %3
}

declare zeroext i1 @_ZN8printing5mojom8internal20PageSizeMargins_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN8printing5mojom23PageSizeMarginsDataViewENS_9StructPtrINS2_15PageSizeMarginsEEEE4ReadES3_PS6_(%"class.printing::mojom::internal::PageSizeMargins_Data"*, %"class.mojo::StructPtr"* nocapture) local_unnamed_addr #3 align 2 {
  %3 = tail call i8* @_Znwm(i64 48) #9, !noalias !2
  %4 = ptrtoint i8* %3 to i64
  %5 = getelementptr inbounds %"class.printing::mojom::internal::PageSizeMargins_Data", %"class.printing::mojom::internal::PageSizeMargins_Data"* %0, i64 0, i32 1
  %6 = bitcast double* %5 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 1
  %8 = bitcast i8* %3 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %8, align 8
  %9 = getelementptr inbounds %"class.printing::mojom::internal::PageSizeMargins_Data", %"class.printing::mojom::internal::PageSizeMargins_Data"* %0, i64 0, i32 3
  %10 = getelementptr inbounds i8, i8* %3, i64 16
  %11 = bitcast double* %9 to <2 x i64>*
  %12 = load <2 x i64>, <2 x i64>* %11, align 1
  %13 = bitcast i8* %10 to <2 x i64>*
  store <2 x i64> %12, <2 x i64>* %13, align 8
  %14 = getelementptr inbounds %"class.printing::mojom::internal::PageSizeMargins_Data", %"class.printing::mojom::internal::PageSizeMargins_Data"* %0, i64 0, i32 5
  %15 = getelementptr inbounds i8, i8* %3, i64 32
  %16 = bitcast double* %14 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %16, align 1
  %18 = bitcast i8* %15 to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %18, align 8
  %19 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.printing::mojom::PageSizeMargins"*, %"class.printing::mojom::PageSizeMargins"** %19, align 8
  store %"class.printing::mojom::PageSizeMargins"* null, %"class.printing::mojom::PageSizeMargins"** %19, align 8
  %21 = icmp eq %"class.printing::mojom::PageSizeMargins"* %20, null
  br i1 %21, label %22, label %24

22:                                               ; preds = %2
  %23 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  store i64 %4, i64* %23, align 8
  br label %31

24:                                               ; preds = %2
  %25 = bitcast %"class.printing::mojom::PageSizeMargins"* %20 to i8*
  tail call void @_ZdlPv(i8* %25) #9
  %26 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %27 = load %"class.printing::mojom::PageSizeMargins"*, %"class.printing::mojom::PageSizeMargins"** %19, align 8
  store i64 %4, i64* %26, align 8
  %28 = icmp eq %"class.printing::mojom::PageSizeMargins"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = bitcast %"class.printing::mojom::PageSizeMargins"* %27 to i8*
  tail call void @_ZdlPv(i8* %30) #9
  br label %31

31:                                               ; preds = %22, %24, %29
  ret i1 true
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZNO8perfetto11TracedValue11WriteDoubleEd(%"class.perfetto::TracedValue"*, double) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN8printing5mojom15PageSizeMargins3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZN8printing5mojom15PageSizeMargins3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
