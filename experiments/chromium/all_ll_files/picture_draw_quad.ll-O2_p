; ModuleID = '../../components/viz/common/quads/picture_draw_quad.cc'
source_filename = "../../components/viz/common/quads/picture_draw_quad.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.viz::PictureDrawQuad" = type <{ %"class.viz::ContentDrawQuadBase.base", i8, %"class.gfx::Rect", float, [4 x i8], %"class.base::flat_map", %class.scoped_refptr, i32, [4 x i8] }>
%"class.viz::ContentDrawQuadBase.base" = type <{ %"class.viz::DrawQuad.base", %"class.gfx::RectF", %"class.gfx::Size", i8, i8, i8 }>
%"class.viz::DrawQuad.base" = type <{ i32 (...)**, i32, %"class.gfx::Rect", %"class.gfx::Rect", i8, [3 x i8], %"class.viz::SharedQuadState"*, %"struct.viz::DrawQuad::Resources" }>
%"class.viz::SharedQuadState" = type <{ %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo", %"class.absl::optional", i8, [3 x i8], float, i32, i32, i8, [3 x i8], %"class.absl::optional.0", float, i8, [3 x i8] }>
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.gfx::Rect" }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%union.anon.4 = type { i64 }
%"struct.viz::DrawQuad::Resources" = type { i32, [4 x %"class.util::IdType"] }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type { i32, i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%class.scoped_refptr = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.cc::RTree", %"class.cc::DiscardableImageMap", %"class.cc::PaintOpBuffer", %"class.std::__1::vector.84", %"class.std::__1::vector.91", %"class.std::__1::vector.98", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.cc::RTree" = type <{ i64, %"struct.cc::RTree<unsigned long>::Branch", %"class.std::__1::vector.7", i8, [7 x i8] }>
%"struct.cc::RTree<unsigned long>::Branch" = type { %"struct.cc::RTree<unsigned long>::Node"*, i64, %"class.gfx::Rect" }
%"struct.cc::RTree<unsigned long>::Node" = type opaque
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.cc::RTree<unsigned long>::Node"* }
%"class.cc::DiscardableImageMap" = type { %"class.base::flat_map.14", %"class.std::__1::vector.24", %"class.base::flat_map.38", i8, i8, [6 x i8], %"class.cc::RTree.48", %"class.std::__1::vector.76" }
%"class.base::flat_map.14" = type { %"class.base::internal::flat_tree.15" }
%"class.base::internal::flat_tree.15" = type { %"class.std::__1::vector.16" }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"struct.std::__1::pair.18"*, %"struct.std::__1::pair.18"*, %"class.std::__1::__compressed_pair.19" }
%"struct.std::__1::pair.18" = type opaque
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::pair.18"* }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"class.std::__1::__compressed_pair.33" }
%"struct.cc::DiscardableImageMap::AnimatedImageMetadata" = type { i32, i32, %"class.std::__1::vector.26", i32, i32 }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.28" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.cc::FrameMetadata"* }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"* }
%"class.base::flat_map.38" = type { %"class.base::internal::flat_tree.39" }
%"class.base::internal::flat_tree.39" = type { %"class.std::__1::vector.40" }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"struct.std::__1::pair.42"*, %"struct.std::__1::pair.42"*, %"class.std::__1::__compressed_pair.43" }
%"struct.std::__1::pair.42" = type { i32, i32 }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.std::__1::pair.42"* }
%"class.cc::RTree.48" = type <{ i64, %"struct.cc::RTree<cc::DrawImage>::Branch", %"class.std::__1::vector.68", i8, [7 x i8] }>
%"struct.cc::RTree<cc::DrawImage>::Branch" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.cc::DrawImage", %"class.gfx::Rect" }
%"struct.cc::RTree<cc::DrawImage>::Node" = type opaque
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional.0", %"class.absl::optional.63", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp, %class.sk_sp.55, %"class.gfx::Rect", i32, %class.sk_sp.59, %class.sk_sp.60, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp, %class.scoped_refptr.61 }
%class.sk_sp.55 = type { %"class.cc::PaintOpBuffer"* }
%class.sk_sp.59 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.60 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.49, i32, i32 }
%class.sk_sp.49 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.50" }
%"struct.std::__1::atomic.50" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__cxx_atomic_impl.53" }
%"struct.std::__1::__cxx_atomic_impl.53" = type { %"struct.std::__1::__cxx_atomic_base_impl.54" }
%"struct.std::__1::__cxx_atomic_base_impl.54" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.scoped_refptr.61 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.62", [4 x i8] }>
%"class.base::RefCountedThreadSafe.62" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkSize = type { float, float }
%"class.absl::optional.63" = type { %"class.absl::optional_internal::optional_data.64" }
%"class.absl::optional_internal::optional_data.64" = type { %"class.absl::optional_internal::optional_data_base.65" }
%"class.absl::optional_internal::optional_data_base.65" = type { %"class.absl::optional_internal::optional_data_dtor_base.66" }
%"class.absl::optional_internal::optional_data_dtor_base.66" = type { i8, %union.anon.67 }
%union.anon.67 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.cc::RTree<cc::DrawImage>::Node"* }
%"class.std::__1::vector.76" = type { %"class.std::__1::__vector_base.77" }
%"class.std::__1::__vector_base.77" = type { %"struct.std::__1::pair.78"*, %"struct.std::__1::pair.78"*, %"class.std::__1::__compressed_pair.79" }
%"struct.std::__1::pair.78" = type opaque
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.std::__1::pair.78"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { i8* }
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.gfx::Rect"* }
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { i64*, i64*, %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { i64* }
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"class.std::__1::__compressed_pair.100" }
%"struct.cc::DisplayItemList::PairedBeginInfo" = type { i64, i64 }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"* }
%"class.viz::ContentDrawQuadBase" = type <{ %"class.viz::DrawQuad.base", %"class.gfx::RectF", %"class.gfx::Size", i8, i8, i8, i8 }>
%"class.viz::DrawQuad" = type <{ i32 (...)**, i32, %"class.gfx::Rect", %"class.gfx::Rect", i8, [3 x i8], %"class.viz::SharedQuadState"*, %"struct.viz::DrawQuad::Resources", [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::trace_event::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr.105" }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.base::trace_event::TracedValue::Writer"* }
%"class.base::trace_event::TracedValue::Writer" = type { i32 (...)** }

@_ZTVN3viz15PictureDrawQuadE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::PictureDrawQuad"*)* @_ZN3viz15PictureDrawQuadD2Ev to i8*), i8* bitcast (void (%"class.viz::PictureDrawQuad"*)* @_ZN3viz15PictureDrawQuadD0Ev to i8*), i8* bitcast (void (%"class.viz::PictureDrawQuad"*, %"class.base::trace_event::TracedValue"*)* @_ZNK3viz15PictureDrawQuad11ExtendValueEPN4base11trace_event11TracedValueE to i8*)] }, align 8
@.str = private unnamed_addr constant [13 x i8] c"content_rect\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"contents_scale\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"texture_format\00", align 1
@_ZTVN3viz19ContentDrawQuadBaseE = external unnamed_addr constant { [5 x i8*] }, align 8

@_ZN3viz15PictureDrawQuadC1Ev = hidden unnamed_addr alias void (%"class.viz::PictureDrawQuad"*), void (%"class.viz::PictureDrawQuad"*)* @_ZN3viz15PictureDrawQuadC2Ev
@_ZN3viz15PictureDrawQuadC1ERKS0_ = hidden unnamed_addr alias void (%"class.viz::PictureDrawQuad"*, %"class.viz::PictureDrawQuad"*), void (%"class.viz::PictureDrawQuad"*, %"class.viz::PictureDrawQuad"*)* @_ZN3viz15PictureDrawQuadC2ERKS0_
@_ZN3viz15PictureDrawQuadD1Ev = hidden unnamed_addr alias void (%"class.viz::PictureDrawQuad"*), void (%"class.viz::PictureDrawQuad"*)* @_ZN3viz15PictureDrawQuadD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz15PictureDrawQuadC2Ev(%"class.viz::PictureDrawQuad"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.viz::PictureDrawQuad"* %0 to %"class.viz::ContentDrawQuadBase"*
  tail call void @_ZN3viz19ContentDrawQuadBaseC2Ev(%"class.viz::ContentDrawQuadBase"* %2) #8
  %3 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3viz15PictureDrawQuadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 2
  %5 = bitcast %"class.gfx::Rect"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 16, i1 false) #8
  %6 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 5
  %7 = bitcast %"class.base::flat_map"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false)
  ret void
}

declare void @_ZN3viz19ContentDrawQuadBaseC2Ev(%"class.viz::ContentDrawQuadBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz15PictureDrawQuadC2ERKS0_(%"class.viz::PictureDrawQuad"*, %"class.viz::PictureDrawQuad"* dereferenceable(168)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::PictureDrawQuad"* %0 to %"class.viz::DrawQuad"*
  %4 = bitcast %"class.viz::PictureDrawQuad"* %1 to %"class.viz::DrawQuad"*
  tail call void @_ZN3viz8DrawQuadC2ERKS0_(%"class.viz::DrawQuad"* %3, %"class.viz::DrawQuad"* dereferenceable(80) %4) #8
  %5 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3viz19ContentDrawQuadBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.gfx::RectF"* %6 to i8*
  %9 = bitcast %"class.gfx::RectF"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 27, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3viz15PictureDrawQuadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %10 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %1, i64 0, i32 2
  %12 = bitcast %"class.gfx::Rect"* %10 to i8*
  %13 = bitcast %"class.gfx::Rect"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 20, i1 false)
  %14 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 5
  %15 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %1, i64 0, i32 5
  %16 = bitcast %"class.base::flat_map"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #8
  %17 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %18 = bitcast %"struct.std::__1::pair"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.base::flat_map"* %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 4
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %52, label %25

25:                                               ; preds = %2
  %26 = icmp ugt i64 %23, 1152921504606846975
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.base::flat_map"* %14 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %28) #9
  unreachable

29:                                               ; preds = %25
  %30 = tail call i8* @_Znwm(i64 %22) #10
  %31 = bitcast i8* %30 to %"struct.std::__1::pair"*
  %32 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %33 = bitcast %"struct.std::__1::pair"** %32 to i8**
  store i8* %30, i8** %33, align 8
  %34 = bitcast %"class.base::flat_map"* %14 to i8**
  store i8* %30, i8** %34, align 8
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %31, i64 %23
  %36 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::pair"* %35, %"struct.std::__1::pair"** %36, align 8
  %37 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %37, align 8
  %39 = load i64, i64* %18, align 8
  %40 = bitcast %"struct.std::__1::pair"** %32 to i64*
  %41 = ptrtoint i8* %30 to i64
  %42 = ptrtoint %"struct.std::__1::pair"* %38 to i64
  %43 = sub i64 %39, %42
  %44 = icmp sgt i64 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %29
  %46 = lshr exact i64 %43, 4
  %47 = bitcast %"struct.std::__1::pair"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* align 8 %47, i64 %43, i1 false) #8
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %31, i64 %46
  %49 = ptrtoint %"struct.std::__1::pair"* %48 to i64
  br label %50

50:                                               ; preds = %45, %29
  %51 = phi i64 [ %49, %45 ], [ %41, %29 ]
  store i64 %51, i64* %40, align 8
  br label %52

52:                                               ; preds = %2, %50
  %53 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %1, i64 0, i32 6, i32 0
  %54 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %53, align 8
  %55 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 6, i32 0
  store %"class.cc::DisplayItemList"* %54, %"class.cc::DisplayItemList"** %55, align 8
  %56 = icmp eq %"class.cc::DisplayItemList"* %54, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw add i32* %58, i32 1 monotonic
  br label %60

60:                                               ; preds = %52, %57
  %61 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 7
  %62 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %1, i64 0, i32 7
  %63 = load i32, i32* %62, align 8
  store i32 %63, i32* %61, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz15PictureDrawQuadD2Ev(%"class.viz::PictureDrawQuad"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3viz15PictureDrawQuadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 6, i32 0
  %4 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %3, align 8
  %5 = icmp eq %"class.cc::DisplayItemList"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN2cc15DisplayItemListD1Ev(%"class.cc::DisplayItemList"* nonnull %4) #8
  %11 = bitcast %"class.cc::DisplayItemList"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #10
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %13, align 8
  %15 = icmp eq %"struct.std::__1::pair"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = ptrtoint %"struct.std::__1::pair"* %14 to i64
  %18 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast %"struct.std::__1::pair"** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"struct.std::__1::pair"* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %12, %16
  %22 = bitcast %"class.viz::PictureDrawQuad"* %0 to %"class.viz::ContentDrawQuadBase"*
  tail call void @_ZN3viz19ContentDrawQuadBaseD2Ev(%"class.viz::ContentDrawQuadBase"* %22) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3viz19ContentDrawQuadBaseD2Ev(%"class.viz::ContentDrawQuadBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz15PictureDrawQuadD0Ev(%"class.viz::PictureDrawQuad"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3viz15PictureDrawQuadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 6, i32 0
  %4 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %3, align 8
  %5 = icmp eq %"class.cc::DisplayItemList"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN2cc15DisplayItemListD1Ev(%"class.cc::DisplayItemList"* nonnull %4) #8
  %11 = bitcast %"class.cc::DisplayItemList"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #10
  br label %12

12:                                               ; preds = %10, %6, %1
  %13 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %13, align 8
  %15 = icmp eq %"struct.std::__1::pair"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = ptrtoint %"struct.std::__1::pair"* %14 to i64
  %18 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast %"struct.std::__1::pair"** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"struct.std::__1::pair"* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %12, %16
  %22 = bitcast %"class.viz::PictureDrawQuad"* %0 to %"class.viz::ContentDrawQuadBase"*
  tail call void @_ZN3viz19ContentDrawQuadBaseD2Ev(%"class.viz::ContentDrawQuadBase"* %22) #8
  %23 = bitcast %"class.viz::PictureDrawQuad"* %0 to i8*
  tail call void @_ZdlPv(i8* %23) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz15PictureDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_bRKNS4_5RectFERKNS4_4SizeEbNS_14ResourceFormatES7_fN4base8flat_mapIimNSt3__14lessIvEENSH_6vectorINSH_4pairIimEENSH_9allocatorISM_EEEEEE13scoped_refptrIN2cc15DisplayItemListEE(%"class.viz::PictureDrawQuad"*, %"class.viz::SharedQuadState"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), i1 zeroext, %"class.gfx::RectF"* dereferenceable(16), %"class.gfx::Size"* dereferenceable(8), i1 zeroext, i32, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), float, %"class.base::flat_map"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %14 = bitcast %"class.viz::PictureDrawQuad"* %0 to %"class.viz::ContentDrawQuadBase"*
  tail call void @_ZN3viz19ContentDrawQuadBase6SetNewEPKNS_15SharedQuadStateENS_8DrawQuad8MaterialERKN3gfx4RectES9_bRKNS6_5RectFERKNS6_4SizeEbbb(%"class.viz::ContentDrawQuadBase"* %14, %"class.viz::SharedQuadState"* %1, i32 2, %"class.gfx::Rect"* dereferenceable(16) %2, %"class.gfx::Rect"* dereferenceable(16) %3, i1 zeroext %4, %"class.gfx::RectF"* dereferenceable(16) %5, %"class.gfx::Size"* dereferenceable(8) %6, i1 zeroext false, i1 zeroext %7, i1 zeroext false) #8
  %15 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 2
  %16 = bitcast %"class.gfx::Rect"* %15 to i8*
  %17 = bitcast %"class.gfx::Rect"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 4 %17, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 3
  store float %10, float* %18, align 8
  %19 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 5
  %20 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %20, align 8
  %22 = icmp eq %"struct.std::__1::pair"* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %13
  %24 = ptrtoint %"struct.std::__1::pair"* %21 to i64
  %25 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %26 = bitcast %"struct.std::__1::pair"** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast %"struct.std::__1::pair"* %21 to i8*
  tail call void @_ZdlPv(i8* %27) #10
  %28 = bitcast %"class.base::flat_map"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #8
  br label %29

29:                                               ; preds = %13, %23
  %30 = bitcast %"class.base::flat_map"* %11 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.base::flat_map"* %19 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %11, i64 0, i32 0, i32 0, i32 0, i32 1
  %34 = bitcast %"struct.std::__1::pair"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %37 = bitcast %"struct.std::__1::pair"** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %11, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast %"struct.std::__1::pair"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast %"struct.std::__1::pair"** %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = bitcast %"class.base::flat_map"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #8
  %44 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 6
  %45 = bitcast %class.scoped_refptr* %44 to i64*
  %46 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %44, i64 0, i32 0
  %47 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %46, align 8
  store i64 %12, i64* %45, align 8
  %48 = icmp eq %"class.cc::DisplayItemList"* %47, null
  br i1 %48, label %55, label %49

49:                                               ; preds = %29
  %50 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw sub i32* %50, i32 1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  tail call void @_ZN2cc15DisplayItemListD1Ev(%"class.cc::DisplayItemList"* nonnull %47) #8
  %54 = bitcast %"class.cc::DisplayItemList"* %47 to i8*
  tail call void @_ZdlPv(i8* %54) #10
  br label %55

55:                                               ; preds = %53, %49, %29
  %56 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 7
  store i32 %8, i32* %56, align 8
  ret void
}

declare void @_ZN3viz19ContentDrawQuadBase6SetNewEPKNS_15SharedQuadStateENS_8DrawQuad8MaterialERKN3gfx4RectES9_bRKNS6_5RectFERKNS6_4SizeEbbb(%"class.viz::ContentDrawQuadBase"*, %"class.viz::SharedQuadState"*, i32, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), i1 zeroext, %"class.gfx::RectF"* dereferenceable(16), %"class.gfx::Size"* dereferenceable(8), i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz15PictureDrawQuad6SetAllEPKNS_15SharedQuadStateERKN3gfx4RectES7_bRKNS4_5RectFERKNS4_4SizeEbNS_14ResourceFormatES7_fN4base8flat_mapIimNSt3__14lessIvEENSH_6vectorINSH_4pairIimEENSH_9allocatorISM_EEEEEE13scoped_refptrIN2cc15DisplayItemListEE(%"class.viz::PictureDrawQuad"*, %"class.viz::SharedQuadState"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), i1 zeroext, %"class.gfx::RectF"* dereferenceable(16), %"class.gfx::Size"* dereferenceable(8), i1 zeroext, i32, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), float, %"class.base::flat_map"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %14 = bitcast %"class.viz::PictureDrawQuad"* %0 to %"class.viz::ContentDrawQuadBase"*
  tail call void @_ZN3viz19ContentDrawQuadBase6SetAllEPKNS_15SharedQuadStateENS_8DrawQuad8MaterialERKN3gfx4RectES9_bRKNS6_5RectFERKNS6_4SizeEbbb(%"class.viz::ContentDrawQuadBase"* %14, %"class.viz::SharedQuadState"* %1, i32 2, %"class.gfx::Rect"* dereferenceable(16) %2, %"class.gfx::Rect"* dereferenceable(16) %3, i1 zeroext %4, %"class.gfx::RectF"* dereferenceable(16) %5, %"class.gfx::Size"* dereferenceable(8) %6, i1 zeroext false, i1 zeroext %7, i1 zeroext false) #8
  %15 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 2
  %16 = bitcast %"class.gfx::Rect"* %15 to i8*
  %17 = bitcast %"class.gfx::Rect"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 4 %17, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 3
  store float %10, float* %18, align 8
  %19 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 5
  %20 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %20, align 8
  %22 = icmp eq %"struct.std::__1::pair"* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %13
  %24 = ptrtoint %"struct.std::__1::pair"* %21 to i64
  %25 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %26 = bitcast %"struct.std::__1::pair"** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast %"struct.std::__1::pair"* %21 to i8*
  tail call void @_ZdlPv(i8* %27) #10
  %28 = bitcast %"class.base::flat_map"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #8
  br label %29

29:                                               ; preds = %13, %23
  %30 = bitcast %"class.base::flat_map"* %11 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.base::flat_map"* %19 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %11, i64 0, i32 0, i32 0, i32 0, i32 1
  %34 = bitcast %"struct.std::__1::pair"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %37 = bitcast %"struct.std::__1::pair"** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %11, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast %"struct.std::__1::pair"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast %"struct.std::__1::pair"** %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = bitcast %"class.base::flat_map"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #8
  %44 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 6
  %45 = bitcast %class.scoped_refptr* %44 to i64*
  %46 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %44, i64 0, i32 0
  %47 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %46, align 8
  store i64 %12, i64* %45, align 8
  %48 = icmp eq %"class.cc::DisplayItemList"* %47, null
  br i1 %48, label %55, label %49

49:                                               ; preds = %29
  %50 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw sub i32* %50, i32 1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  tail call void @_ZN2cc15DisplayItemListD1Ev(%"class.cc::DisplayItemList"* nonnull %47) #8
  %54 = bitcast %"class.cc::DisplayItemList"* %47 to i8*
  tail call void @_ZdlPv(i8* %54) #10
  br label %55

55:                                               ; preds = %53, %49, %29
  %56 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 7
  store i32 %8, i32* %56, align 8
  ret void
}

declare void @_ZN3viz19ContentDrawQuadBase6SetAllEPKNS_15SharedQuadStateENS_8DrawQuad8MaterialERKN3gfx4RectES9_bRKNS6_5RectFERKNS6_4SizeEbbb(%"class.viz::ContentDrawQuadBase"*, %"class.viz::SharedQuadState"*, i32, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), i1 zeroext, %"class.gfx::RectF"* dereferenceable(16), %"class.gfx::Size"* dereferenceable(8), i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.viz::PictureDrawQuad"* @_ZN3viz15PictureDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* readnone) local_unnamed_addr #5 align 2 {
  %2 = bitcast %"class.viz::DrawQuad"* %0 to %"class.viz::PictureDrawQuad"*
  ret %"class.viz::PictureDrawQuad"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3viz15PictureDrawQuad11ExtendValueEPN4base11trace_event11TracedValueE(%"class.viz::PictureDrawQuad"*, %"class.base::trace_event::TracedValue"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::PictureDrawQuad"* %0 to %"class.viz::ContentDrawQuadBase"*
  tail call void @_ZNK3viz19ContentDrawQuadBase11ExtendValueEPN4base11trace_event11TracedValueE(%"class.viz::ContentDrawQuadBase"* %3, %"class.base::trace_event::TracedValue"* %1) #8
  %4 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 2
  tail call void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx4RectEPN4base11trace_event11TracedValueE(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), %"class.gfx::Rect"* dereferenceable(16) %4, %"class.base::trace_event::TracedValue"* %1) #8
  %5 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 3
  %6 = load float, float* %5, align 8
  %7 = fpext float %6 to double
  tail call void @_ZN4base11trace_event11TracedValue9SetDoubleEPKcd(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), double %7) #8
  %8 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %0, i64 0, i32 7
  %9 = load i32, i32* %8, align 8
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32 %9) #8
  ret void
}

declare void @_ZNK3viz19ContentDrawQuadBase11ExtendValueEPN4base11trace_event11TracedValueE(%"class.viz::ContentDrawQuadBase"*, %"class.base::trace_event::TracedValue"*) unnamed_addr #1

declare void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx4RectEPN4base11trace_event11TracedValueE(i8*, %"class.gfx::Rect"* dereferenceable(16), %"class.base::trace_event::TracedValue"*) local_unnamed_addr #1

declare void @_ZN4base11trace_event11TracedValue9SetDoubleEPKcd(%"class.base::trace_event::TracedValue"*, i8*, double) local_unnamed_addr #1

declare void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN3viz8DrawQuadC2ERKS0_(%"class.viz::DrawQuad"*, %"class.viz::DrawQuad"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN2cc15DisplayItemListD1Ev(%"class.cc::DisplayItemList"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
