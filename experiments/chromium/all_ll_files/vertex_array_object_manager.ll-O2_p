; ModuleID = '../../gpu/command_buffer/client/vertex_array_object_manager.cc'
source_filename = "../../gpu/command_buffer/client/vertex_array_object_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gpu::gles2::VertexArrayObject" = type { i32, i32, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gpu::gles2::VertexArrayObject::VertexAttrib"*, %"class.gpu::gles2::VertexArrayObject::VertexAttrib"*, %"class.std::__1::__compressed_pair" }
%"class.gpu::gles2::VertexArrayObject::VertexAttrib" = type <{ i8, [3 x i8], i32, i32, i32, i8, [7 x i8], i8*, i32, i32, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* }
%"class.gpu::gles2::VertexArrayObjectManager" = type <{ i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.gpu::gles2::VertexArrayObject"*, %"class.gpu::gles2::VertexArrayObject"*, %"class.std::__1::unordered_map", i8, [7 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i8* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.4", %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.20", [4 x i8] }>
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { float }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %"class.gpu::gles2::VertexArrayObject"* }
%"struct.std::__1::pair.24" = type { i32, %"class.gpu::gles2::VertexArrayObject"* }
%"class.std::__1::unique_ptr.371" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373", %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.16"*, i8, [7 x i8] }>
%"class.std::__1::allocator.16" = type { i8 }
%"class.gpu::gles2::GLES2Implementation" = type { %"class.gpu::gles2::GLES2Interface", %"class.gpu::ImplementationBase", %"class.gpu::gles2::QueryTrackerClient", %"class.gpu::gles2::GLES2Util", %"class.gpu::gles2::GLES2CmdHelper"*, %"class.std::__1::basic_string", %"class.gpu::gles2::DebugMarkerManager", %"class.std::__1::basic_string", %"class.std::__1::queue", i32, %"struct.gpu::gles2::GLES2Implementation::GLStaticState", %"struct.gpu::gles2::ClientContextState", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.std::__1::unique_ptr.130", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.std::__1::unique_ptr.136", [2 x i32], i32, %"class.gpu::LogSettings", i8, i8, i32, i32, i32, i32, %"class.std::__1::set", %"class.std::__1::map.151", %"class.std::__1::unordered_map.162", %"class.std::__1::map.186", %class.scoped_refptr.195, %"class.gpu::gles2::ShareGroupContextData", [5 x %"class.std::__1::unique_ptr.254"], %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.290", %"class.absl::optional", %"class.absl::optional.320", %"class.base::RepeatingCallback", i8, %"class.std::__1::deque", i32, i8, i8*, %"class.std::__1::vector.336", i64, %"class.base::flat_map.343", %"class.base::flat_map.353", %"class.std::__1::basic_string", i8, i32, %"class.base::WeakPtrFactory.363" }
%"class.gpu::gles2::GLES2Interface" = type { %"class.gpu::InterfaceBase" }
%"class.gpu::InterfaceBase" = type { i32 (...)** }
%"class.gpu::ImplementationBase" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.gpu::ContextSupport", %"class.gpu::GpuControlClient", %"class.gpu::TransferBufferInterface"*, %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.58", %"class.base::OnceCallback", i8, %"class.gpu::GpuControl"*, %"struct.gpu::Capabilities", %"class.gpu::CommandBufferHelper"*, %"class.base::WeakPtrFactory" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.gpu::ContextSupport" = type { i32 (...)** }
%"class.gpu::GpuControlClient" = type { i32 (...)** }
%"class.gpu::TransferBufferInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.gpu::MappedMemoryManager"* }
%"class.gpu::MappedMemoryManager" = type <{ i32, [4 x i8], %"class.gpu::CommandBufferHelper"*, %"class.std::__1::vector.35", i64, i64, i64, i32, [4 x i8] }>
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"*, %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.gpu::MemoryChunk"* }
%"class.gpu::MemoryChunk" = type { i32, %class.scoped_refptr, %"class.gpu::FencedAllocatorWrapper" }
%class.scoped_refptr = type { %"class.gpu::Buffer"* }
%"class.gpu::Buffer" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.std::__1::unique_ptr.29", i8*, i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.gpu::BufferBacking"* }
%"class.gpu::BufferBacking" = type { i32 (...)** }
%"class.gpu::FencedAllocatorWrapper" = type { %"class.gpu::FencedAllocator", i8* }
%"class.gpu::FencedAllocator" = type <{ %"class.gpu::CommandBufferHelper"*, %"class.std::__1::vector.40", i32, [4 x i8] }>
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"struct.gpu::FencedAllocator::Block"*, %"struct.gpu::FencedAllocator::Block"*, %"class.std::__1::__compressed_pair.42" }
%"struct.gpu::FencedAllocator::Block" = type { i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.gpu::FencedAllocator::Block"* }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.std::__1::unique_ptr.37"* }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.gpu::gles2::QueryTracker"* }
%"class.gpu::gles2::QueryTracker" = type <{ %"class.std::__1::unordered_map.61", %"class.base::flat_map", %"class.gpu::gles2::QuerySyncManager", %"class.gpu::MappedMemoryManager"*, i32, i32, %"struct.gpu::gles2::DisjointValueSync"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.61" = type { %"class.std::__1::__hash_table.62" }
%"class.std::__1::__hash_table.62" = type <{ %"class.std::__1::unique_ptr.63", %"class.std::__1::__compressed_pair.73", %"class.std::__1::__compressed_pair.78", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65", %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.std::__1::__hash_node_base.66"** }
%"struct.std::__1::__hash_node_base.66" = type { %"struct.std::__1::__hash_node_base.66"* }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.std::__1::__bucket_list_deallocator.68" }
%"class.std::__1::__bucket_list_deallocator.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.std::__1::__hash_node_base.66" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.85" }
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { %"struct.std::__1::pair.87"*, %"struct.std::__1::pair.87"*, %"class.std::__1::__compressed_pair.88" }
%"struct.std::__1::pair.87" = type opaque
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::pair.87"* }
%"class.gpu::gles2::QuerySyncManager" = type { %"class.gpu::MappedMemoryManager"*, %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.93"*, i64 }
%"class.std::__1::unique_ptr.93" = type opaque
%"struct.gpu::gles2::DisjointValueSync" = type { i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.97 }
%class.scoped_refptr.97 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.98", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.98" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.gpu::GpuControl" = type opaque
%"struct.gpu::Capabilities" = type { %"struct.gpu::Capabilities::PerStagePrecisions", %"struct.gpu::Capabilities::PerStagePrecisions", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i64, float, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, %"struct.gpu::GpuMemoryBufferFormatSet", %"class.std::__1::vector.99" }
%"struct.gpu::Capabilities::PerStagePrecisions" = type { %"struct.gpu::Capabilities::ShaderPrecision", %"struct.gpu::Capabilities::ShaderPrecision", %"struct.gpu::Capabilities::ShaderPrecision", %"struct.gpu::Capabilities::ShaderPrecision", %"struct.gpu::Capabilities::ShaderPrecision", %"struct.gpu::Capabilities::ShaderPrecision" }
%"struct.gpu::Capabilities::ShaderPrecision" = type { i32, i32, i32 }
%"struct.gpu::GpuMemoryBufferFormatSet" = type { i32 }
%"class.std::__1::vector.99" = type { %"class.std::__1::__vector_base.100" }
%"class.std::__1::__vector_base.100" = type { %"struct.gfx::BufferUsageAndFormat"*, %"struct.gfx::BufferUsageAndFormat"*, %"class.std::__1::__compressed_pair.101" }
%"struct.gfx::BufferUsageAndFormat" = type { i32, i32 }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.gfx::BufferUsageAndFormat"* }
%"class.gpu::CommandBufferHelper" = type <{ i32 (...)**, %"class.gpu::CommandBuffer"*, i32, i32, %class.scoped_refptr, %"union.gpu::CommandBufferEntry"*, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i32, i8, i8, i8, i8, i32, i32, %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.gpu::CommandBuffer" = type { i32 (...)** }
%"union.gpu::CommandBufferEntry" = type { %"struct.gpu::CommandHeader" }
%"struct.gpu::CommandHeader" = type { i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.106 }
%class.scoped_refptr.106 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.107", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.107" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.108" }
%"struct.std::__1::atomic.108" = type { %"struct.std::__1::__atomic_base.109" }
%"struct.std::__1::__atomic_base.109" = type { %"struct.std::__1::__atomic_base.110" }
%"struct.std::__1::__atomic_base.110" = type { %"struct.std::__1::__cxx_atomic_impl.111" }
%"struct.std::__1::__cxx_atomic_impl.111" = type { %"struct.std::__1::__cxx_atomic_base_impl.112" }
%"struct.std::__1::__cxx_atomic_base_impl.112" = type { i8 }
%"class.gpu::gles2::QueryTrackerClient" = type { i32 (...)** }
%"class.gpu::gles2::GLES2Util" = type { i32, i32 }
%"class.gpu::gles2::DebugMarkerManager" = type { %"class.std::__1::stack", %"class.std::__1::basic_string" }
%"class.std::__1::stack" = type { %"class.base::circular_deque.118" }
%"class.base::circular_deque.118" = type { %"class.base::internal::VectorBuffer.119", i64, i64 }
%"class.base::internal::VectorBuffer.119" = type { %"class.gpu::gles2::DebugMarkerManager::Group"*, i64 }
%"class.gpu::gles2::DebugMarkerManager::Group" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::queue" = type { %"class.base::circular_deque.120" }
%"class.base::circular_deque.120" = type { %"class.base::internal::VectorBuffer.121", i64, i64 }
%"class.base::internal::VectorBuffer.121" = type { i32*, i64 }
%"struct.gpu::gles2::GLES2Implementation::GLStaticState" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.122", %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.gpu::gles2::ClientContextState" = type { %"struct.gpu::gles2::ClientContextState::EnableFlags", i32, i32, i32, i32 }
%"struct.gpu::gles2::ClientContextState::EnableFlags" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.gpu::gles2::GLES2Implementation::TextureUnit"* }
%"struct.gpu::gles2::GLES2Implementation::TextureUnit" = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.gpu::gles2::VertexArrayObjectManager"* }
%"class.gpu::LogSettings" = type { i8 }
%"class.std::__1::set" = type { %"class.std::__1::__tree.142" }
%"class.std::__1::__tree.142" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.143", %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::map.151" = type { %"class.std::__1::__tree.152" }
%"class.std::__1::__tree.152" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.153", %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unordered_map.162" = type { %"class.std::__1::__hash_table.163" }
%"class.std::__1::__hash_table.163" = type <{ %"class.std::__1::unique_ptr.164", %"class.std::__1::__compressed_pair.174", %"class.std::__1::__compressed_pair.179", %"class.std::__1::__compressed_pair.182", [4 x i8] }>
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166", %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"struct.std::__1::__hash_node_base.167"** }
%"struct.std::__1::__hash_node_base.167" = type { %"struct.std::__1::__hash_node_base.167"* }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.std::__1::__bucket_list_deallocator.169" }
%"class.std::__1::__bucket_list_deallocator.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"struct.std::__1::__hash_node_base.167" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::map.186" = type { %"class.std::__1::__tree.187" }
%"class.std::__1::__tree.187" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.188", %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%class.scoped_refptr.195 = type { %"class.gpu::gles2::ShareGroup"* }
%"class.gpu::gles2::ShareGroup" = type <{ %"class.base::RefCountedThreadSafe.196", [4 x i8], [6 x %"class.std::__1::unique_ptr.197"], [1 x %"class.std::__1::unique_ptr.203"], %"class.std::__1::unique_ptr.209", %"class.gpu::ClientDiscardableTextureManager", i8, [7 x i8], i64, %"class.base::Lock", i8, [7 x i8] }>
%"class.base::RefCountedThreadSafe.196" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.gpu::gles2::IdHandlerInterface"* }
%"class.gpu::gles2::IdHandlerInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.gpu::gles2::RangeIdHandlerInterface"* }
%"class.gpu::gles2::RangeIdHandlerInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.gpu::gles2::ProgramInfoManager"* }
%"class.gpu::gles2::ProgramInfoManager" = type opaque
%"class.gpu::ClientDiscardableTextureManager" = type { %"class.base::Lock", %"class.std::__1::map.215", %"class.gpu::ClientDiscardableManager" }
%"class.std::__1::map.215" = type { %"class.std::__1::__tree.216" }
%"class.std::__1::__tree.216" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.217", %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.gpu::ClientDiscardableManager" = type { i32, i64, i32, %"class.std::__1::vector.225", %"class.std::__1::map.233", %"class.std::__1::queue.244" }
%"class.std::__1::vector.225" = type { %"class.std::__1::__vector_base.226" }
%"class.std::__1::__vector_base.226" = type { %"class.std::__1::unique_ptr.227"*, %"class.std::__1::unique_ptr.227"*, %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::unique_ptr.227" = type opaque
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.std::__1::unique_ptr.227"* }
%"class.std::__1::map.233" = type { %"class.std::__1::__tree.234" }
%"class.std::__1::__tree.234" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.235", %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::queue.244" = type { %"class.base::circular_deque.245" }
%"class.base::circular_deque.245" = type { %"class.base::internal::VectorBuffer.246", i64, i64 }
%"class.base::internal::VectorBuffer.246" = type { %"class.gpu::ClientDiscardableHandle"*, i64 }
%"class.gpu::ClientDiscardableHandle" = type { %"class.gpu::DiscardableHandleBase" }
%"class.gpu::DiscardableHandleBase" = type { %class.scoped_refptr, i32, i32 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.gpu::gles2::ShareGroupContextData" = type { [6 x %"struct.gpu::gles2::ShareGroupContextData::IdHandlerData"] }
%"struct.gpu::gles2::ShareGroupContextData::IdHandlerData" = type <{ %"class.std::__1::vector.247", i32, [4 x i8] }>
%"class.std::__1::vector.247" = type { %"class.std::__1::__vector_base.248" }
%"class.std::__1::__vector_base.248" = type { i32*, i32*, %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { i32* }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.gpu::IdAllocator"* }
%"class.gpu::IdAllocator" = type opaque
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.gpu::gles2::BufferTracker"* }
%"class.gpu::gles2::BufferTracker" = type { %"class.gpu::MappedMemoryManager"*, %"class.std::__1::unordered_map.263" }
%"class.std::__1::unordered_map.263" = type { %"class.std::__1::__hash_table.264" }
%"class.std::__1::__hash_table.264" = type <{ %"class.std::__1::unique_ptr.265", %"class.std::__1::__compressed_pair.275", %"class.std::__1::__compressed_pair.280", %"class.std::__1::__compressed_pair.283", [4 x i8] }>
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267", %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"struct.std::__1::__hash_node_base.268"** }
%"struct.std::__1::__hash_node_base.268" = type { %"struct.std::__1::__hash_node_base.268"* }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.std::__1::__bucket_list_deallocator.270" }
%"class.std::__1::__bucket_list_deallocator.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"struct.std::__1::__hash_node_base.268" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.gpu::gles2::ReadbackBufferShadowTracker"* }
%"class.gpu::gles2::ReadbackBufferShadowTracker" = type { %"class.base::flat_map.293", %"class.std::__1::vector.309", i64, %"class.gpu::MappedMemoryManager"*, %"class.gpu::gles2::GLES2CmdHelper"* }
%"class.base::flat_map.293" = type { %"class.base::internal::flat_tree.294" }
%"class.base::internal::flat_tree.294" = type { %"class.std::__1::vector.295" }
%"class.std::__1::vector.295" = type { %"class.std::__1::__vector_base.296" }
%"class.std::__1::__vector_base.296" = type { %"struct.std::__1::pair.297"*, %"struct.std::__1::pair.297"*, %"class.std::__1::__compressed_pair.304" }
%"struct.std::__1::pair.297" = type { i32, %"class.std::__1::unique_ptr.298" }
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.gpu::gles2::ReadbackBufferShadowTracker::Buffer"* }
%"class.gpu::gles2::ReadbackBufferShadowTracker::Buffer" = type <{ %"class.base::SupportsWeakPtr", i32, [4 x i8], %"class.gpu::gles2::ReadbackBufferShadowTracker"*, i32, i32, i8*, i64, i64, i32, i8, [3 x i8] }>
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"struct.std::__1::pair.297"* }
%"class.std::__1::vector.309" = type { %"class.std::__1::__vector_base.310" }
%"class.std::__1::__vector_base.310" = type { %"class.base::WeakPtr"*, %"class.base::WeakPtr"*, %"class.std::__1::__compressed_pair.311" }
%"class.base::WeakPtr" = type opaque
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.base::WeakPtr"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.319 }
%union.anon.319 = type { %"class.gpu::ScopedMappedMemoryPtr" }
%"class.gpu::ScopedMappedMemoryPtr" = type { i8*, i32, i32, i32, i8, %"class.gpu::CommandBufferHelper"*, %"class.gpu::MappedMemoryManager"* }
%"class.absl::optional.320" = type { %"class.absl::optional_internal::optional_data.321" }
%"class.absl::optional_internal::optional_data.321" = type { %"class.absl::optional_internal::optional_data_base.322" }
%"class.absl::optional_internal::optional_data_base.322" = type { %"class.absl::optional_internal::optional_data_dtor_base.323" }
%"class.absl::optional_internal::optional_data_dtor_base.323" = type { i8, %union.anon.324 }
%union.anon.324 = type { %"class.gpu::ScopedTransferBufferPtr" }
%"class.gpu::ScopedTransferBufferPtr" = type { i8*, i32, %"class.gpu::CommandBufferHelper"*, %"class.gpu::TransferBufferInterface"* }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.332" }
%"struct.std::__1::__split_buffer" = type { %"struct.gpu::gles2::GLES2Implementation::DeferredErrorCallback"**, %"struct.gpu::gles2::GLES2Implementation::DeferredErrorCallback"**, %"struct.gpu::gles2::GLES2Implementation::DeferredErrorCallback"**, %"class.std::__1::__compressed_pair.327" }
%"struct.gpu::gles2::GLES2Implementation::DeferredErrorCallback" = type <{ %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"struct.gpu::gles2::GLES2Implementation::DeferredErrorCallback"** }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::vector.336" = type { %"class.std::__1::__vector_base.337" }
%"class.std::__1::__vector_base.337" = type { i8**, i8**, %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { i8** }
%"class.base::flat_map.343" = type { %"class.base::internal::flat_tree.344" }
%"class.base::internal::flat_tree.344" = type { %"class.std::__1::vector.345" }
%"class.std::__1::vector.345" = type { %"class.std::__1::__vector_base.346" }
%"class.std::__1::__vector_base.346" = type { %"struct.std::__1::pair.347"*, %"struct.std::__1::pair.347"*, %"class.std::__1::__compressed_pair.348" }
%"struct.std::__1::pair.347" = type opaque
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"struct.std::__1::pair.347"* }
%"class.base::flat_map.353" = type { %"class.base::internal::flat_tree.354" }
%"class.base::internal::flat_tree.354" = type { %"class.std::__1::vector.355" }
%"class.std::__1::vector.355" = type { %"class.std::__1::__vector_base.356" }
%"class.std::__1::__vector_base.356" = type { %"struct.std::__1::pair.357"*, %"struct.std::__1::pair.357"*, %"class.std::__1::__compressed_pair.358" }
%"struct.std::__1::pair.357" = type opaque
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"struct.std::__1::pair.357"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::WeakPtrFactory.363" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.gpu::gles2::GLES2CmdHelper" = type { %"class.gpu::CommandBufferHelper.base", [4 x i8] }
%"class.gpu::CommandBufferHelper.base" = type <{ i32 (...)**, %"class.gpu::CommandBuffer"*, i32, i32, %class.scoped_refptr, %"union.gpu::CommandBufferEntry"*, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i32, i8, i8, i8, i8, i32, i32, %"class.base::TimeTicks", i32 }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN3gpu5gles217VertexArrayObject12VertexAttribENS_9allocatorIS4_EEE8__appendEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN3gpu5gles217VertexArrayObjectEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJNS_4pairIjS5_EEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN3gpu5gles217VertexArrayObjectEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN3gpu5gles217VertexArrayObjectEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN3gpu5gles217VertexArrayObjectEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE = comdat any

@.str = private unnamed_addr constant [56 x i8] c"client side arrays not allowed with vertex array object\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"size overflow for client side arrays\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"index too large.\00", align 1
@.str.3 = private unnamed_addr constant [43 x i8] c"size overflow for client side index arrays\00", align 1

@_ZN3gpu5gles217VertexArrayObjectC1Ej = hidden unnamed_addr alias void (%"class.gpu::gles2::VertexArrayObject"*, i32), void (%"class.gpu::gles2::VertexArrayObject"*, i32)* @_ZN3gpu5gles217VertexArrayObjectC2Ej
@_ZN3gpu5gles224VertexArrayObjectManagerC1Ejjjb = hidden unnamed_addr alias void (%"class.gpu::gles2::VertexArrayObjectManager"*, i32, i32, i32, i1), void (%"class.gpu::gles2::VertexArrayObjectManager"*, i32, i32, i32, i1)* @_ZN3gpu5gles224VertexArrayObjectManagerC2Ejjjb
@_ZN3gpu5gles224VertexArrayObjectManagerD1Ev = hidden unnamed_addr alias void (%"class.gpu::gles2::VertexArrayObjectManager"*), void (%"class.gpu::gles2::VertexArrayObjectManager"*)* @_ZN3gpu5gles224VertexArrayObjectManagerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles217VertexArrayObjectC2Ej(%"class.gpu::gles2::VertexArrayObject"*, i32) unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  %4 = bitcast %"class.gpu::gles2::VertexArrayObject"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 32, i1 false)
  br i1 %3, label %8, label %5

5:                                                ; preds = %2
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %0, i64 0, i32 2
  tail call void @_ZNSt3__16vectorIN3gpu5gles217VertexArrayObject12VertexAttribENS_9allocatorIS4_EEE8__appendEm(%"class.std::__1::vector"* %7, i64 %6) #10
  br label %8

8:                                                ; preds = %2, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gpu5gles217VertexArrayObject12UnbindBufferEj(%"class.gpu::gles2::VertexArrayObject"* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %40, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %0, i64 0, i32 2, i32 0, i32 1
  %7 = bitcast %"class.gpu::gles2::VertexArrayObject::VertexAttrib"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %8, %10
  br i1 %11, label %14, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %0, i64 0, i32 0
  br label %18

14:                                               ; preds = %32, %4
  %15 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, %1
  br i1 %17, label %39, label %40

18:                                               ; preds = %12, %32
  %19 = phi i64 [ %10, %12 ], [ %35, %32 ]
  %20 = phi i64 [ 0, %12 ], [ %33, %32 ]
  %21 = inttoptr i64 %19 to %"class.gpu::gles2::VertexArrayObject::VertexAttrib"*
  %22 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %21, i64 %20, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, %1
  br i1 %24, label %25, label %32

25:                                               ; preds = %18
  store i32 0, i32* %22, align 4
  %26 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %21, i64 %20, i32 0
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  %30 = load i32, i32* %13, align 8
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %13, align 8
  br label %32

32:                                               ; preds = %25, %29, %18
  %33 = add nuw i64 %20, 1
  %34 = load i64, i64* %7, align 8
  %35 = load i64, i64* %9, align 8
  %36 = sub i64 %34, %35
  %37 = sdiv exact i64 %36, 48
  %38 = icmp ult i64 %33, %37
  br i1 %38, label %18, label %14

39:                                               ; preds = %14
  store i32 0, i32* %15, align 4
  br label %40

40:                                               ; preds = %2, %39, %14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu5gles217VertexArrayObject16BindElementArrayEj(%"class.gpu::gles2::VertexArrayObject"* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 4
  br label %7

7:                                                ; preds = %2, %6
  %8 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gpu5gles217VertexArrayObject28HaveEnabledClientSideBuffersEv(%"class.gpu::gles2::VertexArrayObject"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 0
  ret i1 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gpu5gles217VertexArrayObject15SetAttribEnableEjb(%"class.gpu::gles2::VertexArrayObject"* nocapture, i32, i1 zeroext) local_unnamed_addr #1 align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %0, i64 0, i32 2, i32 0, i32 1
  %7 = bitcast %"class.gpu::gles2::VertexArrayObject::VertexAttrib"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = sdiv exact i64 %11, 48
  %13 = icmp ugt i64 %12, %4
  %14 = inttoptr i64 %10 to %"class.gpu::gles2::VertexArrayObject::VertexAttrib"*
  br i1 %13, label %15, label %31

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %14, i64 %4, i32 0
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp ne i8 %17, 0
  %19 = xor i1 %18, %2
  br i1 %19, label %20, label %31

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %14, i64 %4, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = select i1 %2, i32 1, i32 -1
  %26 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %0, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = add nsw i32 %27, %25
  store i32 %28, i32* %26, align 8
  br label %29

29:                                               ; preds = %24, %20
  %30 = zext i1 %2 to i8
  store i8 %30, i8* %16, align 8
  br label %31

31:                                               ; preds = %15, %29, %3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gpu5gles217VertexArrayObject16SetAttribPointerEjjijhiPKvh(%"class.gpu::gles2::VertexArrayObject"* nocapture, i32, i32, i32, i32, i8 zeroext, i32, i8*, i8 zeroext) local_unnamed_addr #1 align 2 {
  %10 = zext i32 %2 to i64
  %11 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %0, i64 0, i32 2, i32 0, i32 1
  %13 = bitcast %"class.gpu::gles2::VertexArrayObject::VertexAttrib"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = sdiv exact i64 %17, 48
  %19 = icmp ugt i64 %18, %10
  %20 = inttoptr i64 %16 to %"class.gpu::gles2::VertexArrayObject::VertexAttrib"*
  br i1 %19, label %21, label %50

21:                                               ; preds = %9
  %22 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %20, i64 %10
  %23 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %20, i64 %10, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %34

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %22, i64 0, i32 0
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %0, i64 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = add nsw i32 %32, -1
  store i32 %33, i32* %31, align 8
  br label %34

34:                                               ; preds = %26, %30, %21
  store i32 %1, i32* %23, align 4
  %35 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %20, i64 %10, i32 3
  store i32 %3, i32* %35, align 8
  %36 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %20, i64 %10, i32 4
  store i32 %4, i32* %36, align 4
  %37 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %20, i64 %10, i32 5
  store i8 %5, i8* %37, align 8
  %38 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %20, i64 %10, i32 8
  store i32 %6, i32* %38, align 8
  %39 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %20, i64 %10, i32 7
  store i8* %7, i8** %39, align 8
  %40 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %20, i64 %10, i32 10
  store i8 %8, i8* %40, align 8
  %41 = icmp eq i32 %1, 0
  br i1 %41, label %42, label %50

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %22, i64 0, i32 0
  %44 = load i8, i8* %43, align 8, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %0, i64 0, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %47, align 8
  br label %50

50:                                               ; preds = %42, %34, %46, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gpu5gles217VertexArrayObject15GetVertexAttribEjjPj(%"class.gpu::gles2::VertexArrayObject"* nocapture readonly, i32, i32, i32* nocapture) local_unnamed_addr #1 align 2 {
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast %"class.gpu::gles2::VertexArrayObject::VertexAttrib"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 48
  %14 = icmp ule i64 %13, %5
  %15 = inttoptr i64 %11 to %"class.gpu::gles2::VertexArrayObject::VertexAttrib"*
  %16 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %15, i64 %5
  %17 = icmp eq %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %16, null
  %18 = or i1 %17, %14
  br i1 %18, label %44, label %19

19:                                               ; preds = %4
  switch i32 %2, label %44 [
    i32 34975, label %20
    i32 34338, label %23
    i32 34339, label %27
    i32 34340, label %30
    i32 34341, label %33
    i32 34922, label %36
    i32 35069, label %40
  ]

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %15, i64 %5, i32 2
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %3, align 4
  br label %44

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %16, i64 0, i32 0
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = zext i8 %25 to i32
  store i32 %26, i32* %3, align 4
  br label %44

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %15, i64 %5, i32 3
  %29 = load i32, i32* %28, align 8
  store i32 %29, i32* %3, align 4
  br label %44

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %15, i64 %5, i32 8
  %32 = load i32, i32* %31, align 8
  store i32 %32, i32* %3, align 4
  br label %44

33:                                               ; preds = %19
  %34 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %15, i64 %5, i32 4
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %3, align 4
  br label %44

36:                                               ; preds = %19
  %37 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %15, i64 %5, i32 5
  %38 = load i8, i8* %37, align 8
  %39 = zext i8 %38 to i32
  store i32 %39, i32* %3, align 4
  br label %44

40:                                               ; preds = %19
  %41 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %15, i64 %5, i32 10
  %42 = load i8, i8* %41, align 8
  %43 = zext i8 %42 to i32
  store i32 %43, i32* %3, align 4
  br label %44

44:                                               ; preds = %20, %23, %27, %30, %33, %36, %40, %19, %4
  %45 = phi i1 [ false, %4 ], [ false, %19 ], [ true, %40 ], [ true, %36 ], [ true, %33 ], [ true, %30 ], [ true, %27 ], [ true, %23 ], [ true, %20 ]
  ret i1 %45
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* @_ZNK3gpu5gles217VertexArrayObject9GetAttribEj(%"class.gpu::gles2::VertexArrayObject"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = bitcast %"class.gpu::gles2::VertexArrayObject::VertexAttrib"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = sdiv exact i64 %10, 48
  %12 = icmp ugt i64 %11, %3
  %13 = inttoptr i64 %9 to %"class.gpu::gles2::VertexArrayObject::VertexAttrib"*
  %14 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %13, i64 %3
  %15 = select i1 %12, %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %14, %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* null
  ret %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gpu5gles217VertexArrayObject16SetAttribDivisorEjj(%"class.gpu::gles2::VertexArrayObject"* nocapture readonly, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %0, i64 0, i32 2, i32 0, i32 1
  %7 = bitcast %"class.gpu::gles2::VertexArrayObject::VertexAttrib"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = sdiv exact i64 %11, 48
  %13 = icmp ugt i64 %12, %4
  br i1 %13, label %14, label %17

14:                                               ; preds = %3
  %15 = inttoptr i64 %10 to %"class.gpu::gles2::VertexArrayObject::VertexAttrib"*
  %16 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %15, i64 %4, i32 9
  store i32 %2, i32* %16, align 4
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gpu5gles217VertexArrayObject16GetAttribPointerEjjPPv(%"class.gpu::gles2::VertexArrayObject"* nocapture readonly, i32, i32, i8** nocapture) local_unnamed_addr #1 align 2 {
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast %"class.gpu::gles2::VertexArrayObject::VertexAttrib"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 48
  %14 = icmp ugt i64 %13, %5
  %15 = inttoptr i64 %11 to %"class.gpu::gles2::VertexArrayObject::VertexAttrib"*
  %16 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %15, i64 %5
  %17 = select i1 %14, %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %16, %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* null
  %18 = icmp ne %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %17, null
  %19 = icmp eq i32 %2, 34373
  %20 = and i1 %19, %18
  br i1 %20, label %21, label %26

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %17, i64 0, i32 7
  %23 = bitcast i8** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast i8** %3 to i64*
  store i64 %24, i64* %25, align 8
  br label %26

26:                                               ; preds = %4, %21
  %27 = phi i1 [ true, %21 ], [ false, %4 ]
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles224VertexArrayObjectManagerC2Ejjjb(%"class.gpu::gles2::VertexArrayObjectManager"* nocapture, i32, i32, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %6 = zext i1 %4 to i8
  %7 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 0
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 1
  store i32 %2, i32* %8, align 4
  %9 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 2
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 3
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 4
  store i32 %3, i32* %11, align 8
  %12 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 5
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 6
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 8
  %15 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 9
  %17 = tail call i8* @_Znwm(i64 32) #11
  %18 = icmp eq i32 %1, 0
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 32, i1 false) #10
  br i1 %18, label %23, label %19

19:                                               ; preds = %5
  %20 = zext i32 %1 to i64
  %21 = getelementptr inbounds i8, i8* %17, i64 8
  %22 = bitcast i8* %21 to %"class.std::__1::vector"*
  tail call void @_ZNSt3__16vectorIN3gpu5gles217VertexArrayObject12VertexAttribENS_9allocatorIS4_EEE8__appendEm(%"class.std::__1::vector"* %22, i64 %20) #10
  br label %23

23:                                               ; preds = %5, %19
  %24 = bitcast %"class.gpu::gles2::VertexArrayObject"** %16 to i8**
  store i8* %17, i8** %24, align 8
  %25 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 10
  %26 = bitcast %"class.gpu::gles2::VertexArrayObject"** %25 to i8**
  store i8* %17, i8** %26, align 8
  %27 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 11
  %28 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 11, i32 0, i32 3
  %29 = bitcast %"class.std::__1::__compressed_pair.20"* %28 to i32*
  %30 = bitcast %"class.std::__1::unordered_map"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %29, align 4
  %31 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 12
  store i8 %6, i8* %31, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles224VertexArrayObjectManagerD2Ev(%"class.gpu::gles2::VertexArrayObjectManager"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = bitcast %"struct.std::__1::__hash_node_base"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %27, %1
  %7 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 9
  %8 = load %"class.gpu::gles2::VertexArrayObject"*, %"class.gpu::gles2::VertexArrayObject"** %7, align 8
  %9 = icmp eq %"class.gpu::gles2::VertexArrayObject"* %8, null
  br i1 %9, label %42, label %31

10:                                               ; preds = %1, %27
  %11 = phi i64 [ %29, %27 ], [ %4, %1 ]
  %12 = inttoptr i64 %11 to %"struct.std::__1::__hash_node"*
  %13 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %12, i64 0, i32 2, i32 0, i32 1
  %14 = load %"class.gpu::gles2::VertexArrayObject"*, %"class.gpu::gles2::VertexArrayObject"** %13, align 8
  %15 = icmp eq %"class.gpu::gles2::VertexArrayObject"* %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %14, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.gpu::gles2::VertexArrayObject::VertexAttrib"*, %"class.gpu::gles2::VertexArrayObject::VertexAttrib"** %17, align 8
  %19 = icmp eq %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = ptrtoint %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %18 to i64
  %22 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %14, i64 0, i32 2, i32 0, i32 1
  %23 = bitcast %"class.gpu::gles2::VertexArrayObject::VertexAttrib"** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %18, i64 0, i32 0
  tail call void @_ZdlPv(i8* %24) #11
  br label %25

25:                                               ; preds = %16, %20
  %26 = bitcast %"class.gpu::gles2::VertexArrayObject"* %14 to i8*
  tail call void @_ZdlPv(i8* %26) #11
  br label %27

27:                                               ; preds = %10, %25
  %28 = inttoptr i64 %11 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %6, label %10

31:                                               ; preds = %6
  %32 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %8, i64 0, i32 2, i32 0, i32 0
  %33 = load %"class.gpu::gles2::VertexArrayObject::VertexAttrib"*, %"class.gpu::gles2::VertexArrayObject::VertexAttrib"** %32, align 8
  %34 = icmp eq %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %31
  %36 = ptrtoint %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %33 to i64
  %37 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %8, i64 0, i32 2, i32 0, i32 1
  %38 = bitcast %"class.gpu::gles2::VertexArrayObject::VertexAttrib"** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %33, i64 0, i32 0
  tail call void @_ZdlPv(i8* %39) #11
  br label %40

40:                                               ; preds = %31, %35
  %41 = bitcast %"class.gpu::gles2::VertexArrayObject"* %8 to i8*
  tail call void @_ZdlPv(i8* %41) #11
  br label %42

42:                                               ; preds = %40, %6
  %43 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %2, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base"* %43, null
  br i1 %44, label %51, label %45

45:                                               ; preds = %42, %45
  %46 = phi %"struct.std::__1::__hash_node_base"* [ %48, %45 ], [ %43, %42 ]
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 0, i32 0
  %48 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %47, align 8
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %46 to i8*
  tail call void @_ZdlPv(i8* %49) #11
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %48, null
  br i1 %50, label %51, label %45

51:                                               ; preds = %45, %42
  %52 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %52, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %52, align 8
  %54 = icmp eq %"struct.std::__1::__hash_node_base"** %53, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %51
  %56 = bitcast %"struct.std::__1::__hash_node_base"** %53 to i8*
  tail call void @_ZdlPv(i8* %56) #11
  br label %57

57:                                               ; preds = %51, %55
  %58 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  store i8* null, i8** %58, align 8
  %60 = icmp eq i8* %59, null
  br i1 %60, label %62, label %61

61:                                               ; preds = %57
  tail call void @_ZdaPv(i8* nonnull %59) #11
  br label %62

62:                                               ; preds = %57, %61
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gpu5gles224VertexArrayObjectManager12IsReservedIdEj(%"class.gpu::gles2::VertexArrayObjectManager"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, %1
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, %1
  br label %12

12:                                               ; preds = %2, %4, %8
  %13 = phi i1 [ false, %2 ], [ true, %4 ], [ %11, %8 ]
  ret i1 %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3gpu5gles224VertexArrayObjectManager26bound_element_array_bufferEv(%"class.gpu::gles2::VertexArrayObjectManager"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 10
  %3 = load %"class.gpu::gles2::VertexArrayObject"*, %"class.gpu::gles2::VertexArrayObject"** %2, align 8
  %4 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %3, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gpu5gles224VertexArrayObjectManager12UnbindBufferEj(%"class.gpu::gles2::VertexArrayObjectManager"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 10
  %4 = load %"class.gpu::gles2::VertexArrayObject"*, %"class.gpu::gles2::VertexArrayObject"** %3, align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %42, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %4, i64 0, i32 2
  %8 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %4, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %"class.gpu::gles2::VertexArrayObject::VertexAttrib"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %16, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %4, i64 0, i32 0
  br label %20

16:                                               ; preds = %34, %6
  %17 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %4, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, %1
  br i1 %19, label %41, label %42

20:                                               ; preds = %34, %14
  %21 = phi i64 [ %12, %14 ], [ %37, %34 ]
  %22 = phi i64 [ 0, %14 ], [ %35, %34 ]
  %23 = inttoptr i64 %21 to %"class.gpu::gles2::VertexArrayObject::VertexAttrib"*
  %24 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %23, i64 %22, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, %1
  br i1 %26, label %27, label %34

27:                                               ; preds = %20
  store i32 0, i32* %24, align 4
  %28 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %23, i64 %22, i32 0
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %27
  %32 = load i32, i32* %15, align 8
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %15, align 8
  br label %34

34:                                               ; preds = %31, %27, %20
  %35 = add nuw i64 %22, 1
  %36 = load i64, i64* %9, align 8
  %37 = load i64, i64* %11, align 8
  %38 = sub i64 %36, %37
  %39 = sdiv exact i64 %38, 48
  %40 = icmp ult i64 %35, %39
  br i1 %40, label %20, label %16

41:                                               ; preds = %16
  store i32 0, i32* %17, align 4
  br label %42

42:                                               ; preds = %2, %16, %41
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu5gles224VertexArrayObjectManager16BindElementArrayEj(%"class.gpu::gles2::VertexArrayObjectManager"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 10
  %4 = load %"class.gpu::gles2::VertexArrayObject"*, %"class.gpu::gles2::VertexArrayObject"** %3, align 8
  %5 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, %1
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  store i32 %1, i32* %5, align 4
  br label %9

9:                                                ; preds = %2, %8
  %10 = phi i1 [ true, %8 ], [ false, %2 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles224VertexArrayObjectManager15GenVertexArraysEiPKj(%"class.gpu::gles2::VertexArrayObjectManager"*, i32, i32* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::pair.24", align 8
  %5 = icmp sgt i32 %1, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %3
  %7 = bitcast %"struct.std::__1::pair.24"* %4 to i8*
  %8 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %4, i64 0, i32 0
  %10 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %4, i64 0, i32 1
  %11 = bitcast %"class.gpu::gles2::VertexArrayObject"** %10 to i8**
  %12 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 11, i32 0
  %13 = zext i32 %1 to i64
  br label %15

14:                                               ; preds = %25, %3
  ret void

15:                                               ; preds = %25, %6
  %16 = phi i64 [ 0, %6 ], [ %28, %25 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %17 = getelementptr inbounds i32, i32* %2, i64 %16
  %18 = call i8* @_Znwm(i64 32) #11
  %19 = load i32, i32* %8, align 8
  %20 = icmp eq i32 %19, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 32, i1 false) #10
  br i1 %20, label %25, label %21

21:                                               ; preds = %15
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds i8, i8* %18, i64 8
  %24 = bitcast i8* %23 to %"class.std::__1::vector"*
  call void @_ZNSt3__16vectorIN3gpu5gles217VertexArrayObject12VertexAttribENS_9allocatorIS4_EEE8__appendEm(%"class.std::__1::vector"* %24, i64 %22) #10
  br label %25

25:                                               ; preds = %15, %21
  %26 = load i32, i32* %17, align 4
  store i32 %26, i32* %9, align 8
  store i8* %18, i8** %11, align 8
  %27 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN3gpu5gles217VertexArrayObjectEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJNS_4pairIjS5_EEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %12, i32* nonnull dereferenceable(4) %9, %"struct.std::__1::pair.24"* nonnull dereferenceable(16) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  %28 = add nuw nsw i64 %16, 1
  %29 = icmp eq i64 %28, %13
  br i1 %29, label %14, label %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles224VertexArrayObjectManager18DeleteVertexArraysEiPKj(%"class.gpu::gles2::VertexArrayObjectManager"*, i32, i32* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.371", align 8
  %5 = icmp sgt i32 %1, 0
  br i1 %5, label %6, label %18

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 11
  %8 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 10
  %11 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 9
  %12 = bitcast %"class.gpu::gles2::VertexArrayObject"** %11 to i64*
  %13 = bitcast %"class.gpu::gles2::VertexArrayObject"** %10 to i64*
  %14 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %7, i64 0, i32 0
  %15 = bitcast %"class.std::__1::unique_ptr.371"* %4 to i8*
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.371", %"class.std::__1::unique_ptr.371"* %4, i64 0, i32 0, i32 0, i32 0
  %17 = zext i32 %1 to i64
  br label %19

18:                                               ; preds = %104, %3
  ret void

19:                                               ; preds = %104, %6
  %20 = phi i64 [ 0, %6 ], [ %105, %104 ]
  %21 = getelementptr inbounds i32, i32* %2, i64 %20
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %104, label %24

24:                                               ; preds = %19
  %25 = zext i32 %22 to i64
  %26 = load i64, i64* %8, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %104, label %28

28:                                               ; preds = %24
  %29 = call i64 @llvm.ctpop.i64(i64 %26) #10, !range !3
  %30 = icmp ugt i64 %29, 1
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  %32 = add i64 %26, 4294967295
  %33 = and i64 %32, %25
  br label %38

34:                                               ; preds = %28
  %35 = icmp ugt i64 %26, %25
  br i1 %35, label %38, label %36

36:                                               ; preds = %34
  %37 = urem i64 %25, %26
  br label %38

38:                                               ; preds = %36, %34, %31
  %39 = phi i64 [ %33, %31 ], [ %37, %36 ], [ %25, %34 ]
  %40 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %9, align 8
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, i64 %39
  %42 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %41, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %42, null
  br i1 %43, label %104, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %42, i64 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"* %46, null
  br i1 %47, label %104, label %48

48:                                               ; preds = %44
  %49 = add i64 %26, -1
  br label %50

50:                                               ; preds = %71, %48
  %51 = phi %"struct.std::__1::__hash_node_base"* [ %46, %48 ], [ %73, %71 ]
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %51, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %54, %25
  br i1 %55, label %66, label %56

56:                                               ; preds = %50
  br i1 %30, label %59, label %57

57:                                               ; preds = %56
  %58 = and i64 %54, %49
  br label %63

59:                                               ; preds = %56
  %60 = icmp ult i64 %54, %26
  br i1 %60, label %63, label %61

61:                                               ; preds = %59
  %62 = urem i64 %54, %26
  br label %63

63:                                               ; preds = %61, %59, %57
  %64 = phi i64 [ %58, %57 ], [ %62, %61 ], [ %54, %59 ]
  %65 = icmp eq i64 %64, %39
  br i1 %65, label %71, label %104

66:                                               ; preds = %50
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %51, i64 2
  %68 = bitcast %"struct.std::__1::__hash_node_base"* %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, %22
  br i1 %70, label %75, label %71

71:                                               ; preds = %66, %63
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %51, i64 0, i32 0
  %73 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, align 8
  %74 = icmp eq %"struct.std::__1::__hash_node_base"* %73, null
  br i1 %74, label %104, label %50

75:                                               ; preds = %66
  %76 = load %"class.gpu::gles2::VertexArrayObject"*, %"class.gpu::gles2::VertexArrayObject"** %10, align 8
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %51, i64 3
  %78 = bitcast %"struct.std::__1::__hash_node_base"* %77 to %"class.gpu::gles2::VertexArrayObject"**
  %79 = load %"class.gpu::gles2::VertexArrayObject"*, %"class.gpu::gles2::VertexArrayObject"** %78, align 8
  %80 = icmp eq %"class.gpu::gles2::VertexArrayObject"* %76, %79
  br i1 %80, label %81, label %84

81:                                               ; preds = %75
  %82 = load i64, i64* %12, align 8
  store i64 %82, i64* %13, align 8
  %83 = load %"class.gpu::gles2::VertexArrayObject"*, %"class.gpu::gles2::VertexArrayObject"** %78, align 8
  br label %84

84:                                               ; preds = %81, %75
  %85 = phi %"class.gpu::gles2::VertexArrayObject"* [ %83, %81 ], [ %79, %75 ]
  %86 = icmp eq %"class.gpu::gles2::VertexArrayObject"* %85, null
  br i1 %86, label %98, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %85, i64 0, i32 2, i32 0, i32 0
  %89 = load %"class.gpu::gles2::VertexArrayObject::VertexAttrib"*, %"class.gpu::gles2::VertexArrayObject::VertexAttrib"** %88, align 8
  %90 = icmp eq %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %87
  %92 = ptrtoint %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %89 to i64
  %93 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %85, i64 0, i32 2, i32 0, i32 1
  %94 = bitcast %"class.gpu::gles2::VertexArrayObject::VertexAttrib"** %93 to i64*
  store i64 %92, i64* %94, align 8
  %95 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %89, i64 0, i32 0
  call void @_ZdlPv(i8* %95) #11
  br label %96

96:                                               ; preds = %87, %91
  %97 = bitcast %"class.gpu::gles2::VertexArrayObject"* %85 to i8*
  call void @_ZdlPv(i8* %97) #11
  br label %98

98:                                               ; preds = %96, %84
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN3gpu5gles217VertexArrayObjectEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE(%"class.std::__1::unique_ptr.371"* nonnull sret %4, %"class.std::__1::__hash_table"* %14, %"struct.std::__1::__hash_node_base"* nonnull %51) #10
  %99 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %16, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %16, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node"* %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %98
  %102 = bitcast %"struct.std::__1::__hash_node"* %99 to i8*
  call void @_ZdlPv(i8* %102) #11
  br label %103

103:                                              ; preds = %98, %101
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10
  br label %104

104:                                              ; preds = %71, %63, %44, %24, %38, %103, %19
  %105 = add nuw nsw i64 %20, 1
  %106 = icmp eq i64 %105, %17
  br i1 %106, label %18, label %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu5gles224VertexArrayObjectManager15BindVertexArrayEjPb(%"class.gpu::gles2::VertexArrayObjectManager"* nocapture, i32, i8* nocapture) local_unnamed_addr #0 align 2 {
  store i8 0, i8* %2, align 1
  %4 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 9
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %62, label %6

6:                                                ; preds = %3
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %69, label %11

11:                                               ; preds = %6
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #10, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %19, %17, %14
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %69, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %26, i64 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base"* %30, null
  br i1 %31, label %69, label %32

32:                                               ; preds = %28
  %33 = add i64 %9, -1
  br label %34

34:                                               ; preds = %55, %32
  %35 = phi %"struct.std::__1::__hash_node_base"* [ %30, %32 ], [ %57, %55 ]
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %34
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %33
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %45, %43, %41
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %55, label %69

50:                                               ; preds = %34
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %1
  br i1 %54, label %59, label %55

55:                                               ; preds = %50, %47
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %56, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base"* %57, null
  br i1 %58, label %69, label %34

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 3
  %61 = bitcast %"struct.std::__1::__hash_node_base"* %60 to %"class.gpu::gles2::VertexArrayObject"**
  br label %62

62:                                               ; preds = %59, %3
  %63 = phi %"class.gpu::gles2::VertexArrayObject"** [ %4, %3 ], [ %61, %59 ]
  %64 = load %"class.gpu::gles2::VertexArrayObject"*, %"class.gpu::gles2::VertexArrayObject"** %63, align 8
  %65 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 10
  %66 = load %"class.gpu::gles2::VertexArrayObject"*, %"class.gpu::gles2::VertexArrayObject"** %65, align 8
  %67 = icmp ne %"class.gpu::gles2::VertexArrayObject"* %64, %66
  %68 = zext i1 %67 to i8
  store i8 %68, i8* %2, align 1
  store %"class.gpu::gles2::VertexArrayObject"* %64, %"class.gpu::gles2::VertexArrayObject"** %65, align 8
  br label %69

69:                                               ; preds = %55, %47, %28, %6, %21, %62
  %70 = phi i1 [ true, %62 ], [ false, %21 ], [ false, %6 ], [ false, %28 ], [ false, %47 ], [ false, %55 ]
  ret i1 %70
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gpu5gles224VertexArrayObjectManager28HaveEnabledClientSideBuffersEv(%"class.gpu::gles2::VertexArrayObjectManager"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 10
  %3 = load %"class.gpu::gles2::VertexArrayObject"*, %"class.gpu::gles2::VertexArrayObject"** %2, align 8
  %4 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %3, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, 0
  ret i1 %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gpu5gles224VertexArrayObjectManager15SetAttribEnableEjb(%"class.gpu::gles2::VertexArrayObjectManager"* nocapture readonly, i32, i1 zeroext) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 10
  %5 = load %"class.gpu::gles2::VertexArrayObject"*, %"class.gpu::gles2::VertexArrayObject"** %4, align 8
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %5, i64 0, i32 2
  %8 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %5, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %"class.gpu::gles2::VertexArrayObject::VertexAttrib"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 48
  %15 = icmp ugt i64 %14, %6
  %16 = inttoptr i64 %12 to %"class.gpu::gles2::VertexArrayObject::VertexAttrib"*
  br i1 %15, label %17, label %33

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %16, i64 %6, i32 0
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %20, %2
  br i1 %21, label %22, label %33

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %16, i64 %6, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %31

26:                                               ; preds = %22
  %27 = select i1 %2, i32 1, i32 -1
  %28 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %5, i64 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = add nsw i32 %29, %27
  store i32 %30, i32* %28, align 8
  br label %31

31:                                               ; preds = %26, %22
  %32 = zext i1 %2 to i8
  store i8 %32, i8* %18, align 8
  br label %33

33:                                               ; preds = %3, %17, %31
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu5gles224VertexArrayObjectManager15GetVertexAttribEjjPj(%"class.gpu::gles2::VertexArrayObjectManager"* nocapture readonly, i32, i32, i32* nocapture) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 10
  %6 = load %"class.gpu::gles2::VertexArrayObject"*, %"class.gpu::gles2::VertexArrayObject"** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %6, i64 0, i32 2
  %9 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %6, i64 0, i32 2, i32 0, i32 1
  %10 = bitcast %"class.gpu::gles2::VertexArrayObject::VertexAttrib"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = sdiv exact i64 %14, 48
  %16 = icmp ule i64 %15, %7
  %17 = inttoptr i64 %13 to %"class.gpu::gles2::VertexArrayObject::VertexAttrib"*
  %18 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %17, i64 %7
  %19 = icmp eq %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %18, null
  %20 = or i1 %19, %16
  br i1 %20, label %46, label %21

21:                                               ; preds = %4
  switch i32 %2, label %46 [
    i32 34975, label %22
    i32 34338, label %25
    i32 34339, label %29
    i32 34340, label %32
    i32 34341, label %35
    i32 34922, label %38
    i32 35069, label %42
  ]

22:                                               ; preds = %21
  %23 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %17, i64 %7, i32 2
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %3, align 4
  br label %46

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %18, i64 0, i32 0
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = zext i8 %27 to i32
  store i32 %28, i32* %3, align 4
  br label %46

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %17, i64 %7, i32 3
  %31 = load i32, i32* %30, align 8
  store i32 %31, i32* %3, align 4
  br label %46

32:                                               ; preds = %21
  %33 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %17, i64 %7, i32 8
  %34 = load i32, i32* %33, align 8
  store i32 %34, i32* %3, align 4
  br label %46

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %17, i64 %7, i32 4
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %3, align 4
  br label %46

38:                                               ; preds = %21
  %39 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %17, i64 %7, i32 5
  %40 = load i8, i8* %39, align 8
  %41 = zext i8 %40 to i32
  store i32 %41, i32* %3, align 4
  br label %46

42:                                               ; preds = %21
  %43 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %17, i64 %7, i32 10
  %44 = load i8, i8* %43, align 8
  %45 = zext i8 %44 to i32
  store i32 %45, i32* %3, align 4
  br label %46

46:                                               ; preds = %4, %21, %22, %25, %29, %32, %35, %38, %42
  %47 = phi i1 [ false, %4 ], [ false, %21 ], [ true, %42 ], [ true, %38 ], [ true, %35 ], [ true, %32 ], [ true, %29 ], [ true, %25 ], [ true, %22 ]
  ret i1 %47
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gpu5gles224VertexArrayObjectManager16GetAttribPointerEjjPPv(%"class.gpu::gles2::VertexArrayObjectManager"* nocapture readonly, i32, i32, i8** nocapture) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 10
  %6 = load %"class.gpu::gles2::VertexArrayObject"*, %"class.gpu::gles2::VertexArrayObject"** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %6, i64 0, i32 2
  %9 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %6, i64 0, i32 2, i32 0, i32 1
  %10 = bitcast %"class.gpu::gles2::VertexArrayObject::VertexAttrib"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = sdiv exact i64 %14, 48
  %16 = icmp ugt i64 %15, %7
  %17 = inttoptr i64 %13 to %"class.gpu::gles2::VertexArrayObject::VertexAttrib"*
  %18 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %17, i64 %7
  %19 = select i1 %16, %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %18, %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* null
  %20 = icmp ne %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %19, null
  %21 = icmp eq i32 %2, 34373
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %28

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %19, i64 0, i32 7
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast i8** %3 to i64*
  store i64 %26, i64* %27, align 8
  br label %28

28:                                               ; preds = %4, %23
  %29 = phi i1 [ true, %23 ], [ false, %4 ]
  ret i1 %29
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu5gles224VertexArrayObjectManager16SetAttribPointerEjjijhiPKvh(%"class.gpu::gles2::VertexArrayObjectManager"* nocapture readonly, i32, i32, i32, i32, i8 zeroext, i32, i8*, i8 zeroext) local_unnamed_addr #1 align 2 {
  %10 = icmp eq i32 %1, 0
  %11 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 10
  %12 = load %"class.gpu::gles2::VertexArrayObject"*, %"class.gpu::gles2::VertexArrayObject"** %11, align 8
  br i1 %10, label %13, label %19

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 9
  %15 = load %"class.gpu::gles2::VertexArrayObject"*, %"class.gpu::gles2::VertexArrayObject"** %14, align 8
  %16 = icmp ne %"class.gpu::gles2::VertexArrayObject"* %12, %15
  %17 = icmp ne i8* %7, null
  %18 = and i1 %17, %16
  br i1 %18, label %59, label %19

19:                                               ; preds = %9, %13
  %20 = zext i32 %2 to i64
  %21 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %12, i64 0, i32 2
  %22 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %12, i64 0, i32 2, i32 0, i32 1
  %23 = bitcast %"class.gpu::gles2::VertexArrayObject::VertexAttrib"** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.std::__1::vector"* %21 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = sdiv exact i64 %27, 48
  %29 = icmp ugt i64 %28, %20
  %30 = inttoptr i64 %26 to %"class.gpu::gles2::VertexArrayObject::VertexAttrib"*
  br i1 %29, label %31, label %59

31:                                               ; preds = %19
  %32 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %30, i64 %20
  %33 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %30, i64 %20, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %44

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %32, i64 0, i32 0
  %38 = load i8, i8* %37, align 8, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %12, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = add nsw i32 %42, -1
  store i32 %43, i32* %41, align 8
  br label %44

44:                                               ; preds = %40, %36, %31
  store i32 %1, i32* %33, align 4
  %45 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %30, i64 %20, i32 3
  store i32 %3, i32* %45, align 8
  %46 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %30, i64 %20, i32 4
  store i32 %4, i32* %46, align 4
  %47 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %30, i64 %20, i32 5
  store i8 %5, i8* %47, align 8
  %48 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %30, i64 %20, i32 8
  store i32 %6, i32* %48, align 8
  %49 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %30, i64 %20, i32 7
  store i8* %7, i8** %49, align 8
  %50 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %30, i64 %20, i32 10
  store i8 %8, i8* %50, align 8
  br i1 %10, label %51, label %59

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %32, i64 0, i32 0
  %53 = load i8, i8* %52, align 8, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %12, i64 0, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %51, %44, %19, %13
  %60 = phi i1 [ false, %13 ], [ true, %19 ], [ true, %44 ], [ true, %51 ], [ true, %55 ]
  ret i1 %60
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gpu5gles224VertexArrayObjectManager17IsDefaultVAOBoundEv(%"class.gpu::gles2::VertexArrayObjectManager"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 10
  %3 = load %"class.gpu::gles2::VertexArrayObject"*, %"class.gpu::gles2::VertexArrayObject"** %2, align 8
  %4 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 9
  %5 = load %"class.gpu::gles2::VertexArrayObject"*, %"class.gpu::gles2::VertexArrayObject"** %4, align 8
  %6 = icmp eq %"class.gpu::gles2::VertexArrayObject"* %3, %5
  ret i1 %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gpu5gles224VertexArrayObjectManager16SetAttribDivisorEjj(%"class.gpu::gles2::VertexArrayObjectManager"* nocapture readonly, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 10
  %5 = load %"class.gpu::gles2::VertexArrayObject"*, %"class.gpu::gles2::VertexArrayObject"** %4, align 8
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %5, i64 0, i32 2
  %8 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %5, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %"class.gpu::gles2::VertexArrayObject::VertexAttrib"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 48
  %15 = icmp ugt i64 %14, %6
  br i1 %15, label %16, label %19

16:                                               ; preds = %3
  %17 = inttoptr i64 %12 to %"class.gpu::gles2::VertexArrayObject::VertexAttrib"*
  %18 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %17, i64 %6, i32 9
  store i32 %2, i32* %18, align 4
  br label %19

19:                                               ; preds = %3, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu5gles224VertexArrayObjectManager11CollectDataEPKviii(%"class.gpu::gles2::VertexArrayObjectManager"* nocapture, i8* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = mul nsw i32 %4, %2
  %7 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 6
  %8 = load i32, i32* %7, align 8
  %9 = icmp slt i32 %8, %6
  %10 = sext i32 %6 to i64
  br i1 %9, label %11, label %18

11:                                               ; preds = %5
  %12 = tail call i8* @_Znam(i64 %10) #11
  %13 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  store i8* %12, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %11
  tail call void @_ZdaPv(i8* nonnull %14) #11
  br label %17

17:                                               ; preds = %11, %16
  store i32 %6, i32* %7, align 8
  br label %18

18:                                               ; preds = %5, %17
  %19 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 %10
  %22 = icmp sgt i32 %6, 0
  br i1 %22, label %23, label %32

23:                                               ; preds = %18
  %24 = sext i32 %2 to i64
  %25 = sext i32 %3 to i64
  br label %26

26:                                               ; preds = %23, %26
  %27 = phi i8* [ %20, %23 ], [ %30, %26 ]
  %28 = phi i8* [ %1, %23 ], [ %29, %26 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %28, i64 %24, i1 false)
  %29 = getelementptr inbounds i8, i8* %28, i64 %25
  %30 = getelementptr inbounds i8, i8* %27, i64 %24
  %31 = icmp ult i8* %30, %21
  br i1 %31, label %26, label %32

32:                                               ; preds = %26, %18
  ret i32 %6
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3gpu5gles224VertexArrayObjectManager25SupportsClientSideBuffersEv(%"class.gpu::gles2::VertexArrayObjectManager"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 12
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 10
  %7 = load %"class.gpu::gles2::VertexArrayObject"*, %"class.gpu::gles2::VertexArrayObject"** %6, align 8
  %8 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %9, 0
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i1 [ false, %1 ], [ %10, %5 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu5gles224VertexArrayObjectManager31SetupSimulatedClientSideBuffersEPKcPNS0_19GLES2ImplementationEPNS0_14GLES2CmdHelperEiiPb(%"class.gpu::gles2::VertexArrayObjectManager"* nocapture, i8*, %"class.gpu::gles2::GLES2Implementation"*, %"class.gpu::gles2::GLES2CmdHelper"*, i32, i32, i8* nocapture) local_unnamed_addr #0 align 2 {
  store i8 0, i8* %6, align 1
  %8 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 12
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %295, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 10
  %13 = load %"class.gpu::gles2::VertexArrayObject"*, %"class.gpu::gles2::VertexArrayObject"** %12, align 8
  %14 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %295

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 9
  %19 = load %"class.gpu::gles2::VertexArrayObject"*, %"class.gpu::gles2::VertexArrayObject"** %18, align 8
  %20 = icmp eq %"class.gpu::gles2::VertexArrayObject"* %13, %19
  br i1 %20, label %26, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.gpu::gles2::GLES2Implementation"* %2 to void (%"class.gpu::gles2::GLES2Implementation"*, i32, i8*, i8*)***
  %23 = load void (%"class.gpu::gles2::GLES2Implementation"*, i32, i8*, i8*)**, void (%"class.gpu::gles2::GLES2Implementation"*, i32, i8*, i8*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Implementation"*, i32, i8*, i8*)*, void (%"class.gpu::gles2::GLES2Implementation"*, i32, i8*, i8*)** %23, i64 393
  %25 = load void (%"class.gpu::gles2::GLES2Implementation"*, i32, i8*, i8*)*, void (%"class.gpu::gles2::GLES2Implementation"*, i32, i8*, i8*)** %24, align 8
  tail call void %25(%"class.gpu::gles2::GLES2Implementation"* %2, i32 1282, i8* %1, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0)) #10
  br label %295

26:                                               ; preds = %17
  store i8 1, i8* %6, align 1
  %27 = load %"class.gpu::gles2::VertexArrayObject"*, %"class.gpu::gles2::VertexArrayObject"** %12, align 8
  %28 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %27, i64 0, i32 2
  %29 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %27, i64 0, i32 2, i32 0, i32 1
  %30 = bitcast %"class.gpu::gles2::VertexArrayObject::VertexAttrib"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector"* %28 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %31, %33
  br i1 %34, label %117, label %35

35:                                               ; preds = %26
  %36 = icmp eq i32 %5, 0
  %37 = add nsw i32 %5, -1
  br label %40

38:                                               ; preds = %102
  %39 = icmp eq i8 %104, 0
  br i1 %39, label %112, label %117, !prof !4

40:                                               ; preds = %35, %102
  %41 = phi i64 [ %33, %35 ], [ %108, %102 ]
  %42 = phi i64 [ 0, %35 ], [ %106, %102 ]
  %43 = phi i32 [ 0, %35 ], [ %105, %102 ]
  %44 = phi i8 [ 1, %35 ], [ %104, %102 ]
  %45 = phi i32 [ 0, %35 ], [ %103, %102 ]
  %46 = inttoptr i64 %41 to %"class.gpu::gles2::VertexArrayObject::VertexAttrib"*
  %47 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %46, i64 %42, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %102

50:                                               ; preds = %40
  %51 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %46, i64 %42, i32 0
  %52 = load i8, i8* %51, align 8, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %102, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %46, i64 %42, i32 3
  %56 = load i32, i32* %55, align 8
  %57 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %46, i64 %42, i32 4
  %58 = load i32, i32* %57, align 4
  %59 = tail call i32 @_ZN3gpu5gles29GLES2Util25GetGroupSizeForBufferTypeEjj(i32 %56, i32 %58) #10
  br i1 %36, label %67, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %46, i64 %42, i32 9
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %60
  %65 = udiv i32 %37, %62
  %66 = add nuw i32 %65, 1
  br label %67

67:                                               ; preds = %54, %60, %64
  %68 = phi i32 [ %66, %64 ], [ %4, %60 ], [ %4, %54 ]
  %69 = icmp slt i32 %68, 0
  %70 = sub i32 0, %68
  %71 = select i1 %69, i32 %70, i32 %68
  %72 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %71, i32 %59) #10
  %73 = extractvalue { i32, i1 } %72, 1
  %74 = extractvalue { i32, i1 } %72, 0
  %75 = icmp ne i32 %74, 0
  %76 = and i1 %69, %75
  %77 = or i1 %73, %76
  br i1 %77, label %102, label %78

78:                                               ; preds = %67
  %79 = sub i32 0, %74
  %80 = select i1 %69, i32 %79, i32 %74
  %81 = zext i32 %80 to i33
  %82 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 3) #10
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  %87 = xor i1 %86, true
  %88 = icmp ne i8 %44, 0
  %89 = and i1 %88, %87
  br i1 %89, label %90, label %102

90:                                               ; preds = %78
  %91 = and i33 %84, 4294967292
  %92 = sext i32 %45 to i33
  %93 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %92, i33 %91) #10
  %94 = extractvalue { i33, i1 } %93, 1
  %95 = extractvalue { i33, i1 } %93, 0
  %96 = add i33 %95, 2147483648
  %97 = icmp slt i33 %96, 0
  %98 = or i1 %94, %97
  %99 = xor i1 %98, true
  %100 = trunc i33 %95 to i32
  %101 = zext i1 %99 to i8
  br label %102

102:                                              ; preds = %78, %67, %90, %50, %40
  %103 = phi i32 [ %45, %50 ], [ %45, %40 ], [ %100, %90 ], [ 0, %67 ], [ 0, %78 ]
  %104 = phi i8 [ %44, %50 ], [ %44, %40 ], [ %101, %90 ], [ 0, %67 ], [ 0, %78 ]
  %105 = add i32 %43, 1
  %106 = zext i32 %105 to i64
  %107 = load i64, i64* %30, align 8
  %108 = load i64, i64* %32, align 8
  %109 = sub i64 %107, %108
  %110 = sdiv exact i64 %109, 48
  %111 = icmp ugt i64 %110, %106
  br i1 %111, label %40, label %38

112:                                              ; preds = %38
  %113 = bitcast %"class.gpu::gles2::GLES2Implementation"* %2 to void (%"class.gpu::gles2::GLES2Implementation"*, i32, i8*, i8*)***
  %114 = load void (%"class.gpu::gles2::GLES2Implementation"*, i32, i8*, i8*)**, void (%"class.gpu::gles2::GLES2Implementation"*, i32, i8*, i8*)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Implementation"*, i32, i8*, i8*)*, void (%"class.gpu::gles2::GLES2Implementation"*, i32, i8*, i8*)** %114, i64 393
  %116 = load void (%"class.gpu::gles2::GLES2Implementation"*, i32, i8*, i8*)*, void (%"class.gpu::gles2::GLES2Implementation"*, i32, i8*, i8*)** %115, align 8
  tail call void %116(%"class.gpu::gles2::GLES2Implementation"* %2, i32 1282, i8* %1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0)) #10
  br label %295

117:                                              ; preds = %26, %38
  %118 = phi i32 [ %103, %38 ], [ 0, %26 ]
  %119 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = bitcast %"class.gpu::gles2::GLES2CmdHelper"* %3 to %"class.gpu::CommandBufferHelper"*
  %122 = getelementptr inbounds %"class.gpu::gles2::GLES2CmdHelper", %"class.gpu::gles2::GLES2CmdHelper"* %3, i64 0, i32 0, i32 15
  %123 = load i32, i32* %122, align 8
  %124 = add nsw i32 %123, 1
  store i32 %124, i32* %122, align 8
  %125 = getelementptr inbounds %"class.gpu::gles2::GLES2CmdHelper", %"class.gpu::gles2::GLES2CmdHelper"* %3, i64 0, i32 0, i32 18
  %126 = load i8, i8* %125, align 2, !range !2
  %127 = icmp ne i8 %126, 0
  %128 = srem i32 %124, 100
  %129 = icmp eq i32 %128, 0
  %130 = and i1 %127, %129
  br i1 %130, label %131, label %132

131:                                              ; preds = %117
  tail call void @_ZN3gpu19CommandBufferHelper18PeriodicFlushCheckEv(%"class.gpu::CommandBufferHelper"* %121) #10
  br label %132

132:                                              ; preds = %131, %117
  %133 = getelementptr inbounds %"class.gpu::gles2::GLES2CmdHelper", %"class.gpu::gles2::GLES2CmdHelper"* %3, i64 0, i32 0, i32 7
  %134 = load i32, i32* %133, align 4
  %135 = icmp slt i32 %134, 3
  br i1 %135, label %136, label %139

136:                                              ; preds = %132
  tail call void @_ZN3gpu19CommandBufferHelper23WaitForAvailableEntriesEi(%"class.gpu::CommandBufferHelper"* %121, i32 3) #10
  %137 = load i32, i32* %133, align 4
  %138 = icmp slt i32 %137, 3
  br i1 %138, label %156, label %139

139:                                              ; preds = %136, %132
  %140 = phi i32 [ %137, %136 ], [ %134, %132 ]
  %141 = getelementptr inbounds %"class.gpu::gles2::GLES2CmdHelper", %"class.gpu::gles2::GLES2CmdHelper"* %3, i64 0, i32 0, i32 5
  %142 = load %"union.gpu::CommandBufferEntry"*, %"union.gpu::CommandBufferEntry"** %141, align 8
  %143 = getelementptr inbounds %"class.gpu::gles2::GLES2CmdHelper", %"class.gpu::gles2::GLES2CmdHelper"* %3, i64 0, i32 0, i32 9
  %144 = load i32, i32* %143, align 4
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %142, i64 %145
  %147 = add nsw i32 %144, 3
  store i32 %147, i32* %143, align 4
  %148 = add nsw i32 %140, -3
  store i32 %148, i32* %133, align 4
  %149 = icmp eq %"union.gpu::CommandBufferEntry"* %146, null
  br i1 %149, label %156, label %150

150:                                              ; preds = %139
  %151 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %146, i64 0, i32 0, i32 0
  store i32 543162371, i32* %151, align 4
  %152 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %146, i64 1
  %153 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %152, i64 0, i32 0, i32 0
  store i32 34962, i32* %153, align 4
  %154 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %146, i64 2
  %155 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %154, i64 0, i32 0, i32 0
  store i32 %120, i32* %155, align 4
  br label %156

156:                                              ; preds = %136, %139, %150
  %157 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 3
  store i32 0, i32* %157, align 4
  %158 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 2
  %159 = load i32, i32* %158, align 8
  %160 = icmp sgt i32 %118, %159
  br i1 %160, label %161, label %163

161:                                              ; preds = %156
  %162 = sext i32 %118 to i64
  tail call void @_ZN3gpu5gles219GLES2Implementation16BufferDataHelperEjlPKvj(%"class.gpu::gles2::GLES2Implementation"* %2, i32 34962, i64 %162, i8* null, i32 35048) #10
  store i32 %118, i32* %158, align 8
  br label %163

163:                                              ; preds = %161, %156
  %164 = load i64, i64* %30, align 8
  %165 = load i64, i64* %32, align 8
  %166 = icmp eq i64 %164, %165
  br i1 %166, label %295, label %167

167:                                              ; preds = %163
  %168 = icmp eq i32 %5, 0
  %169 = add nsw i32 %5, -1
  %170 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 6
  %171 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %172 = getelementptr inbounds %"class.gpu::gles2::GLES2CmdHelper", %"class.gpu::gles2::GLES2CmdHelper"* %3, i64 0, i32 0, i32 5
  %173 = getelementptr inbounds %"class.gpu::gles2::GLES2CmdHelper", %"class.gpu::gles2::GLES2CmdHelper"* %3, i64 0, i32 0, i32 9
  br label %174

174:                                              ; preds = %167, %287
  %175 = phi i64 [ %165, %167 ], [ %288, %287 ]
  %176 = phi i64 [ %164, %167 ], [ %289, %287 ]
  %177 = phi i64 [ 0, %167 ], [ %291, %287 ]
  %178 = phi i32 [ 0, %167 ], [ %290, %287 ]
  %179 = inttoptr i64 %175 to %"class.gpu::gles2::VertexArrayObject::VertexAttrib"*
  %180 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %179, i64 %177, i32 2
  %181 = load i32, i32* %180, align 4
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %287

183:                                              ; preds = %174
  %184 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %179, i64 %177, i32 0
  %185 = load i8, i8* %184, align 8, !range !2
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %287, label %187

187:                                              ; preds = %183
  %188 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %179, i64 %177, i32 3
  %189 = load i32, i32* %188, align 8
  %190 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %179, i64 %177, i32 4
  %191 = load i32, i32* %190, align 4
  %192 = tail call i32 @_ZN3gpu5gles29GLES2Util25GetGroupSizeForBufferTypeEjj(i32 %189, i32 %191) #10
  %193 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %179, i64 %177, i32 8
  %194 = load i32, i32* %193, align 8
  %195 = icmp eq i32 %194, 0
  %196 = select i1 %195, i32 %192, i32 %194
  br i1 %168, label %204, label %197

197:                                              ; preds = %187
  %198 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %179, i64 %177, i32 9
  %199 = load i32, i32* %198, align 4
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %204, label %201

201:                                              ; preds = %197
  %202 = udiv i32 %169, %199
  %203 = add nuw i32 %202, 1
  br label %204

204:                                              ; preds = %187, %197, %201
  %205 = phi i32 [ %203, %201 ], [ %4, %197 ], [ %4, %187 ]
  %206 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %179, i64 %177, i32 7
  %207 = load i8*, i8** %206, align 8
  %208 = mul nsw i32 %205, %192
  %209 = load i32, i32* %170, align 8
  %210 = icmp slt i32 %209, %208
  %211 = sext i32 %208 to i64
  br i1 %210, label %212, label %218

212:                                              ; preds = %204
  %213 = tail call i8* @_Znam(i64 %211) #11
  %214 = load i8*, i8** %171, align 8
  store i8* %213, i8** %171, align 8
  %215 = icmp eq i8* %214, null
  br i1 %215, label %217, label %216

216:                                              ; preds = %212
  tail call void @_ZdaPv(i8* nonnull %214) #11
  br label %217

217:                                              ; preds = %216, %212
  store i32 %208, i32* %170, align 8
  br label %218

218:                                              ; preds = %217, %204
  %219 = load i8*, i8** %171, align 8
  %220 = getelementptr inbounds i8, i8* %219, i64 %211
  %221 = icmp sgt i32 %208, 0
  br i1 %221, label %222, label %233

222:                                              ; preds = %218
  %223 = sext i32 %192 to i64
  %224 = sext i32 %196 to i64
  br label %225

225:                                              ; preds = %225, %222
  %226 = phi i8* [ %219, %222 ], [ %229, %225 ]
  %227 = phi i8* [ %207, %222 ], [ %228, %225 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %226, i8* align 1 %227, i64 %223, i1 false) #10
  %228 = getelementptr inbounds i8, i8* %227, i64 %224
  %229 = getelementptr inbounds i8, i8* %226, i64 %223
  %230 = icmp ult i8* %229, %220
  br i1 %230, label %225, label %231

231:                                              ; preds = %225
  %232 = load i8*, i8** %171, align 8
  br label %233

233:                                              ; preds = %231, %218
  %234 = phi i8* [ %232, %231 ], [ %219, %218 ]
  %235 = load i32, i32* %157, align 4
  %236 = sext i32 %235 to i64
  tail call void @_ZN3gpu5gles219GLES2Implementation19BufferSubDataHelperEjllPKv(%"class.gpu::gles2::GLES2Implementation"* %2, i32 34962, i64 %236, i64 %211, i8* %234) #10
  %237 = load i32, i32* %188, align 8
  %238 = load i32, i32* %190, align 4
  %239 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %179, i64 %177, i32 5
  %240 = load i8, i8* %239, align 8
  %241 = load i32, i32* %157, align 4
  %242 = load i32, i32* %122, align 8
  %243 = add nsw i32 %242, 1
  store i32 %243, i32* %122, align 8
  %244 = load i8, i8* %125, align 2, !range !2
  %245 = icmp ne i8 %244, 0
  %246 = srem i32 %243, 100
  %247 = icmp eq i32 %246, 0
  %248 = and i1 %245, %247
  br i1 %248, label %249, label %250

249:                                              ; preds = %233
  tail call void @_ZN3gpu19CommandBufferHelper18PeriodicFlushCheckEv(%"class.gpu::CommandBufferHelper"* %121) #10
  br label %250

250:                                              ; preds = %249, %233
  %251 = load i32, i32* %133, align 4
  %252 = icmp slt i32 %251, 7
  br i1 %252, label %253, label %256

253:                                              ; preds = %250
  tail call void @_ZN3gpu19CommandBufferHelper23WaitForAvailableEntriesEi(%"class.gpu::CommandBufferHelper"* %121, i32 7) #10
  %254 = load i32, i32* %133, align 4
  %255 = icmp slt i32 %254, 7
  br i1 %255, label %280, label %256

256:                                              ; preds = %253, %250
  %257 = phi i32 [ %254, %253 ], [ %251, %250 ]
  %258 = load %"union.gpu::CommandBufferEntry"*, %"union.gpu::CommandBufferEntry"** %172, align 8
  %259 = load i32, i32* %173, align 4
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %258, i64 %260
  %262 = add nsw i32 %259, 7
  store i32 %262, i32* %173, align 4
  %263 = add nsw i32 %257, -7
  store i32 %263, i32* %133, align 4
  %264 = icmp eq %"union.gpu::CommandBufferEntry"* %261, null
  br i1 %264, label %280, label %265

265:                                              ; preds = %256
  %266 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %261, i64 0, i32 0, i32 0
  store i32 1012924423, i32* %266, align 4
  %267 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %261, i64 1
  %268 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %267, i64 0, i32 0, i32 0
  store i32 %178, i32* %268, align 4
  %269 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %261, i64 2
  %270 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %269, i64 0, i32 0, i32 0
  store i32 %237, i32* %270, align 4
  %271 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %261, i64 3
  %272 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %271, i64 0, i32 0, i32 0
  store i32 %238, i32* %272, align 4
  %273 = zext i8 %240 to i32
  %274 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %261, i64 4
  %275 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %274, i64 0, i32 0, i32 0
  store i32 %273, i32* %275, align 4
  %276 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %261, i64 5
  %277 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %276, i64 0, i32 0, i32 0
  store i32 0, i32* %277, align 4
  %278 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %261, i64 6
  %279 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %278, i64 0, i32 0, i32 0
  store i32 %241, i32* %279, align 4
  br label %280

280:                                              ; preds = %253, %256, %265
  %281 = add nsw i32 %208, 3
  %282 = and i32 %281, -4
  %283 = load i32, i32* %157, align 4
  %284 = add nsw i32 %283, %282
  store i32 %284, i32* %157, align 4
  %285 = load i64, i64* %30, align 8
  %286 = load i64, i64* %32, align 8
  br label %287

287:                                              ; preds = %183, %280, %174
  %288 = phi i64 [ %175, %183 ], [ %286, %280 ], [ %175, %174 ]
  %289 = phi i64 [ %176, %183 ], [ %285, %280 ], [ %176, %174 ]
  %290 = add i32 %178, 1
  %291 = zext i32 %290 to i64
  %292 = sub i64 %289, %288
  %293 = sdiv exact i64 %292, 48
  %294 = icmp ugt i64 %293, %291
  br i1 %294, label %174, label %295

295:                                              ; preds = %287, %163, %7, %112, %11, %21
  %296 = phi i1 [ false, %21 ], [ false, %11 ], [ false, %112 ], [ false, %7 ], [ true, %163 ], [ true, %287 ]
  ret i1 %296
}

declare i32 @_ZN3gpu5gles29GLES2Util25GetGroupSizeForBufferTypeEjj(i32, i32) local_unnamed_addr #6

declare void @_ZN3gpu5gles219GLES2Implementation16BufferDataHelperEjlPKvj(%"class.gpu::gles2::GLES2Implementation"*, i32, i64, i8*, i32) local_unnamed_addr #6

declare void @_ZN3gpu5gles219GLES2Implementation19BufferSubDataHelperEjllPKv(%"class.gpu::gles2::GLES2Implementation"*, i32, i64, i64, i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu5gles224VertexArrayObjectManager39SetupSimulatedIndexAndClientSideBuffersEPKcPNS0_19GLES2ImplementationEPNS0_14GLES2CmdHelperEijiPKvPjPb(%"class.gpu::gles2::VertexArrayObjectManager"* nocapture, i8*, %"class.gpu::gles2::GLES2Implementation"*, %"class.gpu::gles2::GLES2CmdHelper"*, i32, i32, i32, i8*, i32* nocapture, i8* nocapture) local_unnamed_addr #0 align 2 {
  %11 = alloca i8, align 1
  store i8 0, i8* %9, align 1
  %12 = ptrtoint i8* %7 to i64
  %13 = trunc i64 %12 to i32
  store i32 %13, i32* %8, align 4
  %14 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 12
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %317, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 10
  %19 = load %"class.gpu::gles2::VertexArrayObject"*, %"class.gpu::gles2::VertexArrayObject"** %18, align 8
  %20 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %19, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %303

23:                                               ; preds = %17
  store i8 1, i8* %9, align 1
  store i32 0, i32* %8, align 4
  switch i32 %5, label %232 [
    i32 5121, label %24
    i32 5123, label %117
    i32 5125, label %211
  ]

24:                                               ; preds = %23
  %25 = icmp sgt i32 %4, 0
  br i1 %25, label %26, label %232

26:                                               ; preds = %24
  %27 = zext i32 %4 to i64
  %28 = icmp ult i32 %4, 8
  br i1 %28, label %104, label %29

29:                                               ; preds = %26
  %30 = and i64 %27, 4294967288
  %31 = add nsw i64 %30, -8
  %32 = lshr exact i64 %31, 3
  %33 = add nuw nsw i64 %32, 1
  %34 = and i64 %33, 1
  %35 = icmp eq i64 %31, 0
  br i1 %35, label %71, label %36

36:                                               ; preds = %29
  %37 = sub nuw nsw i64 %33, %34
  br label %38

38:                                               ; preds = %38, %36
  %39 = phi i64 [ 0, %36 ], [ %68, %38 ]
  %40 = phi <4 x i32> [ <i32 -1, i32 -1, i32 -1, i32 -1>, %36 ], [ %66, %38 ]
  %41 = phi <4 x i32> [ <i32 -1, i32 -1, i32 -1, i32 -1>, %36 ], [ %67, %38 ]
  %42 = phi i64 [ %37, %36 ], [ %69, %38 ]
  %43 = getelementptr inbounds i8, i8* %7, i64 %39
  %44 = bitcast i8* %43 to <4 x i8>*
  %45 = load <4 x i8>, <4 x i8>* %44, align 1
  %46 = getelementptr inbounds i8, i8* %43, i64 4
  %47 = bitcast i8* %46 to <4 x i8>*
  %48 = load <4 x i8>, <4 x i8>* %47, align 1
  %49 = zext <4 x i8> %45 to <4 x i32>
  %50 = zext <4 x i8> %48 to <4 x i32>
  %51 = icmp slt <4 x i32> %40, %49
  %52 = icmp slt <4 x i32> %41, %50
  %53 = select <4 x i1> %51, <4 x i32> %49, <4 x i32> %40
  %54 = select <4 x i1> %52, <4 x i32> %50, <4 x i32> %41
  %55 = or i64 %39, 8
  %56 = getelementptr inbounds i8, i8* %7, i64 %55
  %57 = bitcast i8* %56 to <4 x i8>*
  %58 = load <4 x i8>, <4 x i8>* %57, align 1
  %59 = getelementptr inbounds i8, i8* %56, i64 4
  %60 = bitcast i8* %59 to <4 x i8>*
  %61 = load <4 x i8>, <4 x i8>* %60, align 1
  %62 = zext <4 x i8> %58 to <4 x i32>
  %63 = zext <4 x i8> %61 to <4 x i32>
  %64 = icmp slt <4 x i32> %53, %62
  %65 = icmp slt <4 x i32> %54, %63
  %66 = select <4 x i1> %64, <4 x i32> %62, <4 x i32> %53
  %67 = select <4 x i1> %65, <4 x i32> %63, <4 x i32> %54
  %68 = add i64 %39, 16
  %69 = add i64 %42, -2
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %38, !llvm.loop !5

71:                                               ; preds = %38, %29
  %72 = phi <4 x i32> [ undef, %29 ], [ %66, %38 ]
  %73 = phi <4 x i32> [ undef, %29 ], [ %67, %38 ]
  %74 = phi i64 [ 0, %29 ], [ %68, %38 ]
  %75 = phi <4 x i32> [ <i32 -1, i32 -1, i32 -1, i32 -1>, %29 ], [ %66, %38 ]
  %76 = phi <4 x i32> [ <i32 -1, i32 -1, i32 -1, i32 -1>, %29 ], [ %67, %38 ]
  %77 = icmp eq i64 %34, 0
  br i1 %77, label %91, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds i8, i8* %7, i64 %74
  %80 = bitcast i8* %79 to <4 x i8>*
  %81 = load <4 x i8>, <4 x i8>* %80, align 1
  %82 = getelementptr inbounds i8, i8* %79, i64 4
  %83 = bitcast i8* %82 to <4 x i8>*
  %84 = load <4 x i8>, <4 x i8>* %83, align 1
  %85 = zext <4 x i8> %81 to <4 x i32>
  %86 = zext <4 x i8> %84 to <4 x i32>
  %87 = icmp slt <4 x i32> %76, %86
  %88 = select <4 x i1> %87, <4 x i32> %86, <4 x i32> %76
  %89 = icmp slt <4 x i32> %75, %85
  %90 = select <4 x i1> %89, <4 x i32> %85, <4 x i32> %75
  br label %91

91:                                               ; preds = %71, %78
  %92 = phi <4 x i32> [ %72, %71 ], [ %90, %78 ]
  %93 = phi <4 x i32> [ %73, %71 ], [ %88, %78 ]
  %94 = icmp sgt <4 x i32> %92, %93
  %95 = select <4 x i1> %94, <4 x i32> %92, <4 x i32> %93
  %96 = shufflevector <4 x i32> %95, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %97 = icmp sgt <4 x i32> %95, %96
  %98 = select <4 x i1> %97, <4 x i32> %95, <4 x i32> %96
  %99 = shufflevector <4 x i32> %98, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %100 = icmp sgt <4 x i32> %98, %99
  %101 = select <4 x i1> %100, <4 x i32> %98, <4 x i32> %99
  %102 = extractelement <4 x i32> %101, i32 0
  %103 = icmp eq i64 %30, %27
  br i1 %103, label %232, label %104

104:                                              ; preds = %91, %26
  %105 = phi i64 [ 0, %26 ], [ %30, %91 ]
  %106 = phi i32 [ -1, %26 ], [ %102, %91 ]
  br label %107

107:                                              ; preds = %104, %107
  %108 = phi i64 [ %115, %107 ], [ %105, %104 ]
  %109 = phi i32 [ %114, %107 ], [ %106, %104 ]
  %110 = getelementptr inbounds i8, i8* %7, i64 %108
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i32
  %113 = icmp slt i32 %109, %112
  %114 = select i1 %113, i32 %112, i32 %109
  %115 = add nuw nsw i64 %108, 1
  %116 = icmp eq i64 %115, %27
  br i1 %116, label %232, label %107, !llvm.loop !7

117:                                              ; preds = %23
  %118 = bitcast i8* %7 to i16*
  %119 = icmp sgt i32 %4, 0
  br i1 %119, label %120, label %232

120:                                              ; preds = %117
  %121 = zext i32 %4 to i64
  %122 = icmp ult i32 %4, 8
  br i1 %122, label %198, label %123

123:                                              ; preds = %120
  %124 = and i64 %121, 4294967288
  %125 = add nsw i64 %124, -8
  %126 = lshr exact i64 %125, 3
  %127 = add nuw nsw i64 %126, 1
  %128 = and i64 %127, 1
  %129 = icmp eq i64 %125, 0
  br i1 %129, label %165, label %130

130:                                              ; preds = %123
  %131 = sub nuw nsw i64 %127, %128
  br label %132

132:                                              ; preds = %132, %130
  %133 = phi i64 [ 0, %130 ], [ %162, %132 ]
  %134 = phi <4 x i32> [ <i32 -1, i32 -1, i32 -1, i32 -1>, %130 ], [ %160, %132 ]
  %135 = phi <4 x i32> [ <i32 -1, i32 -1, i32 -1, i32 -1>, %130 ], [ %161, %132 ]
  %136 = phi i64 [ %131, %130 ], [ %163, %132 ]
  %137 = getelementptr inbounds i16, i16* %118, i64 %133
  %138 = bitcast i16* %137 to <4 x i16>*
  %139 = load <4 x i16>, <4 x i16>* %138, align 2
  %140 = getelementptr inbounds i16, i16* %137, i64 4
  %141 = bitcast i16* %140 to <4 x i16>*
  %142 = load <4 x i16>, <4 x i16>* %141, align 2
  %143 = zext <4 x i16> %139 to <4 x i32>
  %144 = zext <4 x i16> %142 to <4 x i32>
  %145 = icmp slt <4 x i32> %134, %143
  %146 = icmp slt <4 x i32> %135, %144
  %147 = select <4 x i1> %145, <4 x i32> %143, <4 x i32> %134
  %148 = select <4 x i1> %146, <4 x i32> %144, <4 x i32> %135
  %149 = or i64 %133, 8
  %150 = getelementptr inbounds i16, i16* %118, i64 %149
  %151 = bitcast i16* %150 to <4 x i16>*
  %152 = load <4 x i16>, <4 x i16>* %151, align 2
  %153 = getelementptr inbounds i16, i16* %150, i64 4
  %154 = bitcast i16* %153 to <4 x i16>*
  %155 = load <4 x i16>, <4 x i16>* %154, align 2
  %156 = zext <4 x i16> %152 to <4 x i32>
  %157 = zext <4 x i16> %155 to <4 x i32>
  %158 = icmp slt <4 x i32> %147, %156
  %159 = icmp slt <4 x i32> %148, %157
  %160 = select <4 x i1> %158, <4 x i32> %156, <4 x i32> %147
  %161 = select <4 x i1> %159, <4 x i32> %157, <4 x i32> %148
  %162 = add i64 %133, 16
  %163 = add i64 %136, -2
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %165, label %132, !llvm.loop !9

165:                                              ; preds = %132, %123
  %166 = phi <4 x i32> [ undef, %123 ], [ %160, %132 ]
  %167 = phi <4 x i32> [ undef, %123 ], [ %161, %132 ]
  %168 = phi i64 [ 0, %123 ], [ %162, %132 ]
  %169 = phi <4 x i32> [ <i32 -1, i32 -1, i32 -1, i32 -1>, %123 ], [ %160, %132 ]
  %170 = phi <4 x i32> [ <i32 -1, i32 -1, i32 -1, i32 -1>, %123 ], [ %161, %132 ]
  %171 = icmp eq i64 %128, 0
  br i1 %171, label %185, label %172

172:                                              ; preds = %165
  %173 = getelementptr inbounds i16, i16* %118, i64 %168
  %174 = bitcast i16* %173 to <4 x i16>*
  %175 = load <4 x i16>, <4 x i16>* %174, align 2
  %176 = getelementptr inbounds i16, i16* %173, i64 4
  %177 = bitcast i16* %176 to <4 x i16>*
  %178 = load <4 x i16>, <4 x i16>* %177, align 2
  %179 = zext <4 x i16> %175 to <4 x i32>
  %180 = zext <4 x i16> %178 to <4 x i32>
  %181 = icmp slt <4 x i32> %170, %180
  %182 = select <4 x i1> %181, <4 x i32> %180, <4 x i32> %170
  %183 = icmp slt <4 x i32> %169, %179
  %184 = select <4 x i1> %183, <4 x i32> %179, <4 x i32> %169
  br label %185

185:                                              ; preds = %165, %172
  %186 = phi <4 x i32> [ %166, %165 ], [ %184, %172 ]
  %187 = phi <4 x i32> [ %167, %165 ], [ %182, %172 ]
  %188 = icmp sgt <4 x i32> %186, %187
  %189 = select <4 x i1> %188, <4 x i32> %186, <4 x i32> %187
  %190 = shufflevector <4 x i32> %189, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %191 = icmp sgt <4 x i32> %189, %190
  %192 = select <4 x i1> %191, <4 x i32> %189, <4 x i32> %190
  %193 = shufflevector <4 x i32> %192, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %194 = icmp sgt <4 x i32> %192, %193
  %195 = select <4 x i1> %194, <4 x i32> %192, <4 x i32> %193
  %196 = extractelement <4 x i32> %195, i32 0
  %197 = icmp eq i64 %124, %121
  br i1 %197, label %232, label %198

198:                                              ; preds = %185, %120
  %199 = phi i64 [ 0, %120 ], [ %124, %185 ]
  %200 = phi i32 [ -1, %120 ], [ %196, %185 ]
  br label %201

201:                                              ; preds = %198, %201
  %202 = phi i64 [ %209, %201 ], [ %199, %198 ]
  %203 = phi i32 [ %208, %201 ], [ %200, %198 ]
  %204 = getelementptr inbounds i16, i16* %118, i64 %202
  %205 = load i16, i16* %204, align 2
  %206 = zext i16 %205 to i32
  %207 = icmp slt i32 %203, %206
  %208 = select i1 %207, i32 %206, i32 %203
  %209 = add nuw nsw i64 %202, 1
  %210 = icmp eq i64 %209, %121
  br i1 %210, label %232, label %201, !llvm.loop !10

211:                                              ; preds = %23
  %212 = bitcast i8* %7 to i32*
  %213 = icmp sgt i32 %4, 0
  br i1 %213, label %214, label %232

214:                                              ; preds = %211
  %215 = zext i32 %4 to i64
  br label %216

216:                                              ; preds = %222, %214
  %217 = phi i64 [ 0, %214 ], [ %225, %222 ]
  %218 = phi i32 [ -1, %214 ], [ %224, %222 ]
  %219 = getelementptr inbounds i32, i32* %212, i64 %217
  %220 = load i32, i32* %219, align 4
  %221 = icmp slt i32 %220, 0
  br i1 %221, label %227, label %222

222:                                              ; preds = %216
  %223 = icmp sgt i32 %220, %218
  %224 = select i1 %223, i32 %220, i32 %218
  %225 = add nuw nsw i64 %217, 1
  %226 = icmp eq i64 %225, %215
  br i1 %226, label %232, label %216

227:                                              ; preds = %216
  %228 = bitcast %"class.gpu::gles2::GLES2Implementation"* %2 to void (%"class.gpu::gles2::GLES2Implementation"*, i32, i8*, i8*)***
  %229 = load void (%"class.gpu::gles2::GLES2Implementation"*, i32, i8*, i8*)**, void (%"class.gpu::gles2::GLES2Implementation"*, i32, i8*, i8*)*** %228, align 8
  %230 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Implementation"*, i32, i8*, i8*)*, void (%"class.gpu::gles2::GLES2Implementation"*, i32, i8*, i8*)** %229, i64 393
  %231 = load void (%"class.gpu::gles2::GLES2Implementation"*, i32, i8*, i8*)*, void (%"class.gpu::gles2::GLES2Implementation"*, i32, i8*, i8*)** %230, align 8
  tail call void %231(%"class.gpu::gles2::GLES2Implementation"* %2, i32 1282, i8* %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #10
  br label %317

232:                                              ; preds = %222, %201, %107, %185, %91, %211, %117, %24, %23
  %233 = phi i32 [ -1, %23 ], [ -1, %24 ], [ -1, %117 ], [ -1, %211 ], [ %102, %91 ], [ %196, %185 ], [ %114, %107 ], [ %208, %201 ], [ %224, %222 ]
  %234 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 4
  %235 = load i32, i32* %234, align 8
  %236 = bitcast %"class.gpu::gles2::GLES2CmdHelper"* %3 to %"class.gpu::CommandBufferHelper"*
  %237 = getelementptr inbounds %"class.gpu::gles2::GLES2CmdHelper", %"class.gpu::gles2::GLES2CmdHelper"* %3, i64 0, i32 0, i32 15
  %238 = load i32, i32* %237, align 8
  %239 = add nsw i32 %238, 1
  store i32 %239, i32* %237, align 8
  %240 = getelementptr inbounds %"class.gpu::gles2::GLES2CmdHelper", %"class.gpu::gles2::GLES2CmdHelper"* %3, i64 0, i32 0, i32 18
  %241 = load i8, i8* %240, align 2, !range !2
  %242 = icmp ne i8 %241, 0
  %243 = srem i32 %239, 100
  %244 = icmp eq i32 %243, 0
  %245 = and i1 %242, %244
  br i1 %245, label %246, label %247

246:                                              ; preds = %232
  tail call void @_ZN3gpu19CommandBufferHelper18PeriodicFlushCheckEv(%"class.gpu::CommandBufferHelper"* %236) #10
  br label %247

247:                                              ; preds = %246, %232
  %248 = getelementptr inbounds %"class.gpu::gles2::GLES2CmdHelper", %"class.gpu::gles2::GLES2CmdHelper"* %3, i64 0, i32 0, i32 7
  %249 = load i32, i32* %248, align 4
  %250 = icmp slt i32 %249, 3
  br i1 %250, label %251, label %254

251:                                              ; preds = %247
  tail call void @_ZN3gpu19CommandBufferHelper23WaitForAvailableEntriesEi(%"class.gpu::CommandBufferHelper"* %236, i32 3) #10
  %252 = load i32, i32* %248, align 4
  %253 = icmp slt i32 %252, 3
  br i1 %253, label %271, label %254

254:                                              ; preds = %251, %247
  %255 = phi i32 [ %252, %251 ], [ %249, %247 ]
  %256 = getelementptr inbounds %"class.gpu::gles2::GLES2CmdHelper", %"class.gpu::gles2::GLES2CmdHelper"* %3, i64 0, i32 0, i32 5
  %257 = load %"union.gpu::CommandBufferEntry"*, %"union.gpu::CommandBufferEntry"** %256, align 8
  %258 = getelementptr inbounds %"class.gpu::gles2::GLES2CmdHelper", %"class.gpu::gles2::GLES2CmdHelper"* %3, i64 0, i32 0, i32 9
  %259 = load i32, i32* %258, align 4
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %257, i64 %260
  %262 = add nsw i32 %259, 3
  store i32 %262, i32* %258, align 4
  %263 = add nsw i32 %255, -3
  store i32 %263, i32* %248, align 4
  %264 = icmp eq %"union.gpu::CommandBufferEntry"* %261, null
  br i1 %264, label %271, label %265

265:                                              ; preds = %254
  %266 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %261, i64 0, i32 0, i32 0
  store i32 543162371, i32* %266, align 4
  %267 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %261, i64 1
  %268 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %267, i64 0, i32 0, i32 0
  store i32 34963, i32* %268, align 4
  %269 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %261, i64 2
  %270 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %269, i64 0, i32 0, i32 0
  store i32 %235, i32* %270, align 4
  br label %271

271:                                              ; preds = %251, %254, %265
  %272 = tail call i32 @_ZN3gpu5gles29GLES2Util23GetGLTypeSizeForBuffersEj(i32 %5) #10
  %273 = icmp slt i32 %4, 0
  %274 = sub i32 0, %4
  %275 = select i1 %273, i32 %274, i32 %4
  %276 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %275, i32 %272) #10
  %277 = extractvalue { i32, i1 } %276, 1
  %278 = extractvalue { i32, i1 } %276, 0
  %279 = icmp ne i32 %278, 0
  %280 = and i1 %273, %279
  %281 = or i1 %277, %280
  %282 = sub i32 0, %278
  %283 = select i1 %273, i32 %282, i32 %278
  %284 = xor i1 %281, true
  %285 = icmp sgt i32 %283, -1
  %286 = and i1 %285, %284
  br i1 %286, label %292, label %287, !prof !11

287:                                              ; preds = %271
  %288 = bitcast %"class.gpu::gles2::GLES2Implementation"* %2 to void (%"class.gpu::gles2::GLES2Implementation"*, i32, i8*, i8*)***
  %289 = load void (%"class.gpu::gles2::GLES2Implementation"*, i32, i8*, i8*)**, void (%"class.gpu::gles2::GLES2Implementation"*, i32, i8*, i8*)*** %288, align 8
  %290 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Implementation"*, i32, i8*, i8*)*, void (%"class.gpu::gles2::GLES2Implementation"*, i32, i8*, i8*)** %289, i64 393
  %291 = load void (%"class.gpu::gles2::GLES2Implementation"*, i32, i8*, i8*)*, void (%"class.gpu::gles2::GLES2Implementation"*, i32, i8*, i8*)** %290, align 8
  tail call void %291(%"class.gpu::gles2::GLES2Implementation"* %2, i32 1282, i8* %1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3, i64 0, i64 0)) #10
  br label %317

292:                                              ; preds = %271
  %293 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObjectManager", %"class.gpu::gles2::VertexArrayObjectManager"* %0, i64 0, i32 5
  %294 = load i32, i32* %293, align 4
  %295 = icmp sgt i32 %283, %294
  br i1 %295, label %298, label %296

296:                                              ; preds = %292
  %297 = sext i32 %283 to i64
  br label %300

298:                                              ; preds = %292
  store i32 %283, i32* %293, align 4
  %299 = sext i32 %283 to i64
  tail call void @_ZN3gpu5gles219GLES2Implementation16BufferDataHelperEjlPKvj(%"class.gpu::gles2::GLES2Implementation"* %2, i32 34963, i64 %299, i8* null, i32 35048) #10
  br label %300

300:                                              ; preds = %296, %298
  %301 = phi i64 [ %297, %296 ], [ %299, %298 ]
  tail call void @_ZN3gpu5gles219GLES2Implementation19BufferSubDataHelperEjllPKv(%"class.gpu::gles2::GLES2Implementation"* %2, i32 34963, i64 0, i64 %301, i8* %7) #10
  %302 = add nsw i32 %233, 1
  br label %310

303:                                              ; preds = %17
  %304 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject", %"class.gpu::gles2::VertexArrayObject"* %19, i64 0, i32 0
  %305 = load i32, i32* %304, align 8
  %306 = icmp sgt i32 %305, 0
  br i1 %306, label %307, label %310

307:                                              ; preds = %303
  %308 = tail call i32 @_ZN3gpu5gles219GLES2Implementation33GetMaxValueInBufferCHROMIUMHelperEjijj(%"class.gpu::gles2::GLES2Implementation"* %2, i32 %21, i32 %4, i32 %5, i32 %13) #10
  %309 = add i32 %308, 1
  br label %310

310:                                              ; preds = %300, %303, %307
  %311 = phi i32 [ %302, %300 ], [ %309, %307 ], [ 0, %303 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #10
  store i8 0, i8* %11, align 1
  %312 = call zeroext i1 @_ZN3gpu5gles224VertexArrayObjectManager31SetupSimulatedClientSideBuffersEPKcPNS0_19GLES2ImplementationEPNS0_14GLES2CmdHelperEiiPb(%"class.gpu::gles2::VertexArrayObjectManager"* %0, i8* %1, %"class.gpu::gles2::GLES2Implementation"* %2, %"class.gpu::gles2::GLES2CmdHelper"* %3, i32 %311, i32 %6, i8* nonnull %11)
  %313 = load i8, i8* %9, align 1, !range !2
  %314 = load i8, i8* %11, align 1
  %315 = and i8 %314, 1
  %316 = or i8 %315, %313
  store i8 %316, i8* %9, align 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #10
  br label %317

317:                                              ; preds = %287, %227, %310, %10
  %318 = phi i1 [ true, %10 ], [ true, %310 ], [ false, %227 ], [ false, %287 ]
  ret i1 %318
}

declare i32 @_ZN3gpu5gles29GLES2Util23GetGLTypeSizeForBuffersEj(i32) local_unnamed_addr #6

declare i32 @_ZN3gpu5gles219GLES2Implementation33GetMaxValueInBufferCHROMIUMHelperEjijj(%"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32, i32) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #7

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

declare void @_ZN3gpu19CommandBufferHelper18PeriodicFlushCheckEv(%"class.gpu::CommandBufferHelper"*) local_unnamed_addr #6

declare void @_ZN3gpu19CommandBufferHelper23WaitForAvailableEntriesEi(%"class.gpu::CommandBufferHelper"*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gpu5gles217VertexArrayObject12VertexAttribENS_9allocatorIS4_EEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.gpu::gles2::VertexArrayObject::VertexAttrib"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.gpu::gles2::VertexArrayObject::VertexAttrib"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 48
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %31, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.gpu::gles2::VertexArrayObject::VertexAttrib"*
  %14 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %13, i64 %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %29, label %18

16:                                               ; preds = %18
  %17 = ptrtoint %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %14 to i64
  br label %29

18:                                               ; preds = %12, %18
  %19 = phi %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* [ %27, %18 ], [ %13, %12 ]
  %20 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %19, i64 0, i32 0
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %19, i64 0, i32 2
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %19, i64 0, i32 3
  store i32 4, i32* %22, align 8
  %23 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %19, i64 0, i32 4
  store i32 5126, i32* %23, align 4
  %24 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %19, i64 0, i32 5
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %19, i64 0, i32 7
  %26 = bitcast i8** %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 17, i1 false) #10
  %27 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %19, i64 1
  %28 = icmp eq %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %27, %14
  br i1 %28, label %16, label %18

29:                                               ; preds = %12, %16
  %30 = phi i64 [ %17, %16 ], [ %8, %12 ]
  store i64 %30, i64* %7, align 8
  br label %92

31:                                               ; preds = %2
  %32 = bitcast %"class.std::__1::vector"* %0 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %8, %33
  %35 = sdiv exact i64 %34, 48
  %36 = add i64 %35, %1
  %37 = icmp ugt i64 %36, 384307168202282325
  br i1 %37, label %38, label %40

38:                                               ; preds = %31
  %39 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %39) #12
  unreachable

40:                                               ; preds = %31
  %41 = sub i64 %5, %33
  %42 = sdiv exact i64 %41, 48
  %43 = icmp ult i64 %42, 192153584101141162
  br i1 %43, label %44, label %49

44:                                               ; preds = %40
  %45 = shl nsw i64 %42, 1
  %46 = icmp ult i64 %45, %36
  %47 = select i1 %46, i64 %36, i64 %45
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %40, %44
  %50 = phi i64 [ %47, %44 ], [ 384307168202282325, %40 ]
  %51 = mul i64 %50, 48
  %52 = tail call i8* @_Znwm(i64 %51) #11
  %53 = bitcast i8* %52 to %"class.gpu::gles2::VertexArrayObject::VertexAttrib"*
  br label %54

54:                                               ; preds = %44, %49
  %55 = phi i64 [ %50, %49 ], [ 0, %44 ]
  %56 = phi %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* [ %53, %49 ], [ null, %44 ]
  %57 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %56, i64 %35
  %58 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %56, i64 %55
  %59 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %57, i64 %1
  br label %60

60:                                               ; preds = %54, %60
  %61 = phi %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* [ %69, %60 ], [ %57, %54 ]
  %62 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %61, i64 0, i32 0
  store i8 0, i8* %62, align 8
  %63 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %61, i64 0, i32 2
  store i32 0, i32* %63, align 4
  %64 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %61, i64 0, i32 3
  store i32 4, i32* %64, align 8
  %65 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %61, i64 0, i32 4
  store i32 5126, i32* %65, align 4
  %66 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %61, i64 0, i32 5
  store i8 0, i8* %66, align 8
  %67 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %61, i64 0, i32 7
  %68 = bitcast i8** %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 17, i1 false) #10
  %69 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %61, i64 1
  %70 = icmp eq %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %59, %69
  br i1 %70, label %71, label %60

71:                                               ; preds = %60
  %72 = ptrtoint %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %58 to i64
  %73 = ptrtoint %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %59 to i64
  %74 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %75 = load %"class.gpu::gles2::VertexArrayObject::VertexAttrib"*, %"class.gpu::gles2::VertexArrayObject::VertexAttrib"** %74, align 8
  %76 = load i64, i64* %7, align 8
  %77 = ptrtoint %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %75 to i64
  %78 = sub i64 %76, %77
  %79 = sdiv exact i64 %78, -48
  %80 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %57, i64 %79
  %81 = ptrtoint %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %80 to i64
  %82 = icmp sgt i64 %78, 0
  br i1 %82, label %83, label %87

83:                                               ; preds = %71
  %84 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %80, i64 0, i32 0
  %85 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %75, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 %78, i1 false) #10
  %86 = load %"class.gpu::gles2::VertexArrayObject::VertexAttrib"*, %"class.gpu::gles2::VertexArrayObject::VertexAttrib"** %74, align 8
  br label %87

87:                                               ; preds = %71, %83
  %88 = phi %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* [ %75, %71 ], [ %86, %83 ]
  store i64 %81, i64* %32, align 8
  store i64 %73, i64* %7, align 8
  store i64 %72, i64* %4, align 8
  %89 = icmp eq %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %88, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.gpu::gles2::VertexArrayObject::VertexAttrib", %"class.gpu::gles2::VertexArrayObject::VertexAttrib"* %88, i64 0, i32 0
  tail call void @_ZdlPv(i8* %91) #11
  br label %92

92:                                               ; preds = %90, %87, %29
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN3gpu5gles217VertexArrayObjectEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJNS_4pairIjS5_EEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i32* dereferenceable(4), %"struct.std::__1::pair.24"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #10, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %146, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 32) #11, !noalias !12
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4, !noalias !12
  store i32 %59, i32* %57, align 8, !noalias !12
  %60 = getelementptr inbounds i8, i8* %55, i64 24
  %61 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %2, i64 0, i32 1
  %62 = bitcast %"class.gpu::gles2::VertexArrayObject"** %61 to i64*
  %63 = load i64, i64* %62, align 8, !noalias !12
  %64 = bitcast i8* %60 to i64*
  store i64 %63, i64* %64, align 8, !noalias !12
  %65 = getelementptr inbounds i8, i8* %55, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %5, i64* %66, align 8, !noalias !12
  %67 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8, !noalias !12
  %68 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %7 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %8, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %53
  %79 = shl i64 %7, 1
  %80 = icmp ult i64 %7, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %7) #10, !range !3
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #10
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN3gpu5gles217VertexArrayObjectEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %90)
  %91 = load i64, i64* %6, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #10, !range !3
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %5
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %5
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %5, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %53
  %102 = phi i64 [ %7, %53 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %54, %53 ], [ %96, %94 ], [ %5, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %55 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i8**
  store i8* %55, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base"* %110, %"struct.std::__1::__hash_node_base"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #10, !range !3
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %55 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %55, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %48, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %48 ]
  %148 = phi %"struct.std::__1::__hash_node_base"* [ %143, %142 ], [ %31, %48 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN3gpu5gles217VertexArrayObjectEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #10
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN3gpu5gles217VertexArrayObjectEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #10, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #10
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #10, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #10
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN3gpu5gles217VertexArrayObjectEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN3gpu5gles217VertexArrayObjectEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #11
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !15

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #10, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #11
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN3gpu5gles217VertexArrayObjectEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE(%"class.std::__1::unique_ptr.371"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #10, !range !3
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.13"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.371"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.371", %"class.std::__1::unique_ptr.371"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.16"** %98 to %"class.std::__1::__compressed_pair.13"**
  store %"class.std::__1::__compressed_pair.13"* %30, %"class.std::__1::__compressed_pair.13"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.371", %"class.std::__1::unique_ptr.371"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.isvectorized", i32 1}
!7 = distinct !{!7, !8, !6}
!8 = !{!"llvm.loop.unroll.runtime.disable"}
!9 = distinct !{!9, !6}
!10 = distinct !{!10, !8, !6}
!11 = !{!"branch_weights", i32 -102759400, i32 4193255}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN3gpu5gles217VertexArrayObjectEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashINS_4pairIjS5_EEJEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISO_EEEEEEmOT_DpOT0_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN3gpu5gles217VertexArrayObjectEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashINS_4pairIjS5_EEJEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISO_EEEEEEmOT_DpOT0_"}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.unroll.disable"}
