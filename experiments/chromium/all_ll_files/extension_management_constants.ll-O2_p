; ModuleID = '../../chrome/browser/extensions/extension_management_constants.cc'
source_filename = "../../chrome/browser/extensions/extension_management_constants.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.extensions::schema_constants::AllowedTypesMapEntry" = type { i8*, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN10extensions16schema_constants9kWildcardE = hidden local_unnamed_addr constant [2 x i8] c"*\00", align 1
@_ZN10extensions16schema_constants17kInstallationModeE = hidden local_unnamed_addr constant [18 x i8] c"installation_mode\00", align 16
@_ZN10extensions16schema_constants8kAllowedE = hidden local_unnamed_addr constant [8 x i8] c"allowed\00", align 1
@_ZN10extensions16schema_constants8kBlockedE = hidden local_unnamed_addr constant [8 x i8] c"blocked\00", align 1
@_ZN10extensions16schema_constants15kForceInstalledE = hidden local_unnamed_addr constant [16 x i8] c"force_installed\00", align 16
@_ZN10extensions16schema_constants16kNormalInstalledE = hidden local_unnamed_addr constant [17 x i8] c"normal_installed\00", align 16
@_ZN10extensions16schema_constants8kRemovedE = hidden local_unnamed_addr constant [8 x i8] c"removed\00", align 1
@_ZN10extensions16schema_constants19kBlockedPermissionsE = hidden local_unnamed_addr constant [20 x i8] c"blocked_permissions\00", align 16
@_ZN10extensions16schema_constants19kAllowedPermissionsE = hidden local_unnamed_addr constant [20 x i8] c"allowed_permissions\00", align 16
@_ZN10extensions16schema_constants19kPolicyBlockedHostsE = hidden local_unnamed_addr constant [22 x i8] c"runtime_blocked_hosts\00", align 16
@_ZN10extensions16schema_constants19kPolicyAllowedHostsE = hidden local_unnamed_addr constant [22 x i8] c"runtime_allowed_hosts\00", align 16
@_ZN10extensions16schema_constants22kMaxItemsURLPatternSetE = hidden local_unnamed_addr constant i64 100, align 8
@_ZN10extensions16schema_constants10kUpdateUrlE = hidden local_unnamed_addr constant [11 x i8] c"update_url\00", align 1
@_ZN10extensions16schema_constants18kOverrideUpdateUrlE = hidden local_unnamed_addr constant [20 x i8] c"override_update_url\00", align 16
@_ZN10extensions16schema_constants15kInstallSourcesE = hidden local_unnamed_addr constant [16 x i8] c"install_sources\00", align 16
@_ZN10extensions16schema_constants13kAllowedTypesE = hidden local_unnamed_addr constant [14 x i8] c"allowed_types\00", align 1
@_ZN10extensions16schema_constants23kMinimumVersionRequiredE = hidden local_unnamed_addr constant [25 x i8] c"minimum_version_required\00", align 16
@_ZN10extensions16schema_constants16kUpdateUrlPrefixE = hidden local_unnamed_addr constant [12 x i8] c"update_url:\00", align 1
@_ZN10extensions16schema_constants22kBlockedInstallMessageE = hidden local_unnamed_addr constant [24 x i8] c"blocked_install_message\00", align 16
@_ZN10extensions16schema_constants11kToolbarPinE = hidden local_unnamed_addr constant [12 x i8] c"toolbar_pin\00", align 1
@_ZN10extensions16schema_constants12kForcePinnedE = hidden local_unnamed_addr constant [13 x i8] c"force_pinned\00", align 1
@_ZN10extensions16schema_constants16kDefaultUnpinnedE = hidden local_unnamed_addr constant [17 x i8] c"default_unpinned\00", align 16
@.str = private unnamed_addr constant [10 x i8] c"extension\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"theme\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"user_script\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"hosted_app\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"legacy_packaged_app\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"platform_app\00", align 1
@_ZN10extensions16schema_constants16kAllowedTypesMapE = hidden local_unnamed_addr constant [6 x %"struct.extensions::schema_constants::AllowedTypesMapEntry"] [%"struct.extensions::schema_constants::AllowedTypesMapEntry" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0), i32 1 }, %"struct.extensions::schema_constants::AllowedTypesMapEntry" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i32 0, i32 0), i32 2 }, %"struct.extensions::schema_constants::AllowedTypesMapEntry" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i32 3 }, %"struct.extensions::schema_constants::AllowedTypesMapEntry" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0), i32 4 }, %"struct.extensions::schema_constants::AllowedTypesMapEntry" { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i32 0, i32 0), i32 5 }, %"struct.extensions::schema_constants::AllowedTypesMapEntry" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i32 0, i32 0), i32 6 }], align 16
@_ZN10extensions16schema_constants20kAllowedTypesMapSizeE = hidden local_unnamed_addr constant i64 6, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10extensions16schema_constants15GetManifestTypeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i8, i8* %3, align 1
  %6 = icmp slt i8 %5, 0
  %7 = load i64, i64* %4, align 8
  %8 = zext i8 %5 to i64
  %9 = select i1 %6, i64 %7, i64 %8
  %10 = icmp eq i64 %9, 9
  br i1 %10, label %11, label %18

11:                                               ; preds = %1
  %12 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i64 9) #2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %25, label %14

14:                                               ; preds = %11
  %15 = load i8, i8* %3, align 1
  %16 = load i64, i64* %4, align 8
  %17 = zext i8 %15 to i64
  br label %18

18:                                               ; preds = %14, %1
  %19 = phi i64 [ %17, %14 ], [ %8, %1 ]
  %20 = phi i64 [ %16, %14 ], [ %7, %1 ]
  %21 = phi i8 [ %15, %14 ], [ %5, %1 ]
  %22 = icmp slt i8 %21, 0
  %23 = select i1 %22, i64 %20, i64 %19
  %24 = icmp eq i64 %23, 5
  br i1 %24, label %31, label %38

25:                                               ; preds = %87, %73, %59, %45, %31, %11
  %26 = phi i64 [ 0, %11 ], [ 1, %31 ], [ 2, %45 ], [ 3, %59 ], [ 4, %73 ], [ 5, %87 ]
  %27 = getelementptr inbounds [6 x %"struct.extensions::schema_constants::AllowedTypesMapEntry"], [6 x %"struct.extensions::schema_constants::AllowedTypesMapEntry"]* @_ZN10extensions16schema_constants16kAllowedTypesMapE, i64 0, i64 %26, i32 1
  %28 = load i32, i32* %27, align 8
  br label %29

29:                                               ; preds = %80, %87, %25
  %30 = phi i32 [ %28, %25 ], [ 0, %87 ], [ 0, %80 ]
  ret i32 %30

31:                                               ; preds = %18
  %32 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i64 5) #2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %25, label %34

34:                                               ; preds = %31
  %35 = load i8, i8* %3, align 1
  %36 = load i64, i64* %4, align 8
  %37 = zext i8 %35 to i64
  br label %38

38:                                               ; preds = %34, %18
  %39 = phi i64 [ %37, %34 ], [ %19, %18 ]
  %40 = phi i64 [ %36, %34 ], [ %20, %18 ]
  %41 = phi i8 [ %35, %34 ], [ %21, %18 ]
  %42 = icmp slt i8 %41, 0
  %43 = select i1 %42, i64 %40, i64 %39
  %44 = icmp eq i64 %43, 11
  br i1 %44, label %45, label %52

45:                                               ; preds = %38
  %46 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i64 11) #2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %25, label %48

48:                                               ; preds = %45
  %49 = load i8, i8* %3, align 1
  %50 = load i64, i64* %4, align 8
  %51 = zext i8 %49 to i64
  br label %52

52:                                               ; preds = %48, %38
  %53 = phi i64 [ %51, %48 ], [ %39, %38 ]
  %54 = phi i64 [ %50, %48 ], [ %40, %38 ]
  %55 = phi i8 [ %49, %48 ], [ %41, %38 ]
  %56 = icmp slt i8 %55, 0
  %57 = select i1 %56, i64 %54, i64 %53
  %58 = icmp eq i64 %57, 10
  br i1 %58, label %59, label %66

59:                                               ; preds = %52
  %60 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i64 10) #2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %25, label %62

62:                                               ; preds = %59
  %63 = load i8, i8* %3, align 1
  %64 = load i64, i64* %4, align 8
  %65 = zext i8 %63 to i64
  br label %66

66:                                               ; preds = %62, %52
  %67 = phi i64 [ %65, %62 ], [ %53, %52 ]
  %68 = phi i64 [ %64, %62 ], [ %54, %52 ]
  %69 = phi i8 [ %63, %62 ], [ %55, %52 ]
  %70 = icmp slt i8 %69, 0
  %71 = select i1 %70, i64 %68, i64 %67
  %72 = icmp eq i64 %71, 19
  br i1 %72, label %73, label %80

73:                                               ; preds = %66
  %74 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0), i64 19) #2
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %25, label %76

76:                                               ; preds = %73
  %77 = load i8, i8* %3, align 1
  %78 = load i64, i64* %4, align 8
  %79 = zext i8 %77 to i64
  br label %80

80:                                               ; preds = %76, %66
  %81 = phi i64 [ %79, %76 ], [ %67, %66 ]
  %82 = phi i64 [ %78, %76 ], [ %68, %66 ]
  %83 = phi i8 [ %77, %76 ], [ %69, %66 ]
  %84 = icmp slt i8 %83, 0
  %85 = select i1 %84, i64 %82, i64 %81
  %86 = icmp eq i64 %85, 12
  br i1 %86, label %87, label %29

87:                                               ; preds = %80
  %88 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i64 12) #2
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %25, label %29
}

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
