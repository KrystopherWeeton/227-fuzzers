; ModuleID = '../../third_party/crashpad/crashpad/minidump/minidump_stream_writer.cc'
source_filename = "../../third_party/crashpad/crashpad/minidump/minidump_stream_writer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.crashpad::internal::MinidumpStreamWriter" = type { %"class.crashpad::internal::MinidumpWritable.base", %struct.MINIDUMP_DIRECTORY }
%"class.crashpad::internal::MinidumpWritable.base" = type <{ i32 (...)**, %"class.std::__1::vector", %"class.std::__1::vector.1", i64, i32 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32**, i32**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32** }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %struct.MINIDUMP_LOCATION_DESCRIPTOR**, %struct.MINIDUMP_LOCATION_DESCRIPTOR**, %"class.std::__1::__compressed_pair.3" }
%struct.MINIDUMP_LOCATION_DESCRIPTOR = type { i32, i32 }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %struct.MINIDUMP_LOCATION_DESCRIPTOR** }
%struct.MINIDUMP_DIRECTORY = type { i32, %struct.MINIDUMP_LOCATION_DESCRIPTOR }
%"class.crashpad::internal::MinidumpWritable" = type <{ i32 (...)**, %"class.std::__1::vector", %"class.std::__1::vector.1", i64, i32, [4 x i8] }>
%"class.crashpad::FileWriterInterface" = type opaque

@_ZTVN8crashpad8internal20MinidumpStreamWriterE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.crashpad::internal::MinidumpStreamWriter"*)* @_ZN8crashpad8internal20MinidumpStreamWriterD2Ev to i8*), i8* bitcast (void (%"class.crashpad::internal::MinidumpStreamWriter"*)* @_ZN8crashpad8internal20MinidumpStreamWriterD0Ev to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*)* @_ZN8crashpad8internal16MinidumpWritable15WriteEverythingEPNS_19FileWriterInterfaceE to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpStreamWriter"*)* @_ZN8crashpad8internal20MinidumpStreamWriter6FreezeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i64 (%"class.crashpad::internal::MinidumpWritable"*)* @_ZN8crashpad8internal16MinidumpWritable9AlignmentEv to i8*), i8* bitcast (void ()* @_ZN8crashpad8internal16MinidumpWritable8ChildrenEv to i8*), i8* bitcast (i32 (%"class.crashpad::internal::MinidumpWritable"*)* @_ZN8crashpad8internal16MinidumpWritable10WritePhaseEv to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpWritable"*, i64)* @_ZN8crashpad8internal16MinidumpWritable21WillWriteAtOffsetImplEl to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN8crashpad8internal20MinidumpStreamWriterD1Ev = hidden unnamed_addr alias void (%"class.crashpad::internal::MinidumpStreamWriter"*), void (%"class.crashpad::internal::MinidumpStreamWriter"*)* @_ZN8crashpad8internal20MinidumpStreamWriterD2Ev

; Function Attrs: nounwind
declare void @_ZN8crashpad8internal16MinidumpWritableD2Ev(%"class.crashpad::internal::MinidumpWritable"*) unnamed_addr #0

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad8internal20MinidumpStreamWriterD2Ev(%"class.crashpad::internal::MinidumpStreamWriter"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.crashpad::internal::MinidumpStreamWriter"* %0 to %"class.crashpad::internal::MinidumpWritable"*
  tail call void @_ZN8crashpad8internal16MinidumpWritableD2Ev(%"class.crashpad::internal::MinidumpWritable"* %2) #7
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN8crashpad8internal20MinidumpStreamWriterD0Ev(%"class.crashpad::internal::MinidumpStreamWriter"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.MINIDUMP_DIRECTORY* @_ZNK8crashpad8internal20MinidumpStreamWriter18DirectoryListEntryEv(%"class.crashpad::internal::MinidumpStreamWriter"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::MinidumpStreamWriter", %"class.crashpad::internal::MinidumpStreamWriter"* %0, i64 0, i32 1
  ret %struct.MINIDUMP_DIRECTORY* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad8internal20MinidumpStreamWriterC2Ev(%"class.crashpad::internal::MinidumpStreamWriter"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.crashpad::internal::MinidumpStreamWriter"* %0 to %"class.crashpad::internal::MinidumpWritable"*
  tail call void @_ZN8crashpad8internal16MinidumpWritableC2Ev(%"class.crashpad::internal::MinidumpWritable"* %2) #7
  %3 = getelementptr inbounds %"class.crashpad::internal::MinidumpStreamWriter", %"class.crashpad::internal::MinidumpStreamWriter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN8crashpad8internal20MinidumpStreamWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.crashpad::internal::MinidumpStreamWriter", %"class.crashpad::internal::MinidumpStreamWriter"* %0, i64 0, i32 1
  %5 = bitcast %struct.MINIDUMP_DIRECTORY* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 12, i1 false)
  ret void
}

declare void @_ZN8crashpad8internal16MinidumpWritableC2Ev(%"class.crashpad::internal::MinidumpWritable"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8crashpad8internal20MinidumpStreamWriter6FreezeEv(%"class.crashpad::internal::MinidumpStreamWriter"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.crashpad::internal::MinidumpStreamWriter"* %0 to %"class.crashpad::internal::MinidumpWritable"*
  %3 = tail call zeroext i1 @_ZN8crashpad8internal16MinidumpWritable6FreezeEv(%"class.crashpad::internal::MinidumpWritable"* %2) #7
  br i1 %3, label %4, label %12

4:                                                ; preds = %1
  %5 = bitcast %"class.crashpad::internal::MinidumpStreamWriter"* %0 to i32 (%"class.crashpad::internal::MinidumpStreamWriter"*)***
  %6 = load i32 (%"class.crashpad::internal::MinidumpStreamWriter"*)**, i32 (%"class.crashpad::internal::MinidumpStreamWriter"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.crashpad::internal::MinidumpStreamWriter"*)*, i32 (%"class.crashpad::internal::MinidumpStreamWriter"*)** %6, i64 10
  %8 = load i32 (%"class.crashpad::internal::MinidumpStreamWriter"*)*, i32 (%"class.crashpad::internal::MinidumpStreamWriter"*)** %7, align 8
  %9 = tail call i32 %8(%"class.crashpad::internal::MinidumpStreamWriter"* %0) #7
  %10 = getelementptr inbounds %"class.crashpad::internal::MinidumpStreamWriter", %"class.crashpad::internal::MinidumpStreamWriter"* %0, i64 0, i32 1, i32 0
  store i32 %9, i32* %10, align 4
  %11 = getelementptr inbounds %"class.crashpad::internal::MinidumpStreamWriter", %"class.crashpad::internal::MinidumpStreamWriter"* %0, i64 0, i32 1, i32 1
  tail call void @_ZN8crashpad8internal16MinidumpWritable26RegisterLocationDescriptorEP28MINIDUMP_LOCATION_DESCRIPTOR(%"class.crashpad::internal::MinidumpWritable"* %2, %struct.MINIDUMP_LOCATION_DESCRIPTOR* %11) #7
  br label %12

12:                                               ; preds = %1, %4
  %13 = phi i1 [ true, %4 ], [ false, %1 ]
  ret i1 %13
}

declare zeroext i1 @_ZN8crashpad8internal16MinidumpWritable6FreezeEv(%"class.crashpad::internal::MinidumpWritable"*) unnamed_addr #5

declare void @_ZN8crashpad8internal16MinidumpWritable26RegisterLocationDescriptorEP28MINIDUMP_LOCATION_DESCRIPTOR(%"class.crashpad::internal::MinidumpWritable"*, %struct.MINIDUMP_LOCATION_DESCRIPTOR*) local_unnamed_addr #5

declare zeroext i1 @_ZN8crashpad8internal16MinidumpWritable15WriteEverythingEPNS_19FileWriterInterfaceE(%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*) unnamed_addr #5

declare void @__cxa_pure_virtual() unnamed_addr

declare i64 @_ZN8crashpad8internal16MinidumpWritable9AlignmentEv(%"class.crashpad::internal::MinidumpWritable"*) unnamed_addr #5

declare void @_ZN8crashpad8internal16MinidumpWritable8ChildrenEv() unnamed_addr

declare i32 @_ZN8crashpad8internal16MinidumpWritable10WritePhaseEv(%"class.crashpad::internal::MinidumpWritable"*) unnamed_addr #5

declare zeroext i1 @_ZN8crashpad8internal16MinidumpWritable21WillWriteAtOffsetImplEl(%"class.crashpad::internal::MinidumpWritable"*, i64) unnamed_addr #5

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
