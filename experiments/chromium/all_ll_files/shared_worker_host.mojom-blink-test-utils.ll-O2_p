; ModuleID = 'gen/third_party/blink/public/mojom/worker/shared_worker_host.mojom-blink-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/worker/shared_worker_host.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::SharedWorkerHostAsyncWaiter" = type { %"class.blink::mojom::blink::SharedWorkerHost"* }
%"class.blink::mojom::blink::SharedWorkerHost" = type { i32 (...)** }
%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting" = type { %"class.blink::mojom::blink::SharedWorkerHost" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.3, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.5", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.2", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.3 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.4" }>
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.5" }

$_ZN5blink5mojom5blink16SharedWorkerHostD2Ev = comdat any

$_ZN5blink5mojom5blink37SharedWorkerHostInterceptorForTestingD0Ev = comdat any

@_ZTVN5blink5mojom5blink37SharedWorkerHostInterceptorForTestingE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::SharedWorkerHost"*)* @_ZN5blink5mojom5blink16SharedWorkerHostD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)* @_ZN5blink5mojom5blink37SharedWorkerHostInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*, i32)* @_ZN5blink5mojom5blink37SharedWorkerHostInterceptorForTesting11OnConnectedEi to i8*), i8* bitcast (void (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)* @_ZN5blink5mojom5blink37SharedWorkerHostInterceptorForTesting15OnContextClosedEv to i8*), i8* bitcast (void (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*, %"class.mojo::PendingRemote"*, %"class.mojo::PendingReceiver"*)* @_ZN5blink5mojom5blink37SharedWorkerHostInterceptorForTesting20OnReadyForInspectionEN4mojo13PendingRemoteINS1_13DevToolsAgentEEENS3_15PendingReceiverINS1_17DevToolsAgentHostEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*, %"class.WTF::String"*)* @_ZN5blink5mojom5blink37SharedWorkerHostInterceptorForTesting18OnScriptLoadFailedERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*, i32)* @_ZN5blink5mojom5blink37SharedWorkerHostInterceptorForTesting13OnFeatureUsedENS0_10WebFeatureE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink5mojom5blink27SharedWorkerHostAsyncWaiterC1EPNS1_16SharedWorkerHostE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::SharedWorkerHostAsyncWaiter"*, %"class.blink::mojom::blink::SharedWorkerHost"*), void (%"class.blink::mojom::blink::SharedWorkerHostAsyncWaiter"*, %"class.blink::mojom::blink::SharedWorkerHost"*)* @_ZN5blink5mojom5blink27SharedWorkerHostAsyncWaiterC2EPNS1_16SharedWorkerHostE
@_ZN5blink5mojom5blink27SharedWorkerHostAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::SharedWorkerHostAsyncWaiter"*), void (%"class.blink::mojom::blink::SharedWorkerHostAsyncWaiter"*)* @_ZN5blink5mojom5blink27SharedWorkerHostAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink37SharedWorkerHostInterceptorForTesting11OnConnectedEi(%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)***
  %4 = load %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)** %4, i64 7
  %6 = load %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.blink::mojom::blink::SharedWorkerHost"* %6(%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"* %0) #6
  %8 = bitcast %"class.blink::mojom::blink::SharedWorkerHost"* %7 to void (%"class.blink::mojom::blink::SharedWorkerHost"*, i32)***
  %9 = load void (%"class.blink::mojom::blink::SharedWorkerHost"*, i32)**, void (%"class.blink::mojom::blink::SharedWorkerHost"*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::mojom::blink::SharedWorkerHost"*, i32)*, void (%"class.blink::mojom::blink::SharedWorkerHost"*, i32)** %9, i64 2
  %11 = load void (%"class.blink::mojom::blink::SharedWorkerHost"*, i32)*, void (%"class.blink::mojom::blink::SharedWorkerHost"*, i32)** %10, align 8
  tail call void %11(%"class.blink::mojom::blink::SharedWorkerHost"* %7, i32 %1) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink37SharedWorkerHostInterceptorForTesting15OnContextClosedEv(%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)***
  %3 = load %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)** %3, i64 7
  %5 = load %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.blink::mojom::blink::SharedWorkerHost"* %5(%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"* %0) #6
  %7 = bitcast %"class.blink::mojom::blink::SharedWorkerHost"* %6 to void (%"class.blink::mojom::blink::SharedWorkerHost"*)***
  %8 = load void (%"class.blink::mojom::blink::SharedWorkerHost"*)**, void (%"class.blink::mojom::blink::SharedWorkerHost"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::mojom::blink::SharedWorkerHost"*)*, void (%"class.blink::mojom::blink::SharedWorkerHost"*)** %8, i64 3
  %10 = load void (%"class.blink::mojom::blink::SharedWorkerHost"*)*, void (%"class.blink::mojom::blink::SharedWorkerHost"*)** %9, align 8
  tail call void %10(%"class.blink::mojom::blink::SharedWorkerHost"* %6) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink37SharedWorkerHostInterceptorForTesting20OnReadyForInspectionEN4mojo13PendingRemoteINS1_13DevToolsAgentEEENS3_15PendingReceiverINS1_17DevToolsAgentHostEEE(%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*, %"class.mojo::PendingRemote"*, %"class.mojo::PendingReceiver"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::PendingRemote", align 4
  %5 = alloca %"class.mojo::PendingReceiver", align 8
  %6 = bitcast %"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)***
  %7 = load %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)** %7, i64 7
  %9 = load %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.blink::mojom::blink::SharedWorkerHost"* %9(%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"* %0) #6
  %11 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %4, i64 0, i32 0
  %12 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %11, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %12) #6
  %13 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %5, i64 0, i32 0
  %14 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %2, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %13, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %14) #6
  %15 = bitcast %"class.blink::mojom::blink::SharedWorkerHost"* %10 to void (%"class.blink::mojom::blink::SharedWorkerHost"*, %"class.mojo::PendingRemote"*, %"class.mojo::PendingReceiver"*)***
  %16 = load void (%"class.blink::mojom::blink::SharedWorkerHost"*, %"class.mojo::PendingRemote"*, %"class.mojo::PendingReceiver"*)**, void (%"class.blink::mojom::blink::SharedWorkerHost"*, %"class.mojo::PendingRemote"*, %"class.mojo::PendingReceiver"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::mojom::blink::SharedWorkerHost"*, %"class.mojo::PendingRemote"*, %"class.mojo::PendingReceiver"*)*, void (%"class.blink::mojom::blink::SharedWorkerHost"*, %"class.mojo::PendingRemote"*, %"class.mojo::PendingReceiver"*)** %16, i64 4
  %18 = load void (%"class.blink::mojom::blink::SharedWorkerHost"*, %"class.mojo::PendingRemote"*, %"class.mojo::PendingReceiver"*)*, void (%"class.blink::mojom::blink::SharedWorkerHost"*, %"class.mojo::PendingRemote"*, %"class.mojo::PendingReceiver"*)** %17, align 8
  call void %18(%"class.blink::mojom::blink::SharedWorkerHost"* %10, %"class.mojo::PendingRemote"* nonnull %4, %"class.mojo::PendingReceiver"* nonnull %5) #6
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %13) #6
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %11) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink37SharedWorkerHostInterceptorForTesting18OnScriptLoadFailedERKN3WTF6StringE(%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)***
  %4 = load %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)** %4, i64 7
  %6 = load %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.blink::mojom::blink::SharedWorkerHost"* %6(%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"* %0) #6
  %8 = bitcast %"class.blink::mojom::blink::SharedWorkerHost"* %7 to void (%"class.blink::mojom::blink::SharedWorkerHost"*, %"class.WTF::String"*)***
  %9 = load void (%"class.blink::mojom::blink::SharedWorkerHost"*, %"class.WTF::String"*)**, void (%"class.blink::mojom::blink::SharedWorkerHost"*, %"class.WTF::String"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::mojom::blink::SharedWorkerHost"*, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::SharedWorkerHost"*, %"class.WTF::String"*)** %9, i64 5
  %11 = load void (%"class.blink::mojom::blink::SharedWorkerHost"*, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::SharedWorkerHost"*, %"class.WTF::String"*)** %10, align 8
  tail call void %11(%"class.blink::mojom::blink::SharedWorkerHost"* %7, %"class.WTF::String"* dereferenceable(8) %1) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink37SharedWorkerHostInterceptorForTesting13OnFeatureUsedENS0_10WebFeatureE(%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)***
  %4 = load %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)** %4, i64 7
  %6 = load %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::SharedWorkerHost"* (%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.blink::mojom::blink::SharedWorkerHost"* %6(%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"* %0) #6
  %8 = bitcast %"class.blink::mojom::blink::SharedWorkerHost"* %7 to void (%"class.blink::mojom::blink::SharedWorkerHost"*, i32)***
  %9 = load void (%"class.blink::mojom::blink::SharedWorkerHost"*, i32)**, void (%"class.blink::mojom::blink::SharedWorkerHost"*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::mojom::blink::SharedWorkerHost"*, i32)*, void (%"class.blink::mojom::blink::SharedWorkerHost"*, i32)** %9, i64 6
  %11 = load void (%"class.blink::mojom::blink::SharedWorkerHost"*, i32)*, void (%"class.blink::mojom::blink::SharedWorkerHost"*, i32)** %10, align 8
  tail call void %11(%"class.blink::mojom::blink::SharedWorkerHost"* %7, i32 %1) #6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink27SharedWorkerHostAsyncWaiterC2EPNS1_16SharedWorkerHostE(%"class.blink::mojom::blink::SharedWorkerHostAsyncWaiter"* nocapture, %"class.blink::mojom::blink::SharedWorkerHost"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::SharedWorkerHostAsyncWaiter", %"class.blink::mojom::blink::SharedWorkerHostAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::SharedWorkerHost"* %1, %"class.blink::mojom::blink::SharedWorkerHost"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink27SharedWorkerHostAsyncWaiterD2Ev(%"class.blink::mojom::blink::SharedWorkerHostAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink16SharedWorkerHostD2Ev(%"class.blink::mojom::blink::SharedWorkerHost"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink37SharedWorkerHostInterceptorForTestingD0Ev(%"class.blink::mojom::blink::SharedWorkerHostInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"*, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
