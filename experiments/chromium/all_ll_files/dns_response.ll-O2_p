; ModuleID = '../../net/dns/dns_response.cc'
source_filename = "../../net/dns/dns_response.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.net::DnsResourceRecord" = type { %"class.std::__1::basic_string", i16, i16, i32, %"class.base::BasicStringPiece", %"class.std::__1::basic_string" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.net::DnsRecordParser" = type { i8*, i64, i64, i64, i8* }
%"class.net::DnsResponse" = type { %class.scoped_refptr, i64, %"class.net::DnsRecordParser", i8, %"class.std::__1::vector", %"class.std::__1::vector.7" }
%class.scoped_refptr = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i8* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { i16*, i16*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i16* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"struct.net::DnsResourceRecord"*, %"struct.net::DnsResourceRecord"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.net::DnsResourceRecord"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.21 }
%union.anon.21 = type { %"class.net::DnsQuery" }
%"class.net::DnsQuery" = type { i64, %class.scoped_refptr.22, %"struct.net::dns_protocol::Header"* }
%class.scoped_refptr.22 = type { %"class.net::IOBufferWithSize"* }
%"class.net::IOBufferWithSize" = type <{ %"class.net::IOBuffer", i32, [4 x i8] }>
%"struct.net::dns_protocol::Header" = type { i16, i16, i16, i16, i16, i16 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::BigEndianReader" = type { i8*, i8* }
%"class.base::BigEndianWriter" = type { i8*, i8* }
%"class.absl::optional.28" = type { %"class.absl::optional_internal::optional_data.29" }
%"class.absl::optional_internal::optional_data.29" = type { %"class.absl::optional_internal::optional_data_base.30" }
%"class.absl::optional_internal::optional_data_base.30" = type { %"class.absl::optional_internal::optional_data_dtor_base.31" }
%"class.absl::optional_internal::optional_data_dtor_base.31" = type { i8, %union.anon.32 }
%union.anon.32 = type { %"class.std::__1::basic_string" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

@_ZZNK3net15DnsRecordParser8ReadNameEPKvPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEE9kAbortMsg = internal constant [42 x i8] c"Abort parsing of noncompliant DNS record.\00", align 16
@.str = private unnamed_addr constant [30 x i8] c"../../net/dns/dns_response.cc\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c" Truncated or missing label pointer.\00", align 1
@.str.2 = private unnamed_addr constant [34 x i8] c" Detected loop in label pointers.\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c" Label pointer points outside packet.\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c" Name is too long.\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c" Truncated or missing label.\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c" Unhandled label type.\00", align 1
@.str.8 = private unnamed_addr constant [49 x i8] c"record.rdata should point to record.owned_rdata.\00", align 1
@.str.9 = private unnamed_addr constant [33 x i8] c"Invalid RDATA size for a record.\00", align 1
@.str.10 = private unnamed_addr constant [21 x i8] c"Invalid dotted name.\00", align 1
@.str.11 = private unnamed_addr constant [50 x i8] c"Mismatched answer resource record type and qtype.\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN3net17DnsResourceRecordC1Ev = hidden unnamed_addr alias void (%"struct.net::DnsResourceRecord"*), void (%"struct.net::DnsResourceRecord"*)* @_ZN3net17DnsResourceRecordC2Ev
@_ZN3net17DnsResourceRecordC1ERKS0_ = hidden unnamed_addr alias void (%"struct.net::DnsResourceRecord"*, %"struct.net::DnsResourceRecord"*), void (%"struct.net::DnsResourceRecord"*, %"struct.net::DnsResourceRecord"*)* @_ZN3net17DnsResourceRecordC2ERKS0_
@_ZN3net17DnsResourceRecordC1EOS0_ = hidden unnamed_addr alias void (%"struct.net::DnsResourceRecord"*, %"struct.net::DnsResourceRecord"*), void (%"struct.net::DnsResourceRecord"*, %"struct.net::DnsResourceRecord"*)* @_ZN3net17DnsResourceRecordC2EOS0_
@_ZN3net17DnsResourceRecordD1Ev = hidden unnamed_addr alias void (%"struct.net::DnsResourceRecord"*), void (%"struct.net::DnsResourceRecord"*)* @_ZN3net17DnsResourceRecordD2Ev
@_ZN3net15DnsRecordParserC1Ev = hidden unnamed_addr alias void (%"class.net::DnsRecordParser"*), void (%"class.net::DnsRecordParser"*)* @_ZN3net15DnsRecordParserC2Ev
@_ZN3net15DnsRecordParserC1EPKvmmm = hidden unnamed_addr alias void (%"class.net::DnsRecordParser"*, i8*, i64, i64, i64), void (%"class.net::DnsRecordParser"*, i8*, i64, i64, i64)* @_ZN3net15DnsRecordParserC2EPKvmmm
@_ZN3net11DnsResponseC1EtbRKNSt3__16vectorINS_17DnsResourceRecordENS1_9allocatorIS3_EEEES8_S8_RKN4absl8optionalINS_8DnsQueryEEEhb = hidden unnamed_addr alias void (%"class.net::DnsResponse"*, i16, i1, %"class.std::__1::vector.14"*, %"class.std::__1::vector.14"*, %"class.std::__1::vector.14"*, %"class.absl::optional"*, i8, i1), void (%"class.net::DnsResponse"*, i16, i1, %"class.std::__1::vector.14"*, %"class.std::__1::vector.14"*, %"class.std::__1::vector.14"*, %"class.absl::optional"*, i8, i1)* @_ZN3net11DnsResponseC2EtbRKNSt3__16vectorINS_17DnsResourceRecordENS1_9allocatorIS3_EEEES8_S8_RKN4absl8optionalINS_8DnsQueryEEEhb
@_ZN3net11DnsResponseC1Ev = hidden unnamed_addr alias void (%"class.net::DnsResponse"*), void (%"class.net::DnsResponse"*)* @_ZN3net11DnsResponseC2Ev
@_ZN3net11DnsResponseC1E13scoped_refptrINS_8IOBufferEEm = hidden unnamed_addr alias void (%"class.net::DnsResponse"*, %"class.net::IOBuffer"*, i64), void (%"class.net::DnsResponse"*, %"class.net::IOBuffer"*, i64)* @_ZN3net11DnsResponseC2E13scoped_refptrINS_8IOBufferEEm
@_ZN3net11DnsResponseC1Em = hidden unnamed_addr alias void (%"class.net::DnsResponse"*, i64), void (%"class.net::DnsResponse"*, i64)* @_ZN3net11DnsResponseC2Em
@_ZN3net11DnsResponseC1EPKvmm = hidden unnamed_addr alias void (%"class.net::DnsResponse"*, i8*, i64, i64), void (%"class.net::DnsResponse"*, i8*, i64, i64)* @_ZN3net11DnsResponseC2EPKvmm
@_ZN3net11DnsResponseC1EOS0_ = hidden unnamed_addr alias void (%"class.net::DnsResponse"*, %"class.net::DnsResponse"*), void (%"class.net::DnsResponse"*, %"class.net::DnsResponse"*)* @_ZN3net11DnsResponseC2EOS0_
@_ZN3net11DnsResponseD1Ev = hidden unnamed_addr alias void (%"class.net::DnsResponse"*), void (%"class.net::DnsResponse"*)* @_ZN3net11DnsResponseD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net17DnsResourceRecordC2Ev(%"struct.net::DnsResourceRecord"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.net::DnsResourceRecord"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 72, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net17DnsResourceRecordC2ERKS0_(%"struct.net::DnsResourceRecord"*, %"struct.net::DnsResourceRecord"* nocapture readonly dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.net::DnsResourceRecord"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.net::DnsResourceRecord"* %0 to i8*
  %9 = bitcast %"struct.net::DnsResourceRecord"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #15
  br label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %13, i64 %15) #15
  br label %16

16:                                               ; preds = %7, %10
  %17 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 1
  %19 = load i16, i16* %18, align 8
  store i16 %19, i16* %17, align 8
  %20 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 2
  %21 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  store i16 %22, i16* %20, align 2
  %23 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 3
  %24 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  store i32 %25, i32* %23, align 4
  %26 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 4
  %27 = bitcast %"class.base::BasicStringPiece"* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #15
  %28 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 5
  %29 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 5
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %16
  %35 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %36 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false) #15
  br label %42

37:                                               ; preds = %16
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %28, i8* %39, i64 %41) #15
  br label %42

42:                                               ; preds = %34, %37
  %43 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  br label %52

50:                                               ; preds = %42
  %51 = zext i8 %45 to i64
  br label %52

52:                                               ; preds = %47, %50
  %53 = phi i64 [ %49, %47 ], [ %51, %50 ]
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %66, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %59 = select i1 %46, i8* %57, i8* %58
  %60 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = zext i8 %45 to i64
  %63 = select i1 %46, i64 %61, i64 %62
  %64 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 4, i32 0
  store i8* %59, i8** %64, align 8
  %65 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 4, i32 1
  store i64 %63, i64* %65, align 8
  br label %69

66:                                               ; preds = %52
  %67 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 4
  %68 = bitcast %"class.base::BasicStringPiece"* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %68, i64 16, i1 false)
  br label %69

69:                                               ; preds = %66, %55
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net17DnsResourceRecordC2EOS0_(%"struct.net::DnsResourceRecord"*, %"struct.net::DnsResourceRecord"* nocapture dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.net::DnsResourceRecord"* %0 to i8*
  %4 = bitcast %"struct.net::DnsResourceRecord"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #15
  %5 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 1
  %7 = load i16, i16* %6, align 8
  store i16 %7, i16* %5, align 8
  %8 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 2
  %10 = load i16, i16* %9, align 2
  store i16 %10, i16* %8, align 2
  %11 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %11, align 4
  %14 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 4
  %15 = bitcast %"class.base::BasicStringPiece"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #15
  %16 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 5
  %17 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 5
  %18 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %19 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #15
  %20 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  br label %29

27:                                               ; preds = %2
  %28 = zext i8 %22 to i64
  br label %29

29:                                               ; preds = %24, %27
  %30 = phi i64 [ %26, %24 ], [ %28, %27 ]
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %42, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = select i1 %23, i8* %34, i8* %18
  %36 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = zext i8 %22 to i64
  %39 = select i1 %23, i64 %37, i64 %38
  %40 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 4, i32 0
  store i8* %35, i8** %40, align 8
  %41 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 4, i32 1
  store i64 %39, i64* %41, align 8
  br label %45

42:                                               ; preds = %29
  %43 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 4
  %44 = bitcast %"class.base::BasicStringPiece"* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %44, i64 16, i1 false)
  br label %45

45:                                               ; preds = %42, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net17DnsResourceRecordD2Ev(%"struct.net::DnsResourceRecord"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 5
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #16
  br label %10

10:                                               ; preds = %1, %7
  %11 = bitcast %"struct.net::DnsResourceRecord"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #16
  br label %18

18:                                               ; preds = %10, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"struct.net::DnsResourceRecord"* @_ZN3net17DnsResourceRecordaSERKS0_(%"struct.net::DnsResourceRecord"* returned, %"struct.net::DnsResourceRecord"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 0
  %4 = icmp eq %"struct.net::DnsResourceRecord"* %0, %1
  br i1 %4, label %34, label %5

5:                                                ; preds = %2
  %6 = bitcast %"struct.net::DnsResourceRecord"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"struct.net::DnsResourceRecord"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %24, label %14

14:                                               ; preds = %5
  br i1 %13, label %18, label %15

15:                                               ; preds = %14
  %16 = bitcast %"struct.net::DnsResourceRecord"* %0 to i8*
  %17 = bitcast %"struct.net::DnsResourceRecord"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #15
  br label %34

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %20, i64 %22) #15
  br label %34

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"struct.net::DnsResourceRecord"* %1 to i8*
  %30 = zext i8 %12 to i64
  %31 = select i1 %13, i8* %26, i8* %29
  %32 = select i1 %13, i64 %28, i64 %30
  %33 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %31, i64 %32) #15
  br label %34

34:                                               ; preds = %2, %15, %18, %24
  %35 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 1
  %36 = load i16, i16* %35, align 8
  %37 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 1
  store i16 %36, i16* %37, align 8
  %38 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 2
  %39 = load i16, i16* %38, align 2
  %40 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 2
  store i16 %39, i16* %40, align 2
  %41 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 3
  store i32 %42, i32* %43, align 4
  %44 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 5
  %45 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 5
  %46 = bitcast %"class.std::__1::basic_string"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br i1 %4, label %75, label %47

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  %51 = bitcast %"class.std::__1::basic_string"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %50, label %65, label %55

55:                                               ; preds = %47
  br i1 %54, label %59, label %56

56:                                               ; preds = %55
  %57 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  %58 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 24, i1 false) #15
  br label %75

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %45, i8* %61, i64 %63) #15
  br label %75

65:                                               ; preds = %47
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  %71 = zext i8 %53 to i64
  %72 = select i1 %54, i8* %67, i8* %70
  %73 = select i1 %54, i64 %69, i64 %71
  %74 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %45, i8* %72, i64 %73) #15
  br label %75

75:                                               ; preds = %34, %56, %59, %65
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %81 = load i64, i64* %80, align 8
  br label %84

82:                                               ; preds = %75
  %83 = zext i8 %77 to i64
  br label %84

84:                                               ; preds = %79, %82
  %85 = phi i64 [ %81, %79 ], [ %83, %82 ]
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %98, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  %90 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  %91 = select i1 %78, i8* %89, i8* %90
  %92 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %93 = load i64, i64* %92, align 8
  %94 = zext i8 %77 to i64
  %95 = select i1 %78, i64 %93, i64 %94
  %96 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 4, i32 0
  store i8* %91, i8** %96, align 8
  %97 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 4, i32 1
  store i64 %95, i64* %97, align 8
  br label %103

98:                                               ; preds = %84
  %99 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 4
  %100 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 4
  %101 = bitcast %"class.base::BasicStringPiece"* %100 to i8*
  %102 = bitcast %"class.base::BasicStringPiece"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* align 8 %102, i64 16, i1 false)
  br label %103

103:                                              ; preds = %98, %87
  ret %"struct.net::DnsResourceRecord"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"struct.net::DnsResourceRecord"* @_ZN3net17DnsResourceRecordaSEOS0_(%"struct.net::DnsResourceRecord"* returned, %"struct.net::DnsResourceRecord"* nocapture dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.net::DnsResourceRecord"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #16
  br label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %"struct.net::DnsResourceRecord"* %0 to i8*
  %12 = bitcast %"struct.net::DnsResourceRecord"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #15
  %13 = bitcast %"struct.net::DnsResourceRecord"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  store i8 0, i8* %14, align 1
  store i8 0, i8* %12, align 1
  %15 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 1
  %16 = load i16, i16* %15, align 8
  %17 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 1
  store i16 %16, i16* %17, align 8
  %18 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 2
  %19 = load i16, i16* %18, align 2
  %20 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 2
  store i16 %19, i16* %20, align 2
  %21 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 3
  store i32 %22, i32* %23, align 4
  %24 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 5
  %25 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 5
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %10
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  tail call void @_ZdlPv(i8* %32) #16
  br label %33

33:                                               ; preds = %10, %30
  %34 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %35 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 24, i1 false) #15
  %36 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  store i8 0, i8* %37, align 1
  store i8 0, i8* %35, align 1
  %38 = load i8, i8* %27, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  br label %45

43:                                               ; preds = %33
  %44 = zext i8 %38 to i64
  br label %45

45:                                               ; preds = %40, %43
  %46 = phi i64 [ %42, %40 ], [ %44, %43 ]
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %58, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = select i1 %39, i8* %50, i8* %34
  %52 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = zext i8 %38 to i64
  %55 = select i1 %39, i64 %53, i64 %54
  %56 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 4, i32 0
  store i8* %51, i8** %56, align 8
  %57 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 4, i32 1
  store i64 %55, i64* %57, align 8
  br label %63

58:                                               ; preds = %45
  %59 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 4
  %60 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 4
  %61 = bitcast %"class.base::BasicStringPiece"* %60 to i8*
  %62 = bitcast %"class.base::BasicStringPiece"* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 16, i1 false)
  br label %63

63:                                               ; preds = %58, %48
  ret %"struct.net::DnsResourceRecord"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net17DnsResourceRecord13SetOwnedRdataENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"struct.net::DnsResourceRecord"*, %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 5
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %2, %8
  %12 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #15
  %14 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  store i8 0, i8* %15, align 1
  store i8 0, i8* %13, align 1
  %16 = load i8, i8* %5, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = select i1 %17, i8* %19, i8* %12
  %21 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %16 to i64
  %24 = select i1 %17, i64 %22, i64 %23
  %25 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 4, i32 0
  store i8* %20, i8** %25, align 8
  %26 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 4, i32 1
  store i64 %24, i64* %26, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3net17DnsResourceRecord19CalculateRecordSizeEv(%"struct.net::DnsResourceRecord"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"struct.net::DnsResourceRecord"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %12

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 %10
  br label %16

12:                                               ; preds = %1
  %13 = bitcast %"struct.net::DnsResourceRecord"* %0 to i8*
  %14 = zext i8 %4 to i64
  %15 = getelementptr inbounds i8, i8* %13, i64 %14
  br label %16

16:                                               ; preds = %6, %12
  %17 = phi i8* [ %11, %6 ], [ %15, %12 ]
  %18 = phi i64 [ %10, %6 ], [ %14, %12 ]
  %19 = getelementptr inbounds i8, i8* %17, i64 -1
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 46
  %22 = select i1 %21, i64 1, i64 2
  %23 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 5
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  br label %33

31:                                               ; preds = %16
  %32 = zext i8 %26 to i64
  br label %33

33:                                               ; preds = %28, %31
  %34 = phi i64 [ %30, %28 ], [ %32, %31 ]
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 4, i32 1
  %38 = load i64, i64* %37, align 8
  br label %45

39:                                               ; preds = %33
  br i1 %27, label %40, label %43

40:                                               ; preds = %39
  %41 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  br label %45

43:                                               ; preds = %39
  %44 = zext i8 %26 to i64
  br label %45

45:                                               ; preds = %43, %40, %36
  %46 = phi i64 [ %38, %36 ], [ %42, %40 ], [ %44, %43 ]
  %47 = add i64 %18, 10
  %48 = add i64 %47, %22
  %49 = add i64 %48, %46
  ret i64 %49
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net15DnsRecordParserC2Ev(%"class.net::DnsRecordParser"* nocapture) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.net::DnsRecordParser"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3net15DnsRecordParserC2EPKvmmm(%"class.net::DnsRecordParser"* nocapture, i8*, i64, i64, i64) unnamed_addr #4 align 2 {
  %6 = getelementptr inbounds %"class.net::DnsRecordParser", %"class.net::DnsRecordParser"* %0, i64 0, i32 0
  store i8* %1, i8** %6, align 8
  %7 = getelementptr inbounds %"class.net::DnsRecordParser", %"class.net::DnsRecordParser"* %0, i64 0, i32 1
  store i64 %2, i64* %7, align 8
  %8 = getelementptr inbounds %"class.net::DnsRecordParser", %"class.net::DnsRecordParser"* %0, i64 0, i32 2
  store i64 %4, i64* %8, align 8
  %9 = getelementptr inbounds %"class.net::DnsRecordParser", %"class.net::DnsRecordParser"* %0, i64 0, i32 3
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"class.net::DnsRecordParser", %"class.net::DnsRecordParser"* %0, i64 0, i32 4
  %11 = getelementptr inbounds i8, i8* %1, i64 %3
  store i8* %11, i8** %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3net15DnsRecordParser8ReadNameEPKvPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.net::DnsRecordParser"* nocapture readonly, i8*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = alloca %"class.logging::LogMessage", align 8
  %6 = alloca %"class.logging::LogMessage", align 8
  %7 = alloca %"class.logging::LogMessage", align 8
  %8 = alloca %"class.logging::LogMessage", align 8
  %9 = alloca %"class.logging::LogMessage", align 8
  %10 = getelementptr inbounds %"class.net::DnsRecordParser", %"class.net::DnsRecordParser"* %0, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.net::DnsRecordParser", %"class.net::DnsRecordParser"* %0, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8, i8* %11, i64 %13
  %15 = icmp ugt i8* %14, %1
  br i1 %15, label %16, label %161

16:                                               ; preds = %3
  %17 = icmp ne %"class.std::__1::basic_string"* %2, null
  %18 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br i1 %17, label %19, label %30

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %26, align 8
  br label %29

27:                                               ; preds = %19
  %28 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  store i8 0, i8* %28, align 1
  store i8 0, i8* %20, align 1
  br label %29

29:                                               ; preds = %23, %27
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* nonnull %2, i64 254) #15
  br label %30

30:                                               ; preds = %16, %29
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = ptrtoint i8* %1 to i64
  br label %34

34:                                               ; preds = %79, %30
  %35 = phi i8* [ %88, %79 ], [ %1, %30 ]
  %36 = phi i32 [ %66, %79 ], [ 0, %30 ]
  %37 = phi i32 [ %65, %79 ], [ 0, %30 ]
  %38 = phi i32 [ %42, %79 ], [ 0, %30 ]
  br label %39

39:                                               ; preds = %34, %150
  %40 = phi i8* [ %124, %150 ], [ %35, %34 ]
  %41 = phi i32 [ %151, %150 ], [ %36, %34 ]
  %42 = phi i32 [ %111, %150 ], [ %38, %34 ]
  %43 = load i8, i8* %40, align 1
  %44 = and i8 %43, -64
  switch i8 %44, label %152 [
    i8 -64, label %45
    i8 0, label %99
  ]

45:                                               ; preds = %39
  %46 = getelementptr inbounds i8, i8* %40, i64 2
  %47 = icmp ugt i8* %46, %14
  br i1 %47, label %48, label %57

48:                                               ; preds = %45
  %49 = tail call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i64 30) #15
  %50 = icmp sgt i32 %49, 0
  br i1 %50, label %51, label %161

51:                                               ; preds = %48
  %52 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %52) #15
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i32 163, i32 -1) #15
  %53 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %54 = bitcast %"class.std::__1::basic_ostringstream"* %53 to %"class.std::__1::basic_ostream"*
  %55 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %54, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @_ZZNK3net15DnsRecordParser8ReadNameEPKvPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEE9kAbortMsg, i64 0, i64 0), i64 41) #15
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %55, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i64 36) #15
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %52) #15
  br label %161

57:                                               ; preds = %45
  %58 = icmp eq i32 %37, 0
  br i1 %58, label %59, label %64

59:                                               ; preds = %57
  %60 = ptrtoint i8* %40 to i64
  %61 = sub i64 %60, %33
  %62 = trunc i64 %61 to i32
  %63 = add i32 %62, 2
  br i1 %17, label %64, label %161

64:                                               ; preds = %59, %57
  %65 = phi i32 [ %63, %59 ], [ %37, %57 ]
  %66 = add i32 %41, 2
  %67 = zext i32 %66 to i64
  %68 = load i64, i64* %12, align 8
  %69 = icmp ult i64 %68, %67
  br i1 %69, label %70, label %79

70:                                               ; preds = %64
  %71 = tail call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i64 30) #15
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %73, label %161

73:                                               ; preds = %70
  %74 = bitcast %"class.logging::LogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %74) #15
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %5, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i32 174, i32 -1) #15
  %75 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %5, i64 0, i32 2
  %76 = bitcast %"class.std::__1::basic_ostringstream"* %75 to %"class.std::__1::basic_ostream"*
  %77 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %76, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @_ZZNK3net15DnsRecordParser8ReadNameEPKvPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEE9kAbortMsg, i64 0, i64 0), i64 41) #15
  %78 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %77, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0), i64 33) #15
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %74) #15
  br label %161

79:                                               ; preds = %64
  %80 = zext i8 %43 to i64
  %81 = shl nuw nsw i64 %80, 8
  %82 = getelementptr inbounds i8, i8* %40, i64 1
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i64
  %85 = and i64 %81, 16128
  %86 = or i64 %85, %84
  %87 = load i8*, i8** %10, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 %86
  %89 = icmp ult i8* %88, %14
  br i1 %89, label %34, label %90

90:                                               ; preds = %79
  %91 = tail call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i64 30) #15
  %92 = icmp sgt i32 %91, 0
  br i1 %92, label %93, label %161

93:                                               ; preds = %90
  %94 = bitcast %"class.logging::LogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %94) #15
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %6, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i32 182, i32 -1) #15
  %95 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %6, i64 0, i32 2
  %96 = bitcast %"class.std::__1::basic_ostringstream"* %95 to %"class.std::__1::basic_ostream"*
  %97 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %96, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @_ZZNK3net15DnsRecordParser8ReadNameEPKvPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEE9kAbortMsg, i64 0, i64 0), i64 41) #15
  %98 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %97, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i64 37) #15
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %94) #15
  br label %161

99:                                               ; preds = %39
  %100 = getelementptr inbounds i8, i8* %40, i64 1
  %101 = icmp eq i8 %43, 0
  br i1 %101, label %102, label %108

102:                                              ; preds = %99
  %103 = icmp eq i32 %37, 0
  %104 = ptrtoint i8* %100 to i64
  %105 = sub i64 %104, %33
  %106 = trunc i64 %105 to i32
  %107 = select i1 %103, i32 %106, i32 %37
  br label %161

108:                                              ; preds = %99
  %109 = zext i8 %43 to i32
  %110 = add nuw nsw i32 %109, 1
  %111 = add i32 %110, %42
  %112 = icmp ugt i32 %111, 255
  br i1 %112, label %113, label %122

113:                                              ; preds = %108
  %114 = tail call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i64 30) #15
  %115 = icmp sgt i32 %114, 0
  br i1 %115, label %116, label %161

116:                                              ; preds = %113
  %117 = bitcast %"class.logging::LogMessage"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %117) #15
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %7, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i32 201, i32 -1) #15
  %118 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %7, i64 0, i32 2
  %119 = bitcast %"class.std::__1::basic_ostringstream"* %118 to %"class.std::__1::basic_ostream"*
  %120 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %119, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @_ZZNK3net15DnsRecordParser8ReadNameEPKvPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEE9kAbortMsg, i64 0, i64 0), i64 41) #15
  %121 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %120, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0), i64 18) #15
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %117) #15
  br label %161

122:                                              ; preds = %108
  %123 = zext i8 %43 to i64
  %124 = getelementptr inbounds i8, i8* %100, i64 %123
  %125 = icmp ult i8* %124, %14
  br i1 %125, label %135, label %126

126:                                              ; preds = %122
  %127 = tail call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i64 30) #15
  %128 = icmp sgt i32 %127, 0
  br i1 %128, label %129, label %161

129:                                              ; preds = %126
  %130 = bitcast %"class.logging::LogMessage"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %130) #15
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %8, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i32 205, i32 -1) #15
  %131 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %8, i64 0, i32 2
  %132 = bitcast %"class.std::__1::basic_ostringstream"* %131 to %"class.std::__1::basic_ostream"*
  %133 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %132, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @_ZZNK3net15DnsRecordParser8ReadNameEPKvPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEE9kAbortMsg, i64 0, i64 0), i64 41) #15
  %134 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %133, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0), i64 28) #15
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %130) #15
  br label %161

135:                                              ; preds = %122
  br i1 %17, label %136, label %150

136:                                              ; preds = %135
  %137 = load i8, i8* %31, align 1
  %138 = icmp slt i8 %137, 0
  br i1 %138, label %139, label %141

139:                                              ; preds = %136
  %140 = load i64, i64* %32, align 8
  br label %143

141:                                              ; preds = %136
  %142 = zext i8 %137 to i64
  br label %143

143:                                              ; preds = %139, %141
  %144 = phi i64 [ %140, %139 ], [ %142, %141 ]
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %148, label %146

146:                                              ; preds = %143
  %147 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #15
  br label %148

148:                                              ; preds = %146, %143
  %149 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %2, i8* %100, i64 %123) #15
  br label %150

150:                                              ; preds = %135, %148
  %151 = add i32 %110, %41
  br label %39

152:                                              ; preds = %39
  %153 = tail call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i64 30) #15
  %154 = icmp sgt i32 %153, 0
  br i1 %154, label %155, label %161

155:                                              ; preds = %152
  %156 = bitcast %"class.logging::LogMessage"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %156) #15
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %9, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i32 220, i32 -1) #15
  %157 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %9, i64 0, i32 2
  %158 = bitcast %"class.std::__1::basic_ostringstream"* %157 to %"class.std::__1::basic_ostream"*
  %159 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %158, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @_ZZNK3net15DnsRecordParser8ReadNameEPKvPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEE9kAbortMsg, i64 0, i64 0), i64 41) #15
  %160 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %159, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i64 22) #15
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %156) #15
  br label %161

161:                                              ; preds = %59, %129, %126, %116, %113, %102, %93, %90, %155, %152, %73, %70, %51, %48, %3
  %162 = phi i32 [ 0, %3 ], [ 0, %48 ], [ 0, %51 ], [ 0, %70 ], [ 0, %73 ], [ 0, %152 ], [ 0, %155 ], [ 0, %90 ], [ 0, %93 ], [ 0, %129 ], [ 0, %126 ], [ 0, %116 ], [ 0, %113 ], [ %107, %102 ], [ %63, %59 ]
  ret i32 %162
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #5

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #6

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net15DnsRecordParser10ReadRecordEPNS_17DnsResourceRecordE(%"class.net::DnsRecordParser"* nocapture, %"struct.net::DnsResourceRecord"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::BigEndianReader", align 8
  %4 = alloca i16, align 2
  %5 = getelementptr inbounds %"class.net::DnsRecordParser", %"class.net::DnsRecordParser"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.net::DnsRecordParser", %"class.net::DnsRecordParser"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %6, %8
  br i1 %9, label %10, label %54

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.net::DnsRecordParser", %"class.net::DnsRecordParser"* %0, i64 0, i32 4
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 0
  %14 = tail call i32 @_ZNK3net15DnsRecordParser8ReadNameEPKvPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.net::DnsRecordParser"* %0, i8* %12, %"class.std::__1::basic_string"* %13)
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %54, label %16

16:                                               ; preds = %10
  %17 = zext i32 %14 to i64
  %18 = bitcast %"class.base::BigEndianReader"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #15
  %19 = bitcast %"class.base::BigEndianReader"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false)
  %20 = load i8*, i8** %11, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 %17
  %22 = getelementptr inbounds %"class.net::DnsRecordParser", %"class.net::DnsRecordParser"* %0, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.net::DnsRecordParser", %"class.net::DnsRecordParser"* %0, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds i8, i8* %23, i64 %25
  %27 = ptrtoint i8* %26 to i64
  %28 = ptrtoint i8* %21 to i64
  %29 = sub i64 %27, %28
  call void @_ZN4base15BigEndianReaderC1EPKcm(%"class.base::BigEndianReader"* nonnull %3, i8* %21, i64 %29) #15
  %30 = bitcast i16* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %30) #15
  store i16 -21846, i16* %4, align 2
  %31 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 1
  %32 = call zeroext i1 @_ZN4base15BigEndianReader7ReadU16EPt(%"class.base::BigEndianReader"* nonnull %3, i16* %31) #15
  br i1 %32, label %33, label %52

33:                                               ; preds = %16
  %34 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 2
  %35 = call zeroext i1 @_ZN4base15BigEndianReader7ReadU16EPt(%"class.base::BigEndianReader"* nonnull %3, i16* %34) #15
  br i1 %35, label %36, label %52

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 3
  %38 = call zeroext i1 @_ZN4base15BigEndianReader7ReadU32EPj(%"class.base::BigEndianReader"* nonnull %3, i32* %37) #15
  br i1 %38, label %39, label %52

39:                                               ; preds = %36
  %40 = call zeroext i1 @_ZN4base15BigEndianReader7ReadU16EPt(%"class.base::BigEndianReader"* nonnull %3, i16* nonnull %4) #15
  br i1 %40, label %41, label %52

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %1, i64 0, i32 4
  %43 = load i16, i16* %4, align 2
  %44 = zext i16 %43 to i64
  %45 = call zeroext i1 @_ZN4base15BigEndianReader9ReadPieceEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEm(%"class.base::BigEndianReader"* nonnull %3, %"class.base::BasicStringPiece"* %42, i64 %44) #15
  br i1 %45, label %46, label %52

46:                                               ; preds = %41
  %47 = bitcast %"class.base::BigEndianReader"* %3 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast i8** %11 to i64*
  store i64 %48, i64* %49, align 8
  %50 = load i64, i64* %5, align 8
  %51 = add i64 %50, 1
  store i64 %51, i64* %5, align 8
  br label %52

52:                                               ; preds = %16, %33, %36, %39, %41, %46
  %53 = phi i1 [ true, %46 ], [ false, %41 ], [ false, %39 ], [ false, %36 ], [ false, %33 ], [ false, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %30) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #15
  br label %54

54:                                               ; preds = %52, %10, %2
  %55 = phi i1 [ false, %2 ], [ %53, %52 ], [ false, %10 ]
  ret i1 %55
}

declare void @_ZN4base15BigEndianReaderC1EPKcm(%"class.base::BigEndianReader"*, i8*, i64) unnamed_addr #5

declare zeroext i1 @_ZN4base15BigEndianReader7ReadU16EPt(%"class.base::BigEndianReader"*, i16*) local_unnamed_addr #5

declare zeroext i1 @_ZN4base15BigEndianReader7ReadU32EPj(%"class.base::BigEndianReader"*, i32*) local_unnamed_addr #5

declare zeroext i1 @_ZN4base15BigEndianReader9ReadPieceEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEm(%"class.base::BigEndianReader"*, %"class.base::BasicStringPiece"*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net15DnsRecordParser12ReadQuestionERNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERt(%"class.net::DnsRecordParser"* nocapture, %"class.std::__1::basic_string"* dereferenceable(24), i16* nocapture dereferenceable(2)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::DnsRecordParser", %"class.net::DnsRecordParser"* %0, i64 0, i32 4
  %5 = load i8*, i8** %4, align 8
  %6 = tail call i32 @_ZNK3net15DnsRecordParser8ReadNameEPKvPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.net::DnsRecordParser"* %0, i8* %5, %"class.std::__1::basic_string"* %1)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = zext i32 %6 to i64
  %10 = load i8*, i8** %4, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %9
  %12 = getelementptr inbounds i8, i8* %11, i64 4
  %13 = getelementptr inbounds %"class.net::DnsRecordParser", %"class.net::DnsRecordParser"* %0, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.net::DnsRecordParser", %"class.net::DnsRecordParser"* %0, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds i8, i8* %14, i64 %16
  %18 = icmp ugt i8* %12, %17
  br i1 %18, label %27, label %19

19:                                               ; preds = %8
  %20 = load i8, i8* %11, align 1
  %21 = zext i8 %20 to i16
  %22 = shl nuw i16 %21, 8
  %23 = getelementptr inbounds i8, i8* %11, i64 1
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i16
  %26 = or i16 %22, %25
  store i16 %26, i16* %2, align 2
  store i8* %12, i8** %4, align 8
  br label %27

27:                                               ; preds = %19, %8, %3
  %28 = phi i1 [ false, %3 ], [ true, %19 ], [ false, %8 ]
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11DnsResponseC2EtbRKNSt3__16vectorINS_17DnsResourceRecordENS1_9allocatorIS3_EEEES8_S8_RKN4absl8optionalINS_8DnsQueryEEEhb(%"class.net::DnsResponse"*, i16 zeroext, i1 zeroext, %"class.std::__1::vector.14"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.14"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.14"* nocapture readonly dereferenceable(24), %"class.absl::optional"* dereferenceable(32), i8 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %10 = alloca %"class.base::BigEndianWriter", align 8
  %11 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 0, i32 0
  store %"class.net::IOBuffer"* null, %"class.net::IOBuffer"** %11, align 8
  %12 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 4
  %14 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.net::DnsRecordParser"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 41, i1 false)
  %16 = bitcast %"class.std::__1::vector"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 48, i1 false)
  %17 = load i8, i8* %14, align 8, !range !2
  %18 = icmp ne i8 %17, 0
  br i1 %18, label %19, label %24

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %21 = tail call zeroext i16 @_ZNK3net8DnsQuery2idEv(%"class.net::DnsQuery"* %20) #15
  %22 = icmp eq i16 %21, %1
  %23 = zext i1 %22 to i32
  br label %24

24:                                               ; preds = %19, %9
  %25 = phi i16 [ 1, %19 ], [ 0, %9 ]
  %26 = phi i32 [ %23, %19 ], [ 1, %9 ]
  %27 = select i1 %2, i16 -31744, i16 -32768
  %28 = zext i8 %7 to i16
  %29 = or i16 %27, %28
  %30 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 1
  %31 = bitcast %"struct.net::DnsResourceRecord"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::vector.14"* %3 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %32, %34
  %36 = sdiv exact i64 %35, 72
  %37 = trunc i64 %36 to i16
  %38 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %4, i64 0, i32 0, i32 1
  %39 = bitcast %"struct.net::DnsResourceRecord"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::vector.14"* %4 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = sdiv exact i64 %43, 72
  %45 = trunc i64 %44 to i16
  %46 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %5, i64 0, i32 0, i32 1
  %47 = bitcast %"struct.net::DnsResourceRecord"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.std::__1::vector.14"* %5 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %48, %50
  %52 = sdiv exact i64 %51, 72
  %53 = trunc i64 %52 to i16
  %54 = inttoptr i64 %34 to %"struct.net::DnsResourceRecord"*
  %55 = inttoptr i64 %32 to %"struct.net::DnsResourceRecord"*
  br i1 %18, label %56, label %67

56:                                               ; preds = %24
  %57 = load i8, i8* %14, align 8, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #17
  unreachable

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %62 = tail call i64 @_ZNK3net8DnsQuery13question_sizeEv(%"class.net::DnsQuery"* %61) #15
  %63 = add i64 %62, 12
  %64 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 0
  %65 = load %"struct.net::DnsResourceRecord"*, %"struct.net::DnsResourceRecord"** %64, align 8
  %66 = load %"struct.net::DnsResourceRecord"*, %"struct.net::DnsResourceRecord"** %30, align 8
  br label %67

67:                                               ; preds = %24, %60
  %68 = phi %"struct.net::DnsResourceRecord"* [ %66, %60 ], [ %55, %24 ]
  %69 = phi %"struct.net::DnsResourceRecord"* [ %65, %60 ], [ %54, %24 ]
  %70 = phi i64 [ %63, %60 ], [ 12, %24 ]
  %71 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 0
  %72 = icmp eq %"struct.net::DnsResourceRecord"* %69, %68
  br i1 %72, label %113, label %73

73:                                               ; preds = %67, %73
  %74 = phi i64 [ %110, %73 ], [ %70, %67 ]
  %75 = phi %"struct.net::DnsResourceRecord"* [ %111, %73 ], [ %69, %67 ]
  %76 = bitcast %"struct.net::DnsResourceRecord"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  %80 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds i8, i8* %81, i64 %83
  %85 = bitcast %"struct.net::DnsResourceRecord"* %75 to i8*
  %86 = zext i8 %78 to i64
  %87 = getelementptr inbounds i8, i8* %85, i64 %86
  %88 = select i1 %79, i8* %84, i8* %87
  %89 = select i1 %79, i64 %83, i64 %86
  %90 = getelementptr inbounds i8, i8* %88, i64 -1
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, 46
  %93 = select i1 %92, i64 1, i64 2
  %94 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %75, i64 0, i32 5
  %95 = bitcast %"class.std::__1::basic_string"* %94 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  %99 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %75, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = zext i8 %97 to i64
  %102 = select i1 %98, i64 %100, i64 %101
  %103 = icmp eq i64 %102, 0
  %104 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %75, i64 0, i32 4, i32 1
  %105 = load i64, i64* %104, align 8
  %106 = select i1 %103, i64 %105, i64 %102
  %107 = add i64 %74, 10
  %108 = add i64 %107, %89
  %109 = add i64 %108, %93
  %110 = add i64 %109, %106
  %111 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %75, i64 1
  %112 = icmp eq %"struct.net::DnsResourceRecord"* %111, %68
  br i1 %112, label %113, label %73

113:                                              ; preds = %73, %67
  %114 = phi i64 [ %70, %67 ], [ %110, %73 ]
  %115 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %4, i64 0, i32 0, i32 0
  %116 = load %"struct.net::DnsResourceRecord"*, %"struct.net::DnsResourceRecord"** %115, align 8
  %117 = load %"struct.net::DnsResourceRecord"*, %"struct.net::DnsResourceRecord"** %38, align 8
  %118 = icmp eq %"struct.net::DnsResourceRecord"* %116, %117
  br i1 %118, label %159, label %119

119:                                              ; preds = %113, %119
  %120 = phi i64 [ %156, %119 ], [ %114, %113 ]
  %121 = phi %"struct.net::DnsResourceRecord"* [ %157, %119 ], [ %116, %113 ]
  %122 = bitcast %"struct.net::DnsResourceRecord"* %121 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  %124 = load i8, i8* %123, align 1
  %125 = icmp slt i8 %124, 0
  %126 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  %128 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds i8, i8* %127, i64 %129
  %131 = bitcast %"struct.net::DnsResourceRecord"* %121 to i8*
  %132 = zext i8 %124 to i64
  %133 = getelementptr inbounds i8, i8* %131, i64 %132
  %134 = select i1 %125, i8* %130, i8* %133
  %135 = select i1 %125, i64 %129, i64 %132
  %136 = getelementptr inbounds i8, i8* %134, i64 -1
  %137 = load i8, i8* %136, align 1
  %138 = icmp eq i8 %137, 46
  %139 = select i1 %138, i64 1, i64 2
  %140 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %121, i64 0, i32 5
  %141 = bitcast %"class.std::__1::basic_string"* %140 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %142 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %141, i64 0, i32 1, i32 0
  %143 = load i8, i8* %142, align 1
  %144 = icmp slt i8 %143, 0
  %145 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %121, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %146 = load i64, i64* %145, align 8
  %147 = zext i8 %143 to i64
  %148 = select i1 %144, i64 %146, i64 %147
  %149 = icmp eq i64 %148, 0
  %150 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %121, i64 0, i32 4, i32 1
  %151 = load i64, i64* %150, align 8
  %152 = select i1 %149, i64 %151, i64 %148
  %153 = add i64 %120, 10
  %154 = add i64 %153, %135
  %155 = add i64 %154, %139
  %156 = add i64 %155, %152
  %157 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %121, i64 1
  %158 = icmp eq %"struct.net::DnsResourceRecord"* %157, %117
  br i1 %158, label %159, label %119

159:                                              ; preds = %119, %113
  %160 = phi i64 [ %114, %113 ], [ %156, %119 ]
  %161 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %5, i64 0, i32 0, i32 0
  %162 = load %"struct.net::DnsResourceRecord"*, %"struct.net::DnsResourceRecord"** %161, align 8
  %163 = load %"struct.net::DnsResourceRecord"*, %"struct.net::DnsResourceRecord"** %46, align 8
  %164 = icmp eq %"struct.net::DnsResourceRecord"* %162, %163
  br i1 %164, label %205, label %165

165:                                              ; preds = %159, %165
  %166 = phi i64 [ %202, %165 ], [ %160, %159 ]
  %167 = phi %"struct.net::DnsResourceRecord"* [ %203, %165 ], [ %162, %159 ]
  %168 = bitcast %"struct.net::DnsResourceRecord"* %167 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %169 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %168, i64 0, i32 1, i32 0
  %170 = load i8, i8* %169, align 1
  %171 = icmp slt i8 %170, 0
  %172 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %167, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load i8*, i8** %172, align 8
  %174 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %167, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %175 = load i64, i64* %174, align 8
  %176 = getelementptr inbounds i8, i8* %173, i64 %175
  %177 = bitcast %"struct.net::DnsResourceRecord"* %167 to i8*
  %178 = zext i8 %170 to i64
  %179 = getelementptr inbounds i8, i8* %177, i64 %178
  %180 = select i1 %171, i8* %176, i8* %179
  %181 = select i1 %171, i64 %175, i64 %178
  %182 = getelementptr inbounds i8, i8* %180, i64 -1
  %183 = load i8, i8* %182, align 1
  %184 = icmp eq i8 %183, 46
  %185 = select i1 %184, i64 1, i64 2
  %186 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %167, i64 0, i32 5
  %187 = bitcast %"class.std::__1::basic_string"* %186 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %188 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %187, i64 0, i32 1, i32 0
  %189 = load i8, i8* %188, align 1
  %190 = icmp slt i8 %189, 0
  %191 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %167, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %192 = load i64, i64* %191, align 8
  %193 = zext i8 %189 to i64
  %194 = select i1 %190, i64 %192, i64 %193
  %195 = icmp eq i64 %194, 0
  %196 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %167, i64 0, i32 4, i32 1
  %197 = load i64, i64* %196, align 8
  %198 = select i1 %195, i64 %197, i64 %194
  %199 = add i64 %166, 10
  %200 = add i64 %199, %181
  %201 = add i64 %200, %185
  %202 = add i64 %201, %198
  %203 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %167, i64 1
  %204 = icmp eq %"struct.net::DnsResourceRecord"* %203, %163
  br i1 %204, label %205, label %165

205:                                              ; preds = %165, %159
  %206 = phi i64 [ %160, %159 ], [ %202, %165 ]
  %207 = tail call i8* @_Znwm(i64 24) #16
  %208 = bitcast i8* %207 to %"class.net::IOBuffer"*
  tail call void @_ZN3net8IOBufferC1Em(%"class.net::IOBuffer"* nonnull %208, i64 %206) #15
  %209 = getelementptr inbounds i8, i8* %207, i64 8
  %210 = bitcast i8* %209 to i32*
  %211 = atomicrmw add i32* %210, i32 1 monotonic
  %212 = ptrtoint i8* %207 to i64
  %213 = bitcast %"class.net::DnsResponse"* %0 to i64*
  %214 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %11, align 8
  store i64 %212, i64* %213, align 8
  %215 = icmp eq %"class.net::IOBuffer"* %214, null
  br i1 %215, label %228, label %216

216:                                              ; preds = %205
  %217 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %214, i64 0, i32 1
  %218 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %217, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = atomicrmw sub i32* %218, i32 1 acq_rel
  %220 = icmp eq i32 %219, 1
  br i1 %220, label %221, label %228

221:                                              ; preds = %216
  %222 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %217, i64 -2
  %223 = bitcast %"class.base::RefCountedThreadSafe"* %222 to %"class.net::IOBuffer"*
  %224 = bitcast %"class.base::RefCountedThreadSafe"* %222 to void (%"class.net::IOBuffer"*)***
  %225 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %224, align 8
  %226 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %225, i64 1
  %227 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %226, align 8
  tail call void %227(%"class.net::IOBuffer"* nonnull %223) #15
  br label %228

228:                                              ; preds = %205, %216, %221
  %229 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 1
  store i64 %206, i64* %229, align 8
  %230 = bitcast %"class.base::BigEndianWriter"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %230) #15
  %231 = getelementptr inbounds %"class.base::BigEndianWriter", %"class.base::BigEndianWriter"* %10, i64 0, i32 0
  %232 = getelementptr inbounds %"class.base::BigEndianWriter", %"class.base::BigEndianWriter"* %10, i64 0, i32 1
  %233 = bitcast %"class.base::BigEndianWriter"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %233, i8 -86, i64 16, i1 false)
  %234 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %11, align 8
  %235 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %234, i64 0, i32 2
  %236 = load i8*, i8** %235, align 8
  call void @_ZN4base15BigEndianWriterC1EPcm(%"class.base::BigEndianWriter"* nonnull %10, i8* %236, i64 %206) #15
  %237 = call zeroext i1 @_ZN4base15BigEndianWriter8WriteU16Et(%"class.base::BigEndianWriter"* nonnull %10, i16 zeroext %1) #15
  br i1 %237, label %238, label %249

238:                                              ; preds = %228
  %239 = call zeroext i1 @_ZN4base15BigEndianWriter8WriteU16Et(%"class.base::BigEndianWriter"* nonnull %10, i16 zeroext %29) #15
  br i1 %239, label %240, label %249

240:                                              ; preds = %238
  %241 = call zeroext i1 @_ZN4base15BigEndianWriter8WriteU16Et(%"class.base::BigEndianWriter"* nonnull %10, i16 zeroext %25) #15
  br i1 %241, label %242, label %249

242:                                              ; preds = %240
  %243 = call zeroext i1 @_ZN4base15BigEndianWriter8WriteU16Et(%"class.base::BigEndianWriter"* nonnull %10, i16 zeroext %37) #15
  br i1 %243, label %244, label %249

244:                                              ; preds = %242
  %245 = call zeroext i1 @_ZN4base15BigEndianWriter8WriteU16Et(%"class.base::BigEndianWriter"* nonnull %10, i16 zeroext %45) #15
  br i1 %245, label %246, label %249

246:                                              ; preds = %244
  %247 = call zeroext i1 @_ZN4base15BigEndianWriter8WriteU16Et(%"class.base::BigEndianWriter"* nonnull %10, i16 zeroext %53) #15
  %248 = zext i1 %247 to i32
  br label %249

249:                                              ; preds = %228, %238, %240, %242, %244, %246
  %250 = phi i32 [ 0, %244 ], [ 0, %242 ], [ 0, %240 ], [ 0, %238 ], [ 0, %228 ], [ %248, %246 ]
  %251 = and i32 %250, %26
  br i1 %18, label %252, label %264

252:                                              ; preds = %249
  %253 = load i8, i8* %14, align 8, !range !2
  %254 = icmp eq i8 %253, 0
  br i1 %254, label %255, label %256

255:                                              ; preds = %252
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #17
  unreachable

256:                                              ; preds = %252
  %257 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %258 = call { i8*, i64 } @_ZNK3net8DnsQuery8questionEv(%"class.net::DnsQuery"* %257) #15
  %259 = extractvalue { i8*, i64 } %258, 0
  %260 = extractvalue { i8*, i64 } %258, 1
  %261 = call zeroext i1 @_ZN4base15BigEndianWriter10WriteBytesEPKvm(%"class.base::BigEndianWriter"* nonnull %10, i8* %259, i64 %260) #15
  %262 = zext i1 %261 to i32
  %263 = and i32 %251, %262
  br label %264

264:                                              ; preds = %256, %249
  %265 = phi i32 [ %263, %256 ], [ %251, %249 ]
  %266 = trunc i32 %265 to i8
  %267 = load %"struct.net::DnsResourceRecord"*, %"struct.net::DnsResourceRecord"** %71, align 8
  %268 = load %"struct.net::DnsResourceRecord"*, %"struct.net::DnsResourceRecord"** %30, align 8
  %269 = icmp eq %"struct.net::DnsResourceRecord"* %267, %268
  br i1 %269, label %270, label %275

270:                                              ; preds = %275, %264
  %271 = phi i8 [ %266, %264 ], [ %280, %275 ]
  %272 = load %"struct.net::DnsResourceRecord"*, %"struct.net::DnsResourceRecord"** %115, align 8
  %273 = load %"struct.net::DnsResourceRecord"*, %"struct.net::DnsResourceRecord"** %38, align 8
  %274 = icmp eq %"struct.net::DnsResourceRecord"* %272, %273
  br i1 %274, label %283, label %288

275:                                              ; preds = %264, %275
  %276 = phi i8 [ %280, %275 ], [ %266, %264 ]
  %277 = phi %"struct.net::DnsResourceRecord"* [ %281, %275 ], [ %267, %264 ]
  %278 = call zeroext i1 @_ZN3net11DnsResponse11WriteAnswerEPN4base15BigEndianWriterERKNS_17DnsResourceRecordERKN4absl8optionalINS_8DnsQueryEEEb(%"class.net::DnsResponse"* %0, %"class.base::BigEndianWriter"* nonnull %10, %"struct.net::DnsResourceRecord"* dereferenceable(72) %277, %"class.absl::optional"* dereferenceable(32) %6, i1 zeroext %8)
  %279 = zext i1 %278 to i8
  %280 = and i8 %276, %279
  %281 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %277, i64 1
  %282 = icmp eq %"struct.net::DnsResourceRecord"* %281, %268
  br i1 %282, label %270, label %275

283:                                              ; preds = %288, %270
  %284 = phi i8 [ %271, %270 ], [ %293, %288 ]
  %285 = load %"struct.net::DnsResourceRecord"*, %"struct.net::DnsResourceRecord"** %161, align 8
  %286 = load %"struct.net::DnsResourceRecord"*, %"struct.net::DnsResourceRecord"** %46, align 8
  %287 = icmp eq %"struct.net::DnsResourceRecord"* %285, %286
  br i1 %287, label %296, label %300

288:                                              ; preds = %270, %288
  %289 = phi i8 [ %293, %288 ], [ %271, %270 ]
  %290 = phi %"struct.net::DnsResourceRecord"* [ %294, %288 ], [ %272, %270 ]
  %291 = call zeroext i1 @_ZN3net11DnsResponse11WriteRecordEPN4base15BigEndianWriterERKNS_17DnsResourceRecordEb(%"class.net::DnsResponse"* undef, %"class.base::BigEndianWriter"* nonnull %10, %"struct.net::DnsResourceRecord"* dereferenceable(72) %290, i1 zeroext %8)
  %292 = zext i1 %291 to i8
  %293 = and i8 %289, %292
  %294 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %290, i64 1
  %295 = icmp eq %"struct.net::DnsResourceRecord"* %294, %273
  br i1 %295, label %283, label %288

296:                                              ; preds = %300, %283
  %297 = phi i8 [ %284, %283 ], [ %305, %300 ]
  %298 = and i8 %297, 1
  %299 = icmp eq i8 %298, 0
  br i1 %299, label %308, label %324

300:                                              ; preds = %283, %300
  %301 = phi i8 [ %305, %300 ], [ %284, %283 ]
  %302 = phi %"struct.net::DnsResourceRecord"* [ %306, %300 ], [ %285, %283 ]
  %303 = call zeroext i1 @_ZN3net11DnsResponse11WriteRecordEPN4base15BigEndianWriterERKNS_17DnsResourceRecordEb(%"class.net::DnsResponse"* undef, %"class.base::BigEndianWriter"* nonnull %10, %"struct.net::DnsResourceRecord"* dereferenceable(72) %302, i1 zeroext %8)
  %304 = zext i1 %303 to i8
  %305 = and i8 %301, %304
  %306 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %302, i64 1
  %307 = icmp eq %"struct.net::DnsResourceRecord"* %306, %286
  br i1 %307, label %296, label %300

308:                                              ; preds = %296
  %309 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %11, align 8
  store i64 0, i64* %213, align 8
  %310 = icmp eq %"class.net::IOBuffer"* %309, null
  br i1 %310, label %323, label %311

311:                                              ; preds = %308
  %312 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %309, i64 0, i32 1
  %313 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %312, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %314 = atomicrmw sub i32* %313, i32 1 acq_rel
  %315 = icmp eq i32 %314, 1
  br i1 %315, label %316, label %323

316:                                              ; preds = %311
  %317 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %312, i64 -2
  %318 = bitcast %"class.base::RefCountedThreadSafe"* %317 to %"class.net::IOBuffer"*
  %319 = bitcast %"class.base::RefCountedThreadSafe"* %317 to void (%"class.net::IOBuffer"*)***
  %320 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %319, align 8
  %321 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %320, i64 1
  %322 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %321, align 8
  call void %322(%"class.net::IOBuffer"* nonnull %318) #15
  br label %323

323:                                              ; preds = %308, %311, %316
  store i64 0, i64* %229, align 8
  br label %340

324:                                              ; preds = %296
  %325 = load i8*, i8** %231, align 8
  %326 = bitcast i8** %232 to i64*
  %327 = load i64, i64* %326, align 8
  %328 = ptrtoint i8* %325 to i64
  %329 = sub i64 %327, %328
  call void @llvm.memset.p0i8.i64(i8* align 1 %325, i8 0, i64 %329, i1 false)
  %330 = load i64, i64* %229, align 8
  br i1 %18, label %331, label %338

331:                                              ; preds = %324
  %332 = load i8, i8* %14, align 8, !range !2
  %333 = icmp eq i8 %332, 0
  br i1 %333, label %334, label %335

334:                                              ; preds = %331
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #17
  unreachable

335:                                              ; preds = %331
  %336 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %337 = call zeroext i1 @_ZN3net11DnsResponse9InitParseEmRKNS_8DnsQueryE(%"class.net::DnsResponse"* %0, i64 %330, %"class.net::DnsQuery"* dereferenceable(24) %336)
  br label %340

338:                                              ; preds = %324
  %339 = call zeroext i1 @_ZN3net11DnsResponse21InitParseWithoutQueryEm(%"class.net::DnsResponse"* %0, i64 %330)
  br label %340

340:                                              ; preds = %335, %338, %323
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %230) #15
  ret void
}

declare zeroext i16 @_ZNK3net8DnsQuery2idEv(%"class.net::DnsQuery"*) local_unnamed_addr #5

declare i64 @_ZNK3net8DnsQuery13question_sizeEv(%"class.net::DnsQuery"*) local_unnamed_addr #5

declare void @_ZN4base15BigEndianWriterC1EPcm(%"class.base::BigEndianWriter"*, i8*, i64) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net11DnsResponse11WriteHeaderEPN4base15BigEndianWriterERKNS_12dns_protocol6HeaderE(%"class.net::DnsResponse"* nocapture readnone, %"class.base::BigEndianWriter"*, %"struct.net::dns_protocol::Header"* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.net::dns_protocol::Header", %"struct.net::dns_protocol::Header"* %2, i64 0, i32 0
  %5 = load i16, i16* %4, align 1
  %6 = tail call zeroext i1 @_ZN4base15BigEndianWriter8WriteU16Et(%"class.base::BigEndianWriter"* %1, i16 zeroext %5) #15
  br i1 %6, label %7, label %27

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.net::dns_protocol::Header", %"struct.net::dns_protocol::Header"* %2, i64 0, i32 1
  %9 = load i16, i16* %8, align 1
  %10 = tail call zeroext i1 @_ZN4base15BigEndianWriter8WriteU16Et(%"class.base::BigEndianWriter"* %1, i16 zeroext %9) #15
  br i1 %10, label %11, label %27

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"struct.net::dns_protocol::Header", %"struct.net::dns_protocol::Header"* %2, i64 0, i32 2
  %13 = load i16, i16* %12, align 1
  %14 = tail call zeroext i1 @_ZN4base15BigEndianWriter8WriteU16Et(%"class.base::BigEndianWriter"* %1, i16 zeroext %13) #15
  br i1 %14, label %15, label %27

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"struct.net::dns_protocol::Header", %"struct.net::dns_protocol::Header"* %2, i64 0, i32 3
  %17 = load i16, i16* %16, align 1
  %18 = tail call zeroext i1 @_ZN4base15BigEndianWriter8WriteU16Et(%"class.base::BigEndianWriter"* %1, i16 zeroext %17) #15
  br i1 %18, label %19, label %27

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"struct.net::dns_protocol::Header", %"struct.net::dns_protocol::Header"* %2, i64 0, i32 4
  %21 = load i16, i16* %20, align 1
  %22 = tail call zeroext i1 @_ZN4base15BigEndianWriter8WriteU16Et(%"class.base::BigEndianWriter"* %1, i16 zeroext %21) #15
  br i1 %22, label %23, label %27

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"struct.net::dns_protocol::Header", %"struct.net::dns_protocol::Header"* %2, i64 0, i32 5
  %25 = load i16, i16* %24, align 1
  %26 = tail call zeroext i1 @_ZN4base15BigEndianWriter8WriteU16Et(%"class.base::BigEndianWriter"* %1, i16 zeroext %25) #15
  br label %27

27:                                               ; preds = %23, %19, %15, %11, %7, %3
  %28 = phi i1 [ false, %19 ], [ false, %15 ], [ false, %11 ], [ false, %7 ], [ false, %3 ], [ %26, %23 ]
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net11DnsResponse13WriteQuestionEPN4base15BigEndianWriterERKNS_8DnsQueryE(%"class.net::DnsResponse"* nocapture readnone, %"class.base::BigEndianWriter"*, %"class.net::DnsQuery"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = tail call { i8*, i64 } @_ZNK3net8DnsQuery8questionEv(%"class.net::DnsQuery"* %2) #15
  %5 = extractvalue { i8*, i64 } %4, 0
  %6 = extractvalue { i8*, i64 } %4, 1
  %7 = tail call zeroext i1 @_ZN4base15BigEndianWriter10WriteBytesEPKvm(%"class.base::BigEndianWriter"* %1, i8* %5, i64 %6) #15
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net11DnsResponse11WriteAnswerEPN4base15BigEndianWriterERKNS_17DnsResourceRecordERKN4absl8optionalINS_8DnsQueryEEEb(%"class.net::DnsResponse"* nocapture readnone, %"class.base::BigEndianWriter"*, %"struct.net::DnsResourceRecord"* dereferenceable(72), %"class.absl::optional"* dereferenceable(32), i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::LogMessage", align 8
  br i1 %4, label %7, label %28

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %28, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %2, i64 0, i32 1
  %13 = load i16, i16* %12, align 8
  %14 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %15 = tail call zeroext i16 @_ZNK3net8DnsQuery5qtypeEv(%"class.net::DnsQuery"* %14) #15
  %16 = icmp eq i16 %13, %15
  %17 = load i16, i16* %12, align 8
  %18 = icmp eq i16 %17, 5
  %19 = or i1 %16, %18
  br i1 %19, label %28, label %20

20:                                               ; preds = %11
  %21 = tail call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i64 30) #15
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %30

23:                                               ; preds = %20
  %24 = bitcast %"class.logging::LogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %24) #15
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %6, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i32 572, i32 -1) #15
  %25 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %6, i64 0, i32 2
  %26 = bitcast %"class.std::__1::basic_ostringstream"* %25 to %"class.std::__1::basic_ostream"*
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %26, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.11, i64 0, i64 0), i64 49) #15
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %24) #15
  br label %30

28:                                               ; preds = %7, %11, %5
  %29 = tail call zeroext i1 @_ZN3net11DnsResponse11WriteRecordEPN4base15BigEndianWriterERKNS_17DnsResourceRecordEb(%"class.net::DnsResponse"* undef, %"class.base::BigEndianWriter"* %1, %"struct.net::DnsResourceRecord"* dereferenceable(72) %2, i1 zeroext %4)
  br label %30

30:                                               ; preds = %23, %20, %28
  %31 = phi i1 [ %29, %28 ], [ false, %20 ], [ false, %23 ]
  ret i1 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net11DnsResponse11WriteRecordEPN4base15BigEndianWriterERKNS_17DnsResourceRecordEb(%"class.net::DnsResponse"* nocapture readnone, %"class.base::BigEndianWriter"*, %"struct.net::DnsResourceRecord"* dereferenceable(72), i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::LogMessage", align 8
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = alloca %"class.logging::LogMessage", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.base::BasicStringPiece", align 8
  %10 = alloca %"class.logging::LogMessage", align 8
  %11 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %2, i64 0, i32 4, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %2, i64 0, i32 5
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %21 = select i1 %17, i8* %19, i8* %20
  %22 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %2, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %16 to i64
  %25 = select i1 %17, i64 %23, i64 %24
  %26 = icmp eq i64 %12, %25
  br i1 %26, label %27, label %32

27:                                               ; preds = %4
  %28 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %2, i64 0, i32 4, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = tail call i32 @bcmp(i8* %29, i8* %21, i64 %12) #15
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %40, label %32

32:                                               ; preds = %27, %4
  %33 = tail call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i64 30) #15
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %134

35:                                               ; preds = %32
  %36 = bitcast %"class.logging::LogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %36) #15
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %5, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i32 540, i32 -1) #15
  %37 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %5, i64 0, i32 2
  %38 = bitcast %"class.std::__1::basic_ostringstream"* %37 to %"class.std::__1::basic_ostream"*
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.8, i64 0, i64 0), i64 48) #15
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %36) #15
  br label %134

40:                                               ; preds = %27
  %41 = bitcast %"class.base::BasicStringPiece"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #15
  br i1 %3, label %42, label %56

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  store i8* %21, i8** %43, align 8
  %44 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  store i64 %12, i64* %44, align 8
  %45 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %2, i64 0, i32 1
  %46 = load i16, i16* %45, align 8
  %47 = call zeroext i1 @_ZN3net11RecordRdata12HasValidSizeERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEt(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %6, i16 zeroext %46) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #15
  br i1 %47, label %57, label %48

48:                                               ; preds = %42
  %49 = call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i64 30) #15
  %50 = icmp sgt i32 %49, 0
  br i1 %50, label %51, label %134

51:                                               ; preds = %48
  %52 = bitcast %"class.logging::LogMessage"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %52) #15
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %7, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i32 546, i32 -1) #15
  %53 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %7, i64 0, i32 2
  %54 = bitcast %"class.std::__1::basic_ostringstream"* %53 to %"class.std::__1::basic_ostream"*
  %55 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %54, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0), i64 32) #15
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %52) #15
  br label %134

56:                                               ; preds = %40
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #15
  br label %57

57:                                               ; preds = %42, %56
  %58 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #15
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 24, i1 false) #15
  %60 = bitcast %"class.base::BasicStringPiece"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #15
  %61 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 0
  %62 = bitcast %"struct.net::DnsResourceRecord"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  %66 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = bitcast %"struct.net::DnsResourceRecord"* %2 to i8*
  %69 = select i1 %65, i8* %67, i8* %68
  store i8* %69, i8** %61, align 8
  %70 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 1
  %71 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = zext i8 %64 to i64
  %74 = select i1 %65, i64 %72, i64 %73
  store i64 %74, i64* %70, align 8
  %75 = call zeroext i1 @_ZN3net16DNSDomainFromDotERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %9, %"class.std::__1::basic_string"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #15
  br i1 %75, label %84, label %76

76:                                               ; preds = %57
  %77 = call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i64 30) #15
  %78 = icmp sgt i32 %77, 0
  br i1 %78, label %79, label %125

79:                                               ; preds = %76
  %80 = bitcast %"class.logging::LogMessage"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %80) #15
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %10, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i32 551, i32 -1) #15
  %81 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %10, i64 0, i32 2
  %82 = bitcast %"class.std::__1::basic_ostringstream"* %81 to %"class.std::__1::basic_ostream"*
  %83 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %82, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i64 20) #15
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %10) #15
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %80) #15
  br label %125

84:                                               ; preds = %57
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  %90 = load i8*, i8** %59, align 8
  %91 = load i64, i64* %85, align 8
  %92 = zext i8 %88 to i64
  %93 = select i1 %89, i8* %90, i8* %58
  %94 = select i1 %89, i64 %91, i64 %92
  %95 = call zeroext i1 @_ZN4base15BigEndianWriter10WriteBytesEPKvm(%"class.base::BigEndianWriter"* %1, i8* %93, i64 %94) #15
  br i1 %95, label %96, label %125

96:                                               ; preds = %84
  %97 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %2, i64 0, i32 1
  %98 = load i16, i16* %97, align 8
  %99 = call zeroext i1 @_ZN4base15BigEndianWriter8WriteU16Et(%"class.base::BigEndianWriter"* %1, i16 zeroext %98) #15
  br i1 %99, label %100, label %125

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %2, i64 0, i32 2
  %102 = load i16, i16* %101, align 2
  %103 = call zeroext i1 @_ZN4base15BigEndianWriter8WriteU16Et(%"class.base::BigEndianWriter"* %1, i16 zeroext %102) #15
  br i1 %103, label %104, label %125

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %2, i64 0, i32 3
  %106 = load i32, i32* %105, align 4
  %107 = call zeroext i1 @_ZN4base15BigEndianWriter8WriteU32Ej(%"class.base::BigEndianWriter"* %1, i32 %106) #15
  br i1 %107, label %108, label %125

108:                                              ; preds = %104
  %109 = load i8, i8* %15, align 1
  %110 = icmp slt i8 %109, 0
  %111 = load i64, i64* %22, align 8
  %112 = zext i8 %109 to i64
  %113 = select i1 %110, i64 %111, i64 %112
  %114 = trunc i64 %113 to i16
  %115 = call zeroext i1 @_ZN4base15BigEndianWriter8WriteU16Et(%"class.base::BigEndianWriter"* %1, i16 zeroext %114) #15
  br i1 %115, label %116, label %125

116:                                              ; preds = %108
  %117 = load i8, i8* %15, align 1
  %118 = icmp slt i8 %117, 0
  %119 = load i8*, i8** %18, align 8
  %120 = load i64, i64* %22, align 8
  %121 = zext i8 %117 to i64
  %122 = select i1 %118, i8* %119, i8* %20
  %123 = select i1 %118, i64 %120, i64 %121
  %124 = call zeroext i1 @_ZN4base15BigEndianWriter10WriteBytesEPKvm(%"class.base::BigEndianWriter"* %1, i8* %122, i64 %123) #15
  br label %125

125:                                              ; preds = %79, %76, %84, %96, %100, %104, %108, %116
  %126 = phi i1 [ false, %108 ], [ false, %104 ], [ false, %100 ], [ false, %96 ], [ false, %84 ], [ %124, %116 ], [ false, %76 ], [ false, %79 ]
  %127 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %128 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %127, i64 0, i32 1, i32 0
  %129 = load i8, i8* %128, align 1
  %130 = icmp slt i8 %129, 0
  br i1 %130, label %131, label %133

131:                                              ; preds = %125
  %132 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %132) #16
  br label %133

133:                                              ; preds = %125, %131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #15
  br label %134

134:                                              ; preds = %51, %48, %35, %32, %133
  %135 = phi i1 [ %126, %133 ], [ false, %32 ], [ false, %35 ], [ false, %48 ], [ false, %51 ]
  ret i1 %135
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net11DnsResponse9InitParseEmRKNS_8DnsQueryE(%"class.net::DnsResponse"*, i64, %"class.net::DnsQuery"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.absl::optional.28", align 8
  %5 = tail call { i8*, i64 } @_ZNK3net8DnsQuery8questionEv(%"class.net::DnsQuery"* %2) #15
  %6 = extractvalue { i8*, i64 } %5, 0
  %7 = extractvalue { i8*, i64 } %5, 1
  %8 = add i64 %7, 12
  %9 = icmp ugt i64 %8, %1
  br i1 %9, label %173, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %12, %1
  br i1 %13, label %173, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 3
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 0, i32 0
  %17 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %16, align 8
  %18 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %17, i64 0, i32 2
  %19 = bitcast i8** %18 to %"struct.net::dns_protocol::Header"**
  %20 = load %"struct.net::dns_protocol::Header"*, %"struct.net::dns_protocol::Header"** %19, align 8
  %21 = getelementptr inbounds %"struct.net::dns_protocol::Header", %"struct.net::dns_protocol::Header"* %20, i64 0, i32 0
  %22 = load i16, i16* %21, align 1
  %23 = tail call i16 @llvm.bswap.i16(i16 %22) #15
  %24 = tail call zeroext i16 @_ZNK3net8DnsQuery2idEv(%"class.net::DnsQuery"* %2) #15
  %25 = icmp eq i16 %23, %24
  br i1 %25, label %26, label %173

26:                                               ; preds = %14
  %27 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %16, align 8
  %28 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %27, i64 0, i32 2
  %29 = bitcast i8** %28 to %"struct.net::dns_protocol::Header"**
  %30 = load %"struct.net::dns_protocol::Header"*, %"struct.net::dns_protocol::Header"** %29, align 8
  %31 = getelementptr inbounds %"struct.net::dns_protocol::Header", %"struct.net::dns_protocol::Header"* %30, i64 0, i32 1
  %32 = load i16, i16* %31, align 1
  %33 = trunc i16 %32 to i8
  %34 = icmp sgt i8 %33, -1
  br i1 %34, label %173, label %35

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"struct.net::dns_protocol::Header", %"struct.net::dns_protocol::Header"* %30, i64 0, i32 2
  %37 = load i16, i16* %36, align 1
  %38 = icmp eq i16 %37, 256
  br i1 %38, label %39, label %173

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"struct.net::dns_protocol::Header", %"struct.net::dns_protocol::Header"* %30, i64 1
  %41 = bitcast %"struct.net::dns_protocol::Header"* %40 to i8*
  %42 = tail call i32 @bcmp(i8* %6, i8* %41, i64 %7) #15
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %173

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.absl::optional.28", %"class.absl::optional.28"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %45) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 32, i1 false)
  %46 = tail call { i8*, i64 } @_ZNK3net8DnsQuery5qnameEv(%"class.net::DnsQuery"* %2) #15
  %47 = extractvalue { i8*, i64 } %46, 0
  %48 = extractvalue { i8*, i64 } %46, 1
  call void @_ZN3net17DnsDomainToStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.absl::optional.28"* nonnull sret %4, i8* %47, i64 %48, i1 zeroext false) #15
  %49 = load i8, i8* %45, align 8, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %171, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"class.absl::optional.28", %"class.absl::optional.28"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %53 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 4, i32 0, i32 1
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %53, align 8
  %55 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %56 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %55, align 8
  %57 = icmp ult %"class.std::__1::basic_string"* %54, %56
  br i1 %57, label %58, label %64

58:                                               ; preds = %51
  %59 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  %60 = bitcast %"class.std::__1::basic_string"* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 24, i1 false) #15
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 1
  %62 = ptrtoint %"class.std::__1::basic_string"* %61 to i64
  %63 = bitcast %"class.std::__1::basic_string"** %53 to i64*
  store i64 %62, i64* %63, align 8
  br label %66

64:                                               ; preds = %51
  %65 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 4
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %65, %"class.std::__1::basic_string"* dereferenceable(24) %52) #15
  br label %66

66:                                               ; preds = %58, %64
  %67 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 5
  %68 = call zeroext i16 @_ZNK3net8DnsQuery5qtypeEv(%"class.net::DnsQuery"* %2) #15
  %69 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 5, i32 0, i32 1
  %70 = load i16*, i16** %69, align 8
  %71 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %72 = load i16*, i16** %71, align 8
  %73 = icmp ult i16* %70, %72
  %74 = ptrtoint i16* %72 to i64
  br i1 %73, label %75, label %79

75:                                               ; preds = %66
  store i16 %68, i16* %70, align 2
  %76 = getelementptr inbounds i16, i16* %70, i64 1
  %77 = ptrtoint i16* %76 to i64
  %78 = bitcast i16** %69 to i64*
  store i64 %77, i64* %78, align 8
  br label %132

79:                                               ; preds = %66
  %80 = ptrtoint i16* %70 to i64
  %81 = bitcast i16** %69 to i64*
  %82 = bitcast %"class.std::__1::vector.7"* %67 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = sub i64 %80, %83
  %85 = ashr exact i64 %84, 1
  %86 = add nsw i64 %85, 1
  %87 = icmp slt i64 %86, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %79
  %89 = bitcast %"class.std::__1::vector.7"* %67 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %89) #17
  unreachable

90:                                               ; preds = %79
  %91 = bitcast i16** %71 to i64*
  %92 = sub i64 %74, %83
  %93 = ashr exact i64 %92, 1
  %94 = icmp ult i64 %93, 4611686018427387903
  %95 = icmp ult i64 %92, %86
  %96 = select i1 %95, i64 %86, i64 %92
  %97 = select i1 %94, i64 %96, i64 9223372036854775807
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %106, label %99

99:                                               ; preds = %90
  %100 = icmp slt i64 %97, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %99
  call void @abort() #17
  unreachable

102:                                              ; preds = %99
  %103 = shl i64 %97, 1
  %104 = call i8* @_Znwm(i64 %103) #16
  %105 = bitcast i8* %104 to i16*
  br label %106

106:                                              ; preds = %102, %90
  %107 = phi i16* [ %105, %102 ], [ null, %90 ]
  %108 = getelementptr inbounds i16, i16* %107, i64 %85
  %109 = getelementptr inbounds i16, i16* %107, i64 %97
  %110 = ptrtoint i16* %109 to i64
  store i16 %68, i16* %108, align 2
  %111 = getelementptr inbounds i16, i16* %108, i64 1
  %112 = ptrtoint i16* %111 to i64
  %113 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %67, i64 0, i32 0, i32 0
  %114 = load i16*, i16** %113, align 8
  %115 = load i64, i64* %81, align 8
  %116 = ptrtoint i16* %114 to i64
  %117 = sub i64 %115, %116
  %118 = ashr exact i64 %117, 1
  %119 = sub nsw i64 0, %118
  %120 = getelementptr inbounds i16, i16* %108, i64 %119
  %121 = ptrtoint i16* %120 to i64
  %122 = icmp sgt i64 %117, 0
  br i1 %122, label %123, label %127

123:                                              ; preds = %106
  %124 = bitcast i16* %120 to i8*
  %125 = bitcast i16* %114 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %124, i8* align 2 %125, i64 %117, i1 false) #15
  %126 = load i16*, i16** %113, align 8
  br label %127

127:                                              ; preds = %123, %106
  %128 = phi i16* [ %114, %106 ], [ %126, %123 ]
  store i64 %121, i64* %82, align 8
  store i64 %112, i64* %81, align 8
  store i64 %110, i64* %91, align 8
  %129 = icmp eq i16* %128, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %127
  %131 = bitcast i16* %128 to i8*
  call void @_ZdlPv(i8* %131) #16
  br label %132

132:                                              ; preds = %130, %127, %75
  %133 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %16, align 8
  %134 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %133, i64 0, i32 2
  %135 = bitcast i8** %134 to %"struct.net::dns_protocol::Header"**
  %136 = load %"struct.net::dns_protocol::Header"*, %"struct.net::dns_protocol::Header"** %135, align 8
  %137 = getelementptr inbounds %"struct.net::dns_protocol::Header", %"struct.net::dns_protocol::Header"* %136, i64 0, i32 3
  %138 = load i16, i16* %137, align 1
  %139 = call i16 @llvm.bswap.i16(i16 %138) #15
  %140 = zext i16 %139 to i64
  %141 = getelementptr inbounds %"struct.net::dns_protocol::Header", %"struct.net::dns_protocol::Header"* %136, i64 0, i32 4
  %142 = load i16, i16* %141, align 1
  %143 = call i16 @llvm.bswap.i16(i16 %142) #15
  %144 = zext i16 %143 to i64
  %145 = add nuw nsw i64 %144, %140
  %146 = getelementptr inbounds %"struct.net::dns_protocol::Header", %"struct.net::dns_protocol::Header"* %136, i64 0, i32 5
  %147 = load i16, i16* %146, align 1
  %148 = call i16 @llvm.bswap.i16(i16 %147) #15
  %149 = zext i16 %148 to i64
  %150 = add nuw nsw i64 %145, %149
  %151 = bitcast %"struct.net::dns_protocol::Header"* %136 to i8*
  %152 = getelementptr inbounds i8, i8* %151, i64 %8
  %153 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 2, i32 0
  %154 = bitcast i8** %153 to %"struct.net::dns_protocol::Header"**
  store %"struct.net::dns_protocol::Header"* %136, %"struct.net::dns_protocol::Header"** %154, align 8
  %155 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 2, i32 1
  store i64 %1, i64* %155, align 8
  %156 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 2, i32 2
  store i64 %150, i64* %156, align 8
  %157 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 2, i32 3
  store i64 0, i64* %157, align 8
  %158 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 2, i32 4
  store i8* %152, i8** %158, align 8
  %159 = load i8, i8* %45, align 8, !range !2
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %171, label %161

161:                                              ; preds = %132
  %162 = getelementptr inbounds %"class.absl::optional.28", %"class.absl::optional.28"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %163 = bitcast %"class.std::__1::basic_string"* %162 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %164 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %163, i64 0, i32 1, i32 0
  %165 = load i8, i8* %164, align 1
  %166 = icmp slt i8 %165, 0
  br i1 %166, label %167, label %170

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %162, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i8*, i8** %168, align 8
  call void @_ZdlPv(i8* %169) #16
  br label %170

170:                                              ; preds = %167, %161
  store i8 0, i8* %45, align 8
  br label %171

171:                                              ; preds = %44, %132, %170
  %172 = phi i1 [ true, %132 ], [ true, %170 ], [ false, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %45) #15
  br label %173

173:                                              ; preds = %39, %35, %26, %14, %3, %10, %171
  %174 = phi i1 [ %172, %171 ], [ false, %10 ], [ false, %3 ], [ false, %14 ], [ false, %26 ], [ false, %35 ], [ false, %39 ]
  ret i1 %174
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net11DnsResponse21InitParseWithoutQueryEm(%"class.net::DnsResponse"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = icmp ult i64 %1, 12
  br i1 %4, label %170, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %170, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 3
  store i8 1, i8* %10, align 8
  %11 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 0, i32 0
  %12 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %11, align 8
  %13 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %12, i64 0, i32 2
  %14 = bitcast i8** %13 to %"struct.net::dns_protocol::Header"**
  %15 = load %"struct.net::dns_protocol::Header"*, %"struct.net::dns_protocol::Header"** %14, align 8
  %16 = getelementptr inbounds %"struct.net::dns_protocol::Header", %"struct.net::dns_protocol::Header"* %15, i64 0, i32 1
  %17 = load i16, i16* %16, align 1
  %18 = trunc i16 %17 to i8
  %19 = icmp sgt i8 %18, -1
  br i1 %19, label %170, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"struct.net::dns_protocol::Header", %"struct.net::dns_protocol::Header"* %15, i64 0, i32 3
  %22 = load i16, i16* %21, align 1
  %23 = tail call i16 @llvm.bswap.i16(i16 %22) #15
  %24 = zext i16 %23 to i64
  %25 = getelementptr inbounds %"struct.net::dns_protocol::Header", %"struct.net::dns_protocol::Header"* %15, i64 0, i32 4
  %26 = load i16, i16* %25, align 1
  %27 = tail call i16 @llvm.bswap.i16(i16 %26) #15
  %28 = zext i16 %27 to i64
  %29 = add nuw nsw i64 %28, %24
  %30 = getelementptr inbounds %"struct.net::dns_protocol::Header", %"struct.net::dns_protocol::Header"* %15, i64 0, i32 5
  %31 = load i16, i16* %30, align 1
  %32 = tail call i16 @llvm.bswap.i16(i16 %31) #15
  %33 = zext i16 %32 to i64
  %34 = add nuw nsw i64 %29, %33
  %35 = getelementptr inbounds %"struct.net::dns_protocol::Header", %"struct.net::dns_protocol::Header"* %15, i64 1
  %36 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 2
  %37 = bitcast %"class.net::DnsRecordParser"* %36 to i8*
  %38 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 2, i32 0
  %39 = bitcast i8** %38 to %"struct.net::dns_protocol::Header"**
  store %"struct.net::dns_protocol::Header"* %15, %"struct.net::dns_protocol::Header"** %39, align 8
  %40 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 2, i32 1
  store i64 %1, i64* %40, align 8
  %41 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 2, i32 2
  store i64 %34, i64* %41, align 8
  %42 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 2, i32 3
  store i64 0, i64* %42, align 8
  %43 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 2, i32 4
  %44 = bitcast i8** %43 to %"struct.net::dns_protocol::Header"**
  store %"struct.net::dns_protocol::Header"* %35, %"struct.net::dns_protocol::Header"** %44, align 8
  %45 = load %"struct.net::dns_protocol::Header"*, %"struct.net::dns_protocol::Header"** %14, align 8
  %46 = getelementptr inbounds %"struct.net::dns_protocol::Header", %"struct.net::dns_protocol::Header"* %45, i64 0, i32 2
  %47 = load i16, i16* %46, align 1
  %48 = tail call i16 @llvm.bswap.i16(i16 %47) #15
  %49 = zext i16 %48 to i32
  %50 = icmp eq i16 %47, 0
  br i1 %50, label %170, label %51

51:                                               ; preds = %20
  %52 = bitcast %"struct.net::dns_protocol::Header"* %35 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.net::DnsRecordParser", %"class.net::DnsRecordParser"* %36, i64 0, i32 0
  %56 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 4, i32 0, i32 1
  %57 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %58 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 4
  %59 = bitcast %"class.std::__1::basic_string"** %56 to i64*
  %60 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 5
  %61 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 5, i32 0, i32 1
  %62 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %63 = bitcast i16** %61 to i64*
  %64 = bitcast %"class.std::__1::vector.7"* %60 to i64*
  %65 = bitcast i16** %62 to i64*
  %66 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %60, i64 0, i32 0, i32 0
  %67 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  br label %73

69:                                               ; preds = %167
  %70 = icmp ult i32 %169, %49
  br i1 %70, label %71, label %170

71:                                               ; preds = %69
  %72 = load i8*, i8** %43, align 8
  br label %73

73:                                               ; preds = %71, %51
  %74 = phi i8* [ %52, %51 ], [ %72, %71 ]
  %75 = phi i32 [ 0, %51 ], [ %169, %71 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 24, i1 false) #15
  %76 = call i32 @_ZNK3net15DnsRecordParser8ReadNameEPKvPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.net::DnsRecordParser"* %36, i8* %74, %"class.std::__1::basic_string"* nonnull %3) #15
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %87, label %78

78:                                               ; preds = %73
  %79 = zext i32 %76 to i64
  %80 = load i8*, i8** %43, align 8
  %81 = getelementptr inbounds i8, i8* %80, i64 %79
  %82 = getelementptr inbounds i8, i8* %81, i64 4
  %83 = load i8*, i8** %55, align 8
  %84 = load i64, i64* %40, align 8
  %85 = getelementptr inbounds i8, i8* %83, i64 %84
  %86 = icmp ugt i8* %82, %85
  br i1 %86, label %87, label %88

87:                                               ; preds = %73, %78
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 40, i1 false)
  br label %161

88:                                               ; preds = %78
  %89 = load i8, i8* %81, align 1
  %90 = zext i8 %89 to i16
  %91 = shl nuw i16 %90, 8
  %92 = getelementptr inbounds i8, i8* %81, i64 1
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i16
  %95 = or i16 %91, %94
  store i8* %82, i8** %43, align 8
  %96 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %56, align 8
  %97 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %57, align 8
  %98 = icmp ult %"class.std::__1::basic_string"* %96, %97
  br i1 %98, label %99, label %103

99:                                               ; preds = %88
  %100 = bitcast %"class.std::__1::basic_string"* %96 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* nonnull align 8 %53, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 24, i1 false) #15
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %96, i64 1
  %102 = ptrtoint %"class.std::__1::basic_string"* %101 to i64
  store i64 %102, i64* %59, align 8
  br label %104

103:                                              ; preds = %88
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %58, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #15
  br label %104

104:                                              ; preds = %99, %103
  %105 = load i16*, i16** %61, align 8
  %106 = load i16*, i16** %62, align 8
  %107 = icmp eq i16* %105, %106
  %108 = ptrtoint i16* %106 to i64
  br i1 %107, label %112, label %109

109:                                              ; preds = %104
  store i16 %95, i16* %105, align 2
  %110 = getelementptr inbounds i16, i16* %105, i64 1
  %111 = ptrtoint i16* %110 to i64
  store i64 %111, i64* %63, align 8
  br label %161

112:                                              ; preds = %104
  %113 = ptrtoint i16* %105 to i64
  %114 = load i64, i64* %64, align 8
  %115 = sub i64 %113, %114
  %116 = ashr exact i64 %115, 1
  %117 = add nsw i64 %116, 1
  %118 = icmp slt i64 %117, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %112
  %120 = bitcast %"class.std::__1::vector.7"* %60 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %120) #17
  unreachable

121:                                              ; preds = %112
  %122 = sub i64 %108, %114
  %123 = ashr exact i64 %122, 1
  %124 = icmp ult i64 %123, 4611686018427387903
  %125 = icmp ult i64 %122, %117
  %126 = select i1 %125, i64 %117, i64 %122
  %127 = select i1 %124, i64 %126, i64 9223372036854775807
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %136, label %129

129:                                              ; preds = %121
  %130 = icmp slt i64 %127, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %129
  call void @abort() #17
  unreachable

132:                                              ; preds = %129
  %133 = shl i64 %127, 1
  %134 = call i8* @_Znwm(i64 %133) #16
  %135 = bitcast i8* %134 to i16*
  br label %136

136:                                              ; preds = %132, %121
  %137 = phi i16* [ %135, %132 ], [ null, %121 ]
  %138 = getelementptr inbounds i16, i16* %137, i64 %116
  %139 = getelementptr inbounds i16, i16* %137, i64 %127
  %140 = ptrtoint i16* %139 to i64
  store i16 %95, i16* %138, align 2
  %141 = getelementptr inbounds i16, i16* %138, i64 1
  %142 = ptrtoint i16* %141 to i64
  %143 = load i16*, i16** %66, align 8
  %144 = load i64, i64* %63, align 8
  %145 = ptrtoint i16* %143 to i64
  %146 = sub i64 %144, %145
  %147 = ashr exact i64 %146, 1
  %148 = sub nsw i64 0, %147
  %149 = getelementptr inbounds i16, i16* %138, i64 %148
  %150 = ptrtoint i16* %149 to i64
  %151 = icmp sgt i64 %146, 0
  br i1 %151, label %152, label %156

152:                                              ; preds = %136
  %153 = bitcast i16* %149 to i8*
  %154 = bitcast i16* %143 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %153, i8* align 2 %154, i64 %146, i1 false) #15
  %155 = load i16*, i16** %66, align 8
  br label %156

156:                                              ; preds = %152, %136
  %157 = phi i16* [ %143, %136 ], [ %155, %152 ]
  store i64 %150, i64* %64, align 8
  store i64 %142, i64* %63, align 8
  store i64 %140, i64* %65, align 8
  %158 = icmp eq i16* %157, null
  br i1 %158, label %161, label %159

159:                                              ; preds = %156
  %160 = bitcast i16* %157 to i8*
  call void @_ZdlPv(i8* %160) #16
  br label %161

161:                                              ; preds = %159, %156, %109, %87
  %162 = phi i32 [ 1, %87 ], [ 0, %109 ], [ 0, %156 ], [ 0, %159 ]
  %163 = load i8, i8* %68, align 1
  %164 = icmp slt i8 %163, 0
  br i1 %164, label %165, label %167

165:                                              ; preds = %161
  %166 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %166) #16
  br label %167

167:                                              ; preds = %161, %165
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #15
  %168 = icmp eq i32 %162, 0
  %169 = add nuw nsw i32 %75, 1
  br i1 %168, label %69, label %170

170:                                              ; preds = %69, %167, %20, %9, %2, %5
  %171 = phi i1 [ false, %5 ], [ false, %2 ], [ false, %9 ], [ true, %20 ], [ true, %69 ], [ false, %167 ]
  ret i1 %171
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11DnsResponseC2Ev(%"class.net::DnsResponse"* nocapture) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #16
  %3 = bitcast i8* %2 to %"class.net::IOBuffer"*
  tail call void @_ZN3net8IOBufferC1Em(%"class.net::IOBuffer"* nonnull %3, i64 513) #15
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to i32*
  %6 = atomicrmw add i32* %5, i32 1 monotonic
  %7 = bitcast %"class.net::DnsResponse"* %0 to i8**
  store i8* %2, i8** %7, align 8
  %8 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 1
  store i64 513, i64* %8, align 8
  %9 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 4
  %11 = bitcast %"class.net::DnsRecordParser"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 41, i1 false)
  %12 = bitcast %"class.std::__1::vector"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11DnsResponseC2E13scoped_refptrINS_8IOBufferEEm(%"class.net::DnsResponse"* nocapture, %"class.net::IOBuffer"*, i64) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.net::IOBuffer"* %1 to i64
  %5 = bitcast %"class.net::DnsResponse"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 1
  store i64 %2, i64* %6, align 8
  %7 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 4
  %9 = bitcast %"class.net::DnsRecordParser"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 41, i1 false)
  %10 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11DnsResponseC2Em(%"class.net::DnsResponse"* nocapture, i64) unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 24) #16
  %4 = bitcast i8* %3 to %"class.net::IOBuffer"*
  tail call void @_ZN3net8IOBufferC1Em(%"class.net::IOBuffer"* nonnull %4, i64 %1) #15
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i32*
  %7 = atomicrmw add i32* %6, i32 1 monotonic
  %8 = bitcast %"class.net::DnsResponse"* %0 to i8**
  store i8* %3, i8** %8, align 8
  %9 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 1
  store i64 %1, i64* %9, align 8
  %10 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 4
  %12 = bitcast %"class.net::DnsRecordParser"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 41, i1 false)
  %13 = bitcast %"class.std::__1::vector"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11DnsResponseC2EPKvmm(%"class.net::DnsResponse"* nocapture, i8* nocapture readonly, i64, i64) unnamed_addr #0 align 2 {
  %5 = tail call i8* @_Znwm(i64 32) #16
  %6 = bitcast i8* %5 to %"class.net::IOBufferWithSize"*
  tail call void @_ZN3net16IOBufferWithSizeC1Em(%"class.net::IOBufferWithSize"* nonnull %6, i64 %2) #15
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  %10 = ptrtoint i8* %5 to i64
  %11 = bitcast %"class.net::DnsResponse"* %0 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 1
  store i64 %2, i64* %12, align 8
  %13 = getelementptr inbounds i8, i8* %5, i64 16
  %14 = bitcast i8* %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 2, i32 0
  store i8* %15, i8** %16, align 8
  %17 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 2, i32 1
  store i64 %2, i64* %17, align 8
  %18 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 2, i32 2
  %19 = bitcast i64* %18 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %19, align 8
  %20 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 2, i32 4
  %21 = getelementptr inbounds i8, i8* %15, i64 %3
  store i8* %21, i8** %20, align 8
  %22 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 3
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 4
  %24 = bitcast %"class.std::__1::vector"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 48, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %15, i8* align 1 %1, i64 %2, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11DnsResponseC2EOS0_(%"class.net::DnsResponse"* nocapture, %"class.net::DnsResponse"* nocapture dereferenceable(112)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %1, i64 0, i32 0, i32 0
  %4 = bitcast %"class.net::DnsResponse"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.net::DnsResponse"* %0 to i64*
  store i64 %5, i64* %6, align 8
  store %"class.net::IOBuffer"* null, %"class.net::IOBuffer"** %3, align 8
  %7 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %1, i64 0, i32 1
  %9 = bitcast i64* %7 to i8*
  %10 = bitcast i64* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 49, i1 false)
  %11 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 4
  %12 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %1, i64 0, i32 4
  %13 = bitcast %"class.std::__1::vector"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #15
  %14 = bitcast %"class.std::__1::vector"* %12 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector"* %11 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %1, i64 0, i32 4, i32 0, i32 1
  %18 = bitcast %"class.std::__1::basic_string"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 4, i32 0, i32 1
  %21 = bitcast %"class.std::__1::basic_string"** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %1, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"class.std::__1::basic_string"** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %26 = bitcast %"class.std::__1::basic_string"** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast %"class.std::__1::vector"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #15
  %28 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 5
  %29 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %1, i64 0, i32 5
  %30 = bitcast %"class.std::__1::vector.7"* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #15
  %31 = bitcast %"class.std::__1::vector.7"* %29 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::vector.7"* %28 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %1, i64 0, i32 5, i32 0, i32 1
  %35 = bitcast i16** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 5, i32 0, i32 1
  %38 = bitcast i16** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %1, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %40 = bitcast i16** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %43 = bitcast i16** %42 to i64*
  store i64 %41, i64* %43, align 8
  %44 = bitcast %"class.std::__1::vector.7"* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(112) %"class.net::DnsResponse"* @_ZN3net11DnsResponseaSEOS0_(%"class.net::DnsResponse"* returned, %"class.net::DnsResponse"* nocapture dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %1, i64 0, i32 0, i32 0
  %4 = bitcast %"class.net::DnsResponse"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %"class.net::IOBuffer"* null, %"class.net::IOBuffer"** %3, align 8
  %6 = bitcast %"class.net::DnsResponse"* %0 to i64*
  %7 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %7, align 8
  store i64 %5, i64* %6, align 8
  %9 = icmp eq %"class.net::IOBuffer"* %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %8, i64 0, i32 1
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %22

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %11, i64 -2
  %17 = bitcast %"class.base::RefCountedThreadSafe"* %16 to %"class.net::IOBuffer"*
  %18 = bitcast %"class.base::RefCountedThreadSafe"* %16 to void (%"class.net::IOBuffer"*)***
  %19 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %19, i64 1
  %21 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %20, align 8
  tail call void %21(%"class.net::IOBuffer"* nonnull %17) #15
  br label %22

22:                                               ; preds = %2, %10, %15
  %23 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 1
  %24 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %1, i64 0, i32 1
  %25 = bitcast i64* %23 to i8*
  %26 = bitcast i64* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 49, i1 false)
  %27 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 4
  %28 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %1, i64 0, i32 4
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %27, i64 0, i32 0, i32 0
  %30 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8
  %31 = icmp eq %"class.std::__1::basic_string"* %30, null
  br i1 %31, label %55, label %32

32:                                               ; preds = %22
  %33 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  %34 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 4, i32 0, i32 1
  %35 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %34, align 8
  %36 = icmp eq %"class.std::__1::basic_string"* %35, %30
  br i1 %36, label %52, label %37

37:                                               ; preds = %32, %47
  %38 = phi %"class.std::__1::basic_string"* [ %39, %47 ], [ %35, %32 ]
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 -1
  %40 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  tail call void @_ZdlPv(i8* %46) #16
  br label %47

47:                                               ; preds = %44, %37
  %48 = icmp eq %"class.std::__1::basic_string"* %39, %30
  br i1 %48, label %49, label %37

49:                                               ; preds = %47
  %50 = bitcast %"class.std::__1::vector"* %27 to i8**
  %51 = load i8*, i8** %50, align 8
  br label %52

52:                                               ; preds = %49, %32
  %53 = phi i8* [ %51, %49 ], [ %33, %32 ]
  store %"class.std::__1::basic_string"* %30, %"class.std::__1::basic_string"** %34, align 8
  tail call void @_ZdlPv(i8* %53) #16
  %54 = bitcast %"class.std::__1::vector"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 24, i1 false) #15
  br label %55

55:                                               ; preds = %22, %52
  %56 = bitcast %"class.std::__1::vector"* %28 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.std::__1::vector"* %27 to i64*
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %1, i64 0, i32 4, i32 0, i32 1
  %60 = bitcast %"class.std::__1::basic_string"** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 4, i32 0, i32 1
  %63 = bitcast %"class.std::__1::basic_string"** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %1, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %65 = bitcast %"class.std::__1::basic_string"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %68 = bitcast %"class.std::__1::basic_string"** %67 to i64*
  store i64 %66, i64* %68, align 8
  %69 = bitcast %"class.std::__1::vector"* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #15
  %70 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 5
  %71 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %1, i64 0, i32 5
  %72 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %70, i64 0, i32 0, i32 0
  %73 = load i16*, i16** %72, align 8
  %74 = icmp eq i16* %73, null
  br i1 %74, label %81, label %75

75:                                               ; preds = %55
  %76 = ptrtoint i16* %73 to i64
  %77 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 5, i32 0, i32 1
  %78 = bitcast i16** %77 to i64*
  store i64 %76, i64* %78, align 8
  %79 = bitcast i16* %73 to i8*
  tail call void @_ZdlPv(i8* %79) #16
  %80 = bitcast %"class.std::__1::vector.7"* %70 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 24, i1 false) #15
  br label %81

81:                                               ; preds = %55, %75
  %82 = bitcast %"class.std::__1::vector.7"* %71 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.std::__1::vector.7"* %70 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %1, i64 0, i32 5, i32 0, i32 1
  %86 = bitcast i16** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 5, i32 0, i32 1
  %89 = bitcast i16** %88 to i64*
  store i64 %87, i64* %89, align 8
  %90 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %1, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %91 = bitcast i16** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %94 = bitcast i16** %93 to i64*
  store i64 %92, i64* %94, align 8
  %95 = bitcast %"class.std::__1::vector.7"* %71 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 24, i1 false) #15
  ret %"class.net::DnsResponse"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11DnsResponseD2Ev(%"class.net::DnsResponse"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load i16*, i16** %2, align 8
  %4 = icmp eq i16* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i16* %3 to i64
  %7 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 5, i32 0, i32 1
  %8 = bitcast i16** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i16* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #16
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 4
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %14 = icmp eq %"class.std::__1::basic_string"* %13, null
  br i1 %14, label %37, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %17 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 4, i32 0, i32 1
  %18 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %17, align 8
  %19 = icmp eq %"class.std::__1::basic_string"* %18, %13
  br i1 %19, label %35, label %20

20:                                               ; preds = %15, %30
  %21 = phi %"class.std::__1::basic_string"* [ %22, %30 ], [ %18, %15 ]
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 -1
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZdlPv(i8* %29) #16
  br label %30

30:                                               ; preds = %27, %20
  %31 = icmp eq %"class.std::__1::basic_string"* %22, %13
  br i1 %31, label %32, label %20

32:                                               ; preds = %30
  %33 = bitcast %"class.std::__1::vector"* %11 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %15
  %36 = phi i8* [ %34, %32 ], [ %16, %15 ]
  store %"class.std::__1::basic_string"* %13, %"class.std::__1::basic_string"** %17, align 8
  tail call void @_ZdlPv(i8* %36) #16
  br label %37

37:                                               ; preds = %10, %35
  %38 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 0, i32 0
  %39 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %38, align 8
  %40 = icmp eq %"class.net::IOBuffer"* %39, null
  br i1 %40, label %53, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %39, i64 0, i32 1
  %43 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw sub i32* %43, i32 1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %53

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %42, i64 -2
  %48 = bitcast %"class.base::RefCountedThreadSafe"* %47 to %"class.net::IOBuffer"*
  %49 = bitcast %"class.base::RefCountedThreadSafe"* %47 to void (%"class.net::IOBuffer"*)***
  %50 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %50, i64 1
  %52 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %51, align 8
  tail call void %52(%"class.net::IOBuffer"* nonnull %48) #15
  br label %53

53:                                               ; preds = %37, %41, %46
  ret void
}

declare { i8*, i64 } @_ZNK3net8DnsQuery8questionEv(%"class.net::DnsQuery"*) local_unnamed_addr #5

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK3net11DnsResponse2idEv(%"class.net::DnsResponse"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 0, i32 0
  %7 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %6, align 8
  %8 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %7, i64 0, i32 2
  %9 = bitcast i8** %8 to %"struct.net::dns_protocol::Header"**
  %10 = load %"struct.net::dns_protocol::Header"*, %"struct.net::dns_protocol::Header"** %9, align 8
  %11 = getelementptr inbounds %"struct.net::dns_protocol::Header", %"struct.net::dns_protocol::Header"* %10, i64 0, i32 0
  %12 = load i16, i16* %11, align 1
  %13 = tail call i16 @llvm.bswap.i16(i16 %12) #15
  %14 = zext i16 %13 to i32
  %15 = shl nuw i32 %14, 16
  br label %16

16:                                               ; preds = %1, %5
  %17 = phi i32 [ 1, %5 ], [ 0, %1 ]
  %18 = phi i32 [ %15, %5 ], [ 0, %1 ]
  %19 = or i32 %18, %17
  ret i32 %19
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"struct.net::dns_protocol::Header"* @_ZNK3net11DnsResponse6headerEv(%"class.net::DnsResponse"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %2, align 8
  %4 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %3, i64 0, i32 2
  %5 = bitcast i8** %4 to %"struct.net::dns_protocol::Header"**
  %6 = load %"struct.net::dns_protocol::Header"*, %"struct.net::dns_protocol::Header"** %5, align 8
  ret %"struct.net::dns_protocol::Header"* %6
}

declare void @_ZN3net17DnsDomainToStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.absl::optional.28"* sret, i8*, i64, i1 zeroext) local_unnamed_addr #5

declare { i8*, i64 } @_ZNK3net8DnsQuery5qnameEv(%"class.net::DnsQuery"*) local_unnamed_addr #5

declare zeroext i16 @_ZNK3net8DnsQuery5qtypeEv(%"class.net::DnsQuery"*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net11DnsResponse7IsValidEv(%"class.net::DnsResponse"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 2, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp ne i8* %3, null
  ret i1 %4
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i16 @_ZNK3net11DnsResponse5flagsEv(%"class.net::DnsResponse"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %2, align 8
  %4 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %3, i64 0, i32 2
  %5 = bitcast i8** %4 to %"struct.net::dns_protocol::Header"**
  %6 = load %"struct.net::dns_protocol::Header"*, %"struct.net::dns_protocol::Header"** %5, align 8
  %7 = getelementptr inbounds %"struct.net::dns_protocol::Header", %"struct.net::dns_protocol::Header"* %6, i64 0, i32 1
  %8 = load i16, i16* %7, align 1
  %9 = and i16 %8, -3841
  %10 = tail call i16 @llvm.bswap.i16(i16 %9)
  ret i16 %10
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZNK3net11DnsResponse5rcodeEv(%"class.net::DnsResponse"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %2, align 8
  %4 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %3, i64 0, i32 2
  %5 = bitcast i8** %4 to %"struct.net::dns_protocol::Header"**
  %6 = load %"struct.net::dns_protocol::Header"*, %"struct.net::dns_protocol::Header"** %5, align 8
  %7 = getelementptr inbounds %"struct.net::dns_protocol::Header", %"struct.net::dns_protocol::Header"* %6, i64 0, i32 1
  %8 = load i16, i16* %7, align 1
  %9 = lshr i16 %8, 8
  %10 = trunc i16 %9 to i8
  %11 = and i8 %10, 15
  ret i8 %11
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK3net11DnsResponse14question_countEv(%"class.net::DnsResponse"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %2, align 8
  %4 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %3, i64 0, i32 2
  %5 = bitcast i8** %4 to %"struct.net::dns_protocol::Header"**
  %6 = load %"struct.net::dns_protocol::Header"*, %"struct.net::dns_protocol::Header"** %5, align 8
  %7 = getelementptr inbounds %"struct.net::dns_protocol::Header", %"struct.net::dns_protocol::Header"* %6, i64 0, i32 2
  %8 = load i16, i16* %7, align 1
  %9 = tail call i16 @llvm.bswap.i16(i16 %8) #15
  %10 = zext i16 %9 to i32
  ret i32 %10
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK3net11DnsResponse12answer_countEv(%"class.net::DnsResponse"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %2, align 8
  %4 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %3, i64 0, i32 2
  %5 = bitcast i8** %4 to %"struct.net::dns_protocol::Header"**
  %6 = load %"struct.net::dns_protocol::Header"*, %"struct.net::dns_protocol::Header"** %5, align 8
  %7 = getelementptr inbounds %"struct.net::dns_protocol::Header", %"struct.net::dns_protocol::Header"* %6, i64 0, i32 3
  %8 = load i16, i16* %7, align 1
  %9 = tail call i16 @llvm.bswap.i16(i16 %8) #15
  %10 = zext i16 %9 to i32
  ret i32 %10
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK3net11DnsResponse15authority_countEv(%"class.net::DnsResponse"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %2, align 8
  %4 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %3, i64 0, i32 2
  %5 = bitcast i8** %4 to %"struct.net::dns_protocol::Header"**
  %6 = load %"struct.net::dns_protocol::Header"*, %"struct.net::dns_protocol::Header"** %5, align 8
  %7 = getelementptr inbounds %"struct.net::dns_protocol::Header", %"struct.net::dns_protocol::Header"* %6, i64 0, i32 4
  %8 = load i16, i16* %7, align 1
  %9 = tail call i16 @llvm.bswap.i16(i16 %8) #15
  %10 = zext i16 %9 to i32
  ret i32 %10
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK3net11DnsResponse23additional_answer_countEv(%"class.net::DnsResponse"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %2, align 8
  %4 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %3, i64 0, i32 2
  %5 = bitcast i8** %4 to %"struct.net::dns_protocol::Header"**
  %6 = load %"struct.net::dns_protocol::Header"*, %"struct.net::dns_protocol::Header"** %5, align 8
  %7 = getelementptr inbounds %"struct.net::dns_protocol::Header", %"struct.net::dns_protocol::Header"* %6, i64 0, i32 5
  %8 = load i16, i16* %7, align 1
  %9 = tail call i16 @llvm.bswap.i16(i16 %8) #15
  %10 = zext i16 %9 to i32
  ret i32 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i16 @_ZNK3net11DnsResponse14GetSingleQTypeEv(%"class.net::DnsResponse"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load i16*, i16** %2, align 8
  %4 = load i16, i16* %3, align 2
  ret i16 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i8*, i64 } @_ZNK3net11DnsResponse19GetSingleDottedNameEv(%"class.net::DnsResponse"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %2, align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %11 = select i1 %7, i8* %9, i8* %10
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %6 to i64
  %15 = select i1 %7, i64 %13, i64 %14
  %16 = insertvalue { i8*, i64 } undef, i8* %11, 0
  %17 = insertvalue { i8*, i64 } %16, i64 %15, 1
  ret { i8*, i64 } %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net11DnsResponse6ParserEv(%"class.net::DnsRecordParser"* noalias nocapture sret, %"class.net::DnsResponse"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %1, i64 0, i32 2
  %4 = bitcast %"class.net::DnsRecordParser"* %0 to i8*
  %5 = bitcast %"class.net::DnsRecordParser"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 40, i1 false)
  ret void
}

declare zeroext i1 @_ZN4base15BigEndianWriter8WriteU16Et(%"class.base::BigEndianWriter"*, i16 zeroext) local_unnamed_addr #5

declare zeroext i1 @_ZN4base15BigEndianWriter10WriteBytesEPKvm(%"class.base::BigEndianWriter"*, i8*, i64) local_unnamed_addr #5

declare zeroext i1 @_ZN3net11RecordRdata12HasValidSizeERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEt(%"class.base::BasicStringPiece"* dereferenceable(16), i16 zeroext) local_unnamed_addr #5

declare zeroext i1 @_ZN3net16DNSDomainFromDotERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.std::__1::basic_string"*) local_unnamed_addr #5

declare zeroext i1 @_ZN4base15BigEndianWriter8WriteU32Ej(%"class.base::BigEndianWriter"*, i32) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #15
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #15
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #15
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #15
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #15
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #15
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #15
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #15
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #15
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #15
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #16
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #15
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #15
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #16
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #15
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #15
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

declare i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8*, i64) local_unnamed_addr #5

declare void @_ZN3net8IOBufferC1Em(%"class.net::IOBuffer"*, i64) unnamed_addr #5

declare void @_ZN3net16IOBufferWithSizeC1Em(%"class.net::IOBufferWithSize"*, i64) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #16
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #15
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #15
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #16
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #16
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind readonly }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
