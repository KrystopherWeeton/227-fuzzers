; ModuleID = '../../gpu/config/gpu_info_collector.cc'
source_filename = "../../gpu/config/gpu_info_collector.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.gl::EGLApi" = type { i32 (...)** }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.base::CommandLine" = type { %"class.std::__1::vector", %"class.std::__1::map", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"struct.gpu::GPUInfo" = type { %"class.base::TimeDelta", i8, i8, [6 x i8], %"struct.gpu::GPUInfo::GPUDevice", %"class.std::__1::vector.14", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, %"class.std::__1::basic_string", i8, i8, i8, i8, [4 x i8], %"struct.gpu::VideoDecodeAcceleratorCapabilities", %"class.std::__1::vector.28", i8, %"class.std::__1::vector.35", i8, i8, %"class.absl::optional" }
%"class.base::TimeDelta" = type { i64 }
%"struct.gpu::GPUInfo::GPUDevice" = type <{ i32, i32, i8, [7 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"struct.gpu::GPUInfo::GPUDevice"*, %"struct.gpu::GPUInfo::GPUDevice"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.gpu::GPUInfo::GPUDevice"* }
%"struct.gpu::VideoDecodeAcceleratorCapabilities" = type <{ %"class.std::__1::vector.21", i32, [4 x i8] }>
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"*, %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"*, %"class.std::__1::__compressed_pair.23" }
%"struct.gpu::VideoDecodeAcceleratorSupportedProfile" = type <{ i32, %"class.gfx::Size", %"class.gfx::Size", i8, [3 x i8] }>
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"* }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"*, %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"*, %"class.std::__1::__compressed_pair.30" }
%"struct.gpu::VideoEncodeAcceleratorSupportedProfile" = type { i32, %"class.gfx::Size", %"class.gfx::Size", i32, i32 }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"* }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"*, %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"*, %"class.std::__1::__compressed_pair.44" }
%"struct.gpu::ImageDecodeAcceleratorSupportedProfile" = type { i32, %"class.gfx::Size", %"class.gfx::Size", %"class.std::__1::vector.37" }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { i32*, i32*, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { i32* }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.49 }
%union.anon.49 = type { %"class.gpu::VulkanInfo" }
%"class.gpu::VulkanInfo" = type { i32, i32, %"class.std::__1::vector.50", %"class.std::__1::vector.57", %"class.std::__1::vector.64", %"class.std::__1::vector.71" }
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { %struct.VkExtensionProperties*, %struct.VkExtensionProperties*, %"class.std::__1::__compressed_pair.52" }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %struct.VkExtensionProperties* }
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { i8**, i8**, %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { i8** }
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { %struct.VkLayerProperties*, %struct.VkLayerProperties*, %"class.std::__1::__compressed_pair.66" }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %struct.VkLayerProperties* }
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.std::__1::__compressed_pair.80" }
%"class.gpu::VulkanPhysicalDeviceInfo" = type { %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceDriverProperties, %"class.std::__1::vector.50", %struct.VkPhysicalDeviceFeatures, i8, i8, %"class.std::__1::vector.73" }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.75" }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %struct.VkQueueFamilyProperties* }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.gpu::VulkanPhysicalDeviceInfo"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%class.sk_sp.302 = type { %struct.GrGLInterface* }
%struct.GrGLInterface = type { %class.SkRefCnt.base, %union.anon.195, %class.GrGLExtensions, %"struct.GrGLInterface::Functions" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.86" }
%"struct.std::__1::__atomic_base.86" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%union.anon.195 = type { i32 }
%class.GrGLExtensions = type { i8, %class.SkTArray }
%class.SkTArray = type { %class.SkString*, i64 }
%class.SkString = type { %class.sk_sp.196 }
%class.sk_sp.196 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.GrGLInterface::Functions" = type { %class.GrGLFunction, %class.GrGLFunction.197, %class.GrGLFunction.197, %class.GrGLFunction.198, %class.GrGLFunction.197, %class.GrGLFunction.198, %class.GrGLFunction.199, %class.GrGLFunction.197, %class.GrGLFunction.197, %class.GrGLFunction.197, %class.GrGLFunction.197, %class.GrGLFunction, %class.GrGLFunction.200, %class.GrGLFunction.201, %class.GrGLFunction, %class.GrGLFunction.197, %class.GrGLFunction.202, %class.GrGLFunction.203, %class.GrGLFunction.204, %class.GrGLFunction.205, %class.GrGLFunction, %class.GrGLFunction.201, %class.GrGLFunction.206, %class.GrGLFunction.207, %class.GrGLFunction.208, %class.GrGLFunction.209, %class.GrGLFunction, %class.GrGLFunction.210, %class.GrGLFunction.211, %class.GrGLFunction.212, %class.GrGLFunction.213, %class.GrGLFunction.205, %class.GrGLFunction, %class.GrGLFunction.214, %class.GrGLFunction.214, %class.GrGLFunction.214, %class.GrGLFunction, %class.GrGLFunction.214, %class.GrGLFunction.214, %class.GrGLFunction.214, %class.GrGLFunction, %class.GrGLFunction.214, %class.GrGLFunction.214, %class.GrGLFunction.215, %class.GrGLFunction, %class.GrGLFunction, %class.GrGLFunction.216, %class.GrGLFunction.217, %class.GrGLFunction.218, %class.GrGLFunction, %class.GrGLFunction.214, %class.GrGLFunction.219, %class.GrGLFunction.220, %class.GrGLFunction.221, %class.GrGLFunction.222, %class.GrGLFunction, %class.GrGLFunction, %class.GrGLFunction, %class.GrGLFunction.200, %class.GrGLFunction, %class.GrGLFunction.200, %class.GrGLFunction.223, %class.GrGLFunction.224, %class.GrGLFunction.225, %class.GrGLFunction.226, %class.GrGLFunction, %class.GrGLFunction.227, %class.GrGLFunction.227, %class.GrGLFunction.227, %class.GrGLFunction, %class.GrGLFunction.227, %class.GrGLFunction.227, %class.GrGLFunction.227, %class.GrGLFunction.227, %class.GrGLFunction.227, %class.GrGLFunction.228, %class.GrGLFunction.213, %class.GrGLFunction.229, %class.GrGLFunction.230, %class.GrGLFunction.231, %class.GrGLFunction.232, %class.GrGLFunction.233, %class.GrGLFunction.228, %class.GrGLFunction.234, %class.GrGLFunction.228, %class.GrGLFunction.235, %class.GrGLFunction.236, %class.GrGLFunction.228, %class.GrGLFunction.228, %class.GrGLFunction.233, %class.GrGLFunction.228, %class.GrGLFunction.237, %class.GrGLFunction.238, %class.GrGLFunction.239, %class.GrGLFunction.240, %class.GrGLFunction.241, %class.GrGLFunction.242, %class.GrGLFunction, %class.GrGLFunction.223, %class.GrGLFunction.243, %class.GrGLFunction.244, %class.GrGLFunction.245, %class.GrGLFunction.212, %class.GrGLFunction.246, %class.GrGLFunction.247, %class.GrGLFunction, %class.GrGLFunction.248, %class.GrGLFunction.249, %class.GrGLFunction.250, %class.GrGLFunction.251, %class.GrGLFunction.251, %class.GrGLFunction.252, %class.GrGLFunction.253, %class.GrGLFunction.254, %class.GrGLFunction.255, %class.GrGLFunction.256, %class.GrGLFunction.257, %class.GrGLFunction.258, %class.GrGLFunction.259, %class.GrGLFunction.245, %class.GrGLFunction.245, %class.GrGLFunction.197, %class.GrGLFunction.200, %class.GrGLFunction.242, %class.GrGLFunction.197, %class.GrGLFunction, %class.GrGLFunction.260, %class.GrGLFunction.261, %class.GrGLFunction.262, %class.GrGLFunction.262, %class.GrGLFunction.262, %class.GrGLFunction.263, %class.GrGLFunction.200, %class.GrGLFunction.249, %class.GrGLFunction.264, %class.GrGLFunction.265, %class.GrGLFunction.197, %class.GrGLFunction.266, %class.GrGLFunction.267, %class.GrGLFunction.268, %class.GrGLFunction, %class.GrGLFunction.197, %class.GrGLFunction.269, %class.GrGLFunction.224, %class.GrGLFunction.246, %class.GrGLFunction.269, %class.GrGLFunction.270, %class.GrGLFunction.271, %class.GrGLFunction.272, %class.GrGLFunction.273, %class.GrGLFunction.249, %class.GrGLFunction.264, %class.GrGLFunction.271, %class.GrGLFunction.262, %class.GrGLFunction.200, %class.GrGLFunction.243, %class.GrGLFunction.274, %class.GrGLFunction.275, %class.GrGLFunction.276, %class.GrGLFunction.277, %class.GrGLFunction.278, %class.GrGLFunction.279, %class.GrGLFunction.276, %class.GrGLFunction.277, %class.GrGLFunction.280, %class.GrGLFunction.265, %class.GrGLFunction.276, %class.GrGLFunction.277, %class.GrGLFunction.281, %class.GrGLFunction.282, %class.GrGLFunction.276, %class.GrGLFunction.277, %class.GrGLFunction.283, %class.GrGLFunction.283, %class.GrGLFunction.283, %class.GrGLFunction.246, %class.GrGLFunction.284, %class.GrGLFunction.284, %class.GrGLFunction, %class.GrGLFunction.285, %class.GrGLFunction.286, %class.GrGLFunction.286, %class.GrGLFunction.286, %class.GrGLFunction.197, %class.GrGLFunction.287, %class.GrGLFunction.288, %class.GrGLFunction.265, %class.GrGLFunction, %class.GrGLFunction.289, %class.GrGLFunction.290, %class.GrGLFunction.291, %class.GrGLFunction.292, %class.GrGLFunction.293, %class.GrGLFunction.294, %class.GrGLFunction.295, %class.GrGLFunction.296, %class.GrGLFunction.297, %class.GrGLFunction.298, %class.GrGLFunction.299, %class.GrGLFunction.200, %class.GrGLFunction.299, %class.GrGLFunction.300, %class.GrGLFunction.301, %class.GrGLFunction }
%class.GrGLFunction.198 = type { void (i8*, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.199 = type { void (i8*, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.202 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.203 = type { void (i8*, i32, i64, i8*, i32)*, [4 x i64] }
%class.GrGLFunction.204 = type { void (i8*, i32, i64, i64, i8*)*, [4 x i64] }
%class.GrGLFunction.201 = type { void (i8*, float, float, float, float)*, [4 x i64] }
%class.GrGLFunction.206 = type { void (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.207 = type { void (i8*, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.208 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.209 = type { void (i8*, i8, i8, i8, i8)*, [4 x i64] }
%class.GrGLFunction.210 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.211 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.205 = type { i32 (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.215 = type { void (i8*, i8)*, [4 x i64] }
%class.GrGLFunction.216 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.217 = type { void (i8*, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.218 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.214 = type { void (i8*, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.219 = type { void (i8*, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.220 = type { void (i8*, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.221 = type { void (i8*, i32, i32, i32, i8*, i32)*, [4 x i64] }
%class.GrGLFunction.222 = type { void (i8*, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.225 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.226 = type { void (i8*, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.227 = type { void (i8*, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.213 = type { i32 (i8*)*, [4 x i64] }
%class.GrGLFunction.229 = type { void (i8*, i32, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.230 = type { void (i8*, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.231 = type { void (i8*, i32, i32, float*)*, [4 x i64] }
%class.GrGLFunction.232 = type { void (i8*, i32, i32, i32*, i32*, i8*)*, [4 x i64] }
%class.GrGLFunction.234 = type { void (i8*, i32, i32, i64*)*, [4 x i64] }
%class.GrGLFunction.235 = type { void (i8*, i32, i32, i64*)*, [4 x i64] }
%class.GrGLFunction.236 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.233 = type { void (i8*, i32, i32, i32*, i8*)*, [4 x i64] }
%class.GrGLFunction.228 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.237 = type { void (i8*, i32, i32, i32*, i32*)*, [4 x i64] }
%class.GrGLFunction.238 = type { i8* (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.239 = type { i8* (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.240 = type { void (i8*, i32, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.241 = type { i32 (i8*, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.223 = type { void (i8*, i32, i64, i64)*, [4 x i64] }
%class.GrGLFunction.244 = type { void (i8*, i32, i32, i32*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.212 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.247 = type { void (i8*, float)*, [4 x i64] }
%class.GrGLFunction.248 = type { void (i8*, i32, i32, i8*, i32)*, [4 x i64] }
%class.GrGLFunction.250 = type { i8* (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.251 = type { i8* (i8*, i32, i64, i64, i32)*, [4 x i64] }
%class.GrGLFunction.252 = type { i8* (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.253 = type { i8* (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.254 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.255 = type { void (i8*, i32, i32, i32, i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.256 = type { void (i8*, i32, i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.257 = type { void (i8*, i32, i32, i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.258 = type { void (i8*, i32, i32*, i32*, i32*, i32*, i32)*, [4 x i64] }
%class.GrGLFunction.259 = type { void (i8*, i32, i32*, i32, i8**, i32*, i32*, i32*, i32)*, [4 x i64] }
%class.GrGLFunction.245 = type { void (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.242 = type { void (i8*, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.260 = type { void (i8*, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.261 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.263 = type { void (i8*, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.266 = type { void (i8*, i32, i32, i8**, i32*)*, [4 x i64] }
%class.GrGLFunction.267 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.268 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.224 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.269 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.270 = type { void (i8*, i32, i32, i32, i64, i64)*, [4 x i64] }
%class.GrGLFunction.272 = type { void (i8*, i32, i32, float)*, [4 x i64] }
%class.GrGLFunction.273 = type { void (i8*, i32, i32, float*)*, [4 x i64] }
%class.GrGLFunction.249 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.264 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.271 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.262 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.243 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.274 = type { void (i8*, i32, float)*, [4 x i64] }
%class.GrGLFunction.275 = type { void (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.278 = type { void (i8*, i32, float, float)*, [4 x i64] }
%class.GrGLFunction.279 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.280 = type { void (i8*, i32, float, float, float)*, [4 x i64] }
%class.GrGLFunction.281 = type { void (i8*, i32, float, float, float, float)*, [4 x i64] }
%class.GrGLFunction.282 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.276 = type { void (i8*, i32, i32, float*)*, [4 x i64] }
%class.GrGLFunction.277 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.283 = type { void (i8*, i32, i32, i8, float*)*, [4 x i64] }
%class.GrGLFunction.246 = type { i8 (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.284 = type { void (i8*, i8*)*, [4 x i64] }
%class.GrGLFunction.285 = type { void (i8*, i32, float)*, [4 x i64] }
%class.GrGLFunction.286 = type { void (i8*, i32, float*)*, [4 x i64] }
%class.GrGLFunction.197 = type { void (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.287 = type { void (i8*, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.288 = type { void (i8*, i32, i32, i32, i8, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.265 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.289 = type { %struct.__GLsync* (i8*, i32, i32)*, [4 x i64] }
%struct.__GLsync = type opaque
%class.GrGLFunction.290 = type { i8 (i8*, %struct.__GLsync*)*, [4 x i64] }
%class.GrGLFunction.291 = type { i32 (i8*, %struct.__GLsync*, i32, i64)*, [4 x i64] }
%class.GrGLFunction.292 = type { void (i8*, %struct.__GLsync*, i32, i64)*, [4 x i64] }
%class.GrGLFunction.293 = type { void (i8*, %struct.__GLsync*)*, [4 x i64] }
%class.GrGLFunction.294 = type { void (i8*, i32, i32, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.295 = type { void (i8*, i32, i32, i32, i32, i32*, i8)*, [4 x i64] }
%class.GrGLFunction.296 = type { void (i8*, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.297 = type { void (i8*, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, [4 x i64] }
%class.GrGLFunction.298 = type { i32 (i8*, i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, [4 x i64] }
%class.GrGLFunction.200 = type { void (i8*)*, [4 x i64] }
%class.GrGLFunction.299 = type { void (i8*, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.300 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.301 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction = type { void (i8*, i32)*, [4 x i64] }
%class.sk_sp.303 = type { %class.GrDirectContext* }
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.335", %"class.std::__1::unique_ptr.341", %class.sk_sp.347, %"class.std::__1::unique_ptr.348", %"class.std::__1::unique_ptr.354", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.360", %"class.std::__1::unique_ptr.366", %"class.std::__1::unique_ptr.372" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.305", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.323", %"class.std::__1::unique_ptr.329" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.304 }
%class.sk_sp.304 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type opaque
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.311", %"class.std::__1::unique_ptr.317" }
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type opaque
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type opaque
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.347 = type { %class.GrGpu* }
%class.GrGpu = type opaque
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %class.GrResourceCache* }
%class.GrResourceCache = type opaque
%"class.std::__1::unique_ptr.354" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type opaque
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.372" = type { %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.sk_sp = type { %struct.GrGLInterface* }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"struct.gl::GLContextAttribs" = type { i32, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i32 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.150" }
%"class.std::__1::vector.150" = type { %"class.std::__1::__vector_base.151" }
%"class.std::__1::__vector_base.151" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.base::BasicStringPiece"* }
%"struct.gl::GLVersionInfo" = type { i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"struct.gl::GLWindowSystemBindingInfo" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.gl::GLSurface" = type { i32 (...)**, %"class.base::RefCounted", %"class.base::SupportsWeakPtr" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.85 }
%class.scoped_refptr.85 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.87" }
%"struct.std::__1::atomic.87" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__atomic_base.89" }
%"struct.std::__1::__atomic_base.89" = type { %"struct.std::__1::__cxx_atomic_impl.90" }
%"struct.std::__1::__cxx_atomic_impl.90" = type { %"struct.std::__1::__cxx_atomic_base_impl.91" }
%"struct.std::__1::__cxx_atomic_base_impl.91" = type { i8 }
%"class.gl::GLContext" = type <{ i32 (...)**, %"class.base::RefCounted.93", [4 x i8], %"class.base::SupportsWeakPtr.94", %"struct.gl::GLWorkarounds", [6 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.122", %"class.gl::RealGLApi"*, %class.scoped_refptr.128, %"class.gl::GLContext"*, i8, [7 x i8], %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.144", i8, [7 x i8] }>
%"class.base::RefCounted.93" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::SupportsWeakPtr.94" = type { %"class.base::internal::WeakReferenceOwner" }
%"struct.gl::GLWorkarounds" = type { i8, i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.gl::DriverGL"* }
%"struct.gl::DriverGL" = type <{ %"struct.gl::ProcsGL", %"struct.gl::ExtensionsGL", i8 }>
%"struct.gl::ProcsGL" = type { void (i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i8, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i8*)*, void (i32)*, void (i32, i32, i64, i32)*, void ()*, void (float, float, float, float)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, i32 (i32)*, void (i32)*, void (i32, i32, float, i32)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (float, float, float, float)*, void (double)*, void (float)*, void (i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, i32 (%struct.__GLsync*, i32, i64)*, i32 (%struct.__GLsync*, i32, i64)*, void (i8, i8, i8, i8)*, void (i32, i8, i8, i8, i8)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32*)*, i32 ()*, i32 (i32)*, i32 (i32, i32, i8**)*, void (i32)*, void (void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (%struct.__GLsync*)*, void (%struct.__GLsync*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i8)*, void (double, double)*, void (float, float)*, void (i32, i32)*, void (i32)*, void (i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i64)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void (i32, i32)*, void (i32)*, void (i32)*, void (i32)*, void ()*, %struct.__GLsync* (i32, i32)*, %struct.__GLsync* (i32, i32)*, void ()*, void (i32)*, void (i32)*, void ()*, void (i32, i64, i64)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, i32 (i32)*, i32 (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*, i32, i32*)*, void (i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8**)*, i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, i32 ()*, void (i32, i32, i32*)*, void (i32, float*)*, void (i32, i32, i32*, float*)*, i32 (i32, i8*)*, i32 (i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 ()*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i64*)*, void (i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i8*, i32, i32*, i8*)*, void (i32, i8**)*, void (i32, i32, i32*, i8**)*, void (i32, i32, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i32, i32*, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, i8* (i32)*, i8* (i32, i32)*, void (%struct.__GLsync*, i32, i32, i32*, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, i32 (i32, i8*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i8**)*, void (i32, i32, i32, i32*, i8**)*, void (i32, i32)*, void (i32, i64, i32, i32)*, void (i32, i64, i32, i8*)*, void (i32, i64, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32, i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (%struct.__GLsync*)*, i8 (%struct.__GLsync*)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, void (float)*, void (i32)*, i8* (i32, i32)*, i8* (i32, i64, i64, i32)*, void (i32, float*)*, void (i32)*, void (i32)*, void (i32)*, void (i32)*, void (i32, i32, i32*)*, void (float)*, void (i32, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32*, i32)*, void (i32, i32*, i32, i8**, i32)*, void (i32, i32*, i32, i8**, i32*, i32)*, void (i32, i32*, i32, i8**, i32*, i32*, i32*, i32)*, void (i32, i32, i32, i8*)*, void (i8*, i32, i8*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void ()*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (float, float)*, void ()*, void ()*, void (i32)*, void (i32, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, float*)*, void (i32, i32, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void ()*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i8*)*, void ()*, void (float, i8)*, void (i32, i32)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32*, i32, i8*, i32)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, i8 (i32)*, i8 (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i64, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i8**, i32)*, void (i32, float)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, i8 (i32)*, void (i32)*, void (i32, i32, i32)*, void (i32)*, void (i32)*, void (i32, float)*, void (i32, float*)*, void (i32, float, float)*, void (i32, float*)*, void (i32, float, float, float)*, void (i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (%struct.__GLsync*, i32, i64)*, void (%struct.__GLsync*, i32, i64)*, void (i32, i32, i32*)* }
%"struct.gl::ExtensionsGL" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.gl::GLImplementationWrapper"* }
%"class.gl::GLImplementationWrapper" = type { %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.113", %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.gl::TraceGLApi"* }
%"class.gl::TraceGLApi" = type opaque
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.gl::LogGLApi"* }
%"class.gl::LogGLApi" = type opaque
%"class.gl::GLApi" = type { i32 (...)** }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.gl::CurrentGL"* }
%"struct.gl::CurrentGL" = type { %"class.gl::GLApi"*, %"struct.gl::DriverGL"*, %"struct.gl::GLVersionInfo"* }
%"class.gl::RealGLApi" = type opaque
%class.scoped_refptr.128 = type { %"class.gl::GLShareGroup"* }
%"class.gl::GLShareGroup" = type { %"class.base::RefCounted.129", %"class.std::__1::set", %"class.gl::GLContext"* }
%"class.base::RefCounted.129" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.130" }
%"class.std::__1::__tree.130" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.gl::GLStateRestorer"* }
%"class.gl::GLStateRestorer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"struct.gl::GLVersionInfo"* }
%"class.gl::ProgressReporter" = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.std::__1::allocator" = type { i8 }
%"struct.angle::SystemInfo" = type { %"class.std::__1::vector.157", i32, i8, i8, i8, i8, %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector.157" = type { %"class.std::__1::__vector_base.158" }
%"class.std::__1::__vector_base.158" = type { %"struct.angle::GPUDeviceInfo"*, %"struct.angle::GPUDeviceInfo"*, %"class.std::__1::__compressed_pair.159" }
%"struct.angle::GPUDeviceInfo" = type { i32, i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"struct.angle::VersionInfo" }
%"struct.angle::VersionInfo" = type { i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"struct.angle::GPUDeviceInfo"* }
%"struct.gfx::GpuExtraInfo" = type { %"class.std::__1::vector.164", %"class.std::__1::vector.171" }
%"class.std::__1::vector.164" = type { %"class.std::__1::__vector_base.165" }
%"class.std::__1::__vector_base.165" = type { %"struct.gfx::ANGLEFeature"*, %"struct.gfx::ANGLEFeature"*, %"class.std::__1::__compressed_pair.166" }
%"struct.gfx::ANGLEFeature" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"struct.gfx::ANGLEFeature"* }
%"class.std::__1::vector.171" = type { %"class.std::__1::__vector_base.172" }
%"class.std::__1::__vector_base.172" = type { %"struct.gfx::BufferUsageAndFormat"*, %"struct.gfx::BufferUsageAndFormat"*, %"class.std::__1::__compressed_pair.173" }
%"struct.gfx::BufferUsageAndFormat" = type { i32, i32 }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"struct.gfx::BufferUsageAndFormat"* }
%"struct.gpu::GpuPreferences" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8], %"class.std::__1::vector.171", i8, i8, i8, i8, i8, [3 x i8], i32, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector", i8, i8, [2 x i8], i32, i8, i8, [6 x i8] }>
%"class.ui::OzonePlatform" = type <{ i32 (...)**, i8, i8, i8, i8, [4 x i8] }>
%"class.ui::PlatformGLEGLUtility" = type { i32 (...)** }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorIN3gpu7GPUInfo9GPUDeviceENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ = comdat any

$_ZNSt3__16vectorIN3gfx12ANGLEFeatureENS_9allocatorIS2_EEE8__appendEm = comdat any

@_ZN8switches12kGpuVendorIdE = external constant [0 x i8], align 1
@_ZN8switches12kGpuDeviceIdE = external constant [0 x i8], align 1
@_ZN8switches17kGpuDriverVersionE = external constant [0 x i8], align 1
@_ZN8switches6kUseGLE = external constant [0 x i8], align 1
@_ZN8switches9kUseANGLEE = external constant [0 x i8], align 1
@_ZN2gl29kGLImplementationDisabledNameE = external constant [0 x i8], align 1
@_ZN8switches30kOverrideUseSoftwareGLForTestsE = external constant [0 x i8], align 1
@_ZN8switches33kOverrideUseSoftwareGLForHeadlessE = external constant [0 x i8], align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"SwANGLE\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.2 = private unnamed_addr constant [42 x i8] c"gpu_info_collector::CollectGraphicsInfoGL\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"../../gpu/config/gpu_info_collector.cc\00", align 1
@.str.4 = private unnamed_addr constant [46 x i8] c"Could not create surface for info collection.\00", align 1
@.str.5 = private unnamed_addr constant [46 x i8] c"Could not create context for info collection.\00", align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"GL_ANGLE_framebuffer_multisample\00", align 1
@.str.7 = private unnamed_addr constant [33 x i8] c"GL_APPLE_framebuffer_multisample\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"GL_EXT_framebuffer_multisample\00", align 1
@.str.9 = private unnamed_addr constant [38 x i8] c"GL_EXT_multisampled_render_to_texture\00", align 1
@.str.10 = private unnamed_addr constant [30 x i8] c"GL_NV_framebuffer_multisample\00", align 1
@_ZN2gl24g_current_gl_context_tlsE = external local_unnamed_addr global %"class.base::ThreadLocalPointer"*, align 8
@.str.11 = private unnamed_addr constant [23 x i8] c"GPU.MaxMSAASampleCount\00", align 1
@.str.12 = private unnamed_addr constant [18 x i8] c"GL_EXT_robustness\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"GL_KHR_robustness\00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"GL_ARB_robustness\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"nvidia\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"nouveau\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"intel\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"amd\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"ati\00", align 1
@_ZZN3gpu17IdentifyActiveGPUEPNS_7GPUInfoEE10kVendorIDs = internal unnamed_addr constant [5 x i32] [i32 4318, i32 4318, i32 32902, i32 4098, i32 4098], align 16
@_ZN2gl21g_current_egl_contextE = external local_unnamed_addr global %"class.gl::EGLApi"*, align 8
@.str.22 = private unnamed_addr constant [47 x i8] c"gl::GLContext::CreateOffscreenGLSurface failed\00", align 1
@.str.23 = private unnamed_addr constant [33 x i8] c"gl::init::CreateGLContext failed\00", align 1
@.str.24 = private unnamed_addr constant [36 x i8] c"gl::GLContext::MakeCurrent() failed\00", align 1
@.str.27 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.29 = private unnamed_addr constant [8 x i8] c" .,()-_\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu40CollectGraphicsDeviceInfoFromCommandLineEPKN4base11CommandLineEPNS_7GPUInfoE(%"class.base::CommandLine"*, %"struct.gpu::GPUInfo"*) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 4
  %7 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches12kGpuVendorIdE, i64 0, i64 0)) #11
  br i1 %7, label %8, label %30

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  %13 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches12kGpuVendorIdE, i64 0, i64 0)) #11
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.base::CommandLine"* %0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches12kGpuVendorIdE, i64 0, i64 0), i64 %13) #11
  %14 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = load i8*, i8** %10, align 8
  %19 = select i1 %17, i8* %18, i8* %9
  %20 = load i64, i64* %11, align 8
  %21 = zext i8 %16 to i64
  %22 = select i1 %17, i64 %20, i64 %21
  %23 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %6, i64 0, i32 0
  %24 = call zeroext i1 @_ZN4base12StringToUintENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8* %19, i64 %22, i32* %23) #11
  %25 = load i8, i8* %15, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %8
  %28 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %8, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  br label %30

30:                                               ; preds = %29, %2
  %31 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches12kGpuDeviceIdE, i64 0, i64 0)) #11
  br i1 %31, label %32, label %54

32:                                               ; preds = %30
  %33 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 24, i1 false)
  %37 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches12kGpuDeviceIdE, i64 0, i64 0)) #11
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.base::CommandLine"* %0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches12kGpuDeviceIdE, i64 0, i64 0), i64 %37) #11
  %38 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  %42 = load i8*, i8** %34, align 8
  %43 = select i1 %41, i8* %42, i8* %33
  %44 = load i64, i64* %35, align 8
  %45 = zext i8 %40 to i64
  %46 = select i1 %41, i64 %44, i64 %45
  %47 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 4, i32 1
  %48 = call zeroext i1 @_ZN4base12StringToUintENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8* %43, i64 %46, i32* %47) #11
  %49 = load i8, i8* %39, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %32
  %52 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %52) #12
  br label %53

53:                                               ; preds = %32, %51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #11
  br label %54

54:                                               ; preds = %53, %30
  %55 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches17kGpuDriverVersionE, i64 0, i64 0)) #11
  br i1 %55, label %56, label %69

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #11
  %58 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches17kGpuDriverVersionE, i64 0, i64 0)) #11
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.base::CommandLine"* %0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches17kGpuDriverVersionE, i64 0, i64 0), i64 %58) #11
  %59 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 4, i32 7
  %60 = bitcast %"class.std::__1::basic_string"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %66) #12
  br label %67

67:                                               ; preds = %64, %56
  %68 = bitcast %"class.std::__1::basic_string"* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* nonnull align 8 %57, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #11
  br label %69

69:                                               ; preds = %67, %54
  %70 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %6, i64 0, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %91

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 4, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %91

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 4, i32 7
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 4, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  br label %88

86:                                               ; preds = %77
  %87 = zext i8 %81 to i64
  br label %88

88:                                               ; preds = %83, %86
  %89 = phi i64 [ %85, %83 ], [ %87, %86 ]
  %90 = icmp ne i64 %89, 0
  br label %91

91:                                               ; preds = %73, %69, %88
  %92 = phi i1 [ true, %73 ], [ true, %69 ], [ %90, %88 ]
  ret i1 %92
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #2

declare void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, %"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base12StringToUintENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8*, i64, i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu24CollectBasicGraphicsInfoEPKN4base11CommandLineEPNS_7GPUInfoE(%"class.base::CommandLine"*, %"struct.gpu::GPUInfo"*) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = tail call zeroext i1 @_ZN3gpu40CollectGraphicsDeviceInfoFromCommandLineEPKN4base11CommandLineEPNS_7GPUInfoE(%"class.base::CommandLine"* %0, %"struct.gpu::GPUInfo"* %1)
  br i1 %6, label %212, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches6kUseGLE, i64 0, i64 0)) #11
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.base::CommandLine"* %0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches6kUseGLE, i64 0, i64 0), i64 %12) #11
  %13 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  %16 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches9kUseANGLEE, i64 0, i64 0)) #11
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.base::CommandLine"* %0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches9kUseANGLEE, i64 0, i64 0), i64 %16) #11
  %17 = call zeroext i1 @_ZN2gl28UsePassthroughCommandDecoderEPKN4base11CommandLineE(%"class.base::CommandLine"* %0) #11
  br i1 %17, label %18, label %21

18:                                               ; preds = %7
  %19 = call zeroext i1 @_ZN2gl34PassthroughCommandDecoderSupportedEv() #11
  %20 = zext i1 %19 to i8
  br label %21

21:                                               ; preds = %18, %7
  %22 = phi i8 [ 0, %7 ], [ %20, %18 ]
  %23 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 23
  store i8 %22, i8* %23, align 2
  %24 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl29kGLImplementationDisabledNameE, i64 0, i64 0)) #11
  %25 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = load i64, i64* %10, align 8
  %30 = zext i8 %27 to i64
  %31 = select i1 %28, i64 %29, i64 %30
  %32 = icmp eq i64 %24, %31
  br i1 %32, label %33, label %82

33:                                               ; preds = %21
  %34 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl29kGLImplementationDisabledNameE, i64 0, i64 0), i64 %24) #11
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %82

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 12
  %38 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 8, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  br label %48

46:                                               ; preds = %36
  store i8 8, i8* %39, align 1
  %47 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  br label %48

48:                                               ; preds = %42, %46
  %49 = phi i8* [ %45, %42 ], [ %47, %46 ]
  %50 = bitcast i8* %49 to i64*
  store i64 7234307546238118212, i64* %50, align 1
  %51 = getelementptr inbounds i8, i8* %49, i64 8
  store i8 0, i8* %51, align 1
  %52 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 13
  %53 = bitcast %"class.std::__1::basic_string"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %61

57:                                               ; preds = %48
  %58 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 8, i64* %58, align 8
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  br label %63

61:                                               ; preds = %48
  store i8 8, i8* %54, align 1
  %62 = bitcast %"class.std::__1::basic_string"* %52 to i8*
  br label %63

63:                                               ; preds = %57, %61
  %64 = phi i8* [ %60, %57 ], [ %62, %61 ]
  %65 = bitcast i8* %64 to i64*
  store i64 7234307546238118212, i64* %65, align 1
  %66 = getelementptr inbounds i8, i8* %64, i64 8
  store i8 0, i8* %66, align 1
  %67 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 11
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %76

72:                                               ; preds = %63
  %73 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 8, i64* %73, align 8
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  br label %78

76:                                               ; preds = %63
  store i8 8, i8* %69, align 1
  %77 = bitcast %"class.std::__1::basic_string"* %67 to i8*
  br label %78

78:                                               ; preds = %72, %76
  %79 = phi i8* [ %75, %72 ], [ %77, %76 ]
  %80 = bitcast i8* %79 to i64*
  store i64 7234307546238118212, i64* %80, align 1
  %81 = getelementptr inbounds i8, i8* %79, i64 8
  store i8 0, i8* %81, align 1
  br label %198

82:                                               ; preds = %21, %33
  %83 = call i64 @_ZN2gl24GetNamedGLImplementationERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #11
  %84 = trunc i64 %83 to i32
  %85 = lshr i64 %83, 32
  %86 = trunc i64 %85 to i32
  %87 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches30kOverrideUseSoftwareGLForTestsE, i64 0, i64 0)) #11
  %88 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches33kOverrideUseSoftwareGLForHeadlessE, i64 0, i64 0)) #11
  %89 = call i64 @_ZN2gl33GetLegacySoftwareGLImplementationEv() #11
  %90 = trunc i64 %89 to i32
  %91 = lshr i64 %89, 32
  %92 = trunc i64 %91 to i32
  %93 = call i64 @_ZN2gl27GetSoftwareGLImplementationEv() #11
  %94 = trunc i64 %93 to i32
  %95 = lshr i64 %93, 32
  %96 = trunc i64 %95 to i32
  %97 = icmp eq i32 %84, %90
  %98 = icmp eq i32 %86, %92
  %99 = and i1 %97, %98
  br i1 %99, label %118, label %100

100:                                              ; preds = %82
  br i1 %87, label %101, label %109

101:                                              ; preds = %100
  %102 = call i64 @_ZN2gl35GetSoftwareGLForTestsImplementationEv() #11
  %103 = trunc i64 %102 to i32
  %104 = lshr i64 %102, 32
  %105 = trunc i64 %104 to i32
  %106 = icmp eq i32 %90, %103
  %107 = icmp eq i32 %92, %105
  %108 = and i1 %106, %107
  br i1 %108, label %118, label %109

109:                                              ; preds = %101, %100
  br i1 %88, label %110, label %157

110:                                              ; preds = %109
  %111 = call i64 @_ZN2gl38GetSoftwareGLForHeadlessImplementationEv() #11
  %112 = trunc i64 %111 to i32
  %113 = lshr i64 %111, 32
  %114 = trunc i64 %113 to i32
  %115 = icmp eq i32 %90, %112
  %116 = icmp eq i32 %92, %114
  %117 = and i1 %115, %116
  br i1 %117, label %118, label %157

118:                                              ; preds = %110, %101, %82
  %119 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 4, i32 0
  store i32 65535, i32* %119, align 8
  %120 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 4, i32 1
  store i32 65535, i32* %120, align 4
  %121 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %121) #11
  %122 = call i8* @_ZN2gl25GetGLImplementationGLNameENS_21GLImplementationPartsE(i64 %89) #11
  %123 = call i64 @strlen(i8* %122) #11
  %124 = icmp ugt i64 %123, -17
  br i1 %124, label %125, label %127

125:                                              ; preds = %118
  %126 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %126) #13
  unreachable

127:                                              ; preds = %118
  %128 = icmp ult i64 %123, 23
  br i1 %128, label %137, label %129

129:                                              ; preds = %127
  %130 = add nuw i64 %123, 16
  %131 = and i64 %130, -16
  %132 = call i8* @_Znwm(i64 %131) #12
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %132, i8** %133, align 8
  %134 = or i64 %131, -9223372036854775808
  %135 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %123, i64* %136, align 8
  br label %142

137:                                              ; preds = %127
  %138 = trunc i64 %123 to i8
  %139 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  store i8 %138, i8* %140, align 1
  %141 = icmp eq i64 %123, 0
  br i1 %141, label %144, label %142

142:                                              ; preds = %137, %129
  %143 = phi i8* [ %132, %129 ], [ %121, %137 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %143, i8* align 1 %122, i64 %123, i1 false) #11
  br label %144

144:                                              ; preds = %137, %142
  %145 = phi i8* [ %121, %137 ], [ %143, %142 ]
  %146 = getelementptr inbounds i8, i8* %145, i64 %123
  store i8 0, i8* %146, align 1
  %147 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 4, i32 6
  %148 = bitcast %"class.std::__1::basic_string"* %147 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %149 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %148, i64 0, i32 1, i32 0
  %150 = load i8, i8* %149, align 1
  %151 = icmp slt i8 %150, 0
  br i1 %151, label %152, label %155

152:                                              ; preds = %144
  %153 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %147, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load i8*, i8** %153, align 8
  call void @_ZdlPv(i8* %154) #12
  br label %155

155:                                              ; preds = %152, %144
  %156 = bitcast %"class.std::__1::basic_string"* %147 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* nonnull align 8 %121, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %121) #11
  br label %198

157:                                              ; preds = %110, %109
  %158 = icmp eq i32 %84, %94
  %159 = icmp eq i32 %86, %96
  %160 = and i1 %158, %159
  br i1 %160, label %179, label %161

161:                                              ; preds = %157
  br i1 %87, label %162, label %170

162:                                              ; preds = %161
  %163 = call i64 @_ZN2gl35GetSoftwareGLForTestsImplementationEv() #11
  %164 = trunc i64 %163 to i32
  %165 = lshr i64 %163, 32
  %166 = trunc i64 %165 to i32
  %167 = icmp eq i32 %94, %164
  %168 = icmp eq i32 %96, %166
  %169 = and i1 %167, %168
  br i1 %169, label %179, label %170

170:                                              ; preds = %162, %161
  br i1 %88, label %171, label %196

171:                                              ; preds = %170
  %172 = call i64 @_ZN2gl38GetSoftwareGLForHeadlessImplementationEv() #11
  %173 = trunc i64 %172 to i32
  %174 = lshr i64 %172, 32
  %175 = trunc i64 %174 to i32
  %176 = icmp eq i32 %94, %173
  %177 = icmp eq i32 %96, %175
  %178 = and i1 %176, %177
  br i1 %178, label %179, label %196

179:                                              ; preds = %171, %162, %157
  %180 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 4, i32 0
  store i32 65535, i32* %180, align 8
  %181 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 4, i32 1
  store i32 65535, i32* %181, align 4
  %182 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 4, i32 6
  %183 = bitcast %"class.std::__1::basic_string"* %182 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %184 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %183, i64 0, i32 1, i32 0
  %185 = load i8, i8* %184, align 1
  %186 = icmp slt i8 %185, 0
  br i1 %186, label %187, label %191

187:                                              ; preds = %179
  %188 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 4, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 7, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %182, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load i8*, i8** %189, align 8
  br label %193

191:                                              ; preds = %179
  store i8 7, i8* %184, align 1
  %192 = bitcast %"class.std::__1::basic_string"* %182 to i8*
  br label %193

193:                                              ; preds = %187, %191
  %194 = phi i8* [ %190, %187 ], [ %192, %191 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %194, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #11
  %195 = getelementptr inbounds i8, i8* %194, i64 7
  store i8 0, i8* %195, align 1
  br label %198

196:                                              ; preds = %171, %170
  %197 = call zeroext i1 @_ZN3gpu24CollectBasicGraphicsInfoEPNS_7GPUInfoE(%"struct.gpu::GPUInfo"* %1) #11
  br label %198

198:                                              ; preds = %155, %196, %193, %78
  %199 = phi i1 [ true, %78 ], [ true, %155 ], [ %197, %196 ], [ true, %193 ]
  %200 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %201 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %200, i64 0, i32 1, i32 0
  %202 = load i8, i8* %201, align 1
  %203 = icmp slt i8 %202, 0
  br i1 %203, label %204, label %206

204:                                              ; preds = %198
  %205 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %205) #12
  br label %206

206:                                              ; preds = %198, %204
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #11
  %207 = load i8, i8* %26, align 1
  %208 = icmp slt i8 %207, 0
  br i1 %208, label %209, label %211

209:                                              ; preds = %206
  %210 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %210) #12
  br label %211

211:                                              ; preds = %206, %209
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  br label %212

212:                                              ; preds = %2, %211
  %213 = phi i1 [ %199, %211 ], [ true, %2 ]
  ret i1 %213
}

declare zeroext i1 @_ZN2gl28UsePassthroughCommandDecoderEPKN4base11CommandLineE(%"class.base::CommandLine"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2gl34PassthroughCommandDecoderSupportedEv() local_unnamed_addr #2

declare i64 @_ZN2gl24GetNamedGLImplementationERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare i64 @_ZN2gl33GetLegacySoftwareGLImplementationEv() local_unnamed_addr #2

declare i64 @_ZN2gl27GetSoftwareGLImplementationEv() local_unnamed_addr #2

declare i64 @_ZN2gl35GetSoftwareGLForTestsImplementationEv() local_unnamed_addr #2

declare i64 @_ZN2gl38GetSoftwareGLForHeadlessImplementationEv() local_unnamed_addr #2

declare i8* @_ZN2gl25GetGLImplementationGLNameENS_21GLImplementationPartsE(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZN3gpu24CollectBasicGraphicsInfoEPNS_7GPUInfoE(%"struct.gpu::GPUInfo"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu21CollectGraphicsInfoGLEPNS_7GPUInfoE(%"struct.gpu::GPUInfo"*) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %class.sk_sp.302, align 8
  %8 = alloca %class.sk_sp.303, align 8
  %9 = alloca %class.sk_sp, align 8
  %10 = alloca %"class.base::BasicStringPiece", align 8
  %11 = alloca %"class.base::BasicStringPiece", align 8
  %12 = alloca %"class.base::BasicStringPiece", align 8
  %13 = alloca %"class.base::BasicStringPiece", align 8
  %14 = alloca %"class.base::BasicStringPiece", align 8
  %15 = alloca %"class.base::BasicStringPiece", align 8
  %16 = alloca %"class.base::BasicStringPiece", align 8
  %17 = alloca %"class.base::BasicStringPiece", align 8
  %18 = alloca %"struct.gl::GLContextAttribs", align 4
  %19 = alloca %"class.logging::LogMessage", align 8
  %20 = alloca %"class.logging::LogMessage", align 8
  %21 = alloca %"class.gfx::Size", align 4
  %22 = alloca %"class.logging::LogMessage", align 8
  %23 = alloca %"class.base::TimeTicks", align 8
  %24 = alloca %"class.logging::LogMessage", align 8
  %25 = alloca %"class.logging::LogMessage", align 8
  %26 = alloca %"class.std::__1::basic_string", align 8
  %27 = alloca %"class.std::__1::basic_string", align 8
  %28 = alloca %"class.std::__1::basic_string", align 8
  %29 = alloca %"class.std::__1::basic_string", align 8
  %30 = alloca %"class.std::__1::basic_string", align 8
  %31 = alloca %"class.base::internal::flat_tree", align 8
  %32 = alloca %"class.base::BasicStringPiece", align 8
  %33 = alloca %"struct.gl::GLVersionInfo", align 8
  %34 = alloca i32, align 4
  %35 = alloca %"class.std::__1::basic_string", align 8
  %36 = alloca %"struct.gl::GLWindowSystemBindingInfo", align 8
  %37 = alloca %"class.std::__1::basic_string", align 8
  %38 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 123, i32 0), align 16
  %39 = and i8 %38, 25
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %47, label %41, !prof !2

41:                                               ; preds = %1
  %42 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %43 = bitcast %"class.base::TimeTicks"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #11
  %44 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %23, i64 0, i32 0, i32 0
  %45 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %45, i64* %44, align 8
  %46 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 123, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %42, %"class.base::TimeTicks"* nonnull dereferenceable(8) %23, %"class.base::trace_event::TraceArguments"* null, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #11
  br label %47

47:                                               ; preds = %1, %41
  %48 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 123, i32 0), %41 ]
  %49 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0), %41 ]
  %50 = phi i64 [ -6148914691236517206, %1 ], [ %46, %41 ]
  %51 = bitcast %"class.gfx::Size"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  %52 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %21, i64 0, i32 0
  store i32 0, i32* %52, align 4
  %53 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %21, i64 0, i32 1
  store i32 0, i32* %53, align 4
  %54 = call %"class.gl::GLSurface"* @_ZN2gl4init24CreateOffscreenGLSurfaceERKN3gfx4SizeE(%"class.gfx::Size"* nonnull dereferenceable(8) %21) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #11
  %55 = icmp eq %"class.gl::GLSurface"* %54, null
  br i1 %55, label %56, label %70

56:                                               ; preds = %47
  %57 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #11
  br i1 %57, label %58, label %63

58:                                               ; preds = %56
  %59 = bitcast %"class.logging::LogMessage"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %59) #11
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %22, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0), i32 68, i32 2) #11
  %60 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %22, i64 0, i32 2
  %61 = bitcast %"class.std::__1::basic_ostringstream"* %60 to %"class.std::__1::basic_ostream"*
  %62 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %61, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.22, i64 0, i64 0), i64 46) #11
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %59) #11
  br label %63

63:                                               ; preds = %56, %58
  %64 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #11
  br i1 %64, label %65, label %876

65:                                               ; preds = %63
  %66 = bitcast %"class.logging::LogMessage"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %66) #11
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %24, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0), i32 295, i32 2) #11
  %67 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %24, i64 0, i32 2
  %68 = bitcast %"class.std::__1::basic_ostringstream"* %67 to %"class.std::__1::basic_ostream"*
  %69 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %68, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4, i64 0, i64 0), i64 45) #11
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %66) #11
  br label %876

70:                                               ; preds = %47
  %71 = bitcast %"struct.gl::GLContextAttribs"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %71) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %71, i8 -86, i64 28, i1 false) #11
  call void @_ZN2gl16GLContextAttribsC1Ev(%"struct.gl::GLContextAttribs"* nonnull %18) #11
  %72 = getelementptr inbounds %"struct.gl::GLContextAttribs", %"struct.gl::GLContextAttribs"* %18, i64 0, i32 7
  store i32 2, i32* %72, align 4
  %73 = call %"class.gl::GLContext"* @_ZN2gl4init15CreateGLContextEPNS_12GLShareGroupEPNS_9GLSurfaceERKNS_16GLContextAttribsE(%"class.gl::GLShareGroup"* null, %"class.gl::GLSurface"* nonnull %54, %"struct.gl::GLContextAttribs"* nonnull dereferenceable(28) %18) #11
  %74 = icmp eq %"class.gl::GLContext"* %73, null
  br i1 %74, label %75, label %82

75:                                               ; preds = %70
  %76 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #11
  br i1 %76, label %77, label %105

77:                                               ; preds = %75
  %78 = bitcast %"class.logging::LogMessage"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %78) #11
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %19, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0), i32 81, i32 2) #11
  %79 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %19, i64 0, i32 2
  %80 = bitcast %"class.std::__1::basic_ostringstream"* %79 to %"class.std::__1::basic_ostream"*
  %81 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %80, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.23, i64 0, i64 0), i64 32) #11
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %78) #11
  br label %105

82:                                               ; preds = %70
  %83 = ptrtoint %"class.gl::GLContext"* %73 to i64
  %84 = call zeroext i1 @_ZN2gl9GLContext11MakeCurrentEPNS_9GLSurfaceE(%"class.gl::GLContext"* nonnull %73, %"class.gl::GLSurface"* nonnull %54) #11
  br i1 %84, label %105, label %85

85:                                               ; preds = %82
  %86 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #11
  br i1 %86, label %87, label %92

87:                                               ; preds = %85
  %88 = bitcast %"class.logging::LogMessage"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %88) #11
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %20, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0), i32 86, i32 2) #11
  %89 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %20, i64 0, i32 2
  %90 = bitcast %"class.std::__1::basic_ostringstream"* %89 to %"class.std::__1::basic_ostream"*
  %91 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %90, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.24, i64 0, i64 0), i64 35) #11
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %88) #11
  br label %92

92:                                               ; preds = %87, %85
  %93 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %73, i64 0, i32 1
  %94 = getelementptr inbounds %"class.base::RefCounted.93", %"class.base::RefCounted.93"* %93, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %94) #11
  %95 = getelementptr inbounds %"class.base::RefCounted.93", %"class.base::RefCounted.93"* %93, i64 0, i32 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %105

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.base::RefCounted.93", %"class.base::RefCounted.93"* %93, i64 -2
  %100 = bitcast %"class.base::RefCounted.93"* %99 to %"class.gl::GLContext"*
  %101 = bitcast %"class.base::RefCounted.93"* %99 to void (%"class.gl::GLContext"*)***
  %102 = load void (%"class.gl::GLContext"*)**, void (%"class.gl::GLContext"*)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.gl::GLContext"*)*, void (%"class.gl::GLContext"*)** %102, i64 15
  %104 = load void (%"class.gl::GLContext"*)*, void (%"class.gl::GLContext"*)** %103, align 8
  call void %104(%"class.gl::GLContext"* nonnull %100) #11
  br label %105

105:                                              ; preds = %75, %77, %82, %92, %98
  %106 = phi i64 [ 0, %92 ], [ 0, %98 ], [ %83, %82 ], [ 0, %77 ], [ 0, %75 ]
  call void @_ZN2gl16GLContextAttribsD1Ev(%"struct.gl::GLContextAttribs"* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %71) #11
  %107 = inttoptr i64 %106 to %"class.gl::GLContext"*
  %108 = icmp eq i64 %106, 0
  br i1 %108, label %109, label %116

109:                                              ; preds = %105
  %110 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #11
  br i1 %110, label %111, label %862

111:                                              ; preds = %109
  %112 = bitcast %"class.logging::LogMessage"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %112) #11
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %25, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0), i32 301, i32 2) #11
  %113 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %25, i64 0, i32 2
  %114 = bitcast %"class.std::__1::basic_ostringstream"* %113 to %"class.std::__1::basic_ostream"*
  %115 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %114, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.5, i64 0, i64 0), i64 45) #11
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %112) #11
  br label %862

116:                                              ; preds = %105
  %117 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #11
  call fastcc void @_ZN12_GLOBAL__N_111GetGLStringEj(%"class.std::__1::basic_string"* nonnull sret %26, i32 7937)
  %118 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 13
  %119 = bitcast %"class.std::__1::basic_string"* %118 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %119, i64 0, i32 1, i32 0
  %121 = load i8, i8* %120, align 1
  %122 = icmp slt i8 %121, 0
  br i1 %122, label %123, label %126

123:                                              ; preds = %116
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %118, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8
  call void @_ZdlPv(i8* %125) #12
  br label %126

126:                                              ; preds = %123, %116
  %127 = bitcast %"class.std::__1::basic_string"* %118 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* nonnull align 8 %117, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #11
  %128 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %128) #11
  call fastcc void @_ZN12_GLOBAL__N_111GetGLStringEj(%"class.std::__1::basic_string"* nonnull sret %27, i32 7936)
  %129 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 12
  %130 = bitcast %"class.std::__1::basic_string"* %129 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %130, i64 0, i32 1, i32 0
  %132 = load i8, i8* %131, align 1
  %133 = icmp slt i8 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %126
  %135 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %129, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i8*, i8** %135, align 8
  call void @_ZdlPv(i8* %136) #12
  br label %137

137:                                              ; preds = %134, %126
  %138 = bitcast %"class.std::__1::basic_string"* %129 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* nonnull align 8 %128, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %128) #11
  %139 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %139) #11
  call fastcc void @_ZN12_GLOBAL__N_111GetGLStringEj(%"class.std::__1::basic_string"* nonnull sret %28, i32 7938)
  %140 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 11
  %141 = bitcast %"class.std::__1::basic_string"* %140 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %142 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %141, i64 0, i32 1, i32 0
  %143 = load i8, i8* %142, align 1
  %144 = icmp slt i8 %143, 0
  br i1 %144, label %145, label %148

145:                                              ; preds = %137
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %140, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load i8*, i8** %146, align 8
  call void @_ZdlPv(i8* %147) #12
  br label %148

148:                                              ; preds = %145, %137
  %149 = bitcast %"class.std::__1::basic_string"* %140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* nonnull align 8 %139, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %139) #11
  %150 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %150) #11
  %151 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %153 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %153, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN12_GLOBAL__N_111GetGLStringEj(%"class.std::__1::basic_string"* nonnull sret %29, i32 35724)
  %154 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %154) #11
  call void @_ZN2gl33GetGLExtensionsFromCurrentContextEv(%"class.std::__1::basic_string"* nonnull sret %30) #11
  %155 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 14
  %156 = bitcast %"class.std::__1::basic_string"* %155 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %156, i64 0, i32 1, i32 0
  %158 = load i8, i8* %157, align 1
  %159 = icmp slt i8 %158, 0
  br i1 %159, label %160, label %163

160:                                              ; preds = %148
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %155, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8
  call void @_ZdlPv(i8* %162) #12
  br label %163

163:                                              ; preds = %160, %148
  %164 = bitcast %"class.std::__1::basic_string"* %155 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %164, i8* nonnull align 8 %154, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %154) #11
  %165 = bitcast %"class.base::internal::flat_tree"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %165) #11
  %166 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %31, i64 0, i32 0, i32 0, i32 0
  %167 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %31, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"class.base::BasicStringPiece"* %32 to i8*
  %169 = bitcast %"class.base::internal::flat_tree"* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %169, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %168) #11
  %170 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %32, i64 0, i32 0
  %171 = load i8, i8* %157, align 1
  %172 = icmp slt i8 %171, 0
  %173 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %155, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load i8*, i8** %173, align 8
  %175 = select i1 %172, i8* %174, i8* %164
  store i8* %175, i8** %170, align 8
  %176 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %32, i64 0, i32 1
  %177 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %178 = load i64, i64* %177, align 8
  %179 = zext i8 %171 to i64
  %180 = select i1 %172, i64 %178, i64 %179
  store i64 %180, i64* %176, align 8
  call void @_ZN3gfx16MakeExtensionSetERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::internal::flat_tree"* nonnull sret %31, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %32) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %168) #11
  %181 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %33, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %181) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %181, i8 -86, i64 72, i1 false)
  %182 = load i8, i8* %142, align 1
  %183 = icmp slt i8 %182, 0
  br i1 %183, label %184, label %187

184:                                              ; preds = %163
  %185 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %140, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load i8*, i8** %185, align 8
  br label %187

187:                                              ; preds = %163, %184
  %188 = phi i8* [ %186, %184 ], [ %149, %163 ]
  %189 = load i8, i8* %120, align 1
  %190 = icmp slt i8 %189, 0
  br i1 %190, label %191, label %194

191:                                              ; preds = %187
  %192 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %118, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load i8*, i8** %192, align 8
  br label %194

194:                                              ; preds = %187, %191
  %195 = phi i8* [ %193, %191 ], [ %127, %187 ]
  call void @_ZN2gl13GLVersionInfoC1EPKcS2_RKN4base8internal9flat_treeINS3_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS3_8identityENS7_4lessIvEENS7_6vectorISA_NS7_9allocatorISA_EEEEEE(%"struct.gl::GLVersionInfo"* nonnull %33, i8* %188, i8* %195, %"class.base::internal::flat_tree"* nonnull dereferenceable(24) %31) #11
  %196 = call dereferenceable(120) %"struct.gpu::GPUInfo::GPUDevice"* @_ZN3gpu7GPUInfo10active_gpuEv(%"struct.gpu::GPUInfo"* %0) #11
  %197 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %33, i64 0, i32 14
  %198 = bitcast %"class.std::__1::basic_string"* %197 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %199 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %198, i64 0, i32 1, i32 0
  %200 = load i8, i8* %199, align 1
  %201 = icmp slt i8 %200, 0
  %202 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %33, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %203 = load i64, i64* %202, align 8
  %204 = zext i8 %200 to i64
  %205 = select i1 %201, i64 %203, i64 %204
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %238, label %207

207:                                              ; preds = %194
  %208 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %196, i64 0, i32 6
  %209 = bitcast %"class.std::__1::basic_string"* %208 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %210 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %209, i64 0, i32 1, i32 0
  %211 = load i8, i8* %210, align 1
  %212 = icmp slt i8 %211, 0
  br i1 %212, label %213, label %216

213:                                              ; preds = %207
  %214 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %196, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %215 = load i64, i64* %214, align 8
  br label %218

216:                                              ; preds = %207
  %217 = zext i8 %211 to i64
  br label %218

218:                                              ; preds = %213, %216
  %219 = phi i64 [ %215, %213 ], [ %217, %216 ]
  %220 = icmp ne i64 %219, 0
  %221 = icmp eq %"class.std::__1::basic_string"* %208, %197
  %222 = or i1 %221, %220
  br i1 %222, label %238, label %223

223:                                              ; preds = %218
  br i1 %212, label %232, label %224

224:                                              ; preds = %223
  br i1 %201, label %228, label %225

225:                                              ; preds = %224
  %226 = bitcast %"class.std::__1::basic_string"* %208 to i8*
  %227 = bitcast %"class.std::__1::basic_string"* %197 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %226, i8* align 8 %227, i64 24, i1 false) #11
  br label %238

228:                                              ; preds = %224
  %229 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %197, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load i8*, i8** %229, align 8
  %231 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %208, i8* %230, i64 %203) #11
  br label %238

232:                                              ; preds = %223
  %233 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %197, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = load i8*, i8** %233, align 8
  %235 = bitcast %"class.std::__1::basic_string"* %197 to i8*
  %236 = select i1 %201, i8* %234, i8* %235
  %237 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %208, i8* %236, i64 %205) #11
  br label %238

238:                                              ; preds = %218, %232, %228, %225, %194
  %239 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %33, i64 0, i32 15
  %240 = bitcast %"class.std::__1::basic_string"* %239 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %241 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %240, i64 0, i32 1, i32 0
  %242 = load i8, i8* %241, align 1
  %243 = icmp slt i8 %242, 0
  %244 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %33, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %245 = load i64, i64* %244, align 8
  %246 = zext i8 %242 to i64
  %247 = select i1 %243, i64 %245, i64 %246
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %280, label %249

249:                                              ; preds = %238
  %250 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %196, i64 0, i32 7
  %251 = bitcast %"class.std::__1::basic_string"* %250 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %252 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %251, i64 0, i32 1, i32 0
  %253 = load i8, i8* %252, align 1
  %254 = icmp slt i8 %253, 0
  br i1 %254, label %255, label %258

255:                                              ; preds = %249
  %256 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %196, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %257 = load i64, i64* %256, align 8
  br label %260

258:                                              ; preds = %249
  %259 = zext i8 %253 to i64
  br label %260

260:                                              ; preds = %255, %258
  %261 = phi i64 [ %257, %255 ], [ %259, %258 ]
  %262 = icmp ne i64 %261, 0
  %263 = icmp eq %"class.std::__1::basic_string"* %250, %239
  %264 = or i1 %263, %262
  br i1 %264, label %280, label %265

265:                                              ; preds = %260
  br i1 %254, label %274, label %266

266:                                              ; preds = %265
  br i1 %243, label %270, label %267

267:                                              ; preds = %266
  %268 = bitcast %"class.std::__1::basic_string"* %250 to i8*
  %269 = bitcast %"class.std::__1::basic_string"* %239 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %268, i8* align 8 %269, i64 24, i1 false) #11
  br label %280

270:                                              ; preds = %266
  %271 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %239, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load i8*, i8** %271, align 8
  %273 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %250, i8* %272, i64 %245) #11
  br label %280

274:                                              ; preds = %265
  %275 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %239, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %276 = load i8*, i8** %275, align 8
  %277 = bitcast %"class.std::__1::basic_string"* %239 to i8*
  %278 = select i1 %243, i8* %276, i8* %277
  %279 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %250, i8* %278, i64 %247) #11
  br label %280

280:                                              ; preds = %260, %274, %270, %267, %238
  %281 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %281) #11
  store i32 0, i32* %34, align 4
  %282 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %33, i64 0, i32 8
  %283 = load i32, i32* %282, align 8
  %284 = icmp ugt i32 %283, 2
  br i1 %284, label %310, label %285

285:                                              ; preds = %280
  %286 = bitcast %"class.base::BasicStringPiece"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %286) #11
  %287 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 0, i32 0
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0), i8** %287, align 8
  %288 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 0, i32 1
  store i64 32, i64* %288, align 8
  %289 = call zeroext i1 @_ZN3gfx12HasExtensionERKN4base8internal9flat_treeINS0_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8identityENS4_4lessIvEENS4_6vectorIS7_NS4_9allocatorIS7_EEEEEERKS7_(%"class.base::internal::flat_tree"* nonnull dereferenceable(24) %31, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %17) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %286) #11
  br i1 %289, label %310, label %290

290:                                              ; preds = %285
  %291 = bitcast %"class.base::BasicStringPiece"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %291) #11
  %292 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %16, i64 0, i32 0
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0), i8** %292, align 8
  %293 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %16, i64 0, i32 1
  store i64 32, i64* %293, align 8
  %294 = call zeroext i1 @_ZN3gfx12HasExtensionERKN4base8internal9flat_treeINS0_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8identityENS4_4lessIvEENS4_6vectorIS7_NS4_9allocatorIS7_EEEEEERKS7_(%"class.base::internal::flat_tree"* nonnull dereferenceable(24) %31, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %16) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %291) #11
  br i1 %294, label %310, label %295

295:                                              ; preds = %290
  %296 = bitcast %"class.base::BasicStringPiece"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %296) #11
  %297 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %15, i64 0, i32 0
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0), i8** %297, align 8
  %298 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %15, i64 0, i32 1
  store i64 30, i64* %298, align 8
  %299 = call zeroext i1 @_ZN3gfx12HasExtensionERKN4base8internal9flat_treeINS0_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8identityENS4_4lessIvEENS4_6vectorIS7_NS4_9allocatorIS7_EEEEEERKS7_(%"class.base::internal::flat_tree"* nonnull dereferenceable(24) %31, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %15) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %296) #11
  br i1 %299, label %310, label %300

300:                                              ; preds = %295
  %301 = bitcast %"class.base::BasicStringPiece"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %301) #11
  %302 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %14, i64 0, i32 0
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0), i8** %302, align 8
  %303 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %14, i64 0, i32 1
  store i64 37, i64* %303, align 8
  %304 = call zeroext i1 @_ZN3gfx12HasExtensionERKN4base8internal9flat_treeINS0_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8identityENS4_4lessIvEENS4_6vectorIS7_NS4_9allocatorIS7_EEEEEERKS7_(%"class.base::internal::flat_tree"* nonnull dereferenceable(24) %31, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %14) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %301) #11
  br i1 %304, label %310, label %305

305:                                              ; preds = %300
  %306 = bitcast %"class.base::BasicStringPiece"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %306) #11
  %307 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %13, i64 0, i32 0
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i64 0, i64 0), i8** %307, align 8
  %308 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %13, i64 0, i32 1
  store i64 29, i64* %308, align 8
  %309 = call zeroext i1 @_ZN3gfx12HasExtensionERKN4base8internal9flat_treeINS0_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8identityENS4_4lessIvEENS4_6vectorIS7_NS4_9allocatorIS7_EEEEEERKS7_(%"class.base::internal::flat_tree"* nonnull dereferenceable(24) %31, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %13) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %306) #11
  br i1 %309, label %310, label %320

310:                                              ; preds = %280, %305, %300, %295, %290, %285
  %311 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %312 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %311, i64 0, i32 0
  %313 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %312) #11
  %314 = bitcast i8* %313 to %"class.gl::GLApi"**
  %315 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %314, align 8
  %316 = bitcast %"class.gl::GLApi"* %315 to void (%"class.gl::GLApi"*, i32, i32*)***
  %317 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %316, align 8
  %318 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %317, i64 193
  %319 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %318, align 8
  call void %319(%"class.gl::GLApi"* %315, i32 36183, i32* nonnull %34) #11
  br label %320

320:                                              ; preds = %310, %305
  %321 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %321) #11
  %322 = load i32, i32* %34, align 4
  call void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* nonnull sret %35, i32 %322) #11
  %323 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 8
  %324 = bitcast %"class.std::__1::basic_string"* %323 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %325 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %324, i64 0, i32 1, i32 0
  %326 = load i8, i8* %325, align 1
  %327 = icmp slt i8 %326, 0
  br i1 %327, label %328, label %331

328:                                              ; preds = %320
  %329 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %323, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %330 = load i8*, i8** %329, align 8
  call void @_ZdlPv(i8* %330) #12
  br label %331

331:                                              ; preds = %328, %320
  %332 = bitcast %"class.std::__1::basic_string"* %323 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %332, i8* nonnull align 8 %321, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %321) #11
  %333 = load i32, i32* %34, align 4
  call void @_ZN4base18UmaHistogramSparseEPKci(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i32 %333) #11
  %334 = bitcast %"struct.gl::GLWindowSystemBindingInfo"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %334) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %334, i8 -86, i64 96, i1 false)
  call void @_ZN2gl25GLWindowSystemBindingInfoC1Ev(%"struct.gl::GLWindowSystemBindingInfo"* nonnull %36) #11
  %335 = call zeroext i1 @_ZN2gl4init28GetGLWindowSystemBindingInfoERKNS_13GLVersionInfoEPNS_25GLWindowSystemBindingInfoE(%"struct.gl::GLVersionInfo"* nonnull dereferenceable(72) %33, %"struct.gl::GLWindowSystemBindingInfo"* nonnull %36) #11
  br i1 %335, label %336, label %466

336:                                              ; preds = %331
  %337 = getelementptr inbounds %"struct.gl::GLWindowSystemBindingInfo", %"struct.gl::GLWindowSystemBindingInfo"* %36, i64 0, i32 0
  %338 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 15
  %339 = icmp eq %"class.std::__1::basic_string"* %338, %337
  br i1 %339, label %367, label %340

340:                                              ; preds = %336
  %341 = bitcast %"class.std::__1::basic_string"* %338 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %342 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %341, i64 0, i32 1, i32 0
  %343 = load i8, i8* %342, align 1
  %344 = icmp slt i8 %343, 0
  %345 = bitcast %"struct.gl::GLWindowSystemBindingInfo"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %346 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %345, i64 0, i32 1, i32 0
  %347 = load i8, i8* %346, align 1
  %348 = icmp slt i8 %347, 0
  br i1 %344, label %358, label %349

349:                                              ; preds = %340
  br i1 %348, label %352, label %350

350:                                              ; preds = %349
  %351 = bitcast %"class.std::__1::basic_string"* %338 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %351, i8* nonnull align 8 %334, i64 24, i1 false) #11
  br label %367

352:                                              ; preds = %349
  %353 = getelementptr inbounds %"struct.gl::GLWindowSystemBindingInfo", %"struct.gl::GLWindowSystemBindingInfo"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %354 = load i8*, i8** %353, align 8
  %355 = getelementptr inbounds %"struct.gl::GLWindowSystemBindingInfo", %"struct.gl::GLWindowSystemBindingInfo"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %356 = load i64, i64* %355, align 8
  %357 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %338, i8* %354, i64 %356) #11
  br label %367

358:                                              ; preds = %340
  %359 = getelementptr inbounds %"struct.gl::GLWindowSystemBindingInfo", %"struct.gl::GLWindowSystemBindingInfo"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %360 = load i8*, i8** %359, align 8
  %361 = getelementptr inbounds %"struct.gl::GLWindowSystemBindingInfo", %"struct.gl::GLWindowSystemBindingInfo"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %362 = load i64, i64* %361, align 8
  %363 = zext i8 %347 to i64
  %364 = select i1 %348, i8* %360, i8* %334
  %365 = select i1 %348, i64 %362, i64 %363
  %366 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %338, i8* %364, i64 %365) #11
  br label %367

367:                                              ; preds = %336, %350, %352, %358
  %368 = getelementptr inbounds %"struct.gl::GLWindowSystemBindingInfo", %"struct.gl::GLWindowSystemBindingInfo"* %36, i64 0, i32 1
  %369 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 16
  %370 = icmp eq %"class.std::__1::basic_string"* %369, %368
  br i1 %370, label %400, label %371

371:                                              ; preds = %367
  %372 = bitcast %"class.std::__1::basic_string"* %369 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %373 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %372, i64 0, i32 1, i32 0
  %374 = load i8, i8* %373, align 1
  %375 = icmp slt i8 %374, 0
  %376 = bitcast %"class.std::__1::basic_string"* %368 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %377 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %376, i64 0, i32 1, i32 0
  %378 = load i8, i8* %377, align 1
  %379 = icmp slt i8 %378, 0
  br i1 %375, label %390, label %380

380:                                              ; preds = %371
  br i1 %379, label %384, label %381

381:                                              ; preds = %380
  %382 = bitcast %"class.std::__1::basic_string"* %369 to i8*
  %383 = bitcast %"class.std::__1::basic_string"* %368 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %382, i8* align 8 %383, i64 24, i1 false) #11
  br label %400

384:                                              ; preds = %380
  %385 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %368, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %386 = load i8*, i8** %385, align 8
  %387 = getelementptr inbounds %"struct.gl::GLWindowSystemBindingInfo", %"struct.gl::GLWindowSystemBindingInfo"* %36, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %388 = load i64, i64* %387, align 8
  %389 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %369, i8* %386, i64 %388) #11
  br label %400

390:                                              ; preds = %371
  %391 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %368, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %392 = load i8*, i8** %391, align 8
  %393 = getelementptr inbounds %"struct.gl::GLWindowSystemBindingInfo", %"struct.gl::GLWindowSystemBindingInfo"* %36, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %394 = load i64, i64* %393, align 8
  %395 = bitcast %"class.std::__1::basic_string"* %368 to i8*
  %396 = zext i8 %378 to i64
  %397 = select i1 %379, i8* %392, i8* %395
  %398 = select i1 %379, i64 %394, i64 %396
  %399 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %369, i8* %397, i64 %398) #11
  br label %400

400:                                              ; preds = %367, %381, %384, %390
  %401 = getelementptr inbounds %"struct.gl::GLWindowSystemBindingInfo", %"struct.gl::GLWindowSystemBindingInfo"* %36, i64 0, i32 2
  %402 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 17
  %403 = icmp eq %"class.std::__1::basic_string"* %402, %401
  br i1 %403, label %433, label %404

404:                                              ; preds = %400
  %405 = bitcast %"class.std::__1::basic_string"* %402 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %406 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %405, i64 0, i32 1, i32 0
  %407 = load i8, i8* %406, align 1
  %408 = icmp slt i8 %407, 0
  %409 = bitcast %"class.std::__1::basic_string"* %401 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %410 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %409, i64 0, i32 1, i32 0
  %411 = load i8, i8* %410, align 1
  %412 = icmp slt i8 %411, 0
  br i1 %408, label %423, label %413

413:                                              ; preds = %404
  br i1 %412, label %417, label %414

414:                                              ; preds = %413
  %415 = bitcast %"class.std::__1::basic_string"* %402 to i8*
  %416 = bitcast %"class.std::__1::basic_string"* %401 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %415, i8* align 8 %416, i64 24, i1 false) #11
  br label %433

417:                                              ; preds = %413
  %418 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %401, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %419 = load i8*, i8** %418, align 8
  %420 = getelementptr inbounds %"struct.gl::GLWindowSystemBindingInfo", %"struct.gl::GLWindowSystemBindingInfo"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %421 = load i64, i64* %420, align 8
  %422 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %402, i8* %419, i64 %421) #11
  br label %433

423:                                              ; preds = %404
  %424 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %401, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %425 = load i8*, i8** %424, align 8
  %426 = getelementptr inbounds %"struct.gl::GLWindowSystemBindingInfo", %"struct.gl::GLWindowSystemBindingInfo"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %427 = load i64, i64* %426, align 8
  %428 = bitcast %"class.std::__1::basic_string"* %401 to i8*
  %429 = zext i8 %411 to i64
  %430 = select i1 %412, i8* %425, i8* %428
  %431 = select i1 %412, i64 %427, i64 %429
  %432 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %402, i8* %430, i64 %431) #11
  br label %433

433:                                              ; preds = %400, %414, %417, %423
  %434 = getelementptr inbounds %"struct.gl::GLWindowSystemBindingInfo", %"struct.gl::GLWindowSystemBindingInfo"* %36, i64 0, i32 3
  %435 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 20
  %436 = icmp eq %"class.std::__1::basic_string"* %435, %434
  br i1 %436, label %466, label %437

437:                                              ; preds = %433
  %438 = bitcast %"class.std::__1::basic_string"* %435 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %439 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %438, i64 0, i32 1, i32 0
  %440 = load i8, i8* %439, align 1
  %441 = icmp slt i8 %440, 0
  %442 = bitcast %"class.std::__1::basic_string"* %434 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %443 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %442, i64 0, i32 1, i32 0
  %444 = load i8, i8* %443, align 1
  %445 = icmp slt i8 %444, 0
  br i1 %441, label %456, label %446

446:                                              ; preds = %437
  br i1 %445, label %450, label %447

447:                                              ; preds = %446
  %448 = bitcast %"class.std::__1::basic_string"* %435 to i8*
  %449 = bitcast %"class.std::__1::basic_string"* %434 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %448, i8* align 8 %449, i64 24, i1 false) #11
  br label %466

450:                                              ; preds = %446
  %451 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %434, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %452 = load i8*, i8** %451, align 8
  %453 = getelementptr inbounds %"struct.gl::GLWindowSystemBindingInfo", %"struct.gl::GLWindowSystemBindingInfo"* %36, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %454 = load i64, i64* %453, align 8
  %455 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %435, i8* %452, i64 %454) #11
  br label %466

456:                                              ; preds = %437
  %457 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %434, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %458 = load i8*, i8** %457, align 8
  %459 = getelementptr inbounds %"struct.gl::GLWindowSystemBindingInfo", %"struct.gl::GLWindowSystemBindingInfo"* %36, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %460 = load i64, i64* %459, align 8
  %461 = bitcast %"class.std::__1::basic_string"* %434 to i8*
  %462 = zext i8 %444 to i64
  %463 = select i1 %445, i8* %458, i8* %461
  %464 = select i1 %445, i64 %460, i64 %462
  %465 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %435, i8* %463, i64 %464) #11
  br label %466

466:                                              ; preds = %456, %450, %447, %433, %331
  %467 = bitcast %"class.base::BasicStringPiece"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %467) #11
  %468 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %12, i64 0, i32 0
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0), i8** %468, align 8
  %469 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %12, i64 0, i32 1
  store i64 17, i64* %469, align 8
  %470 = call zeroext i1 @_ZN3gfx12HasExtensionERKN4base8internal9flat_treeINS0_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8identityENS4_4lessIvEENS4_6vectorIS7_NS4_9allocatorIS7_EEEEEERKS7_(%"class.base::internal::flat_tree"* nonnull dereferenceable(24) %31, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %12) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %467) #11
  br i1 %470, label %481, label %471

471:                                              ; preds = %466
  %472 = bitcast %"class.base::BasicStringPiece"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %472) #11
  %473 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %11, i64 0, i32 0
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), i8** %473, align 8
  %474 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %11, i64 0, i32 1
  store i64 17, i64* %474, align 8
  %475 = call zeroext i1 @_ZN3gfx12HasExtensionERKN4base8internal9flat_treeINS0_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8identityENS4_4lessIvEENS4_6vectorIS7_NS4_9allocatorIS7_EEEEEERKS7_(%"class.base::internal::flat_tree"* nonnull dereferenceable(24) %31, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %11) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %472) #11
  br i1 %475, label %481, label %476

476:                                              ; preds = %471
  %477 = bitcast %"class.base::BasicStringPiece"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %477) #11
  %478 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %10, i64 0, i32 0
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i8** %478, align 8
  %479 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %10, i64 0, i32 1
  store i64 17, i64* %479, align 8
  %480 = call zeroext i1 @_ZN3gfx12HasExtensionERKN4base8internal9flat_treeINS0_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8identityENS4_4lessIvEENS4_6vectorIS7_NS4_9allocatorIS7_EEEEEERKS7_(%"class.base::internal::flat_tree"* nonnull dereferenceable(24) %31, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %10) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %477) #11
  br i1 %480, label %481, label %492

481:                                              ; preds = %466, %471, %476
  %482 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %483 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %482, i64 0, i32 0
  %484 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %483) #11
  %485 = bitcast i8* %484 to %"class.gl::GLApi"**
  %486 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %485, align 8
  %487 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 18
  %488 = bitcast %"class.gl::GLApi"* %486 to void (%"class.gl::GLApi"*, i32, i32*)***
  %489 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %488, align 8
  %490 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %489, i64 193
  %491 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %490, align 8
  call void %491(%"class.gl::GLApi"* %486, i32 33366, i32* %487) #11
  br label %492

492:                                              ; preds = %481, %476
  %493 = bitcast %class.sk_sp* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %493)
  %494 = bitcast %class.sk_sp.302* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %494) #11
  call void @_ZN2gl4init19CreateGrGLInterfaceERKNS_13GLVersionInfoEbPNS_16ProgressReporterE(%class.sk_sp.302* nonnull sret %7, %"struct.gl::GLVersionInfo"* nonnull dereferenceable(72) %33, i1 zeroext false, %"class.gl::ProgressReporter"* null) #11
  %495 = bitcast %class.sk_sp.302* %7 to i64*
  %496 = load i64, i64* %495, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %494) #11
  %497 = icmp eq i64 %496, 0
  br i1 %497, label %530, label %498

498:                                              ; preds = %492
  %499 = bitcast %class.sk_sp.303* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %499) #11
  %500 = getelementptr inbounds %class.sk_sp.303, %class.sk_sp.303* %8, i64 0, i32 0
  store %class.GrDirectContext* inttoptr (i64 -6148914691236517206 to %class.GrDirectContext*), %class.GrDirectContext** %500, align 8
  %501 = bitcast %class.sk_sp* %9 to i64*
  store i64 %496, i64* %501, align 8
  call void @_ZN15GrDirectContext6MakeGLE5sk_spIK13GrGLInterfaceE(%class.sk_sp.303* nonnull sret %8, %class.sk_sp* nonnull %9) #11
  %502 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %9, i64 0, i32 0
  %503 = load %struct.GrGLInterface*, %struct.GrGLInterface** %502, align 8
  %504 = icmp eq %struct.GrGLInterface* %503, null
  br i1 %504, label %515, label %505

505:                                              ; preds = %498
  %506 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %503, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %507 = atomicrmw add i32* %506, i32 -1 acq_rel
  %508 = icmp eq i32 %507, 1
  br i1 %508, label %509, label %515

509:                                              ; preds = %505
  %510 = bitcast %struct.GrGLInterface* %503 to %class.SkRefCntBase*
  %511 = bitcast %struct.GrGLInterface* %503 to void (%class.SkRefCntBase*)***
  %512 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %511, align 8
  %513 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %512, i64 2
  %514 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %513, align 8
  call void %514(%class.SkRefCntBase* nonnull %510) #11
  br label %515

515:                                              ; preds = %509, %505, %498
  %516 = load %class.GrDirectContext*, %class.GrDirectContext** %500, align 8
  %517 = icmp ne %class.GrDirectContext* %516, null
  %518 = icmp eq %class.GrDirectContext* %516, null
  br i1 %518, label %529, label %519

519:                                              ; preds = %515
  %520 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %516, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %521 = atomicrmw add i32* %520, i32 -1 acq_rel
  %522 = icmp eq i32 %521, 1
  br i1 %522, label %523, label %529

523:                                              ; preds = %519
  %524 = bitcast %class.GrDirectContext* %516 to %class.SkRefCntBase*
  %525 = bitcast %class.GrDirectContext* %516 to void (%class.SkRefCntBase*)***
  %526 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %525, align 8
  %527 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %526, i64 2
  %528 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %527, align 8
  call void %528(%class.SkRefCntBase* nonnull %524) #11
  br label %529

529:                                              ; preds = %523, %519, %515
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %499) #11
  br label %530

530:                                              ; preds = %492, %529
  %531 = phi i1 [ %517, %529 ], [ false, %492 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %493)
  %532 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 30
  %533 = zext i1 %531 to i8
  store i8 %533, i8* %532, align 8
  %534 = inttoptr i64 %106 to void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)***
  %535 = load void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)**, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*** %534, align 8
  %536 = getelementptr inbounds void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %535, i64 1
  %537 = load void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %536, align 8
  call void %537(%"class.gl::GLContext"* nonnull %107, %"class.gl::GLSurface"* nonnull %54) #11
  %538 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %538) #11
  %539 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %540 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %541 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %542 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %541, i64 0, i32 1, i32 0
  %543 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %543, i8 -86, i64 24, i1 false)
  %544 = load i8, i8* %542, align 1, !noalias !3
  %545 = icmp slt i8 %544, 0
  %546 = load i8*, i8** %151, align 8, !noalias !3
  %547 = load i64, i64* %152, align 8, !noalias !3
  %548 = zext i8 %544 to i64
  %549 = select i1 %545, i8* %546, i8* %150
  %550 = select i1 %545, i64 %547, i64 %548
  %551 = icmp eq i64 %550, 0
  br i1 %551, label %760, label %552

552:                                              ; preds = %530
  %553 = getelementptr inbounds i8, i8* %549, i64 %550
  br label %554

554:                                              ; preds = %761, %552
  %555 = phi i8* [ %549, %552 ], [ %762, %761 ]
  %556 = load i8, i8* %555, align 1, !noalias !3
  %557 = add i8 %556, -48
  %558 = icmp ult i8 %557, 10
  br i1 %558, label %559, label %761

559:                                              ; preds = %554
  %560 = icmp eq i8* %555, %553
  %561 = ptrtoint i8* %555 to i64
  %562 = ptrtoint i8* %549 to i64
  %563 = sub i64 %561, %562
  %564 = icmp eq i64 %563, -1
  %565 = or i1 %560, %564
  br i1 %565, label %760, label %566

566:                                              ; preds = %559
  %567 = icmp ugt i64 %550, %563
  br i1 %567, label %568, label %588

568:                                              ; preds = %566
  %569 = zext i8 %556 to i64
  %570 = shl i64 1, %569
  %571 = and i64 %570, 288019269919178752
  %572 = icmp eq i64 %571, 0
  br i1 %572, label %588, label %573

573:                                              ; preds = %568, %577
  %574 = phi i8* [ %575, %577 ], [ %555, %568 ]
  %575 = getelementptr inbounds i8, i8* %574, i64 1
  %576 = icmp eq i8* %575, %553
  br i1 %576, label %588, label %577

577:                                              ; preds = %573
  %578 = load i8, i8* %575, align 1, !noalias !3
  %579 = zext i8 %578 to i64
  %580 = icmp ugt i8 %578, 63
  %581 = shl i64 1, %579
  %582 = and i64 %581, 288019269919178752
  %583 = icmp eq i64 %582, 0
  %584 = or i1 %580, %583
  br i1 %584, label %585, label %573

585:                                              ; preds = %577
  %586 = ptrtoint i8* %575 to i64
  %587 = sub i64 %586, %562
  br label %588

588:                                              ; preds = %573, %568, %585, %566
  %589 = phi i64 [ -1, %566 ], [ %587, %585 ], [ %563, %568 ], [ -1, %573 ]
  %590 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %590) #11, !noalias !3
  %591 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %592 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %590, i8 0, i64 24, i1 false) #11, !noalias !3
  %593 = icmp eq i64 %589, -1
  br i1 %593, label %604, label %594

594:                                              ; preds = %588
  %595 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %595) #11, !noalias !3
  %596 = sub i64 %589, %563
  %597 = bitcast %"class.std::__1::basic_string"* %29 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %29, i64 %563, i64 %596, %"class.std::__1::allocator"* nonnull dereferenceable(1) %597) #11, !noalias !3
  %598 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %599 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %598, i64 0, i32 1, i32 0
  %600 = load i8, i8* %599, align 1, !noalias !3
  %601 = icmp slt i8 %600, 0
  br i1 %601, label %602, label %613

602:                                              ; preds = %594
  %603 = load i8*, i8** %591, align 8, !noalias !3
  call void @_ZdlPv(i8* %603) #12, !noalias !3
  br label %613

604:                                              ; preds = %588
  %605 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %605) #11, !noalias !3
  %606 = bitcast %"class.std::__1::basic_string"* %29 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %29, i64 %563, i64 -1, %"class.std::__1::allocator"* nonnull dereferenceable(1) %606) #11, !noalias !3
  %607 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %608 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %607, i64 0, i32 1, i32 0
  %609 = load i8, i8* %608, align 1, !noalias !3
  %610 = icmp slt i8 %609, 0
  br i1 %610, label %611, label %613

611:                                              ; preds = %604
  %612 = load i8*, i8** %591, align 8, !noalias !3
  call void @_ZdlPv(i8* %612) #12, !noalias !3
  br label %613

613:                                              ; preds = %604, %611, %594, %602
  %614 = phi i8* [ %595, %602 ], [ %595, %594 ], [ %605, %611 ], [ %605, %604 ]
  %615 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %598, %602 ], [ %598, %594 ], [ %607, %611 ], [ %607, %604 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %590, i8* nonnull align 8 %614, i64 24, i1 false) #11, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %614) #11, !noalias !3
  %616 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %616) #11, !noalias !3
  %617 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %618 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %619 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %615, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %616, i8 -86, i64 24, i1 false) #11, !noalias !3
  %620 = load i8, i8* %619, align 1, !noalias !3
  %621 = icmp slt i8 %620, 0
  %622 = load i8*, i8** %591, align 8, !noalias !3
  %623 = select i1 %621, i8* %622, i8* %590
  %624 = load i64, i64* %592, align 8, !noalias !3
  %625 = zext i8 %620 to i64
  %626 = select i1 %621, i64 %624, i64 %625
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %5, i8* %623, i64 %626, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i64 0, i64 0), i64 1, i32 1, i32 0) #11, !noalias !3
  %627 = bitcast %"class.std::__1::basic_string"** %618 to i64*
  %628 = load i64, i64* %627, align 8, !noalias !3
  %629 = bitcast %"class.std::__1::vector"* %5 to i64*
  %630 = load i64, i64* %629, align 8, !noalias !3
  %631 = sub i64 %628, %630
  %632 = sdiv exact i64 %631, 24
  %633 = icmp ugt i64 %632, 1
  %634 = inttoptr i64 %630 to %"class.std::__1::basic_string"*
  %635 = inttoptr i64 %628 to %"class.std::__1::basic_string"*
  br i1 %633, label %636, label %732

636:                                              ; preds = %613
  %637 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %637) #11, !noalias !3
  %638 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %639 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %640 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %637, i8 0, i64 24, i1 false) #11, !alias.scope !6, !noalias !3
  %641 = inttoptr i64 %630 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %642 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %641, i64 0, i32 1, i32 0
  %643 = load i8, i8* %642, align 1, !noalias !9
  %644 = icmp slt i8 %643, 0
  br i1 %644, label %645, label %650

645:                                              ; preds = %636
  %646 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %634, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %647 = load i64, i64* %646, align 8, !noalias !9
  %648 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %634, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %649 = load i8*, i8** %648, align 8, !noalias !9
  br label %653

650:                                              ; preds = %636
  %651 = zext i8 %643 to i64
  %652 = inttoptr i64 %630 to i8*
  br label %653

653:                                              ; preds = %650, %645
  %654 = phi i64 [ %647, %645 ], [ %651, %650 ]
  %655 = phi i8* [ %649, %645 ], [ %652, %650 ]
  %656 = add i64 %654, 1
  %657 = icmp ugt i64 %656, -17
  br i1 %657, label %658, label %660

658:                                              ; preds = %653
  %659 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %659) #13, !noalias !3
  unreachable

660:                                              ; preds = %653
  %661 = icmp ult i64 %656, 23
  br i1 %661, label %668, label %662

662:                                              ; preds = %660
  %663 = add nuw i64 %654, 17
  %664 = and i64 %663, -16
  %665 = call i8* @_Znwm(i64 %664) #12, !noalias !3
  store i8* %665, i8** %638, align 8, !alias.scope !6, !noalias !3
  %666 = or i64 %664, -9223372036854775808
  store i64 %666, i64* %640, align 8, !alias.scope !6, !noalias !3
  store i64 %654, i64* %639, align 8, !alias.scope !6, !noalias !3
  %667 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %673

668:                                              ; preds = %660
  %669 = trunc i64 %654 to i8
  %670 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %671 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %670, i64 0, i32 1, i32 0
  store i8 %669, i8* %671, align 1, !alias.scope !6, !noalias !3
  %672 = icmp eq i64 %654, 0
  br i1 %672, label %676, label %673

673:                                              ; preds = %668, %662
  %674 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %670, %668 ], [ %667, %662 ]
  %675 = phi i8* [ %637, %668 ], [ %665, %662 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %675, i8* align 1 %655, i64 %654, i1 false) #11, !noalias !3
  br label %676

676:                                              ; preds = %673, %668
  %677 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %674, %673 ], [ %670, %668 ]
  %678 = phi i8* [ %675, %673 ], [ %637, %668 ]
  %679 = getelementptr inbounds i8, i8* %678, i64 %654
  store i8 0, i8* %679, align 1, !noalias !3
  %680 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i64 0, i64 0), i64 1) #11, !noalias !3
  %681 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %617, align 8, !noalias !3
  %682 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %681, i64 1
  %683 = bitcast %"class.std::__1::basic_string"* %682 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %684 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %683, i64 0, i32 1, i32 0
  %685 = load i8, i8* %684, align 1, !noalias !10
  %686 = icmp slt i8 %685, 0
  %687 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %682, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %688 = load i8*, i8** %687, align 8, !noalias !10
  %689 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %681, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %690 = load i64, i64* %689, align 8, !noalias !10
  %691 = bitcast %"class.std::__1::basic_string"* %682 to i8*
  %692 = zext i8 %685 to i64
  %693 = select i1 %686, i8* %688, i8* %691
  %694 = select i1 %686, i64 %690, i64 %692
  %695 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %693, i64 %694) #11, !noalias !10
  %696 = bitcast %"class.std::__1::basic_string"* %695 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %538, i8* align 8 %696, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %696, i8 0, i64 24, i1 false) #11, !noalias !10
  %697 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %677, i64 0, i32 1, i32 0
  %698 = load i8, i8* %697, align 1, !noalias !3
  %699 = icmp slt i8 %698, 0
  br i1 %699, label %700, label %702

700:                                              ; preds = %676
  %701 = load i8*, i8** %638, align 8, !noalias !3
  call void @_ZdlPv(i8* %701) #12, !noalias !3
  br label %702

702:                                              ; preds = %700, %676
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %637) #11, !noalias !3
  %703 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %617, align 8, !noalias !3
  %704 = icmp eq %"class.std::__1::basic_string"* %703, null
  br i1 %704, label %726, label %705

705:                                              ; preds = %702
  %706 = bitcast %"class.std::__1::basic_string"* %703 to i8*
  %707 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %618, align 8, !noalias !3
  %708 = icmp eq %"class.std::__1::basic_string"* %707, %703
  br i1 %708, label %724, label %709

709:                                              ; preds = %705, %719
  %710 = phi %"class.std::__1::basic_string"* [ %711, %719 ], [ %707, %705 ]
  %711 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %710, i64 -1
  %712 = bitcast %"class.std::__1::basic_string"* %711 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %713 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %712, i64 0, i32 1, i32 0
  %714 = load i8, i8* %713, align 1, !noalias !3
  %715 = icmp slt i8 %714, 0
  br i1 %715, label %716, label %719

716:                                              ; preds = %709
  %717 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %711, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %718 = load i8*, i8** %717, align 8, !noalias !3
  call void @_ZdlPv(i8* %718) #12, !noalias !3
  br label %719

719:                                              ; preds = %716, %709
  %720 = icmp eq %"class.std::__1::basic_string"* %711, %703
  br i1 %720, label %721, label %709

721:                                              ; preds = %719
  %722 = bitcast %"class.std::__1::vector"* %5 to i8**
  %723 = load i8*, i8** %722, align 8, !noalias !3
  br label %724

724:                                              ; preds = %721, %705
  %725 = phi i8* [ %723, %721 ], [ %706, %705 ]
  store %"class.std::__1::basic_string"* %703, %"class.std::__1::basic_string"** %618, align 8, !noalias !3
  call void @_ZdlPv(i8* %725) #12, !noalias !3
  br label %726

726:                                              ; preds = %724, %702
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %616) #11, !noalias !3
  %727 = load i8, i8* %619, align 1, !noalias !3
  %728 = icmp slt i8 %727, 0
  br i1 %728, label %729, label %731

729:                                              ; preds = %726
  %730 = load i8*, i8** %591, align 8, !noalias !3
  call void @_ZdlPv(i8* %730) #12, !noalias !3
  br label %731

731:                                              ; preds = %729, %726
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %590) #11, !noalias !3
  br label %764

732:                                              ; preds = %613
  %733 = icmp eq i64 %630, 0
  br i1 %733, label %754, label %734

734:                                              ; preds = %732
  %735 = inttoptr i64 %630 to i8*
  %736 = icmp eq %"class.std::__1::basic_string"* %635, %634
  br i1 %736, label %752, label %737

737:                                              ; preds = %734, %747
  %738 = phi %"class.std::__1::basic_string"* [ %739, %747 ], [ %635, %734 ]
  %739 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %738, i64 -1
  %740 = bitcast %"class.std::__1::basic_string"* %739 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %741 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %740, i64 0, i32 1, i32 0
  %742 = load i8, i8* %741, align 1, !noalias !3
  %743 = icmp slt i8 %742, 0
  br i1 %743, label %744, label %747

744:                                              ; preds = %737
  %745 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %739, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %746 = load i8*, i8** %745, align 8, !noalias !3
  call void @_ZdlPv(i8* %746) #12, !noalias !3
  br label %747

747:                                              ; preds = %744, %737
  %748 = icmp eq %"class.std::__1::basic_string"* %739, %634
  br i1 %748, label %749, label %737

749:                                              ; preds = %747
  %750 = bitcast %"class.std::__1::vector"* %5 to i8**
  %751 = load i8*, i8** %750, align 8, !noalias !3
  br label %752

752:                                              ; preds = %749, %734
  %753 = phi i8* [ %751, %749 ], [ %735, %734 ]
  store %"class.std::__1::basic_string"* %634, %"class.std::__1::basic_string"** %618, align 8, !noalias !3
  call void @_ZdlPv(i8* %753) #12, !noalias !3
  br label %754

754:                                              ; preds = %752, %732
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %616) #11, !noalias !3
  %755 = load i8, i8* %619, align 1, !noalias !3
  %756 = icmp slt i8 %755, 0
  br i1 %756, label %757, label %759

757:                                              ; preds = %754
  %758 = load i8*, i8** %591, align 8, !noalias !3
  call void @_ZdlPv(i8* %758) #12, !noalias !3
  br label %759

759:                                              ; preds = %757, %754
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %590) #11, !noalias !3
  br label %760

760:                                              ; preds = %761, %759, %559, %530
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %538, i8 0, i64 24, i1 false) #11, !alias.scope !3
  br label %764

761:                                              ; preds = %554
  %762 = getelementptr inbounds i8, i8* %555, i64 1
  %763 = icmp eq i8* %762, %553
  br i1 %763, label %760, label %554

764:                                              ; preds = %731, %760
  %765 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 6
  %766 = icmp eq %"class.std::__1::basic_string"* %765, %37
  br i1 %766, label %790, label %767

767:                                              ; preds = %764
  %768 = bitcast %"class.std::__1::basic_string"* %765 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %769 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %768, i64 0, i32 1, i32 0
  %770 = load i8, i8* %769, align 1
  %771 = icmp slt i8 %770, 0
  %772 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %773 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %772, i64 0, i32 1, i32 0
  %774 = load i8, i8* %773, align 1
  %775 = icmp slt i8 %774, 0
  br i1 %771, label %783, label %776

776:                                              ; preds = %767
  br i1 %775, label %779, label %777

777:                                              ; preds = %776
  %778 = bitcast %"class.std::__1::basic_string"* %765 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %778, i8* nonnull align 8 %538, i64 24, i1 false) #11
  br label %790

779:                                              ; preds = %776
  %780 = load i8*, i8** %539, align 8
  %781 = load i64, i64* %540, align 8
  %782 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %765, i8* %780, i64 %781) #11
  br label %790

783:                                              ; preds = %767
  %784 = load i8*, i8** %539, align 8
  %785 = load i64, i64* %540, align 8
  %786 = zext i8 %774 to i64
  %787 = select i1 %775, i8* %784, i8* %538
  %788 = select i1 %775, i64 %785, i64 %786
  %789 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %765, i8* %787, i64 %788) #11
  br label %790

790:                                              ; preds = %764, %777, %779, %783
  %791 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 7
  %792 = icmp eq %"class.std::__1::basic_string"* %791, %37
  br i1 %792, label %793, label %795

793:                                              ; preds = %790
  %794 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %818

795:                                              ; preds = %790
  %796 = bitcast %"class.std::__1::basic_string"* %791 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %797 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %796, i64 0, i32 1, i32 0
  %798 = load i8, i8* %797, align 1
  %799 = icmp slt i8 %798, 0
  %800 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %801 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %800, i64 0, i32 1, i32 0
  %802 = load i8, i8* %801, align 1
  %803 = icmp slt i8 %802, 0
  br i1 %799, label %811, label %804

804:                                              ; preds = %795
  br i1 %803, label %807, label %805

805:                                              ; preds = %804
  %806 = bitcast %"class.std::__1::basic_string"* %791 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %806, i8* nonnull align 8 %538, i64 24, i1 false) #11
  br label %818

807:                                              ; preds = %804
  %808 = load i8*, i8** %539, align 8
  %809 = load i64, i64* %540, align 8
  %810 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %791, i8* %808, i64 %809) #11
  br label %818

811:                                              ; preds = %795
  %812 = load i8*, i8** %539, align 8
  %813 = load i64, i64* %540, align 8
  %814 = zext i8 %802 to i64
  %815 = select i1 %803, i8* %812, i8* %538
  %816 = select i1 %803, i64 %813, i64 %814
  %817 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %791, i8* %815, i64 %816) #11
  br label %818

818:                                              ; preds = %793, %805, %807, %811
  %819 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %794, %793 ], [ %800, %805 ], [ %800, %807 ], [ %800, %811 ]
  call void @_ZN3gpu17IdentifyActiveGPUEPNS_7GPUInfoE(%"struct.gpu::GPUInfo"* %0)
  %820 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %819, i64 0, i32 1, i32 0
  %821 = load i8, i8* %820, align 1
  %822 = icmp slt i8 %821, 0
  br i1 %822, label %823, label %825

823:                                              ; preds = %818
  %824 = load i8*, i8** %539, align 8
  call void @_ZdlPv(i8* %824) #12
  br label %825

825:                                              ; preds = %818, %823
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %538) #11
  call void @_ZN2gl25GLWindowSystemBindingInfoD1Ev(%"struct.gl::GLWindowSystemBindingInfo"* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %334) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %281) #11
  %826 = load i8, i8* %241, align 1
  %827 = icmp slt i8 %826, 0
  br i1 %827, label %828, label %831

828:                                              ; preds = %825
  %829 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %239, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %830 = load i8*, i8** %829, align 8
  call void @_ZdlPv(i8* %830) #12
  br label %831

831:                                              ; preds = %828, %825
  %832 = load i8, i8* %199, align 1
  %833 = icmp slt i8 %832, 0
  br i1 %833, label %834, label %837

834:                                              ; preds = %831
  %835 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %197, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %836 = load i8*, i8** %835, align 8
  call void @_ZdlPv(i8* %836) #12
  br label %837

837:                                              ; preds = %831, %834
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %181) #11
  %838 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %166, align 8
  %839 = icmp eq %"class.base::BasicStringPiece"* %838, null
  br i1 %839, label %844, label %840

840:                                              ; preds = %837
  %841 = ptrtoint %"class.base::BasicStringPiece"* %838 to i64
  %842 = bitcast %"class.base::BasicStringPiece"** %167 to i64*
  store i64 %841, i64* %842, align 8
  %843 = bitcast %"class.base::BasicStringPiece"* %838 to i8*
  call void @_ZdlPv(i8* %843) #12
  br label %844

844:                                              ; preds = %837, %840
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %165) #11
  %845 = load i8, i8* %542, align 1
  %846 = icmp slt i8 %845, 0
  br i1 %846, label %847, label %849

847:                                              ; preds = %844
  %848 = load i8*, i8** %151, align 8
  call void @_ZdlPv(i8* %848) #12
  br label %849

849:                                              ; preds = %844, %847
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %150) #11
  %850 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %107, i64 0, i32 1
  %851 = getelementptr inbounds %"class.base::RefCounted.93", %"class.base::RefCounted.93"* %850, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %851) #11
  %852 = getelementptr inbounds %"class.base::RefCounted.93", %"class.base::RefCounted.93"* %850, i64 0, i32 0, i32 0
  %853 = load i32, i32* %852, align 4
  %854 = icmp eq i32 %853, 0
  br i1 %854, label %855, label %862

855:                                              ; preds = %849
  %856 = getelementptr inbounds %"class.base::RefCounted.93", %"class.base::RefCounted.93"* %850, i64 -2
  %857 = bitcast %"class.base::RefCounted.93"* %856 to %"class.gl::GLContext"*
  %858 = bitcast %"class.base::RefCounted.93"* %856 to void (%"class.gl::GLContext"*)***
  %859 = load void (%"class.gl::GLContext"*)**, void (%"class.gl::GLContext"*)*** %858, align 8
  %860 = getelementptr inbounds void (%"class.gl::GLContext"*)*, void (%"class.gl::GLContext"*)** %859, i64 15
  %861 = load void (%"class.gl::GLContext"*)*, void (%"class.gl::GLContext"*)** %860, align 8
  call void %861(%"class.gl::GLContext"* nonnull %857) #11
  br label %862

862:                                              ; preds = %849, %855, %111, %109
  %863 = phi i1 [ true, %855 ], [ false, %109 ], [ false, %111 ], [ true, %849 ]
  %864 = getelementptr inbounds %"class.gl::GLSurface", %"class.gl::GLSurface"* %54, i64 0, i32 1
  %865 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %864, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %865) #11
  %866 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %864, i64 0, i32 0, i32 0
  %867 = load i32, i32* %866, align 4
  %868 = icmp eq i32 %867, 0
  br i1 %868, label %869, label %876

869:                                              ; preds = %862
  %870 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %864, i64 -2
  %871 = bitcast %"class.base::RefCounted"* %870 to %"class.gl::GLSurface"*
  %872 = bitcast %"class.base::RefCounted"* %870 to void (%"class.gl::GLSurface"*)***
  %873 = load void (%"class.gl::GLSurface"*)**, void (%"class.gl::GLSurface"*)*** %872, align 8
  %874 = getelementptr inbounds void (%"class.gl::GLSurface"*)*, void (%"class.gl::GLSurface"*)** %873, i64 62
  %875 = load void (%"class.gl::GLSurface"*)*, void (%"class.gl::GLSurface"*)** %874, align 8
  call void %875(%"class.gl::GLSurface"* nonnull %871) #11
  br label %876

876:                                              ; preds = %65, %63, %862, %869
  %877 = phi i1 [ %863, %862 ], [ %863, %869 ], [ false, %63 ], [ false, %65 ]
  %878 = icmp eq i8* %48, null
  br i1 %878, label %883, label %879

879:                                              ; preds = %876
  %880 = load i8, i8* %48, align 1
  %881 = icmp eq i8 %880, 0
  br i1 %881, label %883, label %882

882:                                              ; preds = %879
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %48, i8* %49, i64 %50) #11
  br label %883

883:                                              ; preds = %876, %879, %882
  ret i1 %877
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #2

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_111GetGLStringEj(%"class.std::__1::basic_string"* noalias sret, i32) unnamed_addr #0 {
  %3 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %4 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %3, i64 0, i32 0
  %5 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %4) #11
  %6 = bitcast i8* %5 to %"class.gl::GLApi"**
  %7 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %6, align 8
  %8 = bitcast %"class.gl::GLApi"* %7 to i8* (%"class.gl::GLApi"*, i32)***
  %9 = load i8* (%"class.gl::GLApi"*, i32)**, i8* (%"class.gl::GLApi"*, i32)*** %8, align 8
  %10 = getelementptr inbounds i8* (%"class.gl::GLApi"*, i32)*, i8* (%"class.gl::GLApi"*, i32)** %9, i64 242
  %11 = load i8* (%"class.gl::GLApi"*, i32)*, i8* (%"class.gl::GLApi"*, i32)** %10, align 8
  %12 = tail call i8* %11(%"class.gl::GLApi"* %7, i32 %1) #11
  %13 = icmp eq i8* %12, null
  br i1 %13, label %40, label %14

14:                                               ; preds = %2
  %15 = tail call i64 @strlen(i8* nonnull %12) #11
  %16 = icmp ugt i64 %15, -17
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %18) #13
  unreachable

19:                                               ; preds = %14
  %20 = icmp ult i64 %15, 23
  br i1 %20, label %29, label %21

21:                                               ; preds = %19
  %22 = add nuw i64 %15, 16
  %23 = and i64 %22, -16
  %24 = tail call i8* @_Znwm(i64 %23) #12
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %24, i8** %25, align 8
  %26 = or i64 %23, -9223372036854775808
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %15, i64* %28, align 8
  br label %35

29:                                               ; preds = %19
  %30 = trunc i64 %15 to i8
  %31 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  store i8 %30, i8* %32, align 1
  %33 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %34 = icmp eq i64 %15, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %29, %21
  %36 = phi i8* [ %24, %21 ], [ %33, %29 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %36, i8* nonnull align 1 %12, i64 %15, i1 false) #11
  br label %37

37:                                               ; preds = %29, %35
  %38 = phi i8* [ %33, %29 ], [ %36, %35 ]
  %39 = getelementptr inbounds i8, i8* %38, i64 %15
  store i8 0, i8* %39, align 1
  br label %42

40:                                               ; preds = %2
  %41 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #11
  br label %42

42:                                               ; preds = %40, %37
  ret void
}

declare void @_ZN2gl33GetGLExtensionsFromCurrentContextEv(%"class.std::__1::basic_string"* sret) local_unnamed_addr #2

declare void @_ZN3gfx16MakeExtensionSetERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::internal::flat_tree"* sret, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2gl13GLVersionInfoC1EPKcS2_RKN4base8internal9flat_treeINS3_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS3_8identityENS7_4lessIvEENS7_6vectorISA_NS7_9allocatorISA_EEEEEE(%"struct.gl::GLVersionInfo"*, i8*, i8*, %"class.base::internal::flat_tree"* dereferenceable(24)) unnamed_addr #2

declare dereferenceable(120) %"struct.gpu::GPUInfo::GPUDevice"* @_ZN3gpu7GPUInfo10active_gpuEv(%"struct.gpu::GPUInfo"*) local_unnamed_addr #2

declare void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #2

declare void @_ZN4base18UmaHistogramSparseEPKci(i8*, i32) local_unnamed_addr #2

declare void @_ZN2gl25GLWindowSystemBindingInfoC1Ev(%"struct.gl::GLWindowSystemBindingInfo"*) unnamed_addr #2

declare zeroext i1 @_ZN2gl4init28GetGLWindowSystemBindingInfoERKNS_13GLVersionInfoEPNS_25GLWindowSystemBindingInfoE(%"struct.gl::GLVersionInfo"* dereferenceable(72), %"struct.gl::GLWindowSystemBindingInfo"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17IdentifyActiveGPUEPNS_7GPUInfoE(%"struct.gpu::GPUInfo"*) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca [5 x %"class.std::__1::basic_string"], align 16
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  store i8 6, i8* %13, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i64 0, i64 0), i64 6, i1 false) #11
  %15 = getelementptr inbounds i8, i8* %10, i64 6
  store i8 0, i8* %15, align 2
  %16 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = bitcast i64* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false)
  store i8 7, i8* %19, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0), i64 7, i1 false) #11
  %22 = getelementptr inbounds i8, i8* %16, i64 7
  store i8 0, i8* %22, align 1
  %23 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false)
  store i8 5, i8* %26, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0), i64 5, i1 false) #11
  %28 = getelementptr inbounds i8, i8* %23, i64 5
  store i8 0, i8* %28, align 1
  %29 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #11
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 24, i1 false)
  store i8 3, i8* %32, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), i64 3, i1 false) #11
  %34 = getelementptr inbounds i8, i8* %29, i64 3
  store i8 0, i8* %34, align 1
  %35 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #11
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 24, i1 false)
  store i8 3, i8* %38, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i64 0, i64 0), i64 3, i1 false) #11
  %40 = getelementptr inbounds i8, i8* %35, i64 3
  store i8 0, i8* %40, align 1
  %41 = bitcast [5 x %"class.std::__1::basic_string"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %41) #11
  %42 = getelementptr inbounds [5 x %"class.std::__1::basic_string"], [5 x %"class.std::__1::basic_string"]* %7, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %41, i8* nonnull align 8 %10, i64 24, i1 false) #11
  %43 = getelementptr inbounds [5 x %"class.std::__1::basic_string"], [5 x %"class.std::__1::basic_string"]* %7, i64 0, i64 1
  %44 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* nonnull align 8 %16, i64 24, i1 false) #11
  %45 = getelementptr inbounds [5 x %"class.std::__1::basic_string"], [5 x %"class.std::__1::basic_string"]* %7, i64 0, i64 2
  %46 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %46, i8* nonnull align 8 %23, i64 24, i1 false) #11
  %47 = getelementptr inbounds [5 x %"class.std::__1::basic_string"], [5 x %"class.std::__1::basic_string"]* %7, i64 0, i64 3
  %48 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* nonnull align 8 %29, i64 24, i1 false) #11
  %49 = getelementptr inbounds [5 x %"class.std::__1::basic_string"], [5 x %"class.std::__1::basic_string"]* %7, i64 0, i64 4
  %50 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %50, i8* nonnull align 8 %35, i64 24, i1 false) #11
  %51 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 5, i32 0, i32 1
  %52 = bitcast %"struct.gpu::GPUInfo::GPUDevice"** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 5
  %55 = bitcast %"class.std::__1::vector.14"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 5
  %58 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 5, i32 0, i32 1
  %59 = bitcast %"struct.gpu::GPUInfo::GPUDevice"** %58 to i64*
  %60 = bitcast %"class.std::__1::vector.14"* %57 to i64*
  %61 = icmp eq i64 %53, %56
  br i1 %61, label %62, label %125

62:                                               ; preds = %1
  %63 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 4, i32 2
  store i8 1, i8* %63, align 8
  %64 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 12
  %65 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 4, i32 4
  %66 = bitcast %"class.std::__1::basic_string"* %65 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  %70 = bitcast %"class.std::__1::basic_string"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %69, label %84, label %74

74:                                               ; preds = %62
  br i1 %73, label %78, label %75

75:                                               ; preds = %74
  %76 = bitcast %"class.std::__1::basic_string"* %65 to i8*
  %77 = bitcast %"class.std::__1::basic_string"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 24, i1 false) #11
  br label %94

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %82 = load i64, i64* %81, align 8
  %83 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %65, i8* %80, i64 %82) #11
  br label %94

84:                                               ; preds = %62
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"class.std::__1::basic_string"* %64 to i8*
  %90 = zext i8 %72 to i64
  %91 = select i1 %73, i8* %86, i8* %89
  %92 = select i1 %73, i64 %88, i64 %90
  %93 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %65, i8* %91, i64 %92) #11
  br label %94

94:                                               ; preds = %75, %78, %84
  %95 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 13
  %96 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 4, i32 5
  %97 = bitcast %"class.std::__1::basic_string"* %96 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  %101 = bitcast %"class.std::__1::basic_string"* %95 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %100, label %115, label %105

105:                                              ; preds = %94
  br i1 %104, label %109, label %106

106:                                              ; preds = %105
  %107 = bitcast %"class.std::__1::basic_string"* %96 to i8*
  %108 = bitcast %"class.std::__1::basic_string"* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %108, i64 24, i1 false) #11
  br label %248

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load i8*, i8** %110, align 8
  %112 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %113 = load i64, i64* %112, align 8
  %114 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %96, i8* %111, i64 %113) #11
  br label %248

115:                                              ; preds = %94
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  %118 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.std::__1::basic_string"* %95 to i8*
  %121 = zext i8 %103 to i64
  %122 = select i1 %104, i8* %117, i8* %120
  %123 = select i1 %104, i64 %119, i64 %121
  %124 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %96, i8* %122, i64 %123) #11
  br label %248

125:                                              ; preds = %1
  %126 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 12
  %127 = bitcast %"class.std::__1::basic_string"* %126 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %128 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %127, i64 0, i32 1, i32 0
  %129 = load i8, i8* %128, align 1
  %130 = icmp slt i8 %129, 0
  br i1 %130, label %131, label %134

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %133 = load i64, i64* %132, align 8
  br label %136

134:                                              ; preds = %125
  %135 = zext i8 %129 to i64
  br label %136

136:                                              ; preds = %131, %134
  %137 = phi i64 [ %133, %131 ], [ %135, %134 ]
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %167, label %139

139:                                              ; preds = %136
  %140 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %140) #11
  %141 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %126, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %143, i8 -86, i64 24, i1 false)
  %144 = load i8*, i8** %142, align 8
  %145 = bitcast %"class.std::__1::basic_string"* %126 to i8*
  %146 = select i1 %130, i8* %144, i8* %145
  %147 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %148 = load i64, i64* %147, align 8
  %149 = zext i8 %129 to i64
  %150 = select i1 %130, i64 %148, i64 %149
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %8, i8* %146, i64 %150) #11
  %151 = call fastcc i32 @_ZN12_GLOBAL__N_118StringContainsNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS7_m(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, %"class.std::__1::basic_string"* nonnull %42, i64 5)
  %152 = icmp sgt i32 %151, -1
  br i1 %152, label %153, label %157

153:                                              ; preds = %139
  %154 = sext i32 %151 to i64
  %155 = getelementptr inbounds [5 x i32], [5 x i32]* @_ZZN3gpu17IdentifyActiveGPUEPNS_7GPUInfoEE10kVendorIDs, i64 0, i64 %154
  %156 = load i32, i32* %155, align 4
  br label %157

157:                                              ; preds = %153, %139
  %158 = phi i32 [ %156, %153 ], [ 0, %139 ]
  %159 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %160 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %159, i64 0, i32 1, i32 0
  %161 = load i8, i8* %160, align 1
  %162 = icmp slt i8 %161, 0
  br i1 %162, label %163, label %165

163:                                              ; preds = %157
  %164 = load i8*, i8** %141, align 8
  call void @_ZdlPv(i8* %164) #12
  br label %165

165:                                              ; preds = %163, %157
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140) #11
  %166 = icmp eq i32 %158, 0
  br i1 %166, label %167, label %209

167:                                              ; preds = %136, %165
  %168 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 13
  %169 = bitcast %"class.std::__1::basic_string"* %168 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %170 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %169, i64 0, i32 1, i32 0
  %171 = load i8, i8* %170, align 1
  %172 = icmp slt i8 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %175 = load i64, i64* %174, align 8
  br label %178

176:                                              ; preds = %167
  %177 = zext i8 %171 to i64
  br label %178

178:                                              ; preds = %173, %176
  %179 = phi i64 [ %175, %173 ], [ %177, %176 ]
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %248, label %181

181:                                              ; preds = %178
  %182 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %182) #11
  %183 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %168, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %185, i8 -86, i64 24, i1 false)
  %186 = load i8*, i8** %184, align 8
  %187 = bitcast %"class.std::__1::basic_string"* %168 to i8*
  %188 = select i1 %172, i8* %186, i8* %187
  %189 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %190 = load i64, i64* %189, align 8
  %191 = zext i8 %171 to i64
  %192 = select i1 %172, i64 %190, i64 %191
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %9, i8* %188, i64 %192) #11
  %193 = call fastcc i32 @_ZN12_GLOBAL__N_118StringContainsNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS7_m(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, %"class.std::__1::basic_string"* nonnull %42, i64 5)
  %194 = icmp sgt i32 %193, -1
  br i1 %194, label %195, label %199

195:                                              ; preds = %181
  %196 = sext i32 %193 to i64
  %197 = getelementptr inbounds [5 x i32], [5 x i32]* @_ZZN3gpu17IdentifyActiveGPUEPNS_7GPUInfoEE10kVendorIDs, i64 0, i64 %196
  %198 = load i32, i32* %197, align 4
  br label %199

199:                                              ; preds = %195, %181
  %200 = phi i32 [ %198, %195 ], [ 0, %181 ]
  %201 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %202 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %201, i64 0, i32 1, i32 0
  %203 = load i8, i8* %202, align 1
  %204 = icmp slt i8 %203, 0
  br i1 %204, label %205, label %207

205:                                              ; preds = %199
  %206 = load i8*, i8** %183, align 8
  call void @_ZdlPv(i8* %206) #12
  br label %207

207:                                              ; preds = %205, %199
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %182) #11
  %208 = icmp eq i32 %200, 0
  br i1 %208, label %248, label %209

209:                                              ; preds = %165, %207
  %210 = phi i32 [ %200, %207 ], [ %158, %165 ]
  %211 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 4, i32 2
  store i8 0, i8* %211, align 8
  %212 = load i64, i64* %59, align 8
  %213 = load i64, i64* %60, align 8
  %214 = icmp eq i64 %212, %213
  %215 = inttoptr i64 %213 to %"struct.gpu::GPUInfo::GPUDevice"*
  br i1 %214, label %218, label %226

216:                                              ; preds = %226
  %217 = inttoptr i64 %232 to %"struct.gpu::GPUInfo::GPUDevice"*
  br label %218

218:                                              ; preds = %216, %209
  %219 = phi %"struct.gpu::GPUInfo::GPUDevice"* [ %215, %209 ], [ %217, %216 ]
  %220 = phi i64 [ 0, %209 ], [ %234, %216 ]
  %221 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 4, i32 0
  %222 = load i32, i32* %221, align 8
  %223 = icmp eq i32 %210, %222
  br i1 %223, label %237, label %224

224:                                              ; preds = %218
  %225 = icmp eq i64 %220, 0
  br i1 %225, label %248, label %238

226:                                              ; preds = %209, %226
  %227 = phi %"struct.gpu::GPUInfo::GPUDevice"* [ %236, %226 ], [ %215, %209 ]
  %228 = phi i64 [ %230, %226 ], [ 0, %209 ]
  %229 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %227, i64 %228, i32 2
  store i8 0, i8* %229, align 8
  %230 = add nuw i64 %228, 1
  %231 = load i64, i64* %59, align 8
  %232 = load i64, i64* %60, align 8
  %233 = sub i64 %231, %232
  %234 = sdiv exact i64 %233, 120
  %235 = icmp ult i64 %230, %234
  %236 = inttoptr i64 %232 to %"struct.gpu::GPUInfo::GPUDevice"*
  br i1 %235, label %226, label %216

237:                                              ; preds = %218
  store i8 1, i8* %211, align 8
  br label %248

238:                                              ; preds = %224, %245
  %239 = phi i64 [ %246, %245 ], [ 0, %224 ]
  %240 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %219, i64 %239, i32 0
  %241 = load i32, i32* %240, align 8
  %242 = icmp eq i32 %210, %241
  br i1 %242, label %243, label %245

243:                                              ; preds = %238
  %244 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %219, i64 %239, i32 2
  store i8 1, i8* %244, align 8
  br label %248

245:                                              ; preds = %238
  %246 = add nuw i64 %239, 1
  %247 = icmp eq i64 %246, %220
  br i1 %247, label %248, label %238

248:                                              ; preds = %245, %224, %178, %115, %109, %106, %237, %207, %243
  %249 = getelementptr inbounds [5 x %"class.std::__1::basic_string"], [5 x %"class.std::__1::basic_string"]* %7, i64 0, i64 4
  %250 = bitcast %"class.std::__1::basic_string"* %249 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %251 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %250, i64 0, i32 1, i32 0
  %252 = load i8, i8* %251, align 1
  %253 = icmp slt i8 %252, 0
  br i1 %253, label %254, label %257

254:                                              ; preds = %248
  %255 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %249, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %256 = load i8*, i8** %255, align 16
  call void @_ZdlPv(i8* %256) #12
  br label %257

257:                                              ; preds = %248, %254
  %258 = getelementptr inbounds [5 x %"class.std::__1::basic_string"], [5 x %"class.std::__1::basic_string"]* %7, i64 0, i64 3
  %259 = bitcast %"class.std::__1::basic_string"* %258 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %260 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %259, i64 0, i32 1, i32 0
  %261 = load i8, i8* %260, align 1
  %262 = icmp slt i8 %261, 0
  br i1 %262, label %286, label %289

263:                                              ; preds = %315
  %264 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %264) #12
  br label %265

265:                                              ; preds = %315, %263
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #11
  %266 = load i8, i8* %32, align 1
  %267 = icmp slt i8 %266, 0
  br i1 %267, label %268, label %270

268:                                              ; preds = %265
  %269 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %269) #12
  br label %270

270:                                              ; preds = %265, %268
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #11
  %271 = load i8, i8* %26, align 1
  %272 = icmp slt i8 %271, 0
  br i1 %272, label %273, label %275

273:                                              ; preds = %270
  %274 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %274) #12
  br label %275

275:                                              ; preds = %270, %273
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #11
  %276 = load i8, i8* %19, align 1
  %277 = icmp slt i8 %276, 0
  br i1 %277, label %278, label %280

278:                                              ; preds = %275
  %279 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %279) #12
  br label %280

280:                                              ; preds = %275, %278
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #11
  %281 = load i8, i8* %13, align 1
  %282 = icmp slt i8 %281, 0
  br i1 %282, label %283, label %285

283:                                              ; preds = %280
  %284 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %284) #12
  br label %285

285:                                              ; preds = %280, %283
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  ret void

286:                                              ; preds = %257
  %287 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %258, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %288 = load i8*, i8** %287, align 8
  call void @_ZdlPv(i8* %288) #12
  br label %289

289:                                              ; preds = %286, %257
  %290 = getelementptr inbounds [5 x %"class.std::__1::basic_string"], [5 x %"class.std::__1::basic_string"]* %7, i64 0, i64 2
  %291 = bitcast %"class.std::__1::basic_string"* %290 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %292 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %291, i64 0, i32 1, i32 0
  %293 = load i8, i8* %292, align 1
  %294 = icmp slt i8 %293, 0
  br i1 %294, label %295, label %298

295:                                              ; preds = %289
  %296 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %290, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %297 = load i8*, i8** %296, align 16
  call void @_ZdlPv(i8* %297) #12
  br label %298

298:                                              ; preds = %295, %289
  %299 = getelementptr inbounds [5 x %"class.std::__1::basic_string"], [5 x %"class.std::__1::basic_string"]* %7, i64 0, i64 1
  %300 = bitcast %"class.std::__1::basic_string"* %299 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %301 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %300, i64 0, i32 1, i32 0
  %302 = load i8, i8* %301, align 1
  %303 = icmp slt i8 %302, 0
  br i1 %303, label %304, label %307

304:                                              ; preds = %298
  %305 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %299, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = load i8*, i8** %305, align 8
  call void @_ZdlPv(i8* %306) #12
  br label %307

307:                                              ; preds = %304, %298
  %308 = bitcast [5 x %"class.std::__1::basic_string"]* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %309 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %308, i64 0, i32 1, i32 0
  %310 = load i8, i8* %309, align 1
  %311 = icmp slt i8 %310, 0
  br i1 %311, label %312, label %315

312:                                              ; preds = %307
  %313 = getelementptr inbounds [5 x %"class.std::__1::basic_string"], [5 x %"class.std::__1::basic_string"]* %7, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %314 = load i8*, i8** %313, align 16
  call void @_ZdlPv(i8* %314) #12
  br label %315

315:                                              ; preds = %312, %307
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %41) #11
  %316 = load i8, i8* %38, align 1
  %317 = icmp slt i8 %316, 0
  br i1 %317, label %263, label %265
}

; Function Attrs: nounwind
declare void @_ZN2gl25GLWindowSystemBindingInfoD1Ev(%"struct.gl::GLWindowSystemBindingInfo"*) unnamed_addr #3

declare void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN12_GLOBAL__N_118StringContainsNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS7_m(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly, i64) unnamed_addr #0 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %10 = load i8, i8* %8, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %15 = select i1 %11, i8* %13, i8* %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %10 to i64
  %19 = select i1 %11, i64 %17, i64 %18
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %4, i8* %15, i64 %19, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i64 0, i64 0), i64 7, i32 1, i32 0) #11
  %20 = bitcast %"class.std::__1::basic_string"** %6 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector"* %4 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %21, %23
  %25 = inttoptr i64 %23 to %"class.std::__1::basic_string"*
  %26 = inttoptr i64 %21 to %"class.std::__1::basic_string"*
  br i1 %24, label %98, label %27

27:                                               ; preds = %3
  %28 = icmp eq i64 %2, 0
  %29 = sub i64 %21, %23
  %30 = sdiv exact i64 %29, 24
  br label %31

31:                                               ; preds = %27, %93
  %32 = phi i64 [ 0, %27 ], [ %94, %93 ]
  br i1 %28, label %93, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 %32
  %35 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 %32, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = zext i8 %37 to i64
  %42 = select i1 %38, i64 %40, i64 %41
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %45 = icmp eq i64 %42, 0
  br label %46

46:                                               ; preds = %90, %33
  %47 = phi i64 [ 0, %33 ], [ %91, %90 ]
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %47
  %49 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %47, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = zext i8 %51 to i64
  %56 = select i1 %52, i64 %54, i64 %55
  %57 = icmp eq i64 %42, %56
  br i1 %57, label %58, label %90

58:                                               ; preds = %46
  %59 = load i8*, i8** %43, align 8
  %60 = select i1 %38, i8* %59, i8* %44
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  %64 = select i1 %52, i8* %62, i8* %63
  br i1 %38, label %71, label %65

65:                                               ; preds = %58
  br i1 %45, label %87, label %66

66:                                               ; preds = %65
  %67 = ptrtoint i8* %59 to i64
  %68 = trunc i64 %67 to i8
  %69 = load i8, i8* %64, align 1
  %70 = icmp eq i8 %69, %68
  br i1 %70, label %72, label %90

71:                                               ; preds = %58
  br i1 %45, label %87, label %84

72:                                               ; preds = %66, %79
  %73 = phi i64 [ %76, %79 ], [ %41, %66 ]
  %74 = phi i8* [ %77, %79 ], [ %44, %66 ]
  %75 = phi i8* [ %80, %79 ], [ %64, %66 ]
  %76 = add i64 %73, -1
  %77 = getelementptr inbounds i8, i8* %74, i64 1
  %78 = icmp eq i64 %76, 0
  br i1 %78, label %87, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds i8, i8* %75, i64 1
  %81 = load i8, i8* %77, align 1
  %82 = load i8, i8* %80, align 1
  %83 = icmp eq i8 %81, %82
  br i1 %83, label %72, label %90

84:                                               ; preds = %71
  %85 = call i32 @bcmp(i8* %60, i8* %64, i64 %42) #11
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %65, %71, %84, %72
  %88 = icmp ult i64 %47, 2147483648
  br i1 %88, label %96, label %89, !prof !2

89:                                               ; preds = %87
  call void @llvm.trap() #11
  unreachable

90:                                               ; preds = %79, %66, %46, %84
  %91 = add nuw i64 %47, 1
  %92 = icmp eq i64 %91, %2
  br i1 %92, label %93, label %46

93:                                               ; preds = %90, %31
  %94 = add nuw i64 %32, 1
  %95 = icmp ult i64 %94, %30
  br i1 %95, label %31, label %98

96:                                               ; preds = %87
  %97 = trunc i64 %47 to i32
  br label %98

98:                                               ; preds = %93, %3, %96
  %99 = phi i32 [ %97, %96 ], [ -1, %3 ], [ -1, %93 ]
  %100 = icmp eq i64 %23, 0
  br i1 %100, label %121, label %101

101:                                              ; preds = %98
  %102 = inttoptr i64 %23 to i8*
  %103 = icmp eq %"class.std::__1::basic_string"* %26, %25
  br i1 %103, label %119, label %104

104:                                              ; preds = %101, %114
  %105 = phi %"class.std::__1::basic_string"* [ %106, %114 ], [ %26, %101 ]
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %105, i64 -1
  %107 = bitcast %"class.std::__1::basic_string"* %106 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %104
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  call void @_ZdlPv(i8* %113) #12
  br label %114

114:                                              ; preds = %111, %104
  %115 = icmp eq %"class.std::__1::basic_string"* %106, %25
  br i1 %115, label %116, label %104

116:                                              ; preds = %114
  %117 = bitcast %"class.std::__1::vector"* %4 to i8**
  %118 = load i8*, i8** %117, align 8
  br label %119

119:                                              ; preds = %116, %101
  %120 = phi i8* [ %118, %116 ], [ %102, %101 ]
  store %"class.std::__1::basic_string"* %25, %"class.std::__1::basic_string"** %6, align 8
  call void @_ZdlPv(i8* %120) #12
  br label %121

121:                                              ; preds = %98, %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  ret i32 %99
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu25FillGPUInfoFromSystemInfoEPNS_7GPUInfoEPN5angle10SystemInfoE(%"struct.gpu::GPUInfo"*, %"struct.angle::SystemInfo"*) local_unnamed_addr #0 {
  %3 = alloca %"struct.gpu::GPUInfo::GPUDevice", align 8
  %4 = getelementptr inbounds %"struct.angle::SystemInfo", %"struct.angle::SystemInfo"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"struct.angle::GPUDeviceInfo"*, %"struct.angle::GPUDeviceInfo"** %4, align 8
  %6 = getelementptr inbounds %"struct.angle::SystemInfo", %"struct.angle::SystemInfo"* %1, i64 0, i32 0, i32 0, i32 1
  %7 = load %"struct.angle::GPUDeviceInfo"*, %"struct.angle::GPUDeviceInfo"** %6, align 8
  %8 = icmp eq %"struct.angle::GPUDeviceInfo"* %5, %7
  br i1 %8, label %196, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.angle::SystemInfo", %"struct.angle::SystemInfo"* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %9
  store i32 0, i32* %10, align 8
  br label %14

14:                                               ; preds = %13, %9
  %15 = phi i32 [ 0, %13 ], [ %11, %9 ]
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %5, i64 %16, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 4, i32 0
  store i32 %18, i32* %19, align 8
  %20 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %5, i64 %16, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 4, i32 1
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %5, i64 %16, i32 3
  %24 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 4, i32 6
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %14
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  tail call void @_ZdlPv(i8* %31) #12
  br label %32

32:                                               ; preds = %14, %29
  %33 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  %34 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 24, i1 false) #11
  %35 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  store i8 0, i8* %36, align 1
  store i8 0, i8* %34, align 1
  %37 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %5, i64 %16, i32 4
  %38 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 4, i32 7
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %32
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  tail call void @_ZdlPv(i8* %45) #12
  br label %46

46:                                               ; preds = %32, %43
  %47 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  %48 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false) #11
  %49 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  store i8 0, i8* %50, align 1
  store i8 0, i8* %48, align 1
  %51 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 4, i32 2
  store i8 1, i8* %51, align 8
  %52 = bitcast %"struct.angle::GPUDeviceInfo"** %6 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"struct.angle::SystemInfo"* %1 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %53, %55
  br i1 %56, label %75, label %57

57:                                               ; preds = %46
  %58 = bitcast %"struct.gpu::GPUInfo::GPUDevice"* %3 to i8*
  %59 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %3, i64 0, i32 0
  %60 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %3, i64 0, i32 1
  %61 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %3, i64 0, i32 6
  %62 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %66 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %3, i64 0, i32 7
  %67 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  %71 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 5, i32 0, i32 1
  %72 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %73 = bitcast %"struct.gpu::GPUInfo::GPUDevice"** %71 to i64*
  %74 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 5
  br label %147

75:                                               ; preds = %189, %46
  %76 = getelementptr inbounds %"struct.angle::SystemInfo", %"struct.angle::SystemInfo"* %1, i64 0, i32 2
  %77 = load i8, i8* %76, align 4, !range !13
  %78 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 1
  store i8 %77, i8* %78, align 8
  %79 = getelementptr inbounds %"struct.angle::SystemInfo", %"struct.angle::SystemInfo"* %1, i64 0, i32 3
  %80 = load i8, i8* %79, align 1, !range !13
  %81 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 2
  store i8 %80, i8* %81, align 1
  %82 = getelementptr inbounds %"struct.angle::SystemInfo", %"struct.angle::SystemInfo"* %1, i64 0, i32 8
  %83 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 9
  %84 = icmp eq %"class.std::__1::basic_string"* %83, %82
  br i1 %84, label %114, label %85

85:                                               ; preds = %75
  %86 = bitcast %"class.std::__1::basic_string"* %83 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  %90 = bitcast %"class.std::__1::basic_string"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %89, label %104, label %94

94:                                               ; preds = %85
  br i1 %93, label %98, label %95

95:                                               ; preds = %94
  %96 = bitcast %"class.std::__1::basic_string"* %83 to i8*
  %97 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 24, i1 false) #11
  br label %114

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  %101 = getelementptr inbounds %"struct.angle::SystemInfo", %"struct.angle::SystemInfo"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = load i64, i64* %101, align 8
  %103 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %83, i8* %100, i64 %102) #11
  br label %114

104:                                              ; preds = %85
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = getelementptr inbounds %"struct.angle::SystemInfo", %"struct.angle::SystemInfo"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  %110 = zext i8 %92 to i64
  %111 = select i1 %93, i8* %106, i8* %109
  %112 = select i1 %93, i64 %108, i64 %110
  %113 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %83, i8* %111, i64 %112) #11
  br label %114

114:                                              ; preds = %75, %95, %98, %104
  %115 = getelementptr inbounds %"struct.angle::SystemInfo", %"struct.angle::SystemInfo"* %1, i64 0, i32 9
  %116 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 10
  %117 = icmp eq %"class.std::__1::basic_string"* %116, %115
  br i1 %117, label %196, label %118

118:                                              ; preds = %114
  %119 = bitcast %"class.std::__1::basic_string"* %116 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %119, i64 0, i32 1, i32 0
  %121 = load i8, i8* %120, align 1
  %122 = icmp slt i8 %121, 0
  %123 = bitcast %"class.std::__1::basic_string"* %115 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  br i1 %122, label %137, label %127

127:                                              ; preds = %118
  br i1 %126, label %131, label %128

128:                                              ; preds = %127
  %129 = bitcast %"class.std::__1::basic_string"* %116 to i8*
  %130 = bitcast %"class.std::__1::basic_string"* %115 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %130, i64 24, i1 false) #11
  br label %196

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load i8*, i8** %132, align 8
  %134 = getelementptr inbounds %"struct.angle::SystemInfo", %"struct.angle::SystemInfo"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %135 = load i64, i64* %134, align 8
  %136 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %116, i8* %133, i64 %135) #11
  br label %196

137:                                              ; preds = %118
  %138 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load i8*, i8** %138, align 8
  %140 = getelementptr inbounds %"struct.angle::SystemInfo", %"struct.angle::SystemInfo"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"class.std::__1::basic_string"* %115 to i8*
  %143 = zext i8 %125 to i64
  %144 = select i1 %126, i8* %139, i8* %142
  %145 = select i1 %126, i64 %141, i64 %143
  %146 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %116, i8* %144, i64 %145) #11
  br label %196

147:                                              ; preds = %57, %189
  %148 = phi i64 [ %55, %57 ], [ %190, %189 ]
  %149 = phi i64 [ %53, %57 ], [ %191, %189 ]
  %150 = phi i64 [ 0, %57 ], [ %192, %189 ]
  %151 = trunc i64 %150 to i32
  %152 = load i32, i32* %10, align 8
  %153 = icmp eq i32 %152, %151
  br i1 %153, label %189, label %154

154:                                              ; preds = %147
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %58) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 120, i1 false)
  call void @_ZN3gpu7GPUInfo9GPUDeviceC1Ev(%"struct.gpu::GPUInfo::GPUDevice"* nonnull %3) #11
  %155 = load %"struct.angle::GPUDeviceInfo"*, %"struct.angle::GPUDeviceInfo"** %4, align 8
  %156 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %155, i64 %150, i32 0
  %157 = load i32, i32* %156, align 8
  store i32 %157, i32* %59, align 8
  %158 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %155, i64 %150, i32 1
  %159 = load i32, i32* %158, align 4
  store i32 %159, i32* %60, align 4
  %160 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %155, i64 %150, i32 3
  %161 = load i8, i8* %63, align 1
  %162 = icmp slt i8 %161, 0
  br i1 %162, label %163, label %165

163:                                              ; preds = %154
  %164 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %164) #12
  br label %165

165:                                              ; preds = %154, %163
  %166 = bitcast %"class.std::__1::basic_string"* %160 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %166, i64 24, i1 false) #11
  %167 = bitcast %"class.std::__1::basic_string"* %160 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %168 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %167, i64 0, i32 1, i32 0
  store i8 0, i8* %168, align 1
  store i8 0, i8* %166, align 1
  %169 = load %"struct.angle::GPUDeviceInfo"*, %"struct.angle::GPUDeviceInfo"** %4, align 8
  %170 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %169, i64 %150, i32 4
  %171 = load i8, i8* %68, align 1
  %172 = icmp slt i8 %171, 0
  br i1 %172, label %173, label %175

173:                                              ; preds = %165
  %174 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %174) #12
  br label %175

175:                                              ; preds = %165, %173
  %176 = bitcast %"class.std::__1::basic_string"* %170 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %176, i64 24, i1 false) #11
  %177 = bitcast %"class.std::__1::basic_string"* %170 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %178 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %177, i64 0, i32 1, i32 0
  store i8 0, i8* %178, align 1
  store i8 0, i8* %176, align 1
  %179 = load %"struct.gpu::GPUInfo::GPUDevice"*, %"struct.gpu::GPUInfo::GPUDevice"** %71, align 8
  %180 = load %"struct.gpu::GPUInfo::GPUDevice"*, %"struct.gpu::GPUInfo::GPUDevice"** %72, align 8
  %181 = icmp eq %"struct.gpu::GPUInfo::GPUDevice"* %179, %180
  br i1 %181, label %185, label %182

182:                                              ; preds = %175
  call void @_ZN3gpu7GPUInfo9GPUDeviceC1ERKS1_(%"struct.gpu::GPUInfo::GPUDevice"* %179, %"struct.gpu::GPUInfo::GPUDevice"* nonnull dereferenceable(120) %3) #11
  %183 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %179, i64 1
  %184 = ptrtoint %"struct.gpu::GPUInfo::GPUDevice"* %183 to i64
  store i64 %184, i64* %73, align 8
  br label %186

185:                                              ; preds = %175
  call void @_ZNSt3__16vectorIN3gpu7GPUInfo9GPUDeviceENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.14"* %74, %"struct.gpu::GPUInfo::GPUDevice"* nonnull dereferenceable(120) %3) #11
  br label %186

186:                                              ; preds = %182, %185
  call void @_ZN3gpu7GPUInfo9GPUDeviceD1Ev(%"struct.gpu::GPUInfo::GPUDevice"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %58) #11
  %187 = load i64, i64* %52, align 8
  %188 = load i64, i64* %54, align 8
  br label %189

189:                                              ; preds = %147, %186
  %190 = phi i64 [ %148, %147 ], [ %188, %186 ]
  %191 = phi i64 [ %149, %147 ], [ %187, %186 ]
  %192 = add nuw i64 %150, 1
  %193 = sub i64 %191, %190
  %194 = sdiv exact i64 %193, 104
  %195 = icmp ult i64 %192, %194
  br i1 %195, label %147, label %75

196:                                              ; preds = %137, %131, %128, %114, %2
  ret void
}

declare void @_ZN3gpu7GPUInfo9GPUDeviceC1Ev(%"struct.gpu::GPUInfo::GPUDevice"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gpu7GPUInfo9GPUDeviceD1Ev(%"struct.gpu::GPUInfo::GPUDevice"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu29CollectGraphicsInfoForTestingEPNS_7GPUInfoE(%"struct.gpu::GPUInfo"*) local_unnamed_addr #0 {
  %2 = tail call zeroext i1 @_ZN3gpu24CollectBasicGraphicsInfoEPNS_7GPUInfoE(%"struct.gpu::GPUInfo"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu19CollectGpuExtraInfoEPN3gfx12GpuExtraInfoERKNS_14GpuPreferencesE(%"struct.gfx::GpuExtraInfo"*, %"struct.gpu::GpuPreferences"* nocapture readonly dereferenceable(184)) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = tail call zeroext i1 @_ZN2gl12GLSurfaceEGL30IsANGLEFeatureControlSupportedEv() #11
  br i1 %10, label %11, label %338

11:                                               ; preds = %2
  %12 = tail call i8* @_ZN2gl12GLSurfaceEGL18GetHardwareDisplayEv() #11
  %13 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  store i64 0, i64* %3, align 8
  %14 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %15 = bitcast %"class.gl::EGLApi"* %14 to i32 (%"class.gl::EGLApi"*, i8*, i32, i64*)***
  %16 = load i32 (%"class.gl::EGLApi"*, i8*, i32, i64*)**, i32 (%"class.gl::EGLApi"*, i8*, i32, i64*)*** %15, align 8
  %17 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i32, i64*)*, i32 (%"class.gl::EGLApi"*, i8*, i32, i64*)** %16, i64 55
  %18 = load i32 (%"class.gl::EGLApi"*, i8*, i32, i64*)*, i32 (%"class.gl::EGLApi"*, i8*, i32, i64*)** %17, align 8
  %19 = call i32 %18(%"class.gl::EGLApi"* %14, i8* %12, i32 13413, i64* nonnull %3) #11
  %20 = load i64, i64* %3, align 8
  %21 = getelementptr inbounds %"struct.gfx::GpuExtraInfo", %"struct.gfx::GpuExtraInfo"* %0, i64 0, i32 0, i32 0, i32 1
  %22 = bitcast %"struct.gfx::ANGLEFeature"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"struct.gfx::GpuExtraInfo"* %0 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = sdiv exact i64 %26, 144
  %28 = icmp ugt i64 %20, %27
  %29 = inttoptr i64 %25 to %"struct.gfx::ANGLEFeature"*
  %30 = inttoptr i64 %23 to %"struct.gfx::ANGLEFeature"*
  br i1 %28, label %31, label %35

31:                                               ; preds = %11
  %32 = getelementptr inbounds %"struct.gfx::GpuExtraInfo", %"struct.gfx::GpuExtraInfo"* %0, i64 0, i32 0
  %33 = sub i64 %20, %27
  call void @_ZNSt3__16vectorIN3gfx12ANGLEFeatureENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.164"* %32, i64 %33) #11
  %34 = load i64, i64* %22, align 8
  br label %46

35:                                               ; preds = %11
  %36 = icmp ult i64 %20, %27
  br i1 %36, label %37, label %46

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %29, i64 %20
  %39 = icmp eq %"struct.gfx::ANGLEFeature"* %38, %30
  br i1 %39, label %44, label %40

40:                                               ; preds = %37, %40
  %41 = phi %"struct.gfx::ANGLEFeature"* [ %42, %40 ], [ %30, %37 ]
  %42 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %41, i64 -1
  call void @_ZN3gfx12ANGLEFeatureD1Ev(%"struct.gfx::ANGLEFeature"* %42) #11
  %43 = icmp eq %"struct.gfx::ANGLEFeature"* %42, %38
  br i1 %43, label %44, label %40

44:                                               ; preds = %40, %37
  store %"struct.gfx::ANGLEFeature"* %38, %"struct.gfx::ANGLEFeature"** %21, align 8
  %45 = ptrtoint %"struct.gfx::ANGLEFeature"* %38 to i64
  br label %46

46:                                               ; preds = %31, %35, %44
  %47 = phi i64 [ %34, %31 ], [ %23, %35 ], [ %45, %44 ]
  %48 = load i64, i64* %24, align 8
  %49 = icmp eq i64 %47, %48
  br i1 %49, label %88, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = getelementptr inbounds %"struct.gfx::GpuExtraInfo", %"struct.gfx::GpuExtraInfo"* %0, i64 0, i32 0, i32 0, i32 0
  %58 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %62 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %74 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  br label %89

88:                                               ; preds = %330, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  br label %338

89:                                               ; preds = %50, %330
  %90 = phi i64 [ 0, %50 ], [ %332, %330 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #11
  %91 = trunc i64 %90 to i32
  %92 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8, !noalias !14
  %93 = bitcast %"class.gl::EGLApi"* %92 to i8* (%"class.gl::EGLApi"*, i8*, i32, i32)***
  %94 = load i8* (%"class.gl::EGLApi"*, i8*, i32, i32)**, i8* (%"class.gl::EGLApi"*, i8*, i32, i32)*** %93, align 8, !noalias !14
  %95 = getelementptr inbounds i8* (%"class.gl::EGLApi"*, i8*, i32, i32)*, i8* (%"class.gl::EGLApi"*, i8*, i32, i32)** %94, i64 59
  %96 = load i8* (%"class.gl::EGLApi"*, i8*, i32, i32)*, i8* (%"class.gl::EGLApi"*, i8*, i32, i32)** %95, align 8, !noalias !14
  %97 = call i8* %96(%"class.gl::EGLApi"* %92, i8* %12, i32 13408, i32 %91) #11, !noalias !14
  %98 = icmp eq i8* %97, null
  br i1 %98, label %119, label %99

99:                                               ; preds = %89
  %100 = call i64 @strlen(i8* nonnull %97) #11, !noalias !14
  %101 = icmp ugt i64 %100, -17
  br i1 %101, label %102, label %104

102:                                              ; preds = %99
  %103 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %103) #13
  unreachable

104:                                              ; preds = %99
  %105 = icmp ult i64 %100, 23
  br i1 %105, label %111, label %106

106:                                              ; preds = %104
  %107 = add nuw i64 %100, 16
  %108 = and i64 %107, -16
  %109 = call i8* @_Znwm(i64 %108) #12
  store i8* %109, i8** %52, align 8, !alias.scope !14
  %110 = or i64 %108, -9223372036854775808
  store i64 %110, i64* %53, align 8, !alias.scope !14
  store i64 %100, i64* %54, align 8, !alias.scope !14
  br label %114

111:                                              ; preds = %104
  %112 = trunc i64 %100 to i8
  store i8 %112, i8* %56, align 1, !alias.scope !14
  %113 = icmp eq i64 %100, 0
  br i1 %113, label %116, label %114

114:                                              ; preds = %111, %106
  %115 = phi i8* [ %109, %106 ], [ %51, %111 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %115, i8* nonnull align 1 %97, i64 %100, i1 false) #11
  br label %116

116:                                              ; preds = %114, %111
  %117 = phi i8* [ %51, %111 ], [ %115, %114 ]
  %118 = getelementptr inbounds i8, i8* %117, i64 %100
  store i8 0, i8* %118, align 1
  br label %120

119:                                              ; preds = %89
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 24, i1 false) #11, !alias.scope !14
  br label %120

120:                                              ; preds = %116, %119
  %121 = load %"struct.gfx::ANGLEFeature"*, %"struct.gfx::ANGLEFeature"** %57, align 8
  %122 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %121, i64 %90, i32 0
  %123 = bitcast %"class.std::__1::basic_string"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  br i1 %126, label %127, label %130

127:                                              ; preds = %120
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i8*, i8** %128, align 8
  call void @_ZdlPv(i8* %129) #12
  br label %130

130:                                              ; preds = %127, %120
  %131 = bitcast %"class.std::__1::basic_string"* %122 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* nonnull align 8 %51, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #11
  %132 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8, !noalias !17
  %133 = bitcast %"class.gl::EGLApi"* %132 to i8* (%"class.gl::EGLApi"*, i8*, i32, i32)***
  %134 = load i8* (%"class.gl::EGLApi"*, i8*, i32, i32)**, i8* (%"class.gl::EGLApi"*, i8*, i32, i32)*** %133, align 8, !noalias !17
  %135 = getelementptr inbounds i8* (%"class.gl::EGLApi"*, i8*, i32, i32)*, i8* (%"class.gl::EGLApi"*, i8*, i32, i32)** %134, i64 59
  %136 = load i8* (%"class.gl::EGLApi"*, i8*, i32, i32)*, i8* (%"class.gl::EGLApi"*, i8*, i32, i32)** %135, align 8, !noalias !17
  %137 = call i8* %136(%"class.gl::EGLApi"* %132, i8* %12, i32 13409, i32 %91) #11, !noalias !17
  %138 = icmp eq i8* %137, null
  br i1 %138, label %159, label %139

139:                                              ; preds = %130
  %140 = call i64 @strlen(i8* nonnull %137) #11, !noalias !17
  %141 = icmp ugt i64 %140, -17
  br i1 %141, label %142, label %144

142:                                              ; preds = %139
  %143 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %143) #13
  unreachable

144:                                              ; preds = %139
  %145 = icmp ult i64 %140, 23
  br i1 %145, label %151, label %146

146:                                              ; preds = %144
  %147 = add nuw i64 %140, 16
  %148 = and i64 %147, -16
  %149 = call i8* @_Znwm(i64 %148) #12
  store i8* %149, i8** %59, align 8, !alias.scope !17
  %150 = or i64 %148, -9223372036854775808
  store i64 %150, i64* %60, align 8, !alias.scope !17
  store i64 %140, i64* %61, align 8, !alias.scope !17
  br label %154

151:                                              ; preds = %144
  %152 = trunc i64 %140 to i8
  store i8 %152, i8* %63, align 1, !alias.scope !17
  %153 = icmp eq i64 %140, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %151, %146
  %155 = phi i8* [ %149, %146 ], [ %58, %151 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %155, i8* nonnull align 1 %137, i64 %140, i1 false) #11
  br label %156

156:                                              ; preds = %154, %151
  %157 = phi i8* [ %58, %151 ], [ %155, %154 ]
  %158 = getelementptr inbounds i8, i8* %157, i64 %140
  store i8 0, i8* %158, align 1
  br label %160

159:                                              ; preds = %130
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 24, i1 false) #11, !alias.scope !17
  br label %160

160:                                              ; preds = %156, %159
  %161 = load %"struct.gfx::ANGLEFeature"*, %"struct.gfx::ANGLEFeature"** %57, align 8
  %162 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %161, i64 %90, i32 1
  %163 = bitcast %"class.std::__1::basic_string"* %162 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %164 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %163, i64 0, i32 1, i32 0
  %165 = load i8, i8* %164, align 1
  %166 = icmp slt i8 %165, 0
  br i1 %166, label %167, label %170

167:                                              ; preds = %160
  %168 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %162, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i8*, i8** %168, align 8
  call void @_ZdlPv(i8* %169) #12
  br label %170

170:                                              ; preds = %167, %160
  %171 = bitcast %"class.std::__1::basic_string"* %162 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %171, i8* nonnull align 8 %58, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #11
  %172 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8, !noalias !20
  %173 = bitcast %"class.gl::EGLApi"* %172 to i8* (%"class.gl::EGLApi"*, i8*, i32, i32)***
  %174 = load i8* (%"class.gl::EGLApi"*, i8*, i32, i32)**, i8* (%"class.gl::EGLApi"*, i8*, i32, i32)*** %173, align 8, !noalias !20
  %175 = getelementptr inbounds i8* (%"class.gl::EGLApi"*, i8*, i32, i32)*, i8* (%"class.gl::EGLApi"*, i8*, i32, i32)** %174, i64 59
  %176 = load i8* (%"class.gl::EGLApi"*, i8*, i32, i32)*, i8* (%"class.gl::EGLApi"*, i8*, i32, i32)** %175, align 8, !noalias !20
  %177 = call i8* %176(%"class.gl::EGLApi"* %172, i8* %12, i32 13410, i32 %91) #11, !noalias !20
  %178 = icmp eq i8* %177, null
  br i1 %178, label %199, label %179

179:                                              ; preds = %170
  %180 = call i64 @strlen(i8* nonnull %177) #11, !noalias !20
  %181 = icmp ugt i64 %180, -17
  br i1 %181, label %182, label %184

182:                                              ; preds = %179
  %183 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %183) #13
  unreachable

184:                                              ; preds = %179
  %185 = icmp ult i64 %180, 23
  br i1 %185, label %191, label %186

186:                                              ; preds = %184
  %187 = add nuw i64 %180, 16
  %188 = and i64 %187, -16
  %189 = call i8* @_Znwm(i64 %188) #12
  store i8* %189, i8** %65, align 8, !alias.scope !20
  %190 = or i64 %188, -9223372036854775808
  store i64 %190, i64* %66, align 8, !alias.scope !20
  store i64 %180, i64* %67, align 8, !alias.scope !20
  br label %194

191:                                              ; preds = %184
  %192 = trunc i64 %180 to i8
  store i8 %192, i8* %69, align 1, !alias.scope !20
  %193 = icmp eq i64 %180, 0
  br i1 %193, label %196, label %194

194:                                              ; preds = %191, %186
  %195 = phi i8* [ %189, %186 ], [ %64, %191 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %195, i8* nonnull align 1 %177, i64 %180, i1 false) #11
  br label %196

196:                                              ; preds = %194, %191
  %197 = phi i8* [ %64, %191 ], [ %195, %194 ]
  %198 = getelementptr inbounds i8, i8* %197, i64 %180
  store i8 0, i8* %198, align 1
  br label %200

199:                                              ; preds = %170
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 24, i1 false) #11, !alias.scope !20
  br label %200

200:                                              ; preds = %196, %199
  %201 = load %"struct.gfx::ANGLEFeature"*, %"struct.gfx::ANGLEFeature"** %57, align 8
  %202 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %201, i64 %90, i32 2
  %203 = bitcast %"class.std::__1::basic_string"* %202 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %204 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %203, i64 0, i32 1, i32 0
  %205 = load i8, i8* %204, align 1
  %206 = icmp slt i8 %205, 0
  br i1 %206, label %207, label %210

207:                                              ; preds = %200
  %208 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %202, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load i8*, i8** %208, align 8
  call void @_ZdlPv(i8* %209) #12
  br label %210

210:                                              ; preds = %207, %200
  %211 = bitcast %"class.std::__1::basic_string"* %202 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %211, i8* nonnull align 8 %64, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #11
  %212 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8, !noalias !23
  %213 = bitcast %"class.gl::EGLApi"* %212 to i8* (%"class.gl::EGLApi"*, i8*, i32, i32)***
  %214 = load i8* (%"class.gl::EGLApi"*, i8*, i32, i32)**, i8* (%"class.gl::EGLApi"*, i8*, i32, i32)*** %213, align 8, !noalias !23
  %215 = getelementptr inbounds i8* (%"class.gl::EGLApi"*, i8*, i32, i32)*, i8* (%"class.gl::EGLApi"*, i8*, i32, i32)** %214, i64 59
  %216 = load i8* (%"class.gl::EGLApi"*, i8*, i32, i32)*, i8* (%"class.gl::EGLApi"*, i8*, i32, i32)** %215, align 8, !noalias !23
  %217 = call i8* %216(%"class.gl::EGLApi"* %212, i8* %12, i32 13411, i32 %91) #11, !noalias !23
  %218 = icmp eq i8* %217, null
  br i1 %218, label %239, label %219

219:                                              ; preds = %210
  %220 = call i64 @strlen(i8* nonnull %217) #11, !noalias !23
  %221 = icmp ugt i64 %220, -17
  br i1 %221, label %222, label %224

222:                                              ; preds = %219
  %223 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %223) #13
  unreachable

224:                                              ; preds = %219
  %225 = icmp ult i64 %220, 23
  br i1 %225, label %231, label %226

226:                                              ; preds = %224
  %227 = add nuw i64 %220, 16
  %228 = and i64 %227, -16
  %229 = call i8* @_Znwm(i64 %228) #12
  store i8* %229, i8** %71, align 8, !alias.scope !23
  %230 = or i64 %228, -9223372036854775808
  store i64 %230, i64* %72, align 8, !alias.scope !23
  store i64 %220, i64* %73, align 8, !alias.scope !23
  br label %234

231:                                              ; preds = %224
  %232 = trunc i64 %220 to i8
  store i8 %232, i8* %75, align 1, !alias.scope !23
  %233 = icmp eq i64 %220, 0
  br i1 %233, label %236, label %234

234:                                              ; preds = %231, %226
  %235 = phi i8* [ %229, %226 ], [ %70, %231 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %235, i8* nonnull align 1 %217, i64 %220, i1 false) #11
  br label %236

236:                                              ; preds = %234, %231
  %237 = phi i8* [ %70, %231 ], [ %235, %234 ]
  %238 = getelementptr inbounds i8, i8* %237, i64 %220
  store i8 0, i8* %238, align 1
  br label %240

239:                                              ; preds = %210
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 0, i64 24, i1 false) #11, !alias.scope !23
  br label %240

240:                                              ; preds = %236, %239
  %241 = load %"struct.gfx::ANGLEFeature"*, %"struct.gfx::ANGLEFeature"** %57, align 8
  %242 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %241, i64 %90, i32 3
  %243 = bitcast %"class.std::__1::basic_string"* %242 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %244 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %243, i64 0, i32 1, i32 0
  %245 = load i8, i8* %244, align 1
  %246 = icmp slt i8 %245, 0
  br i1 %246, label %247, label %250

247:                                              ; preds = %240
  %248 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %242, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = load i8*, i8** %248, align 8
  call void @_ZdlPv(i8* %249) #12
  br label %250

250:                                              ; preds = %247, %240
  %251 = bitcast %"class.std::__1::basic_string"* %242 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %251, i8* nonnull align 8 %70, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #11
  %252 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8, !noalias !26
  %253 = bitcast %"class.gl::EGLApi"* %252 to i8* (%"class.gl::EGLApi"*, i8*, i32, i32)***
  %254 = load i8* (%"class.gl::EGLApi"*, i8*, i32, i32)**, i8* (%"class.gl::EGLApi"*, i8*, i32, i32)*** %253, align 8, !noalias !26
  %255 = getelementptr inbounds i8* (%"class.gl::EGLApi"*, i8*, i32, i32)*, i8* (%"class.gl::EGLApi"*, i8*, i32, i32)** %254, i64 59
  %256 = load i8* (%"class.gl::EGLApi"*, i8*, i32, i32)*, i8* (%"class.gl::EGLApi"*, i8*, i32, i32)** %255, align 8, !noalias !26
  %257 = call i8* %256(%"class.gl::EGLApi"* %252, i8* %12, i32 13412, i32 %91) #11, !noalias !26
  %258 = icmp eq i8* %257, null
  br i1 %258, label %279, label %259

259:                                              ; preds = %250
  %260 = call i64 @strlen(i8* nonnull %257) #11, !noalias !26
  %261 = icmp ugt i64 %260, -17
  br i1 %261, label %262, label %264

262:                                              ; preds = %259
  %263 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %263) #13
  unreachable

264:                                              ; preds = %259
  %265 = icmp ult i64 %260, 23
  br i1 %265, label %271, label %266

266:                                              ; preds = %264
  %267 = add nuw i64 %260, 16
  %268 = and i64 %267, -16
  %269 = call i8* @_Znwm(i64 %268) #12
  store i8* %269, i8** %77, align 8, !alias.scope !26
  %270 = or i64 %268, -9223372036854775808
  store i64 %270, i64* %78, align 8, !alias.scope !26
  store i64 %260, i64* %79, align 8, !alias.scope !26
  br label %274

271:                                              ; preds = %264
  %272 = trunc i64 %260 to i8
  store i8 %272, i8* %81, align 1, !alias.scope !26
  %273 = icmp eq i64 %260, 0
  br i1 %273, label %276, label %274

274:                                              ; preds = %271, %266
  %275 = phi i8* [ %269, %266 ], [ %76, %271 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %275, i8* nonnull align 1 %257, i64 %260, i1 false) #11
  br label %276

276:                                              ; preds = %274, %271
  %277 = phi i8* [ %76, %271 ], [ %275, %274 ]
  %278 = getelementptr inbounds i8, i8* %277, i64 %260
  store i8 0, i8* %278, align 1
  br label %280

279:                                              ; preds = %250
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 24, i1 false) #11, !alias.scope !26
  br label %280

280:                                              ; preds = %276, %279
  %281 = load %"struct.gfx::ANGLEFeature"*, %"struct.gfx::ANGLEFeature"** %57, align 8
  %282 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %281, i64 %90, i32 4
  %283 = bitcast %"class.std::__1::basic_string"* %282 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %284 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %283, i64 0, i32 1, i32 0
  %285 = load i8, i8* %284, align 1
  %286 = icmp slt i8 %285, 0
  br i1 %286, label %287, label %290

287:                                              ; preds = %280
  %288 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %282, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load i8*, i8** %288, align 8
  call void @_ZdlPv(i8* %289) #12
  br label %290

290:                                              ; preds = %287, %280
  %291 = bitcast %"class.std::__1::basic_string"* %282 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %291, i8* nonnull align 8 %76, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #11
  %292 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8, !noalias !29
  %293 = bitcast %"class.gl::EGLApi"* %292 to i8* (%"class.gl::EGLApi"*, i8*, i32, i32)***
  %294 = load i8* (%"class.gl::EGLApi"*, i8*, i32, i32)**, i8* (%"class.gl::EGLApi"*, i8*, i32, i32)*** %293, align 8, !noalias !29
  %295 = getelementptr inbounds i8* (%"class.gl::EGLApi"*, i8*, i32, i32)*, i8* (%"class.gl::EGLApi"*, i8*, i32, i32)** %294, i64 59
  %296 = load i8* (%"class.gl::EGLApi"*, i8*, i32, i32)*, i8* (%"class.gl::EGLApi"*, i8*, i32, i32)** %295, align 8, !noalias !29
  %297 = call i8* %296(%"class.gl::EGLApi"* %292, i8* %12, i32 13416, i32 %91) #11, !noalias !29
  %298 = icmp eq i8* %297, null
  br i1 %298, label %319, label %299

299:                                              ; preds = %290
  %300 = call i64 @strlen(i8* nonnull %297) #11, !noalias !29
  %301 = icmp ugt i64 %300, -17
  br i1 %301, label %302, label %304

302:                                              ; preds = %299
  %303 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %303) #13
  unreachable

304:                                              ; preds = %299
  %305 = icmp ult i64 %300, 23
  br i1 %305, label %311, label %306

306:                                              ; preds = %304
  %307 = add nuw i64 %300, 16
  %308 = and i64 %307, -16
  %309 = call i8* @_Znwm(i64 %308) #12
  store i8* %309, i8** %83, align 8, !alias.scope !29
  %310 = or i64 %308, -9223372036854775808
  store i64 %310, i64* %84, align 8, !alias.scope !29
  store i64 %300, i64* %85, align 8, !alias.scope !29
  br label %314

311:                                              ; preds = %304
  %312 = trunc i64 %300 to i8
  store i8 %312, i8* %87, align 1, !alias.scope !29
  %313 = icmp eq i64 %300, 0
  br i1 %313, label %316, label %314

314:                                              ; preds = %311, %306
  %315 = phi i8* [ %309, %306 ], [ %82, %311 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %315, i8* nonnull align 1 %297, i64 %300, i1 false) #11
  br label %316

316:                                              ; preds = %314, %311
  %317 = phi i8* [ %82, %311 ], [ %315, %314 ]
  %318 = getelementptr inbounds i8, i8* %317, i64 %300
  store i8 0, i8* %318, align 1
  br label %320

319:                                              ; preds = %290
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 0, i64 24, i1 false) #11, !alias.scope !29
  br label %320

320:                                              ; preds = %316, %319
  %321 = load %"struct.gfx::ANGLEFeature"*, %"struct.gfx::ANGLEFeature"** %57, align 8
  %322 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %321, i64 %90, i32 5
  %323 = bitcast %"class.std::__1::basic_string"* %322 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %324 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %323, i64 0, i32 1, i32 0
  %325 = load i8, i8* %324, align 1
  %326 = icmp slt i8 %325, 0
  br i1 %326, label %327, label %330

327:                                              ; preds = %320
  %328 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %322, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %329 = load i8*, i8** %328, align 8
  call void @_ZdlPv(i8* %329) #12
  br label %330

330:                                              ; preds = %327, %320
  %331 = bitcast %"class.std::__1::basic_string"* %322 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %331, i8* nonnull align 8 %82, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #11
  %332 = add nuw i64 %90, 1
  %333 = load i64, i64* %22, align 8
  %334 = load i64, i64* %24, align 8
  %335 = sub i64 %333, %334
  %336 = sdiv exact i64 %335, 144
  %337 = icmp ult i64 %332, %336
  br i1 %337, label %89, label %88

338:                                              ; preds = %88, %2
  %339 = call zeroext i1 @_ZN8features20IsUsingOzonePlatformEv() #11
  br i1 %339, label %340, label %356

340:                                              ; preds = %338
  %341 = call %"class.ui::OzonePlatform"* @_ZN2ui13OzonePlatform11GetInstanceEv() #11
  %342 = bitcast %"class.ui::OzonePlatform"* %341 to %"class.ui::PlatformGLEGLUtility"* (%"class.ui::OzonePlatform"*)***
  %343 = load %"class.ui::PlatformGLEGLUtility"* (%"class.ui::OzonePlatform"*)**, %"class.ui::PlatformGLEGLUtility"* (%"class.ui::OzonePlatform"*)*** %342, align 8
  %344 = getelementptr inbounds %"class.ui::PlatformGLEGLUtility"* (%"class.ui::OzonePlatform"*)*, %"class.ui::PlatformGLEGLUtility"* (%"class.ui::OzonePlatform"*)** %343, i64 15
  %345 = load %"class.ui::PlatformGLEGLUtility"* (%"class.ui::OzonePlatform"*)*, %"class.ui::PlatformGLEGLUtility"* (%"class.ui::OzonePlatform"*)** %344, align 8
  %346 = call %"class.ui::PlatformGLEGLUtility"* %345(%"class.ui::OzonePlatform"* %341) #11
  %347 = icmp eq %"class.ui::PlatformGLEGLUtility"* %346, null
  br i1 %347, label %360, label %348

348:                                              ; preds = %340
  %349 = getelementptr inbounds %"struct.gpu::GpuPreferences", %"struct.gpu::GpuPreferences"* %1, i64 0, i32 63
  %350 = load i8, i8* %349, align 8, !range !13
  %351 = icmp ne i8 %350, 0
  %352 = bitcast %"class.ui::PlatformGLEGLUtility"* %346 to void (%"class.ui::PlatformGLEGLUtility"*, i1, %"struct.gfx::GpuExtraInfo"*)***
  %353 = load void (%"class.ui::PlatformGLEGLUtility"*, i1, %"struct.gfx::GpuExtraInfo"*)**, void (%"class.ui::PlatformGLEGLUtility"*, i1, %"struct.gfx::GpuExtraInfo"*)*** %352, align 8
  %354 = getelementptr inbounds void (%"class.ui::PlatformGLEGLUtility"*, i1, %"struct.gfx::GpuExtraInfo"*)*, void (%"class.ui::PlatformGLEGLUtility"*, i1, %"struct.gfx::GpuExtraInfo"*)** %353, i64 5
  %355 = load void (%"class.ui::PlatformGLEGLUtility"*, i1, %"struct.gfx::GpuExtraInfo"*)*, void (%"class.ui::PlatformGLEGLUtility"*, i1, %"struct.gfx::GpuExtraInfo"*)** %354, align 8
  call void %355(%"class.ui::PlatformGLEGLUtility"* nonnull %346, i1 zeroext %351, %"struct.gfx::GpuExtraInfo"* dereferenceable(48) %0) #11
  br label %360

356:                                              ; preds = %338
  %357 = getelementptr inbounds %"struct.gpu::GpuPreferences", %"struct.gpu::GpuPreferences"* %1, i64 0, i32 63
  %358 = load i8, i8* %357, align 8, !range !13
  %359 = icmp ne i8 %358, 0
  call void @_ZN2gl22CollectX11GpuExtraInfoEbRN3gfx12GpuExtraInfoE(i1 zeroext %359, %"struct.gfx::GpuExtraInfo"* dereferenceable(48) %0) #11
  br label %360

360:                                              ; preds = %348, %340, %356
  ret i1 true
}

declare zeroext i1 @_ZN2gl12GLSurfaceEGL30IsANGLEFeatureControlSupportedEv() local_unnamed_addr #2

declare i8* @_ZN2gl12GLSurfaceEGL18GetHardwareDisplayEv() local_unnamed_addr #2

declare zeroext i1 @_ZN8features20IsUsingOzonePlatformEv() local_unnamed_addr #2

declare %"class.ui::OzonePlatform"* @_ZN2ui13OzonePlatform11GetInstanceEv() local_unnamed_addr #2

declare void @_ZN2gl22CollectX11GpuExtraInfoEbRN3gfx12GpuExtraInfoE(i1 zeroext, %"struct.gfx::GpuExtraInfo"* dereferenceable(48)) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

declare %"class.gl::GLSurface"* @_ZN2gl4init24CreateOffscreenGLSurfaceERKN3gfx4SizeE(%"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN2gl16GLContextAttribsC1Ev(%"struct.gl::GLContextAttribs"*) unnamed_addr #2

declare %"class.gl::GLContext"* @_ZN2gl4init15CreateGLContextEPNS_12GLShareGroupEPNS_9GLSurfaceERKNS_16GLContextAttribsE(%"class.gl::GLShareGroup"*, %"class.gl::GLSurface"*, %"struct.gl::GLContextAttribs"* dereferenceable(28)) local_unnamed_addr #2

declare zeroext i1 @_ZN2gl9GLContext11MakeCurrentEPNS_9GLSurfaceE(%"class.gl::GLContext"*, %"class.gl::GLSurface"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2gl16GLContextAttribsD1Ev(%"struct.gl::GLContextAttribs"*) unnamed_addr #3

declare void @_ZN2gl4init19CreateGrGLInterfaceERKNS_13GLVersionInfoEbPNS_16ProgressReporterE(%class.sk_sp.302* sret, %"struct.gl::GLVersionInfo"* dereferenceable(72), i1 zeroext, %"class.gl::ProgressReporter"*) local_unnamed_addr #2

declare void @_ZN15GrDirectContext6MakeGLE5sk_spIK13GrGLInterfaceE(%class.sk_sp.303* sret, %class.sk_sp*) local_unnamed_addr #2

declare void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !13
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #12
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN3gfx12HasExtensionERKN4base8internal9flat_treeINS0_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8identityENS4_4lessIvEENS4_6vectorIS7_NS4_9allocatorIS7_EEEEEERKS7_(%"class.base::internal::flat_tree"* dereferenceable(24), %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gpu7GPUInfo9GPUDeviceENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.14"*, %"struct.gpu::GPUInfo::GPUDevice"* dereferenceable(120)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.gpu::GPUInfo::GPUDevice"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.14"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 120
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 153722867280912930
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.14"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.gpu::GPUInfo::GPUDevice"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 120
  %20 = icmp ult i64 %19, 76861433640456465
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 153722867280912930, %14 ]
  %28 = mul i64 %27, 120
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"struct.gpu::GPUInfo::GPUDevice"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.gpu::GPUInfo::GPUDevice"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %33, i64 %32
  %36 = ptrtoint %"struct.gpu::GPUInfo::GPUDevice"* %35 to i64
  tail call void @_ZN3gpu7GPUInfo9GPUDeviceC1ERKS1_(%"struct.gpu::GPUInfo::GPUDevice"* %34, %"struct.gpu::GPUInfo::GPUDevice"* dereferenceable(120) %1) #11
  %37 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %34, i64 1
  %38 = ptrtoint %"struct.gpu::GPUInfo::GPUDevice"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.gpu::GPUInfo::GPUDevice"*, %"struct.gpu::GPUInfo::GPUDevice"** %39, align 8
  %41 = load %"struct.gpu::GPUInfo::GPUDevice"*, %"struct.gpu::GPUInfo::GPUDevice"** %3, align 8
  %42 = icmp eq %"struct.gpu::GPUInfo::GPUDevice"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.gpu::GPUInfo::GPUDevice"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.gpu::GPUInfo::GPUDevice"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.gpu::GPUInfo::GPUDevice"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %47, i64 -1
  tail call void @_ZN3gpu7GPUInfo9GPUDeviceC1EOS1_(%"struct.gpu::GPUInfo::GPUDevice"* %48, %"struct.gpu::GPUInfo::GPUDevice"* dereferenceable(120) %49) #11
  %50 = icmp eq %"struct.gpu::GPUInfo::GPUDevice"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.gpu::GPUInfo::GPUDevice"*, %"struct.gpu::GPUInfo::GPUDevice"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.gpu::GPUInfo::GPUDevice"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.gpu::GPUInfo::GPUDevice"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.gpu::GPUInfo::GPUDevice"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.gpu::GPUInfo::GPUDevice"*
  %60 = icmp eq %"struct.gpu::GPUInfo::GPUDevice"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.gpu::GPUInfo::GPUDevice"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %62, i64 -1
  tail call void @_ZN3gpu7GPUInfo9GPUDeviceD1Ev(%"struct.gpu::GPUInfo::GPUDevice"* %63) #11
  %64 = icmp eq %"struct.gpu::GPUInfo::GPUDevice"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #12
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN3gpu7GPUInfo9GPUDeviceC1ERKS1_(%"struct.gpu::GPUInfo::GPUDevice"*, %"struct.gpu::GPUInfo::GPUDevice"* dereferenceable(120)) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN3gpu7GPUInfo9GPUDeviceC1EOS1_(%"struct.gpu::GPUInfo::GPUDevice"*, %"struct.gpu::GPUInfo::GPUDevice"* dereferenceable(120)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gfx12ANGLEFeatureENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.164"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.gfx::ANGLEFeature"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.gfx::ANGLEFeature"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 144
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %24, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.gfx::ANGLEFeature"*
  %14 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %13, i64 %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %22, label %18

16:                                               ; preds = %18
  %17 = ptrtoint %"struct.gfx::ANGLEFeature"* %14 to i64
  br label %22

18:                                               ; preds = %12, %18
  %19 = phi %"struct.gfx::ANGLEFeature"* [ %20, %18 ], [ %13, %12 ]
  tail call void @_ZN3gfx12ANGLEFeatureC1Ev(%"struct.gfx::ANGLEFeature"* %19) #11
  %20 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %19, i64 1
  %21 = icmp eq %"struct.gfx::ANGLEFeature"* %20, %14
  br i1 %21, label %16, label %18

22:                                               ; preds = %12, %16
  %23 = phi i64 [ %17, %16 ], [ %8, %12 ]
  store i64 %23, i64* %7, align 8
  br label %90

24:                                               ; preds = %2
  %25 = bitcast %"class.std::__1::vector.164"* %0 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %8, %26
  %28 = sdiv exact i64 %27, 144
  %29 = add i64 %28, %1
  %30 = icmp ugt i64 %29, 128102389400760775
  br i1 %30, label %31, label %33

31:                                               ; preds = %24
  %32 = bitcast %"class.std::__1::vector.164"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #13
  unreachable

33:                                               ; preds = %24
  %34 = sub i64 %5, %26
  %35 = sdiv exact i64 %34, 144
  %36 = icmp ult i64 %35, 64051194700380387
  br i1 %36, label %37, label %42

37:                                               ; preds = %33
  %38 = shl nsw i64 %35, 1
  %39 = icmp ult i64 %38, %29
  %40 = select i1 %39, i64 %29, i64 %38
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %33, %37
  %43 = phi i64 [ %40, %37 ], [ 128102389400760775, %33 ]
  %44 = mul i64 %43, 144
  %45 = tail call i8* @_Znwm(i64 %44) #12
  %46 = bitcast i8* %45 to %"struct.gfx::ANGLEFeature"*
  br label %47

47:                                               ; preds = %37, %42
  %48 = phi i64 [ %43, %42 ], [ 0, %37 ]
  %49 = phi %"struct.gfx::ANGLEFeature"* [ %46, %42 ], [ null, %37 ]
  %50 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %49, i64 %28
  %51 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %49, i64 %48
  %52 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %50, i64 %1
  br label %53

53:                                               ; preds = %47, %53
  %54 = phi %"struct.gfx::ANGLEFeature"* [ %55, %53 ], [ %50, %47 ]
  tail call void @_ZN3gfx12ANGLEFeatureC1Ev(%"struct.gfx::ANGLEFeature"* %54) #11
  %55 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %54, i64 1
  %56 = icmp eq %"struct.gfx::ANGLEFeature"* %52, %55
  br i1 %56, label %57, label %53

57:                                               ; preds = %53
  %58 = ptrtoint %"struct.gfx::ANGLEFeature"* %51 to i64
  %59 = ptrtoint %"struct.gfx::ANGLEFeature"* %52 to i64
  %60 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %0, i64 0, i32 0, i32 0
  %61 = load %"struct.gfx::ANGLEFeature"*, %"struct.gfx::ANGLEFeature"** %60, align 8
  %62 = load %"struct.gfx::ANGLEFeature"*, %"struct.gfx::ANGLEFeature"** %6, align 8
  %63 = icmp eq %"struct.gfx::ANGLEFeature"* %62, %61
  br i1 %63, label %64, label %66

64:                                               ; preds = %57
  %65 = ptrtoint %"struct.gfx::ANGLEFeature"* %61 to i64
  br label %75

66:                                               ; preds = %57, %66
  %67 = phi %"struct.gfx::ANGLEFeature"* [ %69, %66 ], [ %50, %57 ]
  %68 = phi %"struct.gfx::ANGLEFeature"* [ %70, %66 ], [ %62, %57 ]
  %69 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %67, i64 -1
  %70 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %68, i64 -1
  tail call void @_ZN3gfx12ANGLEFeatureC1EOS0_(%"struct.gfx::ANGLEFeature"* %69, %"struct.gfx::ANGLEFeature"* dereferenceable(144) %70) #11
  %71 = icmp eq %"struct.gfx::ANGLEFeature"* %70, %61
  br i1 %71, label %72, label %66

72:                                               ; preds = %66
  %73 = load i64, i64* %25, align 8
  %74 = load %"struct.gfx::ANGLEFeature"*, %"struct.gfx::ANGLEFeature"** %6, align 8
  br label %75

75:                                               ; preds = %64, %72
  %76 = phi %"struct.gfx::ANGLEFeature"* [ %61, %64 ], [ %74, %72 ]
  %77 = phi %"struct.gfx::ANGLEFeature"* [ %50, %64 ], [ %69, %72 ]
  %78 = phi i64 [ %65, %64 ], [ %73, %72 ]
  %79 = ptrtoint %"struct.gfx::ANGLEFeature"* %77 to i64
  store i64 %79, i64* %25, align 8
  store i64 %59, i64* %7, align 8
  store i64 %58, i64* %4, align 8
  %80 = inttoptr i64 %78 to %"struct.gfx::ANGLEFeature"*
  %81 = icmp eq %"struct.gfx::ANGLEFeature"* %76, %80
  br i1 %81, label %86, label %82

82:                                               ; preds = %75, %82
  %83 = phi %"struct.gfx::ANGLEFeature"* [ %84, %82 ], [ %76, %75 ]
  %84 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %83, i64 -1
  tail call void @_ZN3gfx12ANGLEFeatureD1Ev(%"struct.gfx::ANGLEFeature"* %84) #11
  %85 = icmp eq %"struct.gfx::ANGLEFeature"* %84, %80
  br i1 %85, label %86, label %82

86:                                               ; preds = %82, %75
  %87 = icmp eq i64 %78, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %86
  %89 = inttoptr i64 %78 to i8*
  tail call void @_ZdlPv(i8* %89) #12
  br label %90

90:                                               ; preds = %88, %86, %22
  ret void
}

declare void @_ZN3gfx12ANGLEFeatureC1Ev(%"struct.gfx::ANGLEFeature"*) unnamed_addr #2

declare void @_ZN3gfx12ANGLEFeatureC1EOS0_(%"struct.gfx::ANGLEFeature"*, %"struct.gfx::ANGLEFeature"* dereferenceable(144)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gfx12ANGLEFeatureD1Ev(%"struct.gfx::ANGLEFeature"*) unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN12_GLOBAL__N_120GetVersionFromStringERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE: argument 0"}
!5 = distinct !{!5, !"_ZN12_GLOBAL__N_120GetVersionFromStringERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!9 = !{!7, !4}
!10 = !{!11, !4}
!11 = distinct !{!11, !12, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!13 = !{i8 0, i8 2}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN12_GLOBAL__N_115QueryEGLStringiEPvjj: argument 0"}
!16 = distinct !{!16, !"_ZN12_GLOBAL__N_115QueryEGLStringiEPvjj"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN12_GLOBAL__N_115QueryEGLStringiEPvjj: argument 0"}
!19 = distinct !{!19, !"_ZN12_GLOBAL__N_115QueryEGLStringiEPvjj"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN12_GLOBAL__N_115QueryEGLStringiEPvjj: argument 0"}
!22 = distinct !{!22, !"_ZN12_GLOBAL__N_115QueryEGLStringiEPvjj"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN12_GLOBAL__N_115QueryEGLStringiEPvjj: argument 0"}
!25 = distinct !{!25, !"_ZN12_GLOBAL__N_115QueryEGLStringiEPvjj"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN12_GLOBAL__N_115QueryEGLStringiEPvjj: argument 0"}
!28 = distinct !{!28, !"_ZN12_GLOBAL__N_115QueryEGLStringiEPvjj"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN12_GLOBAL__N_115QueryEGLStringiEPvjj: argument 0"}
!31 = distinct !{!31, !"_ZN12_GLOBAL__N_115QueryEGLStringiEPvjj"}
