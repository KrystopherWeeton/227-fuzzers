; ModuleID = '../../v8/src/profiler/sampling-heap-profiler.cc'
source_filename = "../../v8/src/profiler/sampling-heap-profiler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::SamplingHeapProfiler" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Heap"*, i64, i32, [4 x i8], %"class.v8::internal::SamplingHeapProfiler::Observer", %"class.v8::internal::StringsStorage"*, %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.std::__1::unordered_map.1003", i32, [4 x i8], i64, i32, [4 x i8] }>
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.682", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.688", %"class.std::__1::unique_ptr.709", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.719", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.889", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.902", void (i32, %"class.v8::SharedArrayBuffer"*, i64, i64, double, %"class.v8::Isolate::AtomicsWaitWakeHandle"*, i8*)*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.912", void (%"class.v8::Context"*, %"class.v8::Module"*, %"class.v8::Object"*)*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.923", %"struct.std::__1::atomic.141", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.1043", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.1089"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1100", i32, i8, i8, i32, i32, %"class.std::__1::vector.1106", %"class.std::__1::vector.1106", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1113", i64, %"class.std::__1::unordered_map.1114", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.530", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.149", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1170", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1184", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, %"class.v8::Value"* (%"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Array"*)*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1218", %"class.std::__1::vector.1222", %"class.std::__1::vector.1222", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.677", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.677" = type { %"struct.std::__1::__atomic_base.678" }
%"struct.std::__1::__atomic_base.678" = type { %"struct.std::__1::__cxx_atomic_impl.679" }
%"struct.std::__1::__cxx_atomic_impl.679" = type { %"struct.std::__1::__cxx_atomic_base_impl.680" }
%"struct.std::__1::__cxx_atomic_base_impl.680" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.682" = type { %"class.std::__1::__compressed_pair.683" }
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.20", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.135", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.150", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.154", %"class.std::__1::vector.154", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.297", %"class.std::__1::unique_ptr.303", %"class.std::__1::unique_ptr.309", %"class.std::__1::unique_ptr.348", %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.417", %"class.std::__1::unique_ptr.423", %"class.std::__1::unique_ptr.433", %"class.std::__1::unique_ptr.439", %"class.std::__1::unique_ptr.439", %"class.std::__1::unique_ptr.445", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.457", %"class.std::__1::unique_ptr.463", %"class.std::__1::shared_ptr.469", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.492", %"class.std::__1::unique_ptr.518", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.524", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.537", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.319", i8, [7 x i8], %"class.std::__1::unordered_map.543", %"class.std::__1::unordered_map.569", %"class.std::__1::unordered_map.543", %"class.std::__1::unordered_map.593", %"class.std::__1::vector.621", i8, %"class.std::__1::unique_ptr.628", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.15", %"struct.std::__1::atomic.15", %"struct.std::__1::atomic.15" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i64 }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.24" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.92" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.88" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.29", %"class.std::__1::vector.29", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.31" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.36" }
%"class.std::__1::__hash_table.36" = type <{ %"class.std::__1::unique_ptr.37", %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.54", [4 x i8] }>
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39", %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::__hash_node_base.40"** }
%"struct.std::__1::__hash_node_base.40" = type { %"struct.std::__1::__hash_node_base.40"* }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::__bucket_list_deallocator.42" }
%"class.std::__1::__bucket_list_deallocator.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.40" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.15", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.77", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.15", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.15", %"struct.std::__1::atomic.59", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.59" = type { %"struct.std::__1::__atomic_base.60" }
%"struct.std::__1::__atomic_base.60" = type { %"struct.std::__1::__cxx_atomic_impl.61" }
%"struct.std::__1::__cxx_atomic_impl.61" = type { %"struct.std::__1::__cxx_atomic_base_impl.62" }
%"struct.std::__1::__cxx_atomic_base_impl.62" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.63" }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.65" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.70", %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::atomic.77" = type { %"struct.std::__1::__atomic_base.78" }
%"struct.std::__1::__atomic_base.78" = type { %"struct.std::__1::__cxx_atomic_impl.79" }
%"struct.std::__1::__cxx_atomic_impl.79" = type { %"struct.std::__1::__cxx_atomic_base_impl.80" }
%"struct.std::__1::__cxx_atomic_base_impl.80" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.81", i8, [7 x i8] }>
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { i64*, i64*, %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"*, %"class.std::__1::__compressed_pair.95" }
%"struct.std::__1::pair.94" = type { i32, i64 }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.std::__1::pair.94"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.100" }
%"class.std::__1::unordered_map.100" = type { %"class.std::__1::__hash_table.101" }
%"class.std::__1::__hash_table.101" = type <{ %"class.std::__1::unique_ptr.102", %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.117", %"class.std::__1::__compressed_pair.122", [4 x i8] }>
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104", %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.105"** }
%"struct.std::__1::__hash_node_base.105" = type { %"struct.std::__1::__hash_node_base.105"* }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.std::__1::__bucket_list_deallocator.107" }
%"class.std::__1::__bucket_list_deallocator.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.std::__1::__hash_node_base.105" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.128", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.128" = type { %"class.std::__1::__vector_base.129" }
%"class.std::__1::__vector_base.129" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.130" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.634", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.663", %"class.std::__1::unique_ptr.463", %"class.std::__1::vector.669", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.634" = type { %"struct.std::__1::__atomic_base.635" }
%"struct.std::__1::__atomic_base.635" = type { %"struct.std::__1::__cxx_atomic_impl.636" }
%"struct.std::__1::__cxx_atomic_impl.636" = type { %"struct.std::__1::__cxx_atomic_base_impl.637" }
%"struct.std::__1::__cxx_atomic_base_impl.637" = type { i32 }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.653" }
%"class.std::__1::vector.653" = type { %"class.std::__1::__vector_base.654" }
%"class.std::__1::__vector_base.654" = type { i64**, i64**, %"class.std::__1::__compressed_pair.655" }
%"class.std::__1::__compressed_pair.655" = type { %"struct.std::__1::__compressed_pair_elem.656" }
%"struct.std::__1::__compressed_pair_elem.656" = type { i64** }
%"class.std::__1::unique_ptr.663" = type { %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.653", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.669" = type { %"class.std::__1::__vector_base.670" }
%"class.std::__1::__vector_base.670" = type { %"struct.std::__1::pair.671"*, %"struct.std::__1::pair.671"*, %"class.std::__1::__compressed_pair.672" }
%"struct.std::__1::pair.671" = type opaque
%"class.std::__1::__compressed_pair.672" = type { %"struct.std::__1::__compressed_pair_elem.673" }
%"struct.std::__1::__compressed_pair_elem.673" = type { %"struct.std::__1::pair.671"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.141", %"struct.std::__1::atomic.145", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.145" = type { %"struct.std::__1::__atomic_base.146" }
%"struct.std::__1::__atomic_base.146" = type { %"struct.std::__1::__cxx_atomic_impl.147" }
%"struct.std::__1::__cxx_atomic_impl.147" = type { %"struct.std::__1::__cxx_atomic_base_impl.148" }
%"struct.std::__1::__cxx_atomic_base_impl.148" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.149" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.150" = type { %"struct.std::__1::__atomic_base.151" }
%"struct.std::__1::__atomic_base.151" = type { %"struct.std::__1::__cxx_atomic_impl.152" }
%"struct.std::__1::__cxx_atomic_impl.152" = type { %"struct.std::__1::__cxx_atomic_base_impl.153" }
%"struct.std::__1::__cxx_atomic_base_impl.153" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.156" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.215", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.269", %"class.std::__1::vector.269", %"class.std::__1::vector.269", %"class.std::__1::vector.276", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.170", %"class.std::__1::vector.171", %"class.std::__1::vector.178", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.170" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.171" = type { %"class.std::__1::__vector_base.172" }
%"class.std::__1::__vector_base.172" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.173" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.178" = type { %"class.std::__1::__vector_base.179" }
%"class.std::__1::__vector_base.179" = type { %"class.std::__1::unique_ptr.180"*, %"class.std::__1::unique_ptr.180"*, %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::unique_ptr.180" = type opaque
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.std::__1::unique_ptr.180"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.186", %"class.v8::internal::Worklist.188", %"class.v8::internal::Worklist.188", %"class.v8::internal::Worklist.188", %"class.v8::internal::Worklist.190", %"class.v8::internal::Worklist.192", %"class.v8::internal::Worklist.194", %"class.v8::internal::Worklist.196", %"class.v8::internal::Worklist.198", %"class.v8::internal::Worklist.200" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.186" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.188" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.190" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.192" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.194" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.196" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.198" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.200" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.202", i8, i64 }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.218" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.170"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.218" = type { %"class.std::__1::__hash_table.219" }
%"class.std::__1::__hash_table.219" = type <{ %"class.std::__1::unique_ptr.220", %"class.std::__1::__compressed_pair.230", %"class.std::__1::__compressed_pair.235", %"class.std::__1::__compressed_pair.238", [4 x i8] }>
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222", %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"struct.std::__1::__hash_node_base.223"** }
%"struct.std::__1::__hash_node_base.223" = type { %"struct.std::__1::__hash_node_base.223"* }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.std::__1::__bucket_list_deallocator.225" }
%"class.std::__1::__bucket_list_deallocator.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"struct.std::__1::__hash_node_base.223" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.245" }
%"class.std::__1::unordered_map.245" = type { %"class.std::__1::__hash_table.246" }
%"class.std::__1::__hash_table.246" = type <{ %"class.std::__1::unique_ptr.247", %"class.std::__1::__compressed_pair.257", %"class.std::__1::__compressed_pair.262", %"class.std::__1::__compressed_pair.265", [4 x i8] }>
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249", %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"struct.std::__1::__hash_node_base.250"** }
%"struct.std::__1::__hash_node_base.250" = type { %"struct.std::__1::__hash_node_base.250"* }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.std::__1::__bucket_list_deallocator.252" }
%"class.std::__1::__bucket_list_deallocator.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.std::__1::__hash_node_base.250" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.269" = type { %"class.std::__1::__vector_base.270" }
%"class.std::__1::__vector_base.270" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.276" = type { %"class.std::__1::__vector_base.277" }
%"class.std::__1::__vector_base.277" = type { %"struct.std::__1::pair.278"*, %"struct.std::__1::pair.278"*, %"class.std::__1::__compressed_pair.279" }
%"struct.std::__1::pair.278" = type opaque
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::pair.278"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.284", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.269"], [3 x %"class.std::__1::vector.269"], i8, %"struct.std::__1::atomic.141", [6 x i8], %"class.std::__1::vector.269", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.294"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.269", %"class.std::__1::vector.269", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.294" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.319", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.312"], %"class.std::__1::unique_ptr.284" }
%"class.std::__1::vector.312" = type { %"class.std::__1::__vector_base.313" }
%"class.std::__1::__vector_base.313" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.351", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.355", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.360" }
%"struct.std::__1::atomic.351" = type { %"struct.std::__1::__atomic_base.352" }
%"struct.std::__1::__atomic_base.352" = type { %"struct.std::__1::__cxx_atomic_impl.353" }
%"struct.std::__1::__cxx_atomic_impl.353" = type { %"struct.std::__1::__cxx_atomic_base_impl.354" }
%"struct.std::__1::__cxx_atomic_base_impl.354" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.355" = type { %"struct.std::__1::__atomic_base.356" }
%"struct.std::__1::__atomic_base.356" = type { %"struct.std::__1::__cxx_atomic_impl.357" }
%"struct.std::__1::__cxx_atomic_impl.357" = type { %"struct.std::__1::__cxx_atomic_base_impl.358" }
%"struct.std::__1::__cxx_atomic_base_impl.358" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.360" = type { %"class.std::__1::__hash_table.361" }
%"class.std::__1::__hash_table.361" = type <{ %"class.std::__1::unique_ptr.362", %"class.std::__1::__compressed_pair.372", %"class.std::__1::__compressed_pair.377", %"class.std::__1::__compressed_pair.380", [4 x i8] }>
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364", %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"struct.std::__1::__hash_node_base.365"** }
%"struct.std::__1::__hash_node_base.365" = type { %"struct.std::__1::__hash_node_base.365"* }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"class.std::__1::__bucket_list_deallocator.367" }
%"class.std::__1::__bucket_list_deallocator.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"struct.std::__1::__hash_node_base.365" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.284", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.141", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.390", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.390" = type { %"class.std::__1::__hash_table.391" }
%"class.std::__1::__hash_table.391" = type <{ %"class.std::__1::unique_ptr.392", %"class.std::__1::__compressed_pair.402", %"class.std::__1::__compressed_pair.407", %"class.std::__1::__compressed_pair.410", [4 x i8] }>
%"class.std::__1::unique_ptr.392" = type { %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394", %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.394" = type { %"struct.std::__1::__hash_node_base.395"** }
%"struct.std::__1::__hash_node_base.395" = type { %"struct.std::__1::__hash_node_base.395"* }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.std::__1::__bucket_list_deallocator.397" }
%"class.std::__1::__bucket_list_deallocator.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"struct.std::__1::__hash_node_base.395" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.417" = type { %"class.std::__1::__compressed_pair.418" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"struct.std::__1::__compressed_pair_elem.419" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.426" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.433" = type { %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.439" = type { %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.469" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.488", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.470", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.473", %"class.std::__1::set.481" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.473" = type { %"class.std::__1::__tree.474" }
%"class.std::__1::__tree.474" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.475", %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.481" = type { %"class.std::__1::__tree.482" }
%"class.std::__1::__tree.482" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.475", %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::atomic.488" = type { %"struct.std::__1::__atomic_base.489" }
%"struct.std::__1::__atomic_base.489" = type { %"struct.std::__1::__cxx_atomic_impl.490" }
%"struct.std::__1::__cxx_atomic_impl.490" = type { %"struct.std::__1::__cxx_atomic_base_impl.491" }
%"struct.std::__1::__cxx_atomic_base_impl.491" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.492" = type { %"class.std::__1::__hash_table.493" }
%"class.std::__1::__hash_table.493" = type <{ %"class.std::__1::unique_ptr.494", %"class.std::__1::__compressed_pair.504", %"class.std::__1::__compressed_pair.509", %"class.std::__1::__compressed_pair.512", [4 x i8] }>
%"class.std::__1::unique_ptr.494" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496", %"struct.std::__1::__compressed_pair_elem.498" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.497"** }
%"struct.std::__1::__hash_node_base.497" = type { %"struct.std::__1::__hash_node_base.497"* }
%"struct.std::__1::__compressed_pair_elem.498" = type { %"class.std::__1::__bucket_list_deallocator.499" }
%"class.std::__1::__bucket_list_deallocator.499" = type { %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.505" }
%"struct.std::__1::__compressed_pair_elem.505" = type { %"struct.std::__1::__hash_node_base.497" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.518" = type { %"class.std::__1::__compressed_pair.519" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.524" = type { %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.530", %"class.std::__1::vector.530" }
%"class.std::__1::unique_ptr.537" = type { %"class.std::__1::__compressed_pair.538" }
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.319" = type { %"class.std::__1::__hash_table.320" }
%"class.std::__1::__hash_table.320" = type <{ %"class.std::__1::unique_ptr.321", %"class.std::__1::__compressed_pair.331", %"class.std::__1::__compressed_pair.336", %"class.std::__1::__compressed_pair.340", [4 x i8] }>
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323", %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"struct.std::__1::__hash_node_base.324"** }
%"struct.std::__1::__hash_node_base.324" = type { %"struct.std::__1::__hash_node_base.324"* }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.std::__1::__bucket_list_deallocator.326" }
%"class.std::__1::__bucket_list_deallocator.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.324" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.569" = type { %"class.std::__1::__hash_table.570" }
%"class.std::__1::__hash_table.570" = type <{ %"class.std::__1::unique_ptr.571", %"class.std::__1::__compressed_pair.581", %"class.std::__1::__compressed_pair.586", %"class.std::__1::__compressed_pair.589", [4 x i8] }>
%"class.std::__1::unique_ptr.571" = type { %"class.std::__1::__compressed_pair.572" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.573", %"struct.std::__1::__compressed_pair_elem.575" }
%"struct.std::__1::__compressed_pair_elem.573" = type { %"struct.std::__1::__hash_node_base.574"** }
%"struct.std::__1::__hash_node_base.574" = type { %"struct.std::__1::__hash_node_base.574"* }
%"struct.std::__1::__compressed_pair_elem.575" = type { %"class.std::__1::__bucket_list_deallocator.576" }
%"class.std::__1::__bucket_list_deallocator.576" = type { %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.582" }
%"struct.std::__1::__compressed_pair_elem.582" = type { %"struct.std::__1::__hash_node_base.574" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.543" = type { %"class.std::__1::__hash_table.544" }
%"class.std::__1::__hash_table.544" = type <{ %"class.std::__1::unique_ptr.545", %"class.std::__1::__compressed_pair.555", %"class.std::__1::__compressed_pair.560", %"class.std::__1::__compressed_pair.563", [4 x i8] }>
%"class.std::__1::unique_ptr.545" = type { %"class.std::__1::__compressed_pair.546" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.547", %"struct.std::__1::__compressed_pair_elem.549" }
%"struct.std::__1::__compressed_pair_elem.547" = type { %"struct.std::__1::__hash_node_base.548"** }
%"struct.std::__1::__hash_node_base.548" = type { %"struct.std::__1::__hash_node_base.548"* }
%"struct.std::__1::__compressed_pair_elem.549" = type { %"class.std::__1::__bucket_list_deallocator.550" }
%"class.std::__1::__bucket_list_deallocator.550" = type { %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.556" }
%"struct.std::__1::__compressed_pair_elem.556" = type { %"struct.std::__1::__hash_node_base.548" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.593" = type { %"class.std::__1::__hash_table.594" }
%"class.std::__1::__hash_table.594" = type <{ %"class.std::__1::unique_ptr.595", %"class.std::__1::__compressed_pair.605", %"class.std::__1::__compressed_pair.610", %"class.std::__1::__compressed_pair.615", [4 x i8] }>
%"class.std::__1::unique_ptr.595" = type { %"class.std::__1::__compressed_pair.596" }
%"class.std::__1::__compressed_pair.596" = type { %"struct.std::__1::__compressed_pair_elem.597", %"struct.std::__1::__compressed_pair_elem.599" }
%"struct.std::__1::__compressed_pair_elem.597" = type { %"struct.std::__1::__hash_node_base.598"** }
%"struct.std::__1::__hash_node_base.598" = type { %"struct.std::__1::__hash_node_base.598"* }
%"struct.std::__1::__compressed_pair_elem.599" = type { %"class.std::__1::__bucket_list_deallocator.600" }
%"class.std::__1::__bucket_list_deallocator.600" = type { %"class.std::__1::__compressed_pair.601" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"struct.std::__1::__hash_node_base.598" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.621" = type { %"class.std::__1::__vector_base.622" }
%"class.std::__1::__vector_base.622" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.623" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.628" = type { %"class.std::__1::__compressed_pair.629" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"struct.std::__1::__compressed_pair_elem.630" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.530" }
%"class.std::__1::shared_ptr.688" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.128", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.689", %"class.std::__1::unique_ptr.703" }
%"class.std::__1::unique_ptr.689" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.692" }
%"class.std::__1::vector.692" = type { %"class.std::__1::__vector_base.693" }
%"class.std::__1::__vector_base.693" = type { %"class.std::__1::unique_ptr.694"*, %"class.std::__1::unique_ptr.694"*, %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.1307" }
%"class.std::__1::__compressed_pair.1307" = type { %"struct.std::__1::__compressed_pair_elem.1308" }
%"struct.std::__1::__compressed_pair_elem.1308" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.std::__1::unique_ptr.694"* }
%"class.std::__1::unique_ptr.703" = type { %"class.std::__1::__compressed_pair.704" }
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.705" }
%"struct.std::__1::__compressed_pair_elem.705" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.709" = type { %"class.std::__1::__compressed_pair.710" }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.711" }
%"struct.std::__1::__compressed_pair_elem.711" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.712", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.712" = type { %"struct.std::__1::__atomic_base.713" }
%"struct.std::__1::__atomic_base.713" = type { %"struct.std::__1::__cxx_atomic_impl.714" }
%"struct.std::__1::__cxx_atomic_impl.714" = type { %"struct.std::__1::__cxx_atomic_base_impl.715" }
%"struct.std::__1::__cxx_atomic_base_impl.715" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.719" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.720", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.720" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.721", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.721" = type { %"class.std::__1::__vector_base.722" }
%"class.std::__1::__vector_base.722" = type { %"class.std::__1::unique_ptr.723"*, %"class.std::__1::unique_ptr.723"*, %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::unique_ptr.723" = type opaque
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.std::__1::unique_ptr.723"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.729", %"class.std::__1::unique_ptr.735", %"struct.std::__1::atomic.141", %"class.std::__1::unique_ptr.741", %"class.std::__1::unique_ptr.747", %"class.std::__1::unique_ptr.753", %"class.std::__1::unique_ptr.759", %"class.std::__1::unique_ptr.765", %"class.std::__1::set.771", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.735" = type { %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.737" }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.741" = type { %"class.std::__1::__compressed_pair.742" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.743" }
%"struct.std::__1::__compressed_pair_elem.743" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.753" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.771" = type { %"class.std::__1::__tree.772" }
%"class.std::__1::__tree.772" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.773", %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.773" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.780" }
%"class.v8::internal::TaggedImpl.780" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.779" }
%"class.v8::internal::TaggedImpl.779" = type { i32 }
%"class.v8::internal::Deoptimizer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::JSFunction", %"class.v8::internal::Code", i32, i8, i64, i32, i8, i32, i32, %"class.v8::internal::FrameDescription"*, i32, %"class.v8::internal::FrameDescription"**, i64, i64, i64, i64, i32, i64, %"class.v8::internal::TranslatedState", %"class.std::__1::vector.818", %"class.std::__1::unique_ptr.825" }
%"class.v8::internal::JSFunction" = type { %"class.v8::internal::JSFunctionOrBoundFunction" }
%"class.v8::internal::JSFunctionOrBoundFunction" = type { %"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" }
%"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Code" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FrameDescription" = type { i64, i32, %"class.v8::internal::RegisterValues", i64, i64, i64, i64, i64, i64, [1 x i64] }
%"class.v8::internal::RegisterValues" = type { [16 x i64], [16 x %"class.v8::internal::Float64"] }
%"class.v8::internal::Float64" = type { i64 }
%"class.v8::internal::TranslatedState" = type <{ i32, [4 x i8], %"class.std::__1::vector.781", %"class.v8::internal::Isolate"*, i64, i32, i32, %"class.std::__1::deque.805", %"class.v8::internal::Handle.817", %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.std::__1::vector.781" = type { %"class.std::__1::__vector_base.782" }
%"class.std::__1::__vector_base.782" = type { %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"*, %"class.std::__1::__compressed_pair.800" }
%"class.v8::internal::TranslatedFrame" = type <{ i32, %"class.v8::internal::BytecodeOffset", %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::Handle.783", i32, i32, i32, [4 x i8], %"class.std::__1::deque", %"class.v8::base::Optional.795", [6 x i8] }>
%"class.v8::internal::BytecodeOffset" = type { i32 }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle.783" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.791" }
%"struct.std::__1::__split_buffer" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.std::__1::__compressed_pair.786" }
%"class.v8::internal::TranslatedValue" = type { i8, i8, %"class.v8::internal::TranslatedState"*, %"class.v8::internal::Handle.784", %union.anon.785 }
%"class.v8::internal::Handle.784" = type { %"class.v8::internal::HandleBase" }
%union.anon.785 = type { %"class.v8::internal::Object" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"class.v8::internal::TranslatedValue"** }
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::base::Optional.795" = type { %"class.v8::base::internal::OptionalBase.796" }
%"class.v8::base::internal::OptionalBase.796" = type { %"struct.v8::base::internal::OptionalStorage.797" }
%"struct.v8::base::internal::OptionalStorage.797" = type { %"struct.v8::base::internal::OptionalStorageBase.798" }
%"struct.v8::base::internal::OptionalStorageBase.798" = type { i8, %union.anon.799 }
%union.anon.799 = type { i8 }
%"class.std::__1::__compressed_pair.800" = type { %"struct.std::__1::__compressed_pair_elem.801" }
%"struct.std::__1::__compressed_pair_elem.801" = type { %"class.v8::internal::TranslatedFrame"* }
%"class.std::__1::deque.805" = type { %"class.std::__1::__deque_base.806" }
%"class.std::__1::__deque_base.806" = type { %"struct.std::__1::__split_buffer.807", i64, %"class.std::__1::__compressed_pair.813" }
%"struct.std::__1::__split_buffer.807" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"class.std::__1::__compressed_pair.808" }
%"struct.v8::internal::TranslatedState::ObjectPosition" = type { i32, i32 }
%"class.std::__1::__compressed_pair.808" = type { %"struct.std::__1::__compressed_pair_elem.809" }
%"struct.std::__1::__compressed_pair_elem.809" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"** }
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::internal::Handle.817" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackVector" = type { %"class.v8::internal::TorqueGeneratedFeedbackVector" }
%"class.v8::internal::TorqueGeneratedFeedbackVector" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FeedbackSlot" = type { i32 }
%"class.std::__1::vector.818" = type { %"class.std::__1::__vector_base.819" }
%"class.std::__1::__vector_base.819" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"class.std::__1::__compressed_pair.820" }
%"struct.v8::internal::Deoptimizer::ValueToMaterialize" = type { i64, %"class.v8::internal::TranslatedFrame::iterator" }
%"class.v8::internal::TranslatedFrame::iterator" = type <{ %"class.std::__1::__deque_iterator", i32, [4 x i8] }>
%"class.std::__1::__deque_iterator" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"* }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"* }
%"class.std::__1::unique_ptr.825" = type { %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.v8::internal::CodeTracer::Scope"* }
%"class.v8::internal::CodeTracer::Scope" = type { %"class.v8::internal::CodeTracer"* }
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.647", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.831", %"class.v8::internal::DetachableVector.832", %"class.v8::internal::DetachableVector.831", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.832" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.831" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr.641", %"class.std::__1::unique_ptr.470" }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type { %"class.v8::internal::Isolate"*, [1024 x %"struct.v8::internal::InnerPointerToCodeCache::InnerPointerToCodeCacheEntry"] }
%"struct.v8::internal::InnerPointerToCodeCache::InnerPointerToCodeCacheEntry" = type { i64, %"class.v8::internal::Code", %"class.v8::internal::SafepointEntry" }
%"class.v8::internal::SafepointEntry" = type <{ i32, [4 x i8], i8*, i8*, i32, [4 x i8] }>
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.833", %"class.std::__1::vector.839", %"class.std::__1::unique_ptr.846", %"class.std::__1::vector.853", %"class.std::__1::unique_ptr.860", i64, %"class.std::__1::vector.866", %"class.std::__1::vector.874", %"class.std::__1::vector.882", i8, i8, i32 }
%"class.std::__1::unique_ptr.833" = type { %"class.std::__1::__compressed_pair.834" }
%"class.std::__1::__compressed_pair.834" = type { %"struct.std::__1::__compressed_pair_elem.835" }
%"struct.std::__1::__compressed_pair_elem.835" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.839" = type { %"class.std::__1::__vector_base.840" }
%"class.std::__1::__vector_base.840" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.841" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.841" = type { %"struct.std::__1::__compressed_pair_elem.842" }
%"struct.std::__1::__compressed_pair_elem.842" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.846" = type { %"class.std::__1::__compressed_pair.847" }
%"class.std::__1::__compressed_pair.847" = type { %"struct.std::__1::__compressed_pair_elem.848" }
%"struct.std::__1::__compressed_pair_elem.848" = type { %"class.v8::internal::GlobalHandles::NodeSpace.849"* }
%"class.v8::internal::GlobalHandles::NodeSpace.849" = type opaque
%"class.std::__1::vector.853" = type { %"class.std::__1::__vector_base.854" }
%"class.std::__1::__vector_base.854" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.855" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.855" = type { %"struct.std::__1::__compressed_pair_elem.856" }
%"struct.std::__1::__compressed_pair_elem.856" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.860" = type { %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.866" = type { %"class.std::__1::__vector_base.867" }
%"class.std::__1::__vector_base.867" = type { %"struct.std::__1::pair.868"*, %"struct.std::__1::pair.868"*, %"class.std::__1::__compressed_pair.869" }
%"struct.std::__1::pair.868" = type opaque
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.870" }
%"struct.std::__1::__compressed_pair_elem.870" = type { %"struct.std::__1::pair.868"* }
%"class.std::__1::vector.874" = type { %"class.std::__1::__vector_base.875" }
%"class.std::__1::__vector_base.875" = type { %"struct.std::__1::pair.876"*, %"struct.std::__1::pair.876"*, %"class.std::__1::__compressed_pair.877" }
%"struct.std::__1::pair.876" = type opaque
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.878" }
%"struct.std::__1::__compressed_pair_elem.878" = type { %"struct.std::__1::pair.876"* }
%"class.std::__1::vector.882" = type { %"class.std::__1::__vector_base.883" }
%"class.std::__1::__vector_base.883" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.884" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.653", %"class.std::__1::vector.889" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.896" }
%"class.std::__1::unique_ptr.896" = type { %"class.std::__1::__compressed_pair.897" }
%"class.std::__1::__compressed_pair.897" = type { %"struct.std::__1::__compressed_pair_elem.898" }
%"struct.std::__1::__compressed_pair_elem.898" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { i32*, i32*, %"class.std::__1::__compressed_pair.891" }
%"class.std::__1::__compressed_pair.891" = type { %"struct.std::__1::__compressed_pair_elem.892" }
%"struct.std::__1::__compressed_pair_elem.892" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.902" = type { %"struct.std::__1::__atomic_base.903" }
%"struct.std::__1::__atomic_base.903" = type { %"struct.std::__1::__cxx_atomic_impl.904" }
%"struct.std::__1::__cxx_atomic_impl.904" = type { %"struct.std::__1::__cxx_atomic_base_impl.905" }
%"struct.std::__1::__cxx_atomic_base_impl.905" = type { i32 }
%"class.v8::SharedArrayBuffer" = type { i8 }
%"class.v8::Isolate::AtomicsWaitWakeHandle" = type { i8 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.912" = type { %"struct.std::__1::__atomic_base.913" }
%"struct.std::__1::__atomic_base.913" = type { %"struct.std::__1::__cxx_atomic_impl.914" }
%"struct.std::__1::__cxx_atomic_impl.914" = type { %"struct.std::__1::__cxx_atomic_base_impl.915" }
%"struct.std::__1::__cxx_atomic_base_impl.915" = type { i32 }
%"class.v8::Context" = type { i8 }
%"class.v8::Module" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.917" }
%"class.std::__1::__compressed_pair.917" = type { %"struct.std::__1::__compressed_pair_elem.918" }
%"struct.std::__1::__compressed_pair_elem.918" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.919 }
%union.anon.919 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.923" = type { %"class.std::__1::__hash_table.924" }
%"class.std::__1::__hash_table.924" = type <{ %"class.std::__1::unique_ptr.925", %"class.std::__1::__compressed_pair.935", %"class.std::__1::__compressed_pair.940", %"class.std::__1::__compressed_pair.943", [4 x i8] }>
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927", %"struct.std::__1::__compressed_pair_elem.929" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"struct.std::__1::__hash_node_base.928"** }
%"struct.std::__1::__hash_node_base.928" = type { %"struct.std::__1::__hash_node_base.928"* }
%"struct.std::__1::__compressed_pair_elem.929" = type { %"class.std::__1::__bucket_list_deallocator.930" }
%"class.std::__1::__bucket_list_deallocator.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.936" }
%"struct.std::__1::__compressed_pair_elem.936" = type { %"struct.std::__1::__hash_node_base.928" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.943" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::atomic.141" = type { %"struct.std::__1::__atomic_base.142" }
%"struct.std::__1::__atomic_base.142" = type { %"struct.std::__1::__cxx_atomic_impl.143" }
%"struct.std::__1::__cxx_atomic_impl.143" = type { %"struct.std::__1::__cxx_atomic_base_impl.144" }
%"struct.std::__1::__cxx_atomic_base_impl.144" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.949", %"class.v8::internal::Handle.955", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.956", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.949" = type { %"class.std::__1::__compressed_pair.950" }
%"class.std::__1::__compressed_pair.950" = type { %"struct.std::__1::__compressed_pair_elem.951" }
%"struct.std::__1::__compressed_pair_elem.951" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.955" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.956" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.957", %"class.std::__1::vector.963", %"class.std::__1::unique_ptr.971", %"class.std::__1::unique_ptr.977", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.983", %"class.std::__1::vector.1034", %"struct.std::__1::pair.1042" }
%"class.std::__1::unique_ptr.957" = type { %"class.std::__1::__compressed_pair.958" }
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.959" }
%"struct.std::__1::__compressed_pair_elem.959" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.963" = type { %"class.std::__1::__vector_base.964" }
%"class.std::__1::__vector_base.964" = type { %"class.std::__1::unique_ptr.965"*, %"class.std::__1::unique_ptr.965"*, %"class.std::__1::__compressed_pair.966" }
%"class.std::__1::unique_ptr.965" = type opaque
%"class.std::__1::__compressed_pair.966" = type { %"struct.std::__1::__compressed_pair_elem.967" }
%"struct.std::__1::__compressed_pair_elem.967" = type { %"class.std::__1::unique_ptr.965"* }
%"class.std::__1::unique_ptr.971" = type { %"class.std::__1::__compressed_pair.972" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"class.v8::internal::StringsStorage"* }
%"class.std::__1::unique_ptr.977" = type { %"class.std::__1::__compressed_pair.978" }
%"class.std::__1::__compressed_pair.978" = type { %"struct.std::__1::__compressed_pair_elem.979" }
%"struct.std::__1::__compressed_pair_elem.979" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.983" = type { %"class.std::__1::__compressed_pair.984" }
%"class.std::__1::__compressed_pair.984" = type { %"struct.std::__1::__compressed_pair_elem.985" }
%"struct.std::__1::__compressed_pair_elem.985" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.std::__1::vector.1034" = type { %"class.std::__1::__vector_base.1035" }
%"class.std::__1::__vector_base.1035" = type { %"struct.std::__1::pair.1036"*, %"struct.std::__1::pair.1036"*, %"class.std::__1::__compressed_pair.1037" }
%"struct.std::__1::pair.1036" = type opaque
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.1038" }
%"struct.std::__1::__compressed_pair_elem.1038" = type { %"struct.std::__1::pair.1036"* }
%"struct.std::__1::pair.1042" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.681"*, i16, i8*)*, i8* }
%"class.v8::Local.681" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.1043" = type { %"class.std::__1::__compressed_pair.1044" }
%"class.std::__1::__compressed_pair.1044" = type { %"struct.std::__1::__compressed_pair_elem.1045" }
%"struct.std::__1::__compressed_pair_elem.1045" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.1046", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.1046" = type { %"class.std::__1::__hash_table.1047" }
%"class.std::__1::__hash_table.1047" = type <{ %"class.std::__1::unique_ptr.1048", %"class.std::__1::__compressed_pair.1058", %"class.std::__1::__compressed_pair.1063", %"class.std::__1::__compressed_pair.1067", [4 x i8] }>
%"class.std::__1::unique_ptr.1048" = type { %"class.std::__1::__compressed_pair.1049" }
%"class.std::__1::__compressed_pair.1049" = type { %"struct.std::__1::__compressed_pair_elem.1050", %"struct.std::__1::__compressed_pair_elem.1052" }
%"struct.std::__1::__compressed_pair_elem.1050" = type { %"struct.std::__1::__hash_node_base.1051"** }
%"struct.std::__1::__hash_node_base.1051" = type { %"struct.std::__1::__hash_node_base.1051"* }
%"struct.std::__1::__compressed_pair_elem.1052" = type { %"class.std::__1::__bucket_list_deallocator.1053" }
%"class.std::__1::__bucket_list_deallocator.1053" = type { %"class.std::__1::__compressed_pair.1054" }
%"class.std::__1::__compressed_pair.1054" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.1059" }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"struct.std::__1::__hash_node_base.1051" }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1067" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque.1075" }
%"class.std::__1::deque.1075" = type { %"class.std::__1::__deque_base.1076" }
%"class.std::__1::__deque_base.1076" = type { %"struct.std::__1::__split_buffer.1077", i64, %"class.std::__1::__compressed_pair.1084" }
%"struct.std::__1::__split_buffer.1077" = type { %"struct.std::__1::pair.1078"**, %"struct.std::__1::pair.1078"**, %"struct.std::__1::pair.1078"**, %"class.std::__1::__compressed_pair.1079" }
%"struct.std::__1::pair.1078" = type opaque
%"class.std::__1::__compressed_pair.1079" = type { %"struct.std::__1::__compressed_pair_elem.1080" }
%"struct.std::__1::__compressed_pair_elem.1080" = type { %"struct.std::__1::pair.1078"** }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::String" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.1089" = type { %"class.std::__1::__vector_base.1090" }
%"class.std::__1::__vector_base.1090" = type { %"class.v8::internal::Handle.784"*, %"class.v8::internal::Handle.784"*, %"class.std::__1::__compressed_pair.1091" }
%"class.std::__1::__compressed_pair.1091" = type { %"struct.std::__1::__compressed_pair_elem.1092" }
%"struct.std::__1::__compressed_pair_elem.1092" = type { %"class.v8::internal::Handle.784"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type { %"class.v8::MicrotaskQueue", i64, i64, i64, i64*, i64, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"*, i32, i32, i32, i8, %"class.std::__1::vector.1096" }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.std::__1::vector.1096" = type { %"class.std::__1::__vector_base.1097" }
%"class.std::__1::__vector_base.1097" = type { %"struct.std::__1::pair.1078"*, %"struct.std::__1::pair.1078"*, %"class.std::__1::__compressed_pair.1098" }
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"struct.std::__1::pair.1078"* }
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.907", i32, %"class.v8::Local.681" }
%"class.v8::Local.907" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1100" = type { %"class.std::__1::__compressed_pair.1101" }
%"class.std::__1::__compressed_pair.1101" = type { %"struct.std::__1::__compressed_pair_elem.1102" }
%"struct.std::__1::__compressed_pair_elem.1102" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1106" = type { %"class.std::__1::__vector_base.1107" }
%"class.std::__1::__vector_base.1107" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1108" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.1109" }
%"struct.std::__1::__compressed_pair_elem.1109" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1113" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1114" = type { %"class.std::__1::__hash_table.1115" }
%"class.std::__1::__hash_table.1115" = type <{ %"class.std::__1::unique_ptr.1116", %"class.std::__1::__compressed_pair.1126", %"class.std::__1::__compressed_pair.1131", %"class.std::__1::__compressed_pair.1134", [4 x i8] }>
%"class.std::__1::unique_ptr.1116" = type { %"class.std::__1::__compressed_pair.1117" }
%"class.std::__1::__compressed_pair.1117" = type { %"struct.std::__1::__compressed_pair_elem.1118", %"struct.std::__1::__compressed_pair_elem.1120" }
%"struct.std::__1::__compressed_pair_elem.1118" = type { %"struct.std::__1::__hash_node_base.1119"** }
%"struct.std::__1::__hash_node_base.1119" = type { %"struct.std::__1::__hash_node_base.1119"* }
%"struct.std::__1::__compressed_pair_elem.1120" = type { %"class.std::__1::__bucket_list_deallocator.1121" }
%"class.std::__1::__bucket_list_deallocator.1121" = type { %"class.std::__1::__compressed_pair.1122" }
%"class.std::__1::__compressed_pair.1122" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1126" = type { %"struct.std::__1::__compressed_pair_elem.1127" }
%"struct.std::__1::__compressed_pair_elem.1127" = type { %"struct.std::__1::__hash_node_base.1119" }
%"class.std::__1::__compressed_pair.1131" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1134" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.530" = type { %"class.std::__1::__vector_base.531" }
%"class.std::__1::__vector_base.531" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.532" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.533" }
%"struct.std::__1::__compressed_pair_elem.533" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.149" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1138", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1167", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1168", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1138" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1163, %union.anon.1165, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1163 = type { i64 }
%union.anon.1165 = type { i64 }
%"class.std::__1::weak_ptr.1167" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1168" = type { %"class.v8::PersistentBase.1169" }
%"class.v8::PersistentBase.1169" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1139", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1139" = type { %"class.std::__1::__hash_table.1140" }
%"class.std::__1::__hash_table.1140" = type <{ %"class.std::__1::unique_ptr.1141", %"class.std::__1::__compressed_pair.1151", %"class.std::__1::__compressed_pair.1156", %"class.std::__1::__compressed_pair.1159", [4 x i8] }>
%"class.std::__1::unique_ptr.1141" = type { %"class.std::__1::__compressed_pair.1142" }
%"class.std::__1::__compressed_pair.1142" = type { %"struct.std::__1::__compressed_pair_elem.1143", %"struct.std::__1::__compressed_pair_elem.1145" }
%"struct.std::__1::__compressed_pair_elem.1143" = type { %"struct.std::__1::__hash_node_base.1144"** }
%"struct.std::__1::__hash_node_base.1144" = type { %"struct.std::__1::__hash_node_base.1144"* }
%"struct.std::__1::__compressed_pair_elem.1145" = type { %"class.std::__1::__bucket_list_deallocator.1146" }
%"class.std::__1::__bucket_list_deallocator.1146" = type { %"class.std::__1::__compressed_pair.1147" }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1151" = type { %"struct.std::__1::__compressed_pair_elem.1152" }
%"struct.std::__1::__compressed_pair_elem.1152" = type { %"struct.std::__1::__hash_node_base.1144" }
%"class.std::__1::__compressed_pair.1156" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1170" = type { %"class.std::__1::__compressed_pair.1171" }
%"class.std::__1::__compressed_pair.1171" = type { %"struct.std::__1::__compressed_pair_elem.1172" }
%"struct.std::__1::__compressed_pair_elem.1172" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1175", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1175" = type { %"class.std::__1::__compressed_pair.1176" }
%"class.std::__1::__compressed_pair.1176" = type { %"struct.std::__1::__compressed_pair_elem.1177" }
%"struct.std::__1::__compressed_pair_elem.1177" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1184" = type { %"class.std::__1::__compressed_pair.1185" }
%"class.std::__1::__compressed_pair.1185" = type { %"struct.std::__1::__compressed_pair_elem.1186" }
%"struct.std::__1::__compressed_pair_elem.1186" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.908", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.908" = type { %"class.v8::Context"* }
%"class.v8::Array" = type { i8 }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1192" }
%"class.std::__1::unordered_map.1192" = type { %"class.std::__1::__hash_table.1193" }
%"class.std::__1::__hash_table.1193" = type <{ %"class.std::__1::unique_ptr.1194", %"class.std::__1::__compressed_pair.1204", %"class.std::__1::__compressed_pair.1209", %"class.std::__1::__compressed_pair.1212", [4 x i8] }>
%"class.std::__1::unique_ptr.1194" = type { %"class.std::__1::__compressed_pair.1195" }
%"class.std::__1::__compressed_pair.1195" = type { %"struct.std::__1::__compressed_pair_elem.1196", %"struct.std::__1::__compressed_pair_elem.1198" }
%"struct.std::__1::__compressed_pair_elem.1196" = type { %"struct.std::__1::__hash_node_base.1197"** }
%"struct.std::__1::__hash_node_base.1197" = type { %"struct.std::__1::__hash_node_base.1197"* }
%"struct.std::__1::__compressed_pair_elem.1198" = type { %"class.std::__1::__bucket_list_deallocator.1199" }
%"class.std::__1::__bucket_list_deallocator.1199" = type { %"class.std::__1::__compressed_pair.1200" }
%"class.std::__1::__compressed_pair.1200" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1204" = type { %"struct.std::__1::__compressed_pair_elem.1205" }
%"struct.std::__1::__compressed_pair_elem.1205" = type { %"struct.std::__1::__hash_node_base.1197" }
%"class.std::__1::__compressed_pair.1209" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1212" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.1218" = type { %"struct.std::__1::__atomic_base.1219" }
%"struct.std::__1::__atomic_base.1219" = type { %"struct.std::__1::__cxx_atomic_impl.1220" }
%"struct.std::__1::__cxx_atomic_impl.1220" = type { %"struct.std::__1::__cxx_atomic_base_impl.1221" }
%"struct.std::__1::__cxx_atomic_base_impl.1221" = type { %"class.std::__1::vector.1222"* }
%"class.std::__1::vector.1222" = type { %"class.std::__1::__vector_base.1223" }
%"class.std::__1::__vector_base.1223" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1224" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1224" = type { %"struct.std::__1::__compressed_pair_elem.1225" }
%"struct.std::__1::__compressed_pair_elem.1225" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::SamplingHeapProfiler::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::SamplingHeapProfiler"*, %"class.v8::internal::Heap"*, %"class.v8::base::RandomNumberGenerator"*, i64 }
%"class.v8::internal::SamplingHeapProfiler::AllocationNode" = type <{ %"class.std::__1::map", %"class.std::__1::map.994", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"*, i32, i32, i8*, i32, i8, [3 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree.986" }
%"class.std::__1::__tree.986" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.987", %"class.std::__1::__compressed_pair.991" }
%"class.std::__1::__compressed_pair.987" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"class.std::__1::__compressed_pair.991" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.994" = type { %"class.std::__1::__tree.995" }
%"class.std::__1::__tree.995" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.996", %"class.std::__1::__compressed_pair.1000" }
%"class.std::__1::__compressed_pair.996" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"class.std::__1::__compressed_pair.1000" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unordered_map.1003" = type { %"class.std::__1::__hash_table.1004" }
%"class.std::__1::__hash_table.1004" = type <{ %"class.std::__1::unique_ptr.1005", %"class.std::__1::__compressed_pair.1015", %"class.std::__1::__compressed_pair.1020", %"class.std::__1::__compressed_pair.1025", [4 x i8] }>
%"class.std::__1::unique_ptr.1005" = type { %"class.std::__1::__compressed_pair.1006" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.1007", %"struct.std::__1::__compressed_pair_elem.1009" }
%"struct.std::__1::__compressed_pair_elem.1007" = type { %"struct.std::__1::__hash_node_base.1008"** }
%"struct.std::__1::__hash_node_base.1008" = type { %"struct.std::__1::__hash_node_base.1008"* }
%"struct.std::__1::__compressed_pair_elem.1009" = type { %"class.std::__1::__bucket_list_deallocator.1010" }
%"class.std::__1::__bucket_list_deallocator.1010" = type { %"class.std::__1::__compressed_pair.1011" }
%"class.std::__1::__compressed_pair.1011" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1015" = type { %"struct.std::__1::__compressed_pair_elem.1016" }
%"struct.std::__1::__compressed_pair_elem.1016" = type { %"struct.std::__1::__hash_node_base.1008" }
%"class.std::__1::__compressed_pair.1020" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::StringsStorage" = type { %"class.v8::base::CustomMatcherTemplateHashMapImpl", %"class.v8::base::Mutex" }
%"class.v8::base::CustomMatcherTemplateHashMapImpl" = type { %"class.v8::base::TemplateHashMapImpl" }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::HashEqualityThenKeyMatcher<void *, bool (*)(void *, void *)>, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::HashEqualityThenKeyMatcher<void *, bool (*)(void *, void *)>, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::HashEqualityThenKeyMatcher", %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::HashEqualityThenKeyMatcher" = type { i1 (i8*, i8*)* }
%"struct.v8::base::TemplateHashMapEntry" = type opaque
%"struct.v8::internal::SamplingHeapProfiler::Sample" = type { i64, %"class.v8::internal::SamplingHeapProfiler::AllocationNode"*, %"class.v8::Global.1236", %"class.v8::internal::SamplingHeapProfiler"*, i64 }
%"class.v8::Global.1236" = type { %"class.v8::PersistentBase.1237" }
%"class.v8::PersistentBase.1237" = type { %"class.v8::Value"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.1305" }
%"struct.std::__1::pair.1305" = type { i64, %"class.std::__1::unique_ptr.1243" }
%"class.std::__1::unique_ptr.1243" = type { %"class.std::__1::__compressed_pair.1244" }
%"class.std::__1::__compressed_pair.1244" = type { %"struct.std::__1::__compressed_pair_elem.1245" }
%"struct.std::__1::__compressed_pair_elem.1245" = type { %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* }
%"class.std::__1::__tree_node.1312" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type.1313" }
%"struct.std::__1::__value_type.1313" = type { %"struct.std::__1::pair.1301" }
%"struct.std::__1::pair.1301" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1233" = type { %"class.std::__1::__compressed_pair.1234" }
%"class.std::__1::__compressed_pair.1234" = type { %"struct.std::__1::__compressed_pair_elem.1235" }
%"struct.std::__1::__compressed_pair_elem.1235" = type { %"struct.v8::internal::SamplingHeapProfiler::Sample"* }
%"class.std::__1::vector.1249" = type { %"class.std::__1::__vector_base.1250" }
%"class.std::__1::__vector_base.1250" = type { %"class.v8::internal::SharedFunctionInfo"*, %"class.v8::internal::SharedFunctionInfo"*, %"class.std::__1::__compressed_pair.1251" }
%"class.std::__1::__compressed_pair.1251" = type { %"struct.std::__1::__compressed_pair_elem.1252" }
%"struct.std::__1::__compressed_pair_elem.1252" = type { %"class.v8::internal::SharedFunctionInfo"* }
%"class.v8::internal::JavaScriptFrameIterator" = type { %"class.v8::internal::StackFrameIterator" }
%"class.v8::internal::StackFrameIterator" = type { %"class.v8::internal::StackFrameIteratorBase.base", [7 x i8] }
%"class.v8::internal::StackFrameIteratorBase.base" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::EntryFrame", %"class.v8::internal::ConstructEntryFrame", %"class.v8::internal::ExitFrame", %"class.v8::internal::WasmFrame", %"class.v8::internal::WasmToJsFrame", %"class.v8::internal::JsToWasmFrame", %"class.v8::internal::WasmDebugBreakFrame", %"class.v8::internal::CWasmEntryFrame", %"class.v8::internal::WasmExitFrame", %"class.v8::internal::WasmCompileLazyFrame", %"class.v8::internal::InterpretedFrame", %"class.v8::internal::BaselineFrame", %"class.v8::internal::OptimizedFrame", %"class.v8::internal::StubFrame", %"class.v8::internal::BuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame", %"class.v8::internal::InternalFrame", %"class.v8::internal::ConstructFrame", %"class.v8::internal::BuiltinFrame", %"class.v8::internal::BuiltinExitFrame", %"class.v8::internal::NativeFrame", %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackHandler"*, i8 }>
%"class.v8::internal::EntryFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::TypedFrame" = type { %"class.v8::internal::CommonFrame" }
%"class.v8::internal::CommonFrame" = type { %"class.v8::internal::StackFrame" }
%"class.v8::internal::StackFrame" = type { i32 (...)**, %"class.v8::internal::StackFrameIteratorBase"*, %"class.v8::internal::Isolate"*, %"struct.v8::internal::StackFrame::State" }
%"class.v8::internal::StackFrameIteratorBase" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::EntryFrame", %"class.v8::internal::ConstructEntryFrame", %"class.v8::internal::ExitFrame", %"class.v8::internal::WasmFrame", %"class.v8::internal::WasmToJsFrame", %"class.v8::internal::JsToWasmFrame", %"class.v8::internal::WasmDebugBreakFrame", %"class.v8::internal::CWasmEntryFrame", %"class.v8::internal::WasmExitFrame", %"class.v8::internal::WasmCompileLazyFrame", %"class.v8::internal::InterpretedFrame", %"class.v8::internal::BaselineFrame", %"class.v8::internal::OptimizedFrame", %"class.v8::internal::StubFrame", %"class.v8::internal::BuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame", %"class.v8::internal::InternalFrame", %"class.v8::internal::ConstructFrame", %"class.v8::internal::BuiltinFrame", %"class.v8::internal::BuiltinExitFrame", %"class.v8::internal::NativeFrame", %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackHandler"*, i8, [7 x i8] }>
%"struct.v8::internal::StackFrame::State" = type { i64, i64, i64*, i64, i64*, i64* }
%"class.v8::internal::ConstructEntryFrame" = type { %"class.v8::internal::EntryFrame" }
%"class.v8::internal::ExitFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::WasmFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::WasmToJsFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::JsToWasmFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::WasmDebugBreakFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::CWasmEntryFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::WasmExitFrame" = type { %"class.v8::internal::WasmFrame" }
%"class.v8::internal::WasmCompileLazyFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::InterpretedFrame" = type { %"class.v8::internal::UnoptimizedFrame" }
%"class.v8::internal::UnoptimizedFrame" = type { %"class.v8::internal::JavaScriptFrame" }
%"class.v8::internal::JavaScriptFrame" = type { %"class.v8::internal::CommonFrameWithJSLinkage" }
%"class.v8::internal::CommonFrameWithJSLinkage" = type { %"class.v8::internal::CommonFrame" }
%"class.v8::internal::BaselineFrame" = type { %"class.v8::internal::UnoptimizedFrame" }
%"class.v8::internal::OptimizedFrame" = type { %"class.v8::internal::JavaScriptFrame" }
%"class.v8::internal::StubFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::BuiltinContinuationFrame" = type { %"class.v8::internal::InternalFrame" }
%"class.v8::internal::JavaScriptBuiltinContinuationFrame" = type { %"class.v8::internal::TypedFrameWithJSLinkage" }
%"class.v8::internal::TypedFrameWithJSLinkage" = type { %"class.v8::internal::CommonFrameWithJSLinkage" }
%"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame" = type { %"class.v8::internal::JavaScriptBuiltinContinuationFrame" }
%"class.v8::internal::InternalFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::ConstructFrame" = type { %"class.v8::internal::InternalFrame" }
%"class.v8::internal::BuiltinFrame" = type { %"class.v8::internal::TypedFrameWithJSLinkage" }
%"class.v8::internal::BuiltinExitFrame" = type { %"class.v8::internal::ExitFrame" }
%"class.v8::internal::NativeFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::StackHandler" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::WeakCallbackInfo.1241" = type { %"class.v8::Isolate"*, %"struct.v8::internal::SamplingHeapProfiler::Sample"*, {}**, [2 x i8*] }
%"class.std::__1::unique_ptr.1348" = type { %"class.std::__1::__compressed_pair.1349" }
%"class.std::__1::__compressed_pair.1349" = type { %"struct.std::__1::__compressed_pair_elem.1350", %"struct.std::__1::__compressed_pair_elem.1351" }
%"struct.std::__1::__compressed_pair_elem.1350" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base.1008", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.1306" }
%"struct.std::__1::pair.1306" = type { %"struct.v8::internal::SamplingHeapProfiler::Sample"*, %"class.std::__1::unique_ptr.1233" }
%"struct.std::__1::__compressed_pair_elem.1351" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.1018"*, i8, [7 x i8] }>
%"class.std::__1::allocator.1018" = type { i8 }
%"struct.v8::AllocationProfile::Node" = type { %"class.v8::Local.910", %"class.v8::Local.910", i32, i32, i32, i32, i32, %"class.std::__1::vector.1262", %"class.std::__1::vector.1269" }
%"class.v8::Local.910" = type { %"class.v8::String"* }
%"class.std::__1::vector.1262" = type { %"class.std::__1::__vector_base.1263" }
%"class.std::__1::__vector_base.1263" = type { %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"**, %"class.std::__1::__compressed_pair.1264" }
%"class.std::__1::__compressed_pair.1264" = type { %"struct.std::__1::__compressed_pair_elem.1265" }
%"struct.std::__1::__compressed_pair_elem.1265" = type { %"struct.v8::AllocationProfile::Node"** }
%"class.std::__1::vector.1269" = type { %"class.std::__1::__vector_base.1270" }
%"class.std::__1::__vector_base.1270" = type { %"struct.v8::AllocationProfile::Allocation"*, %"struct.v8::AllocationProfile::Allocation"*, %"class.std::__1::__compressed_pair.1271" }
%"struct.v8::AllocationProfile::Allocation" = type { i64, i32 }
%"class.std::__1::__compressed_pair.1271" = type { %"struct.std::__1::__compressed_pair_elem.1272" }
%"struct.std::__1::__compressed_pair_elem.1272" = type { %"struct.v8::AllocationProfile::Allocation"* }
%"class.v8::internal::AllocationProfile" = type { %"class.v8::AllocationProfile", %"class.std::__1::deque.1276", %"class.std::__1::vector.1283" }
%"class.v8::AllocationProfile" = type { i32 (...)** }
%"class.std::__1::deque.1276" = type { %"class.std::__1::__deque_base.1277" }
%"class.std::__1::__deque_base.1277" = type { %"struct.std::__1::__split_buffer.1278", i64, %"class.std::__1::__compressed_pair.1279" }
%"struct.std::__1::__split_buffer.1278" = type { %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"**, %"class.std::__1::__compressed_pair.1264" }
%"class.std::__1::__compressed_pair.1279" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.1283" = type { %"class.std::__1::__vector_base.1284" }
%"class.std::__1::__vector_base.1284" = type { %"struct.v8::AllocationProfile::Sample"*, %"struct.v8::AllocationProfile::Sample"*, %"class.std::__1::__compressed_pair.1285" }
%"struct.v8::AllocationProfile::Sample" = type { i32, i64, i32, i64 }
%"class.std::__1::__compressed_pair.1285" = type { %"struct.std::__1::__compressed_pair_elem.1286" }
%"struct.std::__1::__compressed_pair_elem.1286" = type { %"struct.v8::AllocationProfile::Sample"* }
%"class.std::__1::map.1290" = type { %"class.std::__1::__tree.1291" }
%"class.std::__1::__tree.1291" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1292", %"class.std::__1::__compressed_pair.1296" }
%"class.std::__1::__compressed_pair.1292" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"class.std::__1::__compressed_pair.1296" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::internal::Vector.1332" = type { i8*, i64 }
%"class.v8::internal::Factory" = type { i8 }
%"class.std::__1::__tree_node.1362" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.1363" }
%"struct.std::__1::__value_type.1363" = type { %"struct.std::__1::pair.1364" }
%"struct.std::__1::pair.1364" = type { i32, %"class.v8::internal::Handle.1300" }
%"class.v8::internal::Handle.1300" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Script::Iterator" = type { %"class.v8::internal::WeakArrayList::Iterator" }
%"class.v8::internal::WeakArrayList::Iterator" = type { i32, %"class.v8::internal::WeakArrayList" }
%"class.v8::internal::WeakArrayList" = type { %"class.v8::internal::TorqueGeneratedWeakArrayList" }
%"class.v8::internal::TorqueGeneratedWeakArrayList" = type { %"class.v8::internal::HeapObject" }

$_ZN2v88internal20SamplingHeapProfiler14AllocationNode12AddChildNodeEmNSt3__110unique_ptrIS2_NS3_14default_deleteIS2_EEEE = comdat any

$_ZN2v88internal20SamplingHeapProfiler8ObserverD0Ev = comdat any

$_ZN2v88internal20SamplingHeapProfiler8Observer4StepEimm = comdat any

$_ZN2v88internal20SamplingHeapProfiler8Observer15GetNextStepSizeEv = comdat any

$_ZN2v88internal18AllocationObserverD2Ev = comdat any

$_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN2v88internal20SamplingHeapProfiler14AllocationNodeENS_14default_deleteIS6_EEEEEENS_19__map_value_compareImSA_NS_4lessImEELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeImjEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN2v88internal17AllocationProfile11GetRootNodeEv = comdat any

$_ZN2v88internal17AllocationProfile10GetSamplesEv = comdat any

$_ZN2v88internal17AllocationProfileD2Ev = comdat any

$_ZN2v88internal17AllocationProfileD0Ev = comdat any

$_ZNSt3__112__deque_baseIN2v817AllocationProfile4NodeENS_9allocatorIS3_EEE5clearEv = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal20SamplingHeapProfiler6SampleENS_10unique_ptrIS5_NS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE25__emplace_unique_key_argsIS6_JS6_SA_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal20SamplingHeapProfiler6SampleENS_10unique_ptrIS5_NS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal20SamplingHeapProfiler6SampleENS_10unique_ptrIS5_NS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE8__rehashEm = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN2v88internal20SamplingHeapProfiler14AllocationNodeENS_14default_deleteIS6_EEEEEENS_19__map_value_compareImSA_NS_4lessImEELb1EEENS_9allocatorISA_EEE5eraseENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal20SamplingHeapProfiler6SampleENS_10unique_ptrIS5_NS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE4findIS6_EENS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEERKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal20SamplingHeapProfiler6SampleENS_10unique_ptrIS5_NS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISB_PvEEEE = comdat any

$_ZNSt3__13mapIiN2v88internal6HandleINS2_6ScriptEEENS_4lessIiEENS_9allocatorINS_4pairIKiS5_EEEEE6insertINS_20__map_const_iteratorINS_21__tree_const_iteratorINS_12__value_typeIiS5_EEPNS_11__tree_nodeISI_PvEElEEEEEEvT_SP_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIiN2v88internal6HandleINS3_6ScriptEEEEENS_19__map_value_compareIiS7_NS_4lessIiEELb1EEENS_9allocatorIS7_EEE12__find_equalIiEERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_SH_EElEERPNS_15__tree_end_nodeISJ_EESK_RKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIiN2v88internal6HandleINS3_6ScriptEEEEENS_19__map_value_compareIiS7_NS_4lessIiEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE = comdat any

$_ZNSt3__15dequeIN2v817AllocationProfile4NodeENS_9allocatorIS3_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPN2v817AllocationProfile4NodeENS_9allocatorIS4_EEE9push_backEOS4_ = comdat any

$_ZNSt3__114__split_bufferIPN2v817AllocationProfile4NodeENS_9allocatorIS4_EEE10push_frontEOS4_ = comdat any

$_ZNSt3__16vectorIN2v817AllocationProfile6SampleENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_ = comdat any

$_ZTVN2v88internal20SamplingHeapProfiler8ObserverE = comdat any

$_ZTVN2v88internal17AllocationProfileE = comdat any

@_ZN2v88internal47FLAG_sampling_heap_profiler_suppress_randomnessE = external local_unnamed_addr global i8, align 1
@.str = private unnamed_addr constant [7 x i8] c"(root)\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"rate_ > 0u\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"(GC)\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"(PARSER)\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"(COMPILER)\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"(BYTECODE_COMPILER)\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"(V8 API)\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"(EXTERNAL)\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"(IDLE)\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"(JS)\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"(deopt)\00", align 1
@.str.12 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZTVN2v88internal20SamplingHeapProfiler8ObserverE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::AllocationObserver"*)* @_ZN2v88internal18AllocationObserverD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::SamplingHeapProfiler::Observer"*)* @_ZN2v88internal20SamplingHeapProfiler8ObserverD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::SamplingHeapProfiler::Observer"*, i32, i64, i64)* @_ZN2v88internal20SamplingHeapProfiler8Observer4StepEimm to i8*), i8* bitcast (i64 (%"class.v8::internal::SamplingHeapProfiler::Observer"*)* @_ZN2v88internal20SamplingHeapProfiler8Observer15GetNextStepSizeEv to i8*)] }, comdat, align 8
@_ZTVN2v88internal17AllocationProfileE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (%"struct.v8::AllocationProfile::Node"* (%"class.v8::internal::AllocationProfile"*)* @_ZN2v88internal17AllocationProfile11GetRootNodeEv to i8*), i8* bitcast (%"class.std::__1::vector.1283"* (%"class.v8::internal::AllocationProfile"*)* @_ZN2v88internal17AllocationProfile10GetSamplesEv to i8*), i8* bitcast (void (%"class.v8::internal::AllocationProfile"*)* @_ZN2v88internal17AllocationProfileD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::AllocationProfile"*)* @_ZN2v88internal17AllocationProfileD0Ev to i8*)] }, comdat, align 8
@switch.table._ZN2v88internal20SamplingHeapProfiler8AddStackEv = private unnamed_addr constant [9 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0)], align 8

@_ZN2v88internal20SamplingHeapProfilerC1EPNS0_4HeapEPNS0_14StringsStorageEmiNS_12HeapProfiler13SamplingFlagsE = hidden unnamed_addr alias void (%"class.v8::internal::SamplingHeapProfiler"*, %"class.v8::internal::Heap"*, %"class.v8::internal::StringsStorage"*, i64, i32, i32), void (%"class.v8::internal::SamplingHeapProfiler"*, %"class.v8::internal::Heap"*, %"class.v8::internal::StringsStorage"*, i64, i32, i32)* @_ZN2v88internal20SamplingHeapProfilerC2EPNS0_4HeapEPNS0_14StringsStorageEmiNS_12HeapProfiler13SamplingFlagsE
@_ZN2v88internal20SamplingHeapProfilerD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::SamplingHeapProfiler"*), void (%"class.v8::internal::SamplingHeapProfiler"*)* @_ZN2v88internal20SamplingHeapProfilerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal20SamplingHeapProfiler8Observer21GetNextSampleIntervalEm(%"class.v8::internal::SamplingHeapProfiler::Observer"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* @_ZN2v88internal47FLAG_sampling_heap_profiler_suppress_randomnessE, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %18

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::Observer", %"class.v8::internal::SamplingHeapProfiler::Observer"* %0, i64 0, i32 3
  %7 = load %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"** %6, align 8
  %8 = tail call double @_ZN2v84base21RandomNumberGenerator10NextDoubleEv(%"class.v8::base::RandomNumberGenerator"* %7) #12
  %9 = tail call double @_ZN2v84base7ieee7543logEd(double %8) #12
  %10 = uitofp i64 %1 to double
  %11 = fmul double %9, %10
  %12 = fcmp ogt double %11, -4.000000e+00
  br i1 %12, label %18, label %13

13:                                               ; preds = %5
  %14 = fsub double -0.000000e+00, %11
  %15 = fcmp olt double %11, 0xC1DFFFFFFFC00000
  %16 = fptosi double %14 to i64
  %17 = select i1 %15, i64 2147483647, i64 %16
  br label %18

18:                                               ; preds = %5, %13, %2
  %19 = phi i64 [ %1, %2 ], [ 4, %5 ], [ %17, %13 ]
  ret i64 %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare double @_ZN2v84base21RandomNumberGenerator10NextDoubleEv(%"class.v8::base::RandomNumberGenerator"*) local_unnamed_addr #2

declare double @_ZN2v84base7ieee7543logEd(double) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind ssp uwtable
define hidden { i64, i32 } @_ZNK2v88internal20SamplingHeapProfiler11ScaleSampleEmj(%"class.v8::internal::SamplingHeapProfiler"* nocapture readonly, i64, i32) local_unnamed_addr #3 align 2 {
  %4 = uitofp i64 %1 to double
  %5 = fsub double -0.000000e+00, %4
  %6 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 11
  %7 = load i64, i64* %6, align 8
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %5, %8
  %10 = tail call double @exp(double %9) #12
  %11 = fsub double 1.000000e+00, %10
  %12 = fdiv double 1.000000e+00, %11
  %13 = uitofp i32 %2 to double
  %14 = fmul double %12, %13
  %15 = fadd double %14, 5.000000e-01
  %16 = fptoui double %15 to i32
  %17 = insertvalue { i64, i32 } undef, i64 %1, 0
  %18 = insertvalue { i64, i32 } %17, i32 %16, 1
  ret { i64, i32 } %18
}

; Function Attrs: nofree nounwind
declare double @exp(double) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal20SamplingHeapProfilerC2EPNS0_4HeapEPNS0_14StringsStorageEmiNS_12HeapProfiler13SamplingFlagsE(%"class.v8::internal::SamplingHeapProfiler"*, %"class.v8::internal::Heap"*, %"class.v8::internal::StringsStorage"*, i64, i32, i32) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 0
  %8 = ptrtoint %"class.v8::internal::Heap"* %1 to i64
  %9 = add i64 %8, -41416
  %10 = inttoptr i64 %9 to %"class.v8::internal::Isolate"*
  store %"class.v8::internal::Isolate"* %10, %"class.v8::internal::Isolate"** %7, align 8
  %11 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 1
  store %"class.v8::internal::Heap"* %1, %"class.v8::internal::Heap"** %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 2
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 3
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 5
  %15 = tail call %"class.v8::base::RandomNumberGenerator"* @_ZN2v88internal7Isolate23random_number_generatorEv(%"class.v8::internal::Isolate"* %10) #12
  %16 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::Observer", %"class.v8::internal::SamplingHeapProfiler::Observer"* %14, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 5, i32 0, i32 1
  store i64 %3, i64* %17, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal20SamplingHeapProfiler8ObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 5, i32 1
  store %"class.v8::internal::SamplingHeapProfiler"* %0, %"class.v8::internal::SamplingHeapProfiler"** %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 5, i32 2
  store %"class.v8::internal::Heap"* %1, %"class.v8::internal::Heap"** %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 5, i32 3
  store %"class.v8::base::RandomNumberGenerator"* %15, %"class.v8::base::RandomNumberGenerator"** %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 5, i32 4
  store i64 %3, i64* %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 6
  store %"class.v8::internal::StringsStorage"* %2, %"class.v8::internal::StringsStorage"** %22, align 8
  %23 = load i32, i32* %13, align 8
  %24 = add i32 %23, 1
  store i32 %24, i32* %13, align 8
  %25 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0
  %27 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::__tree_node_base"** %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %26, %"class.std::__1::__tree_end_node"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 7, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 7, i32 1, i32 0, i32 1, i32 0, i32 0
  %31 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 7, i32 1, i32 0, i32 0
  %32 = bitcast %"class.std::__1::__tree_node_base"** %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %30, %"class.std::__1::__tree_end_node"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 7, i32 2
  %34 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 7, i32 5
  %35 = bitcast %"class.v8::internal::SamplingHeapProfiler::AllocationNode"** %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false)
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 7, i32 6
  store i32 %24, i32* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 7, i32 7
  store i8 0, i8* %37, align 4
  %38 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 8
  %39 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 8, i32 0, i32 3
  %40 = bitcast %"class.std::__1::__compressed_pair.1025"* %39 to i32*
  %41 = bitcast %"class.std::__1::unordered_map.1003"* %38 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %40, align 4
  %42 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 9
  store i32 %4, i32* %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 11
  store i64 %3, i64* %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 12
  store i32 %5, i32* %44, align 8
  %45 = icmp eq i64 %3, 0
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %6
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable

47:                                               ; preds = %6
  %48 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %11, align 8
  %49 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::Observer", %"class.v8::internal::SamplingHeapProfiler::Observer"* %14, i64 0, i32 0
  tail call void @_ZN2v88internal4Heap33AddAllocationObserversToAllSpacesEPNS0_18AllocationObserverES3_(%"class.v8::internal::Heap"* %48, %"class.v8::internal::AllocationObserver"* %49, %"class.v8::internal::AllocationObserver"* %49) #12
  ret void
}

declare %"class.v8::base::RandomNumberGenerator"* @_ZN2v88internal7Isolate23random_number_generatorEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #5

declare void @_ZN2v88internal4Heap33AddAllocationObserversToAllSpacesEPNS0_18AllocationObserverES3_(%"class.v8::internal::Heap"*, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::AllocationObserver"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal20SamplingHeapProfilerD2Ev(%"class.v8::internal::SamplingHeapProfiler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN2v88internal4Heap38RemoveAllocationObserversFromAllSpacesEPNS0_18AllocationObserverES3_(%"class.v8::internal::Heap"* %3, %"class.v8::internal::AllocationObserver"* %4, %"class.v8::internal::AllocationObserver"* %4) #12
  %5 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.1008"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %1, %24
  %9 = phi %"struct.std::__1::__hash_node_base.1008"* [ %11, %24 ], [ %6, %1 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.1008"* %12 to %"struct.v8::internal::SamplingHeapProfiler::Sample"**
  %14 = load %"struct.v8::internal::SamplingHeapProfiler::Sample"*, %"struct.v8::internal::SamplingHeapProfiler::Sample"** %13, align 8
  store %"struct.v8::internal::SamplingHeapProfiler::Sample"* null, %"struct.v8::internal::SamplingHeapProfiler::Sample"** %13, align 8
  %15 = icmp eq %"struct.v8::internal::SamplingHeapProfiler::Sample"* %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"struct.v8::internal::SamplingHeapProfiler::Sample", %"struct.v8::internal::SamplingHeapProfiler::Sample"* %14, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.v8::Value"*, %"class.v8::Value"** %17, align 8
  %19 = icmp eq %"class.v8::Value"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.v8::Value"* %18 to i64*
  tail call void @_ZN2v82V813DisposeGlobalEPm(i64* nonnull %21) #12
  br label %22

22:                                               ; preds = %20, %16
  %23 = bitcast %"struct.v8::internal::SamplingHeapProfiler::Sample"* %14 to i8*
  tail call void @_ZdlPv(i8* %23) #14
  br label %24

24:                                               ; preds = %22, %8
  %25 = bitcast %"struct.std::__1::__hash_node_base.1008"* %9 to i8*
  tail call void @_ZdlPv(i8* %25) #14
  %26 = icmp eq %"struct.std::__1::__hash_node_base.1008"* %11, null
  br i1 %26, label %27, label %8

27:                                               ; preds = %24, %1
  %28 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.1008"**, %"struct.std::__1::__hash_node_base.1008"*** %28, align 8
  store %"struct.std::__1::__hash_node_base.1008"** null, %"struct.std::__1::__hash_node_base.1008"*** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.1008"** %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast %"struct.std::__1::__hash_node_base.1008"** %29 to i8*
  tail call void @_ZdlPv(i8* %32) #14
  br label %33

33:                                               ; preds = %27, %31
  %34 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 7, i32 1, i32 0
  %35 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 7, i32 1, i32 0, i32 1, i32 0, i32 0
  %36 = bitcast %"class.std::__1::__tree_end_node"* %35 to %"class.std::__1::__tree_node"**
  %37 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %36, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN2v88internal20SamplingHeapProfiler14AllocationNodeENS_14default_deleteIS6_EEEEEENS_19__map_value_compareImSA_NS_4lessImEELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.995"* %34, %"class.std::__1::__tree_node"* %37) #12
  %38 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 7, i32 0, i32 0
  %39 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0
  %40 = bitcast %"class.std::__1::__tree_end_node"* %39 to %"class.std::__1::__tree_node.1312"**
  %41 = load %"class.std::__1::__tree_node.1312"*, %"class.std::__1::__tree_node.1312"** %40, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImjEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.986"* %38, %"class.std::__1::__tree_node.1312"* %41) #12
  ret void
}

declare void @_ZN2v88internal4Heap38RemoveAllocationObserversFromAllSpacesEPNS0_18AllocationObserverES3_(%"class.v8::internal::Heap"*, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::AllocationObserver"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal20SamplingHeapProfiler12SampleObjectEmm(%"class.v8::internal::SamplingHeapProfiler"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.1233", align 8
  %5 = alloca %"struct.v8::internal::SamplingHeapProfiler::Sample"*, align 8
  %6 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 0
  %7 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 31
  %9 = bitcast %"struct.v8::internal::HandleScopeData"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 31, i32 1
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 31, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %13, align 8
  %16 = add i64 %1, 1
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 4
  %19 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %18, align 8
  %20 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %3
  %22 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %19, i64 %16) #12
  br label %36

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 1
  %27 = load i64*, i64** %26, align 8
  %28 = icmp eq i64* %25, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %23
  %30 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %17) #12
  br label %31

31:                                               ; preds = %29, %23
  %32 = phi i64* [ %30, %29 ], [ %25, %23 ]
  %33 = ptrtoint i64* %32 to i64
  %34 = add i64 %33, 8
  %35 = inttoptr i64 %34 to i64*
  store i64* %35, i64** %24, align 8
  store i64 %16, i64* %32, align 8
  br label %36

36:                                               ; preds = %21, %31
  %37 = phi i64* [ %22, %21 ], [ %32, %31 ]
  %38 = tail call %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* @_ZN2v88internal20SamplingHeapProfiler8AddStackEv(%"class.v8::internal::SamplingHeapProfiler"* %0)
  %39 = ptrtoint %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %38 to i64
  %40 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %38, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %41 = bitcast %"class.std::__1::__tree_end_node"* %40 to %"class.std::__1::__tree_node.1312"**
  %42 = load %"class.std::__1::__tree_node.1312"*, %"class.std::__1::__tree_node.1312"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node.1312"* %42, null
  br i1 %43, label %72, label %44

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %38, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %46

46:                                               ; preds = %68, %44
  %47 = phi %"class.std::__1::__tree_node.1312"* [ %71, %68 ], [ %42, %44 ]
  %48 = phi %"class.std::__1::__tree_node_base"** [ %70, %68 ], [ %45, %44 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node.1312", %"class.std::__1::__tree_node.1312"* %47, i64 0, i32 2, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp ugt i64 %50, %2
  br i1 %51, label %52, label %58

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.std::__1::__tree_node.1312", %"class.std::__1::__tree_node.1312"* %47, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node_base"* %54, null
  br i1 %55, label %56, label %68

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.std::__1::__tree_node.1312", %"class.std::__1::__tree_node.1312"* %47, i64 0, i32 0, i32 0
  br label %74

58:                                               ; preds = %46
  %59 = icmp ult i64 %50, %2
  br i1 %59, label %60, label %66

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.std::__1::__tree_node.1312", %"class.std::__1::__tree_node.1312"* %47, i64 0, i32 0, i32 1
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %64, label %68

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.std::__1::__tree_node.1312", %"class.std::__1::__tree_node.1312"* %47, i64 0, i32 0, i32 0
  br label %74

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.std::__1::__tree_node.1312", %"class.std::__1::__tree_node.1312"* %47, i64 0, i32 0, i32 0
  br label %74

68:                                               ; preds = %60, %52
  %69 = phi %"class.std::__1::__tree_node_base"* [ %54, %52 ], [ %62, %60 ]
  %70 = phi %"class.std::__1::__tree_node_base"** [ %53, %52 ], [ %61, %60 ]
  %71 = bitcast %"class.std::__1::__tree_node_base"* %69 to %"class.std::__1::__tree_node.1312"*
  br label %46

72:                                               ; preds = %36
  %73 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 0, i32 0
  br label %74

74:                                               ; preds = %72, %66, %64, %56
  %75 = phi %"class.std::__1::__tree_end_node"* [ %40, %72 ], [ %57, %56 ], [ %65, %64 ], [ %67, %66 ]
  %76 = phi %"class.std::__1::__tree_node_base"** [ %73, %72 ], [ %53, %56 ], [ %61, %64 ], [ %48, %66 ]
  %77 = bitcast %"class.std::__1::__tree_node_base"** %76 to %"class.std::__1::__tree_node.1312"**
  %78 = load %"class.std::__1::__tree_node.1312"*, %"class.std::__1::__tree_node.1312"** %77, align 8
  %79 = icmp eq %"class.std::__1::__tree_node.1312"* %78, null
  br i1 %79, label %80, label %107

80:                                               ; preds = %74
  %81 = tail call i8* @_Znwm(i64 48) #14, !noalias !4
  %82 = getelementptr inbounds i8, i8* %81, i64 32
  %83 = bitcast i8* %82 to i64*
  store i64 %2, i64* %83, align 8, !noalias !4
  %84 = getelementptr inbounds i8, i8* %81, i64 40
  %85 = bitcast i8* %84 to i32*
  store i32 0, i32* %85, align 8, !noalias !4
  %86 = bitcast i8* %81 to %"class.std::__1::__tree_node.1312"*
  %87 = bitcast i8* %81 to %"class.std::__1::__tree_node_base"*
  %88 = getelementptr inbounds i8, i8* %81, i64 16
  %89 = bitcast i8* %88 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %75, %"class.std::__1::__tree_end_node"** %89, align 8
  %90 = bitcast %"class.std::__1::__tree_node_base"** %76 to i8**
  store i8* %81, i8** %90, align 8
  %91 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %38, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %91, align 8
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %92, i64 0, i32 0
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  %95 = icmp eq %"class.std::__1::__tree_node_base"* %94, null
  br i1 %95, label %100, label %96

96:                                               ; preds = %80
  %97 = ptrtoint %"class.std::__1::__tree_node_base"* %94 to i64
  %98 = bitcast %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %38 to i64*
  store i64 %97, i64* %98, align 8
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %76, align 8
  br label %100

100:                                              ; preds = %96, %80
  %101 = phi %"class.std::__1::__tree_node_base"* [ %87, %80 ], [ %99, %96 ]
  %102 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %38, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"* %101) #12
  %104 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %38, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %105 = load i64, i64* %104, align 8
  %106 = add i64 %105, 1
  store i64 %106, i64* %104, align 8
  br label %107

107:                                              ; preds = %74, %100
  %108 = phi %"class.std::__1::__tree_node.1312"* [ %86, %100 ], [ %78, %74 ]
  %109 = getelementptr inbounds %"class.std::__1::__tree_node.1312", %"class.std::__1::__tree_node.1312"* %108, i64 0, i32 2, i32 0, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 4
  %112 = bitcast %"class.std::__1::unique_ptr.1233"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #12
  %113 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 2
  %114 = load i64, i64* %113, align 8
  %115 = add i64 %114, 1
  store i64 %115, i64* %113, align 8
  %116 = tail call i8* @_Znwm(i64 40) #14
  %117 = bitcast i8* %116 to i64*
  store i64 %2, i64* %117, align 8
  %118 = getelementptr inbounds i8, i8* %116, i64 8
  %119 = bitcast i8* %118 to i64*
  store i64 %39, i64* %119, align 8
  %120 = icmp eq i64* %37, null
  br i1 %120, label %124, label %121

121:                                              ; preds = %107
  %122 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %123 = tail call i64* @_ZN2v82V818GlobalizeReferenceEPNS_8internal7IsolateEPm(%"class.v8::internal::Isolate"* %122, i64* nonnull %37) #12
  br label %124

124:                                              ; preds = %107, %121
  %125 = phi i64* [ %123, %121 ], [ null, %107 ]
  %126 = getelementptr inbounds i8, i8* %116, i64 16
  %127 = bitcast i8* %126 to i64**
  store i64* %125, i64** %127, align 8
  %128 = getelementptr inbounds i8, i8* %116, i64 24
  %129 = bitcast i8* %128 to %"class.v8::internal::SamplingHeapProfiler"**
  store %"class.v8::internal::SamplingHeapProfiler"* %0, %"class.v8::internal::SamplingHeapProfiler"** %129, align 8
  %130 = getelementptr inbounds i8, i8* %116, i64 32
  %131 = bitcast i8* %130 to i64*
  store i64 %115, i64* %131, align 8
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr.1233", %"class.std::__1::unique_ptr.1233"* %4, i64 0, i32 0, i32 0, i32 0
  %133 = bitcast %"class.std::__1::unique_ptr.1233"* %4 to i8**
  store i8* %116, i8** %133, align 8
  tail call void @_ZN2v82V88MakeWeakEPmPvPFvRKNS_16WeakCallbackInfoIvEEENS_16WeakCallbackTypeE(i64* %125, i8* nonnull %116, void (%"class.v8::WeakCallbackInfo"*)* bitcast (void (%"class.v8::WeakCallbackInfo.1241"*)* @_ZN2v88internal20SamplingHeapProfiler14OnWeakCallbackERKNS_16WeakCallbackInfoINS1_6SampleEEE to void (%"class.v8::WeakCallbackInfo"*)*), i32 0) #12
  %134 = bitcast %"struct.v8::internal::SamplingHeapProfiler::Sample"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #12
  %135 = ptrtoint i8* %116 to i64
  %136 = bitcast %"struct.v8::internal::SamplingHeapProfiler::Sample"** %5 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 8, i32 0
  %138 = call { %"struct.std::__1::__hash_node_base.1008"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal20SamplingHeapProfiler6SampleENS_10unique_ptrIS5_NS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE25__emplace_unique_key_argsIS6_JS6_SA_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1004"* %137, %"struct.v8::internal::SamplingHeapProfiler::Sample"** nonnull dereferenceable(8) %5, %"struct.v8::internal::SamplingHeapProfiler::Sample"** nonnull dereferenceable(8) %5, %"class.std::__1::unique_ptr.1233"* nonnull dereferenceable(8) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #12
  %139 = load %"struct.v8::internal::SamplingHeapProfiler::Sample"*, %"struct.v8::internal::SamplingHeapProfiler::Sample"** %132, align 8
  store %"struct.v8::internal::SamplingHeapProfiler::Sample"* null, %"struct.v8::internal::SamplingHeapProfiler::Sample"** %132, align 8
  %140 = icmp eq %"struct.v8::internal::SamplingHeapProfiler::Sample"* %139, null
  br i1 %140, label %149, label %141

141:                                              ; preds = %124
  %142 = getelementptr inbounds %"struct.v8::internal::SamplingHeapProfiler::Sample", %"struct.v8::internal::SamplingHeapProfiler::Sample"* %139, i64 0, i32 2, i32 0, i32 0
  %143 = load %"class.v8::Value"*, %"class.v8::Value"** %142, align 8
  %144 = icmp eq %"class.v8::Value"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %141
  %146 = bitcast %"class.v8::Value"* %143 to i64*
  call void @_ZN2v82V813DisposeGlobalEPm(i64* nonnull %146) #12
  br label %147

147:                                              ; preds = %145, %141
  %148 = bitcast %"struct.v8::internal::SamplingHeapProfiler::Sample"* %139 to i8*
  call void @_ZdlPv(i8* %148) #14
  br label %149

149:                                              ; preds = %124, %147
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #12
  %150 = icmp eq %"class.v8::internal::Isolate"* %7, null
  br i1 %150, label %164, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %10 to i64*
  %153 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %8, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  store i64 %10, i64* %9, align 8
  %155 = load i32, i32* %13, align 8
  %156 = add nsw i32 %155, -1
  store i32 %156, i32* %13, align 8
  %157 = load i64*, i64** %11, align 8
  %158 = icmp eq i64* %157, %12
  br i1 %158, label %161, label %159

159:                                              ; preds = %151
  store i64* %12, i64** %11, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %7) #12
  %160 = load i64*, i64** %153, align 8
  br label %161

161:                                              ; preds = %159, %151
  %162 = phi i64* [ %160, %159 ], [ %152, %151 ]
  %163 = phi i64* [ %12, %159 ], [ %154, %151 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %162, i64* %163) #12
  br label %164

164:                                              ; preds = %149, %161
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* @_ZN2v88internal20SamplingHeapProfiler8AddStackEv(%"class.v8::internal::SamplingHeapProfiler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.1249", align 8
  %3 = alloca %"class.v8::internal::JavaScriptFrameIterator", align 8
  %4 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %5 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 7
  %6 = bitcast %"class.std::__1::vector.1249"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #12
  %7 = bitcast %"class.v8::internal::JavaScriptFrameIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1616, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 0
  %9 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::JavaScriptFrameIterator", %"class.v8::internal::JavaScriptFrameIterator"* %3, i64 0, i32 0
  call void @_ZN2v88internal18StackFrameIteratorC1EPNS0_7IsolateE(%"class.v8::internal::StackFrameIterator"* nonnull %10, %"class.v8::internal::Isolate"* %9) #12
  %11 = getelementptr inbounds %"class.v8::internal::JavaScriptFrameIterator", %"class.v8::internal::JavaScriptFrameIterator"* %3, i64 0, i32 0, i32 0, i32 23
  %12 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %11, align 8
  %13 = icmp eq %"class.v8::internal::StackFrame"* %12, null
  br i1 %13, label %122, label %14

14:                                               ; preds = %1
  call void @_ZN2v88internal23JavaScriptFrameIterator7AdvanceEv(%"class.v8::internal::JavaScriptFrameIterator"* nonnull %3) #12
  %15 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %11, align 8
  %16 = icmp eq %"class.v8::internal::StackFrame"* %15, null
  br i1 %16, label %122, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 9
  %19 = getelementptr inbounds %"class.std::__1::vector.1249", %"class.std::__1::vector.1249"* %2, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::vector.1249", %"class.std::__1::vector.1249"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"class.v8::internal::SharedFunctionInfo"** %19 to i64*
  %22 = bitcast %"class.std::__1::vector.1249"* %2 to i64*
  %23 = bitcast %"class.v8::internal::SharedFunctionInfo"** %20 to i64*
  br label %24

24:                                               ; preds = %17, %113
  %25 = phi %"class.v8::internal::StackFrame"* [ %15, %17 ], [ %116, %113 ]
  %26 = phi i32 [ 0, %17 ], [ %115, %113 ]
  %27 = phi i8 [ 0, %17 ], [ %114, %113 ]
  %28 = bitcast %"class.v8::internal::StackFrame"* %25 to %"class.v8::internal::JavaScriptFrame"*
  %29 = load i32, i32* %18, align 8
  %30 = icmp slt i32 %26, %29
  br i1 %30, label %31, label %118

31:                                               ; preds = %24
  %32 = call i64 @_ZNK2v88internal15JavaScriptFrame18unchecked_functionEv(%"class.v8::internal::JavaScriptFrame"* %28) #12
  %33 = and i64 %32, 1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %113, label %35

35:                                               ; preds = %31
  %36 = and i64 %32, -4294967296
  %37 = add i64 %32, -1
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = zext i32 %39 to i64
  %41 = or i64 %36, %40
  %42 = add i64 %41, 7
  %43 = inttoptr i64 %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = add i16 %44, -1059
  %46 = icmp ult i16 %45, 15
  br i1 %46, label %47, label %113

47:                                               ; preds = %35
  %48 = bitcast %"class.v8::internal::StackFrame"* %25 to i64 (%"class.v8::internal::JavaScriptFrame"*)***
  %49 = load i64 (%"class.v8::internal::JavaScriptFrame"*)**, i64 (%"class.v8::internal::JavaScriptFrame"*)*** %48, align 8
  %50 = getelementptr inbounds i64 (%"class.v8::internal::JavaScriptFrame"*)*, i64 (%"class.v8::internal::JavaScriptFrame"*)** %49, i64 13
  %51 = load i64 (%"class.v8::internal::JavaScriptFrame"*)*, i64 (%"class.v8::internal::JavaScriptFrame"*)** %50, align 8
  %52 = call i64 %51(%"class.v8::internal::JavaScriptFrame"* %28) #12
  %53 = add i64 %52, 11
  %54 = inttoptr i64 %53 to i32*
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i64 %52, -4294967296
  %57 = zext i32 %55 to i64
  %58 = or i64 %56, %57
  %59 = load %"class.v8::internal::SharedFunctionInfo"*, %"class.v8::internal::SharedFunctionInfo"** %19, align 8
  %60 = load %"class.v8::internal::SharedFunctionInfo"*, %"class.v8::internal::SharedFunctionInfo"** %20, align 8
  %61 = icmp eq %"class.v8::internal::SharedFunctionInfo"* %59, %60
  %62 = ptrtoint %"class.v8::internal::SharedFunctionInfo"* %60 to i64
  br i1 %61, label %67, label %63

63:                                               ; preds = %47
  %64 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %58, i64* %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %59, i64 1
  %66 = ptrtoint %"class.v8::internal::SharedFunctionInfo"* %65 to i64
  store i64 %66, i64* %21, align 8
  br label %111

67:                                               ; preds = %47
  %68 = ptrtoint %"class.v8::internal::SharedFunctionInfo"* %59 to i64
  %69 = load i64, i64* %22, align 8
  %70 = sub i64 %68, %69
  %71 = ashr exact i64 %70, 3
  %72 = add nsw i64 %71, 1
  %73 = icmp ugt i64 %72, 2305843009213693951
  br i1 %73, label %74, label %76

74:                                               ; preds = %67
  %75 = bitcast %"class.std::__1::vector.1249"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %75) #13
  unreachable

76:                                               ; preds = %67
  %77 = sub i64 %62, %69
  %78 = ashr exact i64 %77, 3
  %79 = icmp ult i64 %78, 1152921504606846975
  br i1 %79, label %80, label %88

80:                                               ; preds = %76
  %81 = ashr exact i64 %77, 2
  %82 = icmp ult i64 %81, %72
  %83 = select i1 %82, i64 %72, i64 %81
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %93, label %85

85:                                               ; preds = %80
  %86 = icmp ugt i64 %83, 2305843009213693951
  br i1 %86, label %87, label %88

87:                                               ; preds = %85
  call void @abort() #13
  unreachable

88:                                               ; preds = %85, %76
  %89 = phi i64 [ %83, %85 ], [ 2305843009213693951, %76 ]
  %90 = shl i64 %89, 3
  %91 = call i8* @_Znwm(i64 %90) #14
  %92 = bitcast i8* %91 to %"class.v8::internal::SharedFunctionInfo"*
  br label %93

93:                                               ; preds = %88, %80
  %94 = phi i64 [ %89, %88 ], [ 0, %80 ]
  %95 = phi i8* [ %91, %88 ], [ null, %80 ]
  %96 = phi %"class.v8::internal::SharedFunctionInfo"* [ %92, %88 ], [ null, %80 ]
  %97 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %96, i64 %71
  %98 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %96, i64 %94
  %99 = ptrtoint %"class.v8::internal::SharedFunctionInfo"* %98 to i64
  %100 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %58, i64* %100, align 8
  %101 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %97, i64 1
  %102 = ptrtoint %"class.v8::internal::SharedFunctionInfo"* %101 to i64
  %103 = ptrtoint %"class.v8::internal::SharedFunctionInfo"* %96 to i64
  %104 = icmp sgt i64 %70, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %93
  %106 = inttoptr i64 %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %106, i64 %70, i1 false) #12
  br label %107

107:                                              ; preds = %105, %93
  store i64 %103, i64* %22, align 8
  store i64 %102, i64* %21, align 8
  store i64 %99, i64* %23, align 8
  %108 = icmp eq i64 %69, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %69 to i8*
  call void @_ZdlPv(i8* %110) #14
  br label %111

111:                                              ; preds = %63, %107, %109
  %112 = add nsw i32 %26, 1
  br label %113

113:                                              ; preds = %31, %35, %111
  %114 = phi i8 [ %27, %111 ], [ 1, %35 ], [ 1, %31 ]
  %115 = phi i32 [ %112, %111 ], [ %26, %35 ], [ %26, %31 ]
  call void @_ZN2v88internal23JavaScriptFrameIterator7AdvanceEv(%"class.v8::internal::JavaScriptFrameIterator"* nonnull %3) #12
  %116 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %11, align 8
  %117 = icmp eq %"class.v8::internal::StackFrame"* %116, null
  br i1 %117, label %118, label %24

118:                                              ; preds = %24, %113
  %119 = phi i8 [ %27, %24 ], [ %114, %113 ]
  %120 = phi i32 [ %26, %24 ], [ %115, %113 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %189

122:                                              ; preds = %1, %14, %118
  %123 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %124 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %123, i64 0, i32 0, i32 9, i32 22
  %125 = load i32, i32* %124, align 8
  %126 = icmp ult i32 %125, 9
  br i1 %126, label %127, label %132

127:                                              ; preds = %122
  %128 = sext i32 %125 to i64
  %129 = getelementptr inbounds [9 x i8*], [9 x i8*]* @switch.table._ZN2v88internal20SamplingHeapProfiler8AddStackEv, i64 0, i64 %128
  %130 = bitcast i8** %129 to i64*
  %131 = load i64, i64* %130, align 8
  br label %132

132:                                              ; preds = %127, %122
  %133 = phi i64 [ 0, %122 ], [ %131, %127 ]
  %134 = ptrtoint %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %5 to i64
  %135 = or i64 %133, 1
  %136 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 7, i32 1, i32 0, i32 1, i32 0, i32 0
  %137 = bitcast %"class.std::__1::__tree_end_node"* %136 to %"class.std::__1::__tree_node"**
  %138 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %137, align 8
  %139 = icmp eq %"class.std::__1::__tree_node"* %138, null
  br i1 %139, label %166, label %140

140:                                              ; preds = %132, %140
  %141 = phi %"class.std::__1::__tree_end_node"* [ %151, %140 ], [ %136, %132 ]
  %142 = phi %"class.std::__1::__tree_node"* [ %152, %140 ], [ %138, %132 ]
  %143 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %142, i64 0, i32 1, i32 0, i32 0
  %144 = load i64, i64* %143, align 8
  %145 = icmp ult i64 %144, %135
  %146 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %142, i64 0, i32 0, i32 1
  %147 = bitcast %"class.std::__1::__tree_node_base"** %146 to %"class.std::__1::__tree_node"**
  %148 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %142, i64 0, i32 0, i32 0
  %149 = bitcast %"class.std::__1::__tree_node"* %142 to %"class.std::__1::__tree_node"**
  %150 = select i1 %145, %"class.std::__1::__tree_node"** %147, %"class.std::__1::__tree_node"** %149
  %151 = select i1 %145, %"class.std::__1::__tree_end_node"* %141, %"class.std::__1::__tree_end_node"* %148
  %152 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %150, align 8
  %153 = icmp eq %"class.std::__1::__tree_node"* %152, null
  br i1 %153, label %154, label %140

154:                                              ; preds = %140
  %155 = icmp eq %"class.std::__1::__tree_end_node"* %151, %136
  br i1 %155, label %166, label %156

156:                                              ; preds = %154
  %157 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %151, i64 4
  %158 = bitcast %"class.std::__1::__tree_end_node"* %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = icmp ugt i64 %159, %135
  br i1 %160, label %166, label %161

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %151, i64 5
  %163 = bitcast %"class.std::__1::__tree_end_node"* %162 to %"class.v8::internal::SamplingHeapProfiler::AllocationNode"**
  %164 = load %"class.v8::internal::SamplingHeapProfiler::AllocationNode"*, %"class.v8::internal::SamplingHeapProfiler::AllocationNode"** %163, align 8
  %165 = icmp eq %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %164, null
  br i1 %165, label %166, label %407

166:                                              ; preds = %161, %156, %154, %132
  %167 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 3
  %168 = load i32, i32* %167, align 8
  %169 = add i32 %168, 1
  store i32 %169, i32* %167, align 8
  %170 = call i8* @_Znwm(i64 80) #14
  %171 = bitcast i8* %170 to %"class.v8::internal::SamplingHeapProfiler::AllocationNode"*
  %172 = getelementptr inbounds i8, i8* %170, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %172, i8 0, i64 16, i1 false) #12
  %173 = bitcast i8* %170 to i8**
  store i8* %172, i8** %173, align 8
  %174 = getelementptr inbounds i8, i8* %170, i64 32
  %175 = getelementptr inbounds i8, i8* %170, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %174, i8 0, i64 16, i1 false) #12
  %176 = bitcast i8* %175 to i8**
  store i8* %174, i8** %176, align 8
  %177 = getelementptr inbounds i8, i8* %170, i64 48
  %178 = bitcast i8* %177 to i64*
  store i64 %134, i64* %178, align 8
  %179 = getelementptr inbounds i8, i8* %170, i64 56
  %180 = bitcast i8* %179 to i32*
  store i32 0, i32* %180, align 8
  %181 = getelementptr inbounds i8, i8* %170, i64 60
  %182 = bitcast i8* %181 to i32*
  store i32 0, i32* %182, align 4
  %183 = getelementptr inbounds i8, i8* %170, i64 64
  %184 = bitcast i8* %183 to i64*
  store i64 %133, i64* %184, align 8
  %185 = getelementptr inbounds i8, i8* %170, i64 72
  %186 = bitcast i8* %185 to i32*
  store i32 %169, i32* %186, align 8
  %187 = getelementptr inbounds i8, i8* %170, i64 76
  store i8 0, i8* %187, align 4
  %188 = call %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* @_ZN2v88internal20SamplingHeapProfiler14AllocationNode12AddChildNodeEmNSt3__110unique_ptrIS2_NS3_14default_deleteIS2_EEEE(%"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %5, i64 %135, %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* nonnull %171) #12
  br label %407

189:                                              ; preds = %118
  %190 = getelementptr inbounds %"class.std::__1::vector.1249", %"class.std::__1::vector.1249"* %2, i64 0, i32 0, i32 1
  %191 = load %"class.v8::internal::SharedFunctionInfo"*, %"class.v8::internal::SharedFunctionInfo"** %190, align 8
  %192 = getelementptr inbounds %"class.std::__1::vector.1249", %"class.std::__1::vector.1249"* %2, i64 0, i32 0, i32 0
  %193 = load %"class.v8::internal::SharedFunctionInfo"*, %"class.v8::internal::SharedFunctionInfo"** %192, align 8
  %194 = icmp eq %"class.v8::internal::SharedFunctionInfo"* %191, %193
  br i1 %194, label %200, label %195

195:                                              ; preds = %189
  %196 = bitcast %"class.v8::internal::SharedFunctionInfo"* %4 to i8*
  %197 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 6
  %199 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 3
  br label %204

200:                                              ; preds = %348, %189
  %201 = phi %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* [ %5, %189 ], [ %349, %348 ]
  %202 = and i8 %119, 1
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %407, label %352

204:                                              ; preds = %195, %348
  %205 = phi %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* [ %5, %195 ], [ %349, %348 ]
  %206 = phi %"class.v8::internal::SharedFunctionInfo"* [ %191, %195 ], [ %207, %348 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %196) #12
  %207 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %206, i64 -1
  %208 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %207, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load i64, i64* %208, align 8
  store i64 %209, i64* %197, align 8
  %210 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %198, align 8
  %211 = call i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %4) #12
  %212 = call i8* @_ZN2v88internal14StringsStorage7GetCopyEPKc(%"class.v8::internal::StringsStorage"* %210, i8* %211) #12
  %213 = icmp eq i8* %211, null
  br i1 %213, label %215, label %214

214:                                              ; preds = %204
  call void @_ZdaPv(i8* nonnull %211) #14
  br label %215

215:                                              ; preds = %204, %214
  %216 = load i64, i64* %197, align 8
  %217 = and i64 %216, -4294967296
  %218 = add i64 %216, 15
  %219 = inttoptr i64 %218 to i32*
  %220 = load atomic i32, i32* %219 acquire, align 4
  %221 = zext i32 %220 to i64
  %222 = or i64 %217, %221
  %223 = add i64 %222, -1
  %224 = inttoptr i64 %223 to i32*
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = zext i32 %225 to i64
  %227 = or i64 %217, %226
  %228 = add i64 %227, 7
  %229 = inttoptr i64 %228 to i16*
  %230 = load atomic i16, i16* %229 monotonic, align 2
  %231 = icmp eq i16 %230, 100
  br i1 %231, label %232, label %240

232:                                              ; preds = %215
  %233 = add i64 %222, 11
  %234 = inttoptr i64 %233 to i32*
  %235 = load i32, i32* %234, align 4
  %236 = zext i32 %235 to i64
  %237 = or i64 %217, %236
  %238 = add i64 %237, -1
  %239 = inttoptr i64 %238 to i32*
  br label %240

240:                                              ; preds = %215, %232
  %241 = phi i32* [ %224, %215 ], [ %239, %232 ]
  %242 = phi i64 [ %222, %215 ], [ %237, %232 ]
  %243 = and i64 %242, -4294967296
  %244 = load atomic i32, i32* %241 monotonic, align 4
  %245 = zext i32 %244 to i64
  %246 = or i64 %243, %245
  %247 = add i64 %246, 7
  %248 = inttoptr i64 %247 to i16*
  %249 = load atomic i16, i16* %248 monotonic, align 2
  %250 = icmp eq i16 %249, 112
  br i1 %250, label %251, label %280

251:                                              ; preds = %240
  %252 = load i64, i64* %197, align 8
  %253 = and i64 %252, -4294967296
  %254 = add i64 %252, 15
  %255 = inttoptr i64 %254 to i32*
  %256 = load atomic i32, i32* %255 acquire, align 4
  %257 = zext i32 %256 to i64
  %258 = or i64 %253, %257
  %259 = add i64 %258, -1
  %260 = inttoptr i64 %259 to i32*
  %261 = load atomic i32, i32* %260 monotonic, align 4
  %262 = zext i32 %261 to i64
  %263 = or i64 %253, %262
  %264 = add i64 %263, 7
  %265 = inttoptr i64 %264 to i16*
  %266 = load atomic i16, i16* %265 monotonic, align 2
  %267 = icmp eq i16 %266, 100
  br i1 %267, label %268, label %274

268:                                              ; preds = %251
  %269 = add i64 %258, 11
  %270 = inttoptr i64 %269 to i32*
  %271 = load i32, i32* %270, align 4
  %272 = zext i32 %271 to i64
  %273 = or i64 %253, %272
  br label %274

274:                                              ; preds = %251, %268
  %275 = phi i64 [ %273, %268 ], [ %258, %251 ]
  %276 = add i64 %275, 31
  %277 = inttoptr i64 %276 to i32*
  %278 = load i32, i32* %277, align 4
  %279 = ashr i32 %278, 1
  br label %280

280:                                              ; preds = %274, %240
  %281 = phi i32 [ %279, %274 ], [ 0, %240 ]
  %282 = call i32 @_ZNK2v88internal18SharedFunctionInfo13StartPositionEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %4) #12
  %283 = ptrtoint %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %205 to i64
  %284 = ptrtoint i8* %212 to i64
  %285 = icmp eq i32 %281, 0
  br i1 %285, label %286, label %288

286:                                              ; preds = %280
  %287 = or i64 %284, 1
  br label %294

288:                                              ; preds = %280
  %289 = zext i32 %281 to i64
  %290 = shl nuw i64 %289, 32
  %291 = shl i32 %282, 1
  %292 = sext i32 %291 to i64
  %293 = add i64 %290, %292
  br label %294

294:                                              ; preds = %288, %286
  %295 = phi i64 [ %287, %286 ], [ %293, %288 ]
  %296 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %205, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %297 = bitcast %"class.std::__1::__tree_end_node"* %296 to %"class.std::__1::__tree_node"**
  %298 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %297, align 8
  %299 = icmp eq %"class.std::__1::__tree_node"* %298, null
  br i1 %299, label %326, label %300

300:                                              ; preds = %294, %300
  %301 = phi %"class.std::__1::__tree_end_node"* [ %311, %300 ], [ %296, %294 ]
  %302 = phi %"class.std::__1::__tree_node"* [ %312, %300 ], [ %298, %294 ]
  %303 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %302, i64 0, i32 1, i32 0, i32 0
  %304 = load i64, i64* %303, align 8
  %305 = icmp ult i64 %304, %295
  %306 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %302, i64 0, i32 0, i32 1
  %307 = bitcast %"class.std::__1::__tree_node_base"** %306 to %"class.std::__1::__tree_node"**
  %308 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %302, i64 0, i32 0, i32 0
  %309 = bitcast %"class.std::__1::__tree_node"* %302 to %"class.std::__1::__tree_node"**
  %310 = select i1 %305, %"class.std::__1::__tree_node"** %307, %"class.std::__1::__tree_node"** %309
  %311 = select i1 %305, %"class.std::__1::__tree_end_node"* %301, %"class.std::__1::__tree_end_node"* %308
  %312 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %310, align 8
  %313 = icmp eq %"class.std::__1::__tree_node"* %312, null
  br i1 %313, label %314, label %300

314:                                              ; preds = %300
  %315 = icmp eq %"class.std::__1::__tree_end_node"* %311, %296
  br i1 %315, label %326, label %316

316:                                              ; preds = %314
  %317 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %311, i64 4
  %318 = bitcast %"class.std::__1::__tree_end_node"* %317 to i64*
  %319 = load i64, i64* %318, align 8
  %320 = icmp ugt i64 %319, %295
  br i1 %320, label %326, label %321

321:                                              ; preds = %316
  %322 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %311, i64 5
  %323 = bitcast %"class.std::__1::__tree_end_node"* %322 to %"class.v8::internal::SamplingHeapProfiler::AllocationNode"**
  %324 = load %"class.v8::internal::SamplingHeapProfiler::AllocationNode"*, %"class.v8::internal::SamplingHeapProfiler::AllocationNode"** %323, align 8
  %325 = icmp eq %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %324, null
  br i1 %325, label %326, label %348

326:                                              ; preds = %321, %316, %314, %294
  %327 = load i32, i32* %199, align 8
  %328 = add i32 %327, 1
  store i32 %328, i32* %199, align 8
  %329 = call i8* @_Znwm(i64 80) #14
  %330 = bitcast i8* %329 to %"class.v8::internal::SamplingHeapProfiler::AllocationNode"*
  %331 = getelementptr inbounds i8, i8* %329, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %331, i8 0, i64 16, i1 false) #12
  %332 = bitcast i8* %329 to i8**
  store i8* %331, i8** %332, align 8
  %333 = getelementptr inbounds i8, i8* %329, i64 32
  %334 = getelementptr inbounds i8, i8* %329, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %333, i8 0, i64 16, i1 false) #12
  %335 = bitcast i8* %334 to i8**
  store i8* %333, i8** %335, align 8
  %336 = getelementptr inbounds i8, i8* %329, i64 48
  %337 = bitcast i8* %336 to i64*
  store i64 %283, i64* %337, align 8
  %338 = getelementptr inbounds i8, i8* %329, i64 56
  %339 = bitcast i8* %338 to i32*
  store i32 %281, i32* %339, align 8
  %340 = getelementptr inbounds i8, i8* %329, i64 60
  %341 = bitcast i8* %340 to i32*
  store i32 %282, i32* %341, align 4
  %342 = getelementptr inbounds i8, i8* %329, i64 64
  %343 = bitcast i8* %342 to i64*
  store i64 %284, i64* %343, align 8
  %344 = getelementptr inbounds i8, i8* %329, i64 72
  %345 = bitcast i8* %344 to i32*
  store i32 %328, i32* %345, align 8
  %346 = getelementptr inbounds i8, i8* %329, i64 76
  store i8 0, i8* %346, align 4
  %347 = call %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* @_ZN2v88internal20SamplingHeapProfiler14AllocationNode12AddChildNodeEmNSt3__110unique_ptrIS2_NS3_14default_deleteIS2_EEEE(%"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %205, i64 %295, %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* nonnull %330) #12
  br label %348

348:                                              ; preds = %321, %326
  %349 = phi %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* [ %347, %326 ], [ %324, %321 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %196) #12
  %350 = load %"class.v8::internal::SharedFunctionInfo"*, %"class.v8::internal::SharedFunctionInfo"** %192, align 8
  %351 = icmp eq %"class.v8::internal::SharedFunctionInfo"* %207, %350
  br i1 %351, label %200, label %204

352:                                              ; preds = %200
  %353 = ptrtoint %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %201 to i64
  %354 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %201, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %355 = bitcast %"class.std::__1::__tree_end_node"* %354 to %"class.std::__1::__tree_node"**
  %356 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %355, align 8
  %357 = icmp eq %"class.std::__1::__tree_node"* %356, null
  br i1 %357, label %384, label %358

358:                                              ; preds = %352, %358
  %359 = phi %"class.std::__1::__tree_end_node"* [ %369, %358 ], [ %354, %352 ]
  %360 = phi %"class.std::__1::__tree_node"* [ %370, %358 ], [ %356, %352 ]
  %361 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %360, i64 0, i32 1, i32 0, i32 0
  %362 = load i64, i64* %361, align 8
  %363 = icmp ult i64 %362, or (i64 ptrtoint ([8 x i8]* @.str.11 to i64), i64 1)
  %364 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %360, i64 0, i32 0, i32 1
  %365 = bitcast %"class.std::__1::__tree_node_base"** %364 to %"class.std::__1::__tree_node"**
  %366 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %360, i64 0, i32 0, i32 0
  %367 = bitcast %"class.std::__1::__tree_node"* %360 to %"class.std::__1::__tree_node"**
  %368 = select i1 %363, %"class.std::__1::__tree_node"** %365, %"class.std::__1::__tree_node"** %367
  %369 = select i1 %363, %"class.std::__1::__tree_end_node"* %359, %"class.std::__1::__tree_end_node"* %366
  %370 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %368, align 8
  %371 = icmp eq %"class.std::__1::__tree_node"* %370, null
  br i1 %371, label %372, label %358

372:                                              ; preds = %358
  %373 = icmp eq %"class.std::__1::__tree_end_node"* %369, %354
  br i1 %373, label %384, label %374

374:                                              ; preds = %372
  %375 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %369, i64 4
  %376 = bitcast %"class.std::__1::__tree_end_node"* %375 to i64*
  %377 = load i64, i64* %376, align 8
  %378 = icmp ugt i64 %377, or (i64 ptrtoint ([8 x i8]* @.str.11 to i64), i64 1)
  br i1 %378, label %384, label %379

379:                                              ; preds = %374
  %380 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %369, i64 5
  %381 = bitcast %"class.std::__1::__tree_end_node"* %380 to %"class.v8::internal::SamplingHeapProfiler::AllocationNode"**
  %382 = load %"class.v8::internal::SamplingHeapProfiler::AllocationNode"*, %"class.v8::internal::SamplingHeapProfiler::AllocationNode"** %381, align 8
  %383 = icmp eq %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %382, null
  br i1 %383, label %384, label %407

384:                                              ; preds = %379, %374, %372, %352
  %385 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 3
  %386 = load i32, i32* %385, align 8
  %387 = add i32 %386, 1
  store i32 %387, i32* %385, align 8
  %388 = call i8* @_Znwm(i64 80) #14
  %389 = bitcast i8* %388 to %"class.v8::internal::SamplingHeapProfiler::AllocationNode"*
  %390 = getelementptr inbounds i8, i8* %388, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %390, i8 0, i64 16, i1 false) #12
  %391 = bitcast i8* %388 to i8**
  store i8* %390, i8** %391, align 8
  %392 = getelementptr inbounds i8, i8* %388, i64 32
  %393 = getelementptr inbounds i8, i8* %388, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %392, i8 0, i64 16, i1 false) #12
  %394 = bitcast i8* %393 to i8**
  store i8* %392, i8** %394, align 8
  %395 = getelementptr inbounds i8, i8* %388, i64 48
  %396 = bitcast i8* %395 to i64*
  store i64 %353, i64* %396, align 8
  %397 = getelementptr inbounds i8, i8* %388, i64 56
  %398 = bitcast i8* %397 to i32*
  store i32 0, i32* %398, align 8
  %399 = getelementptr inbounds i8, i8* %388, i64 60
  %400 = bitcast i8* %399 to i32*
  store i32 0, i32* %400, align 4
  %401 = getelementptr inbounds i8, i8* %388, i64 64
  %402 = bitcast i8* %401 to i64*
  store i64 ptrtoint ([8 x i8]* @.str.11 to i64), i64* %402, align 8
  %403 = getelementptr inbounds i8, i8* %388, i64 72
  %404 = bitcast i8* %403 to i32*
  store i32 %387, i32* %404, align 8
  %405 = getelementptr inbounds i8, i8* %388, i64 76
  store i8 0, i8* %405, align 4
  %406 = call %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* @_ZN2v88internal20SamplingHeapProfiler14AllocationNode12AddChildNodeEmNSt3__110unique_ptrIS2_NS3_14default_deleteIS2_EEEE(%"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %201, i64 or (i64 ptrtoint ([8 x i8]* @.str.11 to i64), i64 1), %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* nonnull %389) #12
  br label %407

407:                                              ; preds = %384, %379, %166, %161, %200
  %408 = phi %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* [ %201, %200 ], [ %188, %166 ], [ %164, %161 ], [ %406, %384 ], [ %382, %379 ]
  call void @llvm.lifetime.end.p0i8(i64 1616, i8* nonnull %7) #12
  %409 = getelementptr inbounds %"class.std::__1::vector.1249", %"class.std::__1::vector.1249"* %2, i64 0, i32 0, i32 0
  %410 = load %"class.v8::internal::SharedFunctionInfo"*, %"class.v8::internal::SharedFunctionInfo"** %409, align 8
  %411 = icmp eq %"class.v8::internal::SharedFunctionInfo"* %410, null
  br i1 %411, label %417, label %412

412:                                              ; preds = %407
  %413 = ptrtoint %"class.v8::internal::SharedFunctionInfo"* %410 to i64
  %414 = getelementptr inbounds %"class.std::__1::vector.1249", %"class.std::__1::vector.1249"* %2, i64 0, i32 0, i32 1
  %415 = bitcast %"class.v8::internal::SharedFunctionInfo"** %414 to i64*
  store i64 %413, i64* %415, align 8
  %416 = bitcast %"class.v8::internal::SharedFunctionInfo"* %410 to i8*
  call void @_ZdlPv(i8* %416) #14
  br label %417

417:                                              ; preds = %407, %412
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %408
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal20SamplingHeapProfiler14OnWeakCallbackERKNS_16WeakCallbackInfoINS1_6SampleEEE(%"class.v8::WeakCallbackInfo.1241"* nocapture readonly dereferenceable(40)) #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.1348", align 8
  %3 = alloca %"struct.v8::internal::SamplingHeapProfiler::Sample"*, align 8
  %4 = bitcast %"struct.v8::internal::SamplingHeapProfiler::Sample"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.v8::WeakCallbackInfo.1241", %"class.v8::WeakCallbackInfo.1241"* %0, i64 0, i32 1
  %6 = load %"struct.v8::internal::SamplingHeapProfiler::Sample"*, %"struct.v8::internal::SamplingHeapProfiler::Sample"** %5, align 8
  store %"struct.v8::internal::SamplingHeapProfiler::Sample"* %6, %"struct.v8::internal::SamplingHeapProfiler::Sample"** %3, align 8
  %7 = getelementptr inbounds %"struct.v8::internal::SamplingHeapProfiler::Sample", %"struct.v8::internal::SamplingHeapProfiler::Sample"* %6, i64 0, i32 1
  %8 = load %"class.v8::internal::SamplingHeapProfiler::AllocationNode"*, %"class.v8::internal::SamplingHeapProfiler::AllocationNode"** %7, align 8
  %9 = getelementptr inbounds %"struct.v8::internal::SamplingHeapProfiler::Sample", %"struct.v8::internal::SamplingHeapProfiler::Sample"* %6, i64 0, i32 0
  %10 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node.1312"**
  %12 = load %"class.std::__1::__tree_node.1312"*, %"class.std::__1::__tree_node.1312"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node.1312"* %12, null
  br i1 %13, label %43, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = load i64, i64* %9, align 8
  br label %17

17:                                               ; preds = %39, %14
  %18 = phi %"class.std::__1::__tree_node.1312"* [ %42, %39 ], [ %12, %14 ]
  %19 = phi %"class.std::__1::__tree_node_base"** [ %41, %39 ], [ %15, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__tree_node.1312", %"class.std::__1::__tree_node.1312"* %18, i64 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp ult i64 %16, %21
  br i1 %22, label %23, label %29

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.std::__1::__tree_node.1312", %"class.std::__1::__tree_node.1312"* %18, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, null
  br i1 %26, label %27, label %39

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.1312", %"class.std::__1::__tree_node.1312"* %18, i64 0, i32 0, i32 0
  br label %45

29:                                               ; preds = %17
  %30 = icmp ult i64 %21, %16
  br i1 %30, label %31, label %37

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.std::__1::__tree_node.1312", %"class.std::__1::__tree_node.1312"* %18, i64 0, i32 0, i32 1
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, null
  br i1 %34, label %35, label %39

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.std::__1::__tree_node.1312", %"class.std::__1::__tree_node.1312"* %18, i64 0, i32 0, i32 0
  br label %45

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.std::__1::__tree_node.1312", %"class.std::__1::__tree_node.1312"* %18, i64 0, i32 0, i32 0
  br label %45

39:                                               ; preds = %31, %23
  %40 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %33, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %32, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"* %40 to %"class.std::__1::__tree_node.1312"*
  br label %17

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  br label %45

45:                                               ; preds = %43, %37, %35, %27
  %46 = phi %"class.std::__1::__tree_end_node"* [ %10, %43 ], [ %28, %27 ], [ %36, %35 ], [ %38, %37 ]
  %47 = phi %"class.std::__1::__tree_node_base"** [ %44, %43 ], [ %24, %27 ], [ %32, %35 ], [ %19, %37 ]
  %48 = bitcast %"class.std::__1::__tree_node_base"** %47 to %"class.std::__1::__tree_node.1312"**
  %49 = load %"class.std::__1::__tree_node.1312"*, %"class.std::__1::__tree_node.1312"** %48, align 8
  %50 = icmp eq %"class.std::__1::__tree_node.1312"* %49, null
  br i1 %50, label %51, label %80

51:                                               ; preds = %45
  %52 = tail call i8* @_Znwm(i64 48) #14, !noalias !7
  %53 = getelementptr inbounds i8, i8* %52, i64 32
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %9, align 8, !noalias !7
  store i64 %55, i64* %54, align 8, !noalias !7
  %56 = getelementptr inbounds i8, i8* %52, i64 40
  %57 = bitcast i8* %56 to i32*
  store i32 0, i32* %57, align 8, !noalias !7
  %58 = bitcast i8* %52 to %"class.std::__1::__tree_node.1312"*
  %59 = bitcast i8* %52 to %"class.std::__1::__tree_node_base"*
  %60 = getelementptr inbounds i8, i8* %52, i64 16
  %61 = bitcast i8* %60 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %46, %"class.std::__1::__tree_end_node"** %61, align 8
  %62 = bitcast %"class.std::__1::__tree_node_base"** %47 to i8**
  store i8* %52, i8** %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %8, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 0, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %72, label %68

68:                                               ; preds = %51
  %69 = ptrtoint %"class.std::__1::__tree_node_base"* %66 to i64
  %70 = bitcast %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %8 to i64*
  store i64 %69, i64* %70, align 8
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  br label %72

72:                                               ; preds = %68, %51
  %73 = phi %"class.std::__1::__tree_node_base"* [ %59, %51 ], [ %71, %68 ]
  %74 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %75, %"class.std::__1::__tree_node_base"* %73) #12
  %76 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %8, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  store i64 %78, i64* %76, align 8
  %79 = load %"struct.v8::internal::SamplingHeapProfiler::Sample"*, %"struct.v8::internal::SamplingHeapProfiler::Sample"** %3, align 8
  br label %80

80:                                               ; preds = %45, %72
  %81 = phi %"struct.v8::internal::SamplingHeapProfiler::Sample"* [ %79, %72 ], [ %6, %45 ]
  %82 = phi %"class.std::__1::__tree_node.1312"* [ %58, %72 ], [ %49, %45 ]
  %83 = getelementptr inbounds %"class.std::__1::__tree_node.1312", %"class.std::__1::__tree_node.1312"* %82, i64 0, i32 2, i32 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = add i32 %84, -1
  store i32 %85, i32* %83, align 4
  %86 = getelementptr inbounds %"struct.v8::internal::SamplingHeapProfiler::Sample", %"struct.v8::internal::SamplingHeapProfiler::Sample"* %81, i64 0, i32 0
  %87 = load %"class.std::__1::__tree_node.1312"*, %"class.std::__1::__tree_node.1312"** %11, align 8
  %88 = icmp eq %"class.std::__1::__tree_node.1312"* %87, null
  br i1 %88, label %118, label %89

89:                                               ; preds = %80
  %90 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %91 = load i64, i64* %86, align 8
  br label %92

92:                                               ; preds = %114, %89
  %93 = phi %"class.std::__1::__tree_node.1312"* [ %117, %114 ], [ %87, %89 ]
  %94 = phi %"class.std::__1::__tree_node_base"** [ %116, %114 ], [ %90, %89 ]
  %95 = getelementptr inbounds %"class.std::__1::__tree_node.1312", %"class.std::__1::__tree_node.1312"* %93, i64 0, i32 2, i32 0, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = icmp ult i64 %91, %96
  br i1 %97, label %98, label %104

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.std::__1::__tree_node.1312", %"class.std::__1::__tree_node.1312"* %93, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %99, align 8
  %101 = icmp eq %"class.std::__1::__tree_node_base"* %100, null
  br i1 %101, label %102, label %114

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.std::__1::__tree_node.1312", %"class.std::__1::__tree_node.1312"* %93, i64 0, i32 0, i32 0
  br label %120

104:                                              ; preds = %92
  %105 = icmp ult i64 %96, %91
  br i1 %105, label %106, label %112

106:                                              ; preds = %104
  %107 = getelementptr inbounds %"class.std::__1::__tree_node.1312", %"class.std::__1::__tree_node.1312"* %93, i64 0, i32 0, i32 1
  %108 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %107, align 8
  %109 = icmp eq %"class.std::__1::__tree_node_base"* %108, null
  br i1 %109, label %110, label %114

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.std::__1::__tree_node.1312", %"class.std::__1::__tree_node.1312"* %93, i64 0, i32 0, i32 0
  br label %120

112:                                              ; preds = %104
  %113 = getelementptr inbounds %"class.std::__1::__tree_node.1312", %"class.std::__1::__tree_node.1312"* %93, i64 0, i32 0, i32 0
  br label %120

114:                                              ; preds = %106, %98
  %115 = phi %"class.std::__1::__tree_node_base"* [ %100, %98 ], [ %108, %106 ]
  %116 = phi %"class.std::__1::__tree_node_base"** [ %99, %98 ], [ %107, %106 ]
  %117 = bitcast %"class.std::__1::__tree_node_base"* %115 to %"class.std::__1::__tree_node.1312"*
  br label %92

118:                                              ; preds = %80
  %119 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  br label %120

120:                                              ; preds = %118, %112, %110, %102
  %121 = phi %"class.std::__1::__tree_end_node"* [ %10, %118 ], [ %103, %102 ], [ %111, %110 ], [ %113, %112 ]
  %122 = phi %"class.std::__1::__tree_node_base"** [ %119, %118 ], [ %99, %102 ], [ %107, %110 ], [ %94, %112 ]
  %123 = bitcast %"class.std::__1::__tree_node_base"** %122 to %"class.std::__1::__tree_node.1312"**
  %124 = load %"class.std::__1::__tree_node.1312"*, %"class.std::__1::__tree_node.1312"** %123, align 8
  %125 = icmp eq %"class.std::__1::__tree_node.1312"* %124, null
  br i1 %125, label %126, label %154

126:                                              ; preds = %120
  %127 = tail call i8* @_Znwm(i64 48) #14, !noalias !10
  %128 = getelementptr inbounds i8, i8* %127, i64 32
  %129 = bitcast i8* %128 to i64*
  %130 = load i64, i64* %86, align 8, !noalias !10
  store i64 %130, i64* %129, align 8, !noalias !10
  %131 = getelementptr inbounds i8, i8* %127, i64 40
  %132 = bitcast i8* %131 to i32*
  store i32 0, i32* %132, align 8, !noalias !10
  %133 = bitcast i8* %127 to %"class.std::__1::__tree_node.1312"*
  %134 = bitcast i8* %127 to %"class.std::__1::__tree_node_base"*
  %135 = getelementptr inbounds i8, i8* %127, i64 16
  %136 = bitcast i8* %135 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %127, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %121, %"class.std::__1::__tree_end_node"** %136, align 8
  %137 = bitcast %"class.std::__1::__tree_node_base"** %122 to i8**
  store i8* %127, i8** %137, align 8
  %138 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %8, i64 0, i32 0, i32 0, i32 0
  %139 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %139, i64 0, i32 0
  %141 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %140, align 8
  %142 = icmp eq %"class.std::__1::__tree_node_base"* %141, null
  br i1 %142, label %147, label %143

143:                                              ; preds = %126
  %144 = ptrtoint %"class.std::__1::__tree_node_base"* %141 to i64
  %145 = bitcast %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %8 to i64*
  store i64 %144, i64* %145, align 8
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %122, align 8
  br label %147

147:                                              ; preds = %143, %126
  %148 = phi %"class.std::__1::__tree_node_base"* [ %134, %126 ], [ %146, %143 ]
  %149 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %150 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %149, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %150, %"class.std::__1::__tree_node_base"* %148) #12
  %151 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %8, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %152 = load i64, i64* %151, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %151, align 8
  br label %154

154:                                              ; preds = %120, %147
  %155 = phi %"class.std::__1::__tree_node.1312"* [ %133, %147 ], [ %124, %120 ]
  %156 = getelementptr inbounds %"class.std::__1::__tree_node.1312", %"class.std::__1::__tree_node.1312"* %155, i64 0, i32 2, i32 0, i32 1
  %157 = load i32, i32* %156, align 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %298

159:                                              ; preds = %154
  %160 = load %"class.std::__1::__tree_node.1312"*, %"class.std::__1::__tree_node.1312"** %11, align 8
  %161 = icmp eq %"class.std::__1::__tree_node.1312"* %160, null
  %162 = bitcast %"class.std::__1::__tree_node.1312"* %160 to %"class.std::__1::__tree_node_base"*
  br i1 %161, label %230, label %163

163:                                              ; preds = %159
  %164 = load %"struct.v8::internal::SamplingHeapProfiler::Sample"*, %"struct.v8::internal::SamplingHeapProfiler::Sample"** %3, align 8
  %165 = getelementptr inbounds %"struct.v8::internal::SamplingHeapProfiler::Sample", %"struct.v8::internal::SamplingHeapProfiler::Sample"* %164, i64 0, i32 0
  %166 = load i64, i64* %165, align 8
  br label %167

167:                                              ; preds = %167, %163
  %168 = phi %"class.std::__1::__tree_end_node"* [ %10, %163 ], [ %178, %167 ]
  %169 = phi %"class.std::__1::__tree_node.1312"* [ %160, %163 ], [ %179, %167 ]
  %170 = getelementptr inbounds %"class.std::__1::__tree_node.1312", %"class.std::__1::__tree_node.1312"* %169, i64 0, i32 2, i32 0, i32 0
  %171 = load i64, i64* %170, align 8
  %172 = icmp ult i64 %171, %166
  %173 = getelementptr inbounds %"class.std::__1::__tree_node.1312", %"class.std::__1::__tree_node.1312"* %169, i64 0, i32 0, i32 1
  %174 = bitcast %"class.std::__1::__tree_node_base"** %173 to %"class.std::__1::__tree_node.1312"**
  %175 = getelementptr inbounds %"class.std::__1::__tree_node.1312", %"class.std::__1::__tree_node.1312"* %169, i64 0, i32 0, i32 0
  %176 = bitcast %"class.std::__1::__tree_node.1312"* %169 to %"class.std::__1::__tree_node.1312"**
  %177 = select i1 %172, %"class.std::__1::__tree_node.1312"** %174, %"class.std::__1::__tree_node.1312"** %176
  %178 = select i1 %172, %"class.std::__1::__tree_end_node"* %168, %"class.std::__1::__tree_end_node"* %175
  %179 = load %"class.std::__1::__tree_node.1312"*, %"class.std::__1::__tree_node.1312"** %177, align 8
  %180 = icmp eq %"class.std::__1::__tree_node.1312"* %179, null
  br i1 %180, label %181, label %167

181:                                              ; preds = %167
  %182 = icmp eq %"class.std::__1::__tree_end_node"* %178, %10
  br i1 %182, label %230, label %183

183:                                              ; preds = %181
  %184 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %178, i64 4
  %185 = bitcast %"class.std::__1::__tree_end_node"* %184 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = icmp ult i64 %166, %186
  br i1 %187, label %230, label %188

188:                                              ; preds = %183
  %189 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %178, i64 1, i32 0
  %190 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %189, align 8
  %191 = icmp eq %"class.std::__1::__tree_node_base"* %190, null
  br i1 %191, label %192, label %200

192:                                              ; preds = %188
  %193 = bitcast %"class.std::__1::__tree_end_node"* %178 to %"class.std::__1::__tree_node_base"*
  %194 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %178, i64 2
  %195 = bitcast %"class.std::__1::__tree_end_node"* %194 to %"class.std::__1::__tree_end_node"**
  %196 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %195, align 8
  %197 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %196, i64 0, i32 0
  %198 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %197, align 8
  %199 = icmp eq %"class.std::__1::__tree_node_base"* %198, %193
  br i1 %199, label %216, label %207

200:                                              ; preds = %188, %200
  %201 = phi %"class.std::__1::__tree_node_base"* [ %203, %200 ], [ %190, %188 ]
  %202 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %201, i64 0, i32 0, i32 0
  %203 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %202, align 8
  %204 = icmp eq %"class.std::__1::__tree_node_base"* %203, null
  br i1 %204, label %205, label %200

205:                                              ; preds = %200
  %206 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %201, i64 0, i32 0
  br label %216

207:                                              ; preds = %192, %207
  %208 = phi %"class.std::__1::__tree_end_node"** [ %211, %207 ], [ %195, %192 ]
  %209 = bitcast %"class.std::__1::__tree_end_node"** %208 to %"class.std::__1::__tree_node_base"**
  %210 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %209, align 8
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %211, align 8
  %213 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %212, i64 0, i32 0
  %214 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %213, align 8
  %215 = icmp eq %"class.std::__1::__tree_node_base"* %214, %210
  br i1 %215, label %216, label %207

216:                                              ; preds = %207, %205, %192
  %217 = phi %"class.std::__1::__tree_end_node"* [ %206, %205 ], [ %196, %192 ], [ %212, %207 ]
  %218 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %8, i64 0, i32 0, i32 0, i32 0
  %219 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %218, align 8
  %220 = icmp eq %"class.std::__1::__tree_end_node"* %219, %178
  br i1 %220, label %221, label %224

221:                                              ; preds = %216
  %222 = ptrtoint %"class.std::__1::__tree_end_node"* %217 to i64
  %223 = bitcast %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %8 to i64*
  store i64 %222, i64* %223, align 8
  br label %224

224:                                              ; preds = %221, %216
  %225 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %8, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %226 = load i64, i64* %225, align 8
  %227 = add i64 %226, -1
  store i64 %227, i64* %225, align 8
  %228 = bitcast %"class.std::__1::__tree_end_node"* %178 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %162, %"class.std::__1::__tree_node_base"* %228) #12
  %229 = bitcast %"class.std::__1::__tree_end_node"* %178 to i8*
  tail call void @_ZdlPv(i8* %229) #14
  br label %230

230:                                              ; preds = %159, %181, %183, %224
  %231 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %8, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %232 = load i64, i64* %231, align 8
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %234, label %298

234:                                              ; preds = %230, %294
  %235 = phi %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* [ %241, %294 ], [ %8, %230 ]
  %236 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %235, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %237 = load i64, i64* %236, align 8
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %239, label %298

239:                                              ; preds = %234
  %240 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %235, i64 0, i32 2
  %241 = load %"class.v8::internal::SamplingHeapProfiler::AllocationNode"*, %"class.v8::internal::SamplingHeapProfiler::AllocationNode"** %240, align 8
  %242 = icmp eq %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %241, null
  br i1 %242, label %298, label %243

243:                                              ; preds = %239
  %244 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %241, i64 0, i32 7
  %245 = load i8, i8* %244, align 4, !range !2
  %246 = icmp eq i8 %245, 0
  br i1 %246, label %247, label %298

247:                                              ; preds = %243
  %248 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %235, i64 0, i32 3
  %249 = load i32, i32* %248, align 8
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %256

251:                                              ; preds = %247
  %252 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %235, i64 0, i32 5
  %253 = bitcast i8** %252 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = or i64 %254, 1
  br label %264

256:                                              ; preds = %247
  %257 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %235, i64 0, i32 4
  %258 = load i32, i32* %257, align 4
  %259 = zext i32 %249 to i64
  %260 = shl nuw i64 %259, 32
  %261 = shl i32 %258, 1
  %262 = sext i32 %261 to i64
  %263 = add i64 %260, %262
  br label %264

264:                                              ; preds = %251, %256
  %265 = phi i64 [ %255, %251 ], [ %263, %256 ]
  %266 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %241, i64 0, i32 1, i32 0
  %267 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %241, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %268 = bitcast %"class.std::__1::__tree_end_node"* %267 to %"class.std::__1::__tree_node"**
  %269 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %268, align 8
  %270 = icmp eq %"class.std::__1::__tree_node"* %269, null
  br i1 %270, label %294, label %271

271:                                              ; preds = %264, %271
  %272 = phi %"class.std::__1::__tree_end_node"* [ %282, %271 ], [ %267, %264 ]
  %273 = phi %"class.std::__1::__tree_node"* [ %283, %271 ], [ %269, %264 ]
  %274 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %273, i64 0, i32 1, i32 0, i32 0
  %275 = load i64, i64* %274, align 8
  %276 = icmp ult i64 %275, %265
  %277 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %273, i64 0, i32 0, i32 1
  %278 = bitcast %"class.std::__1::__tree_node_base"** %277 to %"class.std::__1::__tree_node"**
  %279 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %273, i64 0, i32 0, i32 0
  %280 = bitcast %"class.std::__1::__tree_node"* %273 to %"class.std::__1::__tree_node"**
  %281 = select i1 %276, %"class.std::__1::__tree_node"** %278, %"class.std::__1::__tree_node"** %280
  %282 = select i1 %276, %"class.std::__1::__tree_end_node"* %272, %"class.std::__1::__tree_end_node"* %279
  %283 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %281, align 8
  %284 = icmp eq %"class.std::__1::__tree_node"* %283, null
  br i1 %284, label %285, label %271

285:                                              ; preds = %271
  %286 = icmp eq %"class.std::__1::__tree_end_node"* %282, %267
  br i1 %286, label %294, label %287

287:                                              ; preds = %285
  %288 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %282, i64 4
  %289 = bitcast %"class.std::__1::__tree_end_node"* %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = icmp ult i64 %265, %290
  br i1 %291, label %294, label %292

292:                                              ; preds = %287
  %293 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN2v88internal20SamplingHeapProfiler14AllocationNodeENS_14default_deleteIS6_EEEEEENS_19__map_value_compareImSA_NS_4lessImEELb1EEENS_9allocatorISA_EEE5eraseENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEE(%"class.std::__1::__tree.995"* %266, %"class.std::__1::__tree_end_node"* %282) #12
  br label %294

294:                                              ; preds = %264, %285, %287, %292
  %295 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %241, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %296 = load i64, i64* %295, align 8
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %234, label %298

298:                                              ; preds = %294, %234, %243, %239, %230, %154
  %299 = load %"struct.v8::internal::SamplingHeapProfiler::Sample"*, %"struct.v8::internal::SamplingHeapProfiler::Sample"** %3, align 8
  %300 = getelementptr inbounds %"struct.v8::internal::SamplingHeapProfiler::Sample", %"struct.v8::internal::SamplingHeapProfiler::Sample"* %299, i64 0, i32 3
  %301 = load %"class.v8::internal::SamplingHeapProfiler"*, %"class.v8::internal::SamplingHeapProfiler"** %300, align 8
  %302 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %301, i64 0, i32 8, i32 0
  %303 = call %"struct.std::__1::__hash_node_base.1008"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal20SamplingHeapProfiler6SampleENS_10unique_ptrIS5_NS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE4findIS6_EENS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEERKT_(%"class.std::__1::__hash_table.1004"* %302, %"struct.v8::internal::SamplingHeapProfiler::Sample"** nonnull dereferenceable(8) %3) #12
  %304 = icmp eq %"struct.std::__1::__hash_node_base.1008"* %303, null
  br i1 %304, label %329, label %305

305:                                              ; preds = %298
  %306 = bitcast %"class.std::__1::unique_ptr.1348"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %306) #12
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal20SamplingHeapProfiler6SampleENS_10unique_ptrIS5_NS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISB_PvEEEE(%"class.std::__1::unique_ptr.1348"* nonnull sret %2, %"class.std::__1::__hash_table.1004"* %302, %"struct.std::__1::__hash_node_base.1008"* nonnull %303) #12
  %307 = getelementptr inbounds %"class.std::__1::unique_ptr.1348", %"class.std::__1::unique_ptr.1348"* %2, i64 0, i32 0, i32 0, i32 0
  %308 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %307, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %307, align 8
  %309 = icmp eq %"struct.std::__1::__hash_node"* %308, null
  br i1 %309, label %328, label %310

310:                                              ; preds = %305
  %311 = getelementptr inbounds %"class.std::__1::unique_ptr.1348", %"class.std::__1::unique_ptr.1348"* %2, i64 0, i32 0, i32 1, i32 0, i32 1
  %312 = load i8, i8* %311, align 8, !range !2
  %313 = icmp eq i8 %312, 0
  br i1 %313, label %326, label %314

314:                                              ; preds = %310
  %315 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %308, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %316 = load %"struct.v8::internal::SamplingHeapProfiler::Sample"*, %"struct.v8::internal::SamplingHeapProfiler::Sample"** %315, align 8
  store %"struct.v8::internal::SamplingHeapProfiler::Sample"* null, %"struct.v8::internal::SamplingHeapProfiler::Sample"** %315, align 8
  %317 = icmp eq %"struct.v8::internal::SamplingHeapProfiler::Sample"* %316, null
  br i1 %317, label %326, label %318

318:                                              ; preds = %314
  %319 = getelementptr inbounds %"struct.v8::internal::SamplingHeapProfiler::Sample", %"struct.v8::internal::SamplingHeapProfiler::Sample"* %316, i64 0, i32 2, i32 0, i32 0
  %320 = load %"class.v8::Value"*, %"class.v8::Value"** %319, align 8
  %321 = icmp eq %"class.v8::Value"* %320, null
  br i1 %321, label %324, label %322

322:                                              ; preds = %318
  %323 = bitcast %"class.v8::Value"* %320 to i64*
  call void @_ZN2v82V813DisposeGlobalEPm(i64* nonnull %323) #12
  br label %324

324:                                              ; preds = %322, %318
  %325 = bitcast %"struct.v8::internal::SamplingHeapProfiler::Sample"* %316 to i8*
  call void @_ZdlPv(i8* %325) #14
  br label %326

326:                                              ; preds = %324, %314, %310
  %327 = bitcast %"struct.std::__1::__hash_node"* %308 to i8*
  call void @_ZdlPv(i8* %327) #14
  br label %328

328:                                              ; preds = %326, %305
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %306) #12
  br label %329

329:                                              ; preds = %298, %328
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* @_ZN2v88internal20SamplingHeapProfiler18FindOrAddChildNodeEPNS1_14AllocationNodeEPKcii(%"class.v8::internal::SamplingHeapProfiler"* nocapture, %"class.v8::internal::SamplingHeapProfiler::AllocationNode"*, i8*, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = ptrtoint %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %1 to i64
  %7 = ptrtoint i8* %2 to i64
  %8 = icmp eq i32 %3, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  %10 = or i64 %7, 1
  br label %17

11:                                               ; preds = %5
  %12 = zext i32 %3 to i64
  %13 = shl nuw i64 %12, 32
  %14 = shl i32 %4, 1
  %15 = sext i32 %14 to i64
  %16 = add i64 %13, %15
  br label %17

17:                                               ; preds = %9, %11
  %18 = phi i64 [ %10, %9 ], [ %16, %11 ]
  %19 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %20 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node"**
  %21 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node"* %21, null
  br i1 %22, label %49, label %23

23:                                               ; preds = %17, %23
  %24 = phi %"class.std::__1::__tree_end_node"* [ %34, %23 ], [ %19, %17 ]
  %25 = phi %"class.std::__1::__tree_node"* [ %35, %23 ], [ %21, %17 ]
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %25, i64 0, i32 1, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = icmp ult i64 %27, %18
  %29 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %25, i64 0, i32 0, i32 1
  %30 = bitcast %"class.std::__1::__tree_node_base"** %29 to %"class.std::__1::__tree_node"**
  %31 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %25, i64 0, i32 0, i32 0
  %32 = bitcast %"class.std::__1::__tree_node"* %25 to %"class.std::__1::__tree_node"**
  %33 = select i1 %28, %"class.std::__1::__tree_node"** %30, %"class.std::__1::__tree_node"** %32
  %34 = select i1 %28, %"class.std::__1::__tree_end_node"* %24, %"class.std::__1::__tree_end_node"* %31
  %35 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  %36 = icmp eq %"class.std::__1::__tree_node"* %35, null
  br i1 %36, label %37, label %23

37:                                               ; preds = %23
  %38 = icmp eq %"class.std::__1::__tree_end_node"* %34, %19
  br i1 %38, label %49, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 4
  %41 = bitcast %"class.std::__1::__tree_end_node"* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = icmp ugt i64 %42, %18
  br i1 %43, label %49, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 5
  %46 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"class.v8::internal::SamplingHeapProfiler::AllocationNode"**
  %47 = load %"class.v8::internal::SamplingHeapProfiler::AllocationNode"*, %"class.v8::internal::SamplingHeapProfiler::AllocationNode"** %46, align 8
  %48 = icmp eq %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %47, null
  br i1 %48, label %49, label %72

49:                                               ; preds = %39, %37, %17, %44
  %50 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 3
  %51 = load i32, i32* %50, align 8
  %52 = add i32 %51, 1
  store i32 %52, i32* %50, align 8
  %53 = tail call i8* @_Znwm(i64 80) #14
  %54 = bitcast i8* %53 to %"class.v8::internal::SamplingHeapProfiler::AllocationNode"*
  %55 = getelementptr inbounds i8, i8* %53, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false) #12
  %56 = bitcast i8* %53 to i8**
  store i8* %55, i8** %56, align 8
  %57 = getelementptr inbounds i8, i8* %53, i64 32
  %58 = getelementptr inbounds i8, i8* %53, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #12
  %59 = bitcast i8* %58 to i8**
  store i8* %57, i8** %59, align 8
  %60 = getelementptr inbounds i8, i8* %53, i64 48
  %61 = bitcast i8* %60 to i64*
  store i64 %6, i64* %61, align 8
  %62 = getelementptr inbounds i8, i8* %53, i64 56
  %63 = bitcast i8* %62 to i32*
  store i32 %3, i32* %63, align 8
  %64 = getelementptr inbounds i8, i8* %53, i64 60
  %65 = bitcast i8* %64 to i32*
  store i32 %4, i32* %65, align 4
  %66 = getelementptr inbounds i8, i8* %53, i64 64
  %67 = bitcast i8* %66 to i64*
  store i64 %7, i64* %67, align 8
  %68 = getelementptr inbounds i8, i8* %53, i64 72
  %69 = bitcast i8* %68 to i32*
  store i32 %52, i32* %69, align 8
  %70 = getelementptr inbounds i8, i8* %53, i64 76
  store i8 0, i8* %70, align 4
  %71 = tail call %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* @_ZN2v88internal20SamplingHeapProfiler14AllocationNode12AddChildNodeEmNSt3__110unique_ptrIS2_NS3_14default_deleteIS2_EEEE(%"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %1, i64 %18, %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* nonnull %54)
  br label %72

72:                                               ; preds = %44, %49
  %73 = phi %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* [ %71, %49 ], [ %47, %44 ]
  ret %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %73
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* @_ZN2v88internal20SamplingHeapProfiler14AllocationNode12AddChildNodeEmNSt3__110unique_ptrIS2_NS3_14default_deleteIS2_EEEE(%"class.v8::internal::SamplingHeapProfiler::AllocationNode"*, i64, %"class.v8::internal::SamplingHeapProfiler::AllocationNode"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %2 to i64
  %5 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node"* %8, null
  br i1 %9, label %38, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %12

12:                                               ; preds = %34, %10
  %13 = phi %"class.std::__1::__tree_node"* [ %37, %34 ], [ %8, %10 ]
  %14 = phi %"class.std::__1::__tree_node_base"** [ %36, %34 ], [ %11, %10 ]
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 1, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, %1
  br i1 %17, label %18, label %24

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %19, align 8
  %21 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %21, label %22, label %34

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %40

24:                                               ; preds = %12
  %25 = icmp ult i64 %16, %1
  br i1 %25, label %26, label %32

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 1
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, null
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %40

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %40

34:                                               ; preds = %26, %18
  %35 = phi %"class.std::__1::__tree_node_base"* [ %20, %18 ], [ %28, %26 ]
  %36 = phi %"class.std::__1::__tree_node_base"** [ %19, %18 ], [ %27, %26 ]
  %37 = bitcast %"class.std::__1::__tree_node_base"* %35 to %"class.std::__1::__tree_node"*
  br label %12

38:                                               ; preds = %3
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %40

40:                                               ; preds = %38, %32, %30, %22
  %41 = phi %"class.std::__1::__tree_end_node"* [ %6, %38 ], [ %23, %22 ], [ %31, %30 ], [ %33, %32 ]
  %42 = phi %"class.std::__1::__tree_node_base"** [ %39, %38 ], [ %19, %22 ], [ %27, %30 ], [ %14, %32 ]
  %43 = bitcast %"class.std::__1::__tree_node_base"** %42 to %"class.std::__1::__tree_node"**
  %44 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node"* %44, null
  br i1 %45, label %46, label %75

46:                                               ; preds = %40
  %47 = tail call i8* @_Znwm(i64 48) #14, !noalias !13
  %48 = getelementptr inbounds i8, i8* %47, i64 32
  %49 = bitcast i8* %48 to i64*
  store i64 %1, i64* %49, align 8, !noalias !13
  %50 = getelementptr inbounds i8, i8* %47, i64 40
  %51 = bitcast i8* %50 to i64*
  store i64 %4, i64* %51, align 8, !noalias !13
  %52 = bitcast i8* %47 to %"class.std::__1::__tree_node_base"*
  %53 = getelementptr inbounds i8, i8* %47, i64 16
  %54 = bitcast i8* %53 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %41, %"class.std::__1::__tree_end_node"** %54, align 8
  %55 = bitcast %"class.std::__1::__tree_node_base"** %42 to i8**
  store i8* %47, i8** %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::map.994", %"class.std::__1::map.994"* %5, i64 0, i32 0, i32 0
  %57 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %57, i64 0, i32 0
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  %60 = icmp eq %"class.std::__1::__tree_node_base"* %59, null
  br i1 %60, label %65, label %61

61:                                               ; preds = %46
  %62 = ptrtoint %"class.std::__1::__tree_node_base"* %59 to i64
  %63 = bitcast %"class.std::__1::map.994"* %5 to i64*
  store i64 %62, i64* %63, align 8
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  br label %65

65:                                               ; preds = %46, %61
  %66 = phi %"class.std::__1::__tree_node_base"* [ %52, %46 ], [ %64, %61 ]
  %67 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %68, %"class.std::__1::__tree_node_base"* %66) #12
  %69 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  store i64 %71, i64* %69, align 8
  %72 = getelementptr inbounds i8, i8* %47, i64 40
  %73 = bitcast i8* %72 to %"class.v8::internal::SamplingHeapProfiler::AllocationNode"**
  %74 = load %"class.v8::internal::SamplingHeapProfiler::AllocationNode"*, %"class.v8::internal::SamplingHeapProfiler::AllocationNode"** %73, align 8
  br label %89

75:                                               ; preds = %40
  %76 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %44, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %77 = load %"class.v8::internal::SamplingHeapProfiler::AllocationNode"*, %"class.v8::internal::SamplingHeapProfiler::AllocationNode"** %76, align 8
  %78 = icmp eq %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %2, null
  br i1 %78, label %89, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %2, i64 0, i32 1, i32 0
  %81 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %2, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %82 = bitcast %"class.std::__1::__tree_end_node"* %81 to %"class.std::__1::__tree_node"**
  %83 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %82, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN2v88internal20SamplingHeapProfiler14AllocationNodeENS_14default_deleteIS6_EEEEEENS_19__map_value_compareImSA_NS_4lessImEELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.995"* %80, %"class.std::__1::__tree_node"* %83) #12
  %84 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %2, i64 0, i32 0, i32 0
  %85 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %86 = bitcast %"class.std::__1::__tree_end_node"* %85 to %"class.std::__1::__tree_node.1312"**
  %87 = load %"class.std::__1::__tree_node.1312"*, %"class.std::__1::__tree_node.1312"** %86, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImjEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.986"* %84, %"class.std::__1::__tree_node.1312"* %87) #12
  %88 = bitcast %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %2 to i8*
  tail call void @_ZdlPv(i8* %88) #14
  br label %89

89:                                               ; preds = %65, %75, %79
  %90 = phi %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* [ %74, %65 ], [ %77, %75 ], [ %77, %79 ]
  ret %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %90
}

declare i64 @_ZNK2v88internal15JavaScriptFrame18unchecked_functionEv(%"class.v8::internal::JavaScriptFrame"*) local_unnamed_addr #2

declare void @_ZN2v88internal23JavaScriptFrameIterator7AdvanceEv(%"class.v8::internal::JavaScriptFrameIterator"*) local_unnamed_addr #2

declare i8* @_ZN2v88internal14StringsStorage7GetCopyEPKc(%"class.v8::internal::StringsStorage"*, i8*) local_unnamed_addr #2

declare i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #2

declare i32 @_ZNK2v88internal18SharedFunctionInfo13StartPositionEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.v8::AllocationProfile::Node"* @_ZN2v88internal20SamplingHeapProfiler23TranslateAllocationNodeEPNS0_17AllocationProfileEPNS1_14AllocationNodeERKNSt3__13mapIiNS0_6HandleINS0_6ScriptEEENS6_4lessIiEENS6_9allocatorINS6_4pairIKiSA_EEEEEE(%"class.v8::internal::SamplingHeapProfiler"* nocapture, %"class.v8::internal::AllocationProfile"*, %"class.v8::internal::SamplingHeapProfiler::AllocationNode"*, %"class.std::__1::map.1290"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Vector.1332", align 8
  %6 = alloca %"class.v8::internal::Vector.1332", align 8
  %7 = alloca %"class.v8::internal::Vector.1332", align 8
  %8 = alloca %"class.std::__1::vector.1269", align 16
  %9 = alloca %"class.std::__1::map.1290", align 8
  %10 = alloca %"struct.v8::AllocationProfile::Node", align 8
  %11 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %2, i64 0, i32 7
  store i8 1, i8* %11, align 4
  %12 = bitcast %"class.v8::internal::SamplingHeapProfiler"* %0 to %"class.v8::internal::Factory"**
  %13 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %12, align 8
  %14 = bitcast %"class.v8::internal::Vector.1332"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.v8::internal::Vector.1332", %"class.v8::internal::Vector.1332"* %7, i64 0, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i64 0, i64 0), i8** %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Vector.1332", %"class.v8::internal::Vector.1332"* %7, i64 0, i32 1
  store i64 0, i64* %16, align 8
  %17 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %13, %"class.v8::internal::Vector.1332"* nonnull dereferenceable(16) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #12
  %18 = bitcast i64* %17 to %"class.v8::String"*
  %19 = bitcast %"class.std::__1::vector.1269"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 0, i64 24, i1 false) #12
  %20 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::vector.1269", %"class.std::__1::vector.1269"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"struct.v8::AllocationProfile::Allocation"** %22 to i64*
  %24 = bitcast %"class.std::__1::vector.1269"* %8 to i64*
  %25 = icmp eq i64 %21, 0
  br i1 %25, label %39, label %26

26:                                               ; preds = %4
  %27 = icmp ugt i64 %21, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  call void @abort() #13
  unreachable

29:                                               ; preds = %26
  %30 = shl i64 %21, 4
  %31 = call i8* @_Znwm(i64 %30) #14
  %32 = bitcast i8* %31 to %"struct.v8::AllocationProfile::Allocation"*
  %33 = getelementptr inbounds %"struct.v8::AllocationProfile::Allocation", %"struct.v8::AllocationProfile::Allocation"* %32, i64 %21
  %34 = ptrtoint %"struct.v8::AllocationProfile::Allocation"* %33 to i64
  %35 = insertelement <2 x i8*> undef, i8* %31, i32 0
  %36 = shufflevector <2 x i8*> %35, <2 x i8*> undef, <2 x i32> zeroinitializer
  %37 = ptrtoint <2 x i8*> %36 to <2 x i64>
  %38 = bitcast %"class.std::__1::vector.1269"* %8 to <2 x i64>*
  store <2 x i64> %37, <2 x i64>* %38, align 16
  store i64 %34, i64* %23, align 16
  br label %39

39:                                               ; preds = %29, %4
  %40 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %2, i64 0, i32 3
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %195, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.std::__1::map.1290", %"class.std::__1::map.1290"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %45 = bitcast %"class.std::__1::__tree_end_node"* %44 to %"class.std::__1::__tree_node.1362"**
  %46 = load %"class.std::__1::__tree_node.1362"*, %"class.std::__1::__tree_node.1362"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node.1362"* %46, null
  br i1 %47, label %195, label %48

48:                                               ; preds = %43, %48
  %49 = phi %"class.std::__1::__tree_end_node"* [ %59, %48 ], [ %44, %43 ]
  %50 = phi %"class.std::__1::__tree_node.1362"* [ %60, %48 ], [ %46, %43 ]
  %51 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %50, i64 0, i32 1, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %52, %41
  %54 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %50, i64 0, i32 0, i32 1
  %55 = bitcast %"class.std::__1::__tree_node_base"** %54 to %"class.std::__1::__tree_node.1362"**
  %56 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %50, i64 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::__tree_node.1362"* %50 to %"class.std::__1::__tree_node.1362"**
  %58 = select i1 %53, %"class.std::__1::__tree_node.1362"** %55, %"class.std::__1::__tree_node.1362"** %57
  %59 = select i1 %53, %"class.std::__1::__tree_end_node"* %49, %"class.std::__1::__tree_end_node"* %56
  %60 = load %"class.std::__1::__tree_node.1362"*, %"class.std::__1::__tree_node.1362"** %58, align 8
  %61 = icmp eq %"class.std::__1::__tree_node.1362"* %60, null
  br i1 %61, label %62, label %48

62:                                               ; preds = %48
  %63 = icmp eq %"class.std::__1::__tree_end_node"* %59, %44
  br i1 %63, label %195, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %59, i64 4
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = icmp slt i32 %41, %67
  br i1 %68, label %195, label %69

69:                                               ; preds = %64
  %70 = bitcast %"class.std::__1::map.1290"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #12
  %71 = getelementptr inbounds %"class.std::__1::map.1290", %"class.std::__1::map.1290"* %9, i64 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.std::__1::map.1290", %"class.std::__1::map.1290"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::map.1290", %"class.std::__1::map.1290"* %9, i64 0, i32 0, i32 1
  %74 = bitcast %"class.std::__1::__compressed_pair.1292"* %73 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %71, align 8
  %75 = getelementptr inbounds %"class.std::__1::map.1290", %"class.std::__1::map.1290"* %3, i64 0, i32 0, i32 0
  %76 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  call void @_ZNSt3__13mapIiN2v88internal6HandleINS2_6ScriptEEENS_4lessIiEENS_9allocatorINS_4pairIKiS5_EEEEE6insertINS_20__map_const_iteratorINS_21__tree_const_iteratorINS_12__value_typeIiS5_EEPNS_11__tree_nodeISI_PvEElEEEEEEvT_SP_(%"class.std::__1::map.1290"* nonnull %9, %"class.std::__1::__tree_end_node"* %76, %"class.std::__1::__tree_end_node"* %44) #12
  %77 = bitcast %"class.std::__1::__tree_end_node"* %72 to %"class.std::__1::__tree_node.1362"**
  %78 = load %"class.std::__1::__tree_node.1362"*, %"class.std::__1::__tree_node.1362"** %77, align 8
  %79 = icmp eq %"class.std::__1::__tree_node.1362"* %78, null
  br i1 %79, label %109, label %80

80:                                               ; preds = %69
  %81 = getelementptr inbounds %"class.std::__1::map.1290", %"class.std::__1::map.1290"* %9, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %82 = load i32, i32* %40, align 4
  br label %83

83:                                               ; preds = %105, %80
  %84 = phi %"class.std::__1::__tree_node.1362"* [ %108, %105 ], [ %78, %80 ]
  %85 = phi %"class.std::__1::__tree_node_base"** [ %107, %105 ], [ %81, %80 ]
  %86 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %84, i64 0, i32 1, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp slt i32 %82, %87
  br i1 %88, label %89, label %95

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %84, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %90, align 8
  %92 = icmp eq %"class.std::__1::__tree_node_base"* %91, null
  br i1 %92, label %93, label %105

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %84, i64 0, i32 0, i32 0
  br label %111

95:                                               ; preds = %83
  %96 = icmp slt i32 %87, %82
  br i1 %96, label %97, label %103

97:                                               ; preds = %95
  %98 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %84, i64 0, i32 0, i32 1
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  %100 = icmp eq %"class.std::__1::__tree_node_base"* %99, null
  br i1 %100, label %101, label %105

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %84, i64 0, i32 0, i32 0
  br label %111

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %84, i64 0, i32 0, i32 0
  br label %111

105:                                              ; preds = %97, %89
  %106 = phi %"class.std::__1::__tree_node_base"* [ %91, %89 ], [ %99, %97 ]
  %107 = phi %"class.std::__1::__tree_node_base"** [ %90, %89 ], [ %98, %97 ]
  %108 = bitcast %"class.std::__1::__tree_node_base"* %106 to %"class.std::__1::__tree_node.1362"*
  br label %83

109:                                              ; preds = %69
  %110 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 0, i32 0
  br label %111

111:                                              ; preds = %109, %103, %101, %93
  %112 = phi %"class.std::__1::__tree_end_node"* [ %72, %109 ], [ %94, %93 ], [ %102, %101 ], [ %104, %103 ]
  %113 = phi %"class.std::__1::__tree_node_base"** [ %110, %109 ], [ %90, %93 ], [ %98, %101 ], [ %85, %103 ]
  %114 = bitcast %"class.std::__1::__tree_node_base"** %113 to %"class.std::__1::__tree_node.1362"**
  %115 = load %"class.std::__1::__tree_node.1362"*, %"class.std::__1::__tree_node.1362"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node.1362"* %115, null
  br i1 %116, label %117, label %144

117:                                              ; preds = %111
  %118 = call i8* @_Znwm(i64 48) #14, !noalias !16
  %119 = getelementptr inbounds i8, i8* %118, i64 32
  %120 = bitcast i8* %119 to i32*
  %121 = load i32, i32* %40, align 4, !noalias !16
  store i32 %121, i32* %120, align 8, !noalias !16
  %122 = getelementptr inbounds i8, i8* %118, i64 40
  %123 = bitcast i8* %122 to i64**
  store i64* null, i64** %123, align 8, !noalias !16
  %124 = bitcast i8* %118 to %"class.std::__1::__tree_node.1362"*
  %125 = bitcast i8* %118 to %"class.std::__1::__tree_node_base"*
  %126 = getelementptr inbounds i8, i8* %118, i64 16
  %127 = bitcast i8* %126 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %112, %"class.std::__1::__tree_end_node"** %127, align 8
  %128 = bitcast %"class.std::__1::__tree_node_base"** %113 to i8**
  store i8* %118, i8** %128, align 8
  %129 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %71, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %129, i64 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %137, label %133

133:                                              ; preds = %117
  %134 = ptrtoint %"class.std::__1::__tree_node_base"* %131 to i64
  %135 = bitcast %"class.std::__1::map.1290"* %9 to i64*
  store i64 %134, i64* %135, align 8
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  br label %137

137:                                              ; preds = %133, %117
  %138 = phi %"class.std::__1::__tree_node_base"* [ %125, %117 ], [ %136, %133 ]
  %139 = getelementptr inbounds %"class.std::__1::map.1290", %"class.std::__1::map.1290"* %9, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %140, %"class.std::__1::__tree_node_base"* %138) #12
  %141 = getelementptr inbounds %"class.std::__1::map.1290", %"class.std::__1::map.1290"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %142 = load i64, i64* %141, align 8
  %143 = add i64 %142, 1
  store i64 %143, i64* %141, align 8
  br label %144

144:                                              ; preds = %111, %137
  %145 = phi %"class.std::__1::__tree_node.1362"* [ %124, %137 ], [ %115, %111 ]
  %146 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %145, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %147 = load i64*, i64** %146, align 8
  %148 = icmp eq i64* %147, null
  br i1 %148, label %189, label %149

149:                                              ; preds = %144
  %150 = load i64, i64* %147, align 8
  %151 = and i64 %150, -4294967296
  %152 = add i64 %150, 7
  %153 = inttoptr i64 %152 to i32*
  %154 = load i32, i32* %153, align 4
  %155 = zext i32 %154 to i64
  %156 = or i64 %151, %155
  %157 = and i64 %155, 1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %180, label %159

159:                                              ; preds = %149
  %160 = add i64 %156, -1
  %161 = inttoptr i64 %160 to i32*
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = zext i32 %162 to i64
  %164 = or i64 %151, %163
  %165 = add i64 %164, 7
  %166 = inttoptr i64 %165 to i16*
  %167 = load atomic i16, i16* %166 monotonic, align 2
  %168 = icmp ult i16 %167, 65
  br i1 %168, label %169, label %180

169:                                              ; preds = %159
  %170 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %12, align 8
  %171 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 6
  %172 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %171, align 8
  %173 = call i8* @_ZN2v88internal14StringsStorage7GetNameENS0_4NameE(%"class.v8::internal::StringsStorage"* %172, i64 %156) #12
  %174 = bitcast %"class.v8::internal::Vector.1332"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %174) #12
  %175 = call i64 @strlen(i8* %173) #15
  %176 = getelementptr inbounds %"class.v8::internal::Vector.1332", %"class.v8::internal::Vector.1332"* %6, i64 0, i32 0
  store i8* %173, i8** %176, align 8
  %177 = getelementptr inbounds %"class.v8::internal::Vector.1332", %"class.v8::internal::Vector.1332"* %6, i64 0, i32 1
  store i64 %175, i64* %177, align 8
  %178 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %170, %"class.v8::internal::Vector.1332"* nonnull dereferenceable(16) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %174) #12
  %179 = bitcast i64* %178 to %"class.v8::String"*
  br label %180

180:                                              ; preds = %149, %169, %159
  %181 = phi %"class.v8::String"* [ %179, %169 ], [ %18, %159 ], [ %18, %149 ]
  %182 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %2, i64 0, i32 4
  %183 = load i32, i32* %182, align 4
  %184 = call i32 @_ZN2v88internal6Script13GetLineNumberENS0_6HandleIS1_EEi(i64* nonnull %147, i32 %183) #12
  %185 = add nsw i32 %184, 1
  %186 = load i32, i32* %182, align 4
  %187 = call i32 @_ZN2v88internal6Script15GetColumnNumberENS0_6HandleIS1_EEi(i64* nonnull %147, i32 %186) #12
  %188 = add nsw i32 %187, 1
  br label %189

189:                                              ; preds = %180, %144
  %190 = phi i32 [ 0, %144 ], [ %188, %180 ]
  %191 = phi i32 [ 0, %144 ], [ %185, %180 ]
  %192 = phi %"class.v8::String"* [ %18, %144 ], [ %181, %180 ]
  %193 = getelementptr inbounds %"class.std::__1::map.1290", %"class.std::__1::map.1290"* %9, i64 0, i32 0
  %194 = load %"class.std::__1::__tree_node.1362"*, %"class.std::__1::__tree_node.1362"** %77, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIiN2v88internal6HandleINS3_6ScriptEEEEENS_19__map_value_compareIiS7_NS_4lessIiEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.1291"* nonnull %193, %"class.std::__1::__tree_node.1362"* %194) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #12
  br label %195

195:                                              ; preds = %64, %62, %43, %39, %189
  %196 = phi i32 [ %190, %189 ], [ 0, %39 ], [ 0, %43 ], [ 0, %62 ], [ 0, %64 ]
  %197 = phi i32 [ %191, %189 ], [ 0, %39 ], [ 0, %43 ], [ 0, %62 ], [ 0, %64 ]
  %198 = phi %"class.v8::String"* [ %192, %189 ], [ %18, %39 ], [ %18, %43 ], [ %18, %62 ], [ %18, %64 ]
  %199 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %2, i64 0, i32 0, i32 0, i32 0
  %200 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %199, align 8
  %201 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %202 = icmp eq %"class.std::__1::__tree_end_node"* %200, %201
  br i1 %202, label %207, label %203

203:                                              ; preds = %195
  %204 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 11
  %205 = getelementptr inbounds %"class.std::__1::vector.1269", %"class.std::__1::vector.1269"* %8, i64 0, i32 0, i32 1
  %206 = bitcast %"struct.v8::AllocationProfile::Allocation"** %205 to i64*
  br label %356

207:                                              ; preds = %458, %195
  %208 = getelementptr inbounds %"class.v8::internal::AllocationProfile", %"class.v8::internal::AllocationProfile"* %1, i64 0, i32 1
  %209 = bitcast %"struct.v8::AllocationProfile::Node"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %209) #12
  %210 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %12, align 8
  %211 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %2, i64 0, i32 5
  %212 = load i8*, i8** %211, align 8
  %213 = bitcast %"class.v8::internal::Vector.1332"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %213) #12
  %214 = call i64 @strlen(i8* %212) #15
  %215 = getelementptr inbounds %"class.v8::internal::Vector.1332", %"class.v8::internal::Vector.1332"* %5, i64 0, i32 0
  store i8* %212, i8** %215, align 8
  %216 = getelementptr inbounds %"class.v8::internal::Vector.1332", %"class.v8::internal::Vector.1332"* %5, i64 0, i32 1
  store i64 %214, i64* %216, align 8
  %217 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %210, %"class.v8::internal::Vector.1332"* nonnull dereferenceable(16) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %213) #12
  %218 = bitcast %"struct.v8::AllocationProfile::Node"* %10 to i64**
  store i64* %217, i64** %218, align 8
  %219 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %10, i64 0, i32 1, i32 0
  store %"class.v8::String"* %198, %"class.v8::String"** %219, align 8
  %220 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %10, i64 0, i32 2
  %221 = load i32, i32* %40, align 8
  store i32 %221, i32* %220, align 8
  %222 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %10, i64 0, i32 3
  %223 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %2, i64 0, i32 4
  %224 = load i32, i32* %223, align 4
  store i32 %224, i32* %222, align 4
  %225 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %10, i64 0, i32 4
  store i32 %197, i32* %225, align 8
  %226 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %10, i64 0, i32 5
  store i32 %196, i32* %226, align 4
  %227 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %10, i64 0, i32 6
  %228 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %2, i64 0, i32 6
  %229 = load i32, i32* %228, align 8
  store i32 %229, i32* %227, align 8
  %230 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %10, i64 0, i32 7
  %231 = bitcast %"class.std::__1::vector.1262"* %230 to i8*
  %232 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %10, i64 0, i32 8
  %233 = getelementptr inbounds %"class.std::__1::vector.1269", %"class.std::__1::vector.1269"* %8, i64 0, i32 0, i32 1
  %234 = bitcast %"struct.v8::AllocationProfile::Allocation"** %233 to i64*
  %235 = bitcast %"class.std::__1::vector.1262"* %230 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %235, i8 0, i64 48, i1 false)
  %236 = load i64, i64* %234, align 8
  %237 = load i64, i64* %24, align 16
  %238 = sub i64 %236, %237
  %239 = ashr exact i64 %238, 4
  %240 = icmp eq i64 %238, 0
  br i1 %240, label %263, label %241

241:                                              ; preds = %207
  %242 = icmp ugt i64 %239, 1152921504606846975
  br i1 %242, label %243, label %245

243:                                              ; preds = %241
  %244 = bitcast %"class.std::__1::vector.1269"* %232 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %244) #13
  unreachable

245:                                              ; preds = %241
  %246 = call i8* @_Znwm(i64 %238) #14
  %247 = bitcast i8* %246 to %"struct.v8::AllocationProfile::Allocation"*
  %248 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %10, i64 0, i32 8, i32 0, i32 1
  %249 = bitcast %"struct.v8::AllocationProfile::Allocation"** %248 to i8**
  store i8* %246, i8** %249, align 8
  %250 = bitcast %"class.std::__1::vector.1269"* %232 to i8**
  store i8* %246, i8** %250, align 8
  %251 = getelementptr inbounds %"struct.v8::AllocationProfile::Allocation", %"struct.v8::AllocationProfile::Allocation"* %247, i64 %239
  %252 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %10, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  store %"struct.v8::AllocationProfile::Allocation"* %251, %"struct.v8::AllocationProfile::Allocation"** %252, align 8
  %253 = bitcast %"struct.v8::AllocationProfile::Allocation"** %248 to i64*
  %254 = ptrtoint i8* %246 to i64
  %255 = icmp sgt i64 %238, 0
  br i1 %255, label %256, label %261

256:                                              ; preds = %245
  %257 = lshr exact i64 %238, 4
  %258 = inttoptr i64 %237 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %246, i8* align 8 %258, i64 %238, i1 false) #12
  %259 = getelementptr inbounds %"struct.v8::AllocationProfile::Allocation", %"struct.v8::AllocationProfile::Allocation"* %247, i64 %257
  %260 = ptrtoint %"struct.v8::AllocationProfile::Allocation"* %259 to i64
  br label %261

261:                                              ; preds = %256, %245
  %262 = phi i64 [ %260, %256 ], [ %254, %245 ]
  store i64 %262, i64* %253, align 8
  br label %263

263:                                              ; preds = %207, %261
  %264 = getelementptr inbounds %"class.v8::internal::AllocationProfile", %"class.v8::internal::AllocationProfile"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %265 = bitcast %"struct.v8::AllocationProfile::Node"*** %264 to i64*
  %266 = load i64, i64* %265, align 8
  %267 = getelementptr inbounds %"class.v8::internal::AllocationProfile", %"class.v8::internal::AllocationProfile"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %268 = bitcast %"struct.v8::AllocationProfile::Node"*** %267 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = sub i64 %266, %269
  %271 = ashr exact i64 %270, 3
  %272 = icmp eq i64 %270, 0
  %273 = mul i64 %271, 46
  %274 = add i64 %273, -1
  %275 = select i1 %272, i64 0, i64 %274
  %276 = getelementptr inbounds %"class.v8::internal::AllocationProfile", %"class.v8::internal::AllocationProfile"* %1, i64 0, i32 1, i32 0, i32 1
  %277 = load i64, i64* %276, align 8
  %278 = getelementptr inbounds %"class.v8::internal::AllocationProfile", %"class.v8::internal::AllocationProfile"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %279 = load i64, i64* %278, align 8
  %280 = add i64 %279, %277
  %281 = icmp eq i64 %275, %280
  %282 = inttoptr i64 %269 to %"struct.v8::AllocationProfile::Node"**
  %283 = inttoptr i64 %266 to %"struct.v8::AllocationProfile::Node"**
  br i1 %281, label %284, label %290

284:                                              ; preds = %263
  call void @_ZNSt3__15dequeIN2v817AllocationProfile4NodeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.1276"* %208) #12
  %285 = load i64, i64* %278, align 8
  %286 = load i64, i64* %276, align 8
  %287 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %267, align 8
  %288 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %264, align 8
  %289 = add i64 %286, %285
  br label %290

290:                                              ; preds = %284, %263
  %291 = phi i64 [ %289, %284 ], [ %280, %263 ]
  %292 = phi %"struct.v8::AllocationProfile::Node"** [ %288, %284 ], [ %283, %263 ]
  %293 = phi %"struct.v8::AllocationProfile::Node"** [ %287, %284 ], [ %282, %263 ]
  %294 = icmp eq %"struct.v8::AllocationProfile::Node"** %292, %293
  br i1 %294, label %301, label %295

295:                                              ; preds = %290
  %296 = udiv i64 %291, 46
  %297 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %293, i64 %296
  %298 = load %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %297, align 8
  %299 = urem i64 %291, 46
  %300 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %298, i64 %299
  br label %301

301:                                              ; preds = %295, %290
  %302 = phi %"struct.v8::AllocationProfile::Node"* [ %300, %295 ], [ null, %290 ]
  %303 = bitcast %"struct.v8::AllocationProfile::Node"* %302 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %303, i8* nonnull align 8 %209, i64 36, i1 false) #12
  %304 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %302, i64 0, i32 7
  %305 = bitcast %"class.std::__1::vector.1262"* %304 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %305, i8 0, i64 24, i1 false) #12
  %306 = bitcast %"class.std::__1::vector.1262"* %230 to i64*
  %307 = load i64, i64* %306, align 8
  %308 = bitcast %"class.std::__1::vector.1262"* %304 to i64*
  store i64 %307, i64* %308, align 8
  %309 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %10, i64 0, i32 7, i32 0, i32 1
  %310 = bitcast %"struct.v8::AllocationProfile::Node"*** %309 to i64*
  %311 = load i64, i64* %310, align 8
  %312 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %302, i64 0, i32 7, i32 0, i32 1
  %313 = bitcast %"struct.v8::AllocationProfile::Node"*** %312 to i64*
  store i64 %311, i64* %313, align 8
  %314 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %10, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %315 = bitcast %"struct.v8::AllocationProfile::Node"*** %314 to i64*
  %316 = load i64, i64* %315, align 8
  %317 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %302, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %318 = bitcast %"struct.v8::AllocationProfile::Node"*** %317 to i64*
  store i64 %316, i64* %318, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %231, i8 0, i64 24, i1 false) #12
  %319 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %302, i64 0, i32 8
  %320 = bitcast %"class.std::__1::vector.1269"* %319 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %320, i8 0, i64 24, i1 false) #12
  %321 = bitcast %"class.std::__1::vector.1269"* %232 to i64*
  %322 = load i64, i64* %321, align 8
  %323 = bitcast %"class.std::__1::vector.1269"* %319 to i64*
  store i64 %322, i64* %323, align 8
  %324 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %10, i64 0, i32 8, i32 0, i32 1
  %325 = bitcast %"struct.v8::AllocationProfile::Allocation"** %324 to i64*
  %326 = load i64, i64* %325, align 8
  %327 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %302, i64 0, i32 8, i32 0, i32 1
  %328 = bitcast %"struct.v8::AllocationProfile::Allocation"** %327 to i64*
  store i64 %326, i64* %328, align 8
  %329 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %10, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %330 = bitcast %"struct.v8::AllocationProfile::Allocation"** %329 to i64*
  %331 = load i64, i64* %330, align 8
  %332 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %302, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %333 = bitcast %"struct.v8::AllocationProfile::Allocation"** %332 to i64*
  store i64 %331, i64* %333, align 8
  %334 = load i64, i64* %278, align 8
  %335 = add i64 %334, 1
  store i64 %335, i64* %278, align 8
  %336 = load i64, i64* %276, align 8
  %337 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %267, align 8
  %338 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %2, i64 0, i32 1, i32 0, i32 0
  %339 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %338, align 8
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %209) #12
  %340 = add i64 %334, %336
  %341 = udiv i64 %340, 46
  %342 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %337, i64 %341
  %343 = load %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %342, align 8
  %344 = urem i64 %340, 46
  %345 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %343, i64 %344
  %346 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %2, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %347 = icmp eq %"class.std::__1::__tree_end_node"* %339, %346
  br i1 %347, label %461, label %348

348:                                              ; preds = %301
  %349 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %343, i64 %344, i32 7
  %350 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %343, i64 %344, i32 7, i32 0, i32 1
  %351 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %343, i64 %344, i32 7, i32 0, i32 2, i32 0, i32 0
  %352 = bitcast %"struct.v8::AllocationProfile::Node"*** %350 to i64*
  %353 = bitcast %"class.std::__1::vector.1262"* %349 to i64*
  %354 = bitcast %"struct.v8::AllocationProfile::Node"*** %351 to i64*
  %355 = getelementptr inbounds %"class.std::__1::vector.1262", %"class.std::__1::vector.1262"* %349, i64 0, i32 0, i32 0
  br label %469

356:                                              ; preds = %203, %458
  %357 = phi %"class.std::__1::__tree_end_node"* [ %200, %203 ], [ %459, %458 ]
  %358 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %357, i64 4
  %359 = bitcast %"class.std::__1::__tree_end_node"* %358 to i64*
  %360 = load i64, i64* %359, align 8
  %361 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %357, i64 5
  %362 = bitcast %"class.std::__1::__tree_end_node"* %361 to i32*
  %363 = load i32, i32* %362, align 8
  %364 = uitofp i64 %360 to double
  %365 = fsub double -0.000000e+00, %364
  %366 = load i64, i64* %204, align 8
  %367 = uitofp i64 %366 to double
  %368 = fdiv double %365, %367
  %369 = call double @exp(double %368) #12
  %370 = fsub double 1.000000e+00, %369
  %371 = fdiv double 1.000000e+00, %370
  %372 = uitofp i32 %363 to double
  %373 = fmul double %371, %372
  %374 = fadd double %373, 5.000000e-01
  %375 = fptoui double %374 to i32
  %376 = load %"struct.v8::AllocationProfile::Allocation"*, %"struct.v8::AllocationProfile::Allocation"** %205, align 8
  %377 = load %"struct.v8::AllocationProfile::Allocation"*, %"struct.v8::AllocationProfile::Allocation"** %22, align 16
  %378 = icmp ult %"struct.v8::AllocationProfile::Allocation"* %376, %377
  %379 = ptrtoint %"struct.v8::AllocationProfile::Allocation"* %377 to i64
  br i1 %378, label %380, label %385

380:                                              ; preds = %356
  %381 = getelementptr inbounds %"struct.v8::AllocationProfile::Allocation", %"struct.v8::AllocationProfile::Allocation"* %376, i64 0, i32 0
  store i64 %360, i64* %381, align 8
  %382 = getelementptr inbounds %"struct.v8::AllocationProfile::Allocation", %"struct.v8::AllocationProfile::Allocation"* %376, i64 0, i32 1
  store i32 %375, i32* %382, align 8
  %383 = getelementptr inbounds %"struct.v8::AllocationProfile::Allocation", %"struct.v8::AllocationProfile::Allocation"* %376, i64 1
  %384 = ptrtoint %"struct.v8::AllocationProfile::Allocation"* %383 to i64
  store i64 %384, i64* %206, align 8
  br label %430

385:                                              ; preds = %356
  %386 = ptrtoint %"struct.v8::AllocationProfile::Allocation"* %376 to i64
  %387 = load i64, i64* %24, align 16
  %388 = sub i64 %386, %387
  %389 = ashr exact i64 %388, 4
  %390 = add nsw i64 %389, 1
  %391 = icmp ugt i64 %390, 1152921504606846975
  br i1 %391, label %392, label %394

392:                                              ; preds = %385
  %393 = bitcast %"class.std::__1::vector.1269"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %393) #13
  unreachable

394:                                              ; preds = %385
  %395 = sub i64 %379, %387
  %396 = ashr exact i64 %395, 4
  %397 = icmp ult i64 %396, 576460752303423487
  br i1 %397, label %398, label %406

398:                                              ; preds = %394
  %399 = ashr exact i64 %395, 3
  %400 = icmp ult i64 %399, %390
  %401 = select i1 %400, i64 %390, i64 %399
  %402 = icmp eq i64 %401, 0
  br i1 %402, label %411, label %403

403:                                              ; preds = %398
  %404 = icmp ugt i64 %401, 1152921504606846975
  br i1 %404, label %405, label %406

405:                                              ; preds = %403
  call void @abort() #13
  unreachable

406:                                              ; preds = %403, %394
  %407 = phi i64 [ %401, %403 ], [ 1152921504606846975, %394 ]
  %408 = shl i64 %407, 4
  %409 = call i8* @_Znwm(i64 %408) #14
  %410 = bitcast i8* %409 to %"struct.v8::AllocationProfile::Allocation"*
  br label %411

411:                                              ; preds = %406, %398
  %412 = phi i64 [ %407, %406 ], [ 0, %398 ]
  %413 = phi i8* [ %409, %406 ], [ null, %398 ]
  %414 = phi %"struct.v8::AllocationProfile::Allocation"* [ %410, %406 ], [ null, %398 ]
  %415 = getelementptr inbounds %"struct.v8::AllocationProfile::Allocation", %"struct.v8::AllocationProfile::Allocation"* %414, i64 %389
  %416 = getelementptr inbounds %"struct.v8::AllocationProfile::Allocation", %"struct.v8::AllocationProfile::Allocation"* %414, i64 %412
  %417 = ptrtoint %"struct.v8::AllocationProfile::Allocation"* %416 to i64
  %418 = getelementptr inbounds %"struct.v8::AllocationProfile::Allocation", %"struct.v8::AllocationProfile::Allocation"* %415, i64 0, i32 0
  store i64 %360, i64* %418, align 8
  %419 = getelementptr inbounds %"struct.v8::AllocationProfile::Allocation", %"struct.v8::AllocationProfile::Allocation"* %414, i64 %389, i32 1
  store i32 %375, i32* %419, align 8
  %420 = getelementptr inbounds %"struct.v8::AllocationProfile::Allocation", %"struct.v8::AllocationProfile::Allocation"* %415, i64 1
  %421 = ptrtoint %"struct.v8::AllocationProfile::Allocation"* %420 to i64
  %422 = ptrtoint %"struct.v8::AllocationProfile::Allocation"* %414 to i64
  %423 = icmp sgt i64 %388, 0
  br i1 %423, label %424, label %426

424:                                              ; preds = %411
  %425 = inttoptr i64 %387 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %413, i8* align 8 %425, i64 %388, i1 false) #12
  br label %426

426:                                              ; preds = %424, %411
  store i64 %422, i64* %24, align 16
  store i64 %421, i64* %206, align 8
  store i64 %417, i64* %23, align 16
  %427 = icmp eq i64 %387, 0
  br i1 %427, label %430, label %428

428:                                              ; preds = %426
  %429 = inttoptr i64 %387 to i8*
  call void @_ZdlPv(i8* %429) #14
  br label %430

430:                                              ; preds = %380, %426, %428
  %431 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %357, i64 1, i32 0
  %432 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %431, align 8
  %433 = icmp eq %"class.std::__1::__tree_node_base"* %432, null
  br i1 %433, label %434, label %442

434:                                              ; preds = %430
  %435 = bitcast %"class.std::__1::__tree_end_node"* %357 to %"class.std::__1::__tree_node_base"*
  %436 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %357, i64 2
  %437 = bitcast %"class.std::__1::__tree_end_node"* %436 to %"class.std::__1::__tree_end_node"**
  %438 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %437, align 8
  %439 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %438, i64 0, i32 0
  %440 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %439, align 8
  %441 = icmp eq %"class.std::__1::__tree_node_base"* %440, %435
  br i1 %441, label %458, label %449

442:                                              ; preds = %430, %442
  %443 = phi %"class.std::__1::__tree_node_base"* [ %445, %442 ], [ %432, %430 ]
  %444 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %443, i64 0, i32 0, i32 0
  %445 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %444, align 8
  %446 = icmp eq %"class.std::__1::__tree_node_base"* %445, null
  br i1 %446, label %447, label %442

447:                                              ; preds = %442
  %448 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %443, i64 0, i32 0
  br label %458

449:                                              ; preds = %434, %449
  %450 = phi %"class.std::__1::__tree_end_node"** [ %453, %449 ], [ %437, %434 ]
  %451 = bitcast %"class.std::__1::__tree_end_node"** %450 to %"class.std::__1::__tree_node_base"**
  %452 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %451, align 8
  %453 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %452, i64 0, i32 2
  %454 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %453, align 8
  %455 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %454, i64 0, i32 0
  %456 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %455, align 8
  %457 = icmp eq %"class.std::__1::__tree_node_base"* %456, %452
  br i1 %457, label %458, label %449

458:                                              ; preds = %449, %434, %447
  %459 = phi %"class.std::__1::__tree_end_node"* [ %448, %447 ], [ %438, %434 ], [ %454, %449 ]
  %460 = icmp eq %"class.std::__1::__tree_end_node"* %459, %201
  br i1 %460, label %207, label %356

461:                                              ; preds = %565, %301
  store i8 0, i8* %11, align 4
  %462 = getelementptr inbounds %"class.std::__1::vector.1269", %"class.std::__1::vector.1269"* %8, i64 0, i32 0, i32 0
  %463 = load %"struct.v8::AllocationProfile::Allocation"*, %"struct.v8::AllocationProfile::Allocation"** %462, align 16
  %464 = icmp eq %"struct.v8::AllocationProfile::Allocation"* %463, null
  br i1 %464, label %468, label %465

465:                                              ; preds = %461
  %466 = ptrtoint %"struct.v8::AllocationProfile::Allocation"* %463 to i64
  store i64 %466, i64* %234, align 8
  %467 = bitcast %"struct.v8::AllocationProfile::Allocation"* %463 to i8*
  call void @_ZdlPv(i8* %467) #14
  br label %468

468:                                              ; preds = %461, %465
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #12
  ret %"struct.v8::AllocationProfile::Node"* %345

469:                                              ; preds = %348, %565
  %470 = phi %"class.std::__1::__tree_end_node"* [ %339, %348 ], [ %566, %565 ]
  %471 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %470, i64 5
  %472 = bitcast %"class.std::__1::__tree_end_node"* %471 to %"class.v8::internal::SamplingHeapProfiler::AllocationNode"**
  %473 = load %"class.v8::internal::SamplingHeapProfiler::AllocationNode"*, %"class.v8::internal::SamplingHeapProfiler::AllocationNode"** %472, align 8
  %474 = call %"struct.v8::AllocationProfile::Node"* @_ZN2v88internal20SamplingHeapProfiler23TranslateAllocationNodeEPNS0_17AllocationProfileEPNS1_14AllocationNodeERKNSt3__13mapIiNS0_6HandleINS0_6ScriptEEENS6_4lessIiEENS6_9allocatorINS6_4pairIKiSA_EEEEEE(%"class.v8::internal::SamplingHeapProfiler"* %0, %"class.v8::internal::AllocationProfile"* %1, %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %473, %"class.std::__1::map.1290"* dereferenceable(24) %3)
  %475 = ptrtoint %"struct.v8::AllocationProfile::Node"* %474 to i64
  %476 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %350, align 8
  %477 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %351, align 8
  %478 = icmp ult %"struct.v8::AllocationProfile::Node"** %476, %477
  %479 = ptrtoint %"struct.v8::AllocationProfile::Node"** %477 to i64
  br i1 %478, label %480, label %484

480:                                              ; preds = %469
  %481 = bitcast %"struct.v8::AllocationProfile::Node"** %476 to i64*
  store i64 %475, i64* %481, align 8
  %482 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %476, i64 1
  %483 = ptrtoint %"struct.v8::AllocationProfile::Node"** %482 to i64
  store i64 %483, i64* %352, align 8
  br label %537

484:                                              ; preds = %469
  %485 = ptrtoint %"struct.v8::AllocationProfile::Node"** %476 to i64
  %486 = load i64, i64* %353, align 8
  %487 = sub i64 %485, %486
  %488 = ashr exact i64 %487, 3
  %489 = add nsw i64 %488, 1
  %490 = icmp ugt i64 %489, 2305843009213693951
  br i1 %490, label %491, label %493

491:                                              ; preds = %484
  %492 = bitcast %"class.std::__1::vector.1262"* %349 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %492) #13
  unreachable

493:                                              ; preds = %484
  %494 = sub i64 %479, %486
  %495 = ashr exact i64 %494, 3
  %496 = icmp ult i64 %495, 1152921504606846975
  br i1 %496, label %497, label %505

497:                                              ; preds = %493
  %498 = ashr exact i64 %494, 2
  %499 = icmp ult i64 %498, %489
  %500 = select i1 %499, i64 %489, i64 %498
  %501 = icmp eq i64 %500, 0
  br i1 %501, label %510, label %502

502:                                              ; preds = %497
  %503 = icmp ugt i64 %500, 2305843009213693951
  br i1 %503, label %504, label %505

504:                                              ; preds = %502
  call void @abort() #13
  unreachable

505:                                              ; preds = %502, %493
  %506 = phi i64 [ %500, %502 ], [ 2305843009213693951, %493 ]
  %507 = shl i64 %506, 3
  %508 = call i8* @_Znwm(i64 %507) #14
  %509 = bitcast i8* %508 to %"struct.v8::AllocationProfile::Node"**
  br label %510

510:                                              ; preds = %505, %497
  %511 = phi i64 [ %506, %505 ], [ 0, %497 ]
  %512 = phi %"struct.v8::AllocationProfile::Node"** [ %509, %505 ], [ null, %497 ]
  %513 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %512, i64 %488
  %514 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %512, i64 %511
  %515 = ptrtoint %"struct.v8::AllocationProfile::Node"** %514 to i64
  %516 = bitcast %"struct.v8::AllocationProfile::Node"** %513 to i64*
  store i64 %475, i64* %516, align 8
  %517 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %513, i64 1
  %518 = ptrtoint %"struct.v8::AllocationProfile::Node"** %517 to i64
  %519 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %355, align 8
  %520 = load i64, i64* %352, align 8
  %521 = ptrtoint %"struct.v8::AllocationProfile::Node"** %519 to i64
  %522 = sub i64 %520, %521
  %523 = ashr exact i64 %522, 3
  %524 = sub nsw i64 0, %523
  %525 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %513, i64 %524
  %526 = ptrtoint %"struct.v8::AllocationProfile::Node"** %525 to i64
  %527 = icmp sgt i64 %522, 0
  br i1 %527, label %528, label %532

528:                                              ; preds = %510
  %529 = bitcast %"struct.v8::AllocationProfile::Node"** %525 to i8*
  %530 = bitcast %"struct.v8::AllocationProfile::Node"** %519 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %529, i8* align 8 %530, i64 %522, i1 false) #12
  %531 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %355, align 8
  br label %532

532:                                              ; preds = %528, %510
  %533 = phi %"struct.v8::AllocationProfile::Node"** [ %519, %510 ], [ %531, %528 ]
  store i64 %526, i64* %353, align 8
  store i64 %518, i64* %352, align 8
  store i64 %515, i64* %354, align 8
  %534 = icmp eq %"struct.v8::AllocationProfile::Node"** %533, null
  br i1 %534, label %537, label %535

535:                                              ; preds = %532
  %536 = bitcast %"struct.v8::AllocationProfile::Node"** %533 to i8*
  call void @_ZdlPv(i8* %536) #14
  br label %537

537:                                              ; preds = %480, %532, %535
  %538 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %470, i64 1, i32 0
  %539 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %538, align 8
  %540 = icmp eq %"class.std::__1::__tree_node_base"* %539, null
  br i1 %540, label %541, label %549

541:                                              ; preds = %537
  %542 = bitcast %"class.std::__1::__tree_end_node"* %470 to %"class.std::__1::__tree_node_base"*
  %543 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %470, i64 2
  %544 = bitcast %"class.std::__1::__tree_end_node"* %543 to %"class.std::__1::__tree_end_node"**
  %545 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %544, align 8
  %546 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %545, i64 0, i32 0
  %547 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %546, align 8
  %548 = icmp eq %"class.std::__1::__tree_node_base"* %547, %542
  br i1 %548, label %565, label %556

549:                                              ; preds = %537, %549
  %550 = phi %"class.std::__1::__tree_node_base"* [ %552, %549 ], [ %539, %537 ]
  %551 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %550, i64 0, i32 0, i32 0
  %552 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %551, align 8
  %553 = icmp eq %"class.std::__1::__tree_node_base"* %552, null
  br i1 %553, label %554, label %549

554:                                              ; preds = %549
  %555 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %550, i64 0, i32 0
  br label %565

556:                                              ; preds = %541, %556
  %557 = phi %"class.std::__1::__tree_end_node"** [ %560, %556 ], [ %544, %541 ]
  %558 = bitcast %"class.std::__1::__tree_end_node"** %557 to %"class.std::__1::__tree_node_base"**
  %559 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %558, align 8
  %560 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %559, i64 0, i32 2
  %561 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %560, align 8
  %562 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %561, i64 0, i32 0
  %563 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %562, align 8
  %564 = icmp eq %"class.std::__1::__tree_node_base"* %563, %559
  br i1 %564, label %565, label %556

565:                                              ; preds = %556, %541, %554
  %566 = phi %"class.std::__1::__tree_end_node"* [ %555, %554 ], [ %545, %541 ], [ %561, %556 ]
  %567 = icmp eq %"class.std::__1::__tree_end_node"* %566, %346
  br i1 %567, label %461, label %469
}

declare i8* @_ZN2v88internal14StringsStorage7GetNameENS0_4NameE(%"class.v8::internal::StringsStorage"*, i64) local_unnamed_addr #2

declare i32 @_ZN2v88internal6Script13GetLineNumberENS0_6HandleIS1_EEi(i64*, i32) local_unnamed_addr #2

declare i32 @_ZN2v88internal6Script15GetColumnNumberENS0_6HandleIS1_EEi(i64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.v8::AllocationProfile"* @_ZN2v88internal20SamplingHeapProfiler20GetAllocationProfileEv(%"class.v8::internal::SamplingHeapProfiler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::map.1290", align 8
  %3 = alloca %"class.v8::internal::Script::Iterator", align 8
  %4 = alloca %"class.std::__1::vector.1283", align 8
  %5 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 12
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap17CollectAllGarbageEiNS0_23GarbageCollectionReasonENS_15GCCallbackFlagsE(%"class.v8::internal::Heap"* %12, i32 0, i32 19, i32 0) #12
  br label %13

13:                                               ; preds = %1, %9
  %14 = bitcast %"class.std::__1::map.1290"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.std::__1::map.1290", %"class.std::__1::map.1290"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::map.1290", %"class.std::__1::map.1290"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::map.1290", %"class.std::__1::map.1290"* %2, i64 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_node_base"** %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %16, %"class.std::__1::__tree_end_node"** %17, align 8
  %19 = bitcast %"class.v8::internal::Script::Iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 0
  %21 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %20, align 8
  call void @_ZN2v88internal6Script8IteratorC1EPNS0_7IsolateE(%"class.v8::internal::Script::Iterator"* nonnull %3, %"class.v8::internal::Isolate"* %21) #12
  %22 = call i64 @_ZN2v88internal6Script8Iterator4NextEv(%"class.v8::internal::Script::Iterator"* nonnull %3) #12
  %23 = trunc i64 %22 to i32
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %13
  %26 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node.1362"**
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %28 = bitcast %"class.std::__1::map.1290"* %2 to i64*
  %29 = getelementptr inbounds %"class.std::__1::map.1290", %"class.std::__1::map.1290"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %55

30:                                               ; preds = %139, %13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #12
  %31 = call i8* @_Znwm(i64 80) #14
  %32 = bitcast i8* %31 to %"class.v8::internal::AllocationProfile"*
  %33 = bitcast i8* %31 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal17AllocationProfileE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %34 = getelementptr inbounds i8, i8* %31, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 72, i1 false) #12
  %35 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %0, i64 0, i32 7
  %36 = call %"struct.v8::AllocationProfile::Node"* @_ZN2v88internal20SamplingHeapProfiler23TranslateAllocationNodeEPNS0_17AllocationProfileEPNS1_14AllocationNodeERKNSt3__13mapIiNS0_6HandleINS0_6ScriptEEENS6_4lessIiEENS6_9allocatorINS6_4pairIKiSA_EEEEEE(%"class.v8::internal::SamplingHeapProfiler"* %0, %"class.v8::internal::AllocationProfile"* nonnull %32, %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %35, %"class.std::__1::map.1290"* nonnull dereferenceable(24) %2)
  %37 = bitcast %"class.std::__1::vector.1283"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #12
  call void @_ZNK2v88internal20SamplingHeapProfiler12BuildSamplesEv(%"class.std::__1::vector.1283"* nonnull sret %4, %"class.v8::internal::SamplingHeapProfiler"* %0)
  %38 = getelementptr inbounds i8, i8* %31, i64 56
  %39 = bitcast i8* %38 to %"class.std::__1::vector.1283"*
  %40 = getelementptr inbounds %"class.std::__1::vector.1283", %"class.std::__1::vector.1283"* %4, i64 0, i32 0, i32 0
  %41 = load %"struct.v8::AllocationProfile::Sample"*, %"struct.v8::AllocationProfile::Sample"** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::vector.1283", %"class.std::__1::vector.1283"* %4, i64 0, i32 0, i32 1
  %43 = load %"struct.v8::AllocationProfile::Sample"*, %"struct.v8::AllocationProfile::Sample"** %42, align 8
  call void @_ZNSt3__16vectorIN2v817AllocationProfile6SampleENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector.1283"* %39, %"struct.v8::AllocationProfile::Sample"* %41, %"struct.v8::AllocationProfile::Sample"* %43) #12
  %44 = load %"struct.v8::AllocationProfile::Sample"*, %"struct.v8::AllocationProfile::Sample"** %40, align 8
  %45 = icmp eq %"struct.v8::AllocationProfile::Sample"* %44, null
  br i1 %45, label %50, label %46

46:                                               ; preds = %30
  %47 = ptrtoint %"struct.v8::AllocationProfile::Sample"* %44 to i64
  %48 = bitcast %"struct.v8::AllocationProfile::Sample"** %42 to i64*
  store i64 %47, i64* %48, align 8
  %49 = bitcast %"struct.v8::AllocationProfile::Sample"* %44 to i8*
  call void @_ZdlPv(i8* %49) #14
  br label %50

50:                                               ; preds = %30, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #12
  %51 = bitcast i8* %31 to %"class.v8::AllocationProfile"*
  %52 = getelementptr inbounds %"class.std::__1::map.1290", %"class.std::__1::map.1290"* %2, i64 0, i32 0
  %53 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node.1362"**
  %54 = load %"class.std::__1::__tree_node.1362"*, %"class.std::__1::__tree_node.1362"** %53, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIiN2v88internal6HandleINS3_6ScriptEEEEENS_19__map_value_compareIiS7_NS_4lessIiEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.1291"* nonnull %52, %"class.std::__1::__tree_node.1362"* %54) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  ret %"class.v8::AllocationProfile"* %51

55:                                               ; preds = %25, %139
  %56 = phi i64 [ %22, %25 ], [ %142, %139 ]
  %57 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %20, align 8
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %57, i64 0, i32 31, i32 4
  %59 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %58, align 8
  %60 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %59, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %55
  %62 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %59, i64 %56) #12
  br label %76

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %57, i64 0, i32 31, i32 0
  %65 = load i64*, i64** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %57, i64 0, i32 31, i32 1
  %67 = load i64*, i64** %66, align 8
  %68 = icmp eq i64* %65, %67
  br i1 %68, label %69, label %71

69:                                               ; preds = %63
  %70 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %57) #12
  br label %71

71:                                               ; preds = %69, %63
  %72 = phi i64* [ %70, %69 ], [ %65, %63 ]
  %73 = ptrtoint i64* %72 to i64
  %74 = add i64 %73, 8
  %75 = inttoptr i64 %74 to i64*
  store i64* %75, i64** %64, align 8
  store i64 %56, i64* %72, align 8
  br label %76

76:                                               ; preds = %61, %71
  %77 = phi i64* [ %62, %61 ], [ %72, %71 ]
  %78 = add i64 %56, 31
  %79 = inttoptr i64 %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = ashr i32 %80, 1
  %82 = load %"class.std::__1::__tree_node.1362"*, %"class.std::__1::__tree_node.1362"** %26, align 8
  %83 = icmp eq %"class.std::__1::__tree_node.1362"* %82, null
  br i1 %83, label %110, label %84

84:                                               ; preds = %76, %106
  %85 = phi %"class.std::__1::__tree_node.1362"* [ %109, %106 ], [ %82, %76 ]
  %86 = phi %"class.std::__1::__tree_node_base"** [ %108, %106 ], [ %15, %76 ]
  %87 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %85, i64 0, i32 1, i32 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = icmp slt i32 %81, %88
  br i1 %89, label %90, label %96

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %85, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %91, align 8
  %93 = icmp eq %"class.std::__1::__tree_node_base"* %92, null
  br i1 %93, label %94, label %106

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %85, i64 0, i32 0, i32 0
  br label %110

96:                                               ; preds = %84
  %97 = icmp slt i32 %88, %81
  br i1 %97, label %98, label %104

98:                                               ; preds = %96
  %99 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %85, i64 0, i32 0, i32 1
  %100 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %99, align 8
  %101 = icmp eq %"class.std::__1::__tree_node_base"* %100, null
  br i1 %101, label %102, label %106

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %85, i64 0, i32 0, i32 0
  br label %110

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %85, i64 0, i32 0, i32 0
  br label %110

106:                                              ; preds = %98, %90
  %107 = phi %"class.std::__1::__tree_node_base"* [ %92, %90 ], [ %100, %98 ]
  %108 = phi %"class.std::__1::__tree_node_base"** [ %91, %90 ], [ %99, %98 ]
  %109 = bitcast %"class.std::__1::__tree_node_base"* %107 to %"class.std::__1::__tree_node.1362"*
  br label %84

110:                                              ; preds = %76, %104, %102, %94
  %111 = phi %"class.std::__1::__tree_end_node"* [ %95, %94 ], [ %103, %102 ], [ %105, %104 ], [ %16, %76 ]
  %112 = phi %"class.std::__1::__tree_node_base"** [ %91, %94 ], [ %99, %102 ], [ %86, %104 ], [ %27, %76 ]
  %113 = bitcast %"class.std::__1::__tree_node_base"** %112 to %"class.std::__1::__tree_node.1362"**
  %114 = load %"class.std::__1::__tree_node.1362"*, %"class.std::__1::__tree_node.1362"** %113, align 8
  %115 = icmp eq %"class.std::__1::__tree_node.1362"* %114, null
  br i1 %115, label %116, label %139

116:                                              ; preds = %110
  %117 = call i8* @_Znwm(i64 48) #14, !noalias !19
  %118 = getelementptr inbounds i8, i8* %117, i64 32
  %119 = bitcast i8* %118 to i32*
  store i32 %81, i32* %119, align 8, !noalias !19
  %120 = getelementptr inbounds i8, i8* %117, i64 40
  %121 = bitcast i8* %120 to i64**
  store i64* null, i64** %121, align 8, !noalias !19
  %122 = bitcast i8* %117 to %"class.std::__1::__tree_node.1362"*
  %123 = bitcast i8* %117 to %"class.std::__1::__tree_node_base"*
  %124 = getelementptr inbounds i8, i8* %117, i64 16
  %125 = bitcast i8* %124 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %111, %"class.std::__1::__tree_end_node"** %125, align 8
  %126 = bitcast %"class.std::__1::__tree_node_base"** %112 to i8**
  store i8* %117, i8** %126, align 8
  %127 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %17, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %127, i64 0, i32 0
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = icmp eq %"class.std::__1::__tree_node_base"* %129, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %116
  %132 = ptrtoint %"class.std::__1::__tree_node_base"* %129 to i64
  store i64 %132, i64* %28, align 8
  %133 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  br label %134

134:                                              ; preds = %131, %116
  %135 = phi %"class.std::__1::__tree_node_base"* [ %123, %116 ], [ %133, %131 ]
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %136, %"class.std::__1::__tree_node_base"* %135) #12
  %137 = load i64, i64* %29, align 8
  %138 = add i64 %137, 1
  store i64 %138, i64* %29, align 8
  br label %139

139:                                              ; preds = %110, %134
  %140 = phi %"class.std::__1::__tree_node.1362"* [ %122, %134 ], [ %114, %110 ]
  %141 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %140, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  store i64* %77, i64** %141, align 8
  %142 = call i64 @_ZN2v88internal6Script8Iterator4NextEv(%"class.v8::internal::Script::Iterator"* nonnull %3) #12
  %143 = trunc i64 %142 to i32
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %30, label %55
}

declare void @_ZN2v88internal4Heap17CollectAllGarbageEiNS0_23GarbageCollectionReasonENS_15GCCallbackFlagsE(%"class.v8::internal::Heap"*, i32, i32, i32) local_unnamed_addr #2

declare void @_ZN2v88internal6Script8IteratorC1EPNS0_7IsolateE(%"class.v8::internal::Script::Iterator"*, %"class.v8::internal::Isolate"*) unnamed_addr #2

declare i64 @_ZN2v88internal6Script8Iterator4NextEv(%"class.v8::internal::Script::Iterator"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal20SamplingHeapProfiler12BuildSamplesEv(%"class.std::__1::vector.1283"* noalias sret, %"class.v8::internal::SamplingHeapProfiler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::vector.1283"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #12
  %4 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %1, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.1283", %"class.std::__1::vector.1283"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast %"struct.v8::AllocationProfile::Sample"** %6 to i64*
  %8 = bitcast %"class.std::__1::vector.1283"* %0 to i64*
  %9 = icmp eq i64 %5, 0
  br i1 %9, label %23, label %10

10:                                               ; preds = %2
  %11 = icmp ugt i64 %5, 576460752303423487
  br i1 %11, label %12, label %13

12:                                               ; preds = %10
  tail call void @abort() #13
  unreachable

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.std::__1::vector.1283", %"class.std::__1::vector.1283"* %0, i64 0, i32 0, i32 1
  %15 = bitcast %"struct.v8::AllocationProfile::Sample"** %14 to i64*
  %16 = shl i64 %5, 5
  %17 = tail call i8* @_Znwm(i64 %16) #14
  %18 = bitcast i8* %17 to %"struct.v8::AllocationProfile::Sample"*
  %19 = ptrtoint i8* %17 to i64
  %20 = getelementptr inbounds %"struct.v8::AllocationProfile::Sample", %"struct.v8::AllocationProfile::Sample"* %18, i64 %5
  %21 = ptrtoint %"struct.v8::AllocationProfile::Sample"* %20 to i64
  %22 = ptrtoint i8* %17 to i64
  store i64 %22, i64* %8, align 8
  store i64 %19, i64* %15, align 8
  store i64 %21, i64* %7, align 8
  br label %23

23:                                               ; preds = %13, %2
  %24 = phi i64 [ 0, %2 ], [ %19, %13 ]
  %25 = phi %"struct.v8::AllocationProfile::Sample"* [ null, %2 ], [ %20, %13 ]
  %26 = phi %"struct.v8::AllocationProfile::Sample"* [ null, %2 ], [ %18, %13 ]
  %27 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %1, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %28 = bitcast %"struct.std::__1::__hash_node_base.1008"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler", %"class.v8::internal::SamplingHeapProfiler"* %1, i64 0, i32 11
  %33 = getelementptr inbounds %"class.std::__1::vector.1283", %"class.std::__1::vector.1283"* %0, i64 0, i32 0, i32 1
  %34 = bitcast %"struct.v8::AllocationProfile::Sample"** %33 to i64*
  br label %36

35:                                               ; preds = %122, %23
  ret void

36:                                               ; preds = %126, %31
  %37 = phi i64 [ %24, %31 ], [ %129, %126 ]
  %38 = phi %"struct.v8::AllocationProfile::Sample"* [ %25, %31 ], [ %128, %126 ]
  %39 = phi %"struct.v8::AllocationProfile::Sample"* [ %26, %31 ], [ %127, %126 ]
  %40 = phi i64 [ %29, %31 ], [ %124, %126 ]
  %41 = inttoptr i64 %40 to %"struct.std::__1::__hash_node"*
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %41, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"struct.v8::internal::SamplingHeapProfiler::Sample"*, %"struct.v8::internal::SamplingHeapProfiler::Sample"** %42, align 8
  %44 = getelementptr inbounds %"struct.v8::internal::SamplingHeapProfiler::Sample", %"struct.v8::internal::SamplingHeapProfiler::Sample"* %43, i64 0, i32 1
  %45 = load %"class.v8::internal::SamplingHeapProfiler::AllocationNode"*, %"class.v8::internal::SamplingHeapProfiler::AllocationNode"** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %45, i64 0, i32 6
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %"struct.v8::internal::SamplingHeapProfiler::Sample", %"struct.v8::internal::SamplingHeapProfiler::Sample"* %43, i64 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = uitofp i64 %49 to double
  %51 = fsub double -0.000000e+00, %50
  %52 = load i64, i64* %32, align 8
  %53 = uitofp i64 %52 to double
  %54 = fdiv double %51, %53
  %55 = tail call double @exp(double %54) #12
  %56 = fsub double 1.000000e+00, %55
  %57 = fdiv double 1.000000e+00, %56
  %58 = fadd double %57, 5.000000e-01
  %59 = fptoui double %58 to i32
  %60 = getelementptr inbounds %"struct.v8::internal::SamplingHeapProfiler::Sample", %"struct.v8::internal::SamplingHeapProfiler::Sample"* %43, i64 0, i32 4
  %61 = load i64, i64* %60, align 8
  %62 = icmp ult %"struct.v8::AllocationProfile::Sample"* %39, %38
  %63 = ptrtoint %"struct.v8::AllocationProfile::Sample"* %38 to i64
  br i1 %62, label %64, label %71

64:                                               ; preds = %36
  %65 = getelementptr inbounds %"struct.v8::AllocationProfile::Sample", %"struct.v8::AllocationProfile::Sample"* %39, i64 0, i32 0
  store i32 %47, i32* %65, align 8
  %66 = getelementptr inbounds %"struct.v8::AllocationProfile::Sample", %"struct.v8::AllocationProfile::Sample"* %39, i64 0, i32 1
  store i64 %49, i64* %66, align 8
  %67 = getelementptr inbounds %"struct.v8::AllocationProfile::Sample", %"struct.v8::AllocationProfile::Sample"* %39, i64 0, i32 2
  store i32 %59, i32* %67, align 8
  %68 = getelementptr inbounds %"struct.v8::AllocationProfile::Sample", %"struct.v8::AllocationProfile::Sample"* %39, i64 0, i32 3
  store i64 %61, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.v8::AllocationProfile::Sample", %"struct.v8::AllocationProfile::Sample"* %39, i64 1
  %70 = ptrtoint %"struct.v8::AllocationProfile::Sample"* %69 to i64
  store i64 %70, i64* %34, align 8
  br label %122

71:                                               ; preds = %36
  %72 = ptrtoint %"struct.v8::AllocationProfile::Sample"* %39 to i64
  %73 = load i64, i64* %8, align 8
  %74 = sub i64 %72, %73
  %75 = ashr exact i64 %74, 5
  %76 = add nsw i64 %75, 1
  %77 = icmp ugt i64 %76, 576460752303423487
  br i1 %77, label %78, label %80

78:                                               ; preds = %71
  %79 = bitcast %"class.std::__1::vector.1283"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %79) #13
  unreachable

80:                                               ; preds = %71
  %81 = sub i64 %63, %73
  %82 = ashr exact i64 %81, 5
  %83 = icmp ult i64 %82, 288230376151711743
  br i1 %83, label %84, label %92

84:                                               ; preds = %80
  %85 = ashr exact i64 %81, 4
  %86 = icmp ult i64 %85, %76
  %87 = select i1 %86, i64 %76, i64 %85
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %97, label %89

89:                                               ; preds = %84
  %90 = icmp ugt i64 %87, 576460752303423487
  br i1 %90, label %91, label %92

91:                                               ; preds = %89
  tail call void @abort() #13
  unreachable

92:                                               ; preds = %89, %80
  %93 = phi i64 [ %87, %89 ], [ 576460752303423487, %80 ]
  %94 = shl i64 %93, 5
  %95 = tail call i8* @_Znwm(i64 %94) #14
  %96 = bitcast i8* %95 to %"struct.v8::AllocationProfile::Sample"*
  br label %97

97:                                               ; preds = %92, %84
  %98 = phi i64 [ %93, %92 ], [ 0, %84 ]
  %99 = phi %"struct.v8::AllocationProfile::Sample"* [ %96, %92 ], [ null, %84 ]
  %100 = getelementptr inbounds %"struct.v8::AllocationProfile::Sample", %"struct.v8::AllocationProfile::Sample"* %99, i64 %75
  %101 = getelementptr inbounds %"struct.v8::AllocationProfile::Sample", %"struct.v8::AllocationProfile::Sample"* %99, i64 %98
  %102 = ptrtoint %"struct.v8::AllocationProfile::Sample"* %101 to i64
  %103 = getelementptr inbounds %"struct.v8::AllocationProfile::Sample", %"struct.v8::AllocationProfile::Sample"* %100, i64 0, i32 0
  store i32 %47, i32* %103, align 8
  %104 = getelementptr inbounds %"struct.v8::AllocationProfile::Sample", %"struct.v8::AllocationProfile::Sample"* %99, i64 %75, i32 1
  store i64 %49, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.v8::AllocationProfile::Sample", %"struct.v8::AllocationProfile::Sample"* %99, i64 %75, i32 2
  store i32 %59, i32* %105, align 8
  %106 = getelementptr inbounds %"struct.v8::AllocationProfile::Sample", %"struct.v8::AllocationProfile::Sample"* %99, i64 %75, i32 3
  store i64 %61, i64* %106, align 8
  %107 = getelementptr inbounds %"struct.v8::AllocationProfile::Sample", %"struct.v8::AllocationProfile::Sample"* %100, i64 1
  %108 = ptrtoint %"struct.v8::AllocationProfile::Sample"* %107 to i64
  %109 = sub i64 %37, %73
  %110 = ashr exact i64 %109, 5
  %111 = sub nsw i64 0, %110
  %112 = getelementptr inbounds %"struct.v8::AllocationProfile::Sample", %"struct.v8::AllocationProfile::Sample"* %100, i64 %111
  %113 = ptrtoint %"struct.v8::AllocationProfile::Sample"* %112 to i64
  %114 = icmp sgt i64 %109, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %97
  %116 = bitcast %"struct.v8::AllocationProfile::Sample"* %112 to i8*
  %117 = inttoptr i64 %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* align 8 %117, i64 %109, i1 false) #12
  br label %118

118:                                              ; preds = %115, %97
  store i64 %113, i64* %8, align 8
  store i64 %108, i64* %34, align 8
  store i64 %102, i64* %7, align 8
  %119 = icmp eq i64 %73, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %118
  %121 = inttoptr i64 %73 to i8*
  tail call void @_ZdlPv(i8* %121) #14
  br label %122

122:                                              ; preds = %64, %118, %120
  %123 = inttoptr i64 %40 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %35, label %126

126:                                              ; preds = %122
  %127 = load %"struct.v8::AllocationProfile::Sample"*, %"struct.v8::AllocationProfile::Sample"** %33, align 8
  %128 = load %"struct.v8::AllocationProfile::Sample"*, %"struct.v8::AllocationProfile::Sample"** %6, align 8
  %129 = ptrtoint %"struct.v8::AllocationProfile::Sample"* %127 to i64
  br label %36
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal20SamplingHeapProfiler8ObserverD0Ev(%"class.v8::internal::SamplingHeapProfiler::Observer"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.v8::internal::SamplingHeapProfiler::Observer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal20SamplingHeapProfiler8Observer4StepEimm(%"class.v8::internal::SamplingHeapProfiler::Observer"*, i32, i64, i64) unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::Observer", %"class.v8::internal::SamplingHeapProfiler::Observer"* %0, i64 0, i32 1
  %8 = load %"class.v8::internal::SamplingHeapProfiler"*, %"class.v8::internal::SamplingHeapProfiler"** %7, align 8
  tail call void @_ZN2v88internal20SamplingHeapProfiler12SampleObjectEmm(%"class.v8::internal::SamplingHeapProfiler"* %8, i64 %2, i64 %3)
  br label %9

9:                                                ; preds = %4, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal20SamplingHeapProfiler8Observer15GetNextStepSizeEv(%"class.v8::internal::SamplingHeapProfiler::Observer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::Observer", %"class.v8::internal::SamplingHeapProfiler::Observer"* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = load i8, i8* @_ZN2v88internal47FLAG_sampling_heap_profiler_suppress_randomnessE, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %19

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::Observer", %"class.v8::internal::SamplingHeapProfiler::Observer"* %0, i64 0, i32 3
  %8 = load %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"** %7, align 8
  %9 = tail call double @_ZN2v84base21RandomNumberGenerator10NextDoubleEv(%"class.v8::base::RandomNumberGenerator"* %8) #12
  %10 = tail call double @_ZN2v84base7ieee7543logEd(double %9) #12
  %11 = uitofp i64 %3 to double
  %12 = fmul double %10, %11
  %13 = fcmp ogt double %12, -4.000000e+00
  br i1 %13, label %19, label %14

14:                                               ; preds = %6
  %15 = fsub double -0.000000e+00, %12
  %16 = fcmp olt double %12, 0xC1DFFFFFFFC00000
  %17 = fptosi double %15 to i64
  %18 = select i1 %16, i64 2147483647, i64 %17
  br label %19

19:                                               ; preds = %1, %6, %14
  %20 = phi i64 [ %3, %1 ], [ 4, %6 ], [ %18, %14 ]
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18AllocationObserverD2Ev(%"class.v8::internal::AllocationObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN2v88internal20SamplingHeapProfiler14AllocationNodeENS_14default_deleteIS6_EEEEEENS_19__map_value_compareImSA_NS_4lessImEELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.995"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %25, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN2v88internal20SamplingHeapProfiler14AllocationNodeENS_14default_deleteIS6_EEEEEENS_19__map_value_compareImSA_NS_4lessImEELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.995"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN2v88internal20SamplingHeapProfiler14AllocationNodeENS_14default_deleteIS6_EEEEEENS_19__map_value_compareImSA_NS_4lessImEELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.995"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.v8::internal::SamplingHeapProfiler::AllocationNode"*, %"class.v8::internal::SamplingHeapProfiler::AllocationNode"** %10, align 8
  store %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* null, %"class.v8::internal::SamplingHeapProfiler::AllocationNode"** %10, align 8
  %12 = icmp eq %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %11, null
  br i1 %12, label %23, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %11, i64 0, i32 1, i32 0
  %15 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %11, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_node"**
  %17 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %16, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN2v88internal20SamplingHeapProfiler14AllocationNodeENS_14default_deleteIS6_EEEEEENS_19__map_value_compareImSA_NS_4lessImEELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.995"* %14, %"class.std::__1::__tree_node"* %17) #12
  %18 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %11, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %11, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node.1312"**
  %21 = load %"class.std::__1::__tree_node.1312"*, %"class.std::__1::__tree_node.1312"** %20, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImjEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.986"* %18, %"class.std::__1::__tree_node.1312"* %21) #12
  %22 = bitcast %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %11 to i8*
  tail call void @_ZdlPv(i8* %22) #14
  br label %23

23:                                               ; preds = %4, %13
  %24 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %24) #14
  br label %25

25:                                               ; preds = %2, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeImjEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.986"*, %"class.std::__1::__tree_node.1312"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1312"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1312"* %1 to %"class.std::__1::__tree_node.1312"**
  %6 = load %"class.std::__1::__tree_node.1312"*, %"class.std::__1::__tree_node.1312"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImjEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.986"* %0, %"class.std::__1::__tree_node.1312"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1312", %"class.std::__1::__tree_node.1312"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1312"**
  %9 = load %"class.std::__1::__tree_node.1312"*, %"class.std::__1::__tree_node.1312"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImjEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.986"* %0, %"class.std::__1::__tree_node.1312"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node.1312"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  ret void

11:                                               ; preds = %2
  ret void
}

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare void @_ZN2v88internal18StackFrameIteratorC1EPNS0_7IsolateE(%"class.v8::internal::StackFrameIterator"*, %"class.v8::internal::Isolate"*) unnamed_addr #2

declare i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"*, %"class.v8::internal::Vector.1332"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.v8::AllocationProfile::Node"* @_ZN2v88internal17AllocationProfile11GetRootNodeEv(%"class.v8::internal::AllocationProfile"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::AllocationProfile", %"class.v8::internal::AllocationProfile"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::AllocationProfile", %"class.v8::internal::AllocationProfile"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %7 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::AllocationProfile", %"class.v8::internal::AllocationProfile"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = udiv i64 %9, 46
  %11 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %7, i64 %10
  %12 = load %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %11, align 8
  %13 = urem i64 %9, 46
  %14 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %12, i64 %13
  br label %15

15:                                               ; preds = %1, %5
  %16 = phi %"struct.v8::AllocationProfile::Node"* [ %14, %5 ], [ null, %1 ]
  ret %"struct.v8::AllocationProfile::Node"* %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::vector.1283"* @_ZN2v88internal17AllocationProfile10GetSamplesEv(%"class.v8::internal::AllocationProfile"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::AllocationProfile", %"class.v8::internal::AllocationProfile"* %0, i64 0, i32 2
  ret %"class.std::__1::vector.1283"* %2
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal17AllocationProfileD2Ev(%"class.v8::internal::AllocationProfile"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::AllocationProfile", %"class.v8::internal::AllocationProfile"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal17AllocationProfileE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::AllocationProfile", %"class.v8::internal::AllocationProfile"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"struct.v8::AllocationProfile::Sample"*, %"struct.v8::AllocationProfile::Sample"** %3, align 8
  %5 = icmp eq %"struct.v8::AllocationProfile::Sample"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.v8::AllocationProfile::Sample"* %4 to i64
  %8 = getelementptr inbounds %"class.v8::internal::AllocationProfile", %"class.v8::internal::AllocationProfile"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %"struct.v8::AllocationProfile::Sample"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.v8::AllocationProfile::Sample"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.v8::internal::AllocationProfile", %"class.v8::internal::AllocationProfile"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__112__deque_baseIN2v817AllocationProfile4NodeENS_9allocatorIS3_EEE5clearEv(%"class.std::__1::__deque_base.1277"* %12) #12
  %13 = getelementptr inbounds %"class.v8::internal::AllocationProfile", %"class.v8::internal::AllocationProfile"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::AllocationProfile", %"class.v8::internal::AllocationProfile"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %16 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %15, align 8
  %17 = icmp eq %"struct.v8::AllocationProfile::Node"** %14, %16
  br i1 %17, label %36, label %18

18:                                               ; preds = %11, %18
  %19 = phi %"struct.v8::AllocationProfile::Node"** [ %22, %18 ], [ %14, %11 ]
  %20 = bitcast %"struct.v8::AllocationProfile::Node"** %19 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #14
  %22 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %19, i64 1
  %23 = icmp eq %"struct.v8::AllocationProfile::Node"** %22, %16
  br i1 %23, label %24, label %18

24:                                               ; preds = %18
  %25 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %13, align 8
  %26 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %15, align 8
  %27 = icmp eq %"struct.v8::AllocationProfile::Node"** %26, %25
  br i1 %27, label %36, label %28

28:                                               ; preds = %24
  %29 = ptrtoint %"struct.v8::AllocationProfile::Node"** %25 to i64
  %30 = getelementptr %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %26, i64 -1
  %31 = ptrtoint %"struct.v8::AllocationProfile::Node"** %30 to i64
  %32 = sub i64 %31, %29
  %33 = lshr i64 %32, 3
  %34 = xor i64 %33, -1
  %35 = getelementptr %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %26, i64 %34
  store %"struct.v8::AllocationProfile::Node"** %35, %"struct.v8::AllocationProfile::Node"*** %15, align 8
  br label %36

36:                                               ; preds = %28, %24, %11
  %37 = getelementptr inbounds %"class.std::__1::__deque_base.1277", %"class.std::__1::__deque_base.1277"* %12, i64 0, i32 0, i32 0
  %38 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %37, align 8
  %39 = icmp eq %"struct.v8::AllocationProfile::Node"** %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  %41 = bitcast %"struct.v8::AllocationProfile::Node"** %38 to i8*
  tail call void @_ZdlPv(i8* %41) #14
  br label %42

42:                                               ; preds = %36, %40
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal17AllocationProfileD0Ev(%"class.v8::internal::AllocationProfile"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::AllocationProfile", %"class.v8::internal::AllocationProfile"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal17AllocationProfileE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::AllocationProfile", %"class.v8::internal::AllocationProfile"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"struct.v8::AllocationProfile::Sample"*, %"struct.v8::AllocationProfile::Sample"** %3, align 8
  %5 = icmp eq %"struct.v8::AllocationProfile::Sample"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.v8::AllocationProfile::Sample"* %4 to i64
  %8 = getelementptr inbounds %"class.v8::internal::AllocationProfile", %"class.v8::internal::AllocationProfile"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %"struct.v8::AllocationProfile::Sample"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.v8::AllocationProfile::Sample"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.v8::internal::AllocationProfile", %"class.v8::internal::AllocationProfile"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__112__deque_baseIN2v817AllocationProfile4NodeENS_9allocatorIS3_EEE5clearEv(%"class.std::__1::__deque_base.1277"* %12) #12
  %13 = getelementptr inbounds %"class.v8::internal::AllocationProfile", %"class.v8::internal::AllocationProfile"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::AllocationProfile", %"class.v8::internal::AllocationProfile"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %16 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %15, align 8
  %17 = icmp eq %"struct.v8::AllocationProfile::Node"** %14, %16
  br i1 %17, label %36, label %18

18:                                               ; preds = %11, %18
  %19 = phi %"struct.v8::AllocationProfile::Node"** [ %22, %18 ], [ %14, %11 ]
  %20 = bitcast %"struct.v8::AllocationProfile::Node"** %19 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #14
  %22 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %19, i64 1
  %23 = icmp eq %"struct.v8::AllocationProfile::Node"** %22, %16
  br i1 %23, label %24, label %18

24:                                               ; preds = %18
  %25 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %13, align 8
  %26 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %15, align 8
  %27 = icmp eq %"struct.v8::AllocationProfile::Node"** %26, %25
  br i1 %27, label %36, label %28

28:                                               ; preds = %24
  %29 = ptrtoint %"struct.v8::AllocationProfile::Node"** %25 to i64
  %30 = getelementptr %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %26, i64 -1
  %31 = ptrtoint %"struct.v8::AllocationProfile::Node"** %30 to i64
  %32 = sub i64 %31, %29
  %33 = lshr i64 %32, 3
  %34 = xor i64 %33, -1
  %35 = getelementptr %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %26, i64 %34
  store %"struct.v8::AllocationProfile::Node"** %35, %"struct.v8::AllocationProfile::Node"*** %15, align 8
  br label %36

36:                                               ; preds = %28, %24, %11
  %37 = getelementptr inbounds %"class.std::__1::__deque_base.1277", %"class.std::__1::__deque_base.1277"* %12, i64 0, i32 0, i32 0
  %38 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %37, align 8
  %39 = icmp eq %"struct.v8::AllocationProfile::Node"** %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  %41 = bitcast %"struct.v8::AllocationProfile::Node"** %38 to i8*
  tail call void @_ZdlPv(i8* %41) #14
  br label %42

42:                                               ; preds = %36, %40
  %43 = bitcast %"class.v8::internal::AllocationProfile"* %0 to i8*
  tail call void @_ZdlPv(i8* %43) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseIN2v817AllocationProfile4NodeENS_9allocatorIS3_EEE5clearEv(%"class.std::__1::__deque_base.1277"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__deque_base.1277", %"class.std::__1::__deque_base.1277"* %0, i64 0, i32 0, i32 1
  %3 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__deque_base.1277", %"class.std::__1::__deque_base.1277"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = udiv i64 %5, 46
  %7 = urem i64 %5, 46
  %8 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %3, i64 %6
  %9 = getelementptr inbounds %"class.std::__1::__deque_base.1277", %"class.std::__1::__deque_base.1277"* %0, i64 0, i32 0, i32 2
  %10 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %9, align 8
  %11 = icmp eq %"struct.v8::AllocationProfile::Node"** %10, %3
  %12 = ptrtoint %"struct.v8::AllocationProfile::Node"** %10 to i64
  %13 = ptrtoint %"struct.v8::AllocationProfile::Node"** %3 to i64
  %14 = bitcast %"struct.v8::AllocationProfile::Node"** %3 to i8**
  br i1 %11, label %15, label %17

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.std::__1::__deque_base.1277", %"class.std::__1::__deque_base.1277"* %0, i64 0, i32 2, i32 0, i32 0
  br label %29

17:                                               ; preds = %1
  %18 = load %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %8, align 8
  %19 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %18, i64 %7
  %20 = getelementptr inbounds %"class.std::__1::__deque_base.1277", %"class.std::__1::__deque_base.1277"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %5
  %23 = udiv i64 %22, 46
  %24 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %3, i64 %23
  %25 = load %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %24, align 8
  %26 = urem i64 %22, 46
  %27 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %25, i64 %26
  %28 = icmp eq %"struct.v8::AllocationProfile::Node"* %27, %19
  br i1 %28, label %29, label %47

29:                                               ; preds = %15, %17
  %30 = phi i64* [ %16, %15 ], [ %20, %17 ]
  %31 = bitcast %"struct.v8::AllocationProfile::Node"*** %9 to i64*
  br label %38

32:                                               ; preds = %78
  %33 = bitcast %"struct.v8::AllocationProfile::Node"*** %9 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"struct.v8::AllocationProfile::Node"*** %2 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = inttoptr i64 %36 to i8**
  br label %38

38:                                               ; preds = %29, %32
  %39 = phi i64* [ %30, %29 ], [ %20, %32 ]
  %40 = phi i64* [ %31, %29 ], [ %33, %32 ]
  %41 = phi i8** [ %14, %29 ], [ %37, %32 ]
  %42 = phi i64 [ %13, %29 ], [ %36, %32 ]
  %43 = phi i64 [ %12, %29 ], [ %34, %32 ]
  store i64 0, i64* %39, align 8
  %44 = sub i64 %43, %42
  %45 = ashr exact i64 %44, 3
  %46 = icmp ugt i64 %45, 2
  br i1 %46, label %83, label %94

47:                                               ; preds = %17, %78
  %48 = phi %"struct.v8::AllocationProfile::Node"* [ %81, %78 ], [ %19, %17 ]
  %49 = phi %"struct.v8::AllocationProfile::Node"** [ %79, %78 ], [ %8, %17 ]
  %50 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %48, i64 0, i32 8, i32 0, i32 0
  %51 = load %"struct.v8::AllocationProfile::Allocation"*, %"struct.v8::AllocationProfile::Allocation"** %50, align 8
  %52 = icmp eq %"struct.v8::AllocationProfile::Allocation"* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %47
  %54 = ptrtoint %"struct.v8::AllocationProfile::Allocation"* %51 to i64
  %55 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %48, i64 0, i32 8, i32 0, i32 1
  %56 = bitcast %"struct.v8::AllocationProfile::Allocation"** %55 to i64*
  store i64 %54, i64* %56, align 8
  %57 = bitcast %"struct.v8::AllocationProfile::Allocation"* %51 to i8*
  tail call void @_ZdlPv(i8* %57) #14
  br label %58

58:                                               ; preds = %53, %47
  %59 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %48, i64 0, i32 7, i32 0, i32 0
  %60 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %59, align 8
  %61 = icmp eq %"struct.v8::AllocationProfile::Node"** %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %58
  %63 = ptrtoint %"struct.v8::AllocationProfile::Node"** %60 to i64
  %64 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %48, i64 0, i32 7, i32 0, i32 1
  %65 = bitcast %"struct.v8::AllocationProfile::Node"*** %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = bitcast %"struct.v8::AllocationProfile::Node"** %60 to i8*
  tail call void @_ZdlPv(i8* %66) #14
  br label %67

67:                                               ; preds = %58, %62
  %68 = getelementptr inbounds %"struct.v8::AllocationProfile::Node", %"struct.v8::AllocationProfile::Node"* %48, i64 1
  %69 = ptrtoint %"struct.v8::AllocationProfile::Node"* %68 to i64
  %70 = bitcast %"struct.v8::AllocationProfile::Node"** %49 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = sub i64 %69, %71
  %73 = icmp eq i64 %72, 4048
  br i1 %73, label %74, label %78

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %49, i64 1
  %76 = bitcast %"struct.v8::AllocationProfile::Node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %67, %74
  %79 = phi %"struct.v8::AllocationProfile::Node"** [ %75, %74 ], [ %49, %67 ]
  %80 = phi i64 [ %77, %74 ], [ %69, %67 ]
  %81 = inttoptr i64 %80 to %"struct.v8::AllocationProfile::Node"*
  %82 = icmp eq %"struct.v8::AllocationProfile::Node"* %27, %81
  br i1 %82, label %32, label %47

83:                                               ; preds = %38, %83
  %84 = phi i8** [ %93, %83 ], [ %41, %38 ]
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #14
  %86 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %2, align 8
  %87 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %86, i64 1
  store %"struct.v8::AllocationProfile::Node"** %87, %"struct.v8::AllocationProfile::Node"*** %2, align 8
  %88 = load i64, i64* %40, align 8
  %89 = ptrtoint %"struct.v8::AllocationProfile::Node"** %87 to i64
  %90 = sub i64 %88, %89
  %91 = ashr exact i64 %90, 3
  %92 = icmp ugt i64 %91, 2
  %93 = bitcast %"struct.v8::AllocationProfile::Node"** %87 to i8**
  br i1 %92, label %83, label %94

94:                                               ; preds = %83, %38
  %95 = phi i64 [ %45, %38 ], [ %91, %83 ]
  switch i64 %95, label %99 [
    i64 1, label %97
    i64 2, label %96
  ]

96:                                               ; preds = %94
  br label %97

97:                                               ; preds = %94, %96
  %98 = phi i64 [ 46, %96 ], [ 23, %94 ]
  store i64 %98, i64* %4, align 8
  br label %99

99:                                               ; preds = %97, %94
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #8

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare i64* @_ZN2v82V818GlobalizeReferenceEPNS_8internal7IsolateEPm(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare void @_ZN2v82V813DisposeGlobalEPm(i64*) local_unnamed_addr #2

declare void @_ZN2v82V88MakeWeakEPmPvPFvRKNS_16WeakCallbackInfoIvEEENS_16WeakCallbackTypeE(i64*, i8*, void (%"class.v8::WeakCallbackInfo"*)*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1008"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal20SamplingHeapProfiler6SampleENS_10unique_ptrIS5_NS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE25__emplace_unique_key_argsIS6_JS6_SA_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1004"*, %"struct.v8::internal::SamplingHeapProfiler::Sample"** dereferenceable(8), %"struct.v8::internal::SamplingHeapProfiler::Sample"** dereferenceable(8), %"class.std::__1::unique_ptr.1233"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"struct.v8::internal::SamplingHeapProfiler::Sample"** %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %6, 32
  %8 = shl i64 %6, 3
  %9 = and i64 %8, 4294967288
  %10 = add nuw nsw i64 %9, 8
  %11 = xor i64 %10, %7
  %12 = mul i64 %11, -7070675565921424023
  %13 = lshr i64 %12, 47
  %14 = xor i64 %12, %7
  %15 = xor i64 %14, %13
  %16 = mul i64 %15, -7070675565921424023
  %17 = lshr i64 %16, 47
  %18 = xor i64 %17, %16
  %19 = mul i64 %18, -7070675565921424023
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.1004", %"class.std::__1::__hash_table.1004"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  %23 = inttoptr i64 %6 to %"struct.v8::internal::SamplingHeapProfiler::Sample"*
  br i1 %22, label %83, label %24

24:                                               ; preds = %4
  %25 = tail call i64 @llvm.ctpop.i64(i64 %21) #12, !range !22
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %21, -1
  %29 = and i64 %19, %28
  br label %34

30:                                               ; preds = %24
  %31 = icmp ult i64 %19, %21
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %19, %21
  br label %34

34:                                               ; preds = %27, %30, %32
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %19, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1004", %"class.std::__1::__hash_table.1004"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.1008"**, %"struct.std::__1::__hash_node_base.1008"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.1008"* %39, null
  br i1 %40, label %83, label %41

41:                                               ; preds = %34
  %42 = add i64 %21, -1
  br i1 %26, label %43, label %65

43:                                               ; preds = %41, %60
  %44 = phi %"struct.std::__1::__hash_node_base.1008"* [ %46, %60 ], [ %39, %41 ]
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %44, i64 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.1008"* %46, null
  br i1 %47, label %83, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %46, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base.1008"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %19
  br i1 %52, label %60, label %53

53:                                               ; preds = %48
  %54 = icmp ult i64 %51, %21
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = urem i64 %51, %21
  br label %57

57:                                               ; preds = %55, %53
  %58 = phi i64 [ %56, %55 ], [ %51, %53 ]
  %59 = icmp eq i64 %58, %35
  br i1 %59, label %60, label %83

60:                                               ; preds = %57, %48
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %46, i64 2
  %62 = bitcast %"struct.std::__1::__hash_node_base.1008"* %61 to %"struct.v8::internal::SamplingHeapProfiler::Sample"**
  %63 = load %"struct.v8::internal::SamplingHeapProfiler::Sample"*, %"struct.v8::internal::SamplingHeapProfiler::Sample"** %62, align 8
  %64 = icmp eq %"struct.v8::internal::SamplingHeapProfiler::Sample"* %63, %23
  br i1 %64, label %176, label %43

65:                                               ; preds = %41, %78
  %66 = phi %"struct.std::__1::__hash_node_base.1008"* [ %68, %78 ], [ %39, %41 ]
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %66, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.1008"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %68, i64 1
  %72 = bitcast %"struct.std::__1::__hash_node_base.1008"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq i64 %73, %19
  %75 = and i64 %73, %42
  %76 = icmp eq i64 %75, %35
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %83

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %68, i64 2
  %80 = bitcast %"struct.std::__1::__hash_node_base.1008"* %79 to %"struct.v8::internal::SamplingHeapProfiler::Sample"**
  %81 = load %"struct.v8::internal::SamplingHeapProfiler::Sample"*, %"struct.v8::internal::SamplingHeapProfiler::Sample"** %80, align 8
  %82 = icmp eq %"struct.v8::internal::SamplingHeapProfiler::Sample"* %81, %23
  br i1 %82, label %176, label %65

83:                                               ; preds = %70, %65, %57, %43, %34, %4
  %84 = phi i64 [ %35, %34 ], [ undef, %4 ], [ %35, %43 ], [ %35, %57 ], [ %35, %65 ], [ %35, %70 ]
  %85 = tail call i8* @_Znwm(i64 32) #14, !noalias !23
  %86 = getelementptr inbounds i8, i8* %85, i64 16
  %87 = bitcast %"struct.v8::internal::SamplingHeapProfiler::Sample"** %2 to i64*
  %88 = load i64, i64* %87, align 8, !noalias !23
  %89 = bitcast i8* %86 to i64*
  store i64 %88, i64* %89, align 8, !noalias !23
  %90 = getelementptr inbounds i8, i8* %85, i64 24
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.1233", %"class.std::__1::unique_ptr.1233"* %3, i64 0, i32 0, i32 0, i32 0
  %92 = bitcast %"class.std::__1::unique_ptr.1233"* %3 to i64*
  %93 = load i64, i64* %92, align 8, !noalias !23
  store %"struct.v8::internal::SamplingHeapProfiler::Sample"* null, %"struct.v8::internal::SamplingHeapProfiler::Sample"** %91, align 8, !noalias !23
  %94 = bitcast i8* %90 to i64*
  store i64 %93, i64* %94, align 8, !noalias !23
  %95 = getelementptr inbounds i8, i8* %85, i64 8
  %96 = bitcast i8* %95 to i64*
  store i64 %19, i64* %96, align 8, !noalias !23
  %97 = bitcast i8* %85 to %"struct.std::__1::__hash_node_base.1008"**
  store %"struct.std::__1::__hash_node_base.1008"* null, %"struct.std::__1::__hash_node_base.1008"** %97, align 8, !noalias !23
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.1004", %"class.std::__1::__hash_table.1004"* %0, i64 0, i32 2, i32 0, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 1
  %101 = uitofp i64 %100 to float
  %102 = uitofp i64 %21 to float
  %103 = getelementptr inbounds %"class.std::__1::__hash_table.1004", %"class.std::__1::__hash_table.1004"* %0, i64 0, i32 3, i32 0, i32 0
  %104 = load float, float* %103, align 4
  %105 = fmul float %104, %102
  %106 = fcmp olt float %105, %101
  %107 = or i1 %22, %106
  br i1 %107, label %108, label %131

108:                                              ; preds = %83
  %109 = shl i64 %21, 1
  %110 = icmp ult i64 %21, 3
  %111 = tail call i64 @llvm.ctpop.i64(i64 %21) #12, !range !22
  %112 = icmp ugt i64 %111, 1
  %113 = or i1 %110, %112
  %114 = zext i1 %113 to i64
  %115 = or i64 %109, %114
  %116 = fdiv float %101, %104
  %117 = tail call float @llvm.ceil.f32(float %116) #12
  %118 = fptoui float %117 to i64
  %119 = icmp ult i64 %115, %118
  %120 = select i1 %119, i64 %118, i64 %115
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal20SamplingHeapProfiler6SampleENS_10unique_ptrIS5_NS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE6rehashEm(%"class.std::__1::__hash_table.1004"* %0, i64 %120)
  %121 = load i64, i64* %20, align 8
  %122 = tail call i64 @llvm.ctpop.i64(i64 %121) #12, !range !22
  %123 = icmp ugt i64 %122, 1
  br i1 %123, label %127, label %124

124:                                              ; preds = %108
  %125 = add i64 %121, -1
  %126 = and i64 %125, %19
  br label %131

127:                                              ; preds = %108
  %128 = icmp ult i64 %19, %121
  br i1 %128, label %131, label %129

129:                                              ; preds = %127
  %130 = urem i64 %19, %121
  br label %131

131:                                              ; preds = %129, %127, %124, %83
  %132 = phi i64 [ %21, %83 ], [ %121, %124 ], [ %121, %127 ], [ %121, %129 ]
  %133 = phi i64 [ %84, %83 ], [ %126, %124 ], [ %19, %127 ], [ %130, %129 ]
  %134 = getelementptr inbounds %"class.std::__1::__hash_table.1004", %"class.std::__1::__hash_table.1004"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %135 = load %"struct.std::__1::__hash_node_base.1008"**, %"struct.std::__1::__hash_node_base.1008"*** %134, align 8
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %135, i64 %133
  %137 = load %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %136, align 8
  %138 = icmp eq %"struct.std::__1::__hash_node_base.1008"* %137, null
  br i1 %138, label %139, label %165

139:                                              ; preds = %131
  %140 = getelementptr inbounds %"class.std::__1::__hash_table.1004", %"class.std::__1::__hash_table.1004"* %0, i64 0, i32 1, i32 0, i32 0
  %141 = bitcast %"struct.std::__1::__hash_node_base.1008"* %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast i8* %85 to i64*
  store i64 %142, i64* %143, align 8
  %144 = bitcast %"struct.std::__1::__hash_node_base.1008"* %140 to i8**
  store i8* %85, i8** %144, align 8
  store %"struct.std::__1::__hash_node_base.1008"* %140, %"struct.std::__1::__hash_node_base.1008"** %136, align 8
  %145 = load %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %97, align 8
  %146 = icmp eq %"struct.std::__1::__hash_node_base.1008"* %145, null
  br i1 %146, label %172, label %147

147:                                              ; preds = %139
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %145, i64 1
  %149 = bitcast %"struct.std::__1::__hash_node_base.1008"* %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = tail call i64 @llvm.ctpop.i64(i64 %132) #12, !range !22
  %152 = icmp ugt i64 %151, 1
  br i1 %152, label %156, label %153

153:                                              ; preds = %147
  %154 = add i64 %132, -1
  %155 = and i64 %150, %154
  br label %160

156:                                              ; preds = %147
  %157 = icmp ult i64 %150, %132
  br i1 %157, label %160, label %158

158:                                              ; preds = %156
  %159 = urem i64 %150, %132
  br label %160

160:                                              ; preds = %153, %156, %158
  %161 = phi i64 [ %155, %153 ], [ %159, %158 ], [ %150, %156 ]
  %162 = load %"struct.std::__1::__hash_node_base.1008"**, %"struct.std::__1::__hash_node_base.1008"*** %134, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %162, i64 %161
  %164 = bitcast %"struct.std::__1::__hash_node_base.1008"** %163 to i8**
  br label %170

165:                                              ; preds = %131
  %166 = bitcast %"struct.std::__1::__hash_node_base.1008"* %137 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = bitcast i8* %85 to i64*
  store i64 %167, i64* %168, align 8
  %169 = bitcast %"struct.std::__1::__hash_node_base.1008"* %137 to i8**
  br label %170

170:                                              ; preds = %160, %165
  %171 = phi i8** [ %169, %165 ], [ %164, %160 ]
  store i8* %85, i8** %171, align 8
  br label %172

172:                                              ; preds = %170, %139
  %173 = bitcast i8* %85 to %"struct.std::__1::__hash_node_base.1008"*
  %174 = load i64, i64* %98, align 8
  %175 = add i64 %174, 1
  store i64 %175, i64* %98, align 8
  br label %176

176:                                              ; preds = %78, %60, %172
  %177 = phi i8 [ 1, %172 ], [ 0, %60 ], [ 0, %78 ]
  %178 = phi %"struct.std::__1::__hash_node_base.1008"* [ %173, %172 ], [ %46, %60 ], [ %68, %78 ]
  %179 = insertvalue { %"struct.std::__1::__hash_node_base.1008"*, i8 } undef, %"struct.std::__1::__hash_node_base.1008"* %178, 0
  %180 = insertvalue { %"struct.std::__1::__hash_node_base.1008"*, i8 } %179, i8 %177, 1
  ret { %"struct.std::__1::__hash_node_base.1008"*, i8 } %180
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal20SamplingHeapProfiler6SampleENS_10unique_ptrIS5_NS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE6rehashEm(%"class.std::__1::__hash_table.1004"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !22
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1004", %"class.std::__1::__hash_table.1004"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal20SamplingHeapProfiler6SampleENS_10unique_ptrIS5_NS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE8__rehashEm(%"class.std::__1::__hash_table.1004"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !22
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1004", %"class.std::__1::__hash_table.1004"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1004", %"class.std::__1::__hash_table.1004"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !22
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal20SamplingHeapProfiler6SampleENS_10unique_ptrIS5_NS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE8__rehashEm(%"class.std::__1::__hash_table.1004"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal20SamplingHeapProfiler6SampleENS_10unique_ptrIS5_NS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE8__rehashEm(%"class.std::__1::__hash_table.1004"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1004", %"class.std::__1::__hash_table.1004"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1004", %"class.std::__1::__hash_table.1004"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1008"**, %"struct.std::__1::__hash_node_base.1008"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1004"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1008"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1008"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1010", %"class.std::__1::__bucket_list_deallocator.1010"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1008"**, %"struct.std::__1::__hash_node_base.1008"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1008"* null, %"struct.std::__1::__hash_node_base.1008"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !26

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1004", %"class.std::__1::__hash_table.1004"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1008"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1008"**, %"struct.std::__1::__hash_node_base.1008"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1008"* null, %"struct.std::__1::__hash_node_base.1008"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1008"**, %"struct.std::__1::__hash_node_base.1008"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1008"* null, %"struct.std::__1::__hash_node_base.1008"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1008"**, %"struct.std::__1::__hash_node_base.1008"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1008"* null, %"struct.std::__1::__hash_node_base.1008"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1008"**, %"struct.std::__1::__hash_node_base.1008"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1008"* null, %"struct.std::__1::__hash_node_base.1008"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1008"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !22
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1008"**, %"struct.std::__1::__hash_node_base.1008"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1008"* %36, %"struct.std::__1::__hash_node_base.1008"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1008"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base.1008"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1008"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1008"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.1008"**, %"struct.std::__1::__hash_node_base.1008"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.1008"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base.1008"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.1008"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base.1008"* %103 to %"struct.v8::internal::SamplingHeapProfiler::Sample"**
  %105 = load %"struct.v8::internal::SamplingHeapProfiler::Sample"*, %"struct.v8::internal::SamplingHeapProfiler::Sample"** %130, align 8
  %106 = load %"struct.v8::internal::SamplingHeapProfiler::Sample"*, %"struct.v8::internal::SamplingHeapProfiler::Sample"** %104, align 8
  %107 = icmp eq %"struct.v8::internal::SamplingHeapProfiler::Sample"* %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base.1008"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base.1008"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base.1008"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base.1008"**, %"struct.std::__1::__hash_node_base.1008"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base.1008"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base.1008"**, %"struct.std::__1::__hash_node_base.1008"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1008"* %80, %"struct.std::__1::__hash_node_base.1008"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.1008"* %82, %"struct.std::__1::__hash_node_base.1008"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base.1008"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base.1008"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base.1008"* %129 to %"struct.v8::internal::SamplingHeapProfiler::Sample"**
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base.1008"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base.1008"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base.1008"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base.1008"**, %"struct.std::__1::__hash_node_base.1008"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.1008"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base.1008"* %146 to %"struct.v8::internal::SamplingHeapProfiler::Sample"**
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base.1008"* %134, %"struct.std::__1::__hash_node_base.1008"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base.1008"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base.1008"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base.1008"* %155 to %"struct.v8::internal::SamplingHeapProfiler::Sample"**
  %157 = load %"struct.v8::internal::SamplingHeapProfiler::Sample"*, %"struct.v8::internal::SamplingHeapProfiler::Sample"** %147, align 8
  %158 = load %"struct.v8::internal::SamplingHeapProfiler::Sample"*, %"struct.v8::internal::SamplingHeapProfiler::Sample"** %156, align 8
  %159 = icmp eq %"struct.v8::internal::SamplingHeapProfiler::Sample"* %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base.1008"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base.1008"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base.1008"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base.1008"**, %"struct.std::__1::__hash_node_base.1008"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base.1008"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base.1008"**, %"struct.std::__1::__hash_node_base.1008"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1008"* %132, %"struct.std::__1::__hash_node_base.1008"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base.1008"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base.1008"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table.1004", %"class.std::__1::__hash_table.1004"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base.1008"**, %"struct.std::__1::__hash_node_base.1008"*** %180, align 8
  store %"struct.std::__1::__hash_node_base.1008"** null, %"struct.std::__1::__hash_node_base.1008"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base.1008"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base.1008"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #14
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1010", %"class.std::__1::__bucket_list_deallocator.1010"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #11

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !2
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %57, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %57
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %57, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %56, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %98
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %99, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %98, %"class.std::__1::__tree_node_base"* %99
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %140, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %138, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %143
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %143, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %142
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %142, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %142, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !2
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %99, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %98, %"class.std::__1::__tree_node_base"* %99
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %274, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %272, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !2
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !2
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %277
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !2
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %276
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %276, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %276, %306 ], [ %276, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !2
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %143, %165 ], [ %277, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN2v88internal20SamplingHeapProfiler14AllocationNodeENS_14default_deleteIS6_EEEEEENS_19__map_value_compareImSA_NS_4lessImEELb1EEENS_9allocatorISA_EEE5eraseENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEE(%"class.std::__1::__tree.995"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %8 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_end_node"**
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  %12 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node_base"* %12, %7
  br i1 %13, label %30, label %21

14:                                               ; preds = %2, %14
  %15 = phi %"class.std::__1::__tree_node_base"* [ %17, %14 ], [ %4, %2 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %14

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0
  br label %30

21:                                               ; preds = %6, %21
  %22 = phi %"class.std::__1::__tree_end_node"** [ %25, %21 ], [ %9, %6 ]
  %23 = bitcast %"class.std::__1::__tree_end_node"** %22 to %"class.std::__1::__tree_node_base"**
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 2
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, %24
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %19, %6
  %31 = phi %"class.std::__1::__tree_end_node"* [ %20, %19 ], [ %10, %6 ], [ %26, %21 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree.995", %"class.std::__1::__tree.995"* %0, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_end_node"* %33, %1
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %31 to i64
  %37 = bitcast %"class.std::__1::__tree.995"* %0 to i64*
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %35
  %39 = getelementptr inbounds %"class.std::__1::__tree.995", %"class.std::__1::__tree.995"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree.995", %"class.std::__1::__tree.995"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %43, %"class.std::__1::__tree_node_base"* %44) #12
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 5
  %46 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"class.v8::internal::SamplingHeapProfiler::AllocationNode"**
  %47 = load %"class.v8::internal::SamplingHeapProfiler::AllocationNode"*, %"class.v8::internal::SamplingHeapProfiler::AllocationNode"** %46, align 8
  store %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* null, %"class.v8::internal::SamplingHeapProfiler::AllocationNode"** %46, align 8
  %48 = icmp eq %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %47, i64 0, i32 1, i32 0
  %51 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %47, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_end_node"* %51 to %"class.std::__1::__tree_node"**
  %53 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %52, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN2v88internal20SamplingHeapProfiler14AllocationNodeENS_14default_deleteIS6_EEEEEENS_19__map_value_compareImSA_NS_4lessImEELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.995"* %50, %"class.std::__1::__tree_node"* %53) #12
  %54 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %47, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.v8::internal::SamplingHeapProfiler::AllocationNode", %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %47, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %56 = bitcast %"class.std::__1::__tree_end_node"* %55 to %"class.std::__1::__tree_node.1312"**
  %57 = load %"class.std::__1::__tree_node.1312"*, %"class.std::__1::__tree_node.1312"** %56, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImjEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.986"* %54, %"class.std::__1::__tree_node.1312"* %57) #12
  %58 = bitcast %"class.v8::internal::SamplingHeapProfiler::AllocationNode"* %47 to i8*
  tail call void @_ZdlPv(i8* %58) #14
  br label %59

59:                                               ; preds = %38, %49
  %60 = bitcast %"class.std::__1::__tree_end_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %60) #14
  ret %"class.std::__1::__tree_end_node"* %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.1008"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal20SamplingHeapProfiler6SampleENS_10unique_ptrIS5_NS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE4findIS6_EENS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEERKT_(%"class.std::__1::__hash_table.1004"*, %"struct.v8::internal::SamplingHeapProfiler::Sample"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.v8::internal::SamplingHeapProfiler::Sample"** %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 32
  %6 = shl i64 %4, 3
  %7 = and i64 %6, 4294967288
  %8 = add nuw nsw i64 %7, 8
  %9 = xor i64 %8, %5
  %10 = mul i64 %9, -7070675565921424023
  %11 = lshr i64 %10, 47
  %12 = xor i64 %10, %5
  %13 = xor i64 %12, %11
  %14 = mul i64 %13, -7070675565921424023
  %15 = lshr i64 %14, 47
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = getelementptr inbounds %"class.std::__1::__hash_table.1004", %"class.std::__1::__hash_table.1004"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  %21 = inttoptr i64 %4 to %"struct.v8::internal::SamplingHeapProfiler::Sample"*
  br i1 %20, label %85, label %22

22:                                               ; preds = %2
  %23 = tail call i64 @llvm.ctpop.i64(i64 %19) #12, !range !22
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %19, -1
  %27 = and i64 %17, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %17, %19
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %17, %19
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %17, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.1004", %"class.std::__1::__hash_table.1004"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.1008"**, %"struct.std::__1::__hash_node_base.1008"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.1008"* %37, null
  br i1 %38, label %85, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %37, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.1008"* %41, null
  br i1 %42, label %85, label %43

43:                                               ; preds = %39
  %44 = add i64 %19, -1
  br i1 %24, label %45, label %67

45:                                               ; preds = %43, %63
  %46 = phi %"struct.std::__1::__hash_node_base.1008"* [ %65, %63 ], [ %41, %43 ]
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %46, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.1008"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %17
  br i1 %50, label %58, label %51

51:                                               ; preds = %45
  %52 = icmp ult i64 %49, %19
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = urem i64 %49, %19
  br label %55

55:                                               ; preds = %53, %51
  %56 = phi i64 [ %54, %53 ], [ %49, %51 ]
  %57 = icmp eq i64 %56, %33
  br i1 %57, label %63, label %85

58:                                               ; preds = %45
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %46, i64 2
  %60 = bitcast %"struct.std::__1::__hash_node_base.1008"* %59 to %"struct.v8::internal::SamplingHeapProfiler::Sample"**
  %61 = load %"struct.v8::internal::SamplingHeapProfiler::Sample"*, %"struct.v8::internal::SamplingHeapProfiler::Sample"** %60, align 8
  %62 = icmp eq %"struct.v8::internal::SamplingHeapProfiler::Sample"* %61, %21
  br i1 %62, label %85, label %63

63:                                               ; preds = %58, %55
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %46, i64 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %64, align 8
  %66 = icmp eq %"struct.std::__1::__hash_node_base.1008"* %65, null
  br i1 %66, label %85, label %45

67:                                               ; preds = %43, %81
  %68 = phi %"struct.std::__1::__hash_node_base.1008"* [ %83, %81 ], [ %41, %43 ]
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %68, i64 1
  %70 = bitcast %"struct.std::__1::__hash_node_base.1008"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, %17
  br i1 %72, label %76, label %73

73:                                               ; preds = %67
  %74 = and i64 %71, %44
  %75 = icmp eq i64 %74, %33
  br i1 %75, label %81, label %85

76:                                               ; preds = %67
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %68, i64 2
  %78 = bitcast %"struct.std::__1::__hash_node_base.1008"* %77 to %"struct.v8::internal::SamplingHeapProfiler::Sample"**
  %79 = load %"struct.v8::internal::SamplingHeapProfiler::Sample"*, %"struct.v8::internal::SamplingHeapProfiler::Sample"** %78, align 8
  %80 = icmp eq %"struct.v8::internal::SamplingHeapProfiler::Sample"* %79, %21
  br i1 %80, label %85, label %81

81:                                               ; preds = %73, %76
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %68, i64 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.1008"* %83, null
  br i1 %84, label %85, label %67

85:                                               ; preds = %76, %81, %73, %58, %63, %55, %39, %2, %32
  %86 = phi %"struct.std::__1::__hash_node_base.1008"* [ null, %32 ], [ null, %2 ], [ null, %39 ], [ %46, %58 ], [ null, %63 ], [ null, %55 ], [ %68, %76 ], [ null, %81 ], [ null, %73 ]
  ret %"struct.std::__1::__hash_node_base.1008"* %86
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal20SamplingHeapProfiler6SampleENS_10unique_ptrIS5_NS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISB_PvEEEE(%"class.std::__1::unique_ptr.1348"* noalias sret, %"class.std::__1::__hash_table.1004"*, %"struct.std::__1::__hash_node_base.1008"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.1004", %"class.std::__1::__hash_table.1004"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.1008"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #12, !range !22
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.1004", %"class.std::__1::__hash_table.1004"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.1008"**, %"struct.std::__1::__hash_node_base.1008"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.1008"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.1008"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.1004", %"class.std::__1::__hash_table.1004"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.1015", %"class.std::__1::__compressed_pair.1015"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base.1008"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.1008"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.1008"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.1008"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base.1008"* null, %"struct.std::__1::__hash_node_base.1008"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.1008"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base.1008"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008", %"struct.std::__1::__hash_node_base.1008"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.1008"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base.1008"**, %"struct.std::__1::__hash_node_base.1008"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1008"*, %"struct.std::__1::__hash_node_base.1008"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base.1008"* %25, %"struct.std::__1::__hash_node_base.1008"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base.1008"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base.1008"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base.1008"* null, %"struct.std::__1::__hash_node_base.1008"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.1004", %"class.std::__1::__hash_table.1004"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.1008"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.1348"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1348", %"class.std::__1::unique_ptr.1348"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.1018"** %98 to %"class.std::__1::__compressed_pair.1015"**
  store %"class.std::__1::__compressed_pair.1015"* %30, %"class.std::__1::__compressed_pair.1015"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.1348", %"class.std::__1::unique_ptr.1348"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__13mapIiN2v88internal6HandleINS2_6ScriptEEENS_4lessIiEENS_9allocatorINS_4pairIKiS5_EEEEE6insertINS_20__map_const_iteratorINS_21__tree_const_iteratorINS_12__value_typeIiS5_EEPNS_11__tree_nodeISI_PvEElEEEEEEvT_SP_(%"class.std::__1::map.1290"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %5 = alloca %"class.std::__1::__tree_node_base"*, align 8
  %6 = getelementptr inbounds %"class.std::__1::map.1290", %"class.std::__1::map.1290"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = icmp eq %"class.std::__1::__tree_end_node"* %1, %2
  br i1 %7, label %17, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::map.1290", %"class.std::__1::map.1290"* %0, i64 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"** %4 to i8*
  %11 = bitcast %"class.std::__1::__tree_node_base"** %5 to i8*
  %12 = bitcast %"class.std::__1::__tree_end_node"** %4 to i64*
  %13 = getelementptr inbounds %"class.std::__1::map.1290", %"class.std::__1::map.1290"* %0, i64 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::map.1290"* %0 to i64*
  %15 = getelementptr inbounds %"class.std::__1::map.1290", %"class.std::__1::map.1290"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::map.1290", %"class.std::__1::map.1290"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %18

17:                                               ; preds = %75, %3
  ret void

18:                                               ; preds = %8, %75
  %19 = phi %"class.std::__1::__tree_end_node"* [ %1, %8 ], [ %76, %75 ]
  %20 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 4
  %21 = bitcast %"class.std::__1::__tree_end_node"* %20 to i32*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %22 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeIiN2v88internal6HandleINS3_6ScriptEEEEENS_19__map_value_compareIiS7_NS_4lessIiEELb1EEENS_9allocatorIS7_EEE12__find_equalIiEERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_SH_EElEERPNS_15__tree_end_nodeISJ_EESK_RKT_(%"class.std::__1::__tree.1291"* %9, %"class.std::__1::__tree_end_node"* %6, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %4, %"class.std::__1::__tree_node_base"** nonnull dereferenceable(8) %5, i32* dereferenceable(4) %21) #12
  %23 = bitcast %"class.std::__1::__tree_node_base"** %22 to %"class.std::__1::__tree_node.1362"**
  %24 = load %"class.std::__1::__tree_node.1362"*, %"class.std::__1::__tree_node.1362"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_node.1362"* %24, null
  br i1 %25, label %26, label %47

26:                                               ; preds = %18
  %27 = call i8* @_Znwm(i64 48) #14, !noalias !28
  %28 = getelementptr inbounds i8, i8* %27, i64 32
  %29 = bitcast %"class.std::__1::__tree_end_node"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 16, i1 false) #12, !noalias !28
  %30 = load i64, i64* %12, align 8
  %31 = bitcast i8* %27 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds i8, i8* %27, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 16, i1 false) #12
  %33 = bitcast i8* %32 to i64*
  store i64 %30, i64* %33, align 8
  %34 = bitcast %"class.std::__1::__tree_node_base"** %22 to i8**
  store i8* %27, i8** %34, align 8
  %35 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %13, align 8
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 0, i32 0
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = icmp eq %"class.std::__1::__tree_node_base"* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %26
  %40 = ptrtoint %"class.std::__1::__tree_node_base"* %37 to i64
  store i64 %40, i64* %14, align 8
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  br label %42

42:                                               ; preds = %39, %26
  %43 = phi %"class.std::__1::__tree_node_base"* [ %31, %26 ], [ %41, %39 ]
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %44, %"class.std::__1::__tree_node_base"* %43) #12
  %45 = load i64, i64* %16, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %16, align 8
  br label %47

47:                                               ; preds = %18, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  %48 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 1, i32 0
  %49 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  %50 = icmp eq %"class.std::__1::__tree_node_base"* %49, null
  br i1 %50, label %51, label %59

51:                                               ; preds = %47
  %52 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node_base"*
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 2
  %54 = bitcast %"class.std::__1::__tree_end_node"* %53 to %"class.std::__1::__tree_end_node"**
  %55 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 0, i32 0
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, %52
  br i1 %58, label %75, label %66

59:                                               ; preds = %47, %59
  %60 = phi %"class.std::__1::__tree_node_base"* [ %62, %59 ], [ %49, %47 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %64, label %59

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 0
  br label %75

66:                                               ; preds = %51, %66
  %67 = phi %"class.std::__1::__tree_end_node"** [ %70, %66 ], [ %54, %51 ]
  %68 = bitcast %"class.std::__1::__tree_end_node"** %67 to %"class.std::__1::__tree_node_base"**
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  %71 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %71, i64 0, i32 0
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node_base"* %73, %69
  br i1 %74, label %75, label %66

75:                                               ; preds = %66, %51, %64
  %76 = phi %"class.std::__1::__tree_end_node"* [ %65, %64 ], [ %55, %51 ], [ %71, %66 ]
  %77 = icmp eq %"class.std::__1::__tree_end_node"* %76, %2
  br i1 %77, label %17, label %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeIiN2v88internal6HandleINS3_6ScriptEEEEENS_19__map_value_compareIiS7_NS_4lessIiEELb1EEENS_9allocatorIS7_EEE12__find_equalIiEERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_SH_EElEERPNS_15__tree_end_nodeISJ_EESK_RKT_(%"class.std::__1::__tree.1291"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::__tree_node_base"** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %6 = ptrtoint %"class.std::__1::__tree_end_node"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::__tree.1291", %"class.std::__1::__tree.1291"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %7, %1
  br i1 %8, label %15, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to i32*
  %12 = load i32, i32* %4, align 4
  %13 = load i32, i32* %11, align 4
  %14 = icmp slt i32 %12, %13
  br i1 %14, label %15, label %90

15:                                               ; preds = %5, %9
  %16 = getelementptr inbounds %"class.std::__1::__tree.1291", %"class.std::__1::__tree.1291"* %0, i64 0, i32 0
  %17 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_end_node"* %17, %1
  %19 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  %20 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %19, align 8
  br i1 %18, label %47, label %21

21:                                               ; preds = %15
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %21, %23
  %24 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ %20, %21 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 1
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, null
  br i1 %27, label %39, label %23

28:                                               ; preds = %21, %28
  %29 = phi %"class.std::__1::__tree_end_node"* [ %33, %28 ], [ %1, %21 ]
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_node_base"*
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %29, i64 2
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.std::__1::__tree_end_node"**
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 0, i32 0
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, %30
  br i1 %36, label %28, label %37

37:                                               ; preds = %28
  %38 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_node_base"*
  br label %39

39:                                               ; preds = %23, %37
  %40 = phi %"class.std::__1::__tree_node_base"* [ %38, %37 ], [ %24, %23 ]
  %41 = ptrtoint %"class.std::__1::__tree_node_base"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 1
  %43 = bitcast %"class.std::__1::__tree_node_base"* %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = load i32, i32* %4, align 4
  %46 = icmp slt i32 %44, %45
  br i1 %46, label %47, label %56

47:                                               ; preds = %15, %39
  %48 = phi i64 [ %41, %39 ], [ %6, %15 ]
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

52:                                               ; preds = %47
  %53 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %48, i64* %53, align 8
  %54 = inttoptr i64 %48 to %"class.std::__1::__tree_node_base"*
  %55 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %54, i64 0, i32 1
  br label %170

56:                                               ; preds = %39
  %57 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node.1362"**
  %58 = load %"class.std::__1::__tree_node.1362"*, %"class.std::__1::__tree_node.1362"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node.1362"* %58, null
  br i1 %59, label %88, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.std::__1::__tree.1291", %"class.std::__1::__tree.1291"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %62

62:                                               ; preds = %84, %60
  %63 = phi %"class.std::__1::__tree_node.1362"* [ %87, %84 ], [ %58, %60 ]
  %64 = phi %"class.std::__1::__tree_node_base"** [ %86, %84 ], [ %61, %60 ]
  %65 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %63, i64 0, i32 1, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp slt i32 %45, %66
  br i1 %67, label %68, label %74

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %63, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node_base"* %70, null
  br i1 %71, label %72, label %84

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %63, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %73, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

74:                                               ; preds = %62
  %75 = icmp slt i32 %66, %45
  br i1 %75, label %76, label %82

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %63, i64 0, i32 0, i32 1
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  %79 = icmp eq %"class.std::__1::__tree_node_base"* %78, null
  br i1 %79, label %80, label %84

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %63, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %81, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %63, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %83, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

84:                                               ; preds = %76, %68
  %85 = phi %"class.std::__1::__tree_node_base"* [ %70, %68 ], [ %78, %76 ]
  %86 = phi %"class.std::__1::__tree_node_base"** [ %69, %68 ], [ %77, %76 ]
  %87 = bitcast %"class.std::__1::__tree_node_base"* %85 to %"class.std::__1::__tree_node.1362"*
  br label %62

88:                                               ; preds = %56
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %2, align 8
  %89 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  br label %170

90:                                               ; preds = %9
  %91 = icmp slt i32 %13, %12
  br i1 %91, label %92, label %167

92:                                               ; preds = %90
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  %95 = icmp eq %"class.std::__1::__tree_node_base"* %94, null
  br i1 %95, label %96, label %104

96:                                               ; preds = %92
  %97 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %99 = bitcast %"class.std::__1::__tree_end_node"* %98 to %"class.std::__1::__tree_end_node"**
  %100 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %99, align 8
  %101 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %100, i64 0, i32 0
  %102 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %101, align 8
  %103 = icmp eq %"class.std::__1::__tree_node_base"* %102, %97
  br i1 %103, label %120, label %111

104:                                              ; preds = %92, %104
  %105 = phi %"class.std::__1::__tree_node_base"* [ %107, %104 ], [ %94, %92 ]
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %105, i64 0, i32 0, i32 0
  %107 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %106, align 8
  %108 = icmp eq %"class.std::__1::__tree_node_base"* %107, null
  br i1 %108, label %109, label %104

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %105, i64 0, i32 0
  br label %120

111:                                              ; preds = %96, %111
  %112 = phi %"class.std::__1::__tree_end_node"** [ %115, %111 ], [ %99, %96 ]
  %113 = bitcast %"class.std::__1::__tree_end_node"** %112 to %"class.std::__1::__tree_node_base"**
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  %115 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %114, i64 0, i32 2
  %116 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %115, align 8
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %116, i64 0, i32 0
  %118 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  %119 = icmp eq %"class.std::__1::__tree_node_base"* %118, %114
  br i1 %119, label %120, label %111

120:                                              ; preds = %111, %109, %96
  %121 = phi %"class.std::__1::__tree_end_node"* [ %110, %109 ], [ %100, %96 ], [ %116, %111 ]
  %122 = icmp eq %"class.std::__1::__tree_end_node"* %121, %7
  br i1 %122, label %128, label %123

123:                                              ; preds = %120
  %124 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %121, i64 4
  %125 = bitcast %"class.std::__1::__tree_end_node"* %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = icmp slt i32 %12, %126
  br i1 %127, label %128, label %133

128:                                              ; preds = %120, %123
  br i1 %95, label %129, label %131

129:                                              ; preds = %128
  %130 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %130, align 8
  br label %170

131:                                              ; preds = %128
  store %"class.std::__1::__tree_end_node"* %121, %"class.std::__1::__tree_end_node"** %2, align 8
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %121, i64 0, i32 0
  br label %170

133:                                              ; preds = %123
  %134 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node.1362"**
  %135 = load %"class.std::__1::__tree_node.1362"*, %"class.std::__1::__tree_node.1362"** %134, align 8
  %136 = icmp eq %"class.std::__1::__tree_node.1362"* %135, null
  br i1 %136, label %165, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.std::__1::__tree.1291", %"class.std::__1::__tree.1291"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %139

139:                                              ; preds = %161, %137
  %140 = phi %"class.std::__1::__tree_node.1362"* [ %164, %161 ], [ %135, %137 ]
  %141 = phi %"class.std::__1::__tree_node_base"** [ %163, %161 ], [ %138, %137 ]
  %142 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %140, i64 0, i32 1, i32 0, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = icmp slt i32 %12, %143
  br i1 %144, label %145, label %151

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %140, i64 0, i32 0, i32 0, i32 0
  %147 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %146, align 8
  %148 = icmp eq %"class.std::__1::__tree_node_base"* %147, null
  br i1 %148, label %149, label %161

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %140, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %150, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

151:                                              ; preds = %139
  %152 = icmp slt i32 %143, %12
  br i1 %152, label %153, label %159

153:                                              ; preds = %151
  %154 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %140, i64 0, i32 0, i32 1
  %155 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %154, align 8
  %156 = icmp eq %"class.std::__1::__tree_node_base"* %155, null
  br i1 %156, label %157, label %161

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %140, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %158, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

159:                                              ; preds = %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %140, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %160, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

161:                                              ; preds = %153, %145
  %162 = phi %"class.std::__1::__tree_node_base"* [ %147, %145 ], [ %155, %153 ]
  %163 = phi %"class.std::__1::__tree_node_base"** [ %146, %145 ], [ %154, %153 ]
  %164 = bitcast %"class.std::__1::__tree_node_base"* %162 to %"class.std::__1::__tree_node.1362"*
  br label %139

165:                                              ; preds = %133
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %2, align 8
  %166 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  br label %170

167:                                              ; preds = %90
  %168 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %168, align 8
  %169 = bitcast %"class.std::__1::__tree_node_base"** %3 to i64*
  store i64 %6, i64* %169, align 8
  br label %170

170:                                              ; preds = %129, %131, %149, %157, %159, %165, %50, %52, %72, %80, %82, %88, %167
  %171 = phi %"class.std::__1::__tree_node_base"** [ %3, %167 ], [ %51, %50 ], [ %55, %52 ], [ %69, %72 ], [ %77, %80 ], [ %64, %82 ], [ %89, %88 ], [ %93, %129 ], [ %132, %131 ], [ %146, %149 ], [ %154, %157 ], [ %141, %159 ], [ %166, %165 ]
  ret %"class.std::__1::__tree_node_base"** %171
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIiN2v88internal6HandleINS3_6ScriptEEEEENS_19__map_value_compareIiS7_NS_4lessIiEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.1291"*, %"class.std::__1::__tree_node.1362"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1362"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1362"* %1 to %"class.std::__1::__tree_node.1362"**
  %6 = load %"class.std::__1::__tree_node.1362"*, %"class.std::__1::__tree_node.1362"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiN2v88internal6HandleINS3_6ScriptEEEEENS_19__map_value_compareIiS7_NS_4lessIiEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.1291"* %0, %"class.std::__1::__tree_node.1362"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1362", %"class.std::__1::__tree_node.1362"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1362"**
  %9 = load %"class.std::__1::__tree_node.1362"*, %"class.std::__1::__tree_node.1362"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiN2v88internal6HandleINS3_6ScriptEEEEENS_19__map_value_compareIiS7_NS_4lessIiEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.1291"* %0, %"class.std::__1::__tree_node.1362"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node.1362"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN2v817AllocationProfile4NodeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.1276"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.v8::AllocationProfile::Node"*, align 8
  %3 = alloca %"struct.v8::AllocationProfile::Node"*, align 8
  %4 = getelementptr inbounds %"class.std::__1::deque.1276", %"class.std::__1::deque.1276"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, 45
  br i1 %6, label %7, label %161

7:                                                ; preds = %1
  %8 = add i64 %5, -46
  store i64 %8, i64* %4, align 8
  %9 = getelementptr inbounds %"class.std::__1::deque.1276", %"class.std::__1::deque.1276"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %9, align 8
  %11 = bitcast %"struct.v8::AllocationProfile::Node"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %10, i64 1
  store %"struct.v8::AllocationProfile::Node"** %13, %"struct.v8::AllocationProfile::Node"*** %9, align 8
  %14 = getelementptr inbounds %"class.std::__1::deque.1276", %"class.std::__1::deque.1276"* %0, i64 0, i32 0, i32 0, i32 2
  %15 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::deque.1276", %"class.std::__1::deque.1276"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %16, align 8
  %18 = icmp eq %"struct.v8::AllocationProfile::Node"** %15, %17
  %19 = ptrtoint %"struct.v8::AllocationProfile::Node"** %17 to i64
  %20 = bitcast %"struct.v8::AllocationProfile::Node"** %15 to i64*
  br i1 %18, label %21, label %157

21:                                               ; preds = %7
  %22 = getelementptr inbounds %"class.std::__1::deque.1276", %"class.std::__1::deque.1276"* %0, i64 0, i32 0, i32 0, i32 0
  %23 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %22, align 8
  %24 = icmp ugt %"struct.v8::AllocationProfile::Node"** %13, %23
  %25 = ptrtoint %"struct.v8::AllocationProfile::Node"** %23 to i64
  br i1 %24, label %26, label %46

26:                                               ; preds = %21
  %27 = ptrtoint %"struct.v8::AllocationProfile::Node"** %13 to i64
  %28 = sub i64 %27, %25
  %29 = ashr exact i64 %28, 3
  %30 = add nsw i64 %29, 1
  %31 = sdiv i64 %30, -2
  %32 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %13, i64 %31
  %33 = ptrtoint %"struct.v8::AllocationProfile::Node"** %15 to i64
  %34 = sub i64 %33, %27
  %35 = ashr exact i64 %34, 3
  %36 = icmp eq i64 %34, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %26
  %38 = bitcast %"struct.v8::AllocationProfile::Node"** %32 to i8*
  %39 = bitcast %"struct.v8::AllocationProfile::Node"** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 %34, i1 false) #12
  %40 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %9, align 8
  br label %41

41:                                               ; preds = %37, %26
  %42 = phi %"struct.v8::AllocationProfile::Node"** [ %13, %26 ], [ %40, %37 ]
  %43 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %32, i64 %35
  store %"struct.v8::AllocationProfile::Node"** %43, %"struct.v8::AllocationProfile::Node"*** %14, align 8
  %44 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %42, i64 %31
  store %"struct.v8::AllocationProfile::Node"** %44, %"struct.v8::AllocationProfile::Node"*** %9, align 8
  %45 = bitcast %"struct.v8::AllocationProfile::Node"** %43 to i64*
  br label %157

46:                                               ; preds = %21
  %47 = bitcast %"struct.v8::AllocationProfile::Node"*** %16 to i64*
  %48 = bitcast %"class.std::__1::deque.1276"* %0 to i64*
  %49 = sub i64 %19, %25
  %50 = ashr exact i64 %49, 2
  %51 = icmp eq i64 %49, 0
  %52 = select i1 %51, i64 1, i64 %50
  %53 = icmp ugt i64 %52, 2305843009213693951
  br i1 %53, label %54, label %55

54:                                               ; preds = %46
  tail call void @abort() #13
  unreachable

55:                                               ; preds = %46
  %56 = lshr i64 %52, 2
  %57 = shl i64 %52, 3
  %58 = tail call i8* @_Znwm(i64 %57) #14
  %59 = bitcast i8* %58 to %"struct.v8::AllocationProfile::Node"**
  %60 = ptrtoint i8* %58 to i64
  %61 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %59, i64 %56
  %62 = ptrtoint %"struct.v8::AllocationProfile::Node"** %61 to i64
  %63 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %59, i64 %52
  %64 = ptrtoint %"struct.v8::AllocationProfile::Node"** %63 to i64
  %65 = ptrtoint %"struct.v8::AllocationProfile::Node"** %13 to i64
  %66 = ptrtoint %"struct.v8::AllocationProfile::Node"** %15 to i64
  %67 = sub i64 %66, %65
  %68 = ashr exact i64 %67, 3
  %69 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %61, i64 %68
  %70 = icmp eq i64 %67, 0
  br i1 %70, label %146, label %71

71:                                               ; preds = %55
  %72 = add i64 %67, -8
  %73 = lshr i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 7
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %92, label %77

77:                                               ; preds = %71, %77
  %78 = phi %"struct.v8::AllocationProfile::Node"** [ %85, %77 ], [ %61, %71 ]
  %79 = phi i64 [ %86, %77 ], [ %62, %71 ]
  %80 = phi %"struct.v8::AllocationProfile::Node"** [ %87, %77 ], [ %13, %71 ]
  %81 = phi i64 [ %88, %77 ], [ %75, %71 ]
  %82 = bitcast %"struct.v8::AllocationProfile::Node"** %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = inttoptr i64 %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %78, i64 1
  %86 = ptrtoint %"struct.v8::AllocationProfile::Node"** %85 to i64
  %87 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %80, i64 1
  %88 = add i64 %81, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %77, !llvm.loop !31

90:                                               ; preds = %77
  %91 = ptrtoint %"struct.v8::AllocationProfile::Node"** %85 to i64
  br label %92

92:                                               ; preds = %71, %90
  %93 = phi %"struct.v8::AllocationProfile::Node"** [ %61, %71 ], [ %85, %90 ]
  %94 = phi i64 [ %62, %71 ], [ %91, %90 ]
  %95 = phi %"struct.v8::AllocationProfile::Node"** [ %13, %71 ], [ %87, %90 ]
  %96 = icmp ult i64 %72, 56
  br i1 %96, label %143, label %97

97:                                               ; preds = %92, %97
  %98 = phi %"struct.v8::AllocationProfile::Node"** [ %139, %97 ], [ %93, %92 ]
  %99 = phi i64 [ %140, %97 ], [ %94, %92 ]
  %100 = phi %"struct.v8::AllocationProfile::Node"** [ %141, %97 ], [ %95, %92 ]
  %101 = bitcast %"struct.v8::AllocationProfile::Node"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = inttoptr i64 %99 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %98, i64 1
  %105 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %100, i64 1
  %106 = bitcast %"struct.v8::AllocationProfile::Node"** %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"struct.v8::AllocationProfile::Node"** %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %98, i64 2
  %110 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %100, i64 2
  %111 = bitcast %"struct.v8::AllocationProfile::Node"** %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %"struct.v8::AllocationProfile::Node"** %109 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %98, i64 3
  %115 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %100, i64 3
  %116 = bitcast %"struct.v8::AllocationProfile::Node"** %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"struct.v8::AllocationProfile::Node"** %114 to i64*
  store i64 %117, i64* %118, align 8
  %119 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %98, i64 4
  %120 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %100, i64 4
  %121 = bitcast %"struct.v8::AllocationProfile::Node"** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast %"struct.v8::AllocationProfile::Node"** %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %98, i64 5
  %125 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %100, i64 5
  %126 = bitcast %"struct.v8::AllocationProfile::Node"** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"struct.v8::AllocationProfile::Node"** %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %98, i64 6
  %130 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %100, i64 6
  %131 = bitcast %"struct.v8::AllocationProfile::Node"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"struct.v8::AllocationProfile::Node"** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %98, i64 7
  %135 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %100, i64 7
  %136 = bitcast %"struct.v8::AllocationProfile::Node"** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"struct.v8::AllocationProfile::Node"** %134 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %98, i64 8
  %140 = ptrtoint %"struct.v8::AllocationProfile::Node"** %139 to i64
  %141 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %100, i64 8
  %142 = icmp eq %"struct.v8::AllocationProfile::Node"** %69, %139
  br i1 %142, label %143, label %97

143:                                              ; preds = %97, %92
  %144 = ptrtoint %"struct.v8::AllocationProfile::Node"** %69 to i64
  %145 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %22, align 8
  br label %146

146:                                              ; preds = %143, %55
  %147 = phi %"struct.v8::AllocationProfile::Node"** [ %145, %143 ], [ %23, %55 ]
  %148 = phi i64 [ %144, %143 ], [ %62, %55 ]
  store i64 %60, i64* %48, align 8
  %149 = bitcast %"struct.v8::AllocationProfile::Node"*** %9 to i64*
  store i64 %62, i64* %149, align 8
  %150 = bitcast %"struct.v8::AllocationProfile::Node"*** %14 to i64*
  store i64 %148, i64* %150, align 8
  store i64 %64, i64* %47, align 8
  %151 = icmp eq %"struct.v8::AllocationProfile::Node"** %147, null
  %152 = inttoptr i64 %148 to i64*
  br i1 %151, label %157, label %153

153:                                              ; preds = %146
  %154 = bitcast %"struct.v8::AllocationProfile::Node"** %147 to i8*
  tail call void @_ZdlPv(i8* %154) #14
  %155 = bitcast %"struct.v8::AllocationProfile::Node"*** %14 to i64**
  %156 = load i64*, i64** %155, align 8
  br label %157

157:                                              ; preds = %7, %41, %146, %153
  %158 = phi i64* [ %156, %153 ], [ %152, %146 ], [ %45, %41 ], [ %20, %7 ]
  store i64 %12, i64* %158, align 8
  %159 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %14, align 8
  %160 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %159, i64 1
  store %"struct.v8::AllocationProfile::Node"** %160, %"struct.v8::AllocationProfile::Node"*** %14, align 8
  br label %549

161:                                              ; preds = %1
  %162 = getelementptr inbounds %"class.std::__1::deque.1276", %"class.std::__1::deque.1276"* %0, i64 0, i32 0, i32 0
  %163 = getelementptr inbounds %"class.std::__1::deque.1276", %"class.std::__1::deque.1276"* %0, i64 0, i32 0, i32 0, i32 2
  %164 = bitcast %"struct.v8::AllocationProfile::Node"*** %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"class.std::__1::deque.1276", %"class.std::__1::deque.1276"* %0, i64 0, i32 0, i32 0, i32 1
  %167 = bitcast %"struct.v8::AllocationProfile::Node"*** %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = sub i64 %165, %168
  %170 = ashr exact i64 %169, 3
  %171 = getelementptr inbounds %"class.std::__1::deque.1276", %"class.std::__1::deque.1276"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %172 = bitcast %"struct.v8::AllocationProfile::Node"*** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.std::__1::deque.1276"* %0 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = sub i64 %173, %175
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %170, %177
  %179 = inttoptr i64 %165 to %"struct.v8::AllocationProfile::Node"**
  %180 = inttoptr i64 %168 to %"struct.v8::AllocationProfile::Node"**
  br i1 %178, label %181, label %336

181:                                              ; preds = %161
  %182 = icmp eq i64 %173, %165
  br i1 %182, label %187, label %183

183:                                              ; preds = %181
  %184 = bitcast %"struct.v8::AllocationProfile::Node"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184) #12
  %185 = tail call i8* @_Znwm(i64 4048) #14
  %186 = bitcast %"struct.v8::AllocationProfile::Node"** %2 to i8**
  store i8* %185, i8** %186, align 8
  call void @_ZNSt3__114__split_bufferIPN2v817AllocationProfile4NodeENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer.1278"* %162, %"struct.v8::AllocationProfile::Node"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #12
  br label %549

187:                                              ; preds = %181
  %188 = bitcast %"struct.v8::AllocationProfile::Node"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %188) #12
  %189 = tail call i8* @_Znwm(i64 4048) #14
  %190 = bitcast %"struct.v8::AllocationProfile::Node"** %3 to i8**
  store i8* %189, i8** %190, align 8
  call void @_ZNSt3__114__split_bufferIPN2v817AllocationProfile4NodeENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer.1278"* %162, %"struct.v8::AllocationProfile::Node"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %188) #12
  %191 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %166, align 8
  %192 = bitcast %"struct.v8::AllocationProfile::Node"** %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %191, i64 1
  store %"struct.v8::AllocationProfile::Node"** %194, %"struct.v8::AllocationProfile::Node"*** %166, align 8
  %195 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %163, align 8
  %196 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %171, align 8
  %197 = icmp eq %"struct.v8::AllocationProfile::Node"** %195, %196
  %198 = ptrtoint %"struct.v8::AllocationProfile::Node"** %196 to i64
  %199 = bitcast %"struct.v8::AllocationProfile::Node"** %195 to i64*
  br i1 %197, label %200, label %332

200:                                              ; preds = %187
  %201 = getelementptr inbounds %"class.std::__1::deque.1276", %"class.std::__1::deque.1276"* %0, i64 0, i32 0, i32 0, i32 0
  %202 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %201, align 8
  %203 = icmp ugt %"struct.v8::AllocationProfile::Node"** %194, %202
  %204 = ptrtoint %"struct.v8::AllocationProfile::Node"** %202 to i64
  br i1 %203, label %205, label %225

205:                                              ; preds = %200
  %206 = ptrtoint %"struct.v8::AllocationProfile::Node"** %194 to i64
  %207 = sub i64 %206, %204
  %208 = ashr exact i64 %207, 3
  %209 = add nsw i64 %208, 1
  %210 = sdiv i64 %209, -2
  %211 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %194, i64 %210
  %212 = ptrtoint %"struct.v8::AllocationProfile::Node"** %195 to i64
  %213 = sub i64 %212, %206
  %214 = ashr exact i64 %213, 3
  %215 = icmp eq i64 %213, 0
  br i1 %215, label %220, label %216

216:                                              ; preds = %205
  %217 = bitcast %"struct.v8::AllocationProfile::Node"** %211 to i8*
  %218 = bitcast %"struct.v8::AllocationProfile::Node"** %194 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %217, i8* align 8 %218, i64 %213, i1 false) #12
  %219 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %166, align 8
  br label %220

220:                                              ; preds = %216, %205
  %221 = phi %"struct.v8::AllocationProfile::Node"** [ %194, %205 ], [ %219, %216 ]
  %222 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %211, i64 %214
  store %"struct.v8::AllocationProfile::Node"** %222, %"struct.v8::AllocationProfile::Node"*** %163, align 8
  %223 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %221, i64 %210
  store %"struct.v8::AllocationProfile::Node"** %223, %"struct.v8::AllocationProfile::Node"*** %166, align 8
  %224 = bitcast %"struct.v8::AllocationProfile::Node"** %222 to i64*
  br label %332

225:                                              ; preds = %200
  %226 = sub i64 %198, %204
  %227 = ashr exact i64 %226, 2
  %228 = icmp eq i64 %226, 0
  %229 = select i1 %228, i64 1, i64 %227
  %230 = icmp ugt i64 %229, 2305843009213693951
  br i1 %230, label %231, label %232

231:                                              ; preds = %225
  call void @abort() #13
  unreachable

232:                                              ; preds = %225
  %233 = lshr i64 %229, 2
  %234 = shl i64 %229, 3
  %235 = call i8* @_Znwm(i64 %234) #14
  %236 = bitcast i8* %235 to %"struct.v8::AllocationProfile::Node"**
  %237 = ptrtoint i8* %235 to i64
  %238 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %236, i64 %233
  %239 = ptrtoint %"struct.v8::AllocationProfile::Node"** %238 to i64
  %240 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %236, i64 %229
  %241 = ptrtoint %"struct.v8::AllocationProfile::Node"** %240 to i64
  %242 = ptrtoint %"struct.v8::AllocationProfile::Node"** %194 to i64
  %243 = ptrtoint %"struct.v8::AllocationProfile::Node"** %195 to i64
  %244 = sub i64 %243, %242
  %245 = ashr exact i64 %244, 3
  %246 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %238, i64 %245
  %247 = icmp eq i64 %244, 0
  br i1 %247, label %323, label %248

248:                                              ; preds = %232
  %249 = add i64 %244, -8
  %250 = lshr i64 %249, 3
  %251 = add nuw nsw i64 %250, 1
  %252 = and i64 %251, 7
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %269, label %254

254:                                              ; preds = %248, %254
  %255 = phi %"struct.v8::AllocationProfile::Node"** [ %262, %254 ], [ %238, %248 ]
  %256 = phi i64 [ %263, %254 ], [ %239, %248 ]
  %257 = phi %"struct.v8::AllocationProfile::Node"** [ %264, %254 ], [ %194, %248 ]
  %258 = phi i64 [ %265, %254 ], [ %252, %248 ]
  %259 = bitcast %"struct.v8::AllocationProfile::Node"** %257 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = inttoptr i64 %256 to i64*
  store i64 %260, i64* %261, align 8
  %262 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %255, i64 1
  %263 = ptrtoint %"struct.v8::AllocationProfile::Node"** %262 to i64
  %264 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %257, i64 1
  %265 = add i64 %258, -1
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %267, label %254, !llvm.loop !32

267:                                              ; preds = %254
  %268 = ptrtoint %"struct.v8::AllocationProfile::Node"** %262 to i64
  br label %269

269:                                              ; preds = %248, %267
  %270 = phi %"struct.v8::AllocationProfile::Node"** [ %238, %248 ], [ %262, %267 ]
  %271 = phi i64 [ %239, %248 ], [ %268, %267 ]
  %272 = phi %"struct.v8::AllocationProfile::Node"** [ %194, %248 ], [ %264, %267 ]
  %273 = icmp ult i64 %249, 56
  br i1 %273, label %320, label %274

274:                                              ; preds = %269, %274
  %275 = phi %"struct.v8::AllocationProfile::Node"** [ %316, %274 ], [ %270, %269 ]
  %276 = phi i64 [ %317, %274 ], [ %271, %269 ]
  %277 = phi %"struct.v8::AllocationProfile::Node"** [ %318, %274 ], [ %272, %269 ]
  %278 = bitcast %"struct.v8::AllocationProfile::Node"** %277 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = inttoptr i64 %276 to i64*
  store i64 %279, i64* %280, align 8
  %281 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %275, i64 1
  %282 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %277, i64 1
  %283 = bitcast %"struct.v8::AllocationProfile::Node"** %282 to i64*
  %284 = load i64, i64* %283, align 8
  %285 = bitcast %"struct.v8::AllocationProfile::Node"** %281 to i64*
  store i64 %284, i64* %285, align 8
  %286 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %275, i64 2
  %287 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %277, i64 2
  %288 = bitcast %"struct.v8::AllocationProfile::Node"** %287 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = bitcast %"struct.v8::AllocationProfile::Node"** %286 to i64*
  store i64 %289, i64* %290, align 8
  %291 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %275, i64 3
  %292 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %277, i64 3
  %293 = bitcast %"struct.v8::AllocationProfile::Node"** %292 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = bitcast %"struct.v8::AllocationProfile::Node"** %291 to i64*
  store i64 %294, i64* %295, align 8
  %296 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %275, i64 4
  %297 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %277, i64 4
  %298 = bitcast %"struct.v8::AllocationProfile::Node"** %297 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = bitcast %"struct.v8::AllocationProfile::Node"** %296 to i64*
  store i64 %299, i64* %300, align 8
  %301 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %275, i64 5
  %302 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %277, i64 5
  %303 = bitcast %"struct.v8::AllocationProfile::Node"** %302 to i64*
  %304 = load i64, i64* %303, align 8
  %305 = bitcast %"struct.v8::AllocationProfile::Node"** %301 to i64*
  store i64 %304, i64* %305, align 8
  %306 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %275, i64 6
  %307 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %277, i64 6
  %308 = bitcast %"struct.v8::AllocationProfile::Node"** %307 to i64*
  %309 = load i64, i64* %308, align 8
  %310 = bitcast %"struct.v8::AllocationProfile::Node"** %306 to i64*
  store i64 %309, i64* %310, align 8
  %311 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %275, i64 7
  %312 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %277, i64 7
  %313 = bitcast %"struct.v8::AllocationProfile::Node"** %312 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = bitcast %"struct.v8::AllocationProfile::Node"** %311 to i64*
  store i64 %314, i64* %315, align 8
  %316 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %275, i64 8
  %317 = ptrtoint %"struct.v8::AllocationProfile::Node"** %316 to i64
  %318 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %277, i64 8
  %319 = icmp eq %"struct.v8::AllocationProfile::Node"** %246, %316
  br i1 %319, label %320, label %274

320:                                              ; preds = %274, %269
  %321 = ptrtoint %"struct.v8::AllocationProfile::Node"** %246 to i64
  %322 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %201, align 8
  br label %323

323:                                              ; preds = %320, %232
  %324 = phi %"struct.v8::AllocationProfile::Node"** [ %322, %320 ], [ %202, %232 ]
  %325 = phi i64 [ %321, %320 ], [ %239, %232 ]
  store i64 %237, i64* %174, align 8
  store i64 %239, i64* %167, align 8
  store i64 %325, i64* %164, align 8
  store i64 %241, i64* %172, align 8
  %326 = icmp eq %"struct.v8::AllocationProfile::Node"** %324, null
  %327 = inttoptr i64 %325 to i64*
  br i1 %326, label %332, label %328

328:                                              ; preds = %323
  %329 = bitcast %"struct.v8::AllocationProfile::Node"** %324 to i8*
  call void @_ZdlPv(i8* %329) #14
  %330 = bitcast %"struct.v8::AllocationProfile::Node"*** %163 to i64**
  %331 = load i64*, i64** %330, align 8
  br label %332

332:                                              ; preds = %187, %220, %323, %328
  %333 = phi i64* [ %331, %328 ], [ %327, %323 ], [ %224, %220 ], [ %199, %187 ]
  store i64 %193, i64* %333, align 8
  %334 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %163, align 8
  %335 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %334, i64 1
  store %"struct.v8::AllocationProfile::Node"** %335, %"struct.v8::AllocationProfile::Node"*** %163, align 8
  br label %549

336:                                              ; preds = %161
  %337 = ashr exact i64 %176, 2
  %338 = icmp eq i64 %176, 0
  %339 = select i1 %338, i64 1, i64 %337
  %340 = icmp ugt i64 %339, 2305843009213693951
  br i1 %340, label %341, label %342

341:                                              ; preds = %336
  tail call void @abort() #13
  unreachable

342:                                              ; preds = %336
  %343 = shl i64 %339, 3
  %344 = tail call i8* @_Znwm(i64 %343) #14
  %345 = bitcast i8* %344 to %"struct.v8::AllocationProfile::Node"**
  %346 = ptrtoint i8* %344 to i64
  %347 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %345, i64 %170
  %348 = ptrtoint %"struct.v8::AllocationProfile::Node"** %347 to i64
  %349 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %345, i64 %339
  %350 = ptrtoint %"struct.v8::AllocationProfile::Node"** %349 to i64
  %351 = tail call i8* @_Znwm(i64 4048) #14
  %352 = ptrtoint i8* %351 to i64
  %353 = icmp eq i64 %170, %339
  br i1 %353, label %354, label %382

354:                                              ; preds = %342
  %355 = icmp ugt %"struct.v8::AllocationProfile::Node"** %347, %345
  br i1 %355, label %356, label %363

356:                                              ; preds = %354
  %357 = sub i64 %348, %346
  %358 = ashr exact i64 %357, 3
  %359 = add nsw i64 %358, 1
  %360 = sdiv i64 %359, -2
  %361 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %347, i64 %360
  %362 = ptrtoint %"struct.v8::AllocationProfile::Node"** %361 to i64
  br label %382

363:                                              ; preds = %354
  %364 = sub i64 %350, %346
  %365 = ashr exact i64 %364, 2
  %366 = icmp eq i64 %364, 0
  %367 = select i1 %366, i64 1, i64 %365
  %368 = icmp ugt i64 %367, 2305843009213693951
  br i1 %368, label %369, label %370

369:                                              ; preds = %363
  tail call void @abort() #13
  unreachable

370:                                              ; preds = %363
  %371 = lshr i64 %367, 2
  %372 = shl i64 %367, 3
  %373 = tail call i8* @_Znwm(i64 %372) #14
  %374 = bitcast i8* %373 to %"struct.v8::AllocationProfile::Node"**
  %375 = ptrtoint i8* %373 to i64
  %376 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %374, i64 %371
  %377 = ptrtoint %"struct.v8::AllocationProfile::Node"** %376 to i64
  %378 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %374, i64 %367
  %379 = ptrtoint %"struct.v8::AllocationProfile::Node"** %378 to i64
  tail call void @_ZdlPv(i8* nonnull %344) #14
  %380 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %163, align 8
  %381 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %166, align 8
  br label %382

382:                                              ; preds = %342, %356, %370
  %383 = phi %"struct.v8::AllocationProfile::Node"** [ %180, %356 ], [ %381, %370 ], [ %180, %342 ]
  %384 = phi %"struct.v8::AllocationProfile::Node"** [ %179, %356 ], [ %380, %370 ], [ %179, %342 ]
  %385 = phi i64 [ %346, %356 ], [ %375, %370 ], [ %346, %342 ]
  %386 = phi i64 [ %362, %356 ], [ %377, %370 ], [ %348, %342 ]
  %387 = phi %"struct.v8::AllocationProfile::Node"** [ %361, %356 ], [ %376, %370 ], [ %347, %342 ]
  %388 = phi i64 [ %350, %356 ], [ %379, %370 ], [ %350, %342 ]
  %389 = bitcast %"struct.v8::AllocationProfile::Node"** %387 to i64*
  store i64 %352, i64* %389, align 8
  %390 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %387, i64 1
  %391 = ptrtoint %"struct.v8::AllocationProfile::Node"** %390 to i64
  %392 = icmp eq %"struct.v8::AllocationProfile::Node"** %384, %383
  br i1 %392, label %395, label %405

393:                                              ; preds = %537
  %394 = ptrtoint %"struct.v8::AllocationProfile::Node"** %542 to i64
  br label %395

395:                                              ; preds = %393, %382
  %396 = phi i64 [ %385, %382 ], [ %538, %393 ]
  %397 = phi i64 [ %386, %382 ], [ %394, %393 ]
  %398 = phi i64 [ %391, %382 ], [ %539, %393 ]
  %399 = phi i64 [ %388, %382 ], [ %540, %393 ]
  %400 = getelementptr inbounds %"class.std::__1::deque.1276", %"class.std::__1::deque.1276"* %0, i64 0, i32 0, i32 0, i32 0
  %401 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %400, align 8
  store i64 %396, i64* %174, align 8
  store i64 %397, i64* %167, align 8
  store i64 %398, i64* %164, align 8
  store i64 %399, i64* %172, align 8
  %402 = icmp eq %"struct.v8::AllocationProfile::Node"** %401, null
  br i1 %402, label %549, label %403

403:                                              ; preds = %395
  %404 = bitcast %"struct.v8::AllocationProfile::Node"** %401 to i8*
  tail call void @_ZdlPv(i8* %404) #14
  br label %549

405:                                              ; preds = %382, %537
  %406 = phi %"struct.v8::AllocationProfile::Node"** [ %411, %537 ], [ %384, %382 ]
  %407 = phi i64 [ %540, %537 ], [ %388, %382 ]
  %408 = phi i64 [ %539, %537 ], [ %391, %382 ]
  %409 = phi i64 [ %546, %537 ], [ %386, %382 ]
  %410 = phi i64 [ %538, %537 ], [ %385, %382 ]
  %411 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %406, i64 -1
  %412 = inttoptr i64 %409 to %"struct.v8::AllocationProfile::Node"**
  %413 = inttoptr i64 %410 to %"struct.v8::AllocationProfile::Node"**
  %414 = icmp eq %"struct.v8::AllocationProfile::Node"** %412, %413
  br i1 %414, label %415, label %537

415:                                              ; preds = %405
  %416 = inttoptr i64 %408 to %"struct.v8::AllocationProfile::Node"**
  %417 = inttoptr i64 %407 to %"struct.v8::AllocationProfile::Node"**
  %418 = icmp ult %"struct.v8::AllocationProfile::Node"** %416, %417
  br i1 %418, label %419, label %436

419:                                              ; preds = %415
  %420 = sub i64 %407, %408
  %421 = ashr exact i64 %420, 3
  %422 = add nsw i64 %421, 1
  %423 = sdiv i64 %422, 2
  %424 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %416, i64 %423
  %425 = sub i64 %408, %409
  %426 = icmp eq i64 %425, 0
  br i1 %426, label %433, label %427

427:                                              ; preds = %419
  %428 = ashr exact i64 %425, 3
  %429 = sub nsw i64 0, %428
  %430 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %424, i64 %429
  %431 = bitcast %"struct.v8::AllocationProfile::Node"** %430 to i8*
  %432 = inttoptr i64 %409 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %431, i8* align 8 %432, i64 %425, i1 false) #12
  br label %433

433:                                              ; preds = %427, %419
  %434 = phi %"struct.v8::AllocationProfile::Node"** [ %430, %427 ], [ %424, %419 ]
  %435 = ptrtoint %"struct.v8::AllocationProfile::Node"** %424 to i64
  br label %537

436:                                              ; preds = %415
  %437 = sub i64 %407, %410
  %438 = ashr exact i64 %437, 2
  %439 = icmp eq i64 %437, 0
  %440 = select i1 %439, i64 1, i64 %438
  %441 = icmp ugt i64 %440, 2305843009213693951
  br i1 %441, label %442, label %443

442:                                              ; preds = %436
  tail call void @abort() #13
  unreachable

443:                                              ; preds = %436
  %444 = add nuw nsw i64 %440, 3
  %445 = lshr i64 %444, 2
  %446 = shl i64 %440, 3
  %447 = tail call i8* @_Znwm(i64 %446) #14
  %448 = bitcast i8* %447 to %"struct.v8::AllocationProfile::Node"**
  %449 = ptrtoint i8* %447 to i64
  %450 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %448, i64 %445
  %451 = ptrtoint %"struct.v8::AllocationProfile::Node"** %450 to i64
  %452 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %448, i64 %440
  %453 = ptrtoint %"struct.v8::AllocationProfile::Node"** %452 to i64
  %454 = sub i64 %408, %409
  %455 = ashr exact i64 %454, 3
  %456 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %450, i64 %455
  %457 = icmp eq i64 %454, 0
  br i1 %457, label %532, label %458

458:                                              ; preds = %443
  %459 = add i64 %454, -8
  %460 = lshr i64 %459, 3
  %461 = add nuw nsw i64 %460, 1
  %462 = and i64 %461, 7
  %463 = icmp eq i64 %462, 0
  br i1 %463, label %479, label %464

464:                                              ; preds = %458, %464
  %465 = phi %"struct.v8::AllocationProfile::Node"** [ %472, %464 ], [ %450, %458 ]
  %466 = phi i64 [ %473, %464 ], [ %451, %458 ]
  %467 = phi %"struct.v8::AllocationProfile::Node"** [ %474, %464 ], [ %412, %458 ]
  %468 = phi i64 [ %475, %464 ], [ %462, %458 ]
  %469 = bitcast %"struct.v8::AllocationProfile::Node"** %467 to i64*
  %470 = load i64, i64* %469, align 8
  %471 = inttoptr i64 %466 to i64*
  store i64 %470, i64* %471, align 8
  %472 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %465, i64 1
  %473 = ptrtoint %"struct.v8::AllocationProfile::Node"** %472 to i64
  %474 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %467, i64 1
  %475 = add i64 %468, -1
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %477, label %464, !llvm.loop !33

477:                                              ; preds = %464
  %478 = ptrtoint %"struct.v8::AllocationProfile::Node"** %472 to i64
  br label %479

479:                                              ; preds = %458, %477
  %480 = phi %"struct.v8::AllocationProfile::Node"** [ %450, %458 ], [ %472, %477 ]
  %481 = phi i64 [ %451, %458 ], [ %478, %477 ]
  %482 = phi %"struct.v8::AllocationProfile::Node"** [ %412, %458 ], [ %474, %477 ]
  %483 = icmp ult i64 %459, 56
  br i1 %483, label %530, label %484

484:                                              ; preds = %479, %484
  %485 = phi %"struct.v8::AllocationProfile::Node"** [ %526, %484 ], [ %480, %479 ]
  %486 = phi i64 [ %527, %484 ], [ %481, %479 ]
  %487 = phi %"struct.v8::AllocationProfile::Node"** [ %528, %484 ], [ %482, %479 ]
  %488 = bitcast %"struct.v8::AllocationProfile::Node"** %487 to i64*
  %489 = load i64, i64* %488, align 8
  %490 = inttoptr i64 %486 to i64*
  store i64 %489, i64* %490, align 8
  %491 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %485, i64 1
  %492 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %487, i64 1
  %493 = bitcast %"struct.v8::AllocationProfile::Node"** %492 to i64*
  %494 = load i64, i64* %493, align 8
  %495 = bitcast %"struct.v8::AllocationProfile::Node"** %491 to i64*
  store i64 %494, i64* %495, align 8
  %496 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %485, i64 2
  %497 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %487, i64 2
  %498 = bitcast %"struct.v8::AllocationProfile::Node"** %497 to i64*
  %499 = load i64, i64* %498, align 8
  %500 = bitcast %"struct.v8::AllocationProfile::Node"** %496 to i64*
  store i64 %499, i64* %500, align 8
  %501 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %485, i64 3
  %502 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %487, i64 3
  %503 = bitcast %"struct.v8::AllocationProfile::Node"** %502 to i64*
  %504 = load i64, i64* %503, align 8
  %505 = bitcast %"struct.v8::AllocationProfile::Node"** %501 to i64*
  store i64 %504, i64* %505, align 8
  %506 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %485, i64 4
  %507 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %487, i64 4
  %508 = bitcast %"struct.v8::AllocationProfile::Node"** %507 to i64*
  %509 = load i64, i64* %508, align 8
  %510 = bitcast %"struct.v8::AllocationProfile::Node"** %506 to i64*
  store i64 %509, i64* %510, align 8
  %511 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %485, i64 5
  %512 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %487, i64 5
  %513 = bitcast %"struct.v8::AllocationProfile::Node"** %512 to i64*
  %514 = load i64, i64* %513, align 8
  %515 = bitcast %"struct.v8::AllocationProfile::Node"** %511 to i64*
  store i64 %514, i64* %515, align 8
  %516 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %485, i64 6
  %517 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %487, i64 6
  %518 = bitcast %"struct.v8::AllocationProfile::Node"** %517 to i64*
  %519 = load i64, i64* %518, align 8
  %520 = bitcast %"struct.v8::AllocationProfile::Node"** %516 to i64*
  store i64 %519, i64* %520, align 8
  %521 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %485, i64 7
  %522 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %487, i64 7
  %523 = bitcast %"struct.v8::AllocationProfile::Node"** %522 to i64*
  %524 = load i64, i64* %523, align 8
  %525 = bitcast %"struct.v8::AllocationProfile::Node"** %521 to i64*
  store i64 %524, i64* %525, align 8
  %526 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %485, i64 8
  %527 = ptrtoint %"struct.v8::AllocationProfile::Node"** %526 to i64
  %528 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %487, i64 8
  %529 = icmp eq %"struct.v8::AllocationProfile::Node"** %456, %526
  br i1 %529, label %530, label %484

530:                                              ; preds = %484, %479
  %531 = ptrtoint %"struct.v8::AllocationProfile::Node"** %456 to i64
  br label %532

532:                                              ; preds = %530, %443
  %533 = phi i64 [ %531, %530 ], [ %451, %443 ]
  %534 = icmp eq i64 %409, 0
  br i1 %534, label %537, label %535

535:                                              ; preds = %532
  %536 = inttoptr i64 %409 to i8*
  tail call void @_ZdlPv(i8* %536) #14
  br label %537

537:                                              ; preds = %405, %433, %532, %535
  %538 = phi i64 [ %410, %433 ], [ %449, %532 ], [ %449, %535 ], [ %410, %405 ]
  %539 = phi i64 [ %435, %433 ], [ %533, %532 ], [ %533, %535 ], [ %408, %405 ]
  %540 = phi i64 [ %407, %433 ], [ %453, %532 ], [ %453, %535 ], [ %407, %405 ]
  %541 = phi %"struct.v8::AllocationProfile::Node"** [ %434, %433 ], [ %450, %532 ], [ %450, %535 ], [ %412, %405 ]
  %542 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %541, i64 -1
  %543 = bitcast %"struct.v8::AllocationProfile::Node"** %411 to i64*
  %544 = load i64, i64* %543, align 8
  %545 = bitcast %"struct.v8::AllocationProfile::Node"** %542 to i64*
  store i64 %544, i64* %545, align 8
  %546 = ptrtoint %"struct.v8::AllocationProfile::Node"** %542 to i64
  %547 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %166, align 8
  %548 = icmp eq %"struct.v8::AllocationProfile::Node"** %411, %547
  br i1 %548, label %393, label %405

549:                                              ; preds = %403, %395, %332, %183, %157
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v817AllocationProfile4NodeENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer.1278"*, %"struct.v8::AllocationProfile::Node"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1278", %"struct.std::__1::__split_buffer.1278"* %0, i64 0, i32 2
  %4 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1278", %"struct.std::__1::__split_buffer.1278"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %5, align 8
  %7 = icmp eq %"struct.v8::AllocationProfile::Node"** %4, %6
  %8 = ptrtoint %"struct.v8::AllocationProfile::Node"** %6 to i64
  %9 = bitcast %"struct.v8::AllocationProfile::Node"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.1278", %"struct.std::__1::__split_buffer.1278"* %0, i64 0, i32 1
  %12 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.1278", %"struct.std::__1::__split_buffer.1278"* %0, i64 0, i32 0
  %14 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %13, align 8
  %15 = icmp ugt %"struct.v8::AllocationProfile::Node"** %12, %14
  %16 = ptrtoint %"struct.v8::AllocationProfile::Node"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.v8::AllocationProfile::Node"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %12, i64 %22
  %24 = ptrtoint %"struct.v8::AllocationProfile::Node"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.v8::AllocationProfile::Node"** %23 to i8*
  %30 = bitcast %"struct.v8::AllocationProfile::Node"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #12
  %31 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"struct.v8::AllocationProfile::Node"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %23, i64 %26
  store %"struct.v8::AllocationProfile::Node"** %34, %"struct.v8::AllocationProfile::Node"*** %3, align 8
  %35 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %33, i64 %22
  store %"struct.v8::AllocationProfile::Node"** %35, %"struct.v8::AllocationProfile::Node"*** %11, align 8
  %36 = bitcast %"struct.v8::AllocationProfile::Node"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"struct.v8::AllocationProfile::Node"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.1278"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #13
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #14
  %50 = bitcast i8* %49 to %"struct.v8::AllocationProfile::Node"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %50, i64 %47
  %53 = ptrtoint %"struct.v8::AllocationProfile::Node"** %52 to i64
  %54 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %50, i64 %43
  %55 = ptrtoint %"struct.v8::AllocationProfile::Node"** %54 to i64
  %56 = ptrtoint %"struct.v8::AllocationProfile::Node"** %12 to i64
  %57 = ptrtoint %"struct.v8::AllocationProfile::Node"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.v8::AllocationProfile::Node"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"struct.v8::AllocationProfile::Node"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"struct.v8::AllocationProfile::Node"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %69, i64 1
  %77 = ptrtoint %"struct.v8::AllocationProfile::Node"** %76 to i64
  %78 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !34

81:                                               ; preds = %68
  %82 = ptrtoint %"struct.v8::AllocationProfile::Node"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"struct.v8::AllocationProfile::Node"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"struct.v8::AllocationProfile::Node"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"struct.v8::AllocationProfile::Node"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"struct.v8::AllocationProfile::Node"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"struct.v8::AllocationProfile::Node"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %89, i64 1
  %96 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %91, i64 1
  %97 = bitcast %"struct.v8::AllocationProfile::Node"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"struct.v8::AllocationProfile::Node"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %89, i64 2
  %101 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %91, i64 2
  %102 = bitcast %"struct.v8::AllocationProfile::Node"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"struct.v8::AllocationProfile::Node"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %89, i64 3
  %106 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %91, i64 3
  %107 = bitcast %"struct.v8::AllocationProfile::Node"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.v8::AllocationProfile::Node"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %89, i64 4
  %111 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %91, i64 4
  %112 = bitcast %"struct.v8::AllocationProfile::Node"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.v8::AllocationProfile::Node"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %89, i64 5
  %116 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %91, i64 5
  %117 = bitcast %"struct.v8::AllocationProfile::Node"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.v8::AllocationProfile::Node"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %89, i64 6
  %121 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %91, i64 6
  %122 = bitcast %"struct.v8::AllocationProfile::Node"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.v8::AllocationProfile::Node"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %89, i64 7
  %126 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %91, i64 7
  %127 = bitcast %"struct.v8::AllocationProfile::Node"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.v8::AllocationProfile::Node"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %89, i64 8
  %131 = ptrtoint %"struct.v8::AllocationProfile::Node"** %130 to i64
  %132 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %91, i64 8
  %133 = icmp eq %"struct.v8::AllocationProfile::Node"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"struct.v8::AllocationProfile::Node"** %60 to i64
  %136 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"struct.v8::AllocationProfile::Node"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"struct.v8::AllocationProfile::Node"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"struct.v8::AllocationProfile::Node"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"struct.v8::AllocationProfile::Node"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"struct.v8::AllocationProfile::Node"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #14
  %146 = bitcast %"struct.v8::AllocationProfile::Node"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"struct.v8::AllocationProfile::Node"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %3, align 8
  %153 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %152, i64 1
  store %"struct.v8::AllocationProfile::Node"** %153, %"struct.v8::AllocationProfile::Node"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v817AllocationProfile4NodeENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer.1278"*, %"struct.v8::AllocationProfile::Node"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1278", %"struct.std::__1::__split_buffer.1278"* %0, i64 0, i32 1
  %4 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1278", %"struct.std::__1::__split_buffer.1278"* %0, i64 0, i32 0
  %6 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %5, align 8
  %7 = icmp eq %"struct.v8::AllocationProfile::Node"** %4, %6
  %8 = ptrtoint %"struct.v8::AllocationProfile::Node"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1278", %"struct.std::__1::__split_buffer.1278"* %0, i64 0, i32 2
  %11 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1278", %"struct.std::__1::__split_buffer.1278"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %12, align 8
  %14 = icmp ult %"struct.v8::AllocationProfile::Node"** %11, %13
  %15 = bitcast %"struct.v8::AllocationProfile::Node"*** %12 to i64*
  %16 = ptrtoint %"struct.v8::AllocationProfile::Node"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.v8::AllocationProfile::Node"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %11, i64 %22
  %24 = ptrtoint %"struct.v8::AllocationProfile::Node"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %23, i64 %29
  %31 = bitcast %"struct.v8::AllocationProfile::Node"** %30 to i8*
  %32 = bitcast %"struct.v8::AllocationProfile::Node"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #12
  %33 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.v8::AllocationProfile::Node"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.v8::AllocationProfile::Node"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.v8::AllocationProfile::Node"** %36, %"struct.v8::AllocationProfile::Node"*** %3, align 8
  %37 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %35, i64 %22
  store %"struct.v8::AllocationProfile::Node"** %37, %"struct.v8::AllocationProfile::Node"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1278"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #13
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #14
  %51 = bitcast i8* %50 to %"struct.v8::AllocationProfile::Node"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %51, i64 %48
  %54 = ptrtoint %"struct.v8::AllocationProfile::Node"** %53 to i64
  %55 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %51, i64 %43
  %56 = ptrtoint %"struct.v8::AllocationProfile::Node"** %55 to i64
  %57 = ptrtoint %"struct.v8::AllocationProfile::Node"** %4 to i64
  %58 = ptrtoint %"struct.v8::AllocationProfile::Node"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.v8::AllocationProfile::Node"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.v8::AllocationProfile::Node"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.v8::AllocationProfile::Node"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %70, i64 1
  %78 = ptrtoint %"struct.v8::AllocationProfile::Node"** %77 to i64
  %79 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !35

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.v8::AllocationProfile::Node"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.v8::AllocationProfile::Node"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.v8::AllocationProfile::Node"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.v8::AllocationProfile::Node"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.v8::AllocationProfile::Node"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.v8::AllocationProfile::Node"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %90, i64 1
  %97 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %92, i64 1
  %98 = bitcast %"struct.v8::AllocationProfile::Node"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.v8::AllocationProfile::Node"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %90, i64 2
  %102 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %92, i64 2
  %103 = bitcast %"struct.v8::AllocationProfile::Node"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.v8::AllocationProfile::Node"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %90, i64 3
  %107 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %92, i64 3
  %108 = bitcast %"struct.v8::AllocationProfile::Node"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.v8::AllocationProfile::Node"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %90, i64 4
  %112 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %92, i64 4
  %113 = bitcast %"struct.v8::AllocationProfile::Node"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.v8::AllocationProfile::Node"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %90, i64 5
  %117 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %92, i64 5
  %118 = bitcast %"struct.v8::AllocationProfile::Node"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.v8::AllocationProfile::Node"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %90, i64 6
  %122 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %92, i64 6
  %123 = bitcast %"struct.v8::AllocationProfile::Node"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.v8::AllocationProfile::Node"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %90, i64 7
  %127 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %92, i64 7
  %128 = bitcast %"struct.v8::AllocationProfile::Node"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.v8::AllocationProfile::Node"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %90, i64 8
  %132 = ptrtoint %"struct.v8::AllocationProfile::Node"** %131 to i64
  %133 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %92, i64 8
  %134 = icmp eq %"struct.v8::AllocationProfile::Node"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.v8::AllocationProfile::Node"** %61 to i64
  %137 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.v8::AllocationProfile::Node"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.v8::AllocationProfile::Node"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.v8::AllocationProfile::Node"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.v8::AllocationProfile::Node"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.v8::AllocationProfile::Node"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #14
  %146 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.v8::AllocationProfile::Node"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %148, i64 -1
  %150 = bitcast %"struct.v8::AllocationProfile::Node"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.v8::AllocationProfile::Node"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.v8::AllocationProfile::Node"**, %"struct.v8::AllocationProfile::Node"*** %3, align 8
  %154 = getelementptr inbounds %"struct.v8::AllocationProfile::Node"*, %"struct.v8::AllocationProfile::Node"** %153, i64 -1
  store %"struct.v8::AllocationProfile::Node"** %154, %"struct.v8::AllocationProfile::Node"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v817AllocationProfile6SampleENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector.1283"*, %"struct.v8::AllocationProfile::Sample"*, %"struct.v8::AllocationProfile::Sample"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.v8::AllocationProfile::Sample"* %2 to i64
  %5 = ptrtoint %"struct.v8::AllocationProfile::Sample"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 5
  %8 = getelementptr inbounds %"class.std::__1::vector.1283", %"class.std::__1::vector.1283"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.v8::AllocationProfile::Sample"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.1283"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 5
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.v8::AllocationProfile::Sample"*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.1283", %"class.std::__1::vector.1283"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.v8::AllocationProfile::Sample"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 5
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.v8::AllocationProfile::Sample", %"struct.v8::AllocationProfile::Sample"* %1, i64 %22
  %25 = select i1 %23, %"struct.v8::AllocationProfile::Sample"* %24, %"struct.v8::AllocationProfile::Sample"* %2
  %26 = ptrtoint %"struct.v8::AllocationProfile::Sample"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 5
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"struct.v8::AllocationProfile::Sample"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #12
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 5
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"struct.v8::AllocationProfile::Sample"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %36, i1 false) #12
  %42 = inttoptr i64 %35 to %"struct.v8::AllocationProfile::Sample"*
  %43 = getelementptr inbounds %"struct.v8::AllocationProfile::Sample", %"struct.v8::AllocationProfile::Sample"* %42, i64 %39
  %44 = ptrtoint %"struct.v8::AllocationProfile::Sample"* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"struct.v8::AllocationProfile::Sample", %"struct.v8::AllocationProfile::Sample"* %16, i64 %28
  store %"struct.v8::AllocationProfile::Sample"* %48, %"struct.v8::AllocationProfile::Sample"** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.1283", %"class.std::__1::vector.1283"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"struct.v8::AllocationProfile::Sample"** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #14
  %55 = bitcast %"class.std::__1::vector.1283"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #12
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 576460752303423487
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.1283"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #13
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 5
  %63 = icmp ult i64 %62, 288230376151711743
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 4
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 576460752303423487
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.1283"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #13
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 576460752303423487, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 5
  %74 = tail call i8* @_Znwm(i64 %73) #14
  %75 = bitcast i8* %74 to %"struct.v8::AllocationProfile::Sample"*
  %76 = getelementptr inbounds %"class.std::__1::vector.1283", %"class.std::__1::vector.1283"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %"struct.v8::AllocationProfile::Sample"** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.1283"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %"struct.v8::AllocationProfile::Sample", %"struct.v8::AllocationProfile::Sample"* %75, i64 %72
  store %"struct.v8::AllocationProfile::Sample"* %79, %"struct.v8::AllocationProfile::Sample"** %8, align 8
  %80 = bitcast %"struct.v8::AllocationProfile::Sample"** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 5
  %85 = bitcast %"struct.v8::AllocationProfile::Sample"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %85, i64 %6, i1 false) #12
  %86 = getelementptr inbounds %"struct.v8::AllocationProfile::Sample", %"struct.v8::AllocationProfile::Sample"* %75, i64 %84
  %87 = ptrtoint %"struct.v8::AllocationProfile::Sample"* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__16__treeINS_12__value_typeImjEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__16__treeINS_12__value_typeImjEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNSt3__16__treeINS_12__value_typeImjEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__16__treeINS_12__value_typeImjEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNSt3__16__treeINS_12__value_typeImjEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__16__treeINS_12__value_typeImjEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN2v88internal20SamplingHeapProfiler14AllocationNodeENS_14default_deleteIS6_EEEEEENS_19__map_value_compareImSA_NS_4lessImEELb1EEENS_9allocatorISA_EEE16__construct_nodeIJRmS9_EEENS2_INS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSF_ISM_EEEEEEDpOT_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN2v88internal20SamplingHeapProfiler14AllocationNodeENS_14default_deleteIS6_EEEEEENS_19__map_value_compareImSA_NS_4lessImEELb1EEENS_9allocatorISA_EEE16__construct_nodeIJRmS9_EEENS2_INS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSF_ISM_EEEEEEDpOT_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNSt3__16__treeINS_12__value_typeIiN2v88internal6HandleINS3_6ScriptEEEEENS_19__map_value_compareIiS7_NS_4lessIiEELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISR_EEEEEEDpOT_: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__16__treeINS_12__value_typeIiN2v88internal6HandleINS3_6ScriptEEEEENS_19__map_value_compareIiS7_NS_4lessIiEELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISR_EEEEEEDpOT_"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNSt3__16__treeINS_12__value_typeIiN2v88internal6HandleINS3_6ScriptEEEEENS_19__map_value_compareIiS7_NS_4lessIiEELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISQ_EEEEEEDpOT_: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__16__treeINS_12__value_typeIiN2v88internal6HandleINS3_6ScriptEEEEENS_19__map_value_compareIiS7_NS_4lessIiEELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISQ_EEEEEEDpOT_"}
!22 = !{i64 0, i64 65}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal20SamplingHeapProfiler6SampleENS_10unique_ptrIS5_NS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE21__construct_node_hashIS6_JSA_EEENS7_INS_11__hash_nodeISB_PvEENS_22__hash_node_destructorINSK_ISQ_EEEEEEmOT_DpOT0_: argument 0"}
!25 = distinct !{!25, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal20SamplingHeapProfiler6SampleENS_10unique_ptrIS5_NS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE21__construct_node_hashIS6_JSA_EEENS7_INS_11__hash_nodeISB_PvEENS_22__hash_node_destructorINSK_ISQ_EEEEEEmOT_DpOT0_"}
!26 = distinct !{!26, !27}
!27 = !{!"llvm.loop.unroll.disable"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNSt3__16__treeINS_12__value_typeIiN2v88internal6HandleINS3_6ScriptEEEEENS_19__map_value_compareIiS7_NS_4lessIiEELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_4pairIKiS6_EEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISO_EEEEEEDpOT_: argument 0"}
!30 = distinct !{!30, !"_ZNSt3__16__treeINS_12__value_typeIiN2v88internal6HandleINS3_6ScriptEEEEENS_19__map_value_compareIiS7_NS_4lessIiEELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_4pairIKiS6_EEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISO_EEEEEEDpOT_"}
!31 = distinct !{!31, !27}
!32 = distinct !{!32, !27}
!33 = distinct !{!33, !27}
!34 = distinct !{!34, !27}
!35 = distinct !{!35, !27}
