; ModuleID = '../../third_party/blink/renderer/modules/webaudio/audio_node_wiring.cc'
source_filename = "../../third_party/blink/renderer/modules/webaudio/audio_node_wiring.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::AudioNodeOutput" = type { %"class.blink::AudioHandler"*, i32, i32, %class.scoped_refptr.335, %class.scoped_refptr.335, i8, [7 x i8], %"class.WTF::HashSet.349", i8, i8, i32, i32, [4 x i8], %"class.WTF::HashSet.358" }
%"class.blink::AudioHandler" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted", [4 x i8], double, double, i8, [3 x i8], i32, %"class.blink::WeakPersistent", %"class.blink::UntracedMember", %class.scoped_refptr.262, %"class.WTF::Vector.323", %"class.WTF::Vector.329", i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::AudioNode"*, %"class.blink::PersistentNodePtr.321" }
%"class.blink::AudioNode" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::InspectorHelperMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.24", %class.scoped_refptr.262, %class.scoped_refptr.276, %"class.blink::HeapVector.305", %"class.blink::HeapVector.313" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapVector.10"* }
%"class.blink::HeapVector.10" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.11"* }
%"class.WTF::Vector.11" = type opaque
%"class.blink::InspectorHelperMixin" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.13", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::AudioGraphTracer"* }
%"class.blink::AudioGraphTracer" = type { %"class.blink::Supplement", %"class.blink::Member.19", %"class.blink::HeapHashSet" }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.17" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.408", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.410", %"class.blink::Member.414", %"class.blink::Member.416", %"class.blink::Member.418", %"class.blink::Member.420", %"class.blink::Member.422", %"class.blink::Member.424", %"class.blink::Member.426", %"class.blink::HeapObserverSet.428", %"class.blink::Member.436", %"class.blink::Member.438", %"class.blink::Member.440", %"class.blink::Member.442", %"class.blink::Member.444", %"class.blink::Member.446", %"class.blink::Member.448", %"class.blink::Member.450", %"class.blink::Member.452", %"class.blink::Member.454", %"class.blink::Member.456", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.487", %"class.blink::Member.17", %"class.blink::Member.17", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.495", %"class.std::__1::unique_ptr.501", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.395" }
%"class.blink::HeapHashMap.395" = type { %"class.WTF::HashMap.398" }
%"class.WTF::HashMap.398" = type { %"class.WTF::HashTable.399" }
%"class.WTF::HashTable.399" = type <{ %"struct.WTF::KeyValuePair.401"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.401" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.402" }
%"class.std::__1::unique_ptr.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type opaque
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.410" = type { %"class.blink::MemberBase.411" }
%"class.blink::MemberBase.411" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.17", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::Member.414" = type { %"class.blink::MemberBase.415" }
%"class.blink::MemberBase.415" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.418" = type { %"class.blink::MemberBase.419" }
%"class.blink::MemberBase.419" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.420" = type { %"class.blink::MemberBase.421" }
%"class.blink::MemberBase.421" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.422" = type { %"class.blink::MemberBase.423" }
%"class.blink::MemberBase.423" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.424" = type { %"class.blink::MemberBase.425" }
%"class.blink::MemberBase.425" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.426" = type { %"class.blink::MemberBase.427" }
%"class.blink::MemberBase.427" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.428" = type { i32, [4 x i8], %"class.blink::HeapHashSet.429" }
%"class.blink::HeapHashSet.429" = type { %"class.WTF::HashSet.432" }
%"class.WTF::HashSet.432" = type { %"class.WTF::HashTable.433" }
%"class.WTF::HashTable.433" = type <{ %"class.blink::WeakMember.435"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.435" = type opaque
%"class.blink::Member.436" = type { %"class.blink::MemberBase.437" }
%"class.blink::MemberBase.437" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.442" = type { %"class.blink::MemberBase.443" }
%"class.blink::MemberBase.443" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.444" = type { %"class.blink::MemberBase.445" }
%"class.blink::MemberBase.445" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.448" = type { %"class.blink::MemberBase.449" }
%"class.blink::MemberBase.449" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.454" = type { %"class.blink::MemberBase.455" }
%"class.blink::MemberBase.455" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.456" = type { %"class.blink::MemberBase.457" }
%"class.blink::MemberBase.457" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.458" }
%"class.WTF::Deque.458" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.461" }
%"class.WTF::VectorBuffer.461" = type { %"class.WTF::VectorBufferBase.462" }
%"class.WTF::VectorBufferBase.462" = type { %"class.std::__1::unique_ptr.463"*, i32, i32 }
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.469", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.469" = type { %"class.std::__1::__bitset.470" }
%"class.std::__1::__bitset.470" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.471", i64, %"class.absl::optional.476", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.471" = type { %"class.absl::optional_internal::optional_data.472" }
%"class.absl::optional_internal::optional_data.472" = type { %"class.absl::optional_internal::optional_data_base.473" }
%"class.absl::optional_internal::optional_data_base.473" = type { %"class.absl::optional_internal::optional_data_dtor_base.474" }
%"class.absl::optional_internal::optional_data_dtor_base.474" = type { i8, %union.anon.475 }
%union.anon.475 = type { %"class.blink::WebSecurityOrigin" }
%"class.absl::optional.476" = type { %"class.absl::optional_internal::optional_data.477" }
%"class.absl::optional_internal::optional_data.477" = type { %"class.absl::optional_internal::optional_data_base.478" }
%"class.absl::optional_internal::optional_data_base.478" = type { %"class.absl::optional_internal::optional_data_dtor_base.479" }
%"class.absl::optional_internal::optional_data_dtor_base.479" = type { i8, %union.anon.480 }
%union.anon.480 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.487" = type { %"class.WTF::HashSet.490" }
%"class.WTF::HashSet.490" = type { %"class.WTF::HashTable.491" }
%"class.WTF::HashTable.491" = type <{ %"class.blink::WeakMember.493"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.493" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.494 }
%class.scoped_refptr.494 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.266", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.266" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.267" }
%"struct.std::__1::atomic.267" = type { %"struct.std::__1::__atomic_base.268" }
%"struct.std::__1::__atomic_base.268" = type { %"struct.std::__1::__atomic_base.269" }
%"struct.std::__1::__atomic_base.269" = type { %"struct.std::__1::__cxx_atomic_impl.270" }
%"struct.std::__1::__cxx_atomic_impl.270" = type { %"struct.std::__1::__cxx_atomic_base_impl.271" }
%"struct.std::__1::__cxx_atomic_base_impl.271" = type { i8 }
%"class.std::__1::unique_ptr.495" = type { %"class.std::__1::__compressed_pair.496" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.497" }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.501" = type { %"class.std::__1::__compressed_pair.502" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.503" }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::InspectorWebAudioAgent"* }
%"class.blink::InspectorWebAudioAgent" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::BaseAudioContext"* }
%"class.blink::BaseAudioContext" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleStateObserver.base", %"class.blink::InspectorHelperMixin", %"class.blink::ThreadState::PrefinalizerRegistration.35", %"class.blink::Member.36", %"class.blink::HeapVector.38", i8, %class.scoped_refptr.258, i8, %"class.blink::Member.260", i8, %class.scoped_refptr.262, i32, %"class.blink::AsyncAudioDecoder", [3 x i8], %"class.blink::HeapHashSet.294", %"class.blink::Member.300", %"class.blink::Member.300", %"class.blink::Member.300", %"class.blink::Member.300", %class.scoped_refptr.302, %"class.blink::Member.303", %"class.blink::WorkerThread"* }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.26" }
%"class.blink::WeakMember.26" = type { %"class.blink::MemberBase.27" }
%"class.blink::MemberBase.27" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.28" }
%"class.blink::HeapHashSet.28" = type { %"class.WTF::HashSet.31" }
%"class.WTF::HashSet.31" = type { %"class.WTF::HashTable.32" }
%"class.WTF::HashTable.32" = type <{ %"class.blink::WeakMember.34"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.34" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.35" = type { i8 }
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::AudioDestinationNode"* }
%"class.blink::AudioDestinationNode" = type { %"class.blink::AudioNode" }
%"class.blink::HeapVector.38" = type { %"class.WTF::Vector.41" }
%"class.WTF::Vector.41" = type { %"class.WTF::VectorBuffer.42" }
%"class.WTF::VectorBuffer.42" = type { %"class.WTF::VectorBufferBase.43" }
%"class.WTF::VectorBufferBase.43" = type { %"class.blink::Member.44"*, i32, i32 }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.48", i32, %"class.blink::Member.49", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.250", %"class.blink::SelfKeepAlive.254" }
%"class.blink::ThreadState::PrefinalizerRegistration.48" = type { i8 }
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.53, %"class.blink::Member.245", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.v8::Isolate" = type { i8 }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.53 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.54" }
%"class.blink::PersistentBase.54" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.59" }
%"class.WTF::HashTable.59" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember.61", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.63", i32, [4 x i8], %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.199", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.216", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.234", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.241", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.179", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.99" = type { %"struct.std::__1::__atomic_base.100" }
%"struct.std::__1::__atomic_base.100" = type { %"struct.std::__1::__atomic_base.101" }
%"struct.std::__1::__atomic_base.101" = type { %"struct.std::__1::__cxx_atomic_impl.102" }
%"struct.std::__1::__cxx_atomic_impl.102" = type { %"struct.std::__1::__cxx_atomic_base_impl.103" }
%"struct.std::__1::__cxx_atomic_base_impl.103" = type { i64 }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::Worklist.110"* }
%"class.blink::Worklist.110" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::Worklist.117"* }
%"class.blink::Worklist.117" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::Worklist.124"* }
%"class.blink::Worklist.124" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::Worklist.131"* }
%"class.blink::Worklist.131" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::Worklist.138"* }
%"class.blink::Worklist.138" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::Worklist.145"* }
%"class.blink::Worklist.145" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::Worklist.152"* }
%"class.blink::Worklist.152" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.159", %"class.std::__1::__compressed_pair.166", %"class.std::__1::__compressed_pair.171", %"class.std::__1::__compressed_pair.173", [4 x i8] }>
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161", %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { i64 }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { float }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.182", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.191" }
%"class.WTF::Vector.191" = type { %"class.WTF::VectorBuffer.192" }
%"class.WTF::VectorBuffer.192" = type { %"class.WTF::VectorBufferBase.193" }
%"class.WTF::VectorBufferBase.193" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.207" }
%"class.WTF::VectorBuffer.207" = type { %"class.WTF::VectorBufferBase.208" }
%"class.WTF::VectorBufferBase.208" = type { %"struct.std::__1::pair.209"*, i32, i32 }
%"struct.std::__1::pair.209" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.222" }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.110"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.117"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.124"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.131"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.138"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.388" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.240 }
%class.scoped_refptr.240 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.241" = type { %"struct.std::__1::__atomic_base.242" }
%"struct.std::__1::__atomic_base.242" = type { %"struct.std::__1::__cxx_atomic_impl.243" }
%"struct.std::__1::__cxx_atomic_impl.243" = type { %"struct.std::__1::__cxx_atomic_base_impl.244" }
%"struct.std::__1::__cxx_atomic_base_impl.244" = type { i8 }
%"class.blink::Member.245" = type { %"class.blink::MemberBase.246" }
%"class.blink::MemberBase.246" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.247" }
%"class.blink::Persistent.247" = type { %"class.blink::PersistentBase.248" }
%"class.blink::PersistentBase.248" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.49", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.250", %class.scoped_refptr.253 }
%class.scoped_refptr.253 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::TraceWrapperV8Reference.250" = type { %"class.v8::TracedReference.251" }
%"class.v8::TracedReference.251" = type { %"class.v8::BasicTracedReference.252" }
%"class.v8::BasicTracedReference.252" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::SelfKeepAlive.254" = type { %"class.blink::Persistent.255" }
%"class.blink::Persistent.255" = type { %"class.blink::PersistentBase.256" }
%"class.blink::PersistentBase.256" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%class.scoped_refptr.258 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.259" }>
%"class.base::RefCountedThreadSafe.259" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.260" = type { %"class.blink::MemberBase.261" }
%"class.blink::MemberBase.261" = type { %"class.blink::AudioListener"* }
%"class.blink::AudioListener" = type opaque
%"class.blink::AsyncAudioDecoder" = type { i8 }
%"class.blink::HeapHashSet.294" = type { %"class.WTF::HashSet.297" }
%"class.WTF::HashSet.297" = type { %"class.WTF::HashTable.298" }
%"class.WTF::HashTable.298" = type <{ %"class.blink::Member.44"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.300" = type { %"class.blink::MemberBase.301" }
%"class.blink::MemberBase.301" = type { %"class.blink::PeriodicWave"* }
%"class.blink::PeriodicWave" = type opaque
%class.scoped_refptr.302 = type { %"class.blink::AudioDestinationHandler"* }
%"class.blink::AudioDestinationHandler" = type <{ %"class.blink::AudioHandler.base", [4 x i8], %"struct.std::__1::atomic.99", i8, [7 x i8] }>
%"class.blink::AudioHandler.base" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted", [4 x i8], double, double, i8, [3 x i8], i32, %"class.blink::WeakPersistent", %"class.blink::UntracedMember", %class.scoped_refptr.262, %"class.WTF::Vector.323", %"class.WTF::Vector.329", i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32 }>
%"class.blink::Member.303" = type { %"class.blink::MemberBase.304" }
%"class.blink::MemberBase.304" = type { %"class.blink::AudioWorklet"* }
%"class.blink::AudioWorklet" = type opaque
%"class.blink::WorkerThread" = type opaque
%class.scoped_refptr.276 = type { %"class.blink::AudioHandler"* }
%"class.blink::HeapVector.305" = type { %"class.WTF::Vector.308" }
%"class.WTF::Vector.308" = type { %"class.WTF::VectorBuffer.309" }
%"class.WTF::VectorBuffer.309" = type { %"class.WTF::VectorBufferBase.310" }
%"class.WTF::VectorBufferBase.310" = type { %"class.blink::Member.311"*, i32, i32 }
%"class.blink::Member.311" = type opaque
%"class.blink::HeapVector.313" = type { %"class.WTF::Vector.316" }
%"class.WTF::Vector.316" = type { %"class.WTF::VectorBuffer.317" }
%"class.WTF::VectorBuffer.317" = type { %"class.WTF::VectorBufferBase.318" }
%"class.WTF::VectorBufferBase.318" = type { %"class.blink::Member.319"*, i32, i32 }
%"class.blink::Member.319" = type opaque
%"class.blink::PersistentNodePtr.321" = type { %"class.blink::PersistentNode"* }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.322" }
%"class.blink::MemberBase.322" = type { %"class.blink::BaseAudioContext"* }
%class.scoped_refptr.262 = type { %"class.blink::DeferredTaskHandler"* }
%"class.blink::DeferredTaskHandler" = type <{ %"class.WTF::ThreadSafeRefCounted.263", [4 x i8], %"class.base::SupportsWeakPtr", %"class.WTF::HashSet.272", %"class.WTF::Vector.277", i8, [3 x i8], i32, %"class.WTF::HashSet.282", %"class.WTF::HashSet.282", %"class.WTF::HashSet.286", %"class.WTF::HashSet.290", %"class.WTF::Vector.277", %"class.WTF::Vector.277", %"class.WTF::Vector.277", %"class.WTF::Vector.277", i8, [7 x i8], %"class.WTF::HashSet.272", %"class.WTF::Vector.277", %class.scoped_refptr.258, %"class.WTF::RecursiveMutex", %"class.WTF::Mutex", %"struct.std::__1::atomic", [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted.263" = type { %"class.base::RefCountedThreadSafe.264" }
%"class.base::RefCountedThreadSafe.264" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.265 }
%class.scoped_refptr.265 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.WTF::HashSet.282" = type { %"class.WTF::HashTable.283" }
%"class.WTF::HashTable.283" = type <{ %"class.blink::AudioHandler"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.286" = type { %"class.WTF::HashTable.287" }
%"class.WTF::HashTable.287" = type <{ %"class.blink::AudioSummingJunction"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioSummingJunction" = type <{ i32 (...)**, %class.scoped_refptr.262, %"class.WTF::HashSet.290", %"class.WTF::Vector.353", i8, [7 x i8] }>
%"class.WTF::Vector.353" = type { %"class.WTF::VectorBuffer.354" }
%"class.WTF::VectorBuffer.354" = type { %"class.WTF::VectorBufferBase.355" }
%"class.WTF::VectorBufferBase.355" = type { %"class.blink::AudioNodeOutput"**, i32, i32 }
%"class.WTF::HashSet.290" = type { %"class.WTF::HashTable.291" }
%"class.WTF::HashTable.291" = type <{ %"class.blink::AudioNodeOutput"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.272" = type { %"class.WTF::HashTable.273" }
%"class.WTF::HashTable.273" = type <{ %class.scoped_refptr.276*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Vector.277" = type { %"class.WTF::VectorBuffer.278" }
%"class.WTF::VectorBuffer.278" = type { %"class.WTF::VectorBufferBase.279" }
%"class.WTF::VectorBufferBase.279" = type { %class.scoped_refptr.276*, i32, i32 }
%"class.WTF::RecursiveMutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::Vector.323" = type { %"class.WTF::VectorBuffer.324" }
%"class.WTF::VectorBuffer.324" = type { %"class.WTF::VectorBufferBase.325" }
%"class.WTF::VectorBufferBase.325" = type { %"class.std::__1::unique_ptr.326"*, i32, i32 }
%"class.std::__1::unique_ptr.326" = type opaque
%"class.WTF::Vector.329" = type { %"class.WTF::VectorBuffer.330" }
%"class.WTF::VectorBuffer.330" = type { %"class.WTF::VectorBufferBase.331" }
%"class.WTF::VectorBufferBase.331" = type { %"class.std::__1::unique_ptr.332"*, i32, i32 }
%"class.std::__1::unique_ptr.332" = type opaque
%class.scoped_refptr.335 = type { %"class.blink::AudioBus"* }
%"class.blink::AudioBus" = type { %"class.WTF::ThreadSafeRefCounted.336", i32, %"class.WTF::Vector.338", i32, float }
%"class.WTF::ThreadSafeRefCounted.336" = type { %"class.base::RefCountedThreadSafe.337" }
%"class.base::RefCountedThreadSafe.337" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.338" = type { %"class.WTF::VectorBuffer.339" }
%"class.WTF::VectorBuffer.339" = type { %"class.WTF::VectorBufferBase.340", [64 x i8] }
%"class.WTF::VectorBufferBase.340" = type { %"class.blink::AudioChannel"*, i32, i32 }
%"class.blink::AudioChannel" = type <{ i64, float*, %"class.std::__1::unique_ptr.341", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"class.blink::AudioArray"* }
%"class.blink::AudioArray" = type <{ float*, float*, i32, [4 x i8] }>
%"class.WTF::HashSet.349" = type { %"class.WTF::HashTable.350" }
%"class.WTF::HashTable.350" = type <{ %"class.blink::AudioNodeInput"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.358" = type { %"class.WTF::HashTable.359" }
%"class.WTF::HashTable.359" = type <{ %"class.blink::AudioParamHandler"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioParamHandler" = type { %"class.blink::AudioSummingJunction.base", %"class.WTF::ThreadSafeRefCounted.362", i32, %"class.WTF::String", %"struct.std::__1::atomic.364", float, i32, i32, float, float, %"class.blink::AudioParamTimeline", %class.scoped_refptr.302, %class.scoped_refptr.335 }
%"class.blink::AudioSummingJunction.base" = type <{ i32 (...)**, %class.scoped_refptr.262, %"class.WTF::HashSet.290", %"class.WTF::Vector.353", i8 }>
%"class.WTF::ThreadSafeRefCounted.362" = type { %"class.base::RefCountedThreadSafe.363" }
%"class.base::RefCountedThreadSafe.363" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.364" = type { %"struct.std::__1::__atomic_base.365" }
%"struct.std::__1::__atomic_base.365" = type { %"struct.std::__1::__cxx_atomic_impl.366" }
%"struct.std::__1::__cxx_atomic_impl.366" = type { %"struct.std::__1::__cxx_atomic_base_impl.367" }
%"struct.std::__1::__cxx_atomic_base_impl.367" = type { float }
%"class.blink::AudioParamTimeline" = type <{ %"class.WTF::Vector.368", %"class.WTF::HashSet.379", %"class.WTF::Mutex", float, [4 x i8] }>
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.std::__1::unique_ptr.371"*, i32, i32 }
%"class.std::__1::unique_ptr.371" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"class.blink::AudioParamTimeline::ParamEvent"* }
%"class.blink::AudioParamTimeline::ParamEvent" = type <{ i32, float, double, float, [4 x i8], double, double, double, %"class.WTF::Vector.383", double, float, [4 x i8], %"class.std::__1::unique_ptr.371", i8, [7 x i8] }>
%"class.WTF::Vector.383" = type { %"class.WTF::VectorBuffer.384" }
%"class.WTF::VectorBuffer.384" = type { %"class.WTF::VectorBufferBase.385" }
%"class.WTF::VectorBufferBase.385" = type { float*, i32, i32 }
%"class.WTF::HashSet.379" = type { %"class.WTF::HashTable.380" }
%"class.WTF::HashTable.380" = type <{ %"class.blink::AudioParamTimeline::ParamEvent"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioNodeInput" = type { %"class.blink::AudioSummingJunction.base", %"class.blink::AudioHandler"*, %"class.WTF::HashSet.290", %class.scoped_refptr.335 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.509" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.511 }
%union.anon.511 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF9HashTableIPN5blink15AudioNodeOutputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_S3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPN5blink15AudioNodeOutputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF9HashTableIPN5blink15AudioNodeOutputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_ = comdat any

$_ZN3WTF9HashTableIPN5blink14AudioNodeInputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_S3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPN5blink14AudioNodeInputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF9HashTableIPN5blink14AudioNodeInputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_ = comdat any

$_ZN3WTF9HashTableIPN5blink17AudioParamHandlerES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_S3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPN5blink17AudioParamHandlerES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF9HashTableIPN5blink17AudioParamHandlerES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_ = comdat any

@.str = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink15AudioNodeOutputEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::AudioNodeOutput *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink14AudioNodeInputEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::AudioNodeInput *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink17AudioParamHandlerEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::AudioParamHandler *]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AudioNodeWiring7ConnectERNS_15AudioNodeOutputERNS_14AudioNodeInputE(%"class.blink::AudioNodeOutput"* dereferenceable(104), %"class.blink::AudioNodeInput"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::AudioNodeOutput"*, align 8
  %4 = alloca %"class.blink::AudioNodeInput"*, align 8
  %5 = bitcast %"class.blink::AudioNodeInput"* %1 to %"class.blink::AudioSummingJunction"*
  %6 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %1, i64 0, i32 0, i32 2
  %7 = ptrtoint %"class.blink::AudioNodeOutput"* %0 to i64
  %8 = getelementptr inbounds %"class.WTF::HashSet.290", %"class.WTF::HashSet.290"* %6, i64 0, i32 0, i32 0
  %9 = load %"class.blink::AudioNodeOutput"**, %"class.blink::AudioNodeOutput"*** %8, align 8
  %10 = icmp eq %"class.blink::AudioNodeOutput"** %9, null
  br i1 %10, label %72, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %1, i64 0, i32 0, i32 2, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = shl i64 %7, 32
  %17 = xor i64 %16, -1
  %18 = add i64 %17, %7
  %19 = lshr i64 %18, 22
  %20 = xor i64 %19, %18
  %21 = shl i64 %20, 13
  %22 = xor i64 %21, -1
  %23 = add i64 %20, %22
  %24 = lshr i64 %23, 8
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, 9
  %27 = lshr i64 %26, 15
  %28 = xor i64 %27, %26
  %29 = shl i64 %28, 27
  %30 = xor i64 %29, -1
  %31 = add i64 %28, %30
  %32 = lshr i64 %31, 31
  %33 = xor i64 %32, %31
  %34 = trunc i64 %33 to i32
  %35 = and i32 %14, %34
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %9, i64 %36
  %38 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %37, align 8
  %39 = icmp eq %"class.blink::AudioNodeOutput"* %38, %0
  br i1 %39, label %69, label %40

40:                                               ; preds = %11
  %41 = xor i32 %34, -1
  %42 = lshr i32 %34, 23
  %43 = add i32 %42, %41
  %44 = shl i32 %43, 12
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 7
  %47 = xor i32 %46, %45
  %48 = shl i32 %47, 2
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 20
  %51 = xor i32 %50, %49
  %52 = or i32 %51, 1
  %53 = zext i32 %52 to i64
  br label %54

54:                                               ; preds = %59, %40
  %55 = phi %"class.blink::AudioNodeOutput"* [ %38, %40 ], [ %65, %59 ]
  %56 = phi i64 [ %36, %40 ], [ %63, %59 ]
  %57 = phi i64 [ 0, %40 ], [ %61, %59 ]
  %58 = icmp eq %"class.blink::AudioNodeOutput"* %55, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %54
  %60 = icmp eq i64 %57, 0
  %61 = select i1 %60, i64 %53, i64 %57
  %62 = add i64 %61, %56
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %9, i64 %63
  %65 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %64, align 8
  %66 = icmp eq %"class.blink::AudioNodeOutput"* %65, %0
  br i1 %66, label %67, label %54

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %9, i64 %63
  br label %69

69:                                               ; preds = %67, %11
  %70 = phi %"class.blink::AudioNodeOutput"** [ %37, %11 ], [ %68, %67 ]
  %71 = icmp eq %"class.blink::AudioNodeOutput"** %70, null
  br i1 %71, label %72, label %137

72:                                               ; preds = %54, %69, %2
  %73 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %1, i64 0, i32 2, i32 0, i32 0
  %74 = load %"class.blink::AudioNodeOutput"**, %"class.blink::AudioNodeOutput"*** %73, align 8
  %75 = icmp eq %"class.blink::AudioNodeOutput"** %74, null
  br i1 %75, label %134, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %1, i64 0, i32 2, i32 0, i32 1
  %78 = load i32, i32* %77, align 8
  %79 = add i32 %78, -1
  %80 = zext i32 %79 to i64
  %81 = shl i64 %7, 32
  %82 = xor i64 %81, -1
  %83 = add i64 %82, %7
  %84 = lshr i64 %83, 22
  %85 = xor i64 %84, %83
  %86 = shl i64 %85, 13
  %87 = xor i64 %86, -1
  %88 = add i64 %85, %87
  %89 = lshr i64 %88, 8
  %90 = xor i64 %89, %88
  %91 = mul i64 %90, 9
  %92 = lshr i64 %91, 15
  %93 = xor i64 %92, %91
  %94 = shl i64 %93, 27
  %95 = xor i64 %94, -1
  %96 = add i64 %93, %95
  %97 = lshr i64 %96, 31
  %98 = xor i64 %97, %96
  %99 = trunc i64 %98 to i32
  %100 = and i32 %79, %99
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %74, i64 %101
  %103 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %102, align 8
  %104 = icmp eq %"class.blink::AudioNodeOutput"* %103, %0
  br i1 %104, label %134, label %105

105:                                              ; preds = %76
  %106 = xor i32 %99, -1
  %107 = lshr i32 %99, 23
  %108 = add i32 %107, %106
  %109 = shl i32 %108, 12
  %110 = xor i32 %109, %108
  %111 = lshr i32 %110, 7
  %112 = xor i32 %111, %110
  %113 = shl i32 %112, 2
  %114 = xor i32 %113, %112
  %115 = lshr i32 %114, 20
  %116 = xor i32 %115, %114
  %117 = or i32 %116, 1
  %118 = zext i32 %117 to i64
  br label %119

119:                                              ; preds = %124, %105
  %120 = phi %"class.blink::AudioNodeOutput"* [ %103, %105 ], [ %130, %124 ]
  %121 = phi i64 [ %101, %105 ], [ %128, %124 ]
  %122 = phi i64 [ 0, %105 ], [ %126, %124 ]
  %123 = icmp eq %"class.blink::AudioNodeOutput"* %120, null
  br i1 %123, label %134, label %124

124:                                              ; preds = %119
  %125 = icmp eq i64 %122, 0
  %126 = select i1 %125, i64 %118, i64 %122
  %127 = add i64 %126, %121
  %128 = and i64 %127, %80
  %129 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %74, i64 %128
  %130 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %129, align 8
  %131 = icmp eq %"class.blink::AudioNodeOutput"* %130, %0
  br i1 %131, label %132, label %119

132:                                              ; preds = %124
  %133 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %74, i64 %128
  br label %134

134:                                              ; preds = %119, %132, %72, %76
  %135 = phi %"class.blink::AudioNodeOutput"** [ null, %72 ], [ %102, %76 ], [ %133, %132 ], [ null, %119 ]
  %136 = icmp ne %"class.blink::AudioNodeOutput"** %135, null
  br label %137

137:                                              ; preds = %69, %134
  %138 = phi i1 [ true, %69 ], [ %136, %134 ]
  %139 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7
  %140 = ptrtoint %"class.blink::AudioNodeInput"* %1 to i64
  %141 = getelementptr inbounds %"class.WTF::HashSet.349", %"class.WTF::HashSet.349"* %139, i64 0, i32 0, i32 0
  %142 = load %"class.blink::AudioNodeInput"**, %"class.blink::AudioNodeInput"*** %141, align 8
  %143 = icmp eq %"class.blink::AudioNodeInput"** %142, null
  br i1 %143, label %200, label %144

144:                                              ; preds = %137
  %145 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7, i32 0, i32 1
  %146 = load i32, i32* %145, align 8
  %147 = add i32 %146, -1
  %148 = zext i32 %147 to i64
  %149 = shl i64 %140, 32
  %150 = xor i64 %149, -1
  %151 = add i64 %150, %140
  %152 = lshr i64 %151, 22
  %153 = xor i64 %152, %151
  %154 = shl i64 %153, 13
  %155 = xor i64 %154, -1
  %156 = add i64 %153, %155
  %157 = lshr i64 %156, 8
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, 9
  %160 = lshr i64 %159, 15
  %161 = xor i64 %160, %159
  %162 = shl i64 %161, 27
  %163 = xor i64 %162, -1
  %164 = add i64 %161, %163
  %165 = lshr i64 %164, 31
  %166 = xor i64 %165, %164
  %167 = trunc i64 %166 to i32
  %168 = and i32 %147, %167
  %169 = zext i32 %168 to i64
  %170 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %142, i64 %169
  %171 = load %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %170, align 8
  %172 = icmp eq %"class.blink::AudioNodeInput"* %171, %1
  br i1 %172, label %200, label %173

173:                                              ; preds = %144
  %174 = xor i32 %167, -1
  %175 = lshr i32 %167, 23
  %176 = add i32 %175, %174
  %177 = shl i32 %176, 12
  %178 = xor i32 %177, %176
  %179 = lshr i32 %178, 7
  %180 = xor i32 %179, %178
  %181 = shl i32 %180, 2
  %182 = xor i32 %181, %180
  %183 = lshr i32 %182, 20
  %184 = xor i32 %183, %182
  %185 = or i32 %184, 1
  %186 = zext i32 %185 to i64
  br label %187

187:                                              ; preds = %192, %173
  %188 = phi %"class.blink::AudioNodeInput"* [ %171, %173 ], [ %198, %192 ]
  %189 = phi i64 [ %169, %173 ], [ %196, %192 ]
  %190 = phi i64 [ 0, %173 ], [ %194, %192 ]
  %191 = icmp eq %"class.blink::AudioNodeInput"* %188, null
  br i1 %191, label %200, label %192

192:                                              ; preds = %187
  %193 = icmp eq i64 %190, 0
  %194 = select i1 %193, i64 %186, i64 %190
  %195 = add i64 %194, %189
  %196 = and i64 %195, %148
  %197 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %142, i64 %196
  %198 = load %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %197, align 8
  %199 = icmp eq %"class.blink::AudioNodeInput"* %198, %1
  br i1 %199, label %200, label %187

200:                                              ; preds = %192, %187, %137, %144
  br i1 %138, label %219, label %201

201:                                              ; preds = %200
  %202 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 8
  %203 = load i8, i8* %202, align 8, !range !2
  %204 = icmp eq i8 %203, 0
  %205 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %1, i64 0, i32 2
  %206 = select i1 %204, %"class.WTF::HashSet.290"* %205, %"class.WTF::HashSet.290"* %6
  %207 = bitcast %"class.blink::AudioNodeOutput"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %207) #5
  store %"class.blink::AudioNodeOutput"* %0, %"class.blink::AudioNodeOutput"** %3, align 8
  %208 = getelementptr inbounds %"class.WTF::HashSet.290", %"class.WTF::HashSet.290"* %206, i64 0, i32 0
  %209 = call { %"class.blink::AudioNodeOutput"**, i8 } @_ZN3WTF9HashTableIPN5blink15AudioNodeOutputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_S3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_(%"class.WTF::HashTable.291"* %208, %"class.blink::AudioNodeOutput"** nonnull dereferenceable(8) %3, %"class.blink::AudioNodeOutput"** nonnull dereferenceable(8) %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %207) #5
  %210 = bitcast %"class.blink::AudioNodeInput"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %210) #5
  store %"class.blink::AudioNodeInput"* %1, %"class.blink::AudioNodeInput"** %4, align 8
  %211 = getelementptr inbounds %"class.WTF::HashSet.349", %"class.WTF::HashSet.349"* %139, i64 0, i32 0
  %212 = call { %"class.blink::AudioNodeInput"**, i8 } @_ZN3WTF9HashTableIPN5blink14AudioNodeInputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_S3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_(%"class.WTF::HashTable.350"* %211, %"class.blink::AudioNodeInput"** nonnull dereferenceable(8) %4, %"class.blink::AudioNodeInput"** nonnull dereferenceable(8) %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %210) #5
  %213 = load i8, i8* %202, align 8, !range !2
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %216, label %215

215:                                              ; preds = %201
  call void @_ZN5blink20AudioSummingJunction14ChangedOutputsEv(%"class.blink::AudioSummingJunction"* %5) #5
  br label %216

216:                                              ; preds = %201, %215
  %217 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %1, i64 0, i32 1
  %218 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %217, align 8
  call void @_ZN5blink12AudioHandler14MakeConnectionEv(%"class.blink::AudioHandler"* %218) #5
  br label %219

219:                                              ; preds = %200, %216
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink20AudioSummingJunction14ChangedOutputsEv(%"class.blink::AudioSummingJunction"*) local_unnamed_addr #2

declare void @_ZN5blink12AudioHandler14MakeConnectionEv(%"class.blink::AudioHandler"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AudioNodeWiring7ConnectERNS_15AudioNodeOutputERNS_17AudioParamHandlerE(%"class.blink::AudioNodeOutput"* dereferenceable(104), %"class.blink::AudioParamHandler"* dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::AudioNodeOutput"*, align 8
  %4 = alloca %"class.blink::AudioParamHandler"*, align 8
  %5 = bitcast %"class.blink::AudioParamHandler"* %1 to %"class.blink::AudioSummingJunction"*
  %6 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %1, i64 0, i32 0, i32 2
  %7 = ptrtoint %"class.blink::AudioNodeOutput"* %0 to i64
  %8 = getelementptr inbounds %"class.WTF::HashSet.290", %"class.WTF::HashSet.290"* %6, i64 0, i32 0, i32 0
  %9 = load %"class.blink::AudioNodeOutput"**, %"class.blink::AudioNodeOutput"*** %8, align 8
  %10 = icmp eq %"class.blink::AudioNodeOutput"** %9, null
  br i1 %10, label %69, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %1, i64 0, i32 0, i32 2, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = shl i64 %7, 32
  %17 = xor i64 %16, -1
  %18 = add i64 %17, %7
  %19 = lshr i64 %18, 22
  %20 = xor i64 %19, %18
  %21 = shl i64 %20, 13
  %22 = xor i64 %21, -1
  %23 = add i64 %20, %22
  %24 = lshr i64 %23, 8
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, 9
  %27 = lshr i64 %26, 15
  %28 = xor i64 %27, %26
  %29 = shl i64 %28, 27
  %30 = xor i64 %29, -1
  %31 = add i64 %28, %30
  %32 = lshr i64 %31, 31
  %33 = xor i64 %32, %31
  %34 = trunc i64 %33 to i32
  %35 = and i32 %14, %34
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %9, i64 %36
  %38 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %37, align 8
  %39 = icmp eq %"class.blink::AudioNodeOutput"* %38, %0
  br i1 %39, label %69, label %40

40:                                               ; preds = %11
  %41 = xor i32 %34, -1
  %42 = lshr i32 %34, 23
  %43 = add i32 %42, %41
  %44 = shl i32 %43, 12
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 7
  %47 = xor i32 %46, %45
  %48 = shl i32 %47, 2
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 20
  %51 = xor i32 %50, %49
  %52 = or i32 %51, 1
  %53 = zext i32 %52 to i64
  br label %54

54:                                               ; preds = %59, %40
  %55 = phi %"class.blink::AudioNodeOutput"* [ %38, %40 ], [ %65, %59 ]
  %56 = phi i64 [ %36, %40 ], [ %63, %59 ]
  %57 = phi i64 [ 0, %40 ], [ %61, %59 ]
  %58 = icmp eq %"class.blink::AudioNodeOutput"* %55, null
  br i1 %58, label %69, label %59

59:                                               ; preds = %54
  %60 = icmp eq i64 %57, 0
  %61 = select i1 %60, i64 %53, i64 %57
  %62 = add i64 %61, %56
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %9, i64 %63
  %65 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %64, align 8
  %66 = icmp eq %"class.blink::AudioNodeOutput"* %65, %0
  br i1 %66, label %67, label %54

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %9, i64 %63
  br label %69

69:                                               ; preds = %54, %67, %2, %11
  %70 = phi %"class.blink::AudioNodeOutput"** [ null, %2 ], [ %37, %11 ], [ %68, %67 ], [ null, %54 ]
  %71 = icmp eq %"class.blink::AudioNodeOutput"** %70, null
  %72 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 13
  %73 = ptrtoint %"class.blink::AudioParamHandler"* %1 to i64
  %74 = getelementptr inbounds %"class.WTF::HashSet.358", %"class.WTF::HashSet.358"* %72, i64 0, i32 0, i32 0
  %75 = load %"class.blink::AudioParamHandler"**, %"class.blink::AudioParamHandler"*** %74, align 8
  %76 = icmp eq %"class.blink::AudioParamHandler"** %75, null
  br i1 %76, label %133, label %77

77:                                               ; preds = %69
  %78 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 13, i32 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = add i32 %79, -1
  %81 = zext i32 %80 to i64
  %82 = shl i64 %73, 32
  %83 = xor i64 %82, -1
  %84 = add i64 %83, %73
  %85 = lshr i64 %84, 22
  %86 = xor i64 %85, %84
  %87 = shl i64 %86, 13
  %88 = xor i64 %87, -1
  %89 = add i64 %86, %88
  %90 = lshr i64 %89, 8
  %91 = xor i64 %90, %89
  %92 = mul i64 %91, 9
  %93 = lshr i64 %92, 15
  %94 = xor i64 %93, %92
  %95 = shl i64 %94, 27
  %96 = xor i64 %95, -1
  %97 = add i64 %94, %96
  %98 = lshr i64 %97, 31
  %99 = xor i64 %98, %97
  %100 = trunc i64 %99 to i32
  %101 = and i32 %80, %100
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %75, i64 %102
  %104 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %103, align 8
  %105 = icmp eq %"class.blink::AudioParamHandler"* %104, %1
  br i1 %105, label %133, label %106

106:                                              ; preds = %77
  %107 = xor i32 %100, -1
  %108 = lshr i32 %100, 23
  %109 = add i32 %108, %107
  %110 = shl i32 %109, 12
  %111 = xor i32 %110, %109
  %112 = lshr i32 %111, 7
  %113 = xor i32 %112, %111
  %114 = shl i32 %113, 2
  %115 = xor i32 %114, %113
  %116 = lshr i32 %115, 20
  %117 = xor i32 %116, %115
  %118 = or i32 %117, 1
  %119 = zext i32 %118 to i64
  br label %120

120:                                              ; preds = %125, %106
  %121 = phi %"class.blink::AudioParamHandler"* [ %104, %106 ], [ %131, %125 ]
  %122 = phi i64 [ %102, %106 ], [ %129, %125 ]
  %123 = phi i64 [ 0, %106 ], [ %127, %125 ]
  %124 = icmp eq %"class.blink::AudioParamHandler"* %121, null
  br i1 %124, label %133, label %125

125:                                              ; preds = %120
  %126 = icmp eq i64 %123, 0
  %127 = select i1 %126, i64 %119, i64 %123
  %128 = add i64 %127, %122
  %129 = and i64 %128, %81
  %130 = getelementptr inbounds %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %75, i64 %129
  %131 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %130, align 8
  %132 = icmp eq %"class.blink::AudioParamHandler"* %131, %1
  br i1 %132, label %133, label %120

133:                                              ; preds = %125, %120, %69, %77
  br i1 %71, label %134, label %141

134:                                              ; preds = %133
  %135 = bitcast %"class.blink::AudioNodeOutput"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %135) #5
  store %"class.blink::AudioNodeOutput"* %0, %"class.blink::AudioNodeOutput"** %3, align 8
  %136 = getelementptr inbounds %"class.WTF::HashSet.290", %"class.WTF::HashSet.290"* %6, i64 0, i32 0
  %137 = call { %"class.blink::AudioNodeOutput"**, i8 } @_ZN3WTF9HashTableIPN5blink15AudioNodeOutputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_S3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_(%"class.WTF::HashTable.291"* %136, %"class.blink::AudioNodeOutput"** nonnull dereferenceable(8) %3, %"class.blink::AudioNodeOutput"** nonnull dereferenceable(8) %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %135) #5
  %138 = bitcast %"class.blink::AudioParamHandler"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #5
  store %"class.blink::AudioParamHandler"* %1, %"class.blink::AudioParamHandler"** %4, align 8
  %139 = getelementptr inbounds %"class.WTF::HashSet.358", %"class.WTF::HashSet.358"* %72, i64 0, i32 0
  %140 = call { %"class.blink::AudioParamHandler"**, i8 } @_ZN3WTF9HashTableIPN5blink17AudioParamHandlerES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_S3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_(%"class.WTF::HashTable.359"* %139, %"class.blink::AudioParamHandler"** nonnull dereferenceable(8) %4, %"class.blink::AudioParamHandler"** nonnull dereferenceable(8) %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #5
  call void @_ZN5blink20AudioSummingJunction14ChangedOutputsEv(%"class.blink::AudioSummingJunction"* %5) #5
  br label %141

141:                                              ; preds = %133, %134
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AudioNodeWiring10DisconnectERNS_15AudioNodeOutputERNS_14AudioNodeInputE(%"class.blink::AudioNodeOutput"* dereferenceable(104), %"class.blink::AudioNodeInput"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::AudioNodeInput"* %1 to %"class.blink::AudioSummingJunction"*
  %4 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %1, i64 0, i32 0, i32 2
  %5 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %1, i64 0, i32 2
  %6 = ptrtoint %"class.blink::AudioNodeOutput"* %0 to i64
  %7 = getelementptr inbounds %"class.WTF::HashSet.290", %"class.WTF::HashSet.290"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::AudioNodeOutput"**, %"class.blink::AudioNodeOutput"*** %7, align 8, !noalias !3
  %9 = icmp eq %"class.blink::AudioNodeOutput"** %8, null
  %10 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %1, i64 0, i32 0, i32 2, i32 0, i32 1
  %11 = load i32, i32* %10, align 8, !noalias !3
  br i1 %9, label %71, label %12

12:                                               ; preds = %2
  %13 = add i32 %11, -1
  %14 = zext i32 %13 to i64
  %15 = shl i64 %6, 32
  %16 = xor i64 %15, -1
  %17 = add i64 %16, %6
  %18 = lshr i64 %17, 22
  %19 = xor i64 %18, %17
  %20 = shl i64 %19, 13
  %21 = xor i64 %20, -1
  %22 = add i64 %19, %21
  %23 = lshr i64 %22, 8
  %24 = xor i64 %23, %22
  %25 = mul i64 %24, 9
  %26 = lshr i64 %25, 15
  %27 = xor i64 %26, %25
  %28 = shl i64 %27, 27
  %29 = xor i64 %28, -1
  %30 = add i64 %27, %29
  %31 = lshr i64 %30, 31
  %32 = xor i64 %31, %30
  %33 = trunc i64 %32 to i32
  %34 = and i32 %13, %33
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %8, i64 %35
  %37 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %36, align 8, !noalias !3
  %38 = icmp eq %"class.blink::AudioNodeOutput"* %37, %0
  br i1 %38, label %68, label %39

39:                                               ; preds = %12
  %40 = xor i32 %33, -1
  %41 = lshr i32 %33, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::AudioNodeOutput"* [ %37, %39 ], [ %64, %58 ]
  %55 = phi i64 [ %35, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::AudioNodeOutput"* %54, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %14
  %63 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %8, i64 %62
  %64 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %63, align 8, !noalias !3
  %65 = icmp eq %"class.blink::AudioNodeOutput"* %64, %0
  br i1 %65, label %66, label %53

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %8, i64 %62
  br label %68

68:                                               ; preds = %66, %12
  %69 = phi %"class.blink::AudioNodeOutput"** [ %36, %12 ], [ %67, %66 ]
  %70 = icmp eq %"class.blink::AudioNodeOutput"** %69, null
  br i1 %70, label %71, label %74

71:                                               ; preds = %53, %68, %2
  %72 = zext i32 %11 to i64
  %73 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %8, i64 %72
  br label %76

74:                                               ; preds = %68
  %75 = zext i32 %11 to i64
  br label %76

76:                                               ; preds = %74, %71
  %77 = phi i64 [ %72, %71 ], [ %75, %74 ]
  %78 = phi %"class.blink::AudioNodeOutput"** [ %73, %71 ], [ %69, %74 ]
  %79 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %8, i64 %77
  %80 = icmp eq %"class.blink::AudioNodeOutput"** %78, %79
  br i1 %80, label %81, label %162

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.WTF::HashSet.290", %"class.WTF::HashSet.290"* %5, i64 0, i32 0, i32 0
  %83 = load %"class.blink::AudioNodeOutput"**, %"class.blink::AudioNodeOutput"*** %82, align 8, !noalias !3
  %84 = icmp eq %"class.blink::AudioNodeOutput"** %83, null
  %85 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %1, i64 0, i32 2, i32 0, i32 1
  %86 = load i32, i32* %85, align 8, !noalias !3
  br i1 %84, label %146, label %87

87:                                               ; preds = %81
  %88 = add i32 %86, -1
  %89 = zext i32 %88 to i64
  %90 = shl i64 %6, 32
  %91 = xor i64 %90, -1
  %92 = add i64 %91, %6
  %93 = lshr i64 %92, 22
  %94 = xor i64 %93, %92
  %95 = shl i64 %94, 13
  %96 = xor i64 %95, -1
  %97 = add i64 %94, %96
  %98 = lshr i64 %97, 8
  %99 = xor i64 %98, %97
  %100 = mul i64 %99, 9
  %101 = lshr i64 %100, 15
  %102 = xor i64 %101, %100
  %103 = shl i64 %102, 27
  %104 = xor i64 %103, -1
  %105 = add i64 %102, %104
  %106 = lshr i64 %105, 31
  %107 = xor i64 %106, %105
  %108 = trunc i64 %107 to i32
  %109 = and i32 %88, %108
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %83, i64 %110
  %112 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %111, align 8, !noalias !3
  %113 = icmp eq %"class.blink::AudioNodeOutput"* %112, %0
  br i1 %113, label %143, label %114

114:                                              ; preds = %87
  %115 = xor i32 %108, -1
  %116 = lshr i32 %108, 23
  %117 = add i32 %116, %115
  %118 = shl i32 %117, 12
  %119 = xor i32 %118, %117
  %120 = lshr i32 %119, 7
  %121 = xor i32 %120, %119
  %122 = shl i32 %121, 2
  %123 = xor i32 %122, %121
  %124 = lshr i32 %123, 20
  %125 = xor i32 %124, %123
  %126 = or i32 %125, 1
  %127 = zext i32 %126 to i64
  br label %128

128:                                              ; preds = %133, %114
  %129 = phi %"class.blink::AudioNodeOutput"* [ %112, %114 ], [ %139, %133 ]
  %130 = phi i64 [ %110, %114 ], [ %137, %133 ]
  %131 = phi i64 [ 0, %114 ], [ %135, %133 ]
  %132 = icmp eq %"class.blink::AudioNodeOutput"* %129, null
  br i1 %132, label %146, label %133

133:                                              ; preds = %128
  %134 = icmp eq i64 %131, 0
  %135 = select i1 %134, i64 %127, i64 %131
  %136 = add i64 %135, %130
  %137 = and i64 %136, %89
  %138 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %83, i64 %137
  %139 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %138, align 8, !noalias !3
  %140 = icmp eq %"class.blink::AudioNodeOutput"* %139, %0
  br i1 %140, label %141, label %128

141:                                              ; preds = %133
  %142 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %83, i64 %137
  br label %143

143:                                              ; preds = %141, %87
  %144 = phi %"class.blink::AudioNodeOutput"** [ %111, %87 ], [ %142, %141 ]
  %145 = icmp eq %"class.blink::AudioNodeOutput"** %144, null
  br i1 %145, label %146, label %149

146:                                              ; preds = %128, %143, %81
  %147 = zext i32 %86 to i64
  %148 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %83, i64 %147
  br label %151

149:                                              ; preds = %143
  %150 = zext i32 %86 to i64
  br label %151

151:                                              ; preds = %149, %146
  %152 = phi i64 [ %147, %146 ], [ %150, %149 ]
  %153 = phi %"class.blink::AudioNodeOutput"** [ %148, %146 ], [ %144, %149 ]
  %154 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %83, i64 %152
  %155 = icmp eq %"class.blink::AudioNodeOutput"** %153, %154
  %156 = xor i1 %155, true
  %157 = zext i1 %156 to i8
  %158 = select i1 %155, %"class.WTF::HashSet.290"* %4, %"class.WTF::HashSet.290"* %5
  %159 = select i1 %155, %"class.blink::AudioNodeOutput"** null, %"class.blink::AudioNodeOutput"** %153
  %160 = getelementptr inbounds %"class.WTF::HashSet.290", %"class.WTF::HashSet.290"* %158, i64 0, i32 0, i32 0
  %161 = load %"class.blink::AudioNodeOutput"**, %"class.blink::AudioNodeOutput"*** %160, align 8
  br label %162

162:                                              ; preds = %151, %76
  %163 = phi %"class.blink::AudioNodeOutput"** [ %8, %76 ], [ %161, %151 ]
  %164 = phi i8 [ 0, %76 ], [ %157, %151 ]
  %165 = phi %"class.WTF::HashSet.290"* [ %4, %76 ], [ %158, %151 ]
  %166 = phi %"class.blink::AudioNodeOutput"** [ %78, %76 ], [ %159, %151 ]
  %167 = getelementptr inbounds %"class.WTF::HashSet.290", %"class.WTF::HashSet.290"* %165, i64 0, i32 0
  %168 = getelementptr inbounds %"class.WTF::HashSet.290", %"class.WTF::HashSet.290"* %165, i64 0, i32 0, i32 1
  %169 = load i32, i32* %168, align 8
  %170 = zext i32 %169 to i64
  %171 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %163, i64 %170
  %172 = icmp eq %"class.blink::AudioNodeOutput"** %171, %166
  br i1 %172, label %195, label %173

173:                                              ; preds = %162
  store %"class.blink::AudioNodeOutput"* inttoptr (i64 -1 to %"class.blink::AudioNodeOutput"*), %"class.blink::AudioNodeOutput"** %166, align 8
  %174 = getelementptr inbounds %"class.WTF::HashSet.290", %"class.WTF::HashSet.290"* %165, i64 0, i32 0, i32 3
  %175 = load i32, i32* %174, align 8
  %176 = add i32 %175, 1
  %177 = and i32 %176, 2147483647
  %178 = and i32 %175, -2147483648
  %179 = or i32 %177, %178
  store i32 %179, i32* %174, align 8
  %180 = getelementptr inbounds %"class.WTF::HashSet.290", %"class.WTF::HashSet.290"* %165, i64 0, i32 0, i32 2
  %181 = load i32, i32* %180, align 4
  %182 = add i32 %181, -1
  store i32 %182, i32* %180, align 4
  %183 = mul i32 %182, 6
  %184 = load i32, i32* %168, align 8
  %185 = icmp ult i32 %183, %184
  %186 = icmp ugt i32 %184, 8
  %187 = and i1 %185, %186
  br i1 %187, label %188, label %195

188:                                              ; preds = %173
  %189 = lshr i32 %184, 1
  %190 = zext i32 %189 to i64
  %191 = shl nuw nsw i64 %190, 3
  %192 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %191, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink15AudioNodeOutputEEEPKcv, i64 0, i64 0)) #5
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %192, i8 0, i64 %191, i1 false) #5
  %193 = bitcast i8* %192 to %"class.blink::AudioNodeOutput"**
  %194 = tail call %"class.blink::AudioNodeOutput"** @_ZN3WTF9HashTableIPN5blink15AudioNodeOutputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable.291"* %167, %"class.blink::AudioNodeOutput"** %193, i32 %189, %"class.blink::AudioNodeOutput"** null) #5
  br label %195

195:                                              ; preds = %162, %173, %188
  %196 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7
  %197 = ptrtoint %"class.blink::AudioNodeInput"* %1 to i64
  %198 = getelementptr inbounds %"class.WTF::HashSet.349", %"class.WTF::HashSet.349"* %196, i64 0, i32 0
  %199 = getelementptr inbounds %"class.WTF::HashSet.349", %"class.WTF::HashSet.349"* %196, i64 0, i32 0, i32 0
  %200 = load %"class.blink::AudioNodeInput"**, %"class.blink::AudioNodeInput"*** %199, align 8
  %201 = icmp eq %"class.blink::AudioNodeInput"** %200, null
  %202 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7, i32 0, i32 1
  %203 = load i32, i32* %202, align 8
  br i1 %201, label %265, label %204

204:                                              ; preds = %195
  %205 = add i32 %203, -1
  %206 = zext i32 %205 to i64
  %207 = shl i64 %197, 32
  %208 = xor i64 %207, -1
  %209 = add i64 %208, %197
  %210 = lshr i64 %209, 22
  %211 = xor i64 %210, %209
  %212 = shl i64 %211, 13
  %213 = xor i64 %212, -1
  %214 = add i64 %211, %213
  %215 = lshr i64 %214, 8
  %216 = xor i64 %215, %214
  %217 = mul i64 %216, 9
  %218 = lshr i64 %217, 15
  %219 = xor i64 %218, %217
  %220 = shl i64 %219, 27
  %221 = xor i64 %220, -1
  %222 = add i64 %219, %221
  %223 = lshr i64 %222, 31
  %224 = xor i64 %223, %222
  %225 = trunc i64 %224 to i32
  %226 = and i32 %205, %225
  %227 = zext i32 %226 to i64
  %228 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %200, i64 %227
  %229 = load %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %228, align 8
  %230 = icmp eq %"class.blink::AudioNodeInput"* %229, %1
  br i1 %230, label %260, label %231

231:                                              ; preds = %204
  %232 = xor i32 %225, -1
  %233 = lshr i32 %225, 23
  %234 = add i32 %233, %232
  %235 = shl i32 %234, 12
  %236 = xor i32 %235, %234
  %237 = lshr i32 %236, 7
  %238 = xor i32 %237, %236
  %239 = shl i32 %238, 2
  %240 = xor i32 %239, %238
  %241 = lshr i32 %240, 20
  %242 = xor i32 %241, %240
  %243 = or i32 %242, 1
  %244 = zext i32 %243 to i64
  br label %245

245:                                              ; preds = %250, %231
  %246 = phi %"class.blink::AudioNodeInput"* [ %229, %231 ], [ %256, %250 ]
  %247 = phi i64 [ %227, %231 ], [ %254, %250 ]
  %248 = phi i64 [ 0, %231 ], [ %252, %250 ]
  %249 = icmp eq %"class.blink::AudioNodeInput"* %246, null
  br i1 %249, label %265, label %250

250:                                              ; preds = %245
  %251 = icmp eq i64 %248, 0
  %252 = select i1 %251, i64 %244, i64 %248
  %253 = add i64 %252, %247
  %254 = and i64 %253, %206
  %255 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %200, i64 %254
  %256 = load %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %255, align 8
  %257 = icmp eq %"class.blink::AudioNodeInput"* %256, %1
  br i1 %257, label %258, label %245

258:                                              ; preds = %250
  %259 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %200, i64 %254
  br label %260

260:                                              ; preds = %258, %204
  %261 = phi %"class.blink::AudioNodeInput"** [ %228, %204 ], [ %259, %258 ]
  %262 = icmp eq %"class.blink::AudioNodeInput"** %261, null
  br i1 %262, label %265, label %263

263:                                              ; preds = %260
  %264 = zext i32 %203 to i64
  br label %268

265:                                              ; preds = %245, %260, %195
  %266 = zext i32 %203 to i64
  %267 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %200, i64 %266
  br label %268

268:                                              ; preds = %263, %265
  %269 = phi i64 [ %264, %263 ], [ %266, %265 ]
  %270 = phi %"class.blink::AudioNodeInput"** [ %261, %263 ], [ %267, %265 ]
  %271 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %200, i64 %269
  %272 = icmp eq %"class.blink::AudioNodeInput"** %271, %270
  br i1 %272, label %295, label %273

273:                                              ; preds = %268
  store %"class.blink::AudioNodeInput"* inttoptr (i64 -1 to %"class.blink::AudioNodeInput"*), %"class.blink::AudioNodeInput"** %270, align 8
  %274 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7, i32 0, i32 3
  %275 = load i32, i32* %274, align 8
  %276 = add i32 %275, 1
  %277 = and i32 %276, 2147483647
  %278 = and i32 %275, -2147483648
  %279 = or i32 %277, %278
  store i32 %279, i32* %274, align 8
  %280 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7, i32 0, i32 2
  %281 = load i32, i32* %280, align 4
  %282 = add i32 %281, -1
  store i32 %282, i32* %280, align 4
  %283 = mul i32 %282, 6
  %284 = load i32, i32* %202, align 8
  %285 = icmp ult i32 %283, %284
  %286 = icmp ugt i32 %284, 8
  %287 = and i1 %285, %286
  br i1 %287, label %288, label %295

288:                                              ; preds = %273
  %289 = lshr i32 %284, 1
  %290 = zext i32 %289 to i64
  %291 = shl nuw nsw i64 %290, 3
  %292 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %291, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink14AudioNodeInputEEEPKcv, i64 0, i64 0)) #5
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %292, i8 0, i64 %291, i1 false) #5
  %293 = bitcast i8* %292 to %"class.blink::AudioNodeInput"**
  %294 = tail call %"class.blink::AudioNodeInput"** @_ZN3WTF9HashTableIPN5blink14AudioNodeInputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable.350"* %198, %"class.blink::AudioNodeInput"** %293, i32 %289, %"class.blink::AudioNodeInput"** null) #5
  br label %295

295:                                              ; preds = %268, %273, %288
  %296 = icmp eq i8 %164, 0
  br i1 %296, label %297, label %298

297:                                              ; preds = %295
  tail call void @_ZN5blink20AudioSummingJunction14ChangedOutputsEv(%"class.blink::AudioSummingJunction"* %3) #5
  br label %298

298:                                              ; preds = %295, %297
  %299 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %1, i64 0, i32 1
  %300 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %299, align 8
  tail call void @_ZN5blink12AudioHandler23BreakConnectionWithLockEv(%"class.blink::AudioHandler"* %300) #5
  ret void
}

declare void @_ZN5blink12AudioHandler23BreakConnectionWithLockEv(%"class.blink::AudioHandler"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AudioNodeWiring10DisconnectERNS_15AudioNodeOutputERNS_17AudioParamHandlerE(%"class.blink::AudioNodeOutput"* dereferenceable(104), %"class.blink::AudioParamHandler"* dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::AudioParamHandler"* %1 to %"class.blink::AudioSummingJunction"*
  %4 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %1, i64 0, i32 0, i32 2
  %5 = ptrtoint %"class.blink::AudioNodeOutput"* %0 to i64
  %6 = getelementptr inbounds %"class.WTF::HashSet.290", %"class.WTF::HashSet.290"* %4, i64 0, i32 0
  %7 = getelementptr inbounds %"class.WTF::HashSet.290", %"class.WTF::HashSet.290"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::AudioNodeOutput"**, %"class.blink::AudioNodeOutput"*** %7, align 8
  %9 = icmp eq %"class.blink::AudioNodeOutput"** %8, null
  %10 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %1, i64 0, i32 0, i32 2, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  br i1 %9, label %73, label %12

12:                                               ; preds = %2
  %13 = add i32 %11, -1
  %14 = zext i32 %13 to i64
  %15 = shl i64 %5, 32
  %16 = xor i64 %15, -1
  %17 = add i64 %16, %5
  %18 = lshr i64 %17, 22
  %19 = xor i64 %18, %17
  %20 = shl i64 %19, 13
  %21 = xor i64 %20, -1
  %22 = add i64 %19, %21
  %23 = lshr i64 %22, 8
  %24 = xor i64 %23, %22
  %25 = mul i64 %24, 9
  %26 = lshr i64 %25, 15
  %27 = xor i64 %26, %25
  %28 = shl i64 %27, 27
  %29 = xor i64 %28, -1
  %30 = add i64 %27, %29
  %31 = lshr i64 %30, 31
  %32 = xor i64 %31, %30
  %33 = trunc i64 %32 to i32
  %34 = and i32 %13, %33
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %8, i64 %35
  %37 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %36, align 8
  %38 = icmp eq %"class.blink::AudioNodeOutput"* %37, %0
  br i1 %38, label %68, label %39

39:                                               ; preds = %12
  %40 = xor i32 %33, -1
  %41 = lshr i32 %33, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::AudioNodeOutput"* [ %37, %39 ], [ %64, %58 ]
  %55 = phi i64 [ %35, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::AudioNodeOutput"* %54, null
  br i1 %57, label %73, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %14
  %63 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %8, i64 %62
  %64 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %63, align 8
  %65 = icmp eq %"class.blink::AudioNodeOutput"* %64, %0
  br i1 %65, label %66, label %53

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %8, i64 %62
  br label %68

68:                                               ; preds = %66, %12
  %69 = phi %"class.blink::AudioNodeOutput"** [ %36, %12 ], [ %67, %66 ]
  %70 = icmp eq %"class.blink::AudioNodeOutput"** %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = zext i32 %11 to i64
  br label %76

73:                                               ; preds = %53, %68, %2
  %74 = zext i32 %11 to i64
  %75 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %8, i64 %74
  br label %76

76:                                               ; preds = %71, %73
  %77 = phi i64 [ %72, %71 ], [ %74, %73 ]
  %78 = phi %"class.blink::AudioNodeOutput"** [ %69, %71 ], [ %75, %73 ]
  %79 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %8, i64 %77
  %80 = icmp eq %"class.blink::AudioNodeOutput"** %79, %78
  br i1 %80, label %103, label %81

81:                                               ; preds = %76
  store %"class.blink::AudioNodeOutput"* inttoptr (i64 -1 to %"class.blink::AudioNodeOutput"*), %"class.blink::AudioNodeOutput"** %78, align 8
  %82 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %1, i64 0, i32 0, i32 2, i32 0, i32 3
  %83 = load i32, i32* %82, align 8
  %84 = add i32 %83, 1
  %85 = and i32 %84, 2147483647
  %86 = and i32 %83, -2147483648
  %87 = or i32 %85, %86
  store i32 %87, i32* %82, align 8
  %88 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %1, i64 0, i32 0, i32 2, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = add i32 %89, -1
  store i32 %90, i32* %88, align 4
  %91 = mul i32 %90, 6
  %92 = load i32, i32* %10, align 8
  %93 = icmp ult i32 %91, %92
  %94 = icmp ugt i32 %92, 8
  %95 = and i1 %93, %94
  br i1 %95, label %96, label %103

96:                                               ; preds = %81
  %97 = lshr i32 %92, 1
  %98 = zext i32 %97 to i64
  %99 = shl nuw nsw i64 %98, 3
  %100 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %99, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink15AudioNodeOutputEEEPKcv, i64 0, i64 0)) #5
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %100, i8 0, i64 %99, i1 false) #5
  %101 = bitcast i8* %100 to %"class.blink::AudioNodeOutput"**
  %102 = tail call %"class.blink::AudioNodeOutput"** @_ZN3WTF9HashTableIPN5blink15AudioNodeOutputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable.291"* %6, %"class.blink::AudioNodeOutput"** %101, i32 %97, %"class.blink::AudioNodeOutput"** null) #5
  br label %103

103:                                              ; preds = %76, %81, %96
  %104 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 13
  %105 = ptrtoint %"class.blink::AudioParamHandler"* %1 to i64
  %106 = getelementptr inbounds %"class.WTF::HashSet.358", %"class.WTF::HashSet.358"* %104, i64 0, i32 0
  %107 = getelementptr inbounds %"class.WTF::HashSet.358", %"class.WTF::HashSet.358"* %104, i64 0, i32 0, i32 0
  %108 = load %"class.blink::AudioParamHandler"**, %"class.blink::AudioParamHandler"*** %107, align 8
  %109 = icmp eq %"class.blink::AudioParamHandler"** %108, null
  %110 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 13, i32 0, i32 1
  %111 = load i32, i32* %110, align 8
  br i1 %109, label %173, label %112

112:                                              ; preds = %103
  %113 = add i32 %111, -1
  %114 = zext i32 %113 to i64
  %115 = shl i64 %105, 32
  %116 = xor i64 %115, -1
  %117 = add i64 %116, %105
  %118 = lshr i64 %117, 22
  %119 = xor i64 %118, %117
  %120 = shl i64 %119, 13
  %121 = xor i64 %120, -1
  %122 = add i64 %119, %121
  %123 = lshr i64 %122, 8
  %124 = xor i64 %123, %122
  %125 = mul i64 %124, 9
  %126 = lshr i64 %125, 15
  %127 = xor i64 %126, %125
  %128 = shl i64 %127, 27
  %129 = xor i64 %128, -1
  %130 = add i64 %127, %129
  %131 = lshr i64 %130, 31
  %132 = xor i64 %131, %130
  %133 = trunc i64 %132 to i32
  %134 = and i32 %113, %133
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %108, i64 %135
  %137 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %136, align 8
  %138 = icmp eq %"class.blink::AudioParamHandler"* %137, %1
  br i1 %138, label %168, label %139

139:                                              ; preds = %112
  %140 = xor i32 %133, -1
  %141 = lshr i32 %133, 23
  %142 = add i32 %141, %140
  %143 = shl i32 %142, 12
  %144 = xor i32 %143, %142
  %145 = lshr i32 %144, 7
  %146 = xor i32 %145, %144
  %147 = shl i32 %146, 2
  %148 = xor i32 %147, %146
  %149 = lshr i32 %148, 20
  %150 = xor i32 %149, %148
  %151 = or i32 %150, 1
  %152 = zext i32 %151 to i64
  br label %153

153:                                              ; preds = %158, %139
  %154 = phi %"class.blink::AudioParamHandler"* [ %137, %139 ], [ %164, %158 ]
  %155 = phi i64 [ %135, %139 ], [ %162, %158 ]
  %156 = phi i64 [ 0, %139 ], [ %160, %158 ]
  %157 = icmp eq %"class.blink::AudioParamHandler"* %154, null
  br i1 %157, label %173, label %158

158:                                              ; preds = %153
  %159 = icmp eq i64 %156, 0
  %160 = select i1 %159, i64 %152, i64 %156
  %161 = add i64 %160, %155
  %162 = and i64 %161, %114
  %163 = getelementptr inbounds %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %108, i64 %162
  %164 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %163, align 8
  %165 = icmp eq %"class.blink::AudioParamHandler"* %164, %1
  br i1 %165, label %166, label %153

166:                                              ; preds = %158
  %167 = getelementptr inbounds %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %108, i64 %162
  br label %168

168:                                              ; preds = %166, %112
  %169 = phi %"class.blink::AudioParamHandler"** [ %136, %112 ], [ %167, %166 ]
  %170 = icmp eq %"class.blink::AudioParamHandler"** %169, null
  br i1 %170, label %173, label %171

171:                                              ; preds = %168
  %172 = zext i32 %111 to i64
  br label %176

173:                                              ; preds = %153, %168, %103
  %174 = zext i32 %111 to i64
  %175 = getelementptr inbounds %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %108, i64 %174
  br label %176

176:                                              ; preds = %171, %173
  %177 = phi i64 [ %172, %171 ], [ %174, %173 ]
  %178 = phi %"class.blink::AudioParamHandler"** [ %169, %171 ], [ %175, %173 ]
  %179 = getelementptr inbounds %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %108, i64 %177
  %180 = icmp eq %"class.blink::AudioParamHandler"** %179, %178
  br i1 %180, label %203, label %181

181:                                              ; preds = %176
  store %"class.blink::AudioParamHandler"* inttoptr (i64 -1 to %"class.blink::AudioParamHandler"*), %"class.blink::AudioParamHandler"** %178, align 8
  %182 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 13, i32 0, i32 3
  %183 = load i32, i32* %182, align 8
  %184 = add i32 %183, 1
  %185 = and i32 %184, 2147483647
  %186 = and i32 %183, -2147483648
  %187 = or i32 %185, %186
  store i32 %187, i32* %182, align 8
  %188 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 13, i32 0, i32 2
  %189 = load i32, i32* %188, align 4
  %190 = add i32 %189, -1
  store i32 %190, i32* %188, align 4
  %191 = mul i32 %190, 6
  %192 = load i32, i32* %110, align 8
  %193 = icmp ult i32 %191, %192
  %194 = icmp ugt i32 %192, 8
  %195 = and i1 %193, %194
  br i1 %195, label %196, label %203

196:                                              ; preds = %181
  %197 = lshr i32 %192, 1
  %198 = zext i32 %197 to i64
  %199 = shl nuw nsw i64 %198, 3
  %200 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %199, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink17AudioParamHandlerEEEPKcv, i64 0, i64 0)) #5
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %200, i8 0, i64 %199, i1 false) #5
  %201 = bitcast i8* %200 to %"class.blink::AudioParamHandler"**
  %202 = tail call %"class.blink::AudioParamHandler"** @_ZN3WTF9HashTableIPN5blink17AudioParamHandlerES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable.359"* %106, %"class.blink::AudioParamHandler"** %201, i32 %197, %"class.blink::AudioParamHandler"** null) #5
  br label %203

203:                                              ; preds = %176, %181, %196
  tail call void @_ZN5blink20AudioSummingJunction14ChangedOutputsEv(%"class.blink::AudioSummingJunction"* %3) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AudioNodeWiring7DisableERNS_15AudioNodeOutputERNS_14AudioNodeInputE(%"class.blink::AudioNodeOutput"* dereferenceable(104), %"class.blink::AudioNodeInput"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::AudioNodeOutput"*, align 8
  %4 = bitcast %"class.blink::AudioNodeInput"* %1 to %"class.blink::AudioSummingJunction"*
  %5 = bitcast %"class.blink::AudioNodeOutput"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  store %"class.blink::AudioNodeOutput"* %0, %"class.blink::AudioNodeOutput"** %3, align 8
  %6 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %1, i64 0, i32 2, i32 0
  %7 = call { %"class.blink::AudioNodeOutput"**, i8 } @_ZN3WTF9HashTableIPN5blink15AudioNodeOutputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_S3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_(%"class.WTF::HashTable.291"* %6, %"class.blink::AudioNodeOutput"** nonnull dereferenceable(8) %3, %"class.blink::AudioNodeOutput"** nonnull dereferenceable(8) %3) #5
  %8 = extractvalue { %"class.blink::AudioNodeOutput"**, i8 } %7, 1
  %9 = and i8 %8, 1
  %10 = icmp eq i8 %9, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  br i1 %10, label %114, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %1, i64 0, i32 0, i32 2
  %13 = ptrtoint %"class.blink::AudioNodeOutput"* %0 to i64
  %14 = getelementptr inbounds %"class.WTF::HashSet.290", %"class.WTF::HashSet.290"* %12, i64 0, i32 0
  %15 = getelementptr inbounds %"class.WTF::HashSet.290", %"class.WTF::HashSet.290"* %12, i64 0, i32 0, i32 0
  %16 = load %"class.blink::AudioNodeOutput"**, %"class.blink::AudioNodeOutput"*** %15, align 8
  %17 = icmp eq %"class.blink::AudioNodeOutput"** %16, null
  %18 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %1, i64 0, i32 0, i32 2, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  br i1 %17, label %81, label %20

20:                                               ; preds = %11
  %21 = add i32 %19, -1
  %22 = zext i32 %21 to i64
  %23 = shl i64 %13, 32
  %24 = xor i64 %23, -1
  %25 = add i64 %24, %13
  %26 = lshr i64 %25, 22
  %27 = xor i64 %26, %25
  %28 = shl i64 %27, 13
  %29 = xor i64 %28, -1
  %30 = add i64 %27, %29
  %31 = lshr i64 %30, 8
  %32 = xor i64 %31, %30
  %33 = mul i64 %32, 9
  %34 = lshr i64 %33, 15
  %35 = xor i64 %34, %33
  %36 = shl i64 %35, 27
  %37 = xor i64 %36, -1
  %38 = add i64 %35, %37
  %39 = lshr i64 %38, 31
  %40 = xor i64 %39, %38
  %41 = trunc i64 %40 to i32
  %42 = and i32 %21, %41
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %16, i64 %43
  %45 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %44, align 8
  %46 = icmp eq %"class.blink::AudioNodeOutput"* %45, %0
  br i1 %46, label %76, label %47

47:                                               ; preds = %20
  %48 = xor i32 %41, -1
  %49 = lshr i32 %41, 23
  %50 = add i32 %49, %48
  %51 = shl i32 %50, 12
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 7
  %54 = xor i32 %53, %52
  %55 = shl i32 %54, 2
  %56 = xor i32 %55, %54
  %57 = lshr i32 %56, 20
  %58 = xor i32 %57, %56
  %59 = or i32 %58, 1
  %60 = zext i32 %59 to i64
  br label %61

61:                                               ; preds = %66, %47
  %62 = phi %"class.blink::AudioNodeOutput"* [ %45, %47 ], [ %72, %66 ]
  %63 = phi i64 [ %43, %47 ], [ %70, %66 ]
  %64 = phi i64 [ 0, %47 ], [ %68, %66 ]
  %65 = icmp eq %"class.blink::AudioNodeOutput"* %62, null
  br i1 %65, label %81, label %66

66:                                               ; preds = %61
  %67 = icmp eq i64 %64, 0
  %68 = select i1 %67, i64 %60, i64 %64
  %69 = add i64 %68, %63
  %70 = and i64 %69, %22
  %71 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %16, i64 %70
  %72 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %71, align 8
  %73 = icmp eq %"class.blink::AudioNodeOutput"* %72, %0
  br i1 %73, label %74, label %61

74:                                               ; preds = %66
  %75 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %16, i64 %70
  br label %76

76:                                               ; preds = %74, %20
  %77 = phi %"class.blink::AudioNodeOutput"** [ %44, %20 ], [ %75, %74 ]
  %78 = icmp eq %"class.blink::AudioNodeOutput"** %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = zext i32 %19 to i64
  br label %84

81:                                               ; preds = %61, %76, %11
  %82 = zext i32 %19 to i64
  %83 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %16, i64 %82
  br label %84

84:                                               ; preds = %79, %81
  %85 = phi i64 [ %80, %79 ], [ %82, %81 ]
  %86 = phi %"class.blink::AudioNodeOutput"** [ %77, %79 ], [ %83, %81 ]
  %87 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %16, i64 %85
  %88 = icmp eq %"class.blink::AudioNodeOutput"** %87, %86
  br i1 %88, label %111, label %89

89:                                               ; preds = %84
  store %"class.blink::AudioNodeOutput"* inttoptr (i64 -1 to %"class.blink::AudioNodeOutput"*), %"class.blink::AudioNodeOutput"** %86, align 8
  %90 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %1, i64 0, i32 0, i32 2, i32 0, i32 3
  %91 = load i32, i32* %90, align 8
  %92 = add i32 %91, 1
  %93 = and i32 %92, 2147483647
  %94 = and i32 %91, -2147483648
  %95 = or i32 %93, %94
  store i32 %95, i32* %90, align 8
  %96 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %1, i64 0, i32 0, i32 2, i32 0, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = add i32 %97, -1
  store i32 %98, i32* %96, align 4
  %99 = mul i32 %98, 6
  %100 = load i32, i32* %18, align 8
  %101 = icmp ult i32 %99, %100
  %102 = icmp ugt i32 %100, 8
  %103 = and i1 %101, %102
  br i1 %103, label %104, label %111

104:                                              ; preds = %89
  %105 = lshr i32 %100, 1
  %106 = zext i32 %105 to i64
  %107 = shl nuw nsw i64 %106, 3
  %108 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %107, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink15AudioNodeOutputEEEPKcv, i64 0, i64 0)) #5
  call void @llvm.memset.p0i8.i64(i8* align 1 %108, i8 0, i64 %107, i1 false) #5
  %109 = bitcast i8* %108 to %"class.blink::AudioNodeOutput"**
  %110 = call %"class.blink::AudioNodeOutput"** @_ZN3WTF9HashTableIPN5blink15AudioNodeOutputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable.291"* %14, %"class.blink::AudioNodeOutput"** %109, i32 %105, %"class.blink::AudioNodeOutput"** null) #5
  br label %111

111:                                              ; preds = %84, %89, %104
  call void @_ZN5blink20AudioSummingJunction14ChangedOutputsEv(%"class.blink::AudioSummingJunction"* %4) #5
  %112 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %1, i64 0, i32 1
  %113 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %112, align 8
  call void @_ZN5blink12AudioHandler25DisableOutputsIfNecessaryEv(%"class.blink::AudioHandler"* %113) #5
  br label %114

114:                                              ; preds = %2, %111
  ret void
}

declare void @_ZN5blink12AudioHandler25DisableOutputsIfNecessaryEv(%"class.blink::AudioHandler"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AudioNodeWiring6EnableERNS_15AudioNodeOutputERNS_14AudioNodeInputE(%"class.blink::AudioNodeOutput"* dereferenceable(104), %"class.blink::AudioNodeInput"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::AudioNodeOutput"*, align 8
  %4 = bitcast %"class.blink::AudioNodeInput"* %1 to %"class.blink::AudioSummingJunction"*
  %5 = bitcast %"class.blink::AudioNodeOutput"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  store %"class.blink::AudioNodeOutput"* %0, %"class.blink::AudioNodeOutput"** %3, align 8
  %6 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %1, i64 0, i32 0, i32 2, i32 0
  %7 = call { %"class.blink::AudioNodeOutput"**, i8 } @_ZN3WTF9HashTableIPN5blink15AudioNodeOutputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_S3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_(%"class.WTF::HashTable.291"* %6, %"class.blink::AudioNodeOutput"** nonnull dereferenceable(8) %3, %"class.blink::AudioNodeOutput"** nonnull dereferenceable(8) %3) #5
  %8 = extractvalue { %"class.blink::AudioNodeOutput"**, i8 } %7, 1
  %9 = and i8 %8, 1
  %10 = icmp eq i8 %9, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  br i1 %10, label %114, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %1, i64 0, i32 2
  %13 = ptrtoint %"class.blink::AudioNodeOutput"* %0 to i64
  %14 = getelementptr inbounds %"class.WTF::HashSet.290", %"class.WTF::HashSet.290"* %12, i64 0, i32 0
  %15 = getelementptr inbounds %"class.WTF::HashSet.290", %"class.WTF::HashSet.290"* %12, i64 0, i32 0, i32 0
  %16 = load %"class.blink::AudioNodeOutput"**, %"class.blink::AudioNodeOutput"*** %15, align 8
  %17 = icmp eq %"class.blink::AudioNodeOutput"** %16, null
  %18 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %1, i64 0, i32 2, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  br i1 %17, label %81, label %20

20:                                               ; preds = %11
  %21 = add i32 %19, -1
  %22 = zext i32 %21 to i64
  %23 = shl i64 %13, 32
  %24 = xor i64 %23, -1
  %25 = add i64 %24, %13
  %26 = lshr i64 %25, 22
  %27 = xor i64 %26, %25
  %28 = shl i64 %27, 13
  %29 = xor i64 %28, -1
  %30 = add i64 %27, %29
  %31 = lshr i64 %30, 8
  %32 = xor i64 %31, %30
  %33 = mul i64 %32, 9
  %34 = lshr i64 %33, 15
  %35 = xor i64 %34, %33
  %36 = shl i64 %35, 27
  %37 = xor i64 %36, -1
  %38 = add i64 %35, %37
  %39 = lshr i64 %38, 31
  %40 = xor i64 %39, %38
  %41 = trunc i64 %40 to i32
  %42 = and i32 %21, %41
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %16, i64 %43
  %45 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %44, align 8
  %46 = icmp eq %"class.blink::AudioNodeOutput"* %45, %0
  br i1 %46, label %76, label %47

47:                                               ; preds = %20
  %48 = xor i32 %41, -1
  %49 = lshr i32 %41, 23
  %50 = add i32 %49, %48
  %51 = shl i32 %50, 12
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 7
  %54 = xor i32 %53, %52
  %55 = shl i32 %54, 2
  %56 = xor i32 %55, %54
  %57 = lshr i32 %56, 20
  %58 = xor i32 %57, %56
  %59 = or i32 %58, 1
  %60 = zext i32 %59 to i64
  br label %61

61:                                               ; preds = %66, %47
  %62 = phi %"class.blink::AudioNodeOutput"* [ %45, %47 ], [ %72, %66 ]
  %63 = phi i64 [ %43, %47 ], [ %70, %66 ]
  %64 = phi i64 [ 0, %47 ], [ %68, %66 ]
  %65 = icmp eq %"class.blink::AudioNodeOutput"* %62, null
  br i1 %65, label %81, label %66

66:                                               ; preds = %61
  %67 = icmp eq i64 %64, 0
  %68 = select i1 %67, i64 %60, i64 %64
  %69 = add i64 %68, %63
  %70 = and i64 %69, %22
  %71 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %16, i64 %70
  %72 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %71, align 8
  %73 = icmp eq %"class.blink::AudioNodeOutput"* %72, %0
  br i1 %73, label %74, label %61

74:                                               ; preds = %66
  %75 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %16, i64 %70
  br label %76

76:                                               ; preds = %74, %20
  %77 = phi %"class.blink::AudioNodeOutput"** [ %44, %20 ], [ %75, %74 ]
  %78 = icmp eq %"class.blink::AudioNodeOutput"** %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = zext i32 %19 to i64
  br label %84

81:                                               ; preds = %61, %76, %11
  %82 = zext i32 %19 to i64
  %83 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %16, i64 %82
  br label %84

84:                                               ; preds = %79, %81
  %85 = phi i64 [ %80, %79 ], [ %82, %81 ]
  %86 = phi %"class.blink::AudioNodeOutput"** [ %77, %79 ], [ %83, %81 ]
  %87 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %16, i64 %85
  %88 = icmp eq %"class.blink::AudioNodeOutput"** %87, %86
  br i1 %88, label %111, label %89

89:                                               ; preds = %84
  store %"class.blink::AudioNodeOutput"* inttoptr (i64 -1 to %"class.blink::AudioNodeOutput"*), %"class.blink::AudioNodeOutput"** %86, align 8
  %90 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %1, i64 0, i32 2, i32 0, i32 3
  %91 = load i32, i32* %90, align 8
  %92 = add i32 %91, 1
  %93 = and i32 %92, 2147483647
  %94 = and i32 %91, -2147483648
  %95 = or i32 %93, %94
  store i32 %95, i32* %90, align 8
  %96 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %1, i64 0, i32 2, i32 0, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = add i32 %97, -1
  store i32 %98, i32* %96, align 4
  %99 = mul i32 %98, 6
  %100 = load i32, i32* %18, align 8
  %101 = icmp ult i32 %99, %100
  %102 = icmp ugt i32 %100, 8
  %103 = and i1 %101, %102
  br i1 %103, label %104, label %111

104:                                              ; preds = %89
  %105 = lshr i32 %100, 1
  %106 = zext i32 %105 to i64
  %107 = shl nuw nsw i64 %106, 3
  %108 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %107, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink15AudioNodeOutputEEEPKcv, i64 0, i64 0)) #5
  call void @llvm.memset.p0i8.i64(i8* align 1 %108, i8 0, i64 %107, i1 false) #5
  %109 = bitcast i8* %108 to %"class.blink::AudioNodeOutput"**
  %110 = call %"class.blink::AudioNodeOutput"** @_ZN3WTF9HashTableIPN5blink15AudioNodeOutputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable.291"* %14, %"class.blink::AudioNodeOutput"** %109, i32 %105, %"class.blink::AudioNodeOutput"** null) #5
  br label %111

111:                                              ; preds = %84, %89, %104
  call void @_ZN5blink20AudioSummingJunction14ChangedOutputsEv(%"class.blink::AudioSummingJunction"* %4) #5
  %112 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %1, i64 0, i32 1
  %113 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %112, align 8
  call void @_ZN5blink12AudioHandler24EnableOutputsIfNecessaryEv(%"class.blink::AudioHandler"* %113) #5
  br label %114

114:                                              ; preds = %2, %111
  ret void
}

declare void @_ZN5blink12AudioHandler24EnableOutputsIfNecessaryEv(%"class.blink::AudioHandler"*) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink15AudioNodeWiring11IsConnectedERNS_15AudioNodeOutputERNS_14AudioNodeInputE(%"class.blink::AudioNodeOutput"* nocapture readonly dereferenceable(104), %"class.blink::AudioNodeInput"* dereferenceable(104)) local_unnamed_addr #3 align 2 {
  %3 = ptrtoint %"class.blink::AudioNodeInput"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::AudioNodeInput"**, %"class.blink::AudioNodeInput"*** %4, align 8
  %6 = icmp eq %"class.blink::AudioNodeInput"** %5, null
  br i1 %6, label %65, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %5, i64 %32
  %34 = load %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %33, align 8
  %35 = icmp eq %"class.blink::AudioNodeInput"* %34, %1
  br i1 %35, label %65, label %36

36:                                               ; preds = %7
  %37 = xor i32 %30, -1
  %38 = lshr i32 %30, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %55, %36
  %51 = phi %"class.blink::AudioNodeInput"* [ %34, %36 ], [ %61, %55 ]
  %52 = phi i64 [ %32, %36 ], [ %59, %55 ]
  %53 = phi i64 [ 0, %36 ], [ %57, %55 ]
  %54 = icmp eq %"class.blink::AudioNodeInput"* %51, null
  br i1 %54, label %65, label %55

55:                                               ; preds = %50
  %56 = icmp eq i64 %53, 0
  %57 = select i1 %56, i64 %49, i64 %53
  %58 = add i64 %57, %52
  %59 = and i64 %58, %11
  %60 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %5, i64 %59
  %61 = load %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %60, align 8
  %62 = icmp eq %"class.blink::AudioNodeInput"* %61, %1
  br i1 %62, label %63, label %50

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %5, i64 %59
  br label %65

65:                                               ; preds = %50, %63, %2, %7
  %66 = phi %"class.blink::AudioNodeInput"** [ null, %2 ], [ %33, %7 ], [ %64, %63 ], [ null, %50 ]
  %67 = icmp ne %"class.blink::AudioNodeInput"** %66, null
  ret i1 %67
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink15AudioNodeWiring11IsConnectedERNS_15AudioNodeOutputERNS_17AudioParamHandlerE(%"class.blink::AudioNodeOutput"* nocapture readonly dereferenceable(104), %"class.blink::AudioParamHandler"* dereferenceable(208)) local_unnamed_addr #3 align 2 {
  %3 = ptrtoint %"class.blink::AudioParamHandler"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 13, i32 0, i32 0
  %5 = load %"class.blink::AudioParamHandler"**, %"class.blink::AudioParamHandler"*** %4, align 8
  %6 = icmp eq %"class.blink::AudioParamHandler"** %5, null
  br i1 %6, label %65, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 13, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %5, i64 %32
  %34 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %33, align 8
  %35 = icmp eq %"class.blink::AudioParamHandler"* %34, %1
  br i1 %35, label %65, label %36

36:                                               ; preds = %7
  %37 = xor i32 %30, -1
  %38 = lshr i32 %30, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %55, %36
  %51 = phi %"class.blink::AudioParamHandler"* [ %34, %36 ], [ %61, %55 ]
  %52 = phi i64 [ %32, %36 ], [ %59, %55 ]
  %53 = phi i64 [ 0, %36 ], [ %57, %55 ]
  %54 = icmp eq %"class.blink::AudioParamHandler"* %51, null
  br i1 %54, label %65, label %55

55:                                               ; preds = %50
  %56 = icmp eq i64 %53, 0
  %57 = select i1 %56, i64 %49, i64 %53
  %58 = add i64 %57, %52
  %59 = and i64 %58, %11
  %60 = getelementptr inbounds %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %5, i64 %59
  %61 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %60, align 8
  %62 = icmp eq %"class.blink::AudioParamHandler"* %61, %1
  br i1 %62, label %63, label %50

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %5, i64 %59
  br label %65

65:                                               ; preds = %50, %63, %2, %7
  %66 = phi %"class.blink::AudioParamHandler"** [ null, %2 ], [ %33, %7 ], [ %64, %63 ], [ null, %50 ]
  %67 = icmp ne %"class.blink::AudioParamHandler"** %66, null
  ret i1 %67
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AudioNodeWiring15WillBeDestroyedERNS_14AudioNodeInputE(%"class.blink::AudioNodeInput"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %0, i64 0, i32 0, i32 2
  %3 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %0, i64 0, i32 0, i32 2, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.WTF::HashSet.290", %"class.WTF::HashSet.290"* %2, i64 0, i32 0, i32 0
  %7 = load %"class.blink::AudioNodeOutput"**, %"class.blink::AudioNodeOutput"*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %7, i64 %10
  br i1 %5, label %58, label %12

12:                                               ; preds = %1
  %13 = icmp eq i32 %9, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %12, %18
  %15 = phi %"class.blink::AudioNodeOutput"** [ %19, %18 ], [ %7, %12 ]
  %16 = bitcast %"class.blink::AudioNodeOutput"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  switch i64 %17, label %21 [
    i64 -1, label %18
    i64 0, label %18
  ]

18:                                               ; preds = %14, %14
  %19 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %15, i64 1
  %20 = icmp eq %"class.blink::AudioNodeOutput"** %19, %11
  br i1 %20, label %58, label %14

21:                                               ; preds = %14, %12
  %22 = phi %"class.blink::AudioNodeOutput"** [ %7, %12 ], [ %15, %14 ]
  %23 = icmp eq %"class.blink::AudioNodeOutput"** %22, %11
  br i1 %23, label %58, label %24

24:                                               ; preds = %21
  %25 = ptrtoint %"class.blink::AudioNodeInput"* %0 to i64
  %26 = shl i64 %25, 32
  %27 = xor i64 %26, -1
  %28 = add i64 %27, %25
  %29 = lshr i64 %28, 22
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 13
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 8
  %35 = xor i64 %34, %33
  %36 = mul i64 %35, 9
  %37 = lshr i64 %36, 15
  %38 = xor i64 %37, %36
  %39 = shl i64 %38, 27
  %40 = xor i64 %39, -1
  %41 = add i64 %38, %40
  %42 = lshr i64 %41, 31
  %43 = xor i64 %42, %41
  %44 = trunc i64 %43 to i32
  %45 = xor i32 %44, -1
  %46 = lshr i32 %44, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %115

58:                                               ; preds = %18, %183, %193, %190, %1, %21
  %59 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %0, i64 0, i32 2
  %60 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %0, i64 0, i32 2, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::HashSet.290", %"class.WTF::HashSet.290"* %59, i64 0, i32 0, i32 0
  %64 = load %"class.blink::AudioNodeOutput"**, %"class.blink::AudioNodeOutput"*** %63, align 8
  %65 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %0, i64 0, i32 2, i32 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %64, i64 %67
  br i1 %62, label %195, label %69

69:                                               ; preds = %58
  %70 = icmp eq i32 %66, 0
  br i1 %70, label %78, label %71

71:                                               ; preds = %69, %75
  %72 = phi %"class.blink::AudioNodeOutput"** [ %76, %75 ], [ %64, %69 ]
  %73 = bitcast %"class.blink::AudioNodeOutput"** %72 to i64*
  %74 = load i64, i64* %73, align 8
  switch i64 %74, label %78 [
    i64 -1, label %75
    i64 0, label %75
  ]

75:                                               ; preds = %71, %71
  %76 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %72, i64 1
  %77 = icmp eq %"class.blink::AudioNodeOutput"** %76, %68
  br i1 %77, label %195, label %71

78:                                               ; preds = %71, %69
  %79 = phi %"class.blink::AudioNodeOutput"** [ %64, %69 ], [ %72, %71 ]
  %80 = icmp eq %"class.blink::AudioNodeOutput"** %79, %68
  br i1 %80, label %195, label %81

81:                                               ; preds = %78
  %82 = ptrtoint %"class.blink::AudioNodeInput"* %0 to i64
  %83 = shl i64 %82, 32
  %84 = xor i64 %83, -1
  %85 = add i64 %84, %82
  %86 = lshr i64 %85, 22
  %87 = xor i64 %86, %85
  %88 = shl i64 %87, 13
  %89 = xor i64 %88, -1
  %90 = add i64 %87, %89
  %91 = lshr i64 %90, 8
  %92 = xor i64 %91, %90
  %93 = mul i64 %92, 9
  %94 = lshr i64 %93, 15
  %95 = xor i64 %94, %93
  %96 = shl i64 %95, 27
  %97 = xor i64 %96, -1
  %98 = add i64 %95, %97
  %99 = lshr i64 %98, 31
  %100 = xor i64 %99, %98
  %101 = trunc i64 %100 to i32
  %102 = xor i32 %101, -1
  %103 = lshr i32 %101, 23
  %104 = add i32 %103, %102
  %105 = shl i32 %104, 12
  %106 = xor i32 %105, %104
  %107 = lshr i32 %106, 7
  %108 = xor i32 %107, %106
  %109 = shl i32 %108, 2
  %110 = xor i32 %109, %108
  %111 = lshr i32 %110, 20
  %112 = xor i32 %111, %110
  %113 = or i32 %112, 1
  %114 = zext i32 %113 to i64
  br label %208

115:                                              ; preds = %24, %193
  %116 = phi %"class.blink::AudioNodeOutput"** [ %22, %24 ], [ %187, %193 ]
  %117 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %117, i64 0, i32 7
  %119 = getelementptr inbounds %"class.WTF::HashSet.349", %"class.WTF::HashSet.349"* %118, i64 0, i32 0
  %120 = getelementptr inbounds %"class.WTF::HashSet.349", %"class.WTF::HashSet.349"* %118, i64 0, i32 0, i32 0
  %121 = load %"class.blink::AudioNodeInput"**, %"class.blink::AudioNodeInput"*** %120, align 8
  %122 = icmp eq %"class.blink::AudioNodeInput"** %121, null
  %123 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %117, i64 0, i32 7, i32 0, i32 1
  %124 = load i32, i32* %123, align 8
  br i1 %122, label %153, label %125

125:                                              ; preds = %115
  %126 = add i32 %124, -1
  %127 = zext i32 %126 to i64
  %128 = and i32 %126, %44
  %129 = zext i32 %128 to i64
  %130 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %121, i64 %129
  %131 = load %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %130, align 8
  %132 = icmp eq %"class.blink::AudioNodeInput"* %131, %0
  br i1 %132, label %148, label %133

133:                                              ; preds = %125, %138
  %134 = phi %"class.blink::AudioNodeInput"* [ %144, %138 ], [ %131, %125 ]
  %135 = phi i64 [ %142, %138 ], [ %129, %125 ]
  %136 = phi i64 [ %140, %138 ], [ 0, %125 ]
  %137 = icmp eq %"class.blink::AudioNodeInput"* %134, null
  br i1 %137, label %153, label %138

138:                                              ; preds = %133
  %139 = icmp eq i64 %136, 0
  %140 = select i1 %139, i64 %57, i64 %136
  %141 = add i64 %140, %135
  %142 = and i64 %141, %127
  %143 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %121, i64 %142
  %144 = load %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %143, align 8
  %145 = icmp eq %"class.blink::AudioNodeInput"* %144, %0
  br i1 %145, label %146, label %133

146:                                              ; preds = %138
  %147 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %121, i64 %142
  br label %148

148:                                              ; preds = %146, %125
  %149 = phi %"class.blink::AudioNodeInput"** [ %130, %125 ], [ %147, %146 ]
  %150 = icmp eq %"class.blink::AudioNodeInput"** %149, null
  br i1 %150, label %153, label %151

151:                                              ; preds = %148
  %152 = zext i32 %124 to i64
  br label %156

153:                                              ; preds = %133, %148, %115
  %154 = zext i32 %124 to i64
  %155 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %121, i64 %154
  br label %156

156:                                              ; preds = %151, %153
  %157 = phi i64 [ %152, %151 ], [ %154, %153 ]
  %158 = phi %"class.blink::AudioNodeInput"** [ %149, %151 ], [ %155, %153 ]
  %159 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %121, i64 %157
  %160 = icmp eq %"class.blink::AudioNodeInput"** %159, %158
  br i1 %160, label %183, label %161

161:                                              ; preds = %156
  store %"class.blink::AudioNodeInput"* inttoptr (i64 -1 to %"class.blink::AudioNodeInput"*), %"class.blink::AudioNodeInput"** %158, align 8
  %162 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %117, i64 0, i32 7, i32 0, i32 3
  %163 = load i32, i32* %162, align 8
  %164 = add i32 %163, 1
  %165 = and i32 %164, 2147483647
  %166 = and i32 %163, -2147483648
  %167 = or i32 %165, %166
  store i32 %167, i32* %162, align 8
  %168 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %117, i64 0, i32 7, i32 0, i32 2
  %169 = load i32, i32* %168, align 4
  %170 = add i32 %169, -1
  store i32 %170, i32* %168, align 4
  %171 = mul i32 %170, 6
  %172 = load i32, i32* %123, align 8
  %173 = icmp ult i32 %171, %172
  %174 = icmp ugt i32 %172, 8
  %175 = and i1 %173, %174
  br i1 %175, label %176, label %183

176:                                              ; preds = %161
  %177 = lshr i32 %172, 1
  %178 = zext i32 %177 to i64
  %179 = shl nuw nsw i64 %178, 3
  %180 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %179, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink14AudioNodeInputEEEPKcv, i64 0, i64 0)) #5
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %180, i8 0, i64 %179, i1 false) #5
  %181 = bitcast i8* %180 to %"class.blink::AudioNodeInput"**
  %182 = tail call %"class.blink::AudioNodeInput"** @_ZN3WTF9HashTableIPN5blink14AudioNodeInputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable.350"* %119, %"class.blink::AudioNodeInput"** %181, i32 %177, %"class.blink::AudioNodeInput"** null) #5
  br label %183

183:                                              ; preds = %156, %161, %176
  %184 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %116, i64 1
  %185 = icmp eq %"class.blink::AudioNodeOutput"** %184, %11
  br i1 %185, label %58, label %186

186:                                              ; preds = %183, %190
  %187 = phi %"class.blink::AudioNodeOutput"** [ %191, %190 ], [ %184, %183 ]
  %188 = bitcast %"class.blink::AudioNodeOutput"** %187 to i64*
  %189 = load i64, i64* %188, align 8
  switch i64 %189, label %193 [
    i64 -1, label %190
    i64 0, label %190
  ]

190:                                              ; preds = %186, %186
  %191 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %187, i64 1
  %192 = icmp eq %"class.blink::AudioNodeOutput"** %191, %11
  br i1 %192, label %58, label %186

193:                                              ; preds = %186
  %194 = icmp eq %"class.blink::AudioNodeOutput"** %187, %11
  br i1 %194, label %58, label %115

195:                                              ; preds = %75, %276, %286, %283, %58, %78
  %196 = load %"class.blink::AudioNodeOutput"**, %"class.blink::AudioNodeOutput"*** %6, align 8
  %197 = icmp eq %"class.blink::AudioNodeOutput"** %196, null
  br i1 %197, label %201, label %198

198:                                              ; preds = %195
  %199 = bitcast %"class.blink::AudioNodeOutput"** %196 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %199) #5
  %200 = bitcast %"class.WTF::HashSet.290"* %2 to i64*
  store atomic i64 0, i64* %200 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %3, align 4
  br label %201

201:                                              ; preds = %195, %198
  %202 = load %"class.blink::AudioNodeOutput"**, %"class.blink::AudioNodeOutput"*** %63, align 8
  %203 = icmp eq %"class.blink::AudioNodeOutput"** %202, null
  br i1 %203, label %207, label %204

204:                                              ; preds = %201
  %205 = bitcast %"class.blink::AudioNodeOutput"** %202 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %205) #5
  %206 = bitcast %"class.WTF::HashSet.290"* %59 to i64*
  store atomic i64 0, i64* %206 monotonic, align 8
  store i32 0, i32* %65, align 8
  store i32 0, i32* %60, align 4
  br label %207

207:                                              ; preds = %201, %204
  ret void

208:                                              ; preds = %81, %286
  %209 = phi %"class.blink::AudioNodeOutput"** [ %79, %81 ], [ %280, %286 ]
  %210 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %209, align 8
  %211 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %210, i64 0, i32 7
  %212 = getelementptr inbounds %"class.WTF::HashSet.349", %"class.WTF::HashSet.349"* %211, i64 0, i32 0
  %213 = getelementptr inbounds %"class.WTF::HashSet.349", %"class.WTF::HashSet.349"* %211, i64 0, i32 0, i32 0
  %214 = load %"class.blink::AudioNodeInput"**, %"class.blink::AudioNodeInput"*** %213, align 8
  %215 = icmp eq %"class.blink::AudioNodeInput"** %214, null
  %216 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %210, i64 0, i32 7, i32 0, i32 1
  %217 = load i32, i32* %216, align 8
  br i1 %215, label %246, label %218

218:                                              ; preds = %208
  %219 = add i32 %217, -1
  %220 = zext i32 %219 to i64
  %221 = and i32 %219, %101
  %222 = zext i32 %221 to i64
  %223 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %214, i64 %222
  %224 = load %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %223, align 8
  %225 = icmp eq %"class.blink::AudioNodeInput"* %224, %0
  br i1 %225, label %241, label %226

226:                                              ; preds = %218, %231
  %227 = phi %"class.blink::AudioNodeInput"* [ %237, %231 ], [ %224, %218 ]
  %228 = phi i64 [ %235, %231 ], [ %222, %218 ]
  %229 = phi i64 [ %233, %231 ], [ 0, %218 ]
  %230 = icmp eq %"class.blink::AudioNodeInput"* %227, null
  br i1 %230, label %246, label %231

231:                                              ; preds = %226
  %232 = icmp eq i64 %229, 0
  %233 = select i1 %232, i64 %114, i64 %229
  %234 = add i64 %233, %228
  %235 = and i64 %234, %220
  %236 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %214, i64 %235
  %237 = load %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %236, align 8
  %238 = icmp eq %"class.blink::AudioNodeInput"* %237, %0
  br i1 %238, label %239, label %226

239:                                              ; preds = %231
  %240 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %214, i64 %235
  br label %241

241:                                              ; preds = %239, %218
  %242 = phi %"class.blink::AudioNodeInput"** [ %223, %218 ], [ %240, %239 ]
  %243 = icmp eq %"class.blink::AudioNodeInput"** %242, null
  br i1 %243, label %246, label %244

244:                                              ; preds = %241
  %245 = zext i32 %217 to i64
  br label %249

246:                                              ; preds = %226, %241, %208
  %247 = zext i32 %217 to i64
  %248 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %214, i64 %247
  br label %249

249:                                              ; preds = %244, %246
  %250 = phi i64 [ %245, %244 ], [ %247, %246 ]
  %251 = phi %"class.blink::AudioNodeInput"** [ %242, %244 ], [ %248, %246 ]
  %252 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %214, i64 %250
  %253 = icmp eq %"class.blink::AudioNodeInput"** %252, %251
  br i1 %253, label %276, label %254

254:                                              ; preds = %249
  store %"class.blink::AudioNodeInput"* inttoptr (i64 -1 to %"class.blink::AudioNodeInput"*), %"class.blink::AudioNodeInput"** %251, align 8
  %255 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %210, i64 0, i32 7, i32 0, i32 3
  %256 = load i32, i32* %255, align 8
  %257 = add i32 %256, 1
  %258 = and i32 %257, 2147483647
  %259 = and i32 %256, -2147483648
  %260 = or i32 %258, %259
  store i32 %260, i32* %255, align 8
  %261 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %210, i64 0, i32 7, i32 0, i32 2
  %262 = load i32, i32* %261, align 4
  %263 = add i32 %262, -1
  store i32 %263, i32* %261, align 4
  %264 = mul i32 %263, 6
  %265 = load i32, i32* %216, align 8
  %266 = icmp ult i32 %264, %265
  %267 = icmp ugt i32 %265, 8
  %268 = and i1 %266, %267
  br i1 %268, label %269, label %276

269:                                              ; preds = %254
  %270 = lshr i32 %265, 1
  %271 = zext i32 %270 to i64
  %272 = shl nuw nsw i64 %271, 3
  %273 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %272, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink14AudioNodeInputEEEPKcv, i64 0, i64 0)) #5
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %273, i8 0, i64 %272, i1 false) #5
  %274 = bitcast i8* %273 to %"class.blink::AudioNodeInput"**
  %275 = tail call %"class.blink::AudioNodeInput"** @_ZN3WTF9HashTableIPN5blink14AudioNodeInputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable.350"* %212, %"class.blink::AudioNodeInput"** %274, i32 %270, %"class.blink::AudioNodeInput"** null) #5
  br label %276

276:                                              ; preds = %249, %254, %269
  %277 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %209, i64 1
  %278 = icmp eq %"class.blink::AudioNodeOutput"** %277, %68
  br i1 %278, label %195, label %279

279:                                              ; preds = %276, %283
  %280 = phi %"class.blink::AudioNodeOutput"** [ %284, %283 ], [ %277, %276 ]
  %281 = bitcast %"class.blink::AudioNodeOutput"** %280 to i64*
  %282 = load i64, i64* %281, align 8
  switch i64 %282, label %286 [
    i64 -1, label %283
    i64 0, label %283
  ]

283:                                              ; preds = %279, %279
  %284 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %280, i64 1
  %285 = icmp eq %"class.blink::AudioNodeOutput"** %284, %68
  br i1 %285, label %195, label %279

286:                                              ; preds = %279
  %287 = icmp eq %"class.blink::AudioNodeOutput"** %280, %68
  br i1 %287, label %195, label %208
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::AudioNodeOutput"**, i8 } @_ZN3WTF9HashTableIPN5blink15AudioNodeOutputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_S3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_(%"class.WTF::HashTable.291"*, %"class.blink::AudioNodeOutput"** dereferenceable(8), %"class.blink::AudioNodeOutput"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.291", %"class.WTF::HashTable.291"* %0, i64 0, i32 0
  %5 = load %"class.blink::AudioNodeOutput"**, %"class.blink::AudioNodeOutput"*** %4, align 8
  %6 = icmp eq %"class.blink::AudioNodeOutput"** %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::AudioNodeOutput"** @_ZN3WTF9HashTableIPN5blink15AudioNodeOutputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.291"* %0, %"class.blink::AudioNodeOutput"** null)
  %9 = load %"class.blink::AudioNodeOutput"**, %"class.blink::AudioNodeOutput"*** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::AudioNodeOutput"** [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.291", %"class.WTF::HashTable.291"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::AudioNodeOutput"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %11, i64 %38
  %40 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %39, align 8
  %41 = icmp eq %"class.blink::AudioNodeOutput"* %40, null
  %42 = inttoptr i64 %17 to %"class.blink::AudioNodeOutput"*
  br i1 %41, label %76, label %43

43:                                               ; preds = %10
  %44 = xor i32 %36, -1
  %45 = lshr i32 %36, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %64
  %58 = phi %"class.blink::AudioNodeOutput"* [ %40, %43 ], [ %72, %64 ]
  %59 = phi %"class.blink::AudioNodeOutput"** [ %39, %43 ], [ %71, %64 ]
  %60 = phi %"class.blink::AudioNodeOutput"** [ null, %43 ], [ %66, %64 ]
  %61 = phi i64 [ %38, %43 ], [ %70, %64 ]
  %62 = phi i64 [ 0, %43 ], [ %68, %64 ]
  %63 = icmp eq %"class.blink::AudioNodeOutput"* %58, %42
  br i1 %63, label %103, label %64

64:                                               ; preds = %57
  %65 = icmp eq %"class.blink::AudioNodeOutput"* %58, inttoptr (i64 -1 to %"class.blink::AudioNodeOutput"*)
  %66 = select i1 %65, %"class.blink::AudioNodeOutput"** %59, %"class.blink::AudioNodeOutput"** %60
  %67 = icmp eq i64 %62, 0
  %68 = select i1 %67, i64 %56, i64 %62
  %69 = add i64 %68, %61
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %11, i64 %70
  %72 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %71, align 8
  %73 = icmp eq %"class.blink::AudioNodeOutput"* %72, null
  br i1 %73, label %74, label %57

74:                                               ; preds = %64
  %75 = icmp eq %"class.blink::AudioNodeOutput"** %66, null
  br i1 %75, label %76, label %79

76:                                               ; preds = %10, %74
  %77 = phi %"class.blink::AudioNodeOutput"** [ %71, %74 ], [ %39, %10 ]
  %78 = bitcast %"class.blink::AudioNodeOutput"** %77 to i64*
  br label %87

79:                                               ; preds = %74
  %80 = bitcast %"class.blink::AudioNodeOutput"** %66 to i64*
  store i64 0, i64* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::HashTable.291", %"class.WTF::HashTable.291"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  br label %87

87:                                               ; preds = %76, %79
  %88 = phi i64* [ %78, %76 ], [ %80, %79 ]
  %89 = phi %"class.blink::AudioNodeOutput"** [ %77, %76 ], [ %66, %79 ]
  %90 = bitcast %"class.blink::AudioNodeOutput"** %2 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %88, align 8
  %92 = getelementptr inbounds %"class.WTF::HashTable.291", %"class.WTF::HashTable.291"* %0, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %92, align 4
  %95 = getelementptr inbounds %"class.WTF::HashTable.291", %"class.WTF::HashTable.291"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, %94
  %98 = shl i32 %97, 1
  %99 = load i32, i32* %12, align 8
  %100 = icmp ult i32 %98, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %87
  %102 = tail call %"class.blink::AudioNodeOutput"** @_ZN3WTF9HashTableIPN5blink15AudioNodeOutputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.291"* %0, %"class.blink::AudioNodeOutput"** %89)
  br label %103

103:                                              ; preds = %57, %87, %101
  %104 = phi i8 [ 1, %87 ], [ 1, %101 ], [ 0, %57 ]
  %105 = phi %"class.blink::AudioNodeOutput"** [ %89, %87 ], [ %102, %101 ], [ %59, %57 ]
  %106 = insertvalue { %"class.blink::AudioNodeOutput"**, i8 } undef, %"class.blink::AudioNodeOutput"** %105, 0
  %107 = insertvalue { %"class.blink::AudioNodeOutput"**, i8 } %106, i8 %104, 1
  ret { %"class.blink::AudioNodeOutput"**, i8 } %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AudioNodeOutput"** @_ZN3WTF9HashTableIPN5blink15AudioNodeOutputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.291"*, %"class.blink::AudioNodeOutput"**) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.291", %"class.WTF::HashTable.291"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.291", %"class.WTF::HashTable.291"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #5
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #5
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %22, i8* %23) #5
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #5
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #5
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #5
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink15AudioNodeOutputEEEPKcv, i64 0, i64 0)) #5
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #5
  %36 = bitcast i8* %35 to %"class.blink::AudioNodeOutput"**
  %37 = call %"class.blink::AudioNodeOutput"** @_ZN3WTF9HashTableIPN5blink15AudioNodeOutputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable.291"* %0, %"class.blink::AudioNodeOutput"** %36, i32 %32, %"class.blink::AudioNodeOutput"** %1) #5
  ret %"class.blink::AudioNodeOutput"** %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AudioNodeOutput"** @_ZN3WTF9HashTableIPN5blink15AudioNodeOutputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable.291"*, %"class.blink::AudioNodeOutput"**, i32, %"class.blink::AudioNodeOutput"**) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::AudioNodeOutput"** %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.291", %"class.WTF::HashTable.291"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.291", %"class.WTF::HashTable.291"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.291"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.blink::AudioNodeOutput"**, %"class.blink::AudioNodeOutput"*** %9, align 8
  %17 = ptrtoint %"class.blink::AudioNodeOutput"** %16 to i64
  br label %31

18:                                               ; preds = %119
  %19 = bitcast %"class.WTF::HashTable.291"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %120, %18 ]
  %23 = phi %"class.blink::AudioNodeOutput"** [ null, %10 ], [ %123, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #5
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.291", %"class.WTF::HashTable.291"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"class.blink::AudioNodeOutput"** %23

31:                                               ; preds = %13, %119
  %32 = phi i64 [ %17, %13 ], [ %120, %119 ]
  %33 = phi i32 [ %7, %13 ], [ %121, %119 ]
  %34 = phi %"class.blink::AudioNodeOutput"** [ %16, %13 ], [ %122, %119 ]
  %35 = phi %"class.blink::AudioNodeOutput"** [ null, %13 ], [ %123, %119 ]
  %36 = phi i32 [ 0, %13 ], [ %124, %119 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %34, i64 %37
  %39 = bitcast %"class.blink::AudioNodeOutput"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %41 [
    i64 -1, label %119
    i64 0, label %119
  ]

41:                                               ; preds = %31
  %42 = shl i64 %40, 32
  %43 = xor i64 %42, -1
  %44 = add i64 %40, %43
  %45 = lshr i64 %44, 22
  %46 = xor i64 %45, %44
  %47 = shl i64 %46, 13
  %48 = xor i64 %47, -1
  %49 = add i64 %46, %48
  %50 = lshr i64 %49, 8
  %51 = xor i64 %50, %49
  %52 = mul i64 %51, 9
  %53 = lshr i64 %52, 15
  %54 = xor i64 %53, %52
  %55 = shl i64 %54, 27
  %56 = xor i64 %55, -1
  %57 = add i64 %54, %56
  %58 = lshr i64 %57, 31
  %59 = xor i64 %58, %57
  %60 = trunc i64 %59 to i32
  %61 = and i32 %14, %60
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %1, i64 %62
  %64 = ptrtoint %"class.blink::AudioNodeOutput"** %63 to i64
  %65 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %63, align 8
  %66 = icmp eq %"class.blink::AudioNodeOutput"* %65, null
  %67 = inttoptr i64 %40 to %"class.blink::AudioNodeOutput"*
  br i1 %66, label %85, label %68

68:                                               ; preds = %41
  %69 = xor i32 %60, -1
  %70 = lshr i32 %60, 23
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 12
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 7
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 2
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 20
  %79 = xor i32 %78, %77
  %80 = or i32 %79, 1
  %81 = zext i32 %80 to i64
  br label %91

82:                                               ; preds = %98
  %83 = ptrtoint %"class.blink::AudioNodeOutput"** %105 to i64
  %84 = inttoptr i64 %100 to %"class.blink::AudioNodeOutput"**
  br label %85

85:                                               ; preds = %82, %41
  %86 = phi i64 [ %83, %82 ], [ %64, %41 ]
  %87 = phi %"class.blink::AudioNodeOutput"** [ %84, %82 ], [ null, %41 ]
  %88 = icmp eq %"class.blink::AudioNodeOutput"** %87, null
  %89 = ptrtoint %"class.blink::AudioNodeOutput"** %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %109

91:                                               ; preds = %98, %68
  %92 = phi i64 [ 0, %68 ], [ %100, %98 ]
  %93 = phi %"class.blink::AudioNodeOutput"* [ %65, %68 ], [ %107, %98 ]
  %94 = phi i64 [ %64, %68 ], [ %106, %98 ]
  %95 = phi i64 [ %62, %68 ], [ %104, %98 ]
  %96 = phi i64 [ 0, %68 ], [ %102, %98 ]
  %97 = icmp eq %"class.blink::AudioNodeOutput"* %93, %67
  br i1 %97, label %109, label %98

98:                                               ; preds = %91
  %99 = icmp eq %"class.blink::AudioNodeOutput"* %93, inttoptr (i64 -1 to %"class.blink::AudioNodeOutput"*)
  %100 = select i1 %99, i64 %94, i64 %92
  %101 = icmp eq i64 %96, 0
  %102 = select i1 %101, i64 %81, i64 %96
  %103 = add i64 %102, %95
  %104 = and i64 %103, %15
  %105 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %1, i64 %104
  %106 = ptrtoint %"class.blink::AudioNodeOutput"** %105 to i64
  %107 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %105, align 8
  %108 = icmp eq %"class.blink::AudioNodeOutput"* %107, null
  br i1 %108, label %82, label %91

109:                                              ; preds = %91, %85
  %110 = phi i64 [ %90, %85 ], [ %94, %91 ]
  %111 = inttoptr i64 %110 to %"class.blink::AudioNodeOutput"**
  %112 = inttoptr i64 %110 to i64*
  store i64 %40, i64* %112, align 8
  %113 = load %"class.blink::AudioNodeOutput"**, %"class.blink::AudioNodeOutput"*** %9, align 8
  %114 = getelementptr inbounds %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %113, i64 %37
  %115 = icmp eq %"class.blink::AudioNodeOutput"** %114, %3
  %116 = select i1 %115, %"class.blink::AudioNodeOutput"** %111, %"class.blink::AudioNodeOutput"** %35
  %117 = load i32, i32* %6, align 8
  %118 = ptrtoint %"class.blink::AudioNodeOutput"** %113 to i64
  br label %119

119:                                              ; preds = %31, %31, %109
  %120 = phi i64 [ %32, %31 ], [ %118, %109 ], [ %32, %31 ]
  %121 = phi i32 [ %33, %31 ], [ %117, %109 ], [ %33, %31 ]
  %122 = phi %"class.blink::AudioNodeOutput"** [ %34, %31 ], [ %113, %109 ], [ %34, %31 ]
  %123 = phi %"class.blink::AudioNodeOutput"** [ %35, %31 ], [ %116, %109 ], [ %35, %31 ]
  %124 = add i32 %36, 1
  %125 = icmp eq i32 %124, %121
  br i1 %125, label %18, label %31
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::AudioNodeInput"**, i8 } @_ZN3WTF9HashTableIPN5blink14AudioNodeInputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_S3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_(%"class.WTF::HashTable.350"*, %"class.blink::AudioNodeInput"** dereferenceable(8), %"class.blink::AudioNodeInput"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.350", %"class.WTF::HashTable.350"* %0, i64 0, i32 0
  %5 = load %"class.blink::AudioNodeInput"**, %"class.blink::AudioNodeInput"*** %4, align 8
  %6 = icmp eq %"class.blink::AudioNodeInput"** %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::AudioNodeInput"** @_ZN3WTF9HashTableIPN5blink14AudioNodeInputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.350"* %0, %"class.blink::AudioNodeInput"** null)
  %9 = load %"class.blink::AudioNodeInput"**, %"class.blink::AudioNodeInput"*** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::AudioNodeInput"** [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.350", %"class.WTF::HashTable.350"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::AudioNodeInput"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %11, i64 %38
  %40 = load %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %39, align 8
  %41 = icmp eq %"class.blink::AudioNodeInput"* %40, null
  %42 = inttoptr i64 %17 to %"class.blink::AudioNodeInput"*
  br i1 %41, label %76, label %43

43:                                               ; preds = %10
  %44 = xor i32 %36, -1
  %45 = lshr i32 %36, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %64
  %58 = phi %"class.blink::AudioNodeInput"* [ %40, %43 ], [ %72, %64 ]
  %59 = phi %"class.blink::AudioNodeInput"** [ %39, %43 ], [ %71, %64 ]
  %60 = phi %"class.blink::AudioNodeInput"** [ null, %43 ], [ %66, %64 ]
  %61 = phi i64 [ %38, %43 ], [ %70, %64 ]
  %62 = phi i64 [ 0, %43 ], [ %68, %64 ]
  %63 = icmp eq %"class.blink::AudioNodeInput"* %58, %42
  br i1 %63, label %103, label %64

64:                                               ; preds = %57
  %65 = icmp eq %"class.blink::AudioNodeInput"* %58, inttoptr (i64 -1 to %"class.blink::AudioNodeInput"*)
  %66 = select i1 %65, %"class.blink::AudioNodeInput"** %59, %"class.blink::AudioNodeInput"** %60
  %67 = icmp eq i64 %62, 0
  %68 = select i1 %67, i64 %56, i64 %62
  %69 = add i64 %68, %61
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %11, i64 %70
  %72 = load %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %71, align 8
  %73 = icmp eq %"class.blink::AudioNodeInput"* %72, null
  br i1 %73, label %74, label %57

74:                                               ; preds = %64
  %75 = icmp eq %"class.blink::AudioNodeInput"** %66, null
  br i1 %75, label %76, label %79

76:                                               ; preds = %10, %74
  %77 = phi %"class.blink::AudioNodeInput"** [ %71, %74 ], [ %39, %10 ]
  %78 = bitcast %"class.blink::AudioNodeInput"** %77 to i64*
  br label %87

79:                                               ; preds = %74
  %80 = bitcast %"class.blink::AudioNodeInput"** %66 to i64*
  store i64 0, i64* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::HashTable.350", %"class.WTF::HashTable.350"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  br label %87

87:                                               ; preds = %76, %79
  %88 = phi i64* [ %78, %76 ], [ %80, %79 ]
  %89 = phi %"class.blink::AudioNodeInput"** [ %77, %76 ], [ %66, %79 ]
  %90 = bitcast %"class.blink::AudioNodeInput"** %2 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %88, align 8
  %92 = getelementptr inbounds %"class.WTF::HashTable.350", %"class.WTF::HashTable.350"* %0, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %92, align 4
  %95 = getelementptr inbounds %"class.WTF::HashTable.350", %"class.WTF::HashTable.350"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, %94
  %98 = shl i32 %97, 1
  %99 = load i32, i32* %12, align 8
  %100 = icmp ult i32 %98, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %87
  %102 = tail call %"class.blink::AudioNodeInput"** @_ZN3WTF9HashTableIPN5blink14AudioNodeInputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.350"* %0, %"class.blink::AudioNodeInput"** %89)
  br label %103

103:                                              ; preds = %57, %87, %101
  %104 = phi i8 [ 1, %87 ], [ 1, %101 ], [ 0, %57 ]
  %105 = phi %"class.blink::AudioNodeInput"** [ %89, %87 ], [ %102, %101 ], [ %59, %57 ]
  %106 = insertvalue { %"class.blink::AudioNodeInput"**, i8 } undef, %"class.blink::AudioNodeInput"** %105, 0
  %107 = insertvalue { %"class.blink::AudioNodeInput"**, i8 } %106, i8 %104, 1
  ret { %"class.blink::AudioNodeInput"**, i8 } %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AudioNodeInput"** @_ZN3WTF9HashTableIPN5blink14AudioNodeInputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.350"*, %"class.blink::AudioNodeInput"**) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.350", %"class.WTF::HashTable.350"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.350", %"class.WTF::HashTable.350"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #5
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #5
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %22, i8* %23) #5
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #5
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #5
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #5
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink14AudioNodeInputEEEPKcv, i64 0, i64 0)) #5
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #5
  %36 = bitcast i8* %35 to %"class.blink::AudioNodeInput"**
  %37 = call %"class.blink::AudioNodeInput"** @_ZN3WTF9HashTableIPN5blink14AudioNodeInputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable.350"* %0, %"class.blink::AudioNodeInput"** %36, i32 %32, %"class.blink::AudioNodeInput"** %1) #5
  ret %"class.blink::AudioNodeInput"** %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AudioNodeInput"** @_ZN3WTF9HashTableIPN5blink14AudioNodeInputES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable.350"*, %"class.blink::AudioNodeInput"**, i32, %"class.blink::AudioNodeInput"**) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::AudioNodeInput"** %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.350", %"class.WTF::HashTable.350"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.350", %"class.WTF::HashTable.350"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.350"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.blink::AudioNodeInput"**, %"class.blink::AudioNodeInput"*** %9, align 8
  %17 = ptrtoint %"class.blink::AudioNodeInput"** %16 to i64
  br label %31

18:                                               ; preds = %119
  %19 = bitcast %"class.WTF::HashTable.350"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %120, %18 ]
  %23 = phi %"class.blink::AudioNodeInput"** [ null, %10 ], [ %123, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #5
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.350", %"class.WTF::HashTable.350"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"class.blink::AudioNodeInput"** %23

31:                                               ; preds = %13, %119
  %32 = phi i64 [ %17, %13 ], [ %120, %119 ]
  %33 = phi i32 [ %7, %13 ], [ %121, %119 ]
  %34 = phi %"class.blink::AudioNodeInput"** [ %16, %13 ], [ %122, %119 ]
  %35 = phi %"class.blink::AudioNodeInput"** [ null, %13 ], [ %123, %119 ]
  %36 = phi i32 [ 0, %13 ], [ %124, %119 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %34, i64 %37
  %39 = bitcast %"class.blink::AudioNodeInput"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %41 [
    i64 -1, label %119
    i64 0, label %119
  ]

41:                                               ; preds = %31
  %42 = shl i64 %40, 32
  %43 = xor i64 %42, -1
  %44 = add i64 %40, %43
  %45 = lshr i64 %44, 22
  %46 = xor i64 %45, %44
  %47 = shl i64 %46, 13
  %48 = xor i64 %47, -1
  %49 = add i64 %46, %48
  %50 = lshr i64 %49, 8
  %51 = xor i64 %50, %49
  %52 = mul i64 %51, 9
  %53 = lshr i64 %52, 15
  %54 = xor i64 %53, %52
  %55 = shl i64 %54, 27
  %56 = xor i64 %55, -1
  %57 = add i64 %54, %56
  %58 = lshr i64 %57, 31
  %59 = xor i64 %58, %57
  %60 = trunc i64 %59 to i32
  %61 = and i32 %14, %60
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %1, i64 %62
  %64 = ptrtoint %"class.blink::AudioNodeInput"** %63 to i64
  %65 = load %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %63, align 8
  %66 = icmp eq %"class.blink::AudioNodeInput"* %65, null
  %67 = inttoptr i64 %40 to %"class.blink::AudioNodeInput"*
  br i1 %66, label %85, label %68

68:                                               ; preds = %41
  %69 = xor i32 %60, -1
  %70 = lshr i32 %60, 23
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 12
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 7
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 2
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 20
  %79 = xor i32 %78, %77
  %80 = or i32 %79, 1
  %81 = zext i32 %80 to i64
  br label %91

82:                                               ; preds = %98
  %83 = ptrtoint %"class.blink::AudioNodeInput"** %105 to i64
  %84 = inttoptr i64 %100 to %"class.blink::AudioNodeInput"**
  br label %85

85:                                               ; preds = %82, %41
  %86 = phi i64 [ %83, %82 ], [ %64, %41 ]
  %87 = phi %"class.blink::AudioNodeInput"** [ %84, %82 ], [ null, %41 ]
  %88 = icmp eq %"class.blink::AudioNodeInput"** %87, null
  %89 = ptrtoint %"class.blink::AudioNodeInput"** %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %109

91:                                               ; preds = %98, %68
  %92 = phi i64 [ 0, %68 ], [ %100, %98 ]
  %93 = phi %"class.blink::AudioNodeInput"* [ %65, %68 ], [ %107, %98 ]
  %94 = phi i64 [ %64, %68 ], [ %106, %98 ]
  %95 = phi i64 [ %62, %68 ], [ %104, %98 ]
  %96 = phi i64 [ 0, %68 ], [ %102, %98 ]
  %97 = icmp eq %"class.blink::AudioNodeInput"* %93, %67
  br i1 %97, label %109, label %98

98:                                               ; preds = %91
  %99 = icmp eq %"class.blink::AudioNodeInput"* %93, inttoptr (i64 -1 to %"class.blink::AudioNodeInput"*)
  %100 = select i1 %99, i64 %94, i64 %92
  %101 = icmp eq i64 %96, 0
  %102 = select i1 %101, i64 %81, i64 %96
  %103 = add i64 %102, %95
  %104 = and i64 %103, %15
  %105 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %1, i64 %104
  %106 = ptrtoint %"class.blink::AudioNodeInput"** %105 to i64
  %107 = load %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %105, align 8
  %108 = icmp eq %"class.blink::AudioNodeInput"* %107, null
  br i1 %108, label %82, label %91

109:                                              ; preds = %91, %85
  %110 = phi i64 [ %90, %85 ], [ %94, %91 ]
  %111 = inttoptr i64 %110 to %"class.blink::AudioNodeInput"**
  %112 = inttoptr i64 %110 to i64*
  store i64 %40, i64* %112, align 8
  %113 = load %"class.blink::AudioNodeInput"**, %"class.blink::AudioNodeInput"*** %9, align 8
  %114 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %113, i64 %37
  %115 = icmp eq %"class.blink::AudioNodeInput"** %114, %3
  %116 = select i1 %115, %"class.blink::AudioNodeInput"** %111, %"class.blink::AudioNodeInput"** %35
  %117 = load i32, i32* %6, align 8
  %118 = ptrtoint %"class.blink::AudioNodeInput"** %113 to i64
  br label %119

119:                                              ; preds = %31, %31, %109
  %120 = phi i64 [ %32, %31 ], [ %118, %109 ], [ %32, %31 ]
  %121 = phi i32 [ %33, %31 ], [ %117, %109 ], [ %33, %31 ]
  %122 = phi %"class.blink::AudioNodeInput"** [ %34, %31 ], [ %113, %109 ], [ %34, %31 ]
  %123 = phi %"class.blink::AudioNodeInput"** [ %35, %31 ], [ %116, %109 ], [ %35, %31 ]
  %124 = add i32 %36, 1
  %125 = icmp eq i32 %124, %121
  br i1 %125, label %18, label %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::AudioParamHandler"**, i8 } @_ZN3WTF9HashTableIPN5blink17AudioParamHandlerES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_S3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_(%"class.WTF::HashTable.359"*, %"class.blink::AudioParamHandler"** dereferenceable(8), %"class.blink::AudioParamHandler"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.359", %"class.WTF::HashTable.359"* %0, i64 0, i32 0
  %5 = load %"class.blink::AudioParamHandler"**, %"class.blink::AudioParamHandler"*** %4, align 8
  %6 = icmp eq %"class.blink::AudioParamHandler"** %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::AudioParamHandler"** @_ZN3WTF9HashTableIPN5blink17AudioParamHandlerES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.359"* %0, %"class.blink::AudioParamHandler"** null)
  %9 = load %"class.blink::AudioParamHandler"**, %"class.blink::AudioParamHandler"*** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::AudioParamHandler"** [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.359", %"class.WTF::HashTable.359"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::AudioParamHandler"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %11, i64 %38
  %40 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %39, align 8
  %41 = icmp eq %"class.blink::AudioParamHandler"* %40, null
  %42 = inttoptr i64 %17 to %"class.blink::AudioParamHandler"*
  br i1 %41, label %76, label %43

43:                                               ; preds = %10
  %44 = xor i32 %36, -1
  %45 = lshr i32 %36, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %64
  %58 = phi %"class.blink::AudioParamHandler"* [ %40, %43 ], [ %72, %64 ]
  %59 = phi %"class.blink::AudioParamHandler"** [ %39, %43 ], [ %71, %64 ]
  %60 = phi %"class.blink::AudioParamHandler"** [ null, %43 ], [ %66, %64 ]
  %61 = phi i64 [ %38, %43 ], [ %70, %64 ]
  %62 = phi i64 [ 0, %43 ], [ %68, %64 ]
  %63 = icmp eq %"class.blink::AudioParamHandler"* %58, %42
  br i1 %63, label %103, label %64

64:                                               ; preds = %57
  %65 = icmp eq %"class.blink::AudioParamHandler"* %58, inttoptr (i64 -1 to %"class.blink::AudioParamHandler"*)
  %66 = select i1 %65, %"class.blink::AudioParamHandler"** %59, %"class.blink::AudioParamHandler"** %60
  %67 = icmp eq i64 %62, 0
  %68 = select i1 %67, i64 %56, i64 %62
  %69 = add i64 %68, %61
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %11, i64 %70
  %72 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %71, align 8
  %73 = icmp eq %"class.blink::AudioParamHandler"* %72, null
  br i1 %73, label %74, label %57

74:                                               ; preds = %64
  %75 = icmp eq %"class.blink::AudioParamHandler"** %66, null
  br i1 %75, label %76, label %79

76:                                               ; preds = %10, %74
  %77 = phi %"class.blink::AudioParamHandler"** [ %71, %74 ], [ %39, %10 ]
  %78 = bitcast %"class.blink::AudioParamHandler"** %77 to i64*
  br label %87

79:                                               ; preds = %74
  %80 = bitcast %"class.blink::AudioParamHandler"** %66 to i64*
  store i64 0, i64* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::HashTable.359", %"class.WTF::HashTable.359"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  br label %87

87:                                               ; preds = %76, %79
  %88 = phi i64* [ %78, %76 ], [ %80, %79 ]
  %89 = phi %"class.blink::AudioParamHandler"** [ %77, %76 ], [ %66, %79 ]
  %90 = bitcast %"class.blink::AudioParamHandler"** %2 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %88, align 8
  %92 = getelementptr inbounds %"class.WTF::HashTable.359", %"class.WTF::HashTable.359"* %0, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %92, align 4
  %95 = getelementptr inbounds %"class.WTF::HashTable.359", %"class.WTF::HashTable.359"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, %94
  %98 = shl i32 %97, 1
  %99 = load i32, i32* %12, align 8
  %100 = icmp ult i32 %98, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %87
  %102 = tail call %"class.blink::AudioParamHandler"** @_ZN3WTF9HashTableIPN5blink17AudioParamHandlerES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.359"* %0, %"class.blink::AudioParamHandler"** %89)
  br label %103

103:                                              ; preds = %57, %87, %101
  %104 = phi i8 [ 1, %87 ], [ 1, %101 ], [ 0, %57 ]
  %105 = phi %"class.blink::AudioParamHandler"** [ %89, %87 ], [ %102, %101 ], [ %59, %57 ]
  %106 = insertvalue { %"class.blink::AudioParamHandler"**, i8 } undef, %"class.blink::AudioParamHandler"** %105, 0
  %107 = insertvalue { %"class.blink::AudioParamHandler"**, i8 } %106, i8 %104, 1
  ret { %"class.blink::AudioParamHandler"**, i8 } %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AudioParamHandler"** @_ZN3WTF9HashTableIPN5blink17AudioParamHandlerES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.359"*, %"class.blink::AudioParamHandler"**) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.359", %"class.WTF::HashTable.359"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.359", %"class.WTF::HashTable.359"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #5
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #5
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %22, i8* %23) #5
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #5
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #5
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #5
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink17AudioParamHandlerEEEPKcv, i64 0, i64 0)) #5
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #5
  %36 = bitcast i8* %35 to %"class.blink::AudioParamHandler"**
  %37 = call %"class.blink::AudioParamHandler"** @_ZN3WTF9HashTableIPN5blink17AudioParamHandlerES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable.359"* %0, %"class.blink::AudioParamHandler"** %36, i32 %32, %"class.blink::AudioParamHandler"** %1) #5
  ret %"class.blink::AudioParamHandler"** %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AudioParamHandler"** @_ZN3WTF9HashTableIPN5blink17AudioParamHandlerES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable.359"*, %"class.blink::AudioParamHandler"**, i32, %"class.blink::AudioParamHandler"**) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::AudioParamHandler"** %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.359", %"class.WTF::HashTable.359"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.359", %"class.WTF::HashTable.359"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.359"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.blink::AudioParamHandler"**, %"class.blink::AudioParamHandler"*** %9, align 8
  %17 = ptrtoint %"class.blink::AudioParamHandler"** %16 to i64
  br label %31

18:                                               ; preds = %119
  %19 = bitcast %"class.WTF::HashTable.359"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %120, %18 ]
  %23 = phi %"class.blink::AudioParamHandler"** [ null, %10 ], [ %123, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #5
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.359", %"class.WTF::HashTable.359"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"class.blink::AudioParamHandler"** %23

31:                                               ; preds = %13, %119
  %32 = phi i64 [ %17, %13 ], [ %120, %119 ]
  %33 = phi i32 [ %7, %13 ], [ %121, %119 ]
  %34 = phi %"class.blink::AudioParamHandler"** [ %16, %13 ], [ %122, %119 ]
  %35 = phi %"class.blink::AudioParamHandler"** [ null, %13 ], [ %123, %119 ]
  %36 = phi i32 [ 0, %13 ], [ %124, %119 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %34, i64 %37
  %39 = bitcast %"class.blink::AudioParamHandler"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %41 [
    i64 -1, label %119
    i64 0, label %119
  ]

41:                                               ; preds = %31
  %42 = shl i64 %40, 32
  %43 = xor i64 %42, -1
  %44 = add i64 %40, %43
  %45 = lshr i64 %44, 22
  %46 = xor i64 %45, %44
  %47 = shl i64 %46, 13
  %48 = xor i64 %47, -1
  %49 = add i64 %46, %48
  %50 = lshr i64 %49, 8
  %51 = xor i64 %50, %49
  %52 = mul i64 %51, 9
  %53 = lshr i64 %52, 15
  %54 = xor i64 %53, %52
  %55 = shl i64 %54, 27
  %56 = xor i64 %55, -1
  %57 = add i64 %54, %56
  %58 = lshr i64 %57, 31
  %59 = xor i64 %58, %57
  %60 = trunc i64 %59 to i32
  %61 = and i32 %14, %60
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %1, i64 %62
  %64 = ptrtoint %"class.blink::AudioParamHandler"** %63 to i64
  %65 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %63, align 8
  %66 = icmp eq %"class.blink::AudioParamHandler"* %65, null
  %67 = inttoptr i64 %40 to %"class.blink::AudioParamHandler"*
  br i1 %66, label %85, label %68

68:                                               ; preds = %41
  %69 = xor i32 %60, -1
  %70 = lshr i32 %60, 23
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 12
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 7
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 2
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 20
  %79 = xor i32 %78, %77
  %80 = or i32 %79, 1
  %81 = zext i32 %80 to i64
  br label %91

82:                                               ; preds = %98
  %83 = ptrtoint %"class.blink::AudioParamHandler"** %105 to i64
  %84 = inttoptr i64 %100 to %"class.blink::AudioParamHandler"**
  br label %85

85:                                               ; preds = %82, %41
  %86 = phi i64 [ %83, %82 ], [ %64, %41 ]
  %87 = phi %"class.blink::AudioParamHandler"** [ %84, %82 ], [ null, %41 ]
  %88 = icmp eq %"class.blink::AudioParamHandler"** %87, null
  %89 = ptrtoint %"class.blink::AudioParamHandler"** %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %109

91:                                               ; preds = %98, %68
  %92 = phi i64 [ 0, %68 ], [ %100, %98 ]
  %93 = phi %"class.blink::AudioParamHandler"* [ %65, %68 ], [ %107, %98 ]
  %94 = phi i64 [ %64, %68 ], [ %106, %98 ]
  %95 = phi i64 [ %62, %68 ], [ %104, %98 ]
  %96 = phi i64 [ 0, %68 ], [ %102, %98 ]
  %97 = icmp eq %"class.blink::AudioParamHandler"* %93, %67
  br i1 %97, label %109, label %98

98:                                               ; preds = %91
  %99 = icmp eq %"class.blink::AudioParamHandler"* %93, inttoptr (i64 -1 to %"class.blink::AudioParamHandler"*)
  %100 = select i1 %99, i64 %94, i64 %92
  %101 = icmp eq i64 %96, 0
  %102 = select i1 %101, i64 %81, i64 %96
  %103 = add i64 %102, %95
  %104 = and i64 %103, %15
  %105 = getelementptr inbounds %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %1, i64 %104
  %106 = ptrtoint %"class.blink::AudioParamHandler"** %105 to i64
  %107 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %105, align 8
  %108 = icmp eq %"class.blink::AudioParamHandler"* %107, null
  br i1 %108, label %82, label %91

109:                                              ; preds = %91, %85
  %110 = phi i64 [ %90, %85 ], [ %94, %91 ]
  %111 = inttoptr i64 %110 to %"class.blink::AudioParamHandler"**
  %112 = inttoptr i64 %110 to i64*
  store i64 %40, i64* %112, align 8
  %113 = load %"class.blink::AudioParamHandler"**, %"class.blink::AudioParamHandler"*** %9, align 8
  %114 = getelementptr inbounds %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %113, i64 %37
  %115 = icmp eq %"class.blink::AudioParamHandler"** %114, %3
  %116 = select i1 %115, %"class.blink::AudioParamHandler"** %111, %"class.blink::AudioParamHandler"** %35
  %117 = load i32, i32* %6, align 8
  %118 = ptrtoint %"class.blink::AudioParamHandler"** %113 to i64
  br label %119

119:                                              ; preds = %31, %31, %109
  %120 = phi i64 [ %32, %31 ], [ %118, %109 ], [ %32, %31 ]
  %121 = phi i32 [ %33, %31 ], [ %117, %109 ], [ %33, %31 ]
  %122 = phi %"class.blink::AudioParamHandler"** [ %34, %31 ], [ %113, %109 ], [ %34, %31 ]
  %123 = phi %"class.blink::AudioParamHandler"** [ %35, %31 ], [ %116, %109 ], [ %35, %31 ]
  %124 = add i32 %36, 1
  %125 = icmp eq i32 %124, %121
  br i1 %125, label %18, label %31
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink12_GLOBAL__N_110FindOutputERNS_15AudioNodeOutputERN3WTF7HashSetIPS1_NS3_7PtrHashIS1_EENS3_10HashTraitsIS5_EENS3_18PartitionAllocatorEEESC_: argument 0"}
!5 = distinct !{!5, !"_ZN5blink12_GLOBAL__N_110FindOutputERNS_15AudioNodeOutputERN3WTF7HashSetIPS1_NS3_7PtrHashIS1_EENS3_10HashTraitsIS5_EENS3_18PartitionAllocatorEEESC_"}
