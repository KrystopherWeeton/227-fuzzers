; ModuleID = '../../third_party/blink/renderer/core/typed_arrays/dom_array_piece.cc'
source_filename = "../../third_party/blink/renderer/core/typed_arrays/dom_array_piece.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::DOMArrayPiece" = type <{ i8*, i64, i8, i8, [6 x i8] }>
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::V8UnionArrayBufferOrArrayBufferView" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::Member.2", %"class.blink::NotShared" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::DOMArrayBuffer"* }
%"class.blink::NotShared" = type { %"class.blink::Member.4" }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::DOMArrayBufferView"* }
%"class.blink::ArrayBufferOrArrayBufferView" = type { i32, %"class.blink::Member.2", %"class.blink::NotShared" }

@_ZN5blink13DOMArrayPieceC1Ev = hidden unnamed_addr alias void (%"class.blink::DOMArrayPiece"*), void (%"class.blink::DOMArrayPiece"*)* @_ZN5blink13DOMArrayPieceC2Ev
@_ZN5blink13DOMArrayPieceC1EPNS_14DOMArrayBufferE = hidden unnamed_addr alias void (%"class.blink::DOMArrayPiece"*, %"class.blink::DOMArrayBuffer"*), void (%"class.blink::DOMArrayPiece"*, %"class.blink::DOMArrayBuffer"*)* @_ZN5blink13DOMArrayPieceC2EPNS_14DOMArrayBufferE
@_ZN5blink13DOMArrayPieceC1EPNS_18DOMArrayBufferViewE = hidden unnamed_addr alias void (%"class.blink::DOMArrayPiece"*, %"class.blink::DOMArrayBufferView"*), void (%"class.blink::DOMArrayPiece"*, %"class.blink::DOMArrayBufferView"*)* @_ZN5blink13DOMArrayPieceC2EPNS_18DOMArrayBufferViewE
@_ZN5blink13DOMArrayPieceC1EPKNS_35V8UnionArrayBufferOrArrayBufferViewE = hidden unnamed_addr alias void (%"class.blink::DOMArrayPiece"*, %"class.blink::V8UnionArrayBufferOrArrayBufferView"*), void (%"class.blink::DOMArrayPiece"*, %"class.blink::V8UnionArrayBufferOrArrayBufferView"*)* @_ZN5blink13DOMArrayPieceC2EPKNS_35V8UnionArrayBufferOrArrayBufferViewE
@_ZN5blink13DOMArrayPieceC1ERKNS_28ArrayBufferOrArrayBufferViewE = hidden unnamed_addr alias void (%"class.blink::DOMArrayPiece"*, %"class.blink::ArrayBufferOrArrayBufferView"*), void (%"class.blink::DOMArrayPiece"*, %"class.blink::ArrayBufferOrArrayBufferView"*)* @_ZN5blink13DOMArrayPieceC2ERKNS_28ArrayBufferOrArrayBufferViewE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13DOMArrayPieceC2Ev(%"class.blink::DOMArrayPiece"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 2
  %3 = bitcast %"class.blink::DOMArrayPiece"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #5
  store i8 1, i8* %2, align 8
  %4 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 3
  store i8 0, i8* %4, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink13DOMArrayPiece8InitNullEv(%"class.blink::DOMArrayPiece"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 2
  %3 = bitcast %"class.blink::DOMArrayPiece"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false)
  store i8 1, i8* %2, align 8
  %4 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 3
  store i8 0, i8* %4, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13DOMArrayPieceC2EPNS_14DOMArrayBufferE(%"class.blink::DOMArrayPiece"* nocapture, %"class.blink::DOMArrayBuffer"* readonly) unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::DOMArrayBuffer"* %1, null
  br i1 %3, label %23, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %5, align 8
  %7 = icmp eq %"class.v8::BackingStore"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %4
  %9 = tail call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %6) #5
  %10 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %5, align 8
  %11 = icmp eq %"class.v8::BackingStore"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = tail call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %10) #5
  br label %14

14:                                               ; preds = %12, %8, %4
  %15 = phi i8* [ %9, %12 ], [ %9, %8 ], [ null, %4 ]
  %16 = phi i64 [ %13, %12 ], [ 0, %8 ], [ 0, %4 ]
  %17 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 1
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 0
  store i8* %15, i8** %18, align 8
  %19 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 2
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 3
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %1, i64 0, i32 0, i32 2
  %22 = load i8, i8* %21, align 8, !range !2
  store i8 %22, i8* %20, align 1
  br label %27

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 2
  %25 = bitcast %"class.blink::DOMArrayPiece"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #5
  store i8 1, i8* %24, align 8
  %26 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 3
  store i8 0, i8* %26, align 1
  br label %27

27:                                               ; preds = %14, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13DOMArrayPiece19InitWithArrayBufferEPNS_14DOMArrayBufferE(%"class.blink::DOMArrayPiece"* nocapture, %"class.blink::DOMArrayBuffer"* readonly) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::DOMArrayBuffer"* %1, null
  br i1 %3, label %23, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %5, align 8
  %7 = icmp eq %"class.v8::BackingStore"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %4
  %9 = tail call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %6) #5
  %10 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %5, align 8
  %11 = icmp eq %"class.v8::BackingStore"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = tail call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %10) #5
  br label %14

14:                                               ; preds = %4, %8, %12
  %15 = phi i8* [ %9, %12 ], [ %9, %8 ], [ null, %4 ]
  %16 = phi i64 [ %13, %12 ], [ 0, %8 ], [ 0, %4 ]
  %17 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 1
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 0
  store i8* %15, i8** %18, align 8
  %19 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 2
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 3
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %1, i64 0, i32 0, i32 2
  %22 = load i8, i8* %21, align 8, !range !2
  store i8 %22, i8* %20, align 1
  br label %27

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 2
  %25 = bitcast %"class.blink::DOMArrayPiece"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #5
  store i8 1, i8* %24, align 8
  %26 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 3
  store i8 0, i8* %26, align 1
  br label %27

27:                                               ; preds = %23, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13DOMArrayPieceC2EPNS_18DOMArrayBufferViewE(%"class.blink::DOMArrayPiece"* nocapture, %"class.blink::DOMArrayBufferView"*) unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::DOMArrayBufferView"* %1, null
  br i1 %3, label %32, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %1, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %6, i64 0, i32 2
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  br label %13

13:                                               ; preds = %10, %4
  %14 = phi i8* [ %12, %10 ], [ null, %4 ]
  %15 = bitcast %"class.blink::DOMArrayBufferView"* %1 to i64 (%"class.blink::DOMArrayBufferView"*)***
  %16 = load i64 (%"class.blink::DOMArrayBufferView"*)**, i64 (%"class.blink::DOMArrayBufferView"*)*** %15, align 8
  %17 = getelementptr inbounds i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %16, i64 10
  %18 = load i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %17, align 8
  %19 = tail call i64 %18(%"class.blink::DOMArrayBufferView"* nonnull %1) #5
  %20 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 1
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 0
  store i8* %14, i8** %21, align 8
  %22 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 2
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 3
  store i8 0, i8* %23, align 1
  %24 = bitcast %"class.blink::DOMArrayBufferBase"** %5 to %"class.blink::DOMArrayBuffer"**
  %25 = load %"class.blink::DOMArrayBuffer"*, %"class.blink::DOMArrayBuffer"** %24, align 8
  %26 = icmp eq %"class.blink::DOMArrayBuffer"* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %13
  %28 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %25, i64 0, i32 0, i32 2
  %29 = load i8, i8* %28, align 8, !range !2
  br label %30

30:                                               ; preds = %27, %13
  %31 = phi i8 [ %29, %27 ], [ 1, %13 ]
  store i8 %31, i8* %23, align 1
  br label %36

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 2
  %34 = bitcast %"class.blink::DOMArrayPiece"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false) #5
  store i8 1, i8* %33, align 8
  %35 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 3
  store i8 0, i8* %35, align 1
  br label %36

36:                                               ; preds = %30, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13DOMArrayPiece23InitWithArrayBufferViewEPNS_18DOMArrayBufferViewE(%"class.blink::DOMArrayPiece"* nocapture, %"class.blink::DOMArrayBufferView"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::DOMArrayBufferView"* %1, null
  br i1 %3, label %32, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %1, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %6, i64 0, i32 2
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  br label %13

13:                                               ; preds = %4, %10
  %14 = phi i8* [ %12, %10 ], [ null, %4 ]
  %15 = bitcast %"class.blink::DOMArrayBufferView"* %1 to i64 (%"class.blink::DOMArrayBufferView"*)***
  %16 = load i64 (%"class.blink::DOMArrayBufferView"*)**, i64 (%"class.blink::DOMArrayBufferView"*)*** %15, align 8
  %17 = getelementptr inbounds i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %16, i64 10
  %18 = load i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %17, align 8
  %19 = tail call i64 %18(%"class.blink::DOMArrayBufferView"* nonnull %1) #5
  %20 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 1
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 0
  store i8* %14, i8** %21, align 8
  %22 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 2
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 3
  store i8 0, i8* %23, align 1
  %24 = bitcast %"class.blink::DOMArrayBufferBase"** %5 to %"class.blink::DOMArrayBuffer"**
  %25 = load %"class.blink::DOMArrayBuffer"*, %"class.blink::DOMArrayBuffer"** %24, align 8
  %26 = icmp eq %"class.blink::DOMArrayBuffer"* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %13
  %28 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %25, i64 0, i32 0, i32 2
  %29 = load i8, i8* %28, align 8, !range !2
  br label %30

30:                                               ; preds = %13, %27
  %31 = phi i8 [ %29, %27 ], [ 1, %13 ]
  store i8 %31, i8* %23, align 1
  br label %36

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 2
  %34 = bitcast %"class.blink::DOMArrayPiece"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false) #5
  store i8 1, i8* %33, align 8
  %35 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 3
  store i8 0, i8* %35, align 1
  br label %36

36:                                               ; preds = %32, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13DOMArrayPieceC2EPKNS_35V8UnionArrayBufferOrArrayBufferViewE(%"class.blink::DOMArrayPiece"* nocapture, %"class.blink::V8UnionArrayBufferOrArrayBufferView"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::V8UnionArrayBufferOrArrayBufferView", %"class.blink::V8UnionArrayBufferOrArrayBufferView"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %68 [
    i32 0, label %5
    i32 1, label %32
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::V8UnionArrayBufferOrArrayBufferView", %"class.blink::V8UnionArrayBufferOrArrayBufferView"* %1, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::DOMArrayBuffer"*, %"class.blink::DOMArrayBuffer"** %6, align 8
  %8 = icmp eq %"class.blink::DOMArrayBuffer"* %7, null
  br i1 %8, label %28, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %10, align 8
  %12 = icmp eq %"class.v8::BackingStore"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %9
  %14 = tail call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %11) #5
  %15 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %10, align 8
  %16 = icmp eq %"class.v8::BackingStore"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = tail call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %15) #5
  br label %19

19:                                               ; preds = %17, %13, %9
  %20 = phi i8* [ %14, %17 ], [ %14, %13 ], [ null, %9 ]
  %21 = phi i64 [ %18, %17 ], [ 0, %13 ], [ 0, %9 ]
  %22 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 1
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 0
  store i8* %20, i8** %23, align 8
  %24 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 2
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 3
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %7, i64 0, i32 0, i32 2
  %27 = load i8, i8* %26, align 8, !range !2
  store i8 %27, i8* %25, align 1
  br label %72

28:                                               ; preds = %5
  %29 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 2
  %30 = bitcast %"class.blink::DOMArrayPiece"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #5
  store i8 1, i8* %29, align 8
  %31 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 3
  store i8 0, i8* %31, align 1
  br label %72

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.blink::V8UnionArrayBufferOrArrayBufferView", %"class.blink::V8UnionArrayBufferOrArrayBufferView"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.blink::DOMArrayBufferView"*, %"class.blink::DOMArrayBufferView"** %33, align 8, !noalias !3
  %35 = icmp eq %"class.blink::DOMArrayBufferView"* %34, null
  br i1 %35, label %64, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %34, i64 0, i32 3, i32 0, i32 0
  %38 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %38, i64 0, i32 2
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %34, i64 0, i32 1
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %42, %36
  %46 = phi i8* [ %44, %42 ], [ null, %36 ]
  %47 = bitcast %"class.blink::DOMArrayBufferView"* %34 to i64 (%"class.blink::DOMArrayBufferView"*)***
  %48 = load i64 (%"class.blink::DOMArrayBufferView"*)**, i64 (%"class.blink::DOMArrayBufferView"*)*** %47, align 8
  %49 = getelementptr inbounds i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %48, i64 10
  %50 = load i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %49, align 8
  %51 = tail call i64 %50(%"class.blink::DOMArrayBufferView"* nonnull %34) #5
  %52 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 1
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 0
  store i8* %46, i8** %53, align 8
  %54 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 2
  store i8 0, i8* %54, align 8
  %55 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 3
  store i8 0, i8* %55, align 1
  %56 = bitcast %"class.blink::DOMArrayBufferBase"** %37 to %"class.blink::DOMArrayBuffer"**
  %57 = load %"class.blink::DOMArrayBuffer"*, %"class.blink::DOMArrayBuffer"** %56, align 8
  %58 = icmp eq %"class.blink::DOMArrayBuffer"* %57, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %45
  %60 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %57, i64 0, i32 0, i32 2
  %61 = load i8, i8* %60, align 8, !range !2
  br label %62

62:                                               ; preds = %59, %45
  %63 = phi i8 [ %61, %59 ], [ 1, %45 ]
  store i8 %63, i8* %55, align 1
  br label %72

64:                                               ; preds = %32
  %65 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 2
  %66 = bitcast %"class.blink::DOMArrayPiece"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false) #5
  store i8 1, i8* %65, align 8
  %67 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 3
  store i8 0, i8* %67, align 1
  br label %72

68:                                               ; preds = %2
  %69 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 2
  %70 = bitcast %"class.blink::DOMArrayPiece"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false) #5
  store i8 1, i8* %69, align 8
  %71 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 3
  store i8 0, i8* %71, align 1
  br label %72

72:                                               ; preds = %64, %62, %28, %19, %68
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13DOMArrayPieceC2ERKNS_28ArrayBufferOrArrayBufferViewE(%"class.blink::DOMArrayPiece"* nocapture, %"class.blink::ArrayBufferOrArrayBufferView"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::NotShared", align 8
  %4 = getelementptr inbounds %"class.blink::ArrayBufferOrArrayBufferView", %"class.blink::ArrayBufferOrArrayBufferView"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %69 [
    i32 1, label %6
    i32 2, label %32
  ]

6:                                                ; preds = %2
  %7 = tail call %"class.blink::DOMArrayBuffer"* @_ZNK5blink28ArrayBufferOrArrayBufferView16GetAsArrayBufferEv(%"class.blink::ArrayBufferOrArrayBufferView"* %1) #5
  %8 = icmp eq %"class.blink::DOMArrayBuffer"* %7, null
  br i1 %8, label %28, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %10, align 8
  %12 = icmp eq %"class.v8::BackingStore"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %9
  %14 = tail call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %11) #5
  %15 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %10, align 8
  %16 = icmp eq %"class.v8::BackingStore"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = tail call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %15) #5
  br label %19

19:                                               ; preds = %17, %13, %9
  %20 = phi i8* [ %14, %17 ], [ %14, %13 ], [ null, %9 ]
  %21 = phi i64 [ %18, %17 ], [ 0, %13 ], [ 0, %9 ]
  %22 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 1
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 0
  store i8* %20, i8** %23, align 8
  %24 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 2
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 3
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %7, i64 0, i32 0, i32 2
  %27 = load i8, i8* %26, align 8, !range !2
  store i8 %27, i8* %25, align 1
  br label %69

28:                                               ; preds = %6
  %29 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 2
  %30 = bitcast %"class.blink::DOMArrayPiece"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #5
  store i8 1, i8* %29, align 8
  %31 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 3
  store i8 0, i8* %31, align 1
  br label %69

32:                                               ; preds = %2
  %33 = bitcast %"class.blink::NotShared"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #5
  call void @_ZNK5blink28ArrayBufferOrArrayBufferView20GetAsArrayBufferViewEv(%"class.blink::NotShared"* nonnull sret %3, %"class.blink::ArrayBufferOrArrayBufferView"* %1) #5
  %34 = getelementptr inbounds %"class.blink::NotShared", %"class.blink::NotShared"* %3, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::DOMArrayBufferView"*, %"class.blink::DOMArrayBufferView"** %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #5
  %36 = icmp eq %"class.blink::DOMArrayBufferView"* %35, null
  br i1 %36, label %65, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %35, i64 0, i32 3, i32 0, i32 0
  %39 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %39, i64 0, i32 2
  %41 = load i8, i8* %40, align 8, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %35, i64 0, i32 1
  %45 = load i8*, i8** %44, align 8
  br label %46

46:                                               ; preds = %43, %37
  %47 = phi i8* [ %45, %43 ], [ null, %37 ]
  %48 = bitcast %"class.blink::DOMArrayBufferView"* %35 to i64 (%"class.blink::DOMArrayBufferView"*)***
  %49 = load i64 (%"class.blink::DOMArrayBufferView"*)**, i64 (%"class.blink::DOMArrayBufferView"*)*** %48, align 8
  %50 = getelementptr inbounds i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %49, i64 10
  %51 = load i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %50, align 8
  %52 = call i64 %51(%"class.blink::DOMArrayBufferView"* nonnull %35) #5
  %53 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 1
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 0
  store i8* %47, i8** %54, align 8
  %55 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 2
  store i8 0, i8* %55, align 8
  %56 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 3
  store i8 0, i8* %56, align 1
  %57 = bitcast %"class.blink::DOMArrayBufferBase"** %38 to %"class.blink::DOMArrayBuffer"**
  %58 = load %"class.blink::DOMArrayBuffer"*, %"class.blink::DOMArrayBuffer"** %57, align 8
  %59 = icmp eq %"class.blink::DOMArrayBuffer"* %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %46
  %61 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %58, i64 0, i32 0, i32 2
  %62 = load i8, i8* %61, align 8, !range !2
  br label %63

63:                                               ; preds = %60, %46
  %64 = phi i8 [ %62, %60 ], [ 1, %46 ]
  store i8 %64, i8* %56, align 1
  br label %69

65:                                               ; preds = %32
  %66 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 2
  %67 = bitcast %"class.blink::DOMArrayPiece"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false) #5
  store i8 1, i8* %66, align 8
  %68 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 3
  store i8 0, i8* %68, align 1
  br label %69

69:                                               ; preds = %2, %65, %63, %28, %19
  ret void
}

declare %"class.blink::DOMArrayBuffer"* @_ZNK5blink28ArrayBufferOrArrayBufferView16GetAsArrayBufferEv(%"class.blink::ArrayBufferOrArrayBufferView"*) local_unnamed_addr #3

declare void @_ZNK5blink28ArrayBufferOrArrayBufferView20GetAsArrayBufferViewEv(%"class.blink::NotShared"* sret, %"class.blink::ArrayBufferOrArrayBufferView"*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink13DOMArrayPiece6IsNullEv(%"class.blink::DOMArrayPiece"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink13DOMArrayPiece10IsDetachedEv(%"class.blink::DOMArrayPiece"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK5blink13DOMArrayPiece4DataEv(%"class.blink::DOMArrayPiece"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK5blink13DOMArrayPiece5BytesEv(%"class.blink::DOMArrayPiece"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink13DOMArrayPiece10ByteLengthEv(%"class.blink::DOMArrayPiece"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink13DOMArrayPiece12InitWithDataEPvm(%"class.blink::DOMArrayPiece"* nocapture, i8*, i64) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 1
  store i64 %2, i64* %4, align 8
  %5 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 0
  store i8* %1, i8** %5, align 8
  %6 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 2
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.blink::DOMArrayPiece", %"class.blink::DOMArrayPiece"* %0, i64 0, i32 3
  store i8 0, i8* %7, align 1
  ret void
}

declare i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"*) local_unnamed_addr #3

declare i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK5blink35V8UnionArrayBufferOrArrayBufferView20GetAsArrayBufferViewEv: argument 0"}
!5 = distinct !{!5, !"_ZNK5blink35V8UnionArrayBufferOrArrayBufferView20GetAsArrayBufferViewEv"}
