; ModuleID = '../../media/filters/memory_data_source.cc'
source_filename = "../../media/filters/memory_data_source.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::MemoryDataSource" = type <{ %"class.media::DataSource", %"class.std::__1::basic_string", i8*, i64, %"struct.std::__1::atomic", [7 x i8] }>
%"class.media::DataSource" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i32 }

@_ZTVN5media16MemoryDataSourceE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::MemoryDataSource"*)* @_ZN5media16MemoryDataSourceD2Ev to i8*), i8* bitcast (void (%"class.media::MemoryDataSource"*)* @_ZN5media16MemoryDataSourceD0Ev to i8*), i8* bitcast (void (%"class.media::MemoryDataSource"*, i64, i32, i8*, %"class.base::OnceCallback"*)* @_ZN5media16MemoryDataSource4ReadEliPhN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (void (%"class.media::MemoryDataSource"*)* @_ZN5media16MemoryDataSource4StopEv to i8*), i8* bitcast (void (%"class.media::MemoryDataSource"*)* @_ZN5media16MemoryDataSource5AbortEv to i8*), i8* bitcast (i1 (%"class.media::MemoryDataSource"*, i64*)* @_ZN5media16MemoryDataSource7GetSizeEPl to i8*), i8* bitcast (i1 (%"class.media::MemoryDataSource"*)* @_ZN5media16MemoryDataSource11IsStreamingEv to i8*), i8* bitcast (void (%"class.media::MemoryDataSource"*, i32)* @_ZN5media16MemoryDataSource10SetBitrateEi to i8*), i8* bitcast (i1 (%"class.media::DataSource"*)* @_ZNK5media10DataSource19AssumeFullyBufferedEv to i8*), i8* bitcast (i64 (%"class.media::DataSource"*)* @_ZN5media10DataSource14GetMemoryUsageEv to i8*)] }, align 8

@_ZN5media16MemoryDataSourceC1ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.media::MemoryDataSource"*, %"class.std::__1::basic_string"*), void (%"class.media::MemoryDataSource"*, %"class.std::__1::basic_string"*)* @_ZN5media16MemoryDataSourceC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
@_ZN5media16MemoryDataSourceC1EPKhm = hidden unnamed_addr alias void (%"class.media::MemoryDataSource"*, i8*, i64), void (%"class.media::MemoryDataSource"*, i8*, i64)* @_ZN5media16MemoryDataSourceC2EPKhm
@_ZN5media16MemoryDataSourceD1Ev = hidden unnamed_addr alias void (%"class.media::MemoryDataSource"*), void (%"class.media::MemoryDataSource"*)* @_ZN5media16MemoryDataSourceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media16MemoryDataSourceC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.media::MemoryDataSource"*, %"class.std::__1::basic_string"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::MemoryDataSource", %"class.media::MemoryDataSource"* %0, i64 0, i32 0
  tail call void @_ZN5media10DataSourceC2Ev(%"class.media::DataSource"* %3) #7
  %4 = getelementptr inbounds %"class.media::MemoryDataSource", %"class.media::MemoryDataSource"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5media16MemoryDataSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.media::MemoryDataSource", %"class.media::MemoryDataSource"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %7 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #7
  %8 = getelementptr inbounds %"class.media::MemoryDataSource", %"class.media::MemoryDataSource"* %0, i64 0, i32 2
  %9 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %19

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::basic_string"* %5 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast i8** %8 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.media::MemoryDataSource", %"class.media::MemoryDataSource"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  br label %22

19:                                               ; preds = %2
  %20 = bitcast i8** %8 to %"class.std::__1::basic_string"**
  store %"class.std::__1::basic_string"* %5, %"class.std::__1::basic_string"** %20, align 8
  %21 = zext i8 %11 to i64
  br label %22

22:                                               ; preds = %13, %19
  %23 = phi i64 [ %18, %13 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.media::MemoryDataSource", %"class.media::MemoryDataSource"* %0, i64 0, i32 3
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.media::MemoryDataSource", %"class.media::MemoryDataSource"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %25, align 1
  ret void
}

declare void @_ZN5media10DataSourceC2Ev(%"class.media::DataSource"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media16MemoryDataSourceC2EPKhm(%"class.media::MemoryDataSource"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.media::MemoryDataSource", %"class.media::MemoryDataSource"* %0, i64 0, i32 0
  tail call void @_ZN5media10DataSourceC2Ev(%"class.media::DataSource"* %4) #7
  %5 = getelementptr inbounds %"class.media::MemoryDataSource", %"class.media::MemoryDataSource"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5media16MemoryDataSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.media::MemoryDataSource", %"class.media::MemoryDataSource"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #7
  %8 = getelementptr inbounds %"class.media::MemoryDataSource", %"class.media::MemoryDataSource"* %0, i64 0, i32 2
  store i8* %1, i8** %8, align 8
  %9 = getelementptr inbounds %"class.media::MemoryDataSource", %"class.media::MemoryDataSource"* %0, i64 0, i32 3
  store i64 %2, i64* %9, align 8
  %10 = getelementptr inbounds %"class.media::MemoryDataSource", %"class.media::MemoryDataSource"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %10, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media16MemoryDataSourceD2Ev(%"class.media::MemoryDataSource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::MemoryDataSource", %"class.media::MemoryDataSource"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5media16MemoryDataSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::MemoryDataSource", %"class.media::MemoryDataSource"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #8
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.media::MemoryDataSource", %"class.media::MemoryDataSource"* %0, i64 0, i32 0
  tail call void @_ZN5media10DataSourceD2Ev(%"class.media::DataSource"* %12) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5media10DataSourceD2Ev(%"class.media::DataSource"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media16MemoryDataSourceD0Ev(%"class.media::MemoryDataSource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::MemoryDataSource", %"class.media::MemoryDataSource"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5media16MemoryDataSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::MemoryDataSource", %"class.media::MemoryDataSource"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #8
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.media::MemoryDataSource", %"class.media::MemoryDataSource"* %0, i64 0, i32 0
  tail call void @_ZN5media10DataSourceD2Ev(%"class.media::DataSource"* %12) #7
  %13 = bitcast %"class.media::MemoryDataSource"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media16MemoryDataSource4ReadEliPhN4base12OnceCallbackIFviEEE(%"class.media::MemoryDataSource"* nocapture readonly, i64, i32, i8* nocapture, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = getelementptr inbounds %"class.media::MemoryDataSource", %"class.media::MemoryDataSource"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i8, i8* %8 seq_cst, align 1
  %10 = and i8 %9, 1
  %11 = icmp ne i8 %10, 0
  %12 = icmp slt i32 %2, 0
  %13 = or i1 %12, %11
  %14 = icmp slt i64 %1, 0
  %15 = or i1 %14, %13
  br i1 %15, label %20, label %16

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.media::MemoryDataSource", %"class.media::MemoryDataSource"* %0, i64 0, i32 3
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, %1
  br i1 %19, label %20, label %31

20:                                               ; preds = %16, %5
  %21 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #7
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %24, i64* %25, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %22, align 8
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  %27 = inttoptr i64 %24 to %"class.base::internal::BindStateBase"*
  %28 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %27, i64 0, i32 1
  %29 = bitcast void ()** %28 to void (%"class.base::internal::BindStateBase"*, i32)**
  %30 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %29, align 8
  tail call void %30(%"class.base::internal::BindStateBase"* %27, i32 -1) #7
  br label %53

31:                                               ; preds = %16
  %32 = sext i32 %2 to i64
  %33 = sub i64 %18, %1
  %34 = icmp ult i64 %33, %32
  %35 = select i1 %34, i64 %33, i64 %32
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.media::MemoryDataSource", %"class.media::MemoryDataSource"* %0, i64 0, i32 2
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 %1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %40, i64 %35, i1 false)
  br label %41

41:                                               ; preds = %31, %37
  %42 = trunc i64 %35 to i32
  %43 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #7
  %44 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %46, i64* %47, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %44, align 8
  %48 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  %49 = inttoptr i64 %46 to %"class.base::internal::BindStateBase"*
  %50 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %49, i64 0, i32 1
  %51 = bitcast void ()** %50 to void (%"class.base::internal::BindStateBase"*, i32)**
  %52 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %51, align 8
  tail call void %52(%"class.base::internal::BindStateBase"* %49, i32 %42) #7
  br label %53

53:                                               ; preds = %41, %20
  %54 = phi %"class.base::internal::CallbackBase"* [ %48, %41 ], [ %26, %20 ]
  %55 = phi i8* [ %43, %41 ], [ %21, %20 ]
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %54) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5media16MemoryDataSource4StopEv(%"class.media::MemoryDataSource"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.media::MemoryDataSource", %"class.media::MemoryDataSource"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store atomic i8 1, i8* %2 seq_cst, align 1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media16MemoryDataSource5AbortEv(%"class.media::MemoryDataSource"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media16MemoryDataSource7GetSizeEPl(%"class.media::MemoryDataSource"* nocapture readonly, i64* nocapture) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.media::MemoryDataSource", %"class.media::MemoryDataSource"* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  store i64 %4, i64* %1, align 8
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5media16MemoryDataSource11IsStreamingEv(%"class.media::MemoryDataSource"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media16MemoryDataSource10SetBitrateEi(%"class.media::MemoryDataSource"* nocapture, i32) unnamed_addr #6 align 2 {
  ret void
}

declare zeroext i1 @_ZNK5media10DataSource19AssumeFullyBufferedEv(%"class.media::DataSource"*) unnamed_addr #1

declare i64 @_ZN5media10DataSource14GetMemoryUsageEv(%"class.media::DataSource"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
