; ModuleID = '../../components/omnibox/browser/actions/omnibox_pedal_provider.cc'
source_filename = "../../components/omnibox/browser/actions/omnibox_pedal_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.OmniboxPedalProvider = type <{ %class.AutocompleteProviderClient*, %"class.std::__1::unordered_map", %"class.OmniboxPedal::SynonymGroup", %"class.std::__1::unordered_map.51", %"class.std::__1::basic_string", %"class.OmniboxPedal::TokenSequence", i64, i8, i8, [6 x i8] }>
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.32", %"class.std::__1::__compressed_pair.41", %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.48", [4 x i8] }>
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34", %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { i64 }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { float }
%"class.OmniboxPedal::SynonymGroup" = type { i8, i8, %"class.std::__1::vector.13" }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"class.OmniboxPedal::TokenSequence"*, %"class.OmniboxPedal::TokenSequence"*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.OmniboxPedal::TokenSequence"* }
%"class.std::__1::unordered_map.51" = type { %"class.std::__1::__hash_table.52" }
%"class.std::__1::__hash_table.52" = type <{ %"class.std::__1::unique_ptr.53", %"class.std::__1::__compressed_pair.63", %"class.std::__1::__compressed_pair.68", %"class.std::__1::__compressed_pair.73", [4 x i8] }>
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55", %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.std::__1::__hash_node_base.56"** }
%"struct.std::__1::__hash_node_base.56" = type { %"struct.std::__1::__hash_node_base.56"* }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.std::__1::__bucket_list_deallocator.58" }
%"class.std::__1::__bucket_list_deallocator.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.std::__1::__hash_node_base.56" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.OmniboxPedal::TokenSequence" = type { %"class.std::__1::vector.15" }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"struct.OmniboxPedal::Token"*, %"struct.OmniboxPedal::Token"*, %"class.std::__1::__compressed_pair.17" }
%"struct.OmniboxPedal::Token" = type { i32, i64 }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.OmniboxPedal::Token"* }
%class.AutocompleteProviderClient = type { i32 (...)** }
%class.OmniboxPedal = type { %class.OmniboxAction, i32, %"class.std::__1::vector" }
%class.OmniboxAction = type { i32 (...)**, %"class.base::RefCounted", %"struct.OmniboxAction::LabelStrings", %class.GURL }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"struct.OmniboxAction::LabelStrings" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.GURL = type { %"class.std::__1::basic_string.1", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %class.GURL* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.OmniboxPedal::SynonymGroup"*, %"class.OmniboxPedal::SynonymGroup"*, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.OmniboxPedal::SynonymGroup"* }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243", %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %class.scoped_refptr }
%class.scoped_refptr = type { %class.OmniboxPedal* }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.44"*, i8, [7 x i8] }>
%"class.std::__1::allocator.44" = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.logging::CheckOpResult" = type { i8* }
%"class.absl::optional.174" = type { %"class.absl::optional_internal::optional_data.175" }
%"class.absl::optional_internal::optional_data.175" = type { %"class.absl::optional_internal::optional_data_base.176" }
%"class.absl::optional_internal::optional_data_base.176" = type { %"class.absl::optional_internal::optional_data_dtor_base.177" }
%"class.absl::optional_internal::optional_data_dtor_base.177" = type { i8, %union.anon.178 }
%union.anon.178 = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.179" }
%"union.absl::variant_internal::DestructibleUnionImpl.179" = type { %"union.absl::variant_internal::DestructibleUnionImpl.180" }
%"union.absl::variant_internal::DestructibleUnionImpl.180" = type { %"union.absl::variant_internal::DestructibleUnionImpl.181" }
%"union.absl::variant_internal::DestructibleUnionImpl.181" = type { %"union.absl::variant_internal::DestructibleUnionImpl.182" }
%"union.absl::variant_internal::DestructibleUnionImpl.182" = type { %"class.std::__1::basic_string.1" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string.1", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::CheckedContiguousIterator" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"* }
%"struct.std::__1::pair.102" = type <{ %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::vector.219" = type { %"class.std::__1::__vector_base.220" }
%"class.std::__1::__vector_base.220" = type { %"struct.OmniboxPedal::SynonymGroupSpec"*, %"struct.OmniboxPedal::SynonymGroupSpec"*, %"class.std::__1::__compressed_pair.221" }
%"struct.OmniboxPedal::SynonymGroupSpec" = type { i8, i8, i32 }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"struct.OmniboxPedal::SynonymGroupSpec"* }
%"class.std::__1::allocator.8" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.5 }
%struct.anon.5 = type { i8 }
%"class.ui::ResourceBundle" = type { %"class.ui::ResourceBundle::Delegate"*, %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.114", %"class.std::__1::vector.120", i32, %"class.std::__1::map", %"class.gfx::Image", %"class.std::__1::map.136", %"class.base::FilePath", %"class.std::__1::unordered_map.147", i8, i8, %"class.std::__1::basic_string.1" }
%"class.ui::ResourceBundle::Delegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.base::Lock"* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.ui::ResourceHandle"* }
%"class.ui::ResourceHandle" = type opaque
%"class.std::__1::vector.120" = type { %"class.std::__1::__vector_base.121" }
%"class.std::__1::__vector_base.121" = type { %"class.std::__1::unique_ptr.114"*, %"class.std::__1::unique_ptr.114"*, %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.std::__1::unique_ptr.114"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.127", %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.gfx::Image" = type { %class.scoped_refptr.135 }
%class.scoped_refptr.135 = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%"class.std::__1::map.136" = type { %"class.std::__1::__tree.137" }
%"class.std::__1::__tree.137" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.138", %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string.1" }
%"class.std::__1::unordered_map.147" = type { %"class.std::__1::__hash_table.148" }
%"class.std::__1::__hash_table.148" = type <{ %"class.std::__1::unique_ptr.149", %"class.std::__1::__compressed_pair.159", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", [4 x i8] }>
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151", %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"struct.std::__1::__hash_node_base.152"** }
%"struct.std::__1::__hash_node_base.152" = type { %"struct.std::__1::__hash_node_base.152"* }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.std::__1::__bucket_list_deallocator.154" }
%"class.std::__1::__bucket_list_deallocator.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"struct.std::__1::__hash_node_base.152" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::vector.201" = type { %"class.std::__1::__vector_base.202" }
%"class.std::__1::__vector_base.202" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.base::Value"* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::vector.79" = type { %"class.std::__1::__vector_base.80" }
%"class.std::__1::__vector_base.80" = type { %"class.metrics::OmniboxEventProto_ProviderInfo"*, %"class.metrics::OmniboxEventProto_ProviderInfo"*, %"class.std::__1::__compressed_pair.82" }
%"class.metrics::OmniboxEventProto_ProviderInfo" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedField", %"class.google::protobuf::RepeatedField", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.81" }
%"struct.std::__1::__atomic_base.81" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.google::protobuf::RepeatedField" = type { i32, i32, i8* }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.metrics::OmniboxEventProto_ProviderInfo"* }
%"class.std::__1::vector.87" = type { %"class.std::__1::__vector_base.88" }
%"class.std::__1::__vector_base.88" = type { i32*, i32*, %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { i32* }
%"class.google::protobuf::Arena" = type { %"class.google::protobuf::internal::ArenaImpl", void (%"class.std::type_info"*, i64, i8*)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, i8* }
%"class.google::protobuf::internal::ArenaImpl" = type { %"struct.std::__1::atomic.227", %"struct.std::__1::atomic.227", %"struct.std::__1::atomic.231", %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, %"struct.google::protobuf::internal::ArenaImpl::Options" }
%"struct.std::__1::atomic.227" = type { %"struct.std::__1::__atomic_base.228" }
%"struct.std::__1::__atomic_base.228" = type { %"struct.std::__1::__cxx_atomic_impl.229" }
%"struct.std::__1::__cxx_atomic_impl.229" = type { %"struct.std::__1::__cxx_atomic_base_impl.230" }
%"struct.std::__1::__cxx_atomic_base_impl.230" = type { %"class.google::protobuf::internal::ArenaImpl::SerialArena"* }
%"class.google::protobuf::internal::ArenaImpl::SerialArena" = type { %"class.google::protobuf::internal::ArenaImpl"*, i8*, %"class.google::protobuf::internal::ArenaImpl::Block"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, %"class.google::protobuf::internal::ArenaImpl::SerialArena"*, i8*, i8*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"* }
%"struct.google::protobuf::internal::ArenaImpl::CleanupChunk" = type { i64, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, [1 x %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"] }
%"struct.google::protobuf::internal::ArenaImpl::CleanupNode" = type { i8*, void (i8*)* }
%"struct.std::__1::atomic.231" = type { %"struct.std::__1::__atomic_base.232" }
%"struct.std::__1::__atomic_base.232" = type { %"struct.std::__1::__atomic_base.233" }
%"struct.std::__1::__atomic_base.233" = type { %"struct.std::__1::__cxx_atomic_impl.234" }
%"struct.std::__1::__cxx_atomic_impl.234" = type { %"struct.std::__1::__cxx_atomic_base_impl.235" }
%"struct.std::__1::__cxx_atomic_base_impl.235" = type { i64 }
%"class.google::protobuf::internal::ArenaImpl::Block" = type { %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, i64 }
%"struct.google::protobuf::internal::ArenaImpl::Options" = type { i64, i64, i8*, i64, i8* (i64)*, void (i8*, i64)* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.google::protobuf::internal::InternalMetadata::ContainerBase" = type { %"class.google::protobuf::Arena"* }
%"struct.std::__1::__hash_node.238" = type { %"struct.std::__1::__hash_node_base.56", i64, %"struct.std::__1::__hash_value_type.239" }
%"struct.std::__1::__hash_value_type.239" = type { %"struct.std::__1::pair.102" }
%"class.base::i18n::UTF16CharIterator" = type { %"class.base::BasicStringPiece", i64, i64, i32, i32 }
%"class.base::BasicStringPiece" = type { i16*, i64 }
%"class.base::StringTokenizerT" = type <{ %"class.std::__1::__wrap_iter.103", %"class.std::__1::__wrap_iter.103", %"class.std::__1::__wrap_iter.103", %"class.std::__1::__wrap_iter.103", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__wrap_iter.103" = type { i16* }
%"class.std::__1::allocator" = type { i8 }
%class.AutocompleteInput = type { %"class.std::__1::basic_string", i64, %class.GURL, %"class.std::__1::basic_string", i32, i32, %"struct.url::Parsed", %"class.std::__1::basic_string", %class.GURL, %"class.std::__1::basic_string.1", i8, i8, i8, i32, i8, i32, %"class.std::__1::vector.94", %"class.absl::optional", i8, i8, i32 }
%"class.std::__1::vector.94" = type { %"class.std::__1::__vector_base.95" }
%"class.std::__1::__vector_base.95" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::basic_string"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.101 }
%union.anon.101 = type { %"class.std::__1::basic_string.1" }
%"struct.std::__1::__split_buffer" = type { %"class.metrics::OmniboxEventProto_ProviderInfo"*, %"class.metrics::OmniboxEventProto_ProviderInfo"*, %"class.metrics::OmniboxEventProto_ProviderInfo"*, %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.83", %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.std::__1::allocator.85"* }
%"class.std::__1::allocator.85" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node.238"* }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.std::__1::__hash_node_destructor.255" }
%"class.std::__1::__hash_node_destructor.255" = type <{ %"class.std::__1::allocator.66"*, i8, [7 x i8] }>
%"class.std::__1::allocator.66" = type { i8 }

$_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_ = comdat any

$_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeI14OmniboxPedalId13scoped_refptrI12OmniboxPedalEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE = comdat any

$_ZNSt3__16vectorIN7metrics30OmniboxEventProto_ProviderInfoENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIN7metrics30OmniboxEventProto_ProviderInfoENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_ = comdat any

$_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS8_PvEEEERKT_ = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZN4base16StringTokenizerTINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS1_11__wrap_iterIPKDsEEE11FullGetNextEv = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEERKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JNS_4pairIKS7_iEEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE21__construct_node_hashINS_4pairIKS7_iEEJEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINS5_ISQ_EEEEEEmOT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs = comdat any

@.str = private unnamed_addr constant [3 x i8] c"en\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"data_version\00", align 1
@.str.2 = private unnamed_addr constant [52 x i8] c"data_version == OMNIBOX_PEDAL_CONCEPTS_DATA_VERSION\00", align 1
@.str.3 = private unnamed_addr constant [67 x i8] c"../../components/omnibox/browser/actions/omnibox_pedal_provider.cc\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"max_tokens\00", align 1
@.str.5 = private unnamed_addr constant [24 x i8] c"tokenize_each_character\00", align 1
@.str.6 = private unnamed_addr constant [1 x i16] zeroinitializer, align 2
@.str.7 = private unnamed_addr constant [3 x i16] [i16 32, i16 45, i16 0], align 2
@.str.8 = private unnamed_addr constant [11 x i8] c"dictionary\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"ignore_group\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"pedals\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.12 = private unnamed_addr constant [19 x i8] c"omnibox_ui_strings\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"url\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"groups\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"required\00", align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"single\00", align 1
@.str.17 = private unnamed_addr constant [9 x i8] c"synonyms\00", align 1
@.str.22 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.23 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.24 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.25 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.26 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@.str.27 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1

@_ZN20OmniboxPedalProviderC1ER26AutocompleteProviderClientb = hidden unnamed_addr alias void (%class.OmniboxPedalProvider*, %class.AutocompleteProviderClient*, i1), void (%class.OmniboxPedalProvider*, %class.AutocompleteProviderClient*, i1)* @_ZN20OmniboxPedalProviderC2ER26AutocompleteProviderClientb
@_ZN20OmniboxPedalProviderD1Ev = hidden unnamed_addr alias void (%class.OmniboxPedalProvider*), void (%class.OmniboxPedalProvider*)* @_ZN20OmniboxPedalProviderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_Z19EstimateMemoryUsage13scoped_refptrI12OmniboxPedalE(%class.OmniboxPedal*) local_unnamed_addr #0 {
  %2 = bitcast %class.OmniboxPedal* %0 to i64 (%class.OmniboxPedal*)***
  %3 = load i64 (%class.OmniboxPedal*)**, i64 (%class.OmniboxPedal*)*** %2, align 8
  %4 = getelementptr inbounds i64 (%class.OmniboxPedal*)*, i64 (%class.OmniboxPedal*)** %3, i64 5
  %5 = load i64 (%class.OmniboxPedal*)*, i64 (%class.OmniboxPedal*)** %4, align 8
  %6 = tail call i64 %5(%class.OmniboxPedal* %0) #13
  %7 = icmp eq %class.OmniboxPedal* %0, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.OmniboxPedal, %class.OmniboxPedal* %0, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %9, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %10) #13
  %11 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %9, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %9, i64 -2
  %16 = bitcast %"class.base::RefCounted"* %15 to %class.OmniboxAction*
  %17 = bitcast %"class.base::RefCounted"* %15 to void (%class.OmniboxAction*)***
  %18 = load void (%class.OmniboxAction*)**, void (%class.OmniboxAction*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.OmniboxAction*)*, void (%class.OmniboxAction*)** %18, i64 8
  %20 = load void (%class.OmniboxAction*)*, void (%class.OmniboxAction*)** %19, align 8
  tail call void %20(%class.OmniboxAction* nonnull %16) #13
  br label %21

21:                                               ; preds = %1, %8, %14
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20OmniboxPedalProviderC2ER26AutocompleteProviderClientb(%class.OmniboxPedalProvider*, %class.AutocompleteProviderClient* dereferenceable(8), i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.241", align 8
  %5 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 0
  store %class.AutocompleteProviderClient* %1, %class.AutocompleteProviderClient** %5, align 8
  %6 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 1
  tail call void @_Z23GetPedalImplementationsb(%"class.std::__1::unordered_map"* sret %6, i1 zeroext %2) #13
  %7 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 2
  tail call void @_ZN12OmniboxPedal12SynonymGroupC1Ebbm(%"class.OmniboxPedal::SynonymGroup"* %7, i1 zeroext false, i1 zeroext false, i64 0) #13
  %8 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 3
  %9 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 3, i32 0, i32 3
  %10 = bitcast %"class.std::__1::__compressed_pair.73"* %9 to i32*
  %11 = bitcast %"class.std::__1::unordered_map.51"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %10, align 4
  %12 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 4
  %13 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #13
  %14 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 5
  tail call void @_ZN12OmniboxPedal13TokenSequenceC1Em(%"class.OmniboxPedal::TokenSequence"* %14, i64 64) #13
  %15 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 6
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 7
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 8
  store i8 0, i8* %17, align 1
  tail call void @_ZN20OmniboxPedalProvider17LoadPedalConceptsEv(%class.OmniboxPedalProvider* %0)
  %18 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = bitcast %"struct.std::__1::__hash_node_base"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %111, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %6, i64 0, i32 0
  %24 = bitcast %"class.std::__1::unique_ptr.241"* %4 to i8*
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.241"* %4, i64 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.241"* %4, i64 0, i32 0, i32 1, i32 0, i32 1
  br label %27

27:                                               ; preds = %108, %22
  %28 = phi i64 [ %20, %22 ], [ %109, %108 ]
  %29 = inttoptr i64 %28 to %"struct.std::__1::__hash_node_base"*
  %30 = inttoptr i64 %28 to %"struct.std::__1::__hash_node"*
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %30, i64 0, i32 2, i32 0, i32 1, i32 0
  %32 = load %class.OmniboxPedal*, %class.OmniboxPedal** %31, align 8
  %33 = getelementptr inbounds %class.OmniboxPedal, %class.OmniboxPedal* %32, i64 0, i32 0
  %34 = call dereferenceable(96) %"struct.OmniboxAction::LabelStrings"* @_ZNK13OmniboxAction15GetLabelStringsEv(%class.OmniboxAction* %33) #13
  %35 = bitcast %"struct.OmniboxAction::LabelStrings"* %34 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %35, i64 0, i32 1, i32 1
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = getelementptr inbounds %"struct.OmniboxAction::LabelStrings", %"struct.OmniboxAction::LabelStrings"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = zext i8 %37 to i64
  %42 = select i1 %38, i64 %40, i64 %41
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %77, label %44

44:                                               ; preds = %27
  %45 = getelementptr inbounds %"struct.OmniboxAction::LabelStrings", %"struct.OmniboxAction::LabelStrings"* %34, i64 0, i32 1
  %46 = bitcast %"class.std::__1::basic_string"* %45 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  %50 = getelementptr inbounds %"struct.OmniboxAction::LabelStrings", %"struct.OmniboxAction::LabelStrings"* %34, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = zext i8 %48 to i64
  %53 = select i1 %49, i64 %51, i64 %52
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %77, label %55

55:                                               ; preds = %44
  %56 = getelementptr inbounds %"struct.OmniboxAction::LabelStrings", %"struct.OmniboxAction::LabelStrings"* %34, i64 0, i32 3
  %57 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %57, i64 0, i32 1, i32 1
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  %61 = getelementptr inbounds %"struct.OmniboxAction::LabelStrings", %"struct.OmniboxAction::LabelStrings"* %34, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = zext i8 %59 to i64
  %64 = select i1 %60, i64 %62, i64 %63
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %77, label %66

66:                                               ; preds = %55
  %67 = getelementptr inbounds %"struct.OmniboxAction::LabelStrings", %"struct.OmniboxAction::LabelStrings"* %34, i64 0, i32 2
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %68, i64 0, i32 1, i32 1
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  %72 = getelementptr inbounds %"struct.OmniboxAction::LabelStrings", %"struct.OmniboxAction::LabelStrings"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = zext i8 %70 to i64
  %75 = select i1 %71, i64 %73, i64 %74
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %105

77:                                               ; preds = %66, %55, %44, %27
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #13
  %78 = inttoptr i64 %28 to i64*
  %79 = load i64, i64* %78, align 8
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeI14OmniboxPedalId13scoped_refptrI12OmniboxPedalEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE(%"class.std::__1::unique_ptr.241"* nonnull sret %4, %"class.std::__1::__hash_table"* %23, %"struct.std::__1::__hash_node_base"* nonnull %29) #13
  %80 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %25, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %25, align 8
  %81 = icmp eq %"struct.std::__1::__hash_node"* %80, null
  br i1 %81, label %104, label %82

82:                                               ; preds = %77
  %83 = load i8, i8* %26, align 8, !range !2
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %102, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %80, i64 0, i32 2, i32 0, i32 1, i32 0
  %87 = load %class.OmniboxPedal*, %class.OmniboxPedal** %86, align 8
  %88 = icmp eq %class.OmniboxPedal* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %class.OmniboxPedal, %class.OmniboxPedal* %87, i64 0, i32 0, i32 1
  %91 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %90, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %91) #13
  %92 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %90, i64 0, i32 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %102

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %90, i64 -2
  %97 = bitcast %"class.base::RefCounted"* %96 to %class.OmniboxAction*
  %98 = bitcast %"class.base::RefCounted"* %96 to void (%class.OmniboxAction*)***
  %99 = load void (%class.OmniboxAction*)**, void (%class.OmniboxAction*)*** %98, align 8
  %100 = getelementptr inbounds void (%class.OmniboxAction*)*, void (%class.OmniboxAction*)** %99, i64 8
  %101 = load void (%class.OmniboxAction*)*, void (%class.OmniboxAction*)** %100, align 8
  call void %101(%class.OmniboxAction* nonnull %97) #13
  br label %102

102:                                              ; preds = %95, %89, %85, %82
  %103 = bitcast %"struct.std::__1::__hash_node"* %80 to i8*
  call void @_ZdlPv(i8* %103) #14
  br label %104

104:                                              ; preds = %102, %77
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #13
  br label %108

105:                                              ; preds = %66
  %106 = inttoptr i64 %28 to i64*
  %107 = load i64, i64* %106, align 8
  br label %108

108:                                              ; preds = %105, %104
  %109 = phi i64 [ %79, %104 ], [ %107, %105 ]
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %27

111:                                              ; preds = %108, %3
  ret void
}

declare void @_Z23GetPedalImplementationsb(%"class.std::__1::unordered_map"* sret, i1 zeroext) local_unnamed_addr #1

declare void @_ZN12OmniboxPedal12SynonymGroupC1Ebbm(%"class.OmniboxPedal::SynonymGroup"*, i1 zeroext, i1 zeroext, i64) unnamed_addr #1

declare void @_ZN12OmniboxPedal13TokenSequenceC1Em(%"class.OmniboxPedal::TokenSequence"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20OmniboxPedalProvider17LoadPedalConceptsEv(%class.OmniboxPedalProvider*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.std::__1::basic_string.1", align 8
  %4 = alloca %"class.std::__1::basic_string.1", align 8
  %5 = alloca %"class.std::__1::basic_string.1", align 8
  %6 = alloca %"class.absl::optional.174", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.base::CheckedContiguousIterator", align 8
  %10 = alloca %"class.base::CheckedContiguousIterator", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"struct.std::__1::pair.102", align 8
  %13 = alloca %"class.OmniboxPedal::SynonymGroup", align 8
  %14 = alloca %"class.base::CheckedContiguousIterator", align 8
  %15 = alloca %"class.base::CheckedContiguousIterator", align 8
  %16 = alloca %class.GURL, align 8
  %17 = alloca %"class.std::__1::vector.219", align 8
  %18 = alloca %"class.base::CheckedContiguousIterator", align 8
  %19 = alloca %"class.base::CheckedContiguousIterator", align 8
  %20 = alloca %"class.OmniboxPedal::SynonymGroup", align 8
  %21 = alloca %"class.OmniboxPedal::SynonymGroup", align 8
  %22 = alloca %"class.std::__1::basic_string", align 8
  %23 = bitcast %"class.std::__1::basic_string.1"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #13
  %24 = bitcast %"class.std::__1::basic_string.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #13
  call void @_ZN4base4i18n19GetConfiguredLocaleEv(%"class.std::__1::basic_string.1"* nonnull sret %4) #13
  %25 = bitcast %"class.std::__1::basic_string.1"* %4 to %"class.std::__1::allocator.8"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string.1"* nonnull %3, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %4, i64 0, i64 2, %"class.std::__1::allocator.8"* nonnull dereferenceable(1) %25) #13
  %26 = bitcast %"class.std::__1::basic_string.1"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp eq i64 %33, 2
  br i1 %34, label %35, label %39

35:                                               ; preds = %1
  %36 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string.1"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2) #13
  %37 = icmp eq i32 %36, 0
  %38 = load i8, i8* %27, align 1
  br label %39

39:                                               ; preds = %1, %35
  %40 = phi i8 [ %38, %35 ], [ %28, %1 ]
  %41 = phi i1 [ %37, %35 ], [ false, %1 ]
  %42 = icmp slt i8 %40, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %45) #14
  br label %46

46:                                               ; preds = %39, %43
  %47 = bitcast %"class.std::__1::basic_string.1"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %53) #14
  br label %54

54:                                               ; preds = %46, %51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #13
  %55 = bitcast %"class.std::__1::basic_string.1"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #13
  %56 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = bitcast %"class.std::__1::basic_string.1"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 24, i1 false)
  %59 = call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #13
  call void @_ZNK2ui14ResourceBundle27LoadLocalizedResourceStringEi(%"class.std::__1::basic_string.1"* nonnull sret %5, %"class.ui::ResourceBundle"* %59, i32 21620) #13
  %60 = getelementptr inbounds %"class.absl::optional.174", %"class.absl::optional.174"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 40, i1 false)
  %61 = bitcast %"class.std::__1::basic_string.1"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = load i8*, i8** %56, align 8
  %66 = select i1 %64, i8* %65, i8* %55
  %67 = load i64, i64* %57, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  call void @_ZN4base10JSONReader4ReadENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEim(%"class.absl::optional.174"* nonnull sret %6, i8* %66, i64 %69, i32 0, i64 200) #13
  %70 = load i8, i8* %60, align 8, !range !2
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %73, !prof !3

72:                                               ; preds = %54
  call void @llvm.trap() #13
  unreachable

73:                                               ; preds = %54
  %74 = getelementptr inbounds %"class.absl::optional.174", %"class.absl::optional.174"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %75 = call %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %74, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 12) #13
  %76 = call i32 @_ZNK4base5Value6GetIntEv(%"class.base::Value"* %75) #13
  %77 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #13
  %78 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %78, align 8
  %79 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79)
  %80 = icmp eq i32 %76, 15865521
  br i1 %80, label %81, label %82

81:                                               ; preds = %73
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79)
  store i8* null, i8** %78, align 8
  br label %91

82:                                               ; preds = %73
  %83 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %76) #13
  %84 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 15865521) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2, i64 0, i64 0), i8* %83, i8* %84) #13
  %85 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %86 = load i8*, i8** %85, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79)
  store i8* %86, i8** %78, align 8
  %87 = icmp eq i8* %86, null
  br i1 %87, label %91, label %88

88:                                               ; preds = %82
  %89 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.3, i64 0, i64 0), i32 270, %"class.logging::CheckOpResult"* nonnull %7) #13
  %90 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #13
  br label %91

91:                                               ; preds = %81, %82, %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #13
  %92 = load i8, i8* %60, align 8, !range !2
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %94, label %95, !prof !3

94:                                               ; preds = %91
  call void @llvm.trap() #13
  unreachable

95:                                               ; preds = %91
  %96 = call %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %74, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 10) #13
  %97 = call i32 @_ZNK4base5Value6GetIntEv(%"class.base::Value"* %96) #13
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 6
  store i64 %98, i64* %99, align 8
  %100 = load i8, i8* %60, align 8, !range !2
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %102, label %103, !prof !3

102:                                              ; preds = %95
  call void @llvm.trap() #13
  unreachable

103:                                              ; preds = %95
  %104 = call %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %74, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i64 23) #13
  %105 = call zeroext i1 @_ZNK4base5Value7GetBoolEv(%"class.base::Value"* %104) #13
  %106 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 4
  %107 = select i1 %105, i16* getelementptr inbounds ([1 x i16], [1 x i16]* @.str.6, i64 0, i64 0), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @.str.7, i64 0, i64 0)
  %108 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs(%"class.std::__1::basic_string"* %106, i16* %107) #13
  %109 = load i8, i8* %60, align 8, !range !2
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %112, !prof !3

111:                                              ; preds = %103
  call void @llvm.trap() #13
  unreachable

112:                                              ; preds = %103
  %113 = call %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %74, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i64 10) #13
  %114 = call %"class.std::__1::vector.201"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* %113) #13
  %115 = icmp eq %"class.std::__1::vector.201"* %114, null
  br i1 %115, label %125, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %114, i64 0, i32 0, i32 1
  %118 = bitcast %"class.base::Value"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.std::__1::vector.201"* %114 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = sub i64 %119, %121
  %123 = ashr exact i64 %122, 5
  %124 = uitofp i64 %123 to float
  br label %125

125:                                              ; preds = %112, %116
  %126 = phi float [ %124, %116 ], [ 0.000000e+00, %112 ]
  %127 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 3, i32 0
  %128 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0
  %129 = load float, float* %128, align 4
  %130 = fdiv float %126, %129
  %131 = call float @llvm.ceil.f32(float %130) #13
  %132 = fptoui float %131 to i64
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm(%"class.std::__1::__hash_table.52"* %127, i64 %132) #13
  %133 = bitcast %"class.base::CheckedContiguousIterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %133) #13
  %134 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %9, i64 0, i32 1
  %135 = bitcast %"class.base::CheckedContiguousIterator"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %135, i8 -86, i64 24, i1 false)
  br i1 %115, label %145, label %136

136:                                              ; preds = %125
  %137 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %114, i64 0, i32 0, i32 0
  %138 = load %"class.base::Value"*, %"class.base::Value"** %137, align 8
  %139 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %114, i64 0, i32 0, i32 1
  %140 = bitcast %"class.base::Value"** %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = ptrtoint %"class.base::Value"* %138 to i64
  %143 = sub i64 %141, %142
  %144 = ashr exact i64 %143, 5
  br label %145

145:                                              ; preds = %125, %136
  %146 = phi %"class.base::Value"* [ %138, %136 ], [ null, %125 ]
  %147 = phi i64 [ %144, %136 ], [ 0, %125 ]
  %148 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %146, i64 %147
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %9, %"class.base::Value"* %146, %"class.base::Value"* %146, %"class.base::Value"* %148) #13
  %149 = bitcast %"class.base::CheckedContiguousIterator"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %149) #13
  %150 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %10, i64 0, i32 1
  %151 = bitcast %"class.base::CheckedContiguousIterator"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %151, i8 -86, i64 24, i1 false)
  br i1 %115, label %162, label %152

152:                                              ; preds = %145
  %153 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %114, i64 0, i32 0, i32 0
  %154 = load %"class.base::Value"*, %"class.base::Value"** %153, align 8
  %155 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %114, i64 0, i32 0, i32 1
  %156 = bitcast %"class.base::Value"** %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = ptrtoint %"class.base::Value"* %154 to i64
  %159 = sub i64 %157, %158
  %160 = ashr exact i64 %159, 5
  %161 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %154, i64 %160
  br label %162

162:                                              ; preds = %145, %152
  %163 = phi %"class.base::Value"* [ %154, %152 ], [ null, %145 ]
  %164 = phi %"class.base::Value"* [ %161, %152 ], [ null, %145 ]
  %165 = phi i64 [ %160, %152 ], [ 0, %145 ]
  %166 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %163, i64 %165
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %10, %"class.base::Value"* %163, %"class.base::Value"* %164, %"class.base::Value"* %166) #13
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %9, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %10) #13
  %167 = load %"class.base::Value"*, %"class.base::Value"** %134, align 8
  %168 = load %"class.base::Value"*, %"class.base::Value"** %150, align 8
  %169 = icmp eq %"class.base::Value"* %167, %168
  br i1 %169, label %186, label %170

170:                                              ; preds = %162
  %171 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %174 = bitcast %"struct.std::__1::pair.102"* %12 to i8*
  %175 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %176 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %175, i64 0, i32 1, i32 1
  %177 = bitcast %"struct.std::__1::pair.102"* %12 to i8**
  %178 = getelementptr inbounds %"struct.std::__1::pair.102", %"struct.std::__1::pair.102"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %179 = getelementptr inbounds %"struct.std::__1::pair.102", %"struct.std::__1::pair.102"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %180 = bitcast %"struct.std::__1::pair.102"* %12 to i16*
  %181 = bitcast %"struct.std::__1::pair.102"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %182 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %181, i64 0, i32 1, i32 1
  %183 = getelementptr inbounds %"struct.std::__1::pair.102", %"struct.std::__1::pair.102"* %12, i64 0, i32 1
  %184 = getelementptr inbounds %"struct.std::__1::pair.102", %"struct.std::__1::pair.102"* %12, i64 0, i32 0
  %185 = bitcast %"class.std::__1::basic_string"* %11 to i8**
  br label %260

186:                                              ; preds = %447, %162
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %149) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133) #13
  %187 = load i8, i8* %60, align 8, !range !2
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %189, label %190, !prof !3

189:                                              ; preds = %186
  call void @llvm.trap() #13
  unreachable

190:                                              ; preds = %186
  %191 = call %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %74, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i64 12) #13
  %192 = getelementptr inbounds %"class.OmniboxPedal::SynonymGroup", %"class.OmniboxPedal::SynonymGroup"* %13, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %192) #13
  call void @_ZNK20OmniboxPedalProvider21LoadSynonymGroupValueERKN4base5ValueE(%"class.OmniboxPedal::SynonymGroup"* nonnull sret %13, %class.OmniboxPedalProvider* undef, %"class.base::Value"* dereferenceable(32) %191)
  %193 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 2
  %194 = call dereferenceable(32) %"class.OmniboxPedal::SynonymGroup"* @_ZN12OmniboxPedal12SynonymGroupaSEOS0_(%"class.OmniboxPedal::SynonymGroup"* %193, %"class.OmniboxPedal::SynonymGroup"* nonnull dereferenceable(32) %13) #13
  call void @_ZN12OmniboxPedal12SynonymGroupD1Ev(%"class.OmniboxPedal::SynonymGroup"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %192) #13
  %195 = load i8, i8* %60, align 8, !range !2
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %197, label %198, !prof !3

197:                                              ; preds = %190
  call void @llvm.trap() #13
  unreachable

198:                                              ; preds = %190
  %199 = call %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %74, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i64 6) #13
  %200 = call %"class.std::__1::vector.201"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* %199) #13
  %201 = bitcast %"class.base::CheckedContiguousIterator"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %201) #13
  %202 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %14, i64 0, i32 1
  %203 = icmp eq %"class.std::__1::vector.201"* %200, null
  %204 = bitcast %"class.base::CheckedContiguousIterator"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %204, i8 -86, i64 24, i1 false)
  br i1 %203, label %214, label %205

205:                                              ; preds = %198
  %206 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %200, i64 0, i32 0, i32 0
  %207 = load %"class.base::Value"*, %"class.base::Value"** %206, align 8
  %208 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %200, i64 0, i32 0, i32 1
  %209 = bitcast %"class.base::Value"** %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = ptrtoint %"class.base::Value"* %207 to i64
  %212 = sub i64 %210, %211
  %213 = ashr exact i64 %212, 5
  br label %214

214:                                              ; preds = %198, %205
  %215 = phi %"class.base::Value"* [ %207, %205 ], [ null, %198 ]
  %216 = phi i64 [ %213, %205 ], [ 0, %198 ]
  %217 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %215, i64 %216
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %14, %"class.base::Value"* %215, %"class.base::Value"* %215, %"class.base::Value"* %217) #13
  %218 = bitcast %"class.base::CheckedContiguousIterator"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %218) #13
  %219 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %15, i64 0, i32 1
  %220 = bitcast %"class.base::CheckedContiguousIterator"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %220, i8 -86, i64 24, i1 false)
  br i1 %203, label %231, label %221

221:                                              ; preds = %214
  %222 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %200, i64 0, i32 0, i32 0
  %223 = load %"class.base::Value"*, %"class.base::Value"** %222, align 8
  %224 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %200, i64 0, i32 0, i32 1
  %225 = bitcast %"class.base::Value"** %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = ptrtoint %"class.base::Value"* %223 to i64
  %228 = sub i64 %226, %227
  %229 = ashr exact i64 %228, 5
  %230 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %223, i64 %229
  br label %231

231:                                              ; preds = %214, %221
  %232 = phi %"class.base::Value"* [ %223, %221 ], [ null, %214 ]
  %233 = phi %"class.base::Value"* [ %230, %221 ], [ null, %214 ]
  %234 = phi i64 [ %229, %221 ], [ 0, %214 ]
  %235 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %232, i64 %234
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %15, %"class.base::Value"* %232, %"class.base::Value"* %233, %"class.base::Value"* %235) #13
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %14, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %15) #13
  %236 = load %"class.base::Value"*, %"class.base::Value"** %202, align 8
  %237 = load %"class.base::Value"*, %"class.base::Value"** %219, align 8
  %238 = icmp eq %"class.base::Value"* %236, %237
  br i1 %238, label %452, label %239

239:                                              ; preds = %231
  %240 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %241 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = bitcast %class.GURL* %16 to i8*
  %243 = bitcast %"class.std::__1::vector.219"* %17 to i8*
  %244 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %17, i64 0, i32 0, i32 0
  %245 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %17, i64 0, i32 0, i32 1
  %246 = getelementptr inbounds %"class.OmniboxPedal::SynonymGroup", %"class.OmniboxPedal::SynonymGroup"* %21, i64 0, i32 0
  %247 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %248 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %247, i64 0, i32 1, i32 1
  %249 = bitcast %"class.std::__1::basic_string"* %22 to i8**
  %250 = bitcast %"class.base::CheckedContiguousIterator"* %18 to i8*
  %251 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %18, i64 0, i32 1
  %252 = bitcast %"class.base::CheckedContiguousIterator"* %19 to i8*
  %253 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %19, i64 0, i32 1
  %254 = getelementptr inbounds %"class.OmniboxPedal::SynonymGroup", %"class.OmniboxPedal::SynonymGroup"* %20, i64 0, i32 0
  %255 = bitcast %"struct.OmniboxPedal::SynonymGroupSpec"** %245 to i64*
  %256 = bitcast %"class.std::__1::vector.219"* %17 to i8*
  %257 = bitcast %"class.base::CheckedContiguousIterator"* %18 to i8*
  %258 = bitcast %"class.base::CheckedContiguousIterator"* %19 to i8*
  %259 = bitcast %"class.base::CheckedContiguousIterator"* %19 to i8*
  br label %462

260:                                              ; preds = %170, %447
  %261 = phi i32 [ 0, %170 ], [ %442, %447 ]
  %262 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %9)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %171) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %171, i8 0, i64 24, i1 false) #13
  %263 = call zeroext i1 @_ZNK4base5Value11GetAsStringEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.base::Value"* %262, %"class.std::__1::basic_string"* nonnull %11) #13
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %174) #13
  %264 = load i8, i8* %176, align 1
  %265 = icmp slt i8 %264, 0
  br i1 %265, label %267, label %266

266:                                              ; preds = %260
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %174, i8* nonnull align 8 %171, i64 24, i1 false) #13
  br label %435

267:                                              ; preds = %260
  %268 = load i16*, i16** %172, align 8
  %269 = load i64, i64* %173, align 8
  %270 = icmp ult i64 %269, 11
  br i1 %270, label %271, label %273

271:                                              ; preds = %267
  %272 = trunc i64 %269 to i8
  store i8 %272, i8* %182, align 1
  br label %287

273:                                              ; preds = %267
  %274 = icmp ugt i64 %269, 9223372036854775791
  br i1 %274, label %275, label %277

275:                                              ; preds = %273
  %276 = bitcast %"struct.std::__1::pair.102"* %12 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %276) #15
  unreachable

277:                                              ; preds = %273
  %278 = add nuw nsw i64 %269, 8
  %279 = and i64 %278, -8
  %280 = icmp slt i64 %279, 0
  br i1 %280, label %281, label %282

281:                                              ; preds = %277
  call void @abort() #15
  unreachable

282:                                              ; preds = %277
  %283 = shl i64 %279, 1
  %284 = call i8* @_Znwm(i64 %283) #14
  %285 = bitcast i8* %284 to i16*
  store i8* %284, i8** %177, align 8
  %286 = or i64 %279, -9223372036854775808
  store i64 %286, i64* %178, align 8
  store i64 %269, i64* %179, align 8
  br label %287

287:                                              ; preds = %282, %271
  %288 = phi i16* [ %180, %271 ], [ %285, %282 ]
  %289 = add nuw nsw i64 %269, 1
  %290 = add i64 %269, 1
  %291 = icmp ult i64 %290, 16
  br i1 %291, label %382, label %292

292:                                              ; preds = %287
  %293 = getelementptr i16, i16* %288, i64 1
  %294 = getelementptr i16, i16* %293, i64 %269
  %295 = getelementptr i16, i16* %268, i64 1
  %296 = getelementptr i16, i16* %295, i64 %269
  %297 = icmp ult i16* %288, %296
  %298 = icmp ult i16* %268, %294
  %299 = and i1 %297, %298
  br i1 %299, label %382, label %300

300:                                              ; preds = %292
  %301 = and i64 %290, -16
  %302 = sub i64 %289, %301
  %303 = getelementptr i16, i16* %268, i64 %301
  %304 = getelementptr i16, i16* %288, i64 %301
  %305 = add i64 %301, -16
  %306 = lshr exact i64 %305, 4
  %307 = add nuw nsw i64 %306, 1
  %308 = and i64 %307, 3
  %309 = icmp ult i64 %305, 48
  br i1 %309, label %361, label %310

310:                                              ; preds = %300
  %311 = sub nsw i64 %307, %308
  br label %312

312:                                              ; preds = %312, %310
  %313 = phi i64 [ 0, %310 ], [ %358, %312 ]
  %314 = phi i64 [ %311, %310 ], [ %359, %312 ]
  %315 = getelementptr i16, i16* %268, i64 %313
  %316 = getelementptr i16, i16* %288, i64 %313
  %317 = bitcast i16* %315 to <8 x i16>*
  %318 = load <8 x i16>, <8 x i16>* %317, align 2, !alias.scope !4
  %319 = getelementptr i16, i16* %315, i64 8
  %320 = bitcast i16* %319 to <8 x i16>*
  %321 = load <8 x i16>, <8 x i16>* %320, align 2, !alias.scope !4
  %322 = bitcast i16* %316 to <8 x i16>*
  store <8 x i16> %318, <8 x i16>* %322, align 2, !alias.scope !7, !noalias !4
  %323 = getelementptr i16, i16* %316, i64 8
  %324 = bitcast i16* %323 to <8 x i16>*
  store <8 x i16> %321, <8 x i16>* %324, align 2, !alias.scope !7, !noalias !4
  %325 = or i64 %313, 16
  %326 = getelementptr i16, i16* %268, i64 %325
  %327 = getelementptr i16, i16* %288, i64 %325
  %328 = bitcast i16* %326 to <8 x i16>*
  %329 = load <8 x i16>, <8 x i16>* %328, align 2, !alias.scope !4
  %330 = getelementptr i16, i16* %326, i64 8
  %331 = bitcast i16* %330 to <8 x i16>*
  %332 = load <8 x i16>, <8 x i16>* %331, align 2, !alias.scope !4
  %333 = bitcast i16* %327 to <8 x i16>*
  store <8 x i16> %329, <8 x i16>* %333, align 2, !alias.scope !7, !noalias !4
  %334 = getelementptr i16, i16* %327, i64 8
  %335 = bitcast i16* %334 to <8 x i16>*
  store <8 x i16> %332, <8 x i16>* %335, align 2, !alias.scope !7, !noalias !4
  %336 = or i64 %313, 32
  %337 = getelementptr i16, i16* %268, i64 %336
  %338 = getelementptr i16, i16* %288, i64 %336
  %339 = bitcast i16* %337 to <8 x i16>*
  %340 = load <8 x i16>, <8 x i16>* %339, align 2, !alias.scope !4
  %341 = getelementptr i16, i16* %337, i64 8
  %342 = bitcast i16* %341 to <8 x i16>*
  %343 = load <8 x i16>, <8 x i16>* %342, align 2, !alias.scope !4
  %344 = bitcast i16* %338 to <8 x i16>*
  store <8 x i16> %340, <8 x i16>* %344, align 2, !alias.scope !7, !noalias !4
  %345 = getelementptr i16, i16* %338, i64 8
  %346 = bitcast i16* %345 to <8 x i16>*
  store <8 x i16> %343, <8 x i16>* %346, align 2, !alias.scope !7, !noalias !4
  %347 = or i64 %313, 48
  %348 = getelementptr i16, i16* %268, i64 %347
  %349 = getelementptr i16, i16* %288, i64 %347
  %350 = bitcast i16* %348 to <8 x i16>*
  %351 = load <8 x i16>, <8 x i16>* %350, align 2, !alias.scope !4
  %352 = getelementptr i16, i16* %348, i64 8
  %353 = bitcast i16* %352 to <8 x i16>*
  %354 = load <8 x i16>, <8 x i16>* %353, align 2, !alias.scope !4
  %355 = bitcast i16* %349 to <8 x i16>*
  store <8 x i16> %351, <8 x i16>* %355, align 2, !alias.scope !7, !noalias !4
  %356 = getelementptr i16, i16* %349, i64 8
  %357 = bitcast i16* %356 to <8 x i16>*
  store <8 x i16> %354, <8 x i16>* %357, align 2, !alias.scope !7, !noalias !4
  %358 = add i64 %313, 64
  %359 = add i64 %314, -4
  %360 = icmp eq i64 %359, 0
  br i1 %360, label %361, label %312, !llvm.loop !9

361:                                              ; preds = %312, %300
  %362 = phi i64 [ 0, %300 ], [ %358, %312 ]
  %363 = icmp eq i64 %308, 0
  br i1 %363, label %380, label %364

364:                                              ; preds = %361, %364
  %365 = phi i64 [ %377, %364 ], [ %362, %361 ]
  %366 = phi i64 [ %378, %364 ], [ %308, %361 ]
  %367 = getelementptr i16, i16* %268, i64 %365
  %368 = getelementptr i16, i16* %288, i64 %365
  %369 = bitcast i16* %367 to <8 x i16>*
  %370 = load <8 x i16>, <8 x i16>* %369, align 2, !alias.scope !4
  %371 = getelementptr i16, i16* %367, i64 8
  %372 = bitcast i16* %371 to <8 x i16>*
  %373 = load <8 x i16>, <8 x i16>* %372, align 2, !alias.scope !4
  %374 = bitcast i16* %368 to <8 x i16>*
  store <8 x i16> %370, <8 x i16>* %374, align 2, !alias.scope !7, !noalias !4
  %375 = getelementptr i16, i16* %368, i64 8
  %376 = bitcast i16* %375 to <8 x i16>*
  store <8 x i16> %373, <8 x i16>* %376, align 2, !alias.scope !7, !noalias !4
  %377 = add i64 %365, 16
  %378 = add i64 %366, -1
  %379 = icmp eq i64 %378, 0
  br i1 %379, label %380, label %364, !llvm.loop !11

380:                                              ; preds = %364, %361
  %381 = icmp eq i64 %290, %301
  br i1 %381, label %435, label %382

382:                                              ; preds = %380, %292, %287
  %383 = phi i64 [ %289, %292 ], [ %289, %287 ], [ %302, %380 ]
  %384 = phi i16* [ %268, %292 ], [ %268, %287 ], [ %303, %380 ]
  %385 = phi i16* [ %288, %292 ], [ %288, %287 ], [ %304, %380 ]
  %386 = add i64 %383, -1
  %387 = and i64 %383, 7
  %388 = icmp eq i64 %387, 0
  br i1 %388, label %400, label %389

389:                                              ; preds = %382, %389
  %390 = phi i64 [ %395, %389 ], [ %383, %382 ]
  %391 = phi i16* [ %397, %389 ], [ %384, %382 ]
  %392 = phi i16* [ %396, %389 ], [ %385, %382 ]
  %393 = phi i64 [ %398, %389 ], [ %387, %382 ]
  %394 = load i16, i16* %391, align 2
  store i16 %394, i16* %392, align 2
  %395 = add i64 %390, -1
  %396 = getelementptr inbounds i16, i16* %392, i64 1
  %397 = getelementptr inbounds i16, i16* %391, i64 1
  %398 = add i64 %393, -1
  %399 = icmp eq i64 %398, 0
  br i1 %399, label %400, label %389, !llvm.loop !13

400:                                              ; preds = %389, %382
  %401 = phi i64 [ %383, %382 ], [ %395, %389 ]
  %402 = phi i16* [ %384, %382 ], [ %397, %389 ]
  %403 = phi i16* [ %385, %382 ], [ %396, %389 ]
  %404 = icmp ult i64 %386, 7
  br i1 %404, label %435, label %405

405:                                              ; preds = %400, %405
  %406 = phi i64 [ %431, %405 ], [ %401, %400 ]
  %407 = phi i16* [ %433, %405 ], [ %402, %400 ]
  %408 = phi i16* [ %432, %405 ], [ %403, %400 ]
  %409 = load i16, i16* %407, align 2
  store i16 %409, i16* %408, align 2
  %410 = getelementptr inbounds i16, i16* %408, i64 1
  %411 = getelementptr inbounds i16, i16* %407, i64 1
  %412 = load i16, i16* %411, align 2
  store i16 %412, i16* %410, align 2
  %413 = getelementptr inbounds i16, i16* %408, i64 2
  %414 = getelementptr inbounds i16, i16* %407, i64 2
  %415 = load i16, i16* %414, align 2
  store i16 %415, i16* %413, align 2
  %416 = getelementptr inbounds i16, i16* %408, i64 3
  %417 = getelementptr inbounds i16, i16* %407, i64 3
  %418 = load i16, i16* %417, align 2
  store i16 %418, i16* %416, align 2
  %419 = getelementptr inbounds i16, i16* %408, i64 4
  %420 = getelementptr inbounds i16, i16* %407, i64 4
  %421 = load i16, i16* %420, align 2
  store i16 %421, i16* %419, align 2
  %422 = getelementptr inbounds i16, i16* %408, i64 5
  %423 = getelementptr inbounds i16, i16* %407, i64 5
  %424 = load i16, i16* %423, align 2
  store i16 %424, i16* %422, align 2
  %425 = getelementptr inbounds i16, i16* %408, i64 6
  %426 = getelementptr inbounds i16, i16* %407, i64 6
  %427 = load i16, i16* %426, align 2
  store i16 %427, i16* %425, align 2
  %428 = getelementptr inbounds i16, i16* %408, i64 7
  %429 = getelementptr inbounds i16, i16* %407, i64 7
  %430 = load i16, i16* %429, align 2
  store i16 %430, i16* %428, align 2
  %431 = add i64 %406, -8
  %432 = getelementptr inbounds i16, i16* %408, i64 8
  %433 = getelementptr inbounds i16, i16* %407, i64 8
  %434 = icmp eq i64 %431, 0
  br i1 %434, label %435, label %405, !llvm.loop !14

435:                                              ; preds = %400, %405, %380, %266
  store i32 %261, i32* %183, align 8
  %436 = call { %"struct.std::__1::__hash_node_base.56"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JNS_4pairIKS7_iEEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.52"* %127, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %184, %"struct.std::__1::pair.102"* nonnull dereferenceable(32) %12) #13
  %437 = load i8, i8* %182, align 1
  %438 = icmp slt i8 %437, 0
  br i1 %438, label %439, label %441

439:                                              ; preds = %435
  %440 = load i8*, i8** %177, align 8
  call void @_ZdlPv(i8* %440) #14
  br label %441

441:                                              ; preds = %435, %439
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %174) #13
  %442 = add nuw nsw i32 %261, 1
  %443 = load i8, i8* %176, align 1
  %444 = icmp slt i8 %443, 0
  br i1 %444, label %445, label %447

445:                                              ; preds = %441
  %446 = load i8*, i8** %185, align 8
  call void @_ZdlPv(i8* %446) #14
  br label %447

447:                                              ; preds = %441, %445
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %171) #13
  %448 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %9)
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %9, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %10) #13
  %449 = load %"class.base::Value"*, %"class.base::Value"** %134, align 8
  %450 = load %"class.base::Value"*, %"class.base::Value"** %150, align 8
  %451 = icmp eq %"class.base::Value"* %449, %450
  br i1 %451, label %186, label %260

452:                                              ; preds = %630, %231
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %218) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %201) #13
  %453 = load i8, i8* %60, align 8, !range !2
  %454 = icmp eq i8 %453, 0
  br i1 %454, label %456, label %455

455:                                              ; preds = %452
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %74) #13
  store i8 0, i8* %60, align 8
  br label %456

456:                                              ; preds = %452, %455
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #13
  %457 = load i8, i8* %62, align 1
  %458 = icmp slt i8 %457, 0
  br i1 %458, label %459, label %461

459:                                              ; preds = %456
  %460 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %460) #14
  br label %461

461:                                              ; preds = %456, %459
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #13
  ret void

462:                                              ; preds = %239, %630
  %463 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %14)
  %464 = call i64 @_ZNK4base5Value10FindIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %463, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), i64 2) #13
  %465 = trunc i64 %464 to i8
  %466 = lshr i64 %464, 32
  %467 = trunc i64 %466 to i32
  %468 = icmp eq i8 %465, 0
  br i1 %468, label %469, label %470

469:                                              ; preds = %462
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #15
  unreachable

470:                                              ; preds = %462
  %471 = add i32 %467, -7
  %472 = icmp ult i32 %471, 18
  br i1 %472, label %473, label %478

473:                                              ; preds = %470
  %474 = call zeroext i1 @_ZN17OmniboxFieldTrial21IsPedalsBatch2EnabledEv() #13
  br i1 %474, label %475, label %630

475:                                              ; preds = %473
  br i1 %41, label %478, label %476

476:                                              ; preds = %475
  %477 = call zeroext i1 @_ZN17OmniboxFieldTrial31IsPedalsBatch2NonEnglishEnabledEv() #13
  br i1 %477, label %478, label %630

478:                                              ; preds = %476, %475, %470
  %479 = ashr i64 %464, 32
  %480 = load i64, i64* %240, align 8
  %481 = icmp eq i64 %480, 0
  br i1 %481, label %630, label %482

482:                                              ; preds = %478
  %483 = call i64 @llvm.ctpop.i64(i64 %480) #13, !range !15
  %484 = icmp ugt i64 %483, 1
  br i1 %484, label %488, label %485

485:                                              ; preds = %482
  %486 = add i64 %480, -1
  %487 = and i64 %486, %479
  br label %492

488:                                              ; preds = %482
  %489 = icmp ugt i64 %480, %479
  br i1 %489, label %492, label %490

490:                                              ; preds = %488
  %491 = urem i64 %479, %480
  br label %492

492:                                              ; preds = %490, %488, %485
  %493 = phi i64 [ %487, %485 ], [ %491, %490 ], [ %479, %488 ]
  %494 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %241, align 8
  %495 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %494, i64 %493
  %496 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %495, align 8
  %497 = icmp eq %"struct.std::__1::__hash_node_base"* %496, null
  br i1 %497, label %630, label %498

498:                                              ; preds = %492
  %499 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %496, i64 0, i32 0
  %500 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %499, align 8
  %501 = icmp eq %"struct.std::__1::__hash_node_base"* %500, null
  br i1 %501, label %630, label %502

502:                                              ; preds = %498
  %503 = add i64 %480, -1
  br label %504

504:                                              ; preds = %525, %502
  %505 = phi %"struct.std::__1::__hash_node_base"* [ %500, %502 ], [ %527, %525 ]
  %506 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %505, i64 1
  %507 = bitcast %"struct.std::__1::__hash_node_base"* %506 to i64*
  %508 = load i64, i64* %507, align 8
  %509 = icmp eq i64 %508, %479
  br i1 %509, label %520, label %510

510:                                              ; preds = %504
  br i1 %484, label %513, label %511

511:                                              ; preds = %510
  %512 = and i64 %508, %503
  br label %517

513:                                              ; preds = %510
  %514 = icmp ult i64 %508, %480
  br i1 %514, label %517, label %515

515:                                              ; preds = %513
  %516 = urem i64 %508, %480
  br label %517

517:                                              ; preds = %515, %513, %511
  %518 = phi i64 [ %512, %511 ], [ %516, %515 ], [ %508, %513 ]
  %519 = icmp eq i64 %518, %493
  br i1 %519, label %525, label %630

520:                                              ; preds = %504
  %521 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %505, i64 2
  %522 = bitcast %"struct.std::__1::__hash_node_base"* %521 to i32*
  %523 = load i32, i32* %522, align 4
  %524 = icmp eq i32 %523, %467
  br i1 %524, label %529, label %525

525:                                              ; preds = %520, %517
  %526 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %505, i64 0, i32 0
  %527 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %526, align 8
  %528 = icmp eq %"struct.std::__1::__hash_node_base"* %527, null
  br i1 %528, label %630, label %504

529:                                              ; preds = %520
  %530 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %505, i64 3
  %531 = bitcast %"struct.std::__1::__hash_node_base"* %530 to %class.OmniboxPedal**
  %532 = load %class.OmniboxPedal*, %class.OmniboxPedal** %531, align 8
  %533 = call %"class.base::Value"* @_ZNK4base5Value11FindDictKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %463, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i64 18) #13
  %534 = icmp eq %"class.base::Value"* %533, null
  br i1 %534, label %536, label %535

535:                                              ; preds = %529
  call void @_ZN12OmniboxPedal15SetLabelStringsERKN4base5ValueE(%class.OmniboxPedal* %532, %"class.base::Value"* nonnull dereferenceable(32) %533) #13
  br label %536

536:                                              ; preds = %529, %535
  %537 = call %"class.std::__1::basic_string.1"* @_ZNK4base5Value13FindStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %463, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i64 3) #13
  %538 = bitcast %"class.std::__1::basic_string.1"* %537 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %539 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %538, i64 0, i32 1, i32 0
  %540 = load i8, i8* %539, align 1
  %541 = icmp slt i8 %540, 0
  br i1 %541, label %542, label %545

542:                                              ; preds = %536
  %543 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %537, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %544 = load i64, i64* %543, align 8
  br label %547

545:                                              ; preds = %536
  %546 = zext i8 %540 to i64
  br label %547

547:                                              ; preds = %542, %545
  %548 = phi i64 [ %544, %542 ], [ %546, %545 ]
  %549 = icmp eq i64 %548, 0
  br i1 %549, label %559, label %550

550:                                              ; preds = %547
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %242) #13
  %551 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %537, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %552 = load i8*, i8** %551, align 8
  %553 = bitcast %"class.std::__1::basic_string.1"* %537 to i8*
  %554 = select i1 %541, i8* %552, i8* %553
  %555 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %537, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %556 = load i64, i64* %555, align 8
  %557 = zext i8 %540 to i64
  %558 = select i1 %541, i64 %556, i64 %557
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %16, i8* %554, i64 %558) #13
  call void @_ZN12OmniboxPedal16SetNavigationUrlERK4GURL(%class.OmniboxPedal* %532, %class.GURL* nonnull dereferenceable(120) %16) #13
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %242) #13
  br label %559

559:                                              ; preds = %550, %547
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %243) #13
  %560 = bitcast %class.OmniboxPedal* %532 to void (%"class.std::__1::vector.219"*, %class.OmniboxPedal*)***
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %256, i8 -86, i64 24, i1 false)
  %561 = load void (%"class.std::__1::vector.219"*, %class.OmniboxPedal*)**, void (%"class.std::__1::vector.219"*, %class.OmniboxPedal*)*** %560, align 8
  %562 = getelementptr inbounds void (%"class.std::__1::vector.219"*, %class.OmniboxPedal*)*, void (%"class.std::__1::vector.219"*, %class.OmniboxPedal*)** %561, i64 9
  %563 = load void (%"class.std::__1::vector.219"*, %class.OmniboxPedal*)*, void (%"class.std::__1::vector.219"*, %class.OmniboxPedal*)** %562, align 8
  call void %563(%"class.std::__1::vector.219"* nonnull sret %17, %class.OmniboxPedal* %532) #13
  %564 = load %"struct.OmniboxPedal::SynonymGroupSpec"*, %"struct.OmniboxPedal::SynonymGroupSpec"** %244, align 8
  %565 = load %"struct.OmniboxPedal::SynonymGroupSpec"*, %"struct.OmniboxPedal::SynonymGroupSpec"** %245, align 8
  %566 = icmp eq %"struct.OmniboxPedal::SynonymGroupSpec"* %564, %565
  br i1 %566, label %567, label %603

567:                                              ; preds = %559
  %568 = call %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %463, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0), i64 6) #13
  %569 = call %"class.std::__1::vector.201"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* %568) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %250) #13
  %570 = icmp eq %"class.std::__1::vector.201"* %569, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %257, i8 -86, i64 24, i1 false)
  br i1 %570, label %587, label %571

571:                                              ; preds = %567
  %572 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %569, i64 0, i32 0, i32 0
  %573 = load %"class.base::Value"*, %"class.base::Value"** %572, align 8
  %574 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %569, i64 0, i32 0, i32 1
  %575 = bitcast %"class.base::Value"** %574 to i64*
  %576 = load i64, i64* %575, align 8
  %577 = ptrtoint %"class.base::Value"* %573 to i64
  %578 = sub i64 %576, %577
  %579 = ashr exact i64 %578, 5
  %580 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %573, i64 %579
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %18, %"class.base::Value"* %573, %"class.base::Value"* %573, %"class.base::Value"* %580) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %252) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %258, i8 -86, i64 24, i1 false)
  %581 = load %"class.base::Value"*, %"class.base::Value"** %572, align 8
  %582 = load i64, i64* %575, align 8
  %583 = ptrtoint %"class.base::Value"* %581 to i64
  %584 = sub i64 %582, %583
  %585 = ashr exact i64 %584, 5
  %586 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %581, i64 %585
  br label %588

587:                                              ; preds = %567
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %18, %"class.base::Value"* null, %"class.base::Value"* null, %"class.base::Value"* null) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %252) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %259, i8 -86, i64 24, i1 false)
  br label %588

588:                                              ; preds = %587, %571
  %589 = phi %"class.base::Value"* [ %581, %571 ], [ null, %587 ]
  %590 = phi %"class.base::Value"* [ %586, %571 ], [ null, %587 ]
  %591 = phi i64 [ %585, %571 ], [ 0, %587 ]
  %592 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %589, i64 %591
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %19, %"class.base::Value"* %589, %"class.base::Value"* %590, %"class.base::Value"* %592) #13
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %18, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %19) #13
  %593 = load %"class.base::Value"*, %"class.base::Value"** %251, align 8
  %594 = load %"class.base::Value"*, %"class.base::Value"** %253, align 8
  %595 = icmp eq %"class.base::Value"* %593, %594
  br i1 %595, label %596, label %597

596:                                              ; preds = %597, %588
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %252) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %250) #13
  br label %623

597:                                              ; preds = %588, %597
  %598 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %18)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %254) #13
  call void @_ZNK20OmniboxPedalProvider21LoadSynonymGroupValueERKN4base5ValueE(%"class.OmniboxPedal::SynonymGroup"* nonnull sret %20, %class.OmniboxPedalProvider* undef, %"class.base::Value"* dereferenceable(32) %598)
  call void @_ZN12OmniboxPedal15AddSynonymGroupEONS_12SynonymGroupE(%class.OmniboxPedal* %532, %"class.OmniboxPedal::SynonymGroup"* nonnull dereferenceable(32) %20) #13
  call void @_ZN12OmniboxPedal12SynonymGroupD1Ev(%"class.OmniboxPedal::SynonymGroup"* nonnull %20) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %254) #13
  %599 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %18)
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %18, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %19) #13
  %600 = load %"class.base::Value"*, %"class.base::Value"** %251, align 8
  %601 = load %"class.base::Value"*, %"class.base::Value"** %253, align 8
  %602 = icmp eq %"class.base::Value"* %600, %601
  br i1 %602, label %596, label %597

603:                                              ; preds = %559, %620
  %604 = phi %"struct.OmniboxPedal::SynonymGroupSpec"* [ %621, %620 ], [ %564, %559 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %246) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %246, i8 -86, i64 32, i1 false)
  %605 = getelementptr inbounds %"struct.OmniboxPedal::SynonymGroupSpec", %"struct.OmniboxPedal::SynonymGroupSpec"* %604, i64 0, i32 0
  %606 = load i8, i8* %605, align 4, !range !2
  %607 = icmp ne i8 %606, 0
  %608 = getelementptr inbounds %"struct.OmniboxPedal::SynonymGroupSpec", %"struct.OmniboxPedal::SynonymGroupSpec"* %604, i64 0, i32 1
  %609 = load i8, i8* %608, align 1, !range !2
  %610 = icmp ne i8 %609, 0
  %611 = getelementptr inbounds %"struct.OmniboxPedal::SynonymGroupSpec", %"struct.OmniboxPedal::SynonymGroupSpec"* %604, i64 0, i32 2
  %612 = load i32, i32* %611, align 4
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string"* nonnull sret %22, i32 %612) #13
  call void @_ZN20OmniboxPedalProvider22LoadSynonymGroupStringEbbNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.OmniboxPedal::SynonymGroup"* nonnull sret %21, %class.OmniboxPedalProvider* %0, i1 zeroext %607, i1 zeroext %610, %"class.std::__1::basic_string"* nonnull %22)
  %613 = load i8, i8* %248, align 1
  %614 = icmp slt i8 %613, 0
  br i1 %614, label %615, label %617

615:                                              ; preds = %603
  %616 = load i8*, i8** %249, align 8
  call void @_ZdlPv(i8* %616) #14
  br label %617

617:                                              ; preds = %603, %615
  call void @_ZN12OmniboxPedal12SynonymGroup16EraseIgnoreGroupERKS0_(%"class.OmniboxPedal::SynonymGroup"* nonnull %21, %"class.OmniboxPedal::SynonymGroup"* dereferenceable(32) %193) #13
  %618 = call zeroext i1 @_ZNK12OmniboxPedal12SynonymGroup7IsValidEv(%"class.OmniboxPedal::SynonymGroup"* nonnull %21) #13
  br i1 %618, label %619, label %620

619:                                              ; preds = %617
  call void @_ZN12OmniboxPedal15AddSynonymGroupEONS_12SynonymGroupE(%class.OmniboxPedal* %532, %"class.OmniboxPedal::SynonymGroup"* nonnull dereferenceable(32) %21) #13
  br label %620

620:                                              ; preds = %619, %617
  call void @_ZN12OmniboxPedal12SynonymGroupD1Ev(%"class.OmniboxPedal::SynonymGroup"* nonnull %21) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %246) #13
  %621 = getelementptr inbounds %"struct.OmniboxPedal::SynonymGroupSpec", %"struct.OmniboxPedal::SynonymGroupSpec"* %604, i64 1
  %622 = icmp eq %"struct.OmniboxPedal::SynonymGroupSpec"* %621, %565
  br i1 %622, label %623, label %603

623:                                              ; preds = %620, %596
  %624 = load %"struct.OmniboxPedal::SynonymGroupSpec"*, %"struct.OmniboxPedal::SynonymGroupSpec"** %244, align 8
  %625 = icmp eq %"struct.OmniboxPedal::SynonymGroupSpec"* %624, null
  br i1 %625, label %629, label %626

626:                                              ; preds = %623
  %627 = ptrtoint %"struct.OmniboxPedal::SynonymGroupSpec"* %624 to i64
  store i64 %627, i64* %255, align 8
  %628 = getelementptr inbounds %"struct.OmniboxPedal::SynonymGroupSpec", %"struct.OmniboxPedal::SynonymGroupSpec"* %624, i64 0, i32 0
  call void @_ZdlPv(i8* %628) #14
  br label %629

629:                                              ; preds = %623, %626
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %243) #13
  br label %630

630:                                              ; preds = %525, %517, %498, %478, %492, %629, %473, %476
  %631 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %14)
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %14, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %15) #13
  %632 = load %"class.base::Value"*, %"class.base::Value"** %202, align 8
  %633 = load %"class.base::Value"*, %"class.base::Value"** %219, align 8
  %634 = icmp eq %"class.base::Value"* %632, %633
  br i1 %634, label %452, label %462
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20OmniboxPedalProviderD2Ev(%class.OmniboxPedalProvider*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 5
  tail call void @_ZN12OmniboxPedal13TokenSequenceD1Ev(%"class.OmniboxPedal::TokenSequence"* %2) #13
  %3 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 4
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.56"* %13, null
  br i1 %14, label %30, label %15

15:                                               ; preds = %11, %27
  %16 = phi %"struct.std::__1::__hash_node_base.56"* [ %18, %27 ], [ %13, %11 ]
  %17 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %16, i64 0, i32 0
  %18 = load %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %17, align 8
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %16, i64 2
  %20 = bitcast %"struct.std::__1::__hash_node_base.56"* %19 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %20, i64 0, i32 1, i32 1
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %15
  %25 = bitcast %"struct.std::__1::__hash_node_base.56"* %19 to i8**
  %26 = load i8*, i8** %25, align 8
  tail call void @_ZdlPv(i8* %26) #14
  br label %27

27:                                               ; preds = %24, %15
  %28 = bitcast %"struct.std::__1::__hash_node_base.56"* %16 to i8*
  tail call void @_ZdlPv(i8* %28) #14
  %29 = icmp eq %"struct.std::__1::__hash_node_base.56"* %18, null
  br i1 %29, label %30, label %15

30:                                               ; preds = %27, %11
  %31 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base.56"**, %"struct.std::__1::__hash_node_base.56"*** %31, align 8
  store %"struct.std::__1::__hash_node_base.56"** null, %"struct.std::__1::__hash_node_base.56"*** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base.56"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  %35 = bitcast %"struct.std::__1::__hash_node_base.56"** %32 to i8*
  tail call void @_ZdlPv(i8* %35) #14
  br label %36

36:                                               ; preds = %30, %34
  %37 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 2
  tail call void @_ZN12OmniboxPedal12SynonymGroupD1Ev(%"class.OmniboxPedal::SynonymGroup"* %37) #13
  %38 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base"* %39, null
  br i1 %40, label %65, label %41

41:                                               ; preds = %36, %62
  %42 = phi %"struct.std::__1::__hash_node_base"* [ %44, %62 ], [ %39, %36 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %42, i64 3
  %46 = bitcast %"struct.std::__1::__hash_node_base"* %45 to %class.OmniboxPedal**
  %47 = load %class.OmniboxPedal*, %class.OmniboxPedal** %46, align 8
  %48 = icmp eq %class.OmniboxPedal* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %41
  %50 = getelementptr inbounds %class.OmniboxPedal, %class.OmniboxPedal* %47, i64 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %50, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %51) #13
  %52 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %50, i64 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %62

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %50, i64 -2
  %57 = bitcast %"class.base::RefCounted"* %56 to %class.OmniboxAction*
  %58 = bitcast %"class.base::RefCounted"* %56 to void (%class.OmniboxAction*)***
  %59 = load void (%class.OmniboxAction*)**, void (%class.OmniboxAction*)*** %58, align 8
  %60 = getelementptr inbounds void (%class.OmniboxAction*)*, void (%class.OmniboxAction*)** %59, i64 8
  %61 = load void (%class.OmniboxAction*)*, void (%class.OmniboxAction*)** %60, align 8
  tail call void %61(%class.OmniboxAction* nonnull %57) #13
  br label %62

62:                                               ; preds = %55, %49, %41
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %42 to i8*
  tail call void @_ZdlPv(i8* %63) #14
  %64 = icmp eq %"struct.std::__1::__hash_node_base"* %44, null
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %36
  %66 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %66, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %66, align 8
  %68 = icmp eq %"struct.std::__1::__hash_node_base"** %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %65
  %70 = bitcast %"struct.std::__1::__hash_node_base"** %67 to i8*
  tail call void @_ZdlPv(i8* %70) #14
  br label %71

71:                                               ; preds = %65, %69
  ret void
}

; Function Attrs: nounwind
declare void @_ZN12OmniboxPedal13TokenSequenceD1Ev(%"class.OmniboxPedal::TokenSequence"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN12OmniboxPedal12SynonymGroupD1Ev(%"class.OmniboxPedal::SynonymGroup"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK20OmniboxPedalProvider15AddProviderInfoEPNSt3__16vectorIN7metrics30OmniboxEventProto_ProviderInfoENS0_9allocatorIS3_EEEE(%class.OmniboxPedalProvider* nocapture readonly, %"class.std::__1::vector.79"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.metrics::OmniboxEventProto_ProviderInfo", align 8
  %4 = alloca %"class.std::__1::vector.87", align 8
  %5 = bitcast %"class.metrics::OmniboxEventProto_ProviderInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %5) #13
  call void @_ZN7metrics30OmniboxEventProto_ProviderInfoC2EPN6google8protobuf5ArenaE(%"class.metrics::OmniboxEventProto_ProviderInfo"* nonnull %3, %"class.google::protobuf::Arena"* null) #13
  %6 = getelementptr inbounds %"class.std::__1::vector.79", %"class.std::__1::vector.79"* %1, i64 0, i32 0, i32 1
  %7 = load %"class.metrics::OmniboxEventProto_ProviderInfo"*, %"class.metrics::OmniboxEventProto_ProviderInfo"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.79", %"class.std::__1::vector.79"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = load %"class.metrics::OmniboxEventProto_ProviderInfo"*, %"class.metrics::OmniboxEventProto_ProviderInfo"** %8, align 8
  %10 = icmp ult %"class.metrics::OmniboxEventProto_ProviderInfo"* %7, %9
  br i1 %10, label %11, label %49

11:                                               ; preds = %2
  call void @_ZN7metrics30OmniboxEventProto_ProviderInfoC2EPN6google8protobuf5ArenaE(%"class.metrics::OmniboxEventProto_ProviderInfo"* %7, %"class.google::protobuf::Arena"* null) #13
  %12 = getelementptr inbounds %"class.metrics::OmniboxEventProto_ProviderInfo", %"class.metrics::OmniboxEventProto_ProviderInfo"* %7, i64 0, i32 0, i32 1
  %13 = bitcast %"class.google::protobuf::internal::InternalMetadata"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, 1
  %16 = icmp eq i64 %15, 0
  %17 = and i64 %14, -2
  br i1 %16, label %22, label %18, !prof !16

18:                                               ; preds = %11
  %19 = inttoptr i64 %17 to %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"*
  %20 = getelementptr inbounds %"struct.google::protobuf::internal::InternalMetadata::ContainerBase", %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"* %19, i64 0, i32 0
  %21 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %20, align 8
  br label %24

22:                                               ; preds = %11
  %23 = inttoptr i64 %17 to %"class.google::protobuf::Arena"*
  br label %24

24:                                               ; preds = %22, %18
  %25 = phi %"class.google::protobuf::Arena"* [ %21, %18 ], [ %23, %22 ]
  %26 = getelementptr inbounds %"class.metrics::OmniboxEventProto_ProviderInfo", %"class.metrics::OmniboxEventProto_ProviderInfo"* %3, i64 0, i32 0, i32 1
  %27 = bitcast %"class.google::protobuf::internal::InternalMetadata"* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = and i64 %28, 1
  %30 = icmp eq i64 %29, 0
  %31 = and i64 %28, -2
  br i1 %30, label %36, label %32, !prof !16

32:                                               ; preds = %24
  %33 = inttoptr i64 %31 to %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"*
  %34 = getelementptr inbounds %"struct.google::protobuf::internal::InternalMetadata::ContainerBase", %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"* %33, i64 0, i32 0
  %35 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %34, align 8
  br label %38

36:                                               ; preds = %24
  %37 = inttoptr i64 %31 to %"class.google::protobuf::Arena"*
  br label %38

38:                                               ; preds = %36, %32
  %39 = phi %"class.google::protobuf::Arena"* [ %35, %32 ], [ %37, %36 ]
  %40 = icmp eq %"class.google::protobuf::Arena"* %25, %39
  br i1 %40, label %41, label %44

41:                                               ; preds = %38
  %42 = icmp eq %"class.metrics::OmniboxEventProto_ProviderInfo"* %7, %3
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  call void @_ZN7metrics30OmniboxEventProto_ProviderInfo12InternalSwapEPS0_(%"class.metrics::OmniboxEventProto_ProviderInfo"* %7, %"class.metrics::OmniboxEventProto_ProviderInfo"* nonnull %3) #13
  br label %45

44:                                               ; preds = %38
  call void @_ZN7metrics30OmniboxEventProto_ProviderInfo8CopyFromERKS0_(%"class.metrics::OmniboxEventProto_ProviderInfo"* %7, %"class.metrics::OmniboxEventProto_ProviderInfo"* nonnull dereferenceable(72) %3) #13
  br label %45

45:                                               ; preds = %44, %43, %41
  %46 = getelementptr inbounds %"class.metrics::OmniboxEventProto_ProviderInfo", %"class.metrics::OmniboxEventProto_ProviderInfo"* %7, i64 1
  %47 = ptrtoint %"class.metrics::OmniboxEventProto_ProviderInfo"* %46 to i64
  %48 = bitcast %"class.metrics::OmniboxEventProto_ProviderInfo"** %6 to i64*
  store i64 %47, i64* %48, align 8
  br label %50

49:                                               ; preds = %2
  call void @_ZNSt3__16vectorIN7metrics30OmniboxEventProto_ProviderInfoENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.79"* %1, %"class.metrics::OmniboxEventProto_ProviderInfo"* nonnull dereferenceable(72) %3) #13
  br label %50

50:                                               ; preds = %45, %49
  call void @_ZN7metrics30OmniboxEventProto_ProviderInfoD1Ev(%"class.metrics::OmniboxEventProto_ProviderInfo"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %5) #13
  %51 = load %"class.metrics::OmniboxEventProto_ProviderInfo"*, %"class.metrics::OmniboxEventProto_ProviderInfo"** %6, align 8
  %52 = getelementptr inbounds %"class.metrics::OmniboxEventProto_ProviderInfo", %"class.metrics::OmniboxEventProto_ProviderInfo"* %51, i64 -1, i32 1, i32 0, i64 0
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"class.metrics::OmniboxEventProto_ProviderInfo", %"class.metrics::OmniboxEventProto_ProviderInfo"* %51, i64 -1, i32 5
  store i32 4, i32* %54, align 8
  %55 = or i32 %53, 3
  store i32 %55, i32* %52, align 4
  %56 = getelementptr inbounds %"class.metrics::OmniboxEventProto_ProviderInfo", %"class.metrics::OmniboxEventProto_ProviderInfo"* %51, i64 -1, i32 6
  store i8 1, i8* %56, align 4
  %57 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %64

60:                                               ; preds = %50
  %61 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 8
  %62 = load i8, i8* %61, align 1, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %136, label %64

64:                                               ; preds = %60, %50
  %65 = bitcast %"class.std::__1::vector.87"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #13
  %66 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %4, i64 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 0, i64 24, i1 false) #13
  call void @_ZN17OmniboxFieldTrial32GetActiveSuggestFieldTrialHashesEPNSt3__16vectorIjNS0_9allocatorIjEEEE(%"class.std::__1::vector.87"* nonnull %4) #13
  %68 = load i32*, i32** %66, align 8
  %69 = load i32*, i32** %67, align 8
  %70 = icmp eq i32* %68, %69
  br i1 %70, label %85, label %71

71:                                               ; preds = %64
  %72 = getelementptr inbounds %"class.metrics::OmniboxEventProto_ProviderInfo", %"class.metrics::OmniboxEventProto_ProviderInfo"* %51, i64 -1, i32 3
  %73 = getelementptr inbounds %"class.google::protobuf::RepeatedField", %"class.google::protobuf::RepeatedField"* %72, i64 0, i32 0
  %74 = getelementptr inbounds %"class.metrics::OmniboxEventProto_ProviderInfo", %"class.metrics::OmniboxEventProto_ProviderInfo"* %51, i64 -1, i32 3, i32 1
  %75 = getelementptr inbounds %"class.metrics::OmniboxEventProto_ProviderInfo", %"class.metrics::OmniboxEventProto_ProviderInfo"* %51, i64 -1, i32 3, i32 2
  %76 = bitcast i8** %75 to i32**
  %77 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 8
  %78 = getelementptr inbounds %"class.metrics::OmniboxEventProto_ProviderInfo", %"class.metrics::OmniboxEventProto_ProviderInfo"* %51, i64 -1, i32 4
  %79 = getelementptr inbounds %"class.google::protobuf::RepeatedField", %"class.google::protobuf::RepeatedField"* %78, i64 0, i32 0
  %80 = getelementptr inbounds %"class.metrics::OmniboxEventProto_ProviderInfo", %"class.metrics::OmniboxEventProto_ProviderInfo"* %51, i64 -1, i32 4, i32 1
  %81 = getelementptr inbounds %"class.metrics::OmniboxEventProto_ProviderInfo", %"class.metrics::OmniboxEventProto_ProviderInfo"* %51, i64 -1, i32 4, i32 2
  %82 = bitcast i8** %81 to i32**
  br label %93

83:                                               ; preds = %133
  %84 = load i32*, i32** %66, align 8
  br label %85

85:                                               ; preds = %83, %64
  %86 = phi i32* [ %84, %83 ], [ %68, %64 ]
  %87 = icmp eq i32* %86, null
  br i1 %87, label %92, label %88

88:                                               ; preds = %85
  %89 = ptrtoint i32* %86 to i64
  %90 = bitcast i32** %67 to i64*
  store i64 %89, i64* %90, align 8
  %91 = bitcast i32* %86 to i8*
  call void @_ZdlPv(i8* %91) #14
  br label %92

92:                                               ; preds = %85, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #13
  br label %136

93:                                               ; preds = %71, %133
  %94 = phi i32* [ %68, %71 ], [ %134, %133 ]
  %95 = load i32, i32* %94, align 4
  %96 = load i8, i8* %57, align 8, !range !2
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %114, label %98

98:                                               ; preds = %93
  %99 = load i32, i32* %73, align 8
  %100 = load i32, i32* %74, align 4
  %101 = icmp eq i32 %99, %100
  br i1 %101, label %102, label %107

102:                                              ; preds = %98
  %103 = add i32 %99, 1
  call void @_ZN6google8protobuf13RepeatedFieldIjE7ReserveEi(%"class.google::protobuf::RepeatedField"* %72, i32 %103) #13
  %104 = load i32*, i32** %76, align 8
  %105 = zext i32 %99 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  store i32 %95, i32* %106, align 4
  br label %112

107:                                              ; preds = %98
  %108 = load i32*, i32** %76, align 8
  %109 = zext i32 %99 to i64
  %110 = getelementptr inbounds i32, i32* %108, i64 %109
  store i32 %95, i32* %110, align 4
  %111 = add i32 %99, 1
  br label %112

112:                                              ; preds = %102, %107
  %113 = phi i32 [ %111, %107 ], [ %103, %102 ]
  store i32 %113, i32* %73, align 8
  br label %114

114:                                              ; preds = %93, %112
  %115 = load i8, i8* %77, align 1, !range !2
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114
  %118 = load i32, i32* %79, align 8
  %119 = load i32, i32* %80, align 4
  %120 = icmp eq i32 %118, %119
  br i1 %120, label %121, label %126

121:                                              ; preds = %117
  %122 = add i32 %118, 1
  call void @_ZN6google8protobuf13RepeatedFieldIjE7ReserveEi(%"class.google::protobuf::RepeatedField"* %78, i32 %122) #13
  %123 = load i32*, i32** %82, align 8
  %124 = zext i32 %118 to i64
  %125 = getelementptr inbounds i32, i32* %123, i64 %124
  store i32 %95, i32* %125, align 4
  br label %131

126:                                              ; preds = %117
  %127 = load i32*, i32** %82, align 8
  %128 = zext i32 %118 to i64
  %129 = getelementptr inbounds i32, i32* %127, i64 %128
  store i32 %95, i32* %129, align 4
  %130 = add i32 %118, 1
  br label %131

131:                                              ; preds = %121, %126
  %132 = phi i32 [ %130, %126 ], [ %122, %121 ]
  store i32 %132, i32* %79, align 8
  br label %133

133:                                              ; preds = %114, %131
  %134 = getelementptr inbounds i32, i32* %94, i64 1
  %135 = icmp eq i32* %134, %69
  br i1 %135, label %83, label %93

136:                                              ; preds = %60, %92
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind
declare void @_ZN7metrics30OmniboxEventProto_ProviderInfoD1Ev(%"class.metrics::OmniboxEventProto_ProviderInfo"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN17OmniboxFieldTrial32GetActiveSuggestFieldTrialHashesEPNSt3__16vectorIjNS0_9allocatorIjEEEE(%"class.std::__1::vector.87"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN20OmniboxPedalProvider12ResetSessionEv(%class.OmniboxPedalProvider* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 8
  store i8 0, i8* %2, align 1
  %3 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 7
  store i8 0, i8* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK20OmniboxPedalProvider19EstimateMemoryUsageEv(%class.OmniboxPedalProvider*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = mul i64 %5, 48
  %7 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = bitcast %"struct.std::__1::__hash_node_base.56"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %21, label %11

11:                                               ; preds = %1, %11
  %12 = phi i64 [ %19, %11 ], [ %9, %1 ]
  %13 = phi i64 [ %17, %11 ], [ 0, %1 ]
  %14 = inttoptr i64 %12 to %"struct.std::__1::__hash_node.238"*
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node.238", %"struct.std::__1::__hash_node.238"* %14, i64 0, i32 2, i32 0, i32 0
  %16 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIDsNSt3__111char_traitsIDsEENS2_9allocatorIDsEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %15) #13
  %17 = add i64 %16, %13
  %18 = inttoptr i64 %12 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %11

21:                                               ; preds = %11, %1
  %22 = phi i64 [ 0, %1 ], [ %17, %11 ]
  %23 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 2
  %24 = tail call i64 @_ZNK12OmniboxPedal12SynonymGroup19EstimateMemoryUsageEv(%"class.OmniboxPedal::SynonymGroup"* %23) #13
  %25 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = shl i64 %28, 5
  %30 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = bitcast %"struct.std::__1::__hash_node_base"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %67, label %34

34:                                               ; preds = %21, %62
  %35 = phi i64 [ %65, %62 ], [ %32, %21 ]
  %36 = phi i64 [ %63, %62 ], [ 0, %21 ]
  %37 = inttoptr i64 %35 to %"struct.std::__1::__hash_node"*
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %37, i64 0, i32 2, i32 0, i32 1, i32 0
  %39 = load %class.OmniboxPedal*, %class.OmniboxPedal** %38, align 8
  %40 = icmp eq %class.OmniboxPedal* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %class.OmniboxPedal, %class.OmniboxPedal* %39, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %42) #13
  br label %43

43:                                               ; preds = %41, %34
  %44 = bitcast %class.OmniboxPedal* %39 to i64 (%class.OmniboxPedal*)***
  %45 = load i64 (%class.OmniboxPedal*)**, i64 (%class.OmniboxPedal*)*** %44, align 8
  %46 = getelementptr inbounds i64 (%class.OmniboxPedal*)*, i64 (%class.OmniboxPedal*)** %45, i64 5
  %47 = load i64 (%class.OmniboxPedal*)*, i64 (%class.OmniboxPedal*)** %46, align 8
  %48 = tail call i64 %47(%class.OmniboxPedal* %39) #13
  br i1 %40, label %62, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %class.OmniboxPedal, %class.OmniboxPedal* %39, i64 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %50, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %51) #13
  %52 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %50, i64 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %62

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %50, i64 -2
  %57 = bitcast %"class.base::RefCounted"* %56 to %class.OmniboxAction*
  %58 = bitcast %"class.base::RefCounted"* %56 to void (%class.OmniboxAction*)***
  %59 = load void (%class.OmniboxAction*)**, void (%class.OmniboxAction*)*** %58, align 8
  %60 = getelementptr inbounds void (%class.OmniboxAction*)*, void (%class.OmniboxAction*)** %59, i64 8
  %61 = load void (%class.OmniboxAction*)*, void (%class.OmniboxAction*)** %60, align 8
  tail call void %61(%class.OmniboxAction* nonnull %57) #13
  br label %62

62:                                               ; preds = %55, %49, %43
  %63 = add i64 %48, %36
  %64 = inttoptr i64 %35 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %34

67:                                               ; preds = %62, %21
  %68 = phi i64 [ 0, %21 ], [ %63, %62 ]
  %69 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 4
  %70 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIDsNSt3__111char_traitsIDsEENS2_9allocatorIDsEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %69) #13
  %71 = add i64 %26, %3
  %72 = shl i64 %71, 3
  %73 = add i64 %22, %6
  %74 = add i64 %73, %24
  %75 = add i64 %74, %29
  %76 = add i64 %75, %72
  %77 = add i64 %76, %68
  %78 = add i64 %77, %70
  ret i64 %78
}

declare i64 @_ZN4base11trace_event19EstimateMemoryUsageIDsNSt3__111char_traitsIDsEENS2_9allocatorIDsEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.OmniboxPedal* @_ZN20OmniboxPedalProvider14FindPedalMatchERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.OmniboxPedalProvider*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 5
  tail call void @_ZNK20OmniboxPedalProvider8TokenizeERN12OmniboxPedal13TokenSequenceERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%class.OmniboxPedalProvider* %0, %"class.OmniboxPedal::TokenSequence"* dereferenceable(24) %3, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %4 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %5 = bitcast %"struct.OmniboxPedal::Token"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.OmniboxPedal::TokenSequence"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %6, %8
  br i1 %9, label %36, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 2
  %12 = tail call zeroext i1 @_ZNK12OmniboxPedal12SynonymGroup14EraseMatchesInERNS_13TokenSequenceEb(%"class.OmniboxPedal::SynonymGroup"* %11, %"class.OmniboxPedal::TokenSequence"* dereferenceable(24) %3, i1 zeroext true) #13
  br i1 %12, label %13, label %17

13:                                               ; preds = %10
  %14 = load i64, i64* %5, align 8
  %15 = load i64, i64* %7, align 8
  %16 = icmp eq i64 %14, %15
  br i1 %16, label %36, label %17

17:                                               ; preds = %13, %10
  %18 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = bitcast %"struct.std::__1::__hash_node_base"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %36, label %22

22:                                               ; preds = %17, %28
  %23 = phi i64 [ %30, %28 ], [ %20, %17 ]
  %24 = inttoptr i64 %23 to %"struct.std::__1::__hash_node"*
  tail call void @_ZN12OmniboxPedal13TokenSequence10ResetLinksEv(%"class.OmniboxPedal::TokenSequence"* %3) #13
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %24, i64 0, i32 2, i32 0, i32 1, i32 0
  %26 = load %class.OmniboxPedal*, %class.OmniboxPedal** %25, align 8
  %27 = tail call zeroext i1 @_ZNK12OmniboxPedal14IsConceptMatchERNS_13TokenSequenceE(%class.OmniboxPedal* %26, %"class.OmniboxPedal::TokenSequence"* dereferenceable(24) %3) #13
  br i1 %27, label %32, label %28

28:                                               ; preds = %22
  %29 = inttoptr i64 %23 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %36, label %22

32:                                               ; preds = %22
  %33 = inttoptr i64 %23 to %"struct.std::__1::__hash_node"*
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %33, i64 0, i32 2, i32 0, i32 1, i32 0
  %35 = load %class.OmniboxPedal*, %class.OmniboxPedal** %34, align 8
  br label %36

36:                                               ; preds = %28, %17, %2, %13, %32
  %37 = phi %class.OmniboxPedal* [ %35, %32 ], [ null, %13 ], [ null, %2 ], [ null, %17 ], [ null, %28 ]
  ret %class.OmniboxPedal* %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK20OmniboxPedalProvider8TokenizeERN12OmniboxPedal13TokenSequenceERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%class.OmniboxPedalProvider*, %"class.OmniboxPedal::TokenSequence"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::i18n::UTF16CharIterator", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.base::StringTokenizerT", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  %15 = load i8, i8* %13, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i16*, i16** %17, align 8
  %19 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %20 = select i1 %16, i16* %18, i16* %19
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %15 to i64
  %24 = select i1 %16, i64 %22, i64 %23
  call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %4, i16* %20, i64 %24) #13
  %25 = bitcast %"class.OmniboxPedal::TokenSequence"* %1 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.OmniboxPedal::TokenSequence", %"class.OmniboxPedal::TokenSequence"* %1, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast %"struct.OmniboxPedal::Token"** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 4
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %30, i64 0, i32 1, i32 1
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %3
  %35 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  br label %39

37:                                               ; preds = %3
  %38 = zext i8 %32 to i64
  br label %39

39:                                               ; preds = %34, %37
  %40 = phi i64 [ %36, %34 ], [ %38, %37 ]
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %103

42:                                               ; preds = %39
  %43 = bitcast %"class.base::i18n::UTF16CharIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %43) #13
  %44 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %5, i64 0, i32 0, i32 1
  %45 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %5, i64 0, i32 1
  %46 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  %48 = bitcast %"class.base::i18n::UTF16CharIterator"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 40, i1 false)
  %49 = load i8, i8* %47, align 1
  %50 = icmp slt i8 %49, 0
  %51 = load i16*, i16** %10, align 8
  %52 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  %53 = select i1 %50, i16* %51, i16* %52
  %54 = load i64, i64* %11, align 8
  %55 = zext i8 %49 to i64
  %56 = select i1 %50, i64 %54, i64 %55
  call void @_ZN4base4i18n17UTF16CharIteratorC1ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.base::i18n::UTF16CharIterator"* nonnull %5, i16* %53, i64 %56) #13
  %57 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %58 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::allocator"*
  %59 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 3, i32 0
  %60 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 6
  %61 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %61, i64 0, i32 1, i32 1
  %63 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %64 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  br label %65

65:                                               ; preds = %100, %42
  %66 = phi i64 [ 0, %42 ], [ %94, %100 ]
  %67 = load i64, i64* %45, align 8
  %68 = load i64, i64* %44, align 8
  %69 = icmp eq i64 %67, %68
  br i1 %69, label %102, label %70

70:                                               ; preds = %65
  %71 = call zeroext i1 @_ZN4base4i18n17UTF16CharIterator7AdvanceEv(%"class.base::i18n::UTF16CharIterator"* nonnull %5) #13
  %72 = load i64, i64* %45, align 8
  %73 = icmp ugt i64 %72, %66
  br i1 %73, label %74, label %102

74:                                               ; preds = %70
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #13
  %75 = sub i64 %72, %66
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i64 %66, i64 %75, %"class.std::__1::allocator"* nonnull dereferenceable(1) %58) #13
  %76 = call %"struct.std::__1::__hash_node_base.56"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS8_PvEEEERKT_(%"class.std::__1::__hash_table.52"* %59, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #13
  %77 = icmp eq %"struct.std::__1::__hash_node_base.56"* %76, null
  br i1 %77, label %78, label %80

78:                                               ; preds = %74
  %79 = load i64, i64* %25, align 8
  br label %87

80:                                               ; preds = %74
  %81 = load i64, i64* %28, align 8
  %82 = load i64, i64* %25, align 8
  %83 = sub i64 %81, %82
  %84 = ashr exact i64 %83, 4
  %85 = load i64, i64* %60, align 8
  %86 = icmp ult i64 %84, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %78, %80
  %88 = phi i64 [ %79, %78 ], [ %82, %80 ]
  store i64 %88, i64* %28, align 8
  br label %93

89:                                               ; preds = %80
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %76, i64 5
  %91 = bitcast %"struct.std::__1::__hash_node_base.56"* %90 to i32*
  %92 = load i32, i32* %91, align 8
  call void @_ZN12OmniboxPedal13TokenSequence3AddEi(%"class.OmniboxPedal::TokenSequence"* %1, i32 %92) #13
  br label %93

93:                                               ; preds = %89, %87
  %94 = phi i64 [ %66, %87 ], [ %72, %89 ]
  %95 = phi i32 [ 3, %87 ], [ 0, %89 ]
  %96 = load i8, i8* %62, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %93
  %99 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %99) #14
  br label %100

100:                                              ; preds = %98, %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #13
  %101 = icmp eq i32 %95, 0
  br i1 %101, label %65, label %102

102:                                              ; preds = %70, %65, %100
  call void @_ZN4base4i18n17UTF16CharIteratorD1Ev(%"class.base::i18n::UTF16CharIterator"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %43) #13
  br label %455

103:                                              ; preds = %39
  %104 = bitcast %"class.base::StringTokenizerT"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %104) #13
  %105 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 6
  %106 = bitcast i32* %105 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 -86, i64 16, i1 false)
  %107 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 0, i32 0
  %108 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 1, i32 0
  %109 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 2, i32 0
  %110 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 3, i32 0
  %111 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 4
  %112 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %112, i64 0, i32 1, i32 1
  %114 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 4
  %115 = bitcast %"class.std::__1::basic_string"* %114 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %115, i8 0, i64 48, i1 false) #13
  %116 = load i8, i8* %113, align 1
  %117 = icmp slt i8 %116, 0
  %118 = load i16*, i16** %10, align 8
  %119 = load i64, i64* %11, align 8
  %120 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  %121 = zext i8 %116 to i64
  %122 = select i1 %117, i16* %118, i16* %120
  %123 = select i1 %117, i64 %119, i64 %121
  %124 = getelementptr inbounds i16, i16* %122, i64 %123
  store i16* %122, i16** %107, align 8
  store i16* %122, i16** %108, align 8
  store i16* %122, i16** %109, align 8
  store i16* %124, i16** %110, align 8
  %125 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %111, %"class.std::__1::basic_string"* dereferenceable(24) %29) #13
  %126 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 6
  store i32 0, i32* %126, align 8
  %127 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 7
  store i8 1, i8* %127, align 4
  %128 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 9
  store i32 0, i32* %128, align 8
  %129 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 5
  %130 = bitcast %"class.std::__1::basic_string"* %129 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %130, i64 0, i32 1, i32 1
  %132 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %133 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 2
  %134 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 1
  %135 = bitcast %"class.std::__1::__wrap_iter.103"* %133 to i64*
  %136 = bitcast %"class.std::__1::__wrap_iter.103"* %134 to i64*
  %137 = getelementptr inbounds %"class.std::__1::__wrap_iter.103", %"class.std::__1::__wrap_iter.103"* %133, i64 0, i32 0
  %138 = bitcast %"class.std::__1::basic_string"* %111 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %139 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %138, i64 0, i32 1, i32 1
  %140 = bitcast %"class.std::__1::basic_string"* %111 to i16*
  %141 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %143 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %144 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  %145 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %147 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %148 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %147, i64 0, i32 1, i32 1
  %149 = bitcast %"class.std::__1::basic_string"* %8 to i16*
  %150 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 3, i32 0
  %151 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 6
  br label %152

152:                                              ; preds = %437, %103
  %153 = phi i32 [ %441, %437 ], [ 0, %103 ]
  %154 = load i8, i8* %131, align 1
  %155 = icmp slt i8 %154, 0
  %156 = load i64, i64* %132, align 8
  %157 = zext i8 %154 to i64
  %158 = select i1 %155, i64 %156, i64 %157
  %159 = icmp eq i64 %158, 0
  %160 = icmp eq i32 %153, 0
  %161 = and i1 %159, %160
  br i1 %161, label %162, label %232

162:                                              ; preds = %152
  store i8 0, i8* %127, align 4
  %163 = load i64, i64* %135, align 8
  store i64 %163, i64* %136, align 8
  %164 = inttoptr i64 %163 to i16*
  %165 = load i16*, i16** %110, align 8
  %166 = icmp eq i16* %165, %164
  br i1 %166, label %177, label %167

167:                                              ; preds = %162
  %168 = load i8, i8* %139, align 1
  %169 = icmp slt i8 %168, 0
  %170 = zext i8 %168 to i64
  %171 = load i16*, i16** %141, align 8
  %172 = load i64, i64* %142, align 8
  %173 = select i1 %169, i16* %171, i16* %140
  %174 = select i1 %169, i64 %172, i64 %170
  %175 = icmp eq i64 %174, 0
  %176 = ptrtoint i16* %173 to i64
  br label %178

177:                                              ; preds = %162, %207
  store i8 1, i8* %127, align 4
  br label %442

178:                                              ; preds = %207, %167
  %179 = phi i16* [ %164, %167 ], [ %180, %207 ]
  %180 = getelementptr inbounds i16, i16* %179, i64 1
  store i16* %180, i16** %137, align 8
  %181 = load i16, i16* %179, align 2
  %182 = ptrtoint i16* %180 to i64
  br i1 %175, label %198, label %183

183:                                              ; preds = %178, %188
  %184 = phi i64 [ %190, %188 ], [ %174, %178 ]
  %185 = phi i16* [ %189, %188 ], [ %173, %178 ]
  %186 = load i16, i16* %185, align 2
  %187 = icmp eq i16 %186, %181
  br i1 %187, label %192, label %188

188:                                              ; preds = %183
  %189 = getelementptr inbounds i16, i16* %185, i64 1
  %190 = add i64 %184, -1
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %198, label %183

192:                                              ; preds = %183
  %193 = icmp eq i16* %185, null
  %194 = ptrtoint i16* %185 to i64
  %195 = sub i64 %194, %176
  %196 = icmp eq i64 %195, -2
  %197 = or i1 %193, %196
  br i1 %197, label %198, label %207

198:                                              ; preds = %188, %192, %178
  %199 = load i32, i32* %128, align 8
  %200 = icmp eq i32 %199, 1
  br i1 %200, label %201, label %202

201:                                              ; preds = %198
  switch i16 %181, label %202 [
    i16 32, label %207
    i16 13, label %207
    i16 10, label %207
    i16 9, label %207
    i16 12, label %207
  ]

202:                                              ; preds = %201, %198
  %203 = phi i1 [ true, %201 ], [ false, %198 ]
  %204 = icmp eq i16* %180, %165
  br i1 %204, label %237, label %205

205:                                              ; preds = %202
  %206 = ptrtoint i16* %173 to i64
  br label %209

207:                                              ; preds = %201, %201, %201, %201, %201, %192
  store i64 %182, i64* %136, align 8
  %208 = icmp eq i16* %165, %180
  br i1 %208, label %177, label %178

209:                                              ; preds = %205, %229
  %210 = phi i16* [ %230, %229 ], [ %180, %205 ]
  %211 = load i16, i16* %210, align 2
  br i1 %175, label %227, label %212

212:                                              ; preds = %209, %217
  %213 = phi i64 [ %219, %217 ], [ %174, %209 ]
  %214 = phi i16* [ %218, %217 ], [ %173, %209 ]
  %215 = load i16, i16* %214, align 2
  %216 = icmp eq i16 %215, %211
  br i1 %216, label %221, label %217

217:                                              ; preds = %212
  %218 = getelementptr inbounds i16, i16* %214, i64 1
  %219 = add i64 %213, -1
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %227, label %212

221:                                              ; preds = %212
  %222 = icmp eq i16* %214, null
  %223 = ptrtoint i16* %214 to i64
  %224 = sub i64 %223, %206
  %225 = icmp eq i64 %224, -2
  %226 = or i1 %222, %225
  br i1 %226, label %227, label %237

227:                                              ; preds = %217, %221, %209
  br i1 %203, label %228, label %229

228:                                              ; preds = %227
  switch i16 %211, label %229 [
    i16 32, label %237
    i16 13, label %237
    i16 10, label %237
    i16 9, label %237
    i16 12, label %237
  ]

229:                                              ; preds = %228, %227
  %230 = getelementptr inbounds i16, i16* %210, i64 1
  store i16* %230, i16** %137, align 8
  %231 = icmp eq i16* %230, %165
  br i1 %231, label %237, label %209

232:                                              ; preds = %152
  %233 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS1_11__wrap_iterIPKDsEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %7) #13
  br i1 %233, label %234, label %442

234:                                              ; preds = %232
  %235 = load i16*, i16** %108, align 8, !noalias !17
  %236 = load i16*, i16** %109, align 8, !noalias !17
  br label %237

237:                                              ; preds = %228, %228, %228, %228, %228, %221, %229, %234, %202
  %238 = phi i16* [ %236, %234 ], [ %165, %202 ], [ %210, %228 ], [ %210, %228 ], [ %210, %228 ], [ %210, %228 ], [ %210, %228 ], [ %210, %221 ], [ %165, %229 ]
  %239 = phi i16* [ %235, %234 ], [ %179, %202 ], [ %179, %229 ], [ %179, %221 ], [ %179, %228 ], [ %179, %228 ], [ %179, %228 ], [ %179, %228 ], [ %179, %228 ]
  %240 = ptrtoint i16* %239 to i64
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %143) #13
  %241 = ptrtoint i16* %238 to i64
  %242 = sub i64 %241, %240
  %243 = ashr exact i64 %242, 1
  %244 = icmp ugt i64 %243, 9223372036854775791
  br i1 %244, label %245, label %247

245:                                              ; preds = %237
  %246 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %246) #15
  unreachable

247:                                              ; preds = %237
  %248 = icmp ult i64 %243, 11
  br i1 %248, label %249, label %251

249:                                              ; preds = %247
  %250 = trunc i64 %243 to i8
  store i8 %250, i8* %148, align 1, !alias.scope !17
  br label %261

251:                                              ; preds = %247
  %252 = add nuw nsw i64 %243, 8
  %253 = and i64 %252, -8
  %254 = icmp slt i64 %253, 0
  br i1 %254, label %255, label %256

255:                                              ; preds = %251
  call void @abort() #15
  unreachable

256:                                              ; preds = %251
  %257 = shl i64 %253, 1
  %258 = call i8* @_Znwm(i64 %257) #14
  %259 = bitcast i8* %258 to i16*
  store i8* %258, i8** %144, align 8, !alias.scope !17
  %260 = or i64 %253, -9223372036854775808
  store i64 %260, i64* %145, align 8, !alias.scope !17
  store i64 %243, i64* %146, align 8, !alias.scope !17
  br label %261

261:                                              ; preds = %256, %249
  %262 = phi i16* [ %149, %249 ], [ %259, %256 ]
  %263 = icmp eq i16* %239, %238
  br i1 %263, label %417, label %264

264:                                              ; preds = %261
  %265 = getelementptr i16, i16* %238, i64 -1
  %266 = ptrtoint i16* %265 to i64
  %267 = sub i64 %266, %240
  %268 = lshr i64 %267, 1
  %269 = add nuw i64 %268, 1
  %270 = icmp ult i64 %269, 16
  br i1 %270, label %364, label %271

271:                                              ; preds = %264
  %272 = getelementptr i16, i16* %262, i64 1
  %273 = getelementptr i16, i16* %238, i64 -1
  %274 = ptrtoint i16* %273 to i64
  %275 = sub i64 %274, %240
  %276 = lshr i64 %275, 1
  %277 = getelementptr i16, i16* %272, i64 %276
  %278 = getelementptr i16, i16* %239, i64 1
  %279 = getelementptr i16, i16* %278, i64 %276
  %280 = icmp ult i16* %262, %279
  %281 = icmp ult i16* %239, %277
  %282 = and i1 %280, %281
  br i1 %282, label %364, label %283

283:                                              ; preds = %271
  %284 = and i64 %269, -16
  %285 = getelementptr i16, i16* %262, i64 %284
  %286 = getelementptr i16, i16* %239, i64 %284
  %287 = add i64 %284, -16
  %288 = lshr exact i64 %287, 4
  %289 = add nuw nsw i64 %288, 1
  %290 = and i64 %289, 3
  %291 = icmp ult i64 %287, 48
  br i1 %291, label %343, label %292

292:                                              ; preds = %283
  %293 = sub nsw i64 %289, %290
  br label %294

294:                                              ; preds = %294, %292
  %295 = phi i64 [ 0, %292 ], [ %340, %294 ]
  %296 = phi i64 [ %293, %292 ], [ %341, %294 ]
  %297 = getelementptr i16, i16* %262, i64 %295
  %298 = getelementptr i16, i16* %239, i64 %295
  %299 = bitcast i16* %298 to <8 x i16>*
  %300 = load <8 x i16>, <8 x i16>* %299, align 2, !alias.scope !20
  %301 = getelementptr i16, i16* %298, i64 8
  %302 = bitcast i16* %301 to <8 x i16>*
  %303 = load <8 x i16>, <8 x i16>* %302, align 2, !alias.scope !20
  %304 = bitcast i16* %297 to <8 x i16>*
  store <8 x i16> %300, <8 x i16>* %304, align 2, !alias.scope !23, !noalias !20
  %305 = getelementptr i16, i16* %297, i64 8
  %306 = bitcast i16* %305 to <8 x i16>*
  store <8 x i16> %303, <8 x i16>* %306, align 2, !alias.scope !23, !noalias !20
  %307 = or i64 %295, 16
  %308 = getelementptr i16, i16* %262, i64 %307
  %309 = getelementptr i16, i16* %239, i64 %307
  %310 = bitcast i16* %309 to <8 x i16>*
  %311 = load <8 x i16>, <8 x i16>* %310, align 2, !alias.scope !20
  %312 = getelementptr i16, i16* %309, i64 8
  %313 = bitcast i16* %312 to <8 x i16>*
  %314 = load <8 x i16>, <8 x i16>* %313, align 2, !alias.scope !20
  %315 = bitcast i16* %308 to <8 x i16>*
  store <8 x i16> %311, <8 x i16>* %315, align 2, !alias.scope !23, !noalias !20
  %316 = getelementptr i16, i16* %308, i64 8
  %317 = bitcast i16* %316 to <8 x i16>*
  store <8 x i16> %314, <8 x i16>* %317, align 2, !alias.scope !23, !noalias !20
  %318 = or i64 %295, 32
  %319 = getelementptr i16, i16* %262, i64 %318
  %320 = getelementptr i16, i16* %239, i64 %318
  %321 = bitcast i16* %320 to <8 x i16>*
  %322 = load <8 x i16>, <8 x i16>* %321, align 2, !alias.scope !20
  %323 = getelementptr i16, i16* %320, i64 8
  %324 = bitcast i16* %323 to <8 x i16>*
  %325 = load <8 x i16>, <8 x i16>* %324, align 2, !alias.scope !20
  %326 = bitcast i16* %319 to <8 x i16>*
  store <8 x i16> %322, <8 x i16>* %326, align 2, !alias.scope !23, !noalias !20
  %327 = getelementptr i16, i16* %319, i64 8
  %328 = bitcast i16* %327 to <8 x i16>*
  store <8 x i16> %325, <8 x i16>* %328, align 2, !alias.scope !23, !noalias !20
  %329 = or i64 %295, 48
  %330 = getelementptr i16, i16* %262, i64 %329
  %331 = getelementptr i16, i16* %239, i64 %329
  %332 = bitcast i16* %331 to <8 x i16>*
  %333 = load <8 x i16>, <8 x i16>* %332, align 2, !alias.scope !20
  %334 = getelementptr i16, i16* %331, i64 8
  %335 = bitcast i16* %334 to <8 x i16>*
  %336 = load <8 x i16>, <8 x i16>* %335, align 2, !alias.scope !20
  %337 = bitcast i16* %330 to <8 x i16>*
  store <8 x i16> %333, <8 x i16>* %337, align 2, !alias.scope !23, !noalias !20
  %338 = getelementptr i16, i16* %330, i64 8
  %339 = bitcast i16* %338 to <8 x i16>*
  store <8 x i16> %336, <8 x i16>* %339, align 2, !alias.scope !23, !noalias !20
  %340 = add i64 %295, 64
  %341 = add i64 %296, -4
  %342 = icmp eq i64 %341, 0
  br i1 %342, label %343, label %294, !llvm.loop !25

343:                                              ; preds = %294, %283
  %344 = phi i64 [ 0, %283 ], [ %340, %294 ]
  %345 = icmp eq i64 %290, 0
  br i1 %345, label %362, label %346

346:                                              ; preds = %343, %346
  %347 = phi i64 [ %359, %346 ], [ %344, %343 ]
  %348 = phi i64 [ %360, %346 ], [ %290, %343 ]
  %349 = getelementptr i16, i16* %262, i64 %347
  %350 = getelementptr i16, i16* %239, i64 %347
  %351 = bitcast i16* %350 to <8 x i16>*
  %352 = load <8 x i16>, <8 x i16>* %351, align 2, !alias.scope !20
  %353 = getelementptr i16, i16* %350, i64 8
  %354 = bitcast i16* %353 to <8 x i16>*
  %355 = load <8 x i16>, <8 x i16>* %354, align 2, !alias.scope !20
  %356 = bitcast i16* %349 to <8 x i16>*
  store <8 x i16> %352, <8 x i16>* %356, align 2, !alias.scope !23, !noalias !20
  %357 = getelementptr i16, i16* %349, i64 8
  %358 = bitcast i16* %357 to <8 x i16>*
  store <8 x i16> %355, <8 x i16>* %358, align 2, !alias.scope !23, !noalias !20
  %359 = add i64 %347, 16
  %360 = add i64 %348, -1
  %361 = icmp eq i64 %360, 0
  br i1 %361, label %362, label %346, !llvm.loop !26

362:                                              ; preds = %346, %343
  %363 = icmp eq i64 %269, %284
  br i1 %363, label %417, label %364

364:                                              ; preds = %362, %271, %264
  %365 = phi i16* [ %262, %271 ], [ %262, %264 ], [ %285, %362 ]
  %366 = phi i16* [ %239, %271 ], [ %239, %264 ], [ %286, %362 ]
  %367 = ptrtoint i16* %366 to i64
  %368 = getelementptr i16, i16* %238, i64 -1
  %369 = ptrtoint i16* %368 to i64
  %370 = sub i64 %369, %367
  %371 = lshr i64 %370, 1
  %372 = add nuw i64 %371, 1
  %373 = and i64 %372, 7
  %374 = icmp eq i64 %373, 0
  br i1 %374, label %384, label %375

375:                                              ; preds = %364, %375
  %376 = phi i16* [ %381, %375 ], [ %365, %364 ]
  %377 = phi i16* [ %380, %375 ], [ %366, %364 ]
  %378 = phi i64 [ %382, %375 ], [ %373, %364 ]
  %379 = load i16, i16* %377, align 2
  store i16 %379, i16* %376, align 2
  %380 = getelementptr inbounds i16, i16* %377, i64 1
  %381 = getelementptr inbounds i16, i16* %376, i64 1
  %382 = add i64 %378, -1
  %383 = icmp eq i64 %382, 0
  br i1 %383, label %384, label %375, !llvm.loop !27

384:                                              ; preds = %375, %364
  %385 = phi i16* [ undef, %364 ], [ %381, %375 ]
  %386 = phi i16* [ %365, %364 ], [ %381, %375 ]
  %387 = phi i16* [ %366, %364 ], [ %380, %375 ]
  %388 = icmp ult i64 %370, 14
  br i1 %388, label %417, label %389

389:                                              ; preds = %384, %389
  %390 = phi i16* [ %415, %389 ], [ %386, %384 ]
  %391 = phi i16* [ %414, %389 ], [ %387, %384 ]
  %392 = load i16, i16* %391, align 2
  store i16 %392, i16* %390, align 2
  %393 = getelementptr inbounds i16, i16* %391, i64 1
  %394 = getelementptr inbounds i16, i16* %390, i64 1
  %395 = load i16, i16* %393, align 2
  store i16 %395, i16* %394, align 2
  %396 = getelementptr inbounds i16, i16* %391, i64 2
  %397 = getelementptr inbounds i16, i16* %390, i64 2
  %398 = load i16, i16* %396, align 2
  store i16 %398, i16* %397, align 2
  %399 = getelementptr inbounds i16, i16* %391, i64 3
  %400 = getelementptr inbounds i16, i16* %390, i64 3
  %401 = load i16, i16* %399, align 2
  store i16 %401, i16* %400, align 2
  %402 = getelementptr inbounds i16, i16* %391, i64 4
  %403 = getelementptr inbounds i16, i16* %390, i64 4
  %404 = load i16, i16* %402, align 2
  store i16 %404, i16* %403, align 2
  %405 = getelementptr inbounds i16, i16* %391, i64 5
  %406 = getelementptr inbounds i16, i16* %390, i64 5
  %407 = load i16, i16* %405, align 2
  store i16 %407, i16* %406, align 2
  %408 = getelementptr inbounds i16, i16* %391, i64 6
  %409 = getelementptr inbounds i16, i16* %390, i64 6
  %410 = load i16, i16* %408, align 2
  store i16 %410, i16* %409, align 2
  %411 = getelementptr inbounds i16, i16* %391, i64 7
  %412 = getelementptr inbounds i16, i16* %390, i64 7
  %413 = load i16, i16* %411, align 2
  store i16 %413, i16* %412, align 2
  %414 = getelementptr inbounds i16, i16* %391, i64 8
  %415 = getelementptr inbounds i16, i16* %390, i64 8
  %416 = icmp eq i16* %414, %238
  br i1 %416, label %417, label %389, !llvm.loop !28

417:                                              ; preds = %384, %389, %362, %261
  %418 = phi i16* [ %262, %261 ], [ %285, %362 ], [ %385, %384 ], [ %415, %389 ]
  store i16 0, i16* %418, align 2
  %419 = call %"struct.std::__1::__hash_node_base.56"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS8_PvEEEERKT_(%"class.std::__1::__hash_table.52"* %150, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #13
  %420 = load i8, i8* %148, align 1
  %421 = icmp slt i8 %420, 0
  br i1 %421, label %422, label %424

422:                                              ; preds = %417
  %423 = load i8*, i8** %144, align 8
  call void @_ZdlPv(i8* %423) #14
  br label %424

424:                                              ; preds = %417, %422
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %143) #13
  %425 = icmp eq %"struct.std::__1::__hash_node_base.56"* %419, null
  br i1 %425, label %426, label %428

426:                                              ; preds = %424
  %427 = load i64, i64* %25, align 8
  br label %435

428:                                              ; preds = %424
  %429 = load i64, i64* %28, align 8
  %430 = load i64, i64* %25, align 8
  %431 = sub i64 %429, %430
  %432 = ashr exact i64 %431, 4
  %433 = load i64, i64* %151, align 8
  %434 = icmp ult i64 %432, %433
  br i1 %434, label %437, label %435

435:                                              ; preds = %428, %426
  %436 = phi i64 [ %427, %426 ], [ %430, %428 ]
  store i64 %436, i64* %28, align 8
  br label %442

437:                                              ; preds = %428
  %438 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %419, i64 5
  %439 = bitcast %"struct.std::__1::__hash_node_base.56"* %438 to i32*
  %440 = load i32, i32* %439, align 8
  call void @_ZN12OmniboxPedal13TokenSequence3AddEi(%"class.OmniboxPedal::TokenSequence"* %1, i32 %440) #13
  %441 = load i32, i32* %126, align 8
  br label %152

442:                                              ; preds = %232, %177, %435
  %443 = load i8, i8* %131, align 1
  %444 = icmp slt i8 %443, 0
  br i1 %444, label %445, label %448

445:                                              ; preds = %442
  %446 = bitcast %"class.std::__1::basic_string"* %129 to i8**
  %447 = load i8*, i8** %446, align 8
  call void @_ZdlPv(i8* %447) #14
  br label %448

448:                                              ; preds = %445, %442
  %449 = load i8, i8* %139, align 1
  %450 = icmp slt i8 %449, 0
  br i1 %450, label %451, label %454

451:                                              ; preds = %448
  %452 = bitcast %"class.std::__1::basic_string"* %111 to i8**
  %453 = load i8*, i8** %452, align 8
  call void @_ZdlPv(i8* %453) #14
  br label %454

454:                                              ; preds = %448, %451
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %104) #13
  br label %455

455:                                              ; preds = %454, %102
  %456 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %112, %454 ], [ %46, %102 ]
  %457 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %456, i64 0, i32 1, i32 1
  %458 = load i8, i8* %457, align 1
  %459 = icmp slt i8 %458, 0
  br i1 %459, label %460, label %463

460:                                              ; preds = %455
  %461 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %462 = load i8*, i8** %461, align 8
  call void @_ZdlPv(i8* %462) #14
  br label %463

463:                                              ; preds = %455, %460
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #13
  ret void
}

declare zeroext i1 @_ZNK12OmniboxPedal12SynonymGroup14EraseMatchesInERNS_13TokenSequenceEb(%"class.OmniboxPedal::SynonymGroup"*, %"class.OmniboxPedal::TokenSequence"* dereferenceable(24), i1 zeroext) local_unnamed_addr #1

declare void @_ZN12OmniboxPedal13TokenSequence10ResetLinksEv(%"class.OmniboxPedal::TokenSequence"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK12OmniboxPedal14IsConceptMatchERNS_13TokenSequenceE(%class.OmniboxPedal*, %"class.OmniboxPedal::TokenSequence"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.OmniboxPedal* @_ZN20OmniboxPedalProvider19FindReadyPedalMatchERK17AutocompleteInputRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%class.OmniboxPedalProvider*, %class.AutocompleteInput* dereferenceable(512), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 5
  tail call void @_ZNK20OmniboxPedalProvider8TokenizeERN12OmniboxPedal13TokenSequenceERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%class.OmniboxPedalProvider* %0, %"class.OmniboxPedal::TokenSequence"* dereferenceable(24) %4, %"class.std::__1::basic_string"* dereferenceable(24) %2) #13
  %5 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.OmniboxPedal::Token"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.OmniboxPedal::TokenSequence"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  br i1 %10, label %50, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 2
  %13 = tail call zeroext i1 @_ZNK12OmniboxPedal12SynonymGroup14EraseMatchesInERNS_13TokenSequenceEb(%"class.OmniboxPedal::SynonymGroup"* %12, %"class.OmniboxPedal::TokenSequence"* dereferenceable(24) %4, i1 zeroext true) #13
  br i1 %13, label %14, label %18

14:                                               ; preds = %11
  %15 = load i64, i64* %6, align 8
  %16 = load i64, i64* %8, align 8
  %17 = icmp eq i64 %15, %16
  br i1 %17, label %50, label %18

18:                                               ; preds = %14, %11
  %19 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = bitcast %"struct.std::__1::__hash_node_base"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %50, label %23

23:                                               ; preds = %18, %29
  %24 = phi i64 [ %31, %29 ], [ %21, %18 ]
  %25 = inttoptr i64 %24 to %"struct.std::__1::__hash_node"*
  tail call void @_ZN12OmniboxPedal13TokenSequence10ResetLinksEv(%"class.OmniboxPedal::TokenSequence"* %4) #13
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %25, i64 0, i32 2, i32 0, i32 1, i32 0
  %27 = load %class.OmniboxPedal*, %class.OmniboxPedal** %26, align 8
  %28 = tail call zeroext i1 @_ZNK12OmniboxPedal14IsConceptMatchERNS_13TokenSequenceE(%class.OmniboxPedal* %27, %"class.OmniboxPedal::TokenSequence"* dereferenceable(24) %4) #13
  br i1 %28, label %33, label %29

29:                                               ; preds = %23
  %30 = inttoptr i64 %24 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %50, label %23

33:                                               ; preds = %23
  %34 = inttoptr i64 %24 to %"struct.std::__1::__hash_node"*
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %34, i64 0, i32 2, i32 0, i32 1, i32 0
  %36 = load %class.OmniboxPedal*, %class.OmniboxPedal** %35, align 8
  %37 = icmp eq %class.OmniboxPedal* %36, null
  br i1 %37, label %50, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %class.OmniboxPedal, %class.OmniboxPedal* %36, i64 0, i32 0
  %40 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 0
  %41 = load %class.AutocompleteProviderClient*, %class.AutocompleteProviderClient** %40, align 8
  %42 = bitcast %class.OmniboxPedal* %36 to i1 (%class.OmniboxAction*, %class.AutocompleteInput*, %class.AutocompleteProviderClient*)***
  %43 = load i1 (%class.OmniboxAction*, %class.AutocompleteInput*, %class.AutocompleteProviderClient*)**, i1 (%class.OmniboxAction*, %class.AutocompleteInput*, %class.AutocompleteProviderClient*)*** %42, align 8
  %44 = getelementptr inbounds i1 (%class.OmniboxAction*, %class.AutocompleteInput*, %class.AutocompleteProviderClient*)*, i1 (%class.OmniboxAction*, %class.AutocompleteInput*, %class.AutocompleteProviderClient*)** %43, i64 3
  %45 = load i1 (%class.OmniboxAction*, %class.AutocompleteInput*, %class.AutocompleteProviderClient*)*, i1 (%class.OmniboxAction*, %class.AutocompleteInput*, %class.AutocompleteProviderClient*)** %44, align 8
  %46 = tail call zeroext i1 %45(%class.OmniboxAction* %39, %class.AutocompleteInput* dereferenceable(512) %1, %class.AutocompleteProviderClient* dereferenceable(8) %41) #13
  br i1 %46, label %47, label %50

47:                                               ; preds = %38
  %48 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 7
  store i8 1, i8* %48, align 8
  %49 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 8
  store i8 1, i8* %49, align 1
  br label %50

50:                                               ; preds = %29, %18, %3, %14, %33, %38, %47
  %51 = phi %class.OmniboxPedal* [ %36, %47 ], [ null, %38 ], [ null, %33 ], [ null, %14 ], [ null, %3 ], [ null, %18 ], [ null, %29 ]
  ret %class.OmniboxPedal* %51
}

declare void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN4base4i18n17UTF16CharIteratorC1ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.base::i18n::UTF16CharIterator"*, i16*, i64) unnamed_addr #1

declare zeroext i1 @_ZN4base4i18n17UTF16CharIterator7AdvanceEv(%"class.base::i18n::UTF16CharIterator"*) local_unnamed_addr #1

declare void @_ZN12OmniboxPedal13TokenSequence3AddEi(%"class.OmniboxPedal::TokenSequence"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base4i18n17UTF16CharIteratorD1Ev(%"class.base::i18n::UTF16CharIterator"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20OmniboxPedalProvider27TokenizeAndExpandDictionaryERN12OmniboxPedal13TokenSequenceERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%class.OmniboxPedalProvider*, %"class.OmniboxPedal::TokenSequence"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::i18n::UTF16CharIterator", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"struct.std::__1::pair.102", align 8
  %7 = alloca %"class.base::StringTokenizerT", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"struct.std::__1::pair.102", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = bitcast %"class.OmniboxPedal::TokenSequence"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.OmniboxPedal::TokenSequence", %"class.OmniboxPedal::TokenSequence"* %1, i64 0, i32 0, i32 0, i32 1
  %14 = bitcast %"struct.OmniboxPedal::Token"** %13 to i64*
  store i64 %12, i64* %14, align 8
  %15 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 4
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %3
  %21 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  br label %25

23:                                               ; preds = %3
  %24 = zext i8 %18 to i64
  br label %25

25:                                               ; preds = %20, %23
  %26 = phi i64 [ %22, %20 ], [ %24, %23 ]
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %283

28:                                               ; preds = %25
  %29 = bitcast %"class.base::i18n::UTF16CharIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %29) #13
  %30 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %4, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %4, i64 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = bitcast %"class.base::i18n::UTF16CharIterator"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 40, i1 false)
  %35 = load i8, i8* %33, align 1
  %36 = icmp slt i8 %35, 0
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i16*, i16** %37, align 8
  %39 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %40 = select i1 %36, i16* %38, i16* %39
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = zext i8 %35 to i64
  %44 = select i1 %36, i64 %42, i64 %43
  call void @_ZN4base4i18n17UTF16CharIteratorC1ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.base::i18n::UTF16CharIterator"* nonnull %4, i16* %40, i64 %44) #13
  %45 = load i64, i64* %31, align 8
  %46 = load i64, i64* %30, align 8
  %47 = icmp eq i64 %45, %46
  br i1 %47, label %282, label %48

48:                                               ; preds = %28
  %49 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 6
  %50 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::allocator"*
  %54 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 3, i32 0
  %55 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %56 = bitcast %"struct.std::__1::pair.102"* %6 to i8*
  %57 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %57, i64 0, i32 1, i32 1
  %59 = bitcast %"struct.std::__1::pair.102"* %6 to i8**
  %60 = getelementptr inbounds %"struct.std::__1::pair.102", %"struct.std::__1::pair.102"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %61 = getelementptr inbounds %"struct.std::__1::pair.102", %"struct.std::__1::pair.102"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %62 = bitcast %"struct.std::__1::pair.102"* %6 to i16*
  %63 = bitcast %"struct.std::__1::pair.102"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %63, i64 0, i32 1, i32 1
  %65 = getelementptr inbounds %"struct.std::__1::pair.102", %"struct.std::__1::pair.102"* %6, i64 0, i32 1
  %66 = getelementptr inbounds %"struct.std::__1::pair.102", %"struct.std::__1::pair.102"* %6, i64 0, i32 0
  %67 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %68 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  br label %69

69:                                               ; preds = %48, %278
  %70 = phi i64 [ 0, %48 ], [ %72, %278 ]
  %71 = call zeroext i1 @_ZN4base4i18n17UTF16CharIterator7AdvanceEv(%"class.base::i18n::UTF16CharIterator"* nonnull %4) #13
  %72 = load i64, i64* %31, align 8
  %73 = icmp ugt i64 %72, %70
  br i1 %73, label %74, label %282

74:                                               ; preds = %69
  %75 = load i64, i64* %14, align 8
  %76 = load i64, i64* %11, align 8
  %77 = sub i64 %75, %76
  %78 = ashr exact i64 %77, 4
  %79 = load i64, i64* %49, align 8
  %80 = icmp ult i64 %78, %79
  br i1 %80, label %82, label %81

81:                                               ; preds = %74
  store i64 %76, i64* %14, align 8
  br label %282

82:                                               ; preds = %74
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #13
  %83 = sub i64 %72, %70
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %2, i64 %70, i64 %83, %"class.std::__1::allocator"* dereferenceable(1) %53) #13
  %84 = call %"struct.std::__1::__hash_node_base.56"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEERKT_(%"class.std::__1::__hash_table.52"* %54, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #13
  %85 = icmp eq %"struct.std::__1::__hash_node_base.56"* %84, null
  br i1 %85, label %86, label %269

86:                                               ; preds = %82
  %87 = load i64, i64* %55, align 8
  %88 = trunc i64 %87 to i32
  call void @_ZN12OmniboxPedal13TokenSequence3AddEi(%"class.OmniboxPedal::TokenSequence"* %1, i32 %88) #13
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %56) #13
  %89 = load i64, i64* %55, align 8
  %90 = load i8, i8* %58, align 1
  %91 = icmp slt i8 %90, 0
  br i1 %91, label %93, label %92

92:                                               ; preds = %86
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* nonnull align 8 %50, i64 24, i1 false) #13
  br label %261

93:                                               ; preds = %86
  %94 = load i16*, i16** %51, align 8
  %95 = load i64, i64* %52, align 8
  %96 = icmp ult i64 %95, 11
  br i1 %96, label %97, label %99

97:                                               ; preds = %93
  %98 = trunc i64 %95 to i8
  store i8 %98, i8* %64, align 1
  br label %113

99:                                               ; preds = %93
  %100 = icmp ugt i64 %95, 9223372036854775791
  br i1 %100, label %101, label %103

101:                                              ; preds = %99
  %102 = bitcast %"struct.std::__1::pair.102"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %102) #15
  unreachable

103:                                              ; preds = %99
  %104 = add nuw nsw i64 %95, 8
  %105 = and i64 %104, -8
  %106 = icmp slt i64 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %103
  call void @abort() #15
  unreachable

108:                                              ; preds = %103
  %109 = shl i64 %105, 1
  %110 = call i8* @_Znwm(i64 %109) #14
  %111 = bitcast i8* %110 to i16*
  store i8* %110, i8** %59, align 8
  %112 = or i64 %105, -9223372036854775808
  store i64 %112, i64* %60, align 8
  store i64 %95, i64* %61, align 8
  br label %113

113:                                              ; preds = %108, %97
  %114 = phi i16* [ %62, %97 ], [ %111, %108 ]
  %115 = add nuw nsw i64 %95, 1
  %116 = add i64 %95, 1
  %117 = icmp ult i64 %116, 16
  br i1 %117, label %208, label %118

118:                                              ; preds = %113
  %119 = getelementptr i16, i16* %114, i64 1
  %120 = getelementptr i16, i16* %119, i64 %95
  %121 = getelementptr i16, i16* %94, i64 1
  %122 = getelementptr i16, i16* %121, i64 %95
  %123 = icmp ult i16* %114, %122
  %124 = icmp ult i16* %94, %120
  %125 = and i1 %123, %124
  br i1 %125, label %208, label %126

126:                                              ; preds = %118
  %127 = and i64 %116, -16
  %128 = sub i64 %115, %127
  %129 = getelementptr i16, i16* %94, i64 %127
  %130 = getelementptr i16, i16* %114, i64 %127
  %131 = add i64 %127, -16
  %132 = lshr exact i64 %131, 4
  %133 = add nuw nsw i64 %132, 1
  %134 = and i64 %133, 3
  %135 = icmp ult i64 %131, 48
  br i1 %135, label %187, label %136

136:                                              ; preds = %126
  %137 = sub nsw i64 %133, %134
  br label %138

138:                                              ; preds = %138, %136
  %139 = phi i64 [ 0, %136 ], [ %184, %138 ]
  %140 = phi i64 [ %137, %136 ], [ %185, %138 ]
  %141 = getelementptr i16, i16* %94, i64 %139
  %142 = getelementptr i16, i16* %114, i64 %139
  %143 = bitcast i16* %141 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !29
  %145 = getelementptr i16, i16* %141, i64 8
  %146 = bitcast i16* %145 to <8 x i16>*
  %147 = load <8 x i16>, <8 x i16>* %146, align 2, !alias.scope !29
  %148 = bitcast i16* %142 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %148, align 2, !alias.scope !32, !noalias !29
  %149 = getelementptr i16, i16* %142, i64 8
  %150 = bitcast i16* %149 to <8 x i16>*
  store <8 x i16> %147, <8 x i16>* %150, align 2, !alias.scope !32, !noalias !29
  %151 = or i64 %139, 16
  %152 = getelementptr i16, i16* %94, i64 %151
  %153 = getelementptr i16, i16* %114, i64 %151
  %154 = bitcast i16* %152 to <8 x i16>*
  %155 = load <8 x i16>, <8 x i16>* %154, align 2, !alias.scope !29
  %156 = getelementptr i16, i16* %152, i64 8
  %157 = bitcast i16* %156 to <8 x i16>*
  %158 = load <8 x i16>, <8 x i16>* %157, align 2, !alias.scope !29
  %159 = bitcast i16* %153 to <8 x i16>*
  store <8 x i16> %155, <8 x i16>* %159, align 2, !alias.scope !32, !noalias !29
  %160 = getelementptr i16, i16* %153, i64 8
  %161 = bitcast i16* %160 to <8 x i16>*
  store <8 x i16> %158, <8 x i16>* %161, align 2, !alias.scope !32, !noalias !29
  %162 = or i64 %139, 32
  %163 = getelementptr i16, i16* %94, i64 %162
  %164 = getelementptr i16, i16* %114, i64 %162
  %165 = bitcast i16* %163 to <8 x i16>*
  %166 = load <8 x i16>, <8 x i16>* %165, align 2, !alias.scope !29
  %167 = getelementptr i16, i16* %163, i64 8
  %168 = bitcast i16* %167 to <8 x i16>*
  %169 = load <8 x i16>, <8 x i16>* %168, align 2, !alias.scope !29
  %170 = bitcast i16* %164 to <8 x i16>*
  store <8 x i16> %166, <8 x i16>* %170, align 2, !alias.scope !32, !noalias !29
  %171 = getelementptr i16, i16* %164, i64 8
  %172 = bitcast i16* %171 to <8 x i16>*
  store <8 x i16> %169, <8 x i16>* %172, align 2, !alias.scope !32, !noalias !29
  %173 = or i64 %139, 48
  %174 = getelementptr i16, i16* %94, i64 %173
  %175 = getelementptr i16, i16* %114, i64 %173
  %176 = bitcast i16* %174 to <8 x i16>*
  %177 = load <8 x i16>, <8 x i16>* %176, align 2, !alias.scope !29
  %178 = getelementptr i16, i16* %174, i64 8
  %179 = bitcast i16* %178 to <8 x i16>*
  %180 = load <8 x i16>, <8 x i16>* %179, align 2, !alias.scope !29
  %181 = bitcast i16* %175 to <8 x i16>*
  store <8 x i16> %177, <8 x i16>* %181, align 2, !alias.scope !32, !noalias !29
  %182 = getelementptr i16, i16* %175, i64 8
  %183 = bitcast i16* %182 to <8 x i16>*
  store <8 x i16> %180, <8 x i16>* %183, align 2, !alias.scope !32, !noalias !29
  %184 = add i64 %139, 64
  %185 = add i64 %140, -4
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %187, label %138, !llvm.loop !34

187:                                              ; preds = %138, %126
  %188 = phi i64 [ 0, %126 ], [ %184, %138 ]
  %189 = icmp eq i64 %134, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %187, %190
  %191 = phi i64 [ %203, %190 ], [ %188, %187 ]
  %192 = phi i64 [ %204, %190 ], [ %134, %187 ]
  %193 = getelementptr i16, i16* %94, i64 %191
  %194 = getelementptr i16, i16* %114, i64 %191
  %195 = bitcast i16* %193 to <8 x i16>*
  %196 = load <8 x i16>, <8 x i16>* %195, align 2, !alias.scope !29
  %197 = getelementptr i16, i16* %193, i64 8
  %198 = bitcast i16* %197 to <8 x i16>*
  %199 = load <8 x i16>, <8 x i16>* %198, align 2, !alias.scope !29
  %200 = bitcast i16* %194 to <8 x i16>*
  store <8 x i16> %196, <8 x i16>* %200, align 2, !alias.scope !32, !noalias !29
  %201 = getelementptr i16, i16* %194, i64 8
  %202 = bitcast i16* %201 to <8 x i16>*
  store <8 x i16> %199, <8 x i16>* %202, align 2, !alias.scope !32, !noalias !29
  %203 = add i64 %191, 16
  %204 = add i64 %192, -1
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %190, !llvm.loop !35

206:                                              ; preds = %190, %187
  %207 = icmp eq i64 %116, %127
  br i1 %207, label %261, label %208

208:                                              ; preds = %206, %118, %113
  %209 = phi i64 [ %115, %118 ], [ %115, %113 ], [ %128, %206 ]
  %210 = phi i16* [ %94, %118 ], [ %94, %113 ], [ %129, %206 ]
  %211 = phi i16* [ %114, %118 ], [ %114, %113 ], [ %130, %206 ]
  %212 = add i64 %209, -1
  %213 = and i64 %209, 7
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %226, label %215

215:                                              ; preds = %208, %215
  %216 = phi i64 [ %221, %215 ], [ %209, %208 ]
  %217 = phi i16* [ %223, %215 ], [ %210, %208 ]
  %218 = phi i16* [ %222, %215 ], [ %211, %208 ]
  %219 = phi i64 [ %224, %215 ], [ %213, %208 ]
  %220 = load i16, i16* %217, align 2
  store i16 %220, i16* %218, align 2
  %221 = add i64 %216, -1
  %222 = getelementptr inbounds i16, i16* %218, i64 1
  %223 = getelementptr inbounds i16, i16* %217, i64 1
  %224 = add i64 %219, -1
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %215, !llvm.loop !36

226:                                              ; preds = %215, %208
  %227 = phi i64 [ %209, %208 ], [ %221, %215 ]
  %228 = phi i16* [ %210, %208 ], [ %223, %215 ]
  %229 = phi i16* [ %211, %208 ], [ %222, %215 ]
  %230 = icmp ult i64 %212, 7
  br i1 %230, label %261, label %231

231:                                              ; preds = %226, %231
  %232 = phi i64 [ %257, %231 ], [ %227, %226 ]
  %233 = phi i16* [ %259, %231 ], [ %228, %226 ]
  %234 = phi i16* [ %258, %231 ], [ %229, %226 ]
  %235 = load i16, i16* %233, align 2
  store i16 %235, i16* %234, align 2
  %236 = getelementptr inbounds i16, i16* %234, i64 1
  %237 = getelementptr inbounds i16, i16* %233, i64 1
  %238 = load i16, i16* %237, align 2
  store i16 %238, i16* %236, align 2
  %239 = getelementptr inbounds i16, i16* %234, i64 2
  %240 = getelementptr inbounds i16, i16* %233, i64 2
  %241 = load i16, i16* %240, align 2
  store i16 %241, i16* %239, align 2
  %242 = getelementptr inbounds i16, i16* %234, i64 3
  %243 = getelementptr inbounds i16, i16* %233, i64 3
  %244 = load i16, i16* %243, align 2
  store i16 %244, i16* %242, align 2
  %245 = getelementptr inbounds i16, i16* %234, i64 4
  %246 = getelementptr inbounds i16, i16* %233, i64 4
  %247 = load i16, i16* %246, align 2
  store i16 %247, i16* %245, align 2
  %248 = getelementptr inbounds i16, i16* %234, i64 5
  %249 = getelementptr inbounds i16, i16* %233, i64 5
  %250 = load i16, i16* %249, align 2
  store i16 %250, i16* %248, align 2
  %251 = getelementptr inbounds i16, i16* %234, i64 6
  %252 = getelementptr inbounds i16, i16* %233, i64 6
  %253 = load i16, i16* %252, align 2
  store i16 %253, i16* %251, align 2
  %254 = getelementptr inbounds i16, i16* %234, i64 7
  %255 = getelementptr inbounds i16, i16* %233, i64 7
  %256 = load i16, i16* %255, align 2
  store i16 %256, i16* %254, align 2
  %257 = add i64 %232, -8
  %258 = getelementptr inbounds i16, i16* %234, i64 8
  %259 = getelementptr inbounds i16, i16* %233, i64 8
  %260 = icmp eq i64 %257, 0
  br i1 %260, label %261, label %231, !llvm.loop !37

261:                                              ; preds = %226, %231, %206, %92
  %262 = trunc i64 %89 to i32
  store i32 %262, i32* %65, align 8
  %263 = call { %"struct.std::__1::__hash_node_base.56"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JNS_4pairIKS7_iEEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.52"* %54, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %66, %"struct.std::__1::pair.102"* nonnull dereferenceable(32) %6) #13
  %264 = load i8, i8* %64, align 1
  %265 = icmp slt i8 %264, 0
  br i1 %265, label %266, label %268

266:                                              ; preds = %261
  %267 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %267) #14
  br label %268

268:                                              ; preds = %261, %266
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %56) #13
  br label %273

269:                                              ; preds = %82
  %270 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %84, i64 5
  %271 = bitcast %"struct.std::__1::__hash_node_base.56"* %270 to i32*
  %272 = load i32, i32* %271, align 8
  call void @_ZN12OmniboxPedal13TokenSequence3AddEi(%"class.OmniboxPedal::TokenSequence"* %1, i32 %272) #13
  br label %273

273:                                              ; preds = %269, %268
  %274 = load i8, i8* %58, align 1
  %275 = icmp slt i8 %274, 0
  br i1 %275, label %276, label %278

276:                                              ; preds = %273
  %277 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %277) #14
  br label %278

278:                                              ; preds = %276, %273
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #13
  %279 = load i64, i64* %31, align 8
  %280 = load i64, i64* %30, align 8
  %281 = icmp eq i64 %279, %280
  br i1 %281, label %282, label %69

282:                                              ; preds = %278, %69, %28, %81
  call void @_ZN4base4i18n17UTF16CharIteratorD1Ev(%"class.base::i18n::UTF16CharIterator"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %29) #13
  br label %843

283:                                              ; preds = %25
  %284 = bitcast %"class.base::StringTokenizerT"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %284) #13
  %285 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 6
  %286 = bitcast i32* %285 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %286, i8 -86, i64 16, i1 false)
  %287 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 0, i32 0
  %288 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 1, i32 0
  %289 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 2, i32 0
  %290 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 3, i32 0
  %291 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 4
  %292 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %293 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %292, i64 0, i32 1, i32 1
  %294 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 4
  %295 = bitcast %"class.std::__1::basic_string"* %294 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %295, i8 0, i64 48, i1 false) #13
  %296 = load i8, i8* %293, align 1
  %297 = icmp slt i8 %296, 0
  %298 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %299 = load i16*, i16** %298, align 8
  %300 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %301 = load i64, i64* %300, align 8
  %302 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %303 = zext i8 %296 to i64
  %304 = select i1 %297, i16* %299, i16* %302
  %305 = select i1 %297, i64 %301, i64 %303
  %306 = getelementptr inbounds i16, i16* %304, i64 %305
  store i16* %304, i16** %287, align 8
  store i16* %304, i16** %288, align 8
  store i16* %304, i16** %289, align 8
  store i16* %306, i16** %290, align 8
  %307 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %291, %"class.std::__1::basic_string"* dereferenceable(24) %15) #13
  %308 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 6
  store i32 0, i32* %308, align 8
  %309 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 7
  store i8 1, i8* %309, align 4
  %310 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 9
  store i32 0, i32* %310, align 8
  %311 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 5
  %312 = bitcast %"class.std::__1::basic_string"* %311 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %313 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %312, i64 0, i32 1, i32 1
  %314 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %315 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 2
  %316 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 1
  %317 = bitcast %"class.std::__1::__wrap_iter.103"* %315 to i64*
  %318 = bitcast %"class.std::__1::__wrap_iter.103"* %316 to i64*
  %319 = getelementptr inbounds %"class.std::__1::__wrap_iter.103", %"class.std::__1::__wrap_iter.103"* %315, i64 0, i32 0
  %320 = bitcast %"class.std::__1::basic_string"* %291 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %321 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %320, i64 0, i32 1, i32 1
  %322 = bitcast %"class.std::__1::basic_string"* %291 to i16*
  %323 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %291, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %324 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %325 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 6
  %326 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %327 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  %328 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %329 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %330 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %331 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %330, i64 0, i32 1, i32 1
  %332 = bitcast %"class.std::__1::basic_string"* %8 to i16*
  %333 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 3, i32 0
  %334 = getelementptr inbounds %class.OmniboxPedalProvider, %class.OmniboxPedalProvider* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %335 = bitcast %"struct.std::__1::pair.102"* %9 to i8*
  %336 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %337 = bitcast %"class.std::__1::basic_string"* %10 to i8**
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %340 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %341 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %340, i64 0, i32 1, i32 1
  %342 = bitcast %"class.std::__1::basic_string"* %10 to i16*
  %343 = getelementptr inbounds %"struct.std::__1::pair.102", %"struct.std::__1::pair.102"* %9, i64 0, i32 1
  %344 = getelementptr inbounds %"struct.std::__1::pair.102", %"struct.std::__1::pair.102"* %9, i64 0, i32 0
  %345 = bitcast %"struct.std::__1::pair.102"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %346 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %345, i64 0, i32 1, i32 1
  %347 = bitcast %"struct.std::__1::pair.102"* %9 to i8**
  br label %348

348:                                              ; preds = %828, %283
  %349 = phi i32 [ %829, %828 ], [ 0, %283 ]
  %350 = load i8, i8* %313, align 1
  %351 = icmp slt i8 %350, 0
  %352 = load i64, i64* %314, align 8
  %353 = zext i8 %350 to i64
  %354 = select i1 %351, i64 %352, i64 %353
  %355 = icmp eq i64 %354, 0
  %356 = icmp eq i32 %349, 0
  %357 = and i1 %355, %356
  br i1 %357, label %358, label %428

358:                                              ; preds = %348
  store i8 0, i8* %309, align 4
  %359 = load i64, i64* %317, align 8
  store i64 %359, i64* %318, align 8
  %360 = inttoptr i64 %359 to i16*
  %361 = load i16*, i16** %290, align 8
  %362 = icmp eq i16* %361, %360
  br i1 %362, label %373, label %363

363:                                              ; preds = %358
  %364 = load i8, i8* %321, align 1
  %365 = icmp slt i8 %364, 0
  %366 = zext i8 %364 to i64
  %367 = load i16*, i16** %323, align 8
  %368 = load i64, i64* %324, align 8
  %369 = select i1 %365, i16* %367, i16* %322
  %370 = select i1 %365, i64 %368, i64 %366
  %371 = icmp eq i64 %370, 0
  %372 = ptrtoint i16* %369 to i64
  br label %374

373:                                              ; preds = %358, %403
  store i8 1, i8* %309, align 4
  br label %830

374:                                              ; preds = %403, %363
  %375 = phi i16* [ %360, %363 ], [ %376, %403 ]
  %376 = getelementptr inbounds i16, i16* %375, i64 1
  store i16* %376, i16** %319, align 8
  %377 = load i16, i16* %375, align 2
  %378 = ptrtoint i16* %376 to i64
  br i1 %371, label %394, label %379

379:                                              ; preds = %374, %384
  %380 = phi i64 [ %386, %384 ], [ %370, %374 ]
  %381 = phi i16* [ %385, %384 ], [ %369, %374 ]
  %382 = load i16, i16* %381, align 2
  %383 = icmp eq i16 %382, %377
  br i1 %383, label %388, label %384

384:                                              ; preds = %379
  %385 = getelementptr inbounds i16, i16* %381, i64 1
  %386 = add i64 %380, -1
  %387 = icmp eq i64 %386, 0
  br i1 %387, label %394, label %379

388:                                              ; preds = %379
  %389 = icmp eq i16* %381, null
  %390 = ptrtoint i16* %381 to i64
  %391 = sub i64 %390, %372
  %392 = icmp eq i64 %391, -2
  %393 = or i1 %389, %392
  br i1 %393, label %394, label %403

394:                                              ; preds = %384, %388, %374
  %395 = load i32, i32* %310, align 8
  %396 = icmp eq i32 %395, 1
  br i1 %396, label %397, label %398

397:                                              ; preds = %394
  switch i16 %377, label %398 [
    i16 32, label %403
    i16 13, label %403
    i16 10, label %403
    i16 9, label %403
    i16 12, label %403
  ]

398:                                              ; preds = %397, %394
  %399 = phi i1 [ true, %397 ], [ false, %394 ]
  %400 = icmp eq i16* %376, %361
  br i1 %400, label %430, label %401

401:                                              ; preds = %398
  %402 = ptrtoint i16* %369 to i64
  br label %405

403:                                              ; preds = %397, %397, %397, %397, %397, %388
  store i64 %378, i64* %318, align 8
  %404 = icmp eq i16* %361, %376
  br i1 %404, label %373, label %374

405:                                              ; preds = %401, %425
  %406 = phi i16* [ %426, %425 ], [ %376, %401 ]
  %407 = load i16, i16* %406, align 2
  br i1 %371, label %423, label %408

408:                                              ; preds = %405, %413
  %409 = phi i64 [ %415, %413 ], [ %370, %405 ]
  %410 = phi i16* [ %414, %413 ], [ %369, %405 ]
  %411 = load i16, i16* %410, align 2
  %412 = icmp eq i16 %411, %407
  br i1 %412, label %417, label %413

413:                                              ; preds = %408
  %414 = getelementptr inbounds i16, i16* %410, i64 1
  %415 = add i64 %409, -1
  %416 = icmp eq i64 %415, 0
  br i1 %416, label %423, label %408

417:                                              ; preds = %408
  %418 = icmp eq i16* %410, null
  %419 = ptrtoint i16* %410 to i64
  %420 = sub i64 %419, %402
  %421 = icmp eq i64 %420, -2
  %422 = or i1 %418, %421
  br i1 %422, label %423, label %430

423:                                              ; preds = %413, %417, %405
  br i1 %399, label %424, label %425

424:                                              ; preds = %423
  switch i16 %407, label %425 [
    i16 32, label %430
    i16 13, label %430
    i16 10, label %430
    i16 9, label %430
    i16 12, label %430
  ]

425:                                              ; preds = %424, %423
  %426 = getelementptr inbounds i16, i16* %406, i64 1
  store i16* %426, i16** %319, align 8
  %427 = icmp eq i16* %426, %361
  br i1 %427, label %430, label %405

428:                                              ; preds = %348
  %429 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS1_11__wrap_iterIPKDsEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %7) #13
  br i1 %429, label %430, label %830

430:                                              ; preds = %424, %424, %424, %424, %424, %417, %425, %398, %428
  %431 = load i64, i64* %14, align 8
  %432 = load i64, i64* %11, align 8
  %433 = sub i64 %431, %432
  %434 = ashr exact i64 %433, 4
  %435 = load i64, i64* %325, align 8
  %436 = icmp ult i64 %434, %435
  br i1 %436, label %438, label %437

437:                                              ; preds = %430
  store i64 %432, i64* %14, align 8
  br label %830

438:                                              ; preds = %430
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %326) #13
  %439 = load i16*, i16** %288, align 8, !noalias !38
  %440 = ptrtoint i16* %439 to i64
  %441 = load i16*, i16** %289, align 8, !noalias !38
  %442 = ptrtoint i16* %441 to i64
  %443 = sub i64 %442, %440
  %444 = ashr exact i64 %443, 1
  %445 = icmp ugt i64 %444, 9223372036854775791
  br i1 %445, label %446, label %448

446:                                              ; preds = %438
  %447 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %447) #15
  unreachable

448:                                              ; preds = %438
  %449 = icmp ult i64 %444, 11
  br i1 %449, label %450, label %452

450:                                              ; preds = %448
  %451 = trunc i64 %444 to i8
  store i8 %451, i8* %331, align 1, !alias.scope !38
  br label %462

452:                                              ; preds = %448
  %453 = add nuw nsw i64 %444, 8
  %454 = and i64 %453, -8
  %455 = icmp slt i64 %454, 0
  br i1 %455, label %456, label %457

456:                                              ; preds = %452
  call void @abort() #15
  unreachable

457:                                              ; preds = %452
  %458 = shl i64 %454, 1
  %459 = call i8* @_Znwm(i64 %458) #14
  %460 = bitcast i8* %459 to i16*
  store i8* %459, i8** %327, align 8, !alias.scope !38
  %461 = or i64 %454, -9223372036854775808
  store i64 %461, i64* %328, align 8, !alias.scope !38
  store i64 %444, i64* %329, align 8, !alias.scope !38
  br label %462

462:                                              ; preds = %457, %450
  %463 = phi i16* [ %332, %450 ], [ %460, %457 ]
  %464 = icmp eq i16* %439, %441
  br i1 %464, label %618, label %465

465:                                              ; preds = %462
  %466 = getelementptr i16, i16* %441, i64 -1
  %467 = ptrtoint i16* %466 to i64
  %468 = sub i64 %467, %440
  %469 = lshr i64 %468, 1
  %470 = add nuw i64 %469, 1
  %471 = icmp ult i64 %470, 16
  br i1 %471, label %565, label %472

472:                                              ; preds = %465
  %473 = getelementptr i16, i16* %463, i64 1
  %474 = getelementptr i16, i16* %441, i64 -1
  %475 = ptrtoint i16* %474 to i64
  %476 = sub i64 %475, %440
  %477 = lshr i64 %476, 1
  %478 = getelementptr i16, i16* %473, i64 %477
  %479 = getelementptr i16, i16* %439, i64 1
  %480 = getelementptr i16, i16* %479, i64 %477
  %481 = icmp ult i16* %463, %480
  %482 = icmp ult i16* %439, %478
  %483 = and i1 %481, %482
  br i1 %483, label %565, label %484

484:                                              ; preds = %472
  %485 = and i64 %470, -16
  %486 = getelementptr i16, i16* %463, i64 %485
  %487 = getelementptr i16, i16* %439, i64 %485
  %488 = add i64 %485, -16
  %489 = lshr exact i64 %488, 4
  %490 = add nuw nsw i64 %489, 1
  %491 = and i64 %490, 3
  %492 = icmp ult i64 %488, 48
  br i1 %492, label %544, label %493

493:                                              ; preds = %484
  %494 = sub nsw i64 %490, %491
  br label %495

495:                                              ; preds = %495, %493
  %496 = phi i64 [ 0, %493 ], [ %541, %495 ]
  %497 = phi i64 [ %494, %493 ], [ %542, %495 ]
  %498 = getelementptr i16, i16* %463, i64 %496
  %499 = getelementptr i16, i16* %439, i64 %496
  %500 = bitcast i16* %499 to <8 x i16>*
  %501 = load <8 x i16>, <8 x i16>* %500, align 2, !alias.scope !41
  %502 = getelementptr i16, i16* %499, i64 8
  %503 = bitcast i16* %502 to <8 x i16>*
  %504 = load <8 x i16>, <8 x i16>* %503, align 2, !alias.scope !41
  %505 = bitcast i16* %498 to <8 x i16>*
  store <8 x i16> %501, <8 x i16>* %505, align 2, !alias.scope !44, !noalias !41
  %506 = getelementptr i16, i16* %498, i64 8
  %507 = bitcast i16* %506 to <8 x i16>*
  store <8 x i16> %504, <8 x i16>* %507, align 2, !alias.scope !44, !noalias !41
  %508 = or i64 %496, 16
  %509 = getelementptr i16, i16* %463, i64 %508
  %510 = getelementptr i16, i16* %439, i64 %508
  %511 = bitcast i16* %510 to <8 x i16>*
  %512 = load <8 x i16>, <8 x i16>* %511, align 2, !alias.scope !41
  %513 = getelementptr i16, i16* %510, i64 8
  %514 = bitcast i16* %513 to <8 x i16>*
  %515 = load <8 x i16>, <8 x i16>* %514, align 2, !alias.scope !41
  %516 = bitcast i16* %509 to <8 x i16>*
  store <8 x i16> %512, <8 x i16>* %516, align 2, !alias.scope !44, !noalias !41
  %517 = getelementptr i16, i16* %509, i64 8
  %518 = bitcast i16* %517 to <8 x i16>*
  store <8 x i16> %515, <8 x i16>* %518, align 2, !alias.scope !44, !noalias !41
  %519 = or i64 %496, 32
  %520 = getelementptr i16, i16* %463, i64 %519
  %521 = getelementptr i16, i16* %439, i64 %519
  %522 = bitcast i16* %521 to <8 x i16>*
  %523 = load <8 x i16>, <8 x i16>* %522, align 2, !alias.scope !41
  %524 = getelementptr i16, i16* %521, i64 8
  %525 = bitcast i16* %524 to <8 x i16>*
  %526 = load <8 x i16>, <8 x i16>* %525, align 2, !alias.scope !41
  %527 = bitcast i16* %520 to <8 x i16>*
  store <8 x i16> %523, <8 x i16>* %527, align 2, !alias.scope !44, !noalias !41
  %528 = getelementptr i16, i16* %520, i64 8
  %529 = bitcast i16* %528 to <8 x i16>*
  store <8 x i16> %526, <8 x i16>* %529, align 2, !alias.scope !44, !noalias !41
  %530 = or i64 %496, 48
  %531 = getelementptr i16, i16* %463, i64 %530
  %532 = getelementptr i16, i16* %439, i64 %530
  %533 = bitcast i16* %532 to <8 x i16>*
  %534 = load <8 x i16>, <8 x i16>* %533, align 2, !alias.scope !41
  %535 = getelementptr i16, i16* %532, i64 8
  %536 = bitcast i16* %535 to <8 x i16>*
  %537 = load <8 x i16>, <8 x i16>* %536, align 2, !alias.scope !41
  %538 = bitcast i16* %531 to <8 x i16>*
  store <8 x i16> %534, <8 x i16>* %538, align 2, !alias.scope !44, !noalias !41
  %539 = getelementptr i16, i16* %531, i64 8
  %540 = bitcast i16* %539 to <8 x i16>*
  store <8 x i16> %537, <8 x i16>* %540, align 2, !alias.scope !44, !noalias !41
  %541 = add i64 %496, 64
  %542 = add i64 %497, -4
  %543 = icmp eq i64 %542, 0
  br i1 %543, label %544, label %495, !llvm.loop !46

544:                                              ; preds = %495, %484
  %545 = phi i64 [ 0, %484 ], [ %541, %495 ]
  %546 = icmp eq i64 %491, 0
  br i1 %546, label %563, label %547

547:                                              ; preds = %544, %547
  %548 = phi i64 [ %560, %547 ], [ %545, %544 ]
  %549 = phi i64 [ %561, %547 ], [ %491, %544 ]
  %550 = getelementptr i16, i16* %463, i64 %548
  %551 = getelementptr i16, i16* %439, i64 %548
  %552 = bitcast i16* %551 to <8 x i16>*
  %553 = load <8 x i16>, <8 x i16>* %552, align 2, !alias.scope !41
  %554 = getelementptr i16, i16* %551, i64 8
  %555 = bitcast i16* %554 to <8 x i16>*
  %556 = load <8 x i16>, <8 x i16>* %555, align 2, !alias.scope !41
  %557 = bitcast i16* %550 to <8 x i16>*
  store <8 x i16> %553, <8 x i16>* %557, align 2, !alias.scope !44, !noalias !41
  %558 = getelementptr i16, i16* %550, i64 8
  %559 = bitcast i16* %558 to <8 x i16>*
  store <8 x i16> %556, <8 x i16>* %559, align 2, !alias.scope !44, !noalias !41
  %560 = add i64 %548, 16
  %561 = add i64 %549, -1
  %562 = icmp eq i64 %561, 0
  br i1 %562, label %563, label %547, !llvm.loop !47

563:                                              ; preds = %547, %544
  %564 = icmp eq i64 %470, %485
  br i1 %564, label %618, label %565

565:                                              ; preds = %563, %472, %465
  %566 = phi i16* [ %463, %472 ], [ %463, %465 ], [ %486, %563 ]
  %567 = phi i16* [ %439, %472 ], [ %439, %465 ], [ %487, %563 ]
  %568 = ptrtoint i16* %567 to i64
  %569 = getelementptr i16, i16* %441, i64 -1
  %570 = ptrtoint i16* %569 to i64
  %571 = sub i64 %570, %568
  %572 = lshr i64 %571, 1
  %573 = add nuw i64 %572, 1
  %574 = and i64 %573, 7
  %575 = icmp eq i64 %574, 0
  br i1 %575, label %585, label %576

576:                                              ; preds = %565, %576
  %577 = phi i16* [ %582, %576 ], [ %566, %565 ]
  %578 = phi i16* [ %581, %576 ], [ %567, %565 ]
  %579 = phi i64 [ %583, %576 ], [ %574, %565 ]
  %580 = load i16, i16* %578, align 2
  store i16 %580, i16* %577, align 2
  %581 = getelementptr inbounds i16, i16* %578, i64 1
  %582 = getelementptr inbounds i16, i16* %577, i64 1
  %583 = add i64 %579, -1
  %584 = icmp eq i64 %583, 0
  br i1 %584, label %585, label %576, !llvm.loop !48

585:                                              ; preds = %576, %565
  %586 = phi i16* [ undef, %565 ], [ %582, %576 ]
  %587 = phi i16* [ %566, %565 ], [ %582, %576 ]
  %588 = phi i16* [ %567, %565 ], [ %581, %576 ]
  %589 = icmp ult i64 %571, 14
  br i1 %589, label %618, label %590

590:                                              ; preds = %585, %590
  %591 = phi i16* [ %616, %590 ], [ %587, %585 ]
  %592 = phi i16* [ %615, %590 ], [ %588, %585 ]
  %593 = load i16, i16* %592, align 2
  store i16 %593, i16* %591, align 2
  %594 = getelementptr inbounds i16, i16* %592, i64 1
  %595 = getelementptr inbounds i16, i16* %591, i64 1
  %596 = load i16, i16* %594, align 2
  store i16 %596, i16* %595, align 2
  %597 = getelementptr inbounds i16, i16* %592, i64 2
  %598 = getelementptr inbounds i16, i16* %591, i64 2
  %599 = load i16, i16* %597, align 2
  store i16 %599, i16* %598, align 2
  %600 = getelementptr inbounds i16, i16* %592, i64 3
  %601 = getelementptr inbounds i16, i16* %591, i64 3
  %602 = load i16, i16* %600, align 2
  store i16 %602, i16* %601, align 2
  %603 = getelementptr inbounds i16, i16* %592, i64 4
  %604 = getelementptr inbounds i16, i16* %591, i64 4
  %605 = load i16, i16* %603, align 2
  store i16 %605, i16* %604, align 2
  %606 = getelementptr inbounds i16, i16* %592, i64 5
  %607 = getelementptr inbounds i16, i16* %591, i64 5
  %608 = load i16, i16* %606, align 2
  store i16 %608, i16* %607, align 2
  %609 = getelementptr inbounds i16, i16* %592, i64 6
  %610 = getelementptr inbounds i16, i16* %591, i64 6
  %611 = load i16, i16* %609, align 2
  store i16 %611, i16* %610, align 2
  %612 = getelementptr inbounds i16, i16* %592, i64 7
  %613 = getelementptr inbounds i16, i16* %591, i64 7
  %614 = load i16, i16* %612, align 2
  store i16 %614, i16* %613, align 2
  %615 = getelementptr inbounds i16, i16* %592, i64 8
  %616 = getelementptr inbounds i16, i16* %591, i64 8
  %617 = icmp eq i16* %615, %441
  br i1 %617, label %618, label %590, !llvm.loop !49

618:                                              ; preds = %585, %590, %563, %462
  %619 = phi i16* [ %463, %462 ], [ %486, %563 ], [ %586, %585 ], [ %616, %590 ]
  store i16 0, i16* %619, align 2
  %620 = call %"struct.std::__1::__hash_node_base.56"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEERKT_(%"class.std::__1::__hash_table.52"* %333, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #13
  %621 = load i8, i8* %331, align 1
  %622 = icmp slt i8 %621, 0
  br i1 %622, label %623, label %625

623:                                              ; preds = %618
  %624 = load i8*, i8** %327, align 8
  call void @_ZdlPv(i8* %624) #14
  br label %625

625:                                              ; preds = %618, %623
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %326) #13
  %626 = icmp eq %"struct.std::__1::__hash_node_base.56"* %620, null
  br i1 %626, label %627, label %824

627:                                              ; preds = %625
  %628 = load i64, i64* %334, align 8
  %629 = trunc i64 %628 to i32
  call void @_ZN12OmniboxPedal13TokenSequence3AddEi(%"class.OmniboxPedal::TokenSequence"* %1, i32 %629) #13
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %335) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %336) #13
  %630 = load i16*, i16** %288, align 8, !noalias !50
  %631 = ptrtoint i16* %630 to i64
  %632 = load i16*, i16** %289, align 8, !noalias !50
  %633 = ptrtoint i16* %632 to i64
  %634 = sub i64 %633, %631
  %635 = ashr exact i64 %634, 1
  %636 = icmp ugt i64 %635, 9223372036854775791
  br i1 %636, label %637, label %639

637:                                              ; preds = %627
  %638 = bitcast %"class.std::__1::basic_string"* %10 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %638) #15
  unreachable

639:                                              ; preds = %627
  %640 = icmp ult i64 %635, 11
  br i1 %640, label %641, label %643

641:                                              ; preds = %639
  %642 = trunc i64 %635 to i8
  store i8 %642, i8* %341, align 1, !alias.scope !50
  br label %653

643:                                              ; preds = %639
  %644 = add nuw nsw i64 %635, 8
  %645 = and i64 %644, -8
  %646 = icmp slt i64 %645, 0
  br i1 %646, label %647, label %648

647:                                              ; preds = %643
  call void @abort() #15
  unreachable

648:                                              ; preds = %643
  %649 = shl i64 %645, 1
  %650 = call i8* @_Znwm(i64 %649) #14
  %651 = bitcast i8* %650 to i16*
  store i8* %650, i8** %337, align 8, !alias.scope !50
  %652 = or i64 %645, -9223372036854775808
  store i64 %652, i64* %338, align 8, !alias.scope !50
  store i64 %635, i64* %339, align 8, !alias.scope !50
  br label %653

653:                                              ; preds = %648, %641
  %654 = phi i16* [ %342, %641 ], [ %651, %648 ]
  %655 = icmp eq i16* %630, %632
  br i1 %655, label %809, label %656

656:                                              ; preds = %653
  %657 = getelementptr i16, i16* %632, i64 -1
  %658 = ptrtoint i16* %657 to i64
  %659 = sub i64 %658, %631
  %660 = lshr i64 %659, 1
  %661 = add nuw i64 %660, 1
  %662 = icmp ult i64 %661, 16
  br i1 %662, label %756, label %663

663:                                              ; preds = %656
  %664 = getelementptr i16, i16* %654, i64 1
  %665 = getelementptr i16, i16* %632, i64 -1
  %666 = ptrtoint i16* %665 to i64
  %667 = sub i64 %666, %631
  %668 = lshr i64 %667, 1
  %669 = getelementptr i16, i16* %664, i64 %668
  %670 = getelementptr i16, i16* %630, i64 1
  %671 = getelementptr i16, i16* %670, i64 %668
  %672 = icmp ult i16* %654, %671
  %673 = icmp ult i16* %630, %669
  %674 = and i1 %672, %673
  br i1 %674, label %756, label %675

675:                                              ; preds = %663
  %676 = and i64 %661, -16
  %677 = getelementptr i16, i16* %654, i64 %676
  %678 = getelementptr i16, i16* %630, i64 %676
  %679 = add i64 %676, -16
  %680 = lshr exact i64 %679, 4
  %681 = add nuw nsw i64 %680, 1
  %682 = and i64 %681, 3
  %683 = icmp ult i64 %679, 48
  br i1 %683, label %735, label %684

684:                                              ; preds = %675
  %685 = sub nsw i64 %681, %682
  br label %686

686:                                              ; preds = %686, %684
  %687 = phi i64 [ 0, %684 ], [ %732, %686 ]
  %688 = phi i64 [ %685, %684 ], [ %733, %686 ]
  %689 = getelementptr i16, i16* %654, i64 %687
  %690 = getelementptr i16, i16* %630, i64 %687
  %691 = bitcast i16* %690 to <8 x i16>*
  %692 = load <8 x i16>, <8 x i16>* %691, align 2, !alias.scope !53
  %693 = getelementptr i16, i16* %690, i64 8
  %694 = bitcast i16* %693 to <8 x i16>*
  %695 = load <8 x i16>, <8 x i16>* %694, align 2, !alias.scope !53
  %696 = bitcast i16* %689 to <8 x i16>*
  store <8 x i16> %692, <8 x i16>* %696, align 2, !alias.scope !56, !noalias !53
  %697 = getelementptr i16, i16* %689, i64 8
  %698 = bitcast i16* %697 to <8 x i16>*
  store <8 x i16> %695, <8 x i16>* %698, align 2, !alias.scope !56, !noalias !53
  %699 = or i64 %687, 16
  %700 = getelementptr i16, i16* %654, i64 %699
  %701 = getelementptr i16, i16* %630, i64 %699
  %702 = bitcast i16* %701 to <8 x i16>*
  %703 = load <8 x i16>, <8 x i16>* %702, align 2, !alias.scope !53
  %704 = getelementptr i16, i16* %701, i64 8
  %705 = bitcast i16* %704 to <8 x i16>*
  %706 = load <8 x i16>, <8 x i16>* %705, align 2, !alias.scope !53
  %707 = bitcast i16* %700 to <8 x i16>*
  store <8 x i16> %703, <8 x i16>* %707, align 2, !alias.scope !56, !noalias !53
  %708 = getelementptr i16, i16* %700, i64 8
  %709 = bitcast i16* %708 to <8 x i16>*
  store <8 x i16> %706, <8 x i16>* %709, align 2, !alias.scope !56, !noalias !53
  %710 = or i64 %687, 32
  %711 = getelementptr i16, i16* %654, i64 %710
  %712 = getelementptr i16, i16* %630, i64 %710
  %713 = bitcast i16* %712 to <8 x i16>*
  %714 = load <8 x i16>, <8 x i16>* %713, align 2, !alias.scope !53
  %715 = getelementptr i16, i16* %712, i64 8
  %716 = bitcast i16* %715 to <8 x i16>*
  %717 = load <8 x i16>, <8 x i16>* %716, align 2, !alias.scope !53
  %718 = bitcast i16* %711 to <8 x i16>*
  store <8 x i16> %714, <8 x i16>* %718, align 2, !alias.scope !56, !noalias !53
  %719 = getelementptr i16, i16* %711, i64 8
  %720 = bitcast i16* %719 to <8 x i16>*
  store <8 x i16> %717, <8 x i16>* %720, align 2, !alias.scope !56, !noalias !53
  %721 = or i64 %687, 48
  %722 = getelementptr i16, i16* %654, i64 %721
  %723 = getelementptr i16, i16* %630, i64 %721
  %724 = bitcast i16* %723 to <8 x i16>*
  %725 = load <8 x i16>, <8 x i16>* %724, align 2, !alias.scope !53
  %726 = getelementptr i16, i16* %723, i64 8
  %727 = bitcast i16* %726 to <8 x i16>*
  %728 = load <8 x i16>, <8 x i16>* %727, align 2, !alias.scope !53
  %729 = bitcast i16* %722 to <8 x i16>*
  store <8 x i16> %725, <8 x i16>* %729, align 2, !alias.scope !56, !noalias !53
  %730 = getelementptr i16, i16* %722, i64 8
  %731 = bitcast i16* %730 to <8 x i16>*
  store <8 x i16> %728, <8 x i16>* %731, align 2, !alias.scope !56, !noalias !53
  %732 = add i64 %687, 64
  %733 = add i64 %688, -4
  %734 = icmp eq i64 %733, 0
  br i1 %734, label %735, label %686, !llvm.loop !58

735:                                              ; preds = %686, %675
  %736 = phi i64 [ 0, %675 ], [ %732, %686 ]
  %737 = icmp eq i64 %682, 0
  br i1 %737, label %754, label %738

738:                                              ; preds = %735, %738
  %739 = phi i64 [ %751, %738 ], [ %736, %735 ]
  %740 = phi i64 [ %752, %738 ], [ %682, %735 ]
  %741 = getelementptr i16, i16* %654, i64 %739
  %742 = getelementptr i16, i16* %630, i64 %739
  %743 = bitcast i16* %742 to <8 x i16>*
  %744 = load <8 x i16>, <8 x i16>* %743, align 2, !alias.scope !53
  %745 = getelementptr i16, i16* %742, i64 8
  %746 = bitcast i16* %745 to <8 x i16>*
  %747 = load <8 x i16>, <8 x i16>* %746, align 2, !alias.scope !53
  %748 = bitcast i16* %741 to <8 x i16>*
  store <8 x i16> %744, <8 x i16>* %748, align 2, !alias.scope !56, !noalias !53
  %749 = getelementptr i16, i16* %741, i64 8
  %750 = bitcast i16* %749 to <8 x i16>*
  store <8 x i16> %747, <8 x i16>* %750, align 2, !alias.scope !56, !noalias !53
  %751 = add i64 %739, 16
  %752 = add i64 %740, -1
  %753 = icmp eq i64 %752, 0
  br i1 %753, label %754, label %738, !llvm.loop !59

754:                                              ; preds = %738, %735
  %755 = icmp eq i64 %661, %676
  br i1 %755, label %809, label %756

756:                                              ; preds = %754, %663, %656
  %757 = phi i16* [ %654, %663 ], [ %654, %656 ], [ %677, %754 ]
  %758 = phi i16* [ %630, %663 ], [ %630, %656 ], [ %678, %754 ]
  %759 = ptrtoint i16* %758 to i64
  %760 = getelementptr i16, i16* %632, i64 -1
  %761 = ptrtoint i16* %760 to i64
  %762 = sub i64 %761, %759
  %763 = lshr i64 %762, 1
  %764 = add nuw i64 %763, 1
  %765 = and i64 %764, 7
  %766 = icmp eq i64 %765, 0
  br i1 %766, label %776, label %767

767:                                              ; preds = %756, %767
  %768 = phi i16* [ %773, %767 ], [ %757, %756 ]
  %769 = phi i16* [ %772, %767 ], [ %758, %756 ]
  %770 = phi i64 [ %774, %767 ], [ %765, %756 ]
  %771 = load i16, i16* %769, align 2
  store i16 %771, i16* %768, align 2
  %772 = getelementptr inbounds i16, i16* %769, i64 1
  %773 = getelementptr inbounds i16, i16* %768, i64 1
  %774 = add i64 %770, -1
  %775 = icmp eq i64 %774, 0
  br i1 %775, label %776, label %767, !llvm.loop !60

776:                                              ; preds = %767, %756
  %777 = phi i16* [ undef, %756 ], [ %773, %767 ]
  %778 = phi i16* [ %757, %756 ], [ %773, %767 ]
  %779 = phi i16* [ %758, %756 ], [ %772, %767 ]
  %780 = icmp ult i64 %762, 14
  br i1 %780, label %809, label %781

781:                                              ; preds = %776, %781
  %782 = phi i16* [ %807, %781 ], [ %778, %776 ]
  %783 = phi i16* [ %806, %781 ], [ %779, %776 ]
  %784 = load i16, i16* %783, align 2
  store i16 %784, i16* %782, align 2
  %785 = getelementptr inbounds i16, i16* %783, i64 1
  %786 = getelementptr inbounds i16, i16* %782, i64 1
  %787 = load i16, i16* %785, align 2
  store i16 %787, i16* %786, align 2
  %788 = getelementptr inbounds i16, i16* %783, i64 2
  %789 = getelementptr inbounds i16, i16* %782, i64 2
  %790 = load i16, i16* %788, align 2
  store i16 %790, i16* %789, align 2
  %791 = getelementptr inbounds i16, i16* %783, i64 3
  %792 = getelementptr inbounds i16, i16* %782, i64 3
  %793 = load i16, i16* %791, align 2
  store i16 %793, i16* %792, align 2
  %794 = getelementptr inbounds i16, i16* %783, i64 4
  %795 = getelementptr inbounds i16, i16* %782, i64 4
  %796 = load i16, i16* %794, align 2
  store i16 %796, i16* %795, align 2
  %797 = getelementptr inbounds i16, i16* %783, i64 5
  %798 = getelementptr inbounds i16, i16* %782, i64 5
  %799 = load i16, i16* %797, align 2
  store i16 %799, i16* %798, align 2
  %800 = getelementptr inbounds i16, i16* %783, i64 6
  %801 = getelementptr inbounds i16, i16* %782, i64 6
  %802 = load i16, i16* %800, align 2
  store i16 %802, i16* %801, align 2
  %803 = getelementptr inbounds i16, i16* %783, i64 7
  %804 = getelementptr inbounds i16, i16* %782, i64 7
  %805 = load i16, i16* %803, align 2
  store i16 %805, i16* %804, align 2
  %806 = getelementptr inbounds i16, i16* %783, i64 8
  %807 = getelementptr inbounds i16, i16* %782, i64 8
  %808 = icmp eq i16* %806, %632
  br i1 %808, label %809, label %781, !llvm.loop !61

809:                                              ; preds = %776, %781, %754, %653
  %810 = phi i16* [ %654, %653 ], [ %677, %754 ], [ %777, %776 ], [ %807, %781 ]
  store i16 0, i16* %810, align 2
  %811 = load i64, i64* %334, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %335, i8* nonnull align 8 %336, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %336, i8 0, i64 24, i1 false) #13
  %812 = trunc i64 %811 to i32
  store i32 %812, i32* %343, align 8
  %813 = call { %"struct.std::__1::__hash_node_base.56"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JNS_4pairIKS7_iEEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.52"* %333, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %344, %"struct.std::__1::pair.102"* nonnull dereferenceable(32) %9) #13
  %814 = load i8, i8* %346, align 1
  %815 = icmp slt i8 %814, 0
  br i1 %815, label %816, label %818

816:                                              ; preds = %809
  %817 = load i8*, i8** %347, align 8
  call void @_ZdlPv(i8* %817) #14
  br label %818

818:                                              ; preds = %809, %816
  %819 = load i8, i8* %341, align 1
  %820 = icmp slt i8 %819, 0
  br i1 %820, label %821, label %823

821:                                              ; preds = %818
  %822 = load i8*, i8** %337, align 8
  call void @_ZdlPv(i8* %822) #14
  br label %823

823:                                              ; preds = %818, %821
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %336) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %335) #13
  br label %828

824:                                              ; preds = %625
  %825 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %620, i64 5
  %826 = bitcast %"struct.std::__1::__hash_node_base.56"* %825 to i32*
  %827 = load i32, i32* %826, align 8
  call void @_ZN12OmniboxPedal13TokenSequence3AddEi(%"class.OmniboxPedal::TokenSequence"* %1, i32 %827) #13
  br label %828

828:                                              ; preds = %824, %823
  %829 = load i32, i32* %308, align 8
  br label %348

830:                                              ; preds = %428, %373, %437
  %831 = load i8, i8* %313, align 1
  %832 = icmp slt i8 %831, 0
  br i1 %832, label %833, label %836

833:                                              ; preds = %830
  %834 = bitcast %"class.std::__1::basic_string"* %311 to i8**
  %835 = load i8*, i8** %834, align 8
  call void @_ZdlPv(i8* %835) #14
  br label %836

836:                                              ; preds = %833, %830
  %837 = load i8, i8* %321, align 1
  %838 = icmp slt i8 %837, 0
  br i1 %838, label %839, label %842

839:                                              ; preds = %836
  %840 = bitcast %"class.std::__1::basic_string"* %291 to i8**
  %841 = load i8*, i8** %840, align 8
  call void @_ZdlPv(i8* %841) #14
  br label %842

842:                                              ; preds = %836, %839
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %284) #13
  br label %843

843:                                              ; preds = %842, %282
  ret void
}

declare void @_ZN4base4i18n19GetConfiguredLocaleEv(%"class.std::__1::basic_string.1"* sret) local_unnamed_addr #1

declare dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() local_unnamed_addr #1

declare void @_ZNK2ui14ResourceBundle27LoadLocalizedResourceStringEi(%"class.std::__1::basic_string.1"* sret, %"class.ui::ResourceBundle"*, i32) local_unnamed_addr #1

declare void @_ZN4base10JSONReader4ReadENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEim(%"class.absl::optional.174"* sret, i8*, i64, i32, i64) local_unnamed_addr #1

declare %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #1

declare i32 @_ZNK4base5Value6GetIntEv(%"class.base::Value"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare zeroext i1 @_ZNK4base5Value7GetBoolEv(%"class.base::Value"*) local_unnamed_addr #1

declare %"class.std::__1::vector.201"* @_ZNK4base5Value7GetListEv(%"class.base::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %11 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %12 = icmp eq %"class.base::Value"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.base::Value"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %17 = bitcast %"class.base::Value"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.27, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %26 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  ret %"class.base::Value"* %26
}

declare zeroext i1 @_ZNK4base5Value11GetAsStringEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.base::Value"*, %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %11 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %12 = icmp eq %"class.base::Value"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.base::Value"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %17 = bitcast %"class.base::Value"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.27, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %26 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %27 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %26, i64 1
  store %"class.base::Value"* %27, %"class.base::Value"** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK20OmniboxPedalProvider21LoadSynonymGroupValueERKN4base5ValueE(%"class.OmniboxPedal::SynonymGroup"* noalias sret, %class.OmniboxPedalProvider* nocapture readnone, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = alloca %"class.OmniboxPedal::TokenSequence", align 8
  %7 = alloca %"class.base::CheckedContiguousIterator", align 8
  %8 = alloca %"class.base::CheckedContiguousIterator", align 8
  %9 = alloca %"class.OmniboxPedal::TokenSequence", align 8
  %10 = tail call %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0), i64 8) #13
  %11 = tail call zeroext i1 @_ZNK4base5Value7GetBoolEv(%"class.base::Value"* %10) #13
  %12 = tail call %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i64 0, i64 0), i64 6) #13
  %13 = tail call zeroext i1 @_ZNK4base5Value7GetBoolEv(%"class.base::Value"* %12) #13
  %14 = tail call %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0), i64 8) #13
  %15 = tail call %"class.std::__1::vector.201"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* %14) #13
  %16 = getelementptr inbounds %"class.OmniboxPedal::SynonymGroup", %"class.OmniboxPedal::SynonymGroup"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 -86, i64 32, i1 false)
  %17 = icmp eq %"class.std::__1::vector.201"* %15, null
  br i1 %17, label %26, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %15, i64 0, i32 0, i32 1
  %20 = bitcast %"class.base::Value"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector.201"* %15 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = ashr exact i64 %24, 5
  br label %26

26:                                               ; preds = %3, %18
  %27 = phi i64 [ %25, %18 ], [ 0, %3 ]
  tail call void @_ZN12OmniboxPedal12SynonymGroupC1Ebbm(%"class.OmniboxPedal::SynonymGroup"* %0, i1 zeroext %11, i1 zeroext %13, i64 %27) #13
  %28 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #13
  %29 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %4, i64 0, i32 1
  %30 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 24, i1 false)
  br i1 %17, label %40, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %15, i64 0, i32 0, i32 0
  %33 = load %"class.base::Value"*, %"class.base::Value"** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %15, i64 0, i32 0, i32 1
  %35 = bitcast %"class.base::Value"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = ptrtoint %"class.base::Value"* %33 to i64
  %38 = sub i64 %36, %37
  %39 = ashr exact i64 %38, 5
  br label %40

40:                                               ; preds = %26, %31
  %41 = phi %"class.base::Value"* [ %33, %31 ], [ null, %26 ]
  %42 = phi i64 [ %39, %31 ], [ 0, %26 ]
  %43 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %41, i64 %42
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.base::Value"* %41, %"class.base::Value"* %41, %"class.base::Value"* %43) #13
  %44 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #13
  %45 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %5, i64 0, i32 1
  %46 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 24, i1 false)
  br i1 %17, label %57, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %15, i64 0, i32 0, i32 0
  %49 = load %"class.base::Value"*, %"class.base::Value"** %48, align 8
  %50 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %15, i64 0, i32 0, i32 1
  %51 = bitcast %"class.base::Value"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = ptrtoint %"class.base::Value"* %49 to i64
  %54 = sub i64 %52, %53
  %55 = ashr exact i64 %54, 5
  %56 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %49, i64 %55
  br label %57

57:                                               ; preds = %40, %47
  %58 = phi %"class.base::Value"* [ %49, %47 ], [ null, %40 ]
  %59 = phi %"class.base::Value"* [ %56, %47 ], [ null, %40 ]
  %60 = phi i64 [ %55, %47 ], [ 0, %40 ]
  %61 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %58, i64 %60
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %5, %"class.base::Value"* %58, %"class.base::Value"* %59, %"class.base::Value"* %61) #13
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %5) #13
  %62 = load %"class.base::Value"*, %"class.base::Value"** %29, align 8
  %63 = load %"class.base::Value"*, %"class.base::Value"** %45, align 8
  %64 = icmp eq %"class.base::Value"* %62, %63
  br i1 %64, label %75, label %65

65:                                               ; preds = %57
  %66 = bitcast %"class.OmniboxPedal::TokenSequence"* %6 to i8*
  %67 = bitcast %"class.base::CheckedContiguousIterator"* %7 to i8*
  %68 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %7, i64 0, i32 1
  %69 = bitcast %"class.base::CheckedContiguousIterator"* %8 to i8*
  %70 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %8, i64 0, i32 1
  %71 = bitcast %"class.OmniboxPedal::TokenSequence"* %6 to i8*
  %72 = bitcast %"class.base::CheckedContiguousIterator"* %7 to i8*
  %73 = bitcast %"class.base::CheckedContiguousIterator"* %7 to i8*
  %74 = bitcast %"class.base::CheckedContiguousIterator"* %8 to i8*
  br label %76

75:                                               ; preds = %117, %57
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #13
  ret void

76:                                               ; preds = %65, %117
  %77 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %4)
  %78 = call %"class.std::__1::vector.201"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* %77) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #13
  %79 = icmp eq %"class.std::__1::vector.201"* %78, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 24, i1 false)
  br i1 %79, label %94, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %78, i64 0, i32 0, i32 1
  %82 = bitcast %"class.base::Value"** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.std::__1::vector.201"* %78 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = sub i64 %83, %85
  %87 = ashr exact i64 %86, 5
  call void @_ZN12OmniboxPedal13TokenSequenceC1Em(%"class.OmniboxPedal::TokenSequence"* nonnull %6, i64 %87) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #13
  %88 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %78, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 24, i1 false)
  %89 = load %"class.base::Value"*, %"class.base::Value"** %88, align 8
  %90 = load i64, i64* %82, align 8
  %91 = ptrtoint %"class.base::Value"* %89 to i64
  %92 = sub i64 %90, %91
  %93 = ashr exact i64 %92, 5
  br label %95

94:                                               ; preds = %76
  call void @_ZN12OmniboxPedal13TokenSequenceC1Em(%"class.OmniboxPedal::TokenSequence"* nonnull %6, i64 0) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 24, i1 false)
  br label %95

95:                                               ; preds = %94, %80
  %96 = phi %"class.base::Value"* [ %89, %80 ], [ null, %94 ]
  %97 = phi i64 [ %93, %80 ], [ 0, %94 ]
  %98 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %96, i64 %97
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %7, %"class.base::Value"* %96, %"class.base::Value"* %96, %"class.base::Value"* %98) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 24, i1 false)
  br i1 %79, label %109, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %78, i64 0, i32 0, i32 0
  %101 = load %"class.base::Value"*, %"class.base::Value"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %78, i64 0, i32 0, i32 1
  %103 = bitcast %"class.base::Value"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = ptrtoint %"class.base::Value"* %101 to i64
  %106 = sub i64 %104, %105
  %107 = ashr exact i64 %106, 5
  %108 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %101, i64 %107
  br label %109

109:                                              ; preds = %95, %99
  %110 = phi %"class.base::Value"* [ %101, %99 ], [ null, %95 ]
  %111 = phi %"class.base::Value"* [ %108, %99 ], [ null, %95 ]
  %112 = phi i64 [ %107, %99 ], [ 0, %95 ]
  %113 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %110, i64 %112
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %8, %"class.base::Value"* %110, %"class.base::Value"* %111, %"class.base::Value"* %113) #13
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %7, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %8) #13
  %114 = load %"class.base::Value"*, %"class.base::Value"** %68, align 8
  %115 = load %"class.base::Value"*, %"class.base::Value"** %70, align 8
  %116 = icmp eq %"class.base::Value"* %114, %115
  br i1 %116, label %117, label %122

117:                                              ; preds = %122, %109
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #13
  call void @_ZN12OmniboxPedal13TokenSequenceC1EOS0_(%"class.OmniboxPedal::TokenSequence"* nonnull %9, %"class.OmniboxPedal::TokenSequence"* nonnull dereferenceable(24) %6) #13
  call void @_ZN12OmniboxPedal12SynonymGroup10AddSynonymENS_13TokenSequenceE(%"class.OmniboxPedal::SynonymGroup"* %0, %"class.OmniboxPedal::TokenSequence"* nonnull %9) #13
  call void @_ZN12OmniboxPedal13TokenSequenceD1Ev(%"class.OmniboxPedal::TokenSequence"* nonnull %9) #13
  call void @_ZN12OmniboxPedal13TokenSequenceD1Ev(%"class.OmniboxPedal::TokenSequence"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #13
  %118 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %4)
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %5) #13
  %119 = load %"class.base::Value"*, %"class.base::Value"** %29, align 8
  %120 = load %"class.base::Value"*, %"class.base::Value"** %45, align 8
  %121 = icmp eq %"class.base::Value"* %119, %120
  br i1 %121, label %75, label %76

122:                                              ; preds = %109, %122
  %123 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %7)
  %124 = call i32 @_ZNK4base5Value6GetIntEv(%"class.base::Value"* %123) #13
  call void @_ZN12OmniboxPedal13TokenSequence3AddEi(%"class.OmniboxPedal::TokenSequence"* nonnull %6, i32 %124) #13
  %125 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %7)
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %7, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %8) #13
  %126 = load %"class.base::Value"*, %"class.base::Value"** %68, align 8
  %127 = load %"class.base::Value"*, %"class.base::Value"** %70, align 8
  %128 = icmp eq %"class.base::Value"* %126, %127
  br i1 %128, label %117, label %122
}

declare dereferenceable(32) %"class.OmniboxPedal::SynonymGroup"* @_ZN12OmniboxPedal12SynonymGroupaSEOS0_(%"class.OmniboxPedal::SynonymGroup"*, %"class.OmniboxPedal::SynonymGroup"* dereferenceable(32)) local_unnamed_addr #1

declare i64 @_ZNK4base5Value10FindIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN17OmniboxFieldTrial21IsPedalsBatch2EnabledEv() local_unnamed_addr #1

declare zeroext i1 @_ZN17OmniboxFieldTrial31IsPedalsBatch2NonEnglishEnabledEv() local_unnamed_addr #1

declare %"class.base::Value"* @_ZNK4base5Value11FindDictKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN12OmniboxPedal15SetLabelStringsERKN4base5ValueE(%class.OmniboxPedal*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1

declare %"class.std::__1::basic_string.1"* @_ZNK4base5Value13FindStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN12OmniboxPedal16SetNavigationUrlERK4GURL(%class.OmniboxPedal*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #2

declare void @_ZN12OmniboxPedal15AddSynonymGroupEONS_12SynonymGroupE(%class.OmniboxPedal*, %"class.OmniboxPedal::SynonymGroup"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20OmniboxPedalProvider22LoadSynonymGroupStringEbbNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.OmniboxPedal::SynonymGroup"* noalias sret, %class.OmniboxPedalProvider*, i1 zeroext, i1 zeroext, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::StringTokenizerT", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.OmniboxPedal::TokenSequence", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.OmniboxPedal::TokenSequence", align 8
  %11 = getelementptr inbounds %"class.OmniboxPedal::SynonymGroup", %"class.OmniboxPedal::SynonymGroup"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 -86, i64 32, i1 false)
  tail call void @_ZN12OmniboxPedal12SynonymGroupC1Ebbm(%"class.OmniboxPedal::SynonymGroup"* %0, i1 zeroext %2, i1 zeroext %3, i64 0) #13
  %12 = bitcast %"class.base::StringTokenizerT"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %12) #13
  %13 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %6, i64 0, i32 6
  %14 = bitcast i32* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  %15 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #13
  %16 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  store i8 1, i8* %17, align 1
  %18 = bitcast %"class.std::__1::basic_string"* %7 to i16*
  store i16 44, i16* %18, align 8
  %19 = getelementptr inbounds i16, i16* %18, i64 1
  store i16 0, i16* %19, align 2
  %20 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %6, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %6, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %6, i64 0, i32 2, i32 0
  %23 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %6, i64 0, i32 3, i32 0
  %24 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %6, i64 0, i32 4
  %25 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %25, i64 0, i32 1, i32 1
  %27 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %6, i64 0, i32 4
  %28 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 48, i1 false) #13
  %29 = load i8, i8* %26, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  %36 = zext i8 %29 to i64
  %37 = select i1 %30, i16* %32, i16* %35
  %38 = select i1 %30, i64 %34, i64 %36
  %39 = getelementptr inbounds i16, i16* %37, i64 %38
  store i16* %37, i16** %20, align 8
  store i16* %37, i16** %21, align 8
  store i16* %37, i16** %22, align 8
  store i16* %39, i16** %23, align 8
  %40 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %24, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #13
  %41 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %6, i64 0, i32 6
  store i32 0, i32* %41, align 8
  %42 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %6, i64 0, i32 7
  store i8 1, i8* %42, align 4
  %43 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %6, i64 0, i32 9
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %5
  %48 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  %49 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %49) #14
  br label %50

50:                                               ; preds = %5, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #13
  %51 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %6, i64 0, i32 5
  %52 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %52, i64 0, i32 1, i32 1
  %54 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %6, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %6, i64 0, i32 2
  %56 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %6, i64 0, i32 1
  %57 = bitcast %"class.std::__1::__wrap_iter.103"* %55 to i64*
  %58 = bitcast %"class.std::__1::__wrap_iter.103"* %56 to i64*
  %59 = getelementptr inbounds %"class.std::__1::__wrap_iter.103", %"class.std::__1::__wrap_iter.103"* %55, i64 0, i32 0
  %60 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %60, i64 0, i32 1, i32 1
  %62 = bitcast %"class.std::__1::basic_string"* %24 to i16*
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %6, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = bitcast %"class.OmniboxPedal::TokenSequence"* %8 to i8*
  %66 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %67 = bitcast %"class.std::__1::basic_string"* %9 to i8**
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %70, i64 0, i32 1, i32 1
  %72 = bitcast %"class.std::__1::basic_string"* %9 to i16*
  %73 = bitcast %"class.OmniboxPedal::TokenSequence"* %8 to i8*
  br label %74

74:                                               ; preds = %342, %50
  %75 = load i8, i8* %53, align 1
  %76 = icmp slt i8 %75, 0
  %77 = load i64, i64* %54, align 8
  %78 = zext i8 %75 to i64
  %79 = select i1 %76, i64 %77, i64 %78
  %80 = icmp eq i64 %79, 0
  %81 = load i32, i32* %41, align 8
  %82 = icmp eq i32 %81, 0
  %83 = and i1 %80, %82
  br i1 %83, label %84, label %154

84:                                               ; preds = %74
  store i8 0, i8* %42, align 4
  %85 = load i64, i64* %57, align 8
  store i64 %85, i64* %58, align 8
  %86 = inttoptr i64 %85 to i16*
  %87 = load i16*, i16** %23, align 8
  %88 = icmp eq i16* %87, %86
  br i1 %88, label %99, label %89

89:                                               ; preds = %84
  %90 = load i8, i8* %61, align 1
  %91 = icmp slt i8 %90, 0
  %92 = zext i8 %90 to i64
  %93 = load i16*, i16** %63, align 8
  %94 = load i64, i64* %64, align 8
  %95 = select i1 %91, i16* %93, i16* %62
  %96 = select i1 %91, i64 %94, i64 %92
  %97 = icmp eq i64 %96, 0
  %98 = ptrtoint i16* %95 to i64
  br label %100

99:                                               ; preds = %84, %129
  store i8 1, i8* %42, align 4
  br label %345

100:                                              ; preds = %129, %89
  %101 = phi i16* [ %86, %89 ], [ %102, %129 ]
  %102 = getelementptr inbounds i16, i16* %101, i64 1
  store i16* %102, i16** %59, align 8
  %103 = load i16, i16* %101, align 2
  %104 = ptrtoint i16* %102 to i64
  br i1 %97, label %120, label %105

105:                                              ; preds = %100, %110
  %106 = phi i64 [ %112, %110 ], [ %96, %100 ]
  %107 = phi i16* [ %111, %110 ], [ %95, %100 ]
  %108 = load i16, i16* %107, align 2
  %109 = icmp eq i16 %108, %103
  br i1 %109, label %114, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds i16, i16* %107, i64 1
  %112 = add i64 %106, -1
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %120, label %105

114:                                              ; preds = %105
  %115 = icmp eq i16* %107, null
  %116 = ptrtoint i16* %107 to i64
  %117 = sub i64 %116, %98
  %118 = icmp eq i64 %117, -2
  %119 = or i1 %115, %118
  br i1 %119, label %120, label %129

120:                                              ; preds = %110, %114, %100
  %121 = load i32, i32* %43, align 8
  %122 = icmp eq i32 %121, 1
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  switch i16 %103, label %124 [
    i16 32, label %129
    i16 13, label %129
    i16 10, label %129
    i16 9, label %129
    i16 12, label %129
  ]

124:                                              ; preds = %123, %120
  %125 = phi i1 [ true, %123 ], [ false, %120 ]
  %126 = icmp eq i16* %102, %87
  br i1 %126, label %156, label %127

127:                                              ; preds = %124
  %128 = ptrtoint i16* %95 to i64
  br label %131

129:                                              ; preds = %123, %123, %123, %123, %123, %114
  store i64 %104, i64* %58, align 8
  %130 = icmp eq i16* %87, %102
  br i1 %130, label %99, label %100

131:                                              ; preds = %127, %151
  %132 = phi i16* [ %152, %151 ], [ %102, %127 ]
  %133 = load i16, i16* %132, align 2
  br i1 %97, label %149, label %134

134:                                              ; preds = %131, %139
  %135 = phi i64 [ %141, %139 ], [ %96, %131 ]
  %136 = phi i16* [ %140, %139 ], [ %95, %131 ]
  %137 = load i16, i16* %136, align 2
  %138 = icmp eq i16 %137, %133
  br i1 %138, label %143, label %139

139:                                              ; preds = %134
  %140 = getelementptr inbounds i16, i16* %136, i64 1
  %141 = add i64 %135, -1
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %149, label %134

143:                                              ; preds = %134
  %144 = icmp eq i16* %136, null
  %145 = ptrtoint i16* %136 to i64
  %146 = sub i64 %145, %128
  %147 = icmp eq i64 %146, -2
  %148 = or i1 %144, %147
  br i1 %148, label %149, label %156

149:                                              ; preds = %139, %143, %131
  br i1 %125, label %150, label %151

150:                                              ; preds = %149
  switch i16 %133, label %151 [
    i16 32, label %156
    i16 13, label %156
    i16 10, label %156
    i16 9, label %156
    i16 12, label %156
  ]

151:                                              ; preds = %150, %149
  %152 = getelementptr inbounds i16, i16* %132, i64 1
  store i16* %152, i16** %59, align 8
  %153 = icmp eq i16* %152, %87
  br i1 %153, label %156, label %131

154:                                              ; preds = %74
  %155 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS1_11__wrap_iterIPKDsEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %6) #13
  br i1 %155, label %156, label %343

156:                                              ; preds = %150, %150, %150, %150, %150, %143, %151, %124, %154
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 24, i1 false)
  call void @_ZN12OmniboxPedal13TokenSequenceC1Em(%"class.OmniboxPedal::TokenSequence"* nonnull %8, i64 0) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #13
  %157 = load i16*, i16** %21, align 8, !noalias !62
  %158 = ptrtoint i16* %157 to i64
  %159 = load i16*, i16** %22, align 8, !noalias !62
  %160 = ptrtoint i16* %159 to i64
  %161 = sub i64 %160, %158
  %162 = ashr exact i64 %161, 1
  %163 = icmp ugt i64 %162, 9223372036854775791
  br i1 %163, label %164, label %166

164:                                              ; preds = %156
  %165 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %165) #15
  unreachable

166:                                              ; preds = %156
  %167 = icmp ult i64 %162, 11
  br i1 %167, label %168, label %170

168:                                              ; preds = %166
  %169 = trunc i64 %162 to i8
  store i8 %169, i8* %71, align 1, !alias.scope !62
  br label %180

170:                                              ; preds = %166
  %171 = add nuw nsw i64 %162, 8
  %172 = and i64 %171, -8
  %173 = icmp slt i64 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %170
  call void @abort() #15
  unreachable

175:                                              ; preds = %170
  %176 = shl i64 %172, 1
  %177 = call i8* @_Znwm(i64 %176) #14
  %178 = bitcast i8* %177 to i16*
  store i8* %177, i8** %67, align 8, !alias.scope !62
  %179 = or i64 %172, -9223372036854775808
  store i64 %179, i64* %68, align 8, !alias.scope !62
  store i64 %162, i64* %69, align 8, !alias.scope !62
  br label %180

180:                                              ; preds = %175, %168
  %181 = phi i16* [ %72, %168 ], [ %178, %175 ]
  %182 = icmp eq i16* %157, %159
  br i1 %182, label %336, label %183

183:                                              ; preds = %180
  %184 = getelementptr i16, i16* %159, i64 -1
  %185 = ptrtoint i16* %184 to i64
  %186 = sub i64 %185, %158
  %187 = lshr i64 %186, 1
  %188 = add nuw i64 %187, 1
  %189 = icmp ult i64 %188, 16
  br i1 %189, label %283, label %190

190:                                              ; preds = %183
  %191 = getelementptr i16, i16* %181, i64 1
  %192 = getelementptr i16, i16* %159, i64 -1
  %193 = ptrtoint i16* %192 to i64
  %194 = sub i64 %193, %158
  %195 = lshr i64 %194, 1
  %196 = getelementptr i16, i16* %191, i64 %195
  %197 = getelementptr i16, i16* %157, i64 1
  %198 = getelementptr i16, i16* %197, i64 %195
  %199 = icmp ult i16* %181, %198
  %200 = icmp ult i16* %157, %196
  %201 = and i1 %199, %200
  br i1 %201, label %283, label %202

202:                                              ; preds = %190
  %203 = and i64 %188, -16
  %204 = getelementptr i16, i16* %181, i64 %203
  %205 = getelementptr i16, i16* %157, i64 %203
  %206 = add i64 %203, -16
  %207 = lshr exact i64 %206, 4
  %208 = add nuw nsw i64 %207, 1
  %209 = and i64 %208, 3
  %210 = icmp ult i64 %206, 48
  br i1 %210, label %262, label %211

211:                                              ; preds = %202
  %212 = sub nsw i64 %208, %209
  br label %213

213:                                              ; preds = %213, %211
  %214 = phi i64 [ 0, %211 ], [ %259, %213 ]
  %215 = phi i64 [ %212, %211 ], [ %260, %213 ]
  %216 = getelementptr i16, i16* %181, i64 %214
  %217 = getelementptr i16, i16* %157, i64 %214
  %218 = bitcast i16* %217 to <8 x i16>*
  %219 = load <8 x i16>, <8 x i16>* %218, align 2, !alias.scope !65
  %220 = getelementptr i16, i16* %217, i64 8
  %221 = bitcast i16* %220 to <8 x i16>*
  %222 = load <8 x i16>, <8 x i16>* %221, align 2, !alias.scope !65
  %223 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %219, <8 x i16>* %223, align 2, !alias.scope !68, !noalias !65
  %224 = getelementptr i16, i16* %216, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  store <8 x i16> %222, <8 x i16>* %225, align 2, !alias.scope !68, !noalias !65
  %226 = or i64 %214, 16
  %227 = getelementptr i16, i16* %181, i64 %226
  %228 = getelementptr i16, i16* %157, i64 %226
  %229 = bitcast i16* %228 to <8 x i16>*
  %230 = load <8 x i16>, <8 x i16>* %229, align 2, !alias.scope !65
  %231 = getelementptr i16, i16* %228, i64 8
  %232 = bitcast i16* %231 to <8 x i16>*
  %233 = load <8 x i16>, <8 x i16>* %232, align 2, !alias.scope !65
  %234 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %230, <8 x i16>* %234, align 2, !alias.scope !68, !noalias !65
  %235 = getelementptr i16, i16* %227, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  store <8 x i16> %233, <8 x i16>* %236, align 2, !alias.scope !68, !noalias !65
  %237 = or i64 %214, 32
  %238 = getelementptr i16, i16* %181, i64 %237
  %239 = getelementptr i16, i16* %157, i64 %237
  %240 = bitcast i16* %239 to <8 x i16>*
  %241 = load <8 x i16>, <8 x i16>* %240, align 2, !alias.scope !65
  %242 = getelementptr i16, i16* %239, i64 8
  %243 = bitcast i16* %242 to <8 x i16>*
  %244 = load <8 x i16>, <8 x i16>* %243, align 2, !alias.scope !65
  %245 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %241, <8 x i16>* %245, align 2, !alias.scope !68, !noalias !65
  %246 = getelementptr i16, i16* %238, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %244, <8 x i16>* %247, align 2, !alias.scope !68, !noalias !65
  %248 = or i64 %214, 48
  %249 = getelementptr i16, i16* %181, i64 %248
  %250 = getelementptr i16, i16* %157, i64 %248
  %251 = bitcast i16* %250 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !65
  %253 = getelementptr i16, i16* %250, i64 8
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !65
  %256 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %252, <8 x i16>* %256, align 2, !alias.scope !68, !noalias !65
  %257 = getelementptr i16, i16* %249, i64 8
  %258 = bitcast i16* %257 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %258, align 2, !alias.scope !68, !noalias !65
  %259 = add i64 %214, 64
  %260 = add i64 %215, -4
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %262, label %213, !llvm.loop !70

262:                                              ; preds = %213, %202
  %263 = phi i64 [ 0, %202 ], [ %259, %213 ]
  %264 = icmp eq i64 %209, 0
  br i1 %264, label %281, label %265

265:                                              ; preds = %262, %265
  %266 = phi i64 [ %278, %265 ], [ %263, %262 ]
  %267 = phi i64 [ %279, %265 ], [ %209, %262 ]
  %268 = getelementptr i16, i16* %181, i64 %266
  %269 = getelementptr i16, i16* %157, i64 %266
  %270 = bitcast i16* %269 to <8 x i16>*
  %271 = load <8 x i16>, <8 x i16>* %270, align 2, !alias.scope !65
  %272 = getelementptr i16, i16* %269, i64 8
  %273 = bitcast i16* %272 to <8 x i16>*
  %274 = load <8 x i16>, <8 x i16>* %273, align 2, !alias.scope !65
  %275 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %271, <8 x i16>* %275, align 2, !alias.scope !68, !noalias !65
  %276 = getelementptr i16, i16* %268, i64 8
  %277 = bitcast i16* %276 to <8 x i16>*
  store <8 x i16> %274, <8 x i16>* %277, align 2, !alias.scope !68, !noalias !65
  %278 = add i64 %266, 16
  %279 = add i64 %267, -1
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %281, label %265, !llvm.loop !71

281:                                              ; preds = %265, %262
  %282 = icmp eq i64 %188, %203
  br i1 %282, label %336, label %283

283:                                              ; preds = %281, %190, %183
  %284 = phi i16* [ %181, %190 ], [ %181, %183 ], [ %204, %281 ]
  %285 = phi i16* [ %157, %190 ], [ %157, %183 ], [ %205, %281 ]
  %286 = ptrtoint i16* %285 to i64
  %287 = getelementptr i16, i16* %159, i64 -1
  %288 = ptrtoint i16* %287 to i64
  %289 = sub i64 %288, %286
  %290 = lshr i64 %289, 1
  %291 = add nuw i64 %290, 1
  %292 = and i64 %291, 7
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %303, label %294

294:                                              ; preds = %283, %294
  %295 = phi i16* [ %300, %294 ], [ %284, %283 ]
  %296 = phi i16* [ %299, %294 ], [ %285, %283 ]
  %297 = phi i64 [ %301, %294 ], [ %292, %283 ]
  %298 = load i16, i16* %296, align 2
  store i16 %298, i16* %295, align 2
  %299 = getelementptr inbounds i16, i16* %296, i64 1
  %300 = getelementptr inbounds i16, i16* %295, i64 1
  %301 = add i64 %297, -1
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %303, label %294, !llvm.loop !72

303:                                              ; preds = %294, %283
  %304 = phi i16* [ undef, %283 ], [ %300, %294 ]
  %305 = phi i16* [ %284, %283 ], [ %300, %294 ]
  %306 = phi i16* [ %285, %283 ], [ %299, %294 ]
  %307 = icmp ult i64 %289, 14
  br i1 %307, label %336, label %308

308:                                              ; preds = %303, %308
  %309 = phi i16* [ %334, %308 ], [ %305, %303 ]
  %310 = phi i16* [ %333, %308 ], [ %306, %303 ]
  %311 = load i16, i16* %310, align 2
  store i16 %311, i16* %309, align 2
  %312 = getelementptr inbounds i16, i16* %310, i64 1
  %313 = getelementptr inbounds i16, i16* %309, i64 1
  %314 = load i16, i16* %312, align 2
  store i16 %314, i16* %313, align 2
  %315 = getelementptr inbounds i16, i16* %310, i64 2
  %316 = getelementptr inbounds i16, i16* %309, i64 2
  %317 = load i16, i16* %315, align 2
  store i16 %317, i16* %316, align 2
  %318 = getelementptr inbounds i16, i16* %310, i64 3
  %319 = getelementptr inbounds i16, i16* %309, i64 3
  %320 = load i16, i16* %318, align 2
  store i16 %320, i16* %319, align 2
  %321 = getelementptr inbounds i16, i16* %310, i64 4
  %322 = getelementptr inbounds i16, i16* %309, i64 4
  %323 = load i16, i16* %321, align 2
  store i16 %323, i16* %322, align 2
  %324 = getelementptr inbounds i16, i16* %310, i64 5
  %325 = getelementptr inbounds i16, i16* %309, i64 5
  %326 = load i16, i16* %324, align 2
  store i16 %326, i16* %325, align 2
  %327 = getelementptr inbounds i16, i16* %310, i64 6
  %328 = getelementptr inbounds i16, i16* %309, i64 6
  %329 = load i16, i16* %327, align 2
  store i16 %329, i16* %328, align 2
  %330 = getelementptr inbounds i16, i16* %310, i64 7
  %331 = getelementptr inbounds i16, i16* %309, i64 7
  %332 = load i16, i16* %330, align 2
  store i16 %332, i16* %331, align 2
  %333 = getelementptr inbounds i16, i16* %310, i64 8
  %334 = getelementptr inbounds i16, i16* %309, i64 8
  %335 = icmp eq i16* %333, %159
  br i1 %335, label %336, label %308, !llvm.loop !73

336:                                              ; preds = %303, %308, %281, %180
  %337 = phi i16* [ %181, %180 ], [ %204, %281 ], [ %304, %303 ], [ %334, %308 ]
  store i16 0, i16* %337, align 2
  call void @_ZN20OmniboxPedalProvider27TokenizeAndExpandDictionaryERN12OmniboxPedal13TokenSequenceERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%class.OmniboxPedalProvider* %1, %"class.OmniboxPedal::TokenSequence"* nonnull dereferenceable(24) %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9)
  %338 = load i8, i8* %71, align 1
  %339 = icmp slt i8 %338, 0
  br i1 %339, label %340, label %342

340:                                              ; preds = %336
  %341 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %341) #14
  br label %342

342:                                              ; preds = %336, %340
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #13
  call void @_ZN12OmniboxPedal13TokenSequenceC1EOS0_(%"class.OmniboxPedal::TokenSequence"* nonnull %10, %"class.OmniboxPedal::TokenSequence"* nonnull dereferenceable(24) %8) #13
  call void @_ZN12OmniboxPedal12SynonymGroup10AddSynonymENS_13TokenSequenceE(%"class.OmniboxPedal::SynonymGroup"* %0, %"class.OmniboxPedal::TokenSequence"* nonnull %10) #13
  call void @_ZN12OmniboxPedal13TokenSequenceD1Ev(%"class.OmniboxPedal::TokenSequence"* nonnull %10) #13
  call void @_ZN12OmniboxPedal13TokenSequenceD1Ev(%"class.OmniboxPedal::TokenSequence"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #13
  br label %74

343:                                              ; preds = %154
  %344 = load i8, i8* %53, align 1
  br label %345

345:                                              ; preds = %343, %99
  %346 = phi i8 [ %344, %343 ], [ %75, %99 ]
  %347 = icmp slt i8 %346, 0
  br i1 %347, label %348, label %351

348:                                              ; preds = %345
  %349 = bitcast %"class.std::__1::basic_string"* %51 to i8**
  %350 = load i8*, i8** %349, align 8
  call void @_ZdlPv(i8* %350) #14
  br label %351

351:                                              ; preds = %348, %345
  %352 = load i8, i8* %61, align 1
  %353 = icmp slt i8 %352, 0
  br i1 %353, label %354, label %357

354:                                              ; preds = %351
  %355 = bitcast %"class.std::__1::basic_string"* %24 to i8**
  %356 = load i8*, i8** %355, align 8
  call void @_ZdlPv(i8* %356) #14
  br label %357

357:                                              ; preds = %351, %354
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %12) #13
  ret void
}

declare void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #1

declare void @_ZN12OmniboxPedal12SynonymGroup16EraseIgnoreGroupERKS0_(%"class.OmniboxPedal::SynonymGroup"*, %"class.OmniboxPedal::SynonymGroup"* dereferenceable(32)) local_unnamed_addr #1

declare zeroext i1 @_ZNK12OmniboxPedal12SynonymGroup7IsValidEv(%"class.OmniboxPedal::SynonymGroup"*) local_unnamed_addr #1

declare void @_ZN12OmniboxPedal12SynonymGroup10AddSynonymENS_13TokenSequenceE(%"class.OmniboxPedal::SynonymGroup"*, %"class.OmniboxPedal::TokenSequence"*) local_unnamed_addr #1

declare void @_ZN12OmniboxPedal13TokenSequenceC1EOS0_(%"class.OmniboxPedal::TokenSequence"*, %"class.OmniboxPedal::TokenSequence"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN7metrics30OmniboxEventProto_ProviderInfoC2EPN6google8protobuf5ArenaE(%"class.metrics::OmniboxEventProto_ProviderInfo"*, %"class.google::protobuf::Arena"*) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"*, %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.base::Value"*, align 8
  %8 = alloca %"class.base::Value"*, align 8
  %9 = alloca %"class.base::Value"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"class.base::Value"* %1, %"class.base::Value"** %7, align 8
  store %"class.base::Value"* %2, %"class.base::Value"** %8, align 8
  store %"class.base::Value"* %3, %"class.base::Value"** %9, align 8
  %14 = ptrtoint %"class.base::Value"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint %"class.base::Value"* %2 to i64
  %18 = bitcast %"class.base::Value"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint %"class.base::Value"* %3 to i64
  %21 = bitcast %"class.base::Value"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"class.base::Value"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"class.base::Value"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %30 = bitcast %"class.base::Value"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0), i8* %29, i8* %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %43 = load %"class.base::Value"*, %"class.base::Value"** %9, align 8
  %44 = icmp ugt %"class.base::Value"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"class.base::Value"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %49 = bitcast %"class.base::Value"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24, i64 0, i64 0), i8* %48, i8* %50) #13
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #13
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #13
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  ret void
}

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #8 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #13
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load %"class.base::Value"*, %"class.base::Value"** %11, align 8
  %15 = load %"class.base::Value"*, %"class.base::Value"** %12, align 8
  %16 = icmp eq %"class.base::Value"* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.25, i64 0, i64 0), i8* %20, i8* %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #13
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #13
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load %"class.base::Value"*, %"class.base::Value"** %32, align 8
  %36 = load %"class.base::Value"*, %"class.base::Value"** %33, align 8
  %37 = icmp eq %"class.base::Value"* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast %"class.base::Value"** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %42 = bitcast %"class.base::Value"** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.26, i64 0, i64 0), i8* %41, i8* %43) #13
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #13
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #13
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"* dereferenceable(24), i64, i64, %"class.std::__1::allocator.8"* dereferenceable(1)) unnamed_addr #1

declare void @_ZN6google8protobuf13RepeatedFieldIjE7ReserveEi(%"class.google::protobuf::RepeatedField"*, i32) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare dereferenceable(96) %"struct.OmniboxAction::LabelStrings"* @_ZNK13OmniboxAction15GetLabelStringsEv(%class.OmniboxAction*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeI14OmniboxPedalId13scoped_refptrI12OmniboxPedalEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE(%"class.std::__1::unique_ptr.241"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #13, !range !15
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.41", %"class.std::__1::__compressed_pair.41"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.241"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.241"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.44"** %98 to %"class.std::__1::__compressed_pair.41"**
  store %"class.std::__1::__compressed_pair.41"* %30, %"class.std::__1::__compressed_pair.41"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.241"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7metrics30OmniboxEventProto_ProviderInfoENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.79"*, %"class.metrics::OmniboxEventProto_ProviderInfo"* dereferenceable(72)) local_unnamed_addr #8 comdat align 2 {
  %3 = alloca %"struct.std::__1::__split_buffer", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.79", %"class.std::__1::vector.79"* %0, i64 0, i32 0, i32 2
  %5 = bitcast %"struct.std::__1::__split_buffer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %3, i64 0, i32 2
  %9 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %3, i64 0, i32 3, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %3, i64 0, i32 3, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector.79", %"class.std::__1::vector.79"* %0, i64 0, i32 0, i32 1
  %12 = bitcast %"class.metrics::OmniboxEventProto_ProviderInfo"** %11 to i64*
  %13 = bitcast %"struct.std::__1::__split_buffer"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 40, i1 false)
  %14 = load i64, i64* %12, align 8
  %15 = bitcast %"class.std::__1::vector.79"* %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = sdiv exact i64 %17, 72
  %19 = add nsw i64 %18, 1
  %20 = icmp ugt i64 %19, 256204778801521550
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = bitcast %"class.std::__1::vector.79"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %22) #15
  unreachable

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.std::__1::vector.79", %"class.std::__1::vector.79"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %"class.metrics::OmniboxEventProto_ProviderInfo"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %26, %16
  %28 = sdiv exact i64 %27, 72
  %29 = icmp ult i64 %28, 128102389400760775
  br i1 %29, label %32, label %30

30:                                               ; preds = %23
  store %"class.metrics::OmniboxEventProto_ProviderInfo"* null, %"class.metrics::OmniboxEventProto_ProviderInfo"** %9, align 8
  %31 = bitcast %"class.std::__1::allocator.85"** %10 to %"class.std::__1::__compressed_pair.82"**
  store %"class.std::__1::__compressed_pair.82"* %4, %"class.std::__1::__compressed_pair.82"** %31, align 8
  br label %38

32:                                               ; preds = %23
  %33 = shl nsw i64 %28, 1
  %34 = icmp ult i64 %33, %19
  %35 = select i1 %34, i64 %19, i64 %33
  store %"class.metrics::OmniboxEventProto_ProviderInfo"* null, %"class.metrics::OmniboxEventProto_ProviderInfo"** %9, align 8
  %36 = bitcast %"class.std::__1::allocator.85"** %10 to %"class.std::__1::__compressed_pair.82"**
  store %"class.std::__1::__compressed_pair.82"* %4, %"class.std::__1::__compressed_pair.82"** %36, align 8
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %32, %30
  %39 = phi i64 [ 256204778801521550, %30 ], [ %35, %32 ]
  %40 = mul i64 %39, 72
  %41 = tail call i8* @_Znwm(i64 %40) #14
  %42 = bitcast i8* %41 to %"class.metrics::OmniboxEventProto_ProviderInfo"*
  br label %43

43:                                               ; preds = %32, %38
  %44 = phi i64 [ %39, %38 ], [ 0, %32 ]
  %45 = phi %"class.metrics::OmniboxEventProto_ProviderInfo"* [ %42, %38 ], [ null, %32 ]
  store %"class.metrics::OmniboxEventProto_ProviderInfo"* %45, %"class.metrics::OmniboxEventProto_ProviderInfo"** %6, align 8
  %46 = getelementptr inbounds %"class.metrics::OmniboxEventProto_ProviderInfo", %"class.metrics::OmniboxEventProto_ProviderInfo"* %45, i64 %18
  store %"class.metrics::OmniboxEventProto_ProviderInfo"* %46, %"class.metrics::OmniboxEventProto_ProviderInfo"** %8, align 8
  store %"class.metrics::OmniboxEventProto_ProviderInfo"* %46, %"class.metrics::OmniboxEventProto_ProviderInfo"** %7, align 8
  %47 = getelementptr inbounds %"class.metrics::OmniboxEventProto_ProviderInfo", %"class.metrics::OmniboxEventProto_ProviderInfo"* %45, i64 %44
  store %"class.metrics::OmniboxEventProto_ProviderInfo"* %47, %"class.metrics::OmniboxEventProto_ProviderInfo"** %9, align 8
  tail call void @_ZN7metrics30OmniboxEventProto_ProviderInfoC2EPN6google8protobuf5ArenaE(%"class.metrics::OmniboxEventProto_ProviderInfo"* %46, %"class.google::protobuf::Arena"* null) #13
  %48 = getelementptr inbounds %"class.metrics::OmniboxEventProto_ProviderInfo", %"class.metrics::OmniboxEventProto_ProviderInfo"* %45, i64 %18, i32 0, i32 1
  %49 = bitcast %"class.google::protobuf::internal::InternalMetadata"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, 1
  %52 = icmp eq i64 %51, 0
  %53 = and i64 %50, -2
  br i1 %52, label %58, label %54, !prof !16

54:                                               ; preds = %43
  %55 = inttoptr i64 %53 to %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"*
  %56 = getelementptr inbounds %"struct.google::protobuf::internal::InternalMetadata::ContainerBase", %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"* %55, i64 0, i32 0
  %57 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %56, align 8
  br label %60

58:                                               ; preds = %43
  %59 = inttoptr i64 %53 to %"class.google::protobuf::Arena"*
  br label %60

60:                                               ; preds = %58, %54
  %61 = phi %"class.google::protobuf::Arena"* [ %57, %54 ], [ %59, %58 ]
  %62 = getelementptr inbounds %"class.metrics::OmniboxEventProto_ProviderInfo", %"class.metrics::OmniboxEventProto_ProviderInfo"* %1, i64 0, i32 0, i32 1
  %63 = bitcast %"class.google::protobuf::internal::InternalMetadata"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = and i64 %64, 1
  %66 = icmp eq i64 %65, 0
  %67 = and i64 %64, -2
  br i1 %66, label %72, label %68, !prof !16

68:                                               ; preds = %60
  %69 = inttoptr i64 %67 to %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"*
  %70 = getelementptr inbounds %"struct.google::protobuf::internal::InternalMetadata::ContainerBase", %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"* %69, i64 0, i32 0
  %71 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %70, align 8
  br label %74

72:                                               ; preds = %60
  %73 = inttoptr i64 %67 to %"class.google::protobuf::Arena"*
  br label %74

74:                                               ; preds = %72, %68
  %75 = phi %"class.google::protobuf::Arena"* [ %71, %68 ], [ %73, %72 ]
  %76 = icmp eq %"class.google::protobuf::Arena"* %61, %75
  br i1 %76, label %77, label %80

77:                                               ; preds = %74
  %78 = icmp eq %"class.metrics::OmniboxEventProto_ProviderInfo"* %46, %1
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  tail call void @_ZN7metrics30OmniboxEventProto_ProviderInfo12InternalSwapEPS0_(%"class.metrics::OmniboxEventProto_ProviderInfo"* %46, %"class.metrics::OmniboxEventProto_ProviderInfo"* %1) #13
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN7metrics30OmniboxEventProto_ProviderInfo8CopyFromERKS0_(%"class.metrics::OmniboxEventProto_ProviderInfo"* %46, %"class.metrics::OmniboxEventProto_ProviderInfo"* dereferenceable(72) %1) #13
  br label %81

81:                                               ; preds = %77, %79, %80
  %82 = getelementptr inbounds %"class.metrics::OmniboxEventProto_ProviderInfo", %"class.metrics::OmniboxEventProto_ProviderInfo"* %46, i64 1
  store %"class.metrics::OmniboxEventProto_ProviderInfo"* %82, %"class.metrics::OmniboxEventProto_ProviderInfo"** %8, align 8
  call void @_ZNSt3__16vectorIN7metrics30OmniboxEventProto_ProviderInfoENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(%"class.std::__1::vector.79"* %0, %"struct.std::__1::__split_buffer"* nonnull dereferenceable(40) %3)
  %83 = load %"class.metrics::OmniboxEventProto_ProviderInfo"*, %"class.metrics::OmniboxEventProto_ProviderInfo"** %7, align 8
  %84 = load %"class.metrics::OmniboxEventProto_ProviderInfo"*, %"class.metrics::OmniboxEventProto_ProviderInfo"** %8, align 8
  %85 = icmp eq %"class.metrics::OmniboxEventProto_ProviderInfo"* %84, %83
  br i1 %85, label %91, label %86

86:                                               ; preds = %81, %86
  %87 = phi %"class.metrics::OmniboxEventProto_ProviderInfo"* [ %89, %86 ], [ %84, %81 ]
  %88 = getelementptr inbounds %"class.metrics::OmniboxEventProto_ProviderInfo", %"class.metrics::OmniboxEventProto_ProviderInfo"* %87, i64 -1
  store %"class.metrics::OmniboxEventProto_ProviderInfo"* %88, %"class.metrics::OmniboxEventProto_ProviderInfo"** %8, align 8
  call void @_ZN7metrics30OmniboxEventProto_ProviderInfoD1Ev(%"class.metrics::OmniboxEventProto_ProviderInfo"* %88) #13
  %89 = load %"class.metrics::OmniboxEventProto_ProviderInfo"*, %"class.metrics::OmniboxEventProto_ProviderInfo"** %8, align 8
  %90 = icmp eq %"class.metrics::OmniboxEventProto_ProviderInfo"* %89, %83
  br i1 %90, label %91, label %86

91:                                               ; preds = %86, %81
  %92 = load %"class.metrics::OmniboxEventProto_ProviderInfo"*, %"class.metrics::OmniboxEventProto_ProviderInfo"** %6, align 8
  %93 = icmp eq %"class.metrics::OmniboxEventProto_ProviderInfo"* %92, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %91
  %95 = bitcast %"class.metrics::OmniboxEventProto_ProviderInfo"* %92 to i8*
  call void @_ZdlPv(i8* %95) #14
  br label %96

96:                                               ; preds = %91, %94
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #13
  ret void
}

declare void @_ZN7metrics30OmniboxEventProto_ProviderInfo12InternalSwapEPS0_(%"class.metrics::OmniboxEventProto_ProviderInfo"*, %"class.metrics::OmniboxEventProto_ProviderInfo"*) local_unnamed_addr #1

declare void @_ZN7metrics30OmniboxEventProto_ProviderInfo8CopyFromERKS0_(%"class.metrics::OmniboxEventProto_ProviderInfo"*, %"class.metrics::OmniboxEventProto_ProviderInfo"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7metrics30OmniboxEventProto_ProviderInfoENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(%"class.std::__1::vector.79"*, %"struct.std::__1::__split_buffer"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.79", %"class.std::__1::vector.79"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.metrics::OmniboxEventProto_ProviderInfo"*, %"class.metrics::OmniboxEventProto_ProviderInfo"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.79", %"class.std::__1::vector.79"* %0, i64 0, i32 0, i32 1
  %6 = load %"class.metrics::OmniboxEventProto_ProviderInfo"*, %"class.metrics::OmniboxEventProto_ProviderInfo"** %5, align 8
  %7 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %1, i64 0, i32 1
  %8 = icmp eq %"class.metrics::OmniboxEventProto_ProviderInfo"* %6, %4
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = ptrtoint %"class.metrics::OmniboxEventProto_ProviderInfo"* %4 to i64
  %11 = bitcast %"class.metrics::OmniboxEventProto_ProviderInfo"** %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.79"* %0 to i64*
  br label %63

14:                                               ; preds = %2
  %15 = load %"class.metrics::OmniboxEventProto_ProviderInfo"*, %"class.metrics::OmniboxEventProto_ProviderInfo"** %7, align 8
  br label %16

16:                                               ; preds = %54, %14
  %17 = phi %"class.metrics::OmniboxEventProto_ProviderInfo"* [ %56, %54 ], [ %15, %14 ]
  %18 = phi %"class.metrics::OmniboxEventProto_ProviderInfo"* [ %20, %54 ], [ %6, %14 ]
  %19 = getelementptr inbounds %"class.metrics::OmniboxEventProto_ProviderInfo", %"class.metrics::OmniboxEventProto_ProviderInfo"* %17, i64 -1
  %20 = getelementptr inbounds %"class.metrics::OmniboxEventProto_ProviderInfo", %"class.metrics::OmniboxEventProto_ProviderInfo"* %18, i64 -1
  tail call void @_ZN7metrics30OmniboxEventProto_ProviderInfoC2EPN6google8protobuf5ArenaE(%"class.metrics::OmniboxEventProto_ProviderInfo"* %19, %"class.google::protobuf::Arena"* null) #13
  %21 = getelementptr inbounds %"class.metrics::OmniboxEventProto_ProviderInfo", %"class.metrics::OmniboxEventProto_ProviderInfo"* %17, i64 -1, i32 0, i32 1
  %22 = bitcast %"class.google::protobuf::internal::InternalMetadata"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, 1
  %25 = icmp eq i64 %24, 0
  %26 = and i64 %23, -2
  br i1 %25, label %31, label %27, !prof !16

27:                                               ; preds = %16
  %28 = inttoptr i64 %26 to %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"*
  %29 = getelementptr inbounds %"struct.google::protobuf::internal::InternalMetadata::ContainerBase", %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"* %28, i64 0, i32 0
  %30 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %29, align 8
  br label %33

31:                                               ; preds = %16
  %32 = inttoptr i64 %26 to %"class.google::protobuf::Arena"*
  br label %33

33:                                               ; preds = %31, %27
  %34 = phi %"class.google::protobuf::Arena"* [ %30, %27 ], [ %32, %31 ]
  %35 = getelementptr inbounds %"class.metrics::OmniboxEventProto_ProviderInfo", %"class.metrics::OmniboxEventProto_ProviderInfo"* %18, i64 -1, i32 0, i32 1
  %36 = bitcast %"class.google::protobuf::internal::InternalMetadata"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 1
  %39 = icmp eq i64 %38, 0
  %40 = and i64 %37, -2
  br i1 %39, label %45, label %41, !prof !16

41:                                               ; preds = %33
  %42 = inttoptr i64 %40 to %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"*
  %43 = getelementptr inbounds %"struct.google::protobuf::internal::InternalMetadata::ContainerBase", %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"* %42, i64 0, i32 0
  %44 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %43, align 8
  br label %47

45:                                               ; preds = %33
  %46 = inttoptr i64 %40 to %"class.google::protobuf::Arena"*
  br label %47

47:                                               ; preds = %45, %41
  %48 = phi %"class.google::protobuf::Arena"* [ %44, %41 ], [ %46, %45 ]
  %49 = icmp eq %"class.google::protobuf::Arena"* %34, %48
  br i1 %49, label %50, label %53

50:                                               ; preds = %47
  %51 = icmp eq %"class.metrics::OmniboxEventProto_ProviderInfo"* %17, %18
  br i1 %51, label %54, label %52

52:                                               ; preds = %50
  tail call void @_ZN7metrics30OmniboxEventProto_ProviderInfo12InternalSwapEPS0_(%"class.metrics::OmniboxEventProto_ProviderInfo"* %19, %"class.metrics::OmniboxEventProto_ProviderInfo"* %20) #13
  br label %54

53:                                               ; preds = %47
  tail call void @_ZN7metrics30OmniboxEventProto_ProviderInfo8CopyFromERKS0_(%"class.metrics::OmniboxEventProto_ProviderInfo"* %19, %"class.metrics::OmniboxEventProto_ProviderInfo"* dereferenceable(72) %20) #13
  br label %54

54:                                               ; preds = %53, %52, %50
  %55 = load %"class.metrics::OmniboxEventProto_ProviderInfo"*, %"class.metrics::OmniboxEventProto_ProviderInfo"** %7, align 8
  %56 = getelementptr inbounds %"class.metrics::OmniboxEventProto_ProviderInfo", %"class.metrics::OmniboxEventProto_ProviderInfo"* %55, i64 -1
  store %"class.metrics::OmniboxEventProto_ProviderInfo"* %56, %"class.metrics::OmniboxEventProto_ProviderInfo"** %7, align 8
  %57 = icmp eq %"class.metrics::OmniboxEventProto_ProviderInfo"* %20, %4
  br i1 %57, label %58, label %16

58:                                               ; preds = %54
  %59 = ptrtoint %"class.metrics::OmniboxEventProto_ProviderInfo"* %56 to i64
  %60 = bitcast %"class.std::__1::vector.79"* %0 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.metrics::OmniboxEventProto_ProviderInfo"** %7 to i64*
  br label %63

63:                                               ; preds = %9, %58
  %64 = phi i64* [ %11, %9 ], [ %62, %58 ]
  %65 = phi i64* [ %13, %9 ], [ %60, %58 ]
  %66 = phi i64 [ %12, %9 ], [ %59, %58 ]
  %67 = phi i64 [ %10, %9 ], [ %61, %58 ]
  store i64 %66, i64* %65, align 8
  store i64 %67, i64* %64, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %1, i64 0, i32 2
  %69 = bitcast %"class.metrics::OmniboxEventProto_ProviderInfo"** %5 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.metrics::OmniboxEventProto_ProviderInfo"** %68 to i64*
  %72 = load i64, i64* %71, align 8
  store i64 %72, i64* %69, align 8
  store i64 %70, i64* %71, align 8
  %73 = getelementptr inbounds %"class.std::__1::vector.79", %"class.std::__1::vector.79"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %1, i64 0, i32 3, i32 0, i32 0
  %75 = bitcast %"class.metrics::OmniboxEventProto_ProviderInfo"** %73 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.metrics::OmniboxEventProto_ProviderInfo"** %74 to i64*
  %78 = load i64, i64* %77, align 8
  store i64 %78, i64* %75, align 8
  store i64 %76, i64* %77, align 8
  %79 = load i64, i64* %64, align 8
  %80 = bitcast %"struct.std::__1::__split_buffer"* %1 to i64*
  store i64 %79, i64* %80, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

declare i64 @_ZNK12OmniboxPedal12SynonymGroup19EstimateMemoryUsageEv(%"class.OmniboxPedal::SynonymGroup"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = icmp ult i64 %13, %2
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %16) #15
  unreachable

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %21 = select i1 %9, i16* %19, i16* %20
  %22 = getelementptr inbounds i16, i16* %21, i64 %2
  %23 = sub i64 %13, %2
  %24 = icmp ult i64 %23, %3
  %25 = select i1 %24, i64 %23, i64 %3
  %26 = icmp ugt i64 %25, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %17
  %28 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #15
  unreachable

29:                                               ; preds = %17
  %30 = icmp ult i64 %25, 11
  br i1 %30, label %44, label %31

31:                                               ; preds = %29
  %32 = add nuw nsw i64 %25, 8
  %33 = and i64 %32, -8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @abort() #15
  unreachable

36:                                               ; preds = %31
  %37 = shl i64 %33, 1
  %38 = tail call i8* @_Znwm(i64 %37) #14
  %39 = bitcast i8* %38 to i16*
  %40 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %38, i8** %40, align 8
  %41 = or i64 %33, -9223372036854775808
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %43, align 8
  br label %50

44:                                               ; preds = %29
  %45 = trunc i64 %25 to i8
  %46 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  store i8 %45, i8* %47, align 1
  %48 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %49 = icmp eq i64 %25, 0
  br i1 %49, label %195, label %50

50:                                               ; preds = %44, %36
  %51 = phi i16* [ %39, %36 ], [ %48, %44 ]
  %52 = icmp ult i64 %25, 16
  br i1 %52, label %142, label %53

53:                                               ; preds = %50
  %54 = getelementptr i16, i16* %51, i64 %25
  %55 = add i64 %25, %2
  %56 = getelementptr i16, i16* %21, i64 %55
  %57 = icmp ult i16* %51, %56
  %58 = icmp ult i16* %22, %54
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %53
  %61 = and i64 %25, -16
  %62 = sub i64 %25, %61
  %63 = getelementptr i16, i16* %22, i64 %61
  %64 = getelementptr i16, i16* %51, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %22, i64 %73
  %76 = getelementptr i16, i16* %51, i64 %73
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !74
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !74
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !77, !noalias !74
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !77, !noalias !74
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %22, i64 %85
  %87 = getelementptr i16, i16* %51, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !74
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !74
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !77, !noalias !74
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !77, !noalias !74
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %22, i64 %96
  %98 = getelementptr i16, i16* %51, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !74
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !74
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !77, !noalias !74
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !77, !noalias !74
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %22, i64 %107
  %109 = getelementptr i16, i16* %51, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !74
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !74
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !77, !noalias !74
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !77, !noalias !74
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !79

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %22, i64 %125
  %128 = getelementptr i16, i16* %51, i64 %125
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !74
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !74
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !77, !noalias !74
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !77, !noalias !74
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !80

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %25, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %53, %50
  %143 = phi i64 [ %25, %53 ], [ %25, %50 ], [ %62, %140 ]
  %144 = phi i16* [ %22, %53 ], [ %22, %50 ], [ %63, %140 ]
  %145 = phi i16* [ %51, %53 ], [ %51, %50 ], [ %64, %140 ]
  %146 = add i64 %143, -1
  %147 = and i64 %143, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i64 [ %155, %149 ], [ %143, %142 ]
  %151 = phi i16* [ %157, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %156, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %151, align 2
  store i16 %154, i16* %152, align 2
  %155 = add i64 %150, -1
  %156 = getelementptr inbounds i16, i16* %152, i64 1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !81

160:                                              ; preds = %149, %142
  %161 = phi i64 [ %143, %142 ], [ %155, %149 ]
  %162 = phi i16* [ %144, %142 ], [ %157, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %156, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i64 [ %191, %165 ], [ %161, %160 ]
  %167 = phi i16* [ %193, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %192, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %167, align 2
  store i16 %169, i16* %168, align 2
  %170 = getelementptr inbounds i16, i16* %168, i64 1
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %168, i64 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %168, i64 3
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %168, i64 4
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %168, i64 5
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %168, i64 6
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %168, i64 7
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %166, -8
  %192 = getelementptr inbounds i16, i16* %168, i64 8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !82

195:                                              ; preds = %160, %165, %140, %44
  %196 = phi i16* [ %48, %44 ], [ %51, %140 ], [ %51, %165 ], [ %51, %160 ]
  %197 = getelementptr inbounds i16, i16* %196, i64 %25
  store i16 0, i16* %197, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.56"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS8_PvEEEERKT_(%"class.std::__1::__hash_table.52"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i16*, i16** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i16* %9, i16* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #13
  %17 = bitcast i16* %14 to i8*
  %18 = shl nuw i64 %15, 1
  %19 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %17, i64 %18) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #13
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.52", %"class.std::__1::__hash_table.52"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %104, label %23

23:                                               ; preds = %2
  %24 = call i64 @llvm.ctpop.i64(i64 %21) #13, !range !15
  %25 = icmp ugt i64 %24, 1
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = add i64 %21, -1
  %28 = and i64 %27, %19
  br label %33

29:                                               ; preds = %23
  %30 = icmp ult i64 %19, %21
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = urem i64 %19, %21
  br label %33

33:                                               ; preds = %26, %29, %31
  %34 = phi i64 [ %28, %26 ], [ %32, %31 ], [ %19, %29 ]
  %35 = getelementptr inbounds %"class.std::__1::__hash_table.52", %"class.std::__1::__hash_table.52"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.56"**, %"struct.std::__1::__hash_node_base.56"*** %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %36, i64 %34
  %38 = load %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.56"* %38, null
  br i1 %39, label %104, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %38, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %41, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base.56"* %42, null
  br i1 %43, label %104, label %44

44:                                               ; preds = %40
  %45 = add i64 %21, -1
  %46 = load i8, i8* %5, align 1
  %47 = icmp slt i8 %46, 0
  %48 = load i64, i64* %10, align 8
  %49 = zext i8 %46 to i64
  %50 = select i1 %47, i64 %48, i64 %49
  %51 = load i16*, i16** %8, align 8
  %52 = select i1 %47, i16* %51, i16* %12
  %53 = icmp eq i64 %50, 0
  br label %54

54:                                               ; preds = %44, %100
  %55 = phi %"struct.std::__1::__hash_node_base.56"* [ %42, %44 ], [ %102, %100 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %55, i64 1
  %57 = bitcast %"struct.std::__1::__hash_node_base.56"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %19, %58
  br i1 %59, label %70, label %60

60:                                               ; preds = %54
  br i1 %25, label %63, label %61

61:                                               ; preds = %60
  %62 = and i64 %58, %45
  br label %67

63:                                               ; preds = %60
  %64 = icmp ult i64 %58, %21
  br i1 %64, label %67, label %65

65:                                               ; preds = %63
  %66 = urem i64 %58, %21
  br label %67

67:                                               ; preds = %61, %63, %65
  %68 = phi i64 [ %62, %61 ], [ %66, %65 ], [ %58, %63 ]
  %69 = icmp eq i64 %68, %34
  br i1 %69, label %100, label %104

70:                                               ; preds = %54
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %55, i64 2
  %72 = bitcast %"struct.std::__1::__hash_node_base.56"* %71 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %72, i64 0, i32 1, i32 1
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %55, i64 3
  %77 = bitcast %"struct.std::__1::__hash_node_base.56"* %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = zext i8 %74 to i64
  %80 = select i1 %75, i64 %78, i64 %79
  %81 = icmp eq i64 %80, %50
  br i1 %81, label %82, label %100

82:                                               ; preds = %70
  br i1 %53, label %104, label %83

83:                                               ; preds = %82
  %84 = bitcast %"struct.std::__1::__hash_node_base.56"* %71 to i16**
  %85 = load i16*, i16** %84, align 8
  %86 = bitcast %"struct.std::__1::__hash_node_base.56"* %71 to i16*
  %87 = select i1 %75, i16* %85, i16* %86
  br label %88

88:                                               ; preds = %95, %83
  %89 = phi i64 [ %96, %95 ], [ %50, %83 ]
  %90 = phi i16* [ %98, %95 ], [ %52, %83 ]
  %91 = phi i16* [ %97, %95 ], [ %87, %83 ]
  %92 = load i16, i16* %91, align 2
  %93 = load i16, i16* %90, align 2
  %94 = icmp eq i16 %93, %92
  br i1 %94, label %95, label %100

95:                                               ; preds = %88
  %96 = add i64 %89, -1
  %97 = getelementptr inbounds i16, i16* %91, i64 1
  %98 = getelementptr inbounds i16, i16* %90, i64 1
  %99 = icmp eq i64 %96, 0
  br i1 %99, label %104, label %88

100:                                              ; preds = %88, %70, %67
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %55, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.56"* %102, null
  br i1 %103, label %104, label %54

104:                                              ; preds = %82, %100, %67, %95, %40, %2, %33
  %105 = phi %"struct.std::__1::__hash_node_base.56"* [ null, %33 ], [ null, %2 ], [ null, %40 ], [ %55, %95 ], [ %55, %82 ], [ null, %100 ], [ null, %67 ]
  ret %"struct.std::__1::__hash_node_base.56"* %105
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #8 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !83
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !83
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !86, !noalias !83
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !86, !noalias !83
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !83
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !83
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !86, !noalias !83
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !86, !noalias !83
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !83
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !83
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !86, !noalias !83
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !86, !noalias !83
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !83
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !83
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !86, !noalias !83
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !86, !noalias !83
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !88

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !83
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !83
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !86, !noalias !83
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !86, !noalias !83
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !89

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !90

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !91

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #15
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #15
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #14
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !92
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !92
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !95, !noalias !92
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !95, !noalias !92
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !92
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !92
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !95, !noalias !92
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !95, !noalias !92
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !92
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !92
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !95, !noalias !92
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !95, !noalias !92
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !92
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !92
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !95, !noalias !92
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !95, !noalias !92
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !97

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !92
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !92
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !95, !noalias !92
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !95, !noalias !92
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !98

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !99

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !100

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !101
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !101
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !104, !noalias !101
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !104, !noalias !101
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !101
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !101
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !104, !noalias !101
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !104, !noalias !101
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !101
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !101
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !104, !noalias !101
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !104, !noalias !101
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !101
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !101
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !104, !noalias !101
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !104, !noalias !101
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !106

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !101
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !101
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !104, !noalias !101
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !104, !noalias !101
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !107

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !108

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !109

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #13
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #15
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #15
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #14
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !110
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !110
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !113, !noalias !110
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !113, !noalias !110
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !110
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !110
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !113, !noalias !110
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !113, !noalias !110
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !110
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !110
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !113, !noalias !110
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !113, !noalias !110
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !110
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !110
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !113, !noalias !110
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !113, !noalias !110
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !115

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !110
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !110
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !113, !noalias !110
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !113, !noalias !110
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !116

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !117

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !118

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !119

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !120

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !121

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !123
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !123
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !126, !noalias !123
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !126, !noalias !123
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !123
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !123
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !126, !noalias !123
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !126, !noalias !123
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !123
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !123
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !126, !noalias !123
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !126, !noalias !123
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !123
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !123
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !126, !noalias !123
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !126, !noalias !123
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !128

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !123
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !123
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !126, !noalias !123
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !126, !noalias !123
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !129

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !130

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !131

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #14
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS1_11__wrap_iterIPKDsEEE11FullGetNextEv(%"class.base::StringTokenizerT"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 2, i32 0
  %3 = load i16*, i16** %2, align 8
  %4 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 3, i32 0
  %5 = load i16*, i16** %4, align 8
  %6 = icmp eq i16* %3, %5
  %7 = ptrtoint i16* %3 to i64
  br i1 %6, label %22, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %22

12:                                               ; preds = %8, %16
  %13 = phi i64 [ %19, %16 ], [ %7, %8 ]
  %14 = phi i16* [ %17, %16 ], [ %3, %8 ]
  %15 = load i16, i16* %14, align 2
  switch i16 %15, label %22 [
    i16 32, label %16
    i16 13, label %16
    i16 10, label %16
    i16 9, label %16
    i16 12, label %16
  ]

16:                                               ; preds = %12, %12, %12, %12, %12
  %17 = getelementptr inbounds i16, i16* %14, i64 1
  store i16* %17, i16** %2, align 8
  %18 = icmp eq i16* %17, %5
  %19 = ptrtoint i16* %17 to i64
  br i1 %18, label %20, label %12

20:                                               ; preds = %16
  %21 = ptrtoint i16* %17 to i64
  br label %22

22:                                               ; preds = %12, %20, %8, %1
  %23 = phi i64 [ %7, %8 ], [ %7, %1 ], [ %21, %20 ], [ %13, %12 ]
  %24 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 6
  %25 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 2, i32 0
  %26 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 7
  %27 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 1
  %28 = bitcast %"class.std::__1::__wrap_iter.103"* %27 to i64*
  %29 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 4
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %30, i64 0, i32 1, i32 1
  %32 = bitcast %"class.std::__1::basic_string"* %29 to i16*
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  %36 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 5
  %37 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = bitcast %"class.std::__1::basic_string"* %36 to i16*
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i8, i8* %26, align 4, !range !2
  %43 = icmp eq i8 %42, 0
  br label %44

44:                                               ; preds = %157, %22
  %45 = phi i64 [ %23, %22 ], [ %162, %157 ]
  %46 = phi i1 [ %43, %22 ], [ false, %157 ]
  %47 = phi i16 [ 0, %22 ], [ %152, %157 ]
  %48 = phi i8 [ 0, %22 ], [ %153, %157 ]
  %49 = phi i8 [ 0, %22 ], [ %154, %157 ]
  br i1 %46, label %150, label %50

50:                                               ; preds = %44
  store i8 0, i8* %26, align 4
  store i64 %45, i64* %28, align 8
  %51 = inttoptr i64 %45 to i16*
  %52 = icmp eq i16* %5, %51
  br i1 %52, label %139, label %53

53:                                               ; preds = %50, %130
  %54 = phi i64 [ %136, %130 ], [ %45, %50 ]
  %55 = phi i16* [ %134, %130 ], [ %51, %50 ]
  %56 = phi i8 [ %133, %130 ], [ %49, %50 ]
  %57 = phi i8 [ %132, %130 ], [ %48, %50 ]
  %58 = phi i16 [ %131, %130 ], [ %47, %50 ]
  %59 = load i16, i16* %55, align 2
  %60 = icmp eq i8 %56, 0
  br i1 %60, label %68, label %61

61:                                               ; preds = %53
  %62 = icmp eq i8 %57, 0
  br i1 %62, label %63, label %130

63:                                               ; preds = %61
  %64 = icmp eq i16 %59, 92
  br i1 %64, label %130, label %65

65:                                               ; preds = %63
  %66 = icmp eq i16 %58, %59
  %67 = select i1 %66, i8 0, i8 %56
  br label %130

68:                                               ; preds = %53
  %69 = load i8, i8* %31, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %68
  %72 = load i16*, i16** %33, align 8
  %73 = load i64, i64* %34, align 8
  br label %76

74:                                               ; preds = %68
  %75 = zext i8 %69 to i64
  br label %76

76:                                               ; preds = %74, %71
  %77 = phi i16* [ %72, %71 ], [ %32, %74 ]
  %78 = phi i64 [ %73, %71 ], [ %75, %74 ]
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %96, label %80

80:                                               ; preds = %76, %85
  %81 = phi i64 [ %87, %85 ], [ %78, %76 ]
  %82 = phi i16* [ %86, %85 ], [ %77, %76 ]
  %83 = load i16, i16* %82, align 2
  %84 = icmp eq i16 %83, %59
  br i1 %84, label %89, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds i16, i16* %82, i64 1
  %87 = add i64 %81, -1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %96, label %80

89:                                               ; preds = %80
  %90 = icmp ne i16* %82, null
  %91 = ptrtoint i16* %82 to i64
  %92 = ptrtoint i16* %77 to i64
  %93 = sub i64 %91, %92
  %94 = icmp ne i64 %93, -2
  %95 = and i1 %90, %94
  br i1 %95, label %139, label %96

96:                                               ; preds = %85, %89, %76
  %97 = load i32, i32* %35, align 8
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  switch i16 %59, label %100 [
    i16 32, label %139
    i16 13, label %139
    i16 10, label %139
    i16 9, label %139
    i16 12, label %139
  ]

100:                                              ; preds = %99, %96
  %101 = load i8, i8* %38, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %100
  %104 = load i16*, i16** %40, align 8
  %105 = load i64, i64* %41, align 8
  br label %108

106:                                              ; preds = %100
  %107 = zext i8 %101 to i64
  br label %108

108:                                              ; preds = %106, %103
  %109 = phi i16* [ %104, %103 ], [ %39, %106 ]
  %110 = phi i64 [ %105, %103 ], [ %107, %106 ]
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %130, label %112

112:                                              ; preds = %108, %117
  %113 = phi i64 [ %119, %117 ], [ %110, %108 ]
  %114 = phi i16* [ %118, %117 ], [ %109, %108 ]
  %115 = load i16, i16* %114, align 2
  %116 = icmp eq i16 %115, %59
  br i1 %116, label %121, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds i16, i16* %114, i64 1
  %119 = add i64 %113, -1
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %112

121:                                              ; preds = %117, %112
  %122 = phi i16* [ null, %117 ], [ %114, %112 ]
  %123 = icmp ne i16* %122, null
  %124 = ptrtoint i16* %122 to i64
  %125 = ptrtoint i16* %109 to i64
  %126 = sub i64 %124, %125
  %127 = icmp ne i64 %126, -2
  %128 = and i1 %123, %127
  %129 = zext i1 %128 to i8
  br label %130

130:                                              ; preds = %65, %61, %63, %121, %108
  %131 = phi i16 [ %59, %108 ], [ %59, %121 ], [ %58, %63 ], [ %58, %61 ], [ %58, %65 ]
  %132 = phi i8 [ %57, %108 ], [ %57, %121 ], [ 1, %63 ], [ 0, %61 ], [ 0, %65 ]
  %133 = phi i8 [ 0, %108 ], [ %129, %121 ], [ %56, %63 ], [ %56, %61 ], [ %67, %65 ]
  %134 = getelementptr inbounds i16, i16* %55, i64 1
  store i16* %134, i16** %25, align 8
  %135 = icmp eq i16* %134, %5
  %136 = ptrtoint i16* %134 to i64
  br i1 %135, label %137, label %53

137:                                              ; preds = %130
  %138 = ptrtoint i16* %134 to i64
  br label %139

139:                                              ; preds = %99, %99, %99, %99, %99, %89, %137, %50
  %140 = phi i64 [ %45, %50 ], [ %138, %137 ], [ %54, %89 ], [ %54, %99 ], [ %54, %99 ], [ %54, %99 ], [ %54, %99 ], [ %54, %99 ]
  %141 = phi i16 [ %47, %50 ], [ %131, %137 ], [ %58, %89 ], [ %58, %99 ], [ %58, %99 ], [ %58, %99 ], [ %58, %99 ], [ %58, %99 ]
  %142 = phi i8 [ %48, %50 ], [ %132, %137 ], [ %57, %89 ], [ %57, %99 ], [ %57, %99 ], [ %57, %99 ], [ %57, %99 ], [ %57, %99 ]
  %143 = phi i8 [ %49, %50 ], [ %133, %137 ], [ 0, %89 ], [ 0, %99 ], [ 0, %99 ], [ 0, %99 ], [ 0, %99 ], [ 0, %99 ]
  %144 = phi i16* [ %5, %50 ], [ %5, %137 ], [ %55, %89 ], [ %55, %99 ], [ %55, %99 ], [ %55, %99 ], [ %55, %99 ], [ %55, %99 ]
  %145 = icmp eq i16* %144, %51
  br i1 %145, label %146, label %163

146:                                              ; preds = %139
  %147 = load i32, i32* %24, align 8
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %163

150:                                              ; preds = %146, %44
  %151 = phi i64 [ %45, %44 ], [ %140, %146 ]
  %152 = phi i16 [ %47, %44 ], [ %141, %146 ]
  %153 = phi i8 [ %48, %44 ], [ %142, %146 ]
  %154 = phi i8 [ %49, %44 ], [ %143, %146 ]
  store i8 1, i8* %26, align 4
  store i64 %151, i64* %28, align 8
  %155 = inttoptr i64 %151 to i16*
  %156 = icmp eq i16* %5, %155
  br i1 %156, label %163, label %157

157:                                              ; preds = %150
  %158 = getelementptr inbounds i16, i16* %155, i64 1
  store i16* %158, i16** %25, align 8
  %159 = load i32, i32* %24, align 8
  %160 = and i32 %159, 1
  %161 = icmp eq i32 %160, 0
  %162 = ptrtoint i16* %158 to i64
  br i1 %161, label %44, label %163

163:                                              ; preds = %139, %157, %150, %146
  %164 = phi i1 [ true, %146 ], [ true, %139 ], [ false, %150 ], [ true, %157 ]
  ret i1 %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.56"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEERKT_(%"class.std::__1::__hash_table.52"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i16*, i16** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i16* %9, i16* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #13
  %17 = bitcast i16* %14 to i8*
  %18 = shl nuw i64 %15, 1
  %19 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %17, i64 %18) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #13
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.52", %"class.std::__1::__hash_table.52"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %104, label %23

23:                                               ; preds = %2
  %24 = call i64 @llvm.ctpop.i64(i64 %21) #13, !range !15
  %25 = icmp ugt i64 %24, 1
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = add i64 %21, -1
  %28 = and i64 %27, %19
  br label %33

29:                                               ; preds = %23
  %30 = icmp ult i64 %19, %21
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = urem i64 %19, %21
  br label %33

33:                                               ; preds = %26, %29, %31
  %34 = phi i64 [ %28, %26 ], [ %32, %31 ], [ %19, %29 ]
  %35 = getelementptr inbounds %"class.std::__1::__hash_table.52", %"class.std::__1::__hash_table.52"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.56"**, %"struct.std::__1::__hash_node_base.56"*** %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %36, i64 %34
  %38 = load %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.56"* %38, null
  br i1 %39, label %104, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %38, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %41, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base.56"* %42, null
  br i1 %43, label %104, label %44

44:                                               ; preds = %40
  %45 = add i64 %21, -1
  %46 = load i8, i8* %5, align 1
  %47 = icmp slt i8 %46, 0
  %48 = load i64, i64* %10, align 8
  %49 = zext i8 %46 to i64
  %50 = select i1 %47, i64 %48, i64 %49
  %51 = load i16*, i16** %8, align 8
  %52 = select i1 %47, i16* %51, i16* %12
  %53 = icmp eq i64 %50, 0
  br label %54

54:                                               ; preds = %44, %100
  %55 = phi %"struct.std::__1::__hash_node_base.56"* [ %42, %44 ], [ %102, %100 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %55, i64 1
  %57 = bitcast %"struct.std::__1::__hash_node_base.56"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, %19
  br i1 %59, label %70, label %60

60:                                               ; preds = %54
  br i1 %25, label %63, label %61

61:                                               ; preds = %60
  %62 = and i64 %58, %45
  br label %67

63:                                               ; preds = %60
  %64 = icmp ult i64 %58, %21
  br i1 %64, label %67, label %65

65:                                               ; preds = %63
  %66 = urem i64 %58, %21
  br label %67

67:                                               ; preds = %61, %63, %65
  %68 = phi i64 [ %62, %61 ], [ %66, %65 ], [ %58, %63 ]
  %69 = icmp eq i64 %68, %34
  br i1 %69, label %100, label %104

70:                                               ; preds = %54
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %55, i64 2
  %72 = bitcast %"struct.std::__1::__hash_node_base.56"* %71 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %72, i64 0, i32 1, i32 1
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %55, i64 3
  %77 = bitcast %"struct.std::__1::__hash_node_base.56"* %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = zext i8 %74 to i64
  %80 = select i1 %75, i64 %78, i64 %79
  %81 = icmp eq i64 %80, %50
  br i1 %81, label %82, label %100

82:                                               ; preds = %70
  br i1 %53, label %104, label %83

83:                                               ; preds = %82
  %84 = bitcast %"struct.std::__1::__hash_node_base.56"* %71 to i16**
  %85 = load i16*, i16** %84, align 8
  %86 = bitcast %"struct.std::__1::__hash_node_base.56"* %71 to i16*
  %87 = select i1 %75, i16* %85, i16* %86
  br label %88

88:                                               ; preds = %95, %83
  %89 = phi i64 [ %96, %95 ], [ %50, %83 ]
  %90 = phi i16* [ %98, %95 ], [ %52, %83 ]
  %91 = phi i16* [ %97, %95 ], [ %87, %83 ]
  %92 = load i16, i16* %91, align 2
  %93 = load i16, i16* %90, align 2
  %94 = icmp eq i16 %93, %92
  br i1 %94, label %95, label %100

95:                                               ; preds = %88
  %96 = add i64 %89, -1
  %97 = getelementptr inbounds i16, i16* %91, i64 1
  %98 = getelementptr inbounds i16, i16* %90, i64 1
  %99 = icmp eq i64 %96, 0
  br i1 %99, label %104, label %88

100:                                              ; preds = %88, %70, %67
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %55, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.56"* %102, null
  br i1 %103, label %104, label %54

104:                                              ; preds = %82, %100, %67, %95, %40, %2, %33
  %105 = phi %"struct.std::__1::__hash_node_base.56"* [ null, %33 ], [ null, %2 ], [ null, %40 ], [ %55, %95 ], [ %55, %82 ], [ null, %100 ], [ null, %67 ]
  ret %"struct.std::__1::__hash_node_base.56"* %105
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.56"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JNS_4pairIKS7_iEEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.52"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::pair.102"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %5 = alloca %"class.std::__1::unique_ptr.251", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i16*, i16** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %15 = zext i8 %8 to i64
  %16 = select i1 %9, i16* %11, i16* %14
  %17 = select i1 %9, i64 %13, i64 %15
  %18 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #13
  %19 = bitcast i16* %16 to i8*
  %20 = shl nuw i64 %17, 1
  %21 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %4, i8* %19, i64 %20) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #13
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.52", %"class.std::__1::__hash_table.52"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %106, label %25

25:                                               ; preds = %3
  %26 = call i64 @llvm.ctpop.i64(i64 %23) #13, !range !15
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %23, -1
  %30 = and i64 %29, %21
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %21, %23
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %21, %23
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %21, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.52", %"class.std::__1::__hash_table.52"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.56"**, %"struct.std::__1::__hash_node_base.56"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.56"* %40, null
  br i1 %41, label %106, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %40, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.56"* %44, null
  br i1 %45, label %106, label %46

46:                                               ; preds = %42
  %47 = add i64 %23, -1
  %48 = load i8, i8* %7, align 1
  %49 = icmp slt i8 %48, 0
  %50 = load i64, i64* %12, align 8
  %51 = zext i8 %48 to i64
  %52 = select i1 %49, i64 %50, i64 %51
  %53 = load i16*, i16** %10, align 8
  %54 = select i1 %49, i16* %53, i16* %14
  %55 = icmp eq i64 %52, 0
  br label %56

56:                                               ; preds = %46, %102
  %57 = phi %"struct.std::__1::__hash_node_base.56"* [ %44, %46 ], [ %104, %102 ]
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %57, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.56"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, %21
  br i1 %61, label %72, label %62

62:                                               ; preds = %56
  br i1 %27, label %65, label %63

63:                                               ; preds = %62
  %64 = and i64 %60, %47
  br label %69

65:                                               ; preds = %62
  %66 = icmp ult i64 %60, %23
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = urem i64 %60, %23
  br label %69

69:                                               ; preds = %63, %65, %67
  %70 = phi i64 [ %64, %63 ], [ %68, %67 ], [ %60, %65 ]
  %71 = icmp eq i64 %70, %36
  br i1 %71, label %72, label %106

72:                                               ; preds = %56, %69
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %57, i64 2
  %74 = bitcast %"struct.std::__1::__hash_node_base.56"* %73 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %74, i64 0, i32 1, i32 1
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %57, i64 3
  %79 = bitcast %"struct.std::__1::__hash_node_base.56"* %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = zext i8 %76 to i64
  %82 = select i1 %77, i64 %80, i64 %81
  %83 = icmp eq i64 %82, %52
  br i1 %83, label %84, label %102

84:                                               ; preds = %72
  br i1 %55, label %198, label %85

85:                                               ; preds = %84
  %86 = bitcast %"struct.std::__1::__hash_node_base.56"* %73 to i16**
  %87 = load i16*, i16** %86, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base.56"* %73 to i16*
  %89 = select i1 %77, i16* %87, i16* %88
  br label %90

90:                                               ; preds = %97, %85
  %91 = phi i64 [ %98, %97 ], [ %52, %85 ]
  %92 = phi i16* [ %100, %97 ], [ %54, %85 ]
  %93 = phi i16* [ %99, %97 ], [ %89, %85 ]
  %94 = load i16, i16* %93, align 2
  %95 = load i16, i16* %92, align 2
  %96 = icmp eq i16 %95, %94
  br i1 %96, label %97, label %102

97:                                               ; preds = %90
  %98 = add i64 %91, -1
  %99 = getelementptr inbounds i16, i16* %93, i64 1
  %100 = getelementptr inbounds i16, i16* %92, i64 1
  %101 = icmp eq i64 %98, 0
  br i1 %101, label %198, label %90

102:                                              ; preds = %90, %72
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %57, i64 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %103, align 8
  %105 = icmp eq %"struct.std::__1::__hash_node_base.56"* %104, null
  br i1 %105, label %106, label %56

106:                                              ; preds = %69, %102, %42, %35, %3
  %107 = phi i64 [ %36, %35 ], [ -6148914691236517206, %3 ], [ %36, %42 ], [ %36, %102 ], [ %36, %69 ]
  %108 = bitcast %"class.std::__1::unique_ptr.251"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #13
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.251", %"class.std::__1::unique_ptr.251"* %5, i64 0, i32 0, i32 0, i32 0
  %110 = bitcast %"class.std::__1::unique_ptr.251"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE21__construct_node_hashINS_4pairIKS7_iEEJEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINS5_ISQ_EEEEEEmOT_DpOT0_(%"class.std::__1::unique_ptr.251"* nonnull sret %5, %"class.std::__1::__hash_table.52"* %0, i64 %21, %"struct.std::__1::pair.102"* dereferenceable(32) %2)
  %111 = getelementptr inbounds %"class.std::__1::__hash_table.52", %"class.std::__1::__hash_table.52"* %0, i64 0, i32 2, i32 0, i32 0
  %112 = load i64, i64* %111, align 8
  %113 = add i64 %112, 1
  %114 = uitofp i64 %113 to float
  %115 = uitofp i64 %23 to float
  %116 = getelementptr inbounds %"class.std::__1::__hash_table.52", %"class.std::__1::__hash_table.52"* %0, i64 0, i32 3, i32 0, i32 0
  %117 = load float, float* %116, align 4
  %118 = fmul float %117, %115
  %119 = fcmp olt float %118, %114
  %120 = or i1 %24, %119
  br i1 %120, label %121, label %144

121:                                              ; preds = %106
  %122 = shl i64 %23, 1
  %123 = icmp ult i64 %23, 3
  %124 = call i64 @llvm.ctpop.i64(i64 %23) #13, !range !15
  %125 = icmp ugt i64 %124, 1
  %126 = or i1 %123, %125
  %127 = zext i1 %126 to i64
  %128 = or i64 %122, %127
  %129 = fdiv float %114, %117
  %130 = call float @llvm.ceil.f32(float %129) #13
  %131 = fptoui float %130 to i64
  %132 = icmp ult i64 %128, %131
  %133 = select i1 %132, i64 %131, i64 %128
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm(%"class.std::__1::__hash_table.52"* %0, i64 %133)
  %134 = load i64, i64* %22, align 8
  %135 = call i64 @llvm.ctpop.i64(i64 %134) #13, !range !15
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %121
  %138 = add i64 %134, -1
  %139 = and i64 %138, %21
  br label %144

140:                                              ; preds = %121
  %141 = icmp ult i64 %21, %134
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %21, %134
  br label %144

144:                                              ; preds = %142, %140, %137, %106
  %145 = phi i64 [ %23, %106 ], [ %134, %137 ], [ %134, %140 ], [ %134, %142 ]
  %146 = phi i64 [ %107, %106 ], [ %139, %137 ], [ %21, %140 ], [ %143, %142 ]
  %147 = getelementptr inbounds %"class.std::__1::__hash_table.52", %"class.std::__1::__hash_table.52"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %148 = load %"struct.std::__1::__hash_node_base.56"**, %"struct.std::__1::__hash_node_base.56"*** %147, align 8
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %148, i64 %146
  %150 = load %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %149, align 8
  %151 = icmp eq %"struct.std::__1::__hash_node_base.56"* %150, null
  br i1 %151, label %152, label %185

152:                                              ; preds = %144
  %153 = getelementptr inbounds %"class.std::__1::__hash_table.52", %"class.std::__1::__hash_table.52"* %0, i64 0, i32 1, i32 0, i32 0
  %154 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %153, i64 0, i32 0
  %155 = bitcast %"struct.std::__1::__hash_node_base.56"* %153 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.std::__1::unique_ptr.251"* %5 to i64**
  %158 = load i64*, i64** %157, align 8
  store i64 %156, i64* %158, align 8
  %159 = load %"struct.std::__1::__hash_node.238"*, %"struct.std::__1::__hash_node.238"** %109, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__hash_node.238", %"struct.std::__1::__hash_node.238"* %159, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.56"* %160, %"struct.std::__1::__hash_node_base.56"** %154, align 8
  %161 = load %"struct.std::__1::__hash_node_base.56"**, %"struct.std::__1::__hash_node_base.56"*** %147, align 8
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %161, i64 %146
  store %"struct.std::__1::__hash_node_base.56"* %153, %"struct.std::__1::__hash_node_base.56"** %162, align 8
  %163 = load %"struct.std::__1::__hash_node.238"*, %"struct.std::__1::__hash_node.238"** %109, align 8
  %164 = getelementptr inbounds %"struct.std::__1::__hash_node.238", %"struct.std::__1::__hash_node.238"* %163, i64 0, i32 0, i32 0
  %165 = load %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %164, align 8
  %166 = icmp eq %"struct.std::__1::__hash_node_base.56"* %165, null
  br i1 %166, label %193, label %167

167:                                              ; preds = %152
  %168 = getelementptr inbounds %"struct.std::__1::__hash_node.238", %"struct.std::__1::__hash_node.238"* %163, i64 0, i32 0
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %165, i64 1
  %170 = bitcast %"struct.std::__1::__hash_node_base.56"* %169 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = call i64 @llvm.ctpop.i64(i64 %145) #13, !range !15
  %173 = icmp ugt i64 %172, 1
  br i1 %173, label %177, label %174

174:                                              ; preds = %167
  %175 = add i64 %145, -1
  %176 = and i64 %171, %175
  br label %181

177:                                              ; preds = %167
  %178 = icmp ult i64 %171, %145
  br i1 %178, label %181, label %179

179:                                              ; preds = %177
  %180 = urem i64 %171, %145
  br label %181

181:                                              ; preds = %174, %177, %179
  %182 = phi i64 [ %176, %174 ], [ %180, %179 ], [ %171, %177 ]
  %183 = load %"struct.std::__1::__hash_node_base.56"**, %"struct.std::__1::__hash_node_base.56"*** %147, align 8
  %184 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %183, i64 %182
  store %"struct.std::__1::__hash_node_base.56"* %168, %"struct.std::__1::__hash_node_base.56"** %184, align 8
  br label %193

185:                                              ; preds = %144
  %186 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %150, i64 0, i32 0
  %187 = bitcast %"struct.std::__1::__hash_node_base.56"* %150 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = bitcast %"class.std::__1::unique_ptr.251"* %5 to i64**
  %190 = load i64*, i64** %189, align 8
  store i64 %188, i64* %190, align 8
  %191 = load %"struct.std::__1::__hash_node.238"*, %"struct.std::__1::__hash_node.238"** %109, align 8
  %192 = getelementptr inbounds %"struct.std::__1::__hash_node.238", %"struct.std::__1::__hash_node.238"* %191, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.56"* %192, %"struct.std::__1::__hash_node_base.56"** %186, align 8
  br label %193

193:                                              ; preds = %185, %181, %152
  %194 = load %"struct.std::__1::__hash_node.238"*, %"struct.std::__1::__hash_node.238"** %109, align 8
  %195 = getelementptr inbounds %"struct.std::__1::__hash_node.238", %"struct.std::__1::__hash_node.238"* %194, i64 0, i32 0
  %196 = load i64, i64* %111, align 8
  %197 = add i64 %196, 1
  store i64 %197, i64* %111, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #13
  br label %198

198:                                              ; preds = %84, %97, %193
  %199 = phi i8 [ 1, %193 ], [ 0, %97 ], [ 0, %84 ]
  %200 = phi %"struct.std::__1::__hash_node_base.56"* [ %195, %193 ], [ %57, %97 ], [ %57, %84 ]
  %201 = insertvalue { %"struct.std::__1::__hash_node_base.56"*, i8 } undef, %"struct.std::__1::__hash_node_base.56"* %200, 0
  %202 = insertvalue { %"struct.std::__1::__hash_node_base.56"*, i8 } %201, i8 %199, 1
  ret { %"struct.std::__1::__hash_node_base.56"*, i8 } %202
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE21__construct_node_hashINS_4pairIKS7_iEEJEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINS5_ISQ_EEEEEEmOT_DpOT0_(%"class.std::__1::unique_ptr.251"* noalias sret, %"class.std::__1::__hash_table.52"*, i64, %"struct.std::__1::pair.102"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::__hash_table.52", %"class.std::__1::__hash_table.52"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.251", %"class.std::__1::unique_ptr.251"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.251", %"class.std::__1::unique_ptr.251"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.251", %"class.std::__1::unique_ptr.251"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.std::__1::unique_ptr.251"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 -86, i64 24, i1 false)
  %10 = tail call i8* @_Znwm(i64 48) #14
  %11 = ptrtoint i8* %10 to i64
  %12 = bitcast %"class.std::__1::unique_ptr.251"* %0 to i64*
  store i64 %11, i64* %12, align 8
  %13 = bitcast %"class.std::__1::allocator.66"** %7 to %"class.std::__1::__compressed_pair.63"**
  store %"class.std::__1::__compressed_pair.63"* %5, %"class.std::__1::__compressed_pair.63"** %13, align 8
  store i8 0, i8* %8, align 8
  %14 = getelementptr inbounds i8, i8* %10, i64 16
  %15 = bitcast %"struct.std::__1::pair.102"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %4
  %20 = bitcast i8* %10 to %"struct.std::__1::__hash_node.238"*
  %21 = bitcast %"struct.std::__1::pair.102"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %21, i64 24, i1 false) #13
  br label %203

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"struct.std::__1::pair.102", %"struct.std::__1::pair.102"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i16*, i16** %23, align 8
  %25 = bitcast i16* %24 to i8*
  %26 = getelementptr inbounds %"struct.std::__1::pair.102", %"struct.std::__1::pair.102"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = icmp ult i64 %27, 11
  br i1 %28, label %29, label %32

29:                                               ; preds = %22
  %30 = trunc i64 %27 to i8
  %31 = getelementptr inbounds i8, i8* %10, i64 39
  store i8 %30, i8* %31, align 1
  br label %50

32:                                               ; preds = %22
  %33 = icmp ugt i64 %27, 9223372036854775791
  br i1 %33, label %34, label %36

34:                                               ; preds = %32
  %35 = bitcast i8* %14 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %35) #15
  unreachable

36:                                               ; preds = %32
  %37 = add nuw nsw i64 %27, 8
  %38 = and i64 %37, -8
  %39 = icmp slt i64 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %36
  tail call void @abort() #15
  unreachable

41:                                               ; preds = %36
  %42 = shl i64 %38, 1
  %43 = tail call i8* @_Znwm(i64 %42) #14
  %44 = bitcast i8* %14 to i8**
  store i8* %43, i8** %44, align 8
  %45 = or i64 %38, -9223372036854775808
  %46 = getelementptr inbounds i8, i8* %10, i64 32
  %47 = bitcast i8* %46 to i64*
  store i64 %45, i64* %47, align 8
  %48 = getelementptr inbounds i8, i8* %10, i64 24
  %49 = bitcast i8* %48 to i64*
  store i64 %27, i64* %49, align 8
  br label %50

50:                                               ; preds = %41, %29
  %51 = phi i8* [ %14, %29 ], [ %43, %41 ]
  %52 = bitcast i8* %51 to i16*
  %53 = add nuw nsw i64 %27, 1
  %54 = add i64 %27, 1
  %55 = icmp ult i64 %54, 16
  br i1 %55, label %148, label %56

56:                                               ; preds = %50
  %57 = shl i64 %27, 1
  %58 = add i64 %57, 2
  %59 = getelementptr i8, i8* %51, i64 %58
  %60 = add i64 %27, 1
  %61 = getelementptr i16, i16* %24, i64 %60
  %62 = bitcast i16* %61 to i8*
  %63 = icmp ult i8* %51, %62
  %64 = icmp ugt i8* %59, %25
  %65 = and i1 %63, %64
  br i1 %65, label %148, label %66

66:                                               ; preds = %56
  %67 = and i64 %54, -16
  %68 = sub i64 %53, %67
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %52, i64 %67
  %71 = add i64 %67, -16
  %72 = lshr exact i64 %71, 4
  %73 = add nuw nsw i64 %72, 1
  %74 = and i64 %73, 3
  %75 = icmp ult i64 %71, 48
  br i1 %75, label %127, label %76

76:                                               ; preds = %66
  %77 = sub nsw i64 %73, %74
  br label %78

78:                                               ; preds = %78, %76
  %79 = phi i64 [ 0, %76 ], [ %124, %78 ]
  %80 = phi i64 [ %77, %76 ], [ %125, %78 ]
  %81 = getelementptr i16, i16* %24, i64 %79
  %82 = getelementptr i16, i16* %52, i64 %79
  %83 = bitcast i16* %81 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !132
  %85 = getelementptr i16, i16* %81, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !132
  %88 = bitcast i16* %82 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %88, align 2, !alias.scope !135, !noalias !132
  %89 = getelementptr i16, i16* %82, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %90, align 2, !alias.scope !135, !noalias !132
  %91 = or i64 %79, 16
  %92 = getelementptr i16, i16* %24, i64 %91
  %93 = getelementptr i16, i16* %52, i64 %91
  %94 = bitcast i16* %92 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !132
  %96 = getelementptr i16, i16* %92, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !132
  %99 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %99, align 2, !alias.scope !135, !noalias !132
  %100 = getelementptr i16, i16* %93, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %101, align 2, !alias.scope !135, !noalias !132
  %102 = or i64 %79, 32
  %103 = getelementptr i16, i16* %24, i64 %102
  %104 = getelementptr i16, i16* %52, i64 %102
  %105 = bitcast i16* %103 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !132
  %107 = getelementptr i16, i16* %103, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !132
  %110 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %110, align 2, !alias.scope !135, !noalias !132
  %111 = getelementptr i16, i16* %104, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %112, align 2, !alias.scope !135, !noalias !132
  %113 = or i64 %79, 48
  %114 = getelementptr i16, i16* %24, i64 %113
  %115 = getelementptr i16, i16* %52, i64 %113
  %116 = bitcast i16* %114 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !132
  %118 = getelementptr i16, i16* %114, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !132
  %121 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %117, <8 x i16>* %121, align 2, !alias.scope !135, !noalias !132
  %122 = getelementptr i16, i16* %115, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %123, align 2, !alias.scope !135, !noalias !132
  %124 = add i64 %79, 64
  %125 = add i64 %80, -4
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %127, label %78, !llvm.loop !137

127:                                              ; preds = %78, %66
  %128 = phi i64 [ 0, %66 ], [ %124, %78 ]
  %129 = icmp eq i64 %74, 0
  br i1 %129, label %146, label %130

130:                                              ; preds = %127, %130
  %131 = phi i64 [ %143, %130 ], [ %128, %127 ]
  %132 = phi i64 [ %144, %130 ], [ %74, %127 ]
  %133 = getelementptr i16, i16* %24, i64 %131
  %134 = getelementptr i16, i16* %52, i64 %131
  %135 = bitcast i16* %133 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !132
  %137 = getelementptr i16, i16* %133, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  %139 = load <8 x i16>, <8 x i16>* %138, align 2, !alias.scope !132
  %140 = bitcast i16* %134 to <8 x i16>*
  store <8 x i16> %136, <8 x i16>* %140, align 2, !alias.scope !135, !noalias !132
  %141 = getelementptr i16, i16* %134, i64 8
  %142 = bitcast i16* %141 to <8 x i16>*
  store <8 x i16> %139, <8 x i16>* %142, align 2, !alias.scope !135, !noalias !132
  %143 = add i64 %131, 16
  %144 = add i64 %132, -1
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %130, !llvm.loop !138

146:                                              ; preds = %130, %127
  %147 = icmp eq i64 %54, %67
  br i1 %147, label %201, label %148

148:                                              ; preds = %146, %56, %50
  %149 = phi i64 [ %53, %56 ], [ %53, %50 ], [ %68, %146 ]
  %150 = phi i16* [ %24, %56 ], [ %24, %50 ], [ %69, %146 ]
  %151 = phi i16* [ %52, %56 ], [ %52, %50 ], [ %70, %146 ]
  %152 = add i64 %149, -1
  %153 = and i64 %149, 7
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %166, label %155

155:                                              ; preds = %148, %155
  %156 = phi i64 [ %161, %155 ], [ %149, %148 ]
  %157 = phi i16* [ %163, %155 ], [ %150, %148 ]
  %158 = phi i16* [ %162, %155 ], [ %151, %148 ]
  %159 = phi i64 [ %164, %155 ], [ %153, %148 ]
  %160 = load i16, i16* %157, align 2
  store i16 %160, i16* %158, align 2
  %161 = add i64 %156, -1
  %162 = getelementptr inbounds i16, i16* %158, i64 1
  %163 = getelementptr inbounds i16, i16* %157, i64 1
  %164 = add i64 %159, -1
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %155, !llvm.loop !139

166:                                              ; preds = %155, %148
  %167 = phi i64 [ %149, %148 ], [ %161, %155 ]
  %168 = phi i16* [ %150, %148 ], [ %163, %155 ]
  %169 = phi i16* [ %151, %148 ], [ %162, %155 ]
  %170 = icmp ult i64 %152, 7
  br i1 %170, label %201, label %171

171:                                              ; preds = %166, %171
  %172 = phi i64 [ %197, %171 ], [ %167, %166 ]
  %173 = phi i16* [ %199, %171 ], [ %168, %166 ]
  %174 = phi i16* [ %198, %171 ], [ %169, %166 ]
  %175 = load i16, i16* %173, align 2
  store i16 %175, i16* %174, align 2
  %176 = getelementptr inbounds i16, i16* %174, i64 1
  %177 = getelementptr inbounds i16, i16* %173, i64 1
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %174, i64 2
  %180 = getelementptr inbounds i16, i16* %173, i64 2
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %174, i64 3
  %183 = getelementptr inbounds i16, i16* %173, i64 3
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %174, i64 4
  %186 = getelementptr inbounds i16, i16* %173, i64 4
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %174, i64 5
  %189 = getelementptr inbounds i16, i16* %173, i64 5
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = getelementptr inbounds i16, i16* %174, i64 6
  %192 = getelementptr inbounds i16, i16* %173, i64 6
  %193 = load i16, i16* %192, align 2
  store i16 %193, i16* %191, align 2
  %194 = getelementptr inbounds i16, i16* %174, i64 7
  %195 = getelementptr inbounds i16, i16* %173, i64 7
  %196 = load i16, i16* %195, align 2
  store i16 %196, i16* %194, align 2
  %197 = add i64 %172, -8
  %198 = getelementptr inbounds i16, i16* %174, i64 8
  %199 = getelementptr inbounds i16, i16* %173, i64 8
  %200 = icmp eq i64 %197, 0
  br i1 %200, label %201, label %171, !llvm.loop !140

201:                                              ; preds = %166, %171, %146
  %202 = load %"struct.std::__1::__hash_node.238"*, %"struct.std::__1::__hash_node.238"** %6, align 8
  br label %203

203:                                              ; preds = %201, %19
  %204 = phi %"struct.std::__1::__hash_node.238"* [ %202, %201 ], [ %20, %19 ]
  %205 = getelementptr inbounds i8, i8* %10, i64 40
  %206 = bitcast i8* %205 to i32*
  %207 = getelementptr inbounds %"struct.std::__1::pair.102", %"struct.std::__1::pair.102"* %3, i64 0, i32 1
  %208 = load i32, i32* %207, align 8
  store i32 %208, i32* %206, align 8
  store i8 1, i8* %8, align 8
  %209 = getelementptr inbounds %"struct.std::__1::__hash_node.238", %"struct.std::__1::__hash_node.238"* %204, i64 0, i32 1
  store i64 %2, i64* %209, align 8
  %210 = getelementptr inbounds %"struct.std::__1::__hash_node.238", %"struct.std::__1::__hash_node.238"* %204, i64 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.56"* null, %"struct.std::__1::__hash_node_base.56"** %210, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm(%"class.std::__1::__hash_table.52"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !15
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.52", %"class.std::__1::__hash_table.52"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table.52"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !15
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.52", %"class.std::__1::__hash_table.52"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.52", %"class.std::__1::__hash_table.52"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !15
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table.52"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table.52"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.52", %"class.std::__1::__hash_table.52"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %177, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.52", %"class.std::__1::__hash_table.52"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.56"**, %"struct.std::__1::__hash_node_base.56"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.52"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.56"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.56"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.58", %"class.std::__1::__bucket_list_deallocator.58"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.56"**, %"struct.std::__1::__hash_node_base.56"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.56"* null, %"struct.std::__1::__hash_node_base.56"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !141

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.52", %"class.std::__1::__hash_table.52"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.56"* %38, null
  br i1 %39, label %185, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.56"**, %"struct.std::__1::__hash_node_base.56"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.56"* null, %"struct.std::__1::__hash_node_base.56"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.56"**, %"struct.std::__1::__hash_node_base.56"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.56"* null, %"struct.std::__1::__hash_node_base.56"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.56"**, %"struct.std::__1::__hash_node_base.56"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.56"* null, %"struct.std::__1::__hash_node_base.56"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.56"**, %"struct.std::__1::__hash_node_base.56"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.56"* null, %"struct.std::__1::__hash_node_base.56"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.56"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !15
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.56"**, %"struct.std::__1::__hash_node_base.56"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.56"* %36, %"struct.std::__1::__hash_node_base.56"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.56"* %75, null
  br i1 %76, label %185, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %171
  %80 = phi %"struct.std::__1::__hash_node_base.56"* [ %75, %77 ], [ %175, %171 ]
  %81 = phi i64 [ %71, %77 ], [ %173, %171 ]
  %82 = phi %"struct.std::__1::__hash_node_base.56"* [ %38, %77 ], [ %172, %171 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.56"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %171, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.56"**, %"struct.std::__1::__hash_node_base.56"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.56"* %98, null
  br i1 %99, label %118, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.56"* %102, null
  br i1 %103, label %157, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base.56"* %105 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %106, i64 0, i32 1, i32 1
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %80, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base.56"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %108 to i64
  %114 = select i1 %109, i64 %112, i64 %113
  %115 = icmp eq i64 %114, 0
  %116 = bitcast %"struct.std::__1::__hash_node_base.56"* %105 to i16**
  %117 = bitcast %"struct.std::__1::__hash_node_base.56"* %105 to i16*
  br label %119

118:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.56"* %82, %"struct.std::__1::__hash_node_base.56"** %97, align 8
  br label %171

119:                                              ; preds = %104, %153
  %120 = phi %"struct.std::__1::__hash_node_base.56"* [ %102, %104 ], [ %155, %153 ]
  %121 = phi %"struct.std::__1::__hash_node_base.56"* [ %80, %104 ], [ %120, %153 ]
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %120, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base.56"* %122 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %123, i64 0, i32 1, i32 1
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %120, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base.56"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = icmp eq i64 %114, %131
  br i1 %132, label %133, label %157

133:                                              ; preds = %119
  br i1 %115, label %153, label %134

134:                                              ; preds = %133
  %135 = bitcast %"struct.std::__1::__hash_node_base.56"* %122 to i16**
  %136 = load i16*, i16** %135, align 8
  %137 = bitcast %"struct.std::__1::__hash_node_base.56"* %122 to i16*
  %138 = select i1 %126, i16* %136, i16* %137
  %139 = load i16*, i16** %116, align 8
  %140 = select i1 %109, i16* %139, i16* %117
  br label %141

141:                                              ; preds = %148, %134
  %142 = phi i64 [ %149, %148 ], [ %114, %134 ]
  %143 = phi i16* [ %151, %148 ], [ %138, %134 ]
  %144 = phi i16* [ %150, %148 ], [ %140, %134 ]
  %145 = load i16, i16* %144, align 2
  %146 = load i16, i16* %143, align 2
  %147 = icmp eq i16 %146, %145
  br i1 %147, label %148, label %157

148:                                              ; preds = %141
  %149 = add i64 %142, -1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = getelementptr inbounds i16, i16* %143, i64 1
  %152 = icmp eq i64 %149, 0
  br i1 %152, label %153, label %141

153:                                              ; preds = %148, %133
  %154 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %120, i64 0, i32 0
  %155 = load %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %154, align 8
  %156 = icmp eq %"struct.std::__1::__hash_node_base.56"* %155, null
  br i1 %156, label %157, label %119

157:                                              ; preds = %153, %119, %141, %100
  %158 = phi %"struct.std::__1::__hash_node_base.56"* [ %80, %100 ], [ %121, %141 ], [ %120, %153 ], [ %121, %119 ]
  %159 = bitcast %"struct.std::__1::__hash_node_base.56"* %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"struct.std::__1::__hash_node_base.56"* %82 to i64*
  store i64 %160, i64* %161, align 8
  %162 = load %"struct.std::__1::__hash_node_base.56"**, %"struct.std::__1::__hash_node_base.56"*** %11, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %162, i64 %93
  %164 = bitcast %"struct.std::__1::__hash_node_base.56"** %163 to i64**
  %165 = load i64*, i64** %164, align 8
  %166 = load i64, i64* %165, align 8
  store i64 %166, i64* %159, align 8
  %167 = load %"struct.std::__1::__hash_node_base.56"**, %"struct.std::__1::__hash_node_base.56"*** %11, align 8
  %168 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %167, i64 %93
  %169 = load %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %168, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %169, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.56"* %80, %"struct.std::__1::__hash_node_base.56"** %170, align 8
  br label %171

171:                                              ; preds = %92, %157, %118
  %172 = phi %"struct.std::__1::__hash_node_base.56"* [ %80, %118 ], [ %82, %157 ], [ %80, %92 ]
  %173 = phi i64 [ %93, %118 ], [ %81, %157 ], [ %81, %92 ]
  %174 = getelementptr inbounds %"struct.std::__1::__hash_node_base.56", %"struct.std::__1::__hash_node_base.56"* %172, i64 0, i32 0
  %175 = load %"struct.std::__1::__hash_node_base.56"*, %"struct.std::__1::__hash_node_base.56"** %174, align 8
  %176 = icmp eq %"struct.std::__1::__hash_node_base.56"* %175, null
  br i1 %176, label %185, label %79

177:                                              ; preds = %2
  %178 = getelementptr inbounds %"class.std::__1::__hash_table.52", %"class.std::__1::__hash_table.52"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %179 = load %"struct.std::__1::__hash_node_base.56"**, %"struct.std::__1::__hash_node_base.56"*** %178, align 8
  store %"struct.std::__1::__hash_node_base.56"** null, %"struct.std::__1::__hash_node_base.56"*** %178, align 8
  %180 = icmp eq %"struct.std::__1::__hash_node_base.56"** %179, null
  br i1 %180, label %183, label %181

181:                                              ; preds = %177
  %182 = bitcast %"struct.std::__1::__hash_node_base.56"** %179 to i8*
  tail call void @_ZdlPv(i8* %182) #14
  br label %183

183:                                              ; preds = %177, %181
  %184 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.58", %"class.std::__1::__bucket_list_deallocator.58"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %184, align 8
  br label %185

185:                                              ; preds = %171, %70, %35, %183
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string.1"*, i64, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs(%"class.std::__1::basic_string"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = load i16, i16* %1, align 2
  %4 = tail call i1 @llvm.is.constant.i16(i16 %3)
  %5 = icmp eq i16 %3, 0
  br i1 %4, label %6, label %667

6:                                                ; preds = %2
  br i1 %5, label %24, label %7

7:                                                ; preds = %6, %7
  %8 = phi i64 [ %10, %7 ], [ 0, %6 ]
  %9 = phi i16* [ %11, %7 ], [ %1, %6 ]
  %10 = add i64 %8, 1
  %11 = getelementptr inbounds i16, i16* %9, i64 1
  %12 = load i16, i16* %11, align 2
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %14, label %7

14:                                               ; preds = %7
  %15 = icmp ult i64 %10, 11
  br label %16

16:                                               ; preds = %14, %16
  %17 = phi i64 [ %19, %16 ], [ 0, %14 ]
  %18 = phi i16* [ %20, %16 ], [ %1, %14 ]
  %19 = add i64 %17, 1
  %20 = getelementptr inbounds i16, i16* %18, i64 1
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %23, label %16

23:                                               ; preds = %16
  br i1 %15, label %24, label %330

24:                                               ; preds = %6, %23
  %25 = phi i64 [ %19, %23 ], [ 0, %6 ]
  %26 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  br label %37

34:                                               ; preds = %24
  %35 = trunc i64 %25 to i8
  store i8 %35, i8* %27, align 1
  %36 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %37

37:                                               ; preds = %34, %30
  %38 = phi i16* [ %33, %30 ], [ %36, %34 ]
  %39 = icmp eq i64 %25, 0
  br i1 %39, label %328, label %40

40:                                               ; preds = %37
  %41 = icmp ult i16* %38, %1
  br i1 %41, label %42, label %185

42:                                               ; preds = %40
  %43 = icmp ult i64 %25, 16
  br i1 %43, label %132, label %44

44:                                               ; preds = %42
  %45 = getelementptr i16, i16* %38, i64 %25
  %46 = getelementptr i16, i16* %1, i64 %25
  %47 = icmp ult i16* %38, %46
  %48 = icmp ugt i16* %45, %1
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %44
  %51 = and i64 %25, -16
  %52 = sub i64 %25, %51
  %53 = getelementptr i16, i16* %1, i64 %51
  %54 = getelementptr i16, i16* %38, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %1, i64 %63
  %66 = getelementptr i16, i16* %38, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !142
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !142
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !145, !noalias !142
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !145, !noalias !142
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %1, i64 %75
  %77 = getelementptr i16, i16* %38, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !142
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !142
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !145, !noalias !142
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !145, !noalias !142
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %1, i64 %86
  %88 = getelementptr i16, i16* %38, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !142
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !142
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !145, !noalias !142
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !145, !noalias !142
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %1, i64 %97
  %99 = getelementptr i16, i16* %38, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !142
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !142
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !145, !noalias !142
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !145, !noalias !142
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !147

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %1, i64 %115
  %118 = getelementptr i16, i16* %38, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !142
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !142
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !145, !noalias !142
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !145, !noalias !142
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !148

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %25, %51
  br i1 %131, label %328, label %132

132:                                              ; preds = %130, %44, %42
  %133 = phi i64 [ %25, %44 ], [ %25, %42 ], [ %52, %130 ]
  %134 = phi i16* [ %1, %44 ], [ %1, %42 ], [ %53, %130 ]
  %135 = phi i16* [ %38, %44 ], [ %38, %42 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !149

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %328, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %328, label %155, !llvm.loop !150

185:                                              ; preds = %40
  %186 = icmp ugt i16* %38, %1
  br i1 %186, label %187, label %328

187:                                              ; preds = %185
  %188 = getelementptr inbounds i16, i16* %1, i64 %25
  %189 = getelementptr inbounds i16, i16* %38, i64 %25
  %190 = icmp ult i64 %25, 16
  br i1 %190, label %275, label %191

191:                                              ; preds = %187
  %192 = icmp ult i16* %38, %188
  %193 = icmp ugt i16* %189, %1
  %194 = and i1 %192, %193
  br i1 %194, label %275, label %195

195:                                              ; preds = %191
  %196 = and i64 %25, -16
  %197 = sub i64 %25, %196
  %198 = sub i64 0, %196
  %199 = getelementptr i16, i16* %188, i64 %198
  %200 = sub i64 0, %196
  %201 = getelementptr i16, i16* %189, i64 %200
  %202 = add i64 %196, -16
  %203 = lshr exact i64 %202, 4
  %204 = add nuw nsw i64 %203, 1
  %205 = and i64 %204, 1
  %206 = icmp eq i64 %202, 0
  br i1 %206, label %253, label %207

207:                                              ; preds = %195
  %208 = sub nuw nsw i64 %204, %205
  %209 = getelementptr i16, i16* %188, i64 -1
  %210 = getelementptr i16, i16* %189, i64 -1
  %211 = getelementptr i16, i16* %188, i64 -1
  %212 = getelementptr i16, i16* %189, i64 -1
  br label %213

213:                                              ; preds = %213, %207
  %214 = phi i64 [ 0, %207 ], [ %248, %213 ]
  %215 = phi i64 [ %208, %207 ], [ %249, %213 ]
  %216 = sub i64 0, %214
  %217 = sub i64 0, %214
  %218 = getelementptr inbounds i16, i16* %210, i64 %217
  %219 = getelementptr inbounds i16, i16* %209, i64 %216
  %220 = getelementptr inbounds i16, i16* %219, i64 -7
  %221 = bitcast i16* %220 to <8 x i16>*
  %222 = load <8 x i16>, <8 x i16>* %221, align 2, !alias.scope !151
  %223 = getelementptr inbounds i16, i16* %219, i64 -8
  %224 = getelementptr inbounds i16, i16* %223, i64 -7
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2, !alias.scope !151
  %227 = getelementptr inbounds i16, i16* %218, i64 -7
  %228 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %222, <8 x i16>* %228, align 2, !alias.scope !154, !noalias !151
  %229 = getelementptr inbounds i16, i16* %218, i64 -8
  %230 = getelementptr inbounds i16, i16* %229, i64 -7
  %231 = bitcast i16* %230 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %231, align 2, !alias.scope !154, !noalias !151
  %232 = sub nuw nsw i64 -16, %214
  %233 = sub nuw nsw i64 -16, %214
  %234 = getelementptr inbounds i16, i16* %212, i64 %233
  %235 = getelementptr inbounds i16, i16* %211, i64 %232
  %236 = getelementptr inbounds i16, i16* %235, i64 -7
  %237 = bitcast i16* %236 to <8 x i16>*
  %238 = load <8 x i16>, <8 x i16>* %237, align 2, !alias.scope !151
  %239 = getelementptr inbounds i16, i16* %235, i64 -8
  %240 = getelementptr inbounds i16, i16* %239, i64 -7
  %241 = bitcast i16* %240 to <8 x i16>*
  %242 = load <8 x i16>, <8 x i16>* %241, align 2, !alias.scope !151
  %243 = getelementptr inbounds i16, i16* %234, i64 -7
  %244 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %238, <8 x i16>* %244, align 2, !alias.scope !154, !noalias !151
  %245 = getelementptr inbounds i16, i16* %234, i64 -8
  %246 = getelementptr inbounds i16, i16* %245, i64 -7
  %247 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %242, <8 x i16>* %247, align 2, !alias.scope !154, !noalias !151
  %248 = add i64 %214, 32
  %249 = add i64 %215, -2
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %251, label %213, !llvm.loop !156

251:                                              ; preds = %213
  %252 = sub nuw nsw i64 -32, %214
  br label %253

253:                                              ; preds = %251, %195
  %254 = phi i64 [ 0, %195 ], [ %252, %251 ]
  %255 = icmp eq i64 %205, 0
  br i1 %255, label %273, label %256

256:                                              ; preds = %253
  %257 = getelementptr i16, i16* %188, i64 -1
  %258 = getelementptr i16, i16* %189, i64 -1
  %259 = getelementptr inbounds i16, i16* %258, i64 %254
  %260 = getelementptr inbounds i16, i16* %257, i64 %254
  %261 = getelementptr inbounds i16, i16* %260, i64 -7
  %262 = bitcast i16* %261 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !151
  %264 = getelementptr inbounds i16, i16* %260, i64 -8
  %265 = getelementptr inbounds i16, i16* %264, i64 -7
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !151
  %268 = getelementptr inbounds i16, i16* %259, i64 -7
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %269, align 2, !alias.scope !154, !noalias !151
  %270 = getelementptr inbounds i16, i16* %259, i64 -8
  %271 = getelementptr inbounds i16, i16* %270, i64 -7
  %272 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %272, align 2, !alias.scope !154, !noalias !151
  br label %273

273:                                              ; preds = %253, %256
  %274 = icmp eq i64 %25, %196
  br i1 %274, label %328, label %275

275:                                              ; preds = %273, %191, %187
  %276 = phi i64 [ %25, %191 ], [ %25, %187 ], [ %197, %273 ]
  %277 = phi i16* [ %188, %191 ], [ %188, %187 ], [ %199, %273 ]
  %278 = phi i16* [ %189, %191 ], [ %189, %187 ], [ %201, %273 ]
  %279 = add i64 %276, -1
  %280 = and i64 %276, 7
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %293, label %282

282:                                              ; preds = %275, %282
  %283 = phi i64 [ %290, %282 ], [ %276, %275 ]
  %284 = phi i16* [ %288, %282 ], [ %277, %275 ]
  %285 = phi i16* [ %287, %282 ], [ %278, %275 ]
  %286 = phi i64 [ %291, %282 ], [ %280, %275 ]
  %287 = getelementptr inbounds i16, i16* %285, i64 -1
  %288 = getelementptr inbounds i16, i16* %284, i64 -1
  %289 = load i16, i16* %288, align 2
  store i16 %289, i16* %287, align 2
  %290 = add i64 %283, -1
  %291 = add i64 %286, -1
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %293, label %282, !llvm.loop !157

293:                                              ; preds = %282, %275
  %294 = phi i64 [ %276, %275 ], [ %290, %282 ]
  %295 = phi i16* [ %277, %275 ], [ %288, %282 ]
  %296 = phi i16* [ %278, %275 ], [ %287, %282 ]
  %297 = icmp ult i64 %279, 7
  br i1 %297, label %328, label %298

298:                                              ; preds = %293, %298
  %299 = phi i64 [ %326, %298 ], [ %294, %293 ]
  %300 = phi i16* [ %324, %298 ], [ %295, %293 ]
  %301 = phi i16* [ %323, %298 ], [ %296, %293 ]
  %302 = getelementptr inbounds i16, i16* %301, i64 -1
  %303 = getelementptr inbounds i16, i16* %300, i64 -1
  %304 = load i16, i16* %303, align 2
  store i16 %304, i16* %302, align 2
  %305 = getelementptr inbounds i16, i16* %301, i64 -2
  %306 = getelementptr inbounds i16, i16* %300, i64 -2
  %307 = load i16, i16* %306, align 2
  store i16 %307, i16* %305, align 2
  %308 = getelementptr inbounds i16, i16* %301, i64 -3
  %309 = getelementptr inbounds i16, i16* %300, i64 -3
  %310 = load i16, i16* %309, align 2
  store i16 %310, i16* %308, align 2
  %311 = getelementptr inbounds i16, i16* %301, i64 -4
  %312 = getelementptr inbounds i16, i16* %300, i64 -4
  %313 = load i16, i16* %312, align 2
  store i16 %313, i16* %311, align 2
  %314 = getelementptr inbounds i16, i16* %301, i64 -5
  %315 = getelementptr inbounds i16, i16* %300, i64 -5
  %316 = load i16, i16* %315, align 2
  store i16 %316, i16* %314, align 2
  %317 = getelementptr inbounds i16, i16* %301, i64 -6
  %318 = getelementptr inbounds i16, i16* %300, i64 -6
  %319 = load i16, i16* %318, align 2
  store i16 %319, i16* %317, align 2
  %320 = getelementptr inbounds i16, i16* %301, i64 -7
  %321 = getelementptr inbounds i16, i16* %300, i64 -7
  %322 = load i16, i16* %321, align 2
  store i16 %322, i16* %320, align 2
  %323 = getelementptr inbounds i16, i16* %301, i64 -8
  %324 = getelementptr inbounds i16, i16* %300, i64 -8
  %325 = load i16, i16* %324, align 2
  store i16 %325, i16* %323, align 2
  %326 = add i64 %299, -8
  %327 = icmp eq i64 %326, 0
  br i1 %327, label %328, label %298, !llvm.loop !158

328:                                              ; preds = %293, %298, %150, %155, %273, %130, %37, %185
  %329 = getelementptr inbounds i16, i16* %38, i64 %25
  store i16 0, i16* %329, align 2
  br label %1014

330:                                              ; preds = %23
  %331 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %332 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %331, i64 0, i32 1, i32 1
  %333 = load i8, i8* %332, align 1
  %334 = icmp slt i8 %333, 0
  br i1 %334, label %335, label %340

335:                                              ; preds = %330
  %336 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %337 = load i64, i64* %336, align 8
  %338 = and i64 %337, 9223372036854775807
  %339 = add nsw i64 %338, -1
  br label %340

340:                                              ; preds = %335, %330
  %341 = phi i64 [ %339, %335 ], [ 10, %330 ]
  %342 = icmp ugt i64 %19, %341
  br i1 %342, label %658, label %343

343:                                              ; preds = %340
  br i1 %334, label %344, label %347

344:                                              ; preds = %343
  %345 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %346 = load i16*, i16** %345, align 8
  br label %349

347:                                              ; preds = %343
  %348 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %349

349:                                              ; preds = %347, %344
  %350 = phi i16* [ %346, %344 ], [ %348, %347 ]
  %351 = icmp eq i64 %19, 0
  br i1 %351, label %650, label %352

352:                                              ; preds = %349
  %353 = icmp ult i16* %350, %1
  br i1 %353, label %354, label %507

354:                                              ; preds = %352
  store i16 %3, i16* %350, align 2
  %355 = getelementptr inbounds i16, i16* %1, i64 1
  %356 = icmp eq i64 %17, 0
  br i1 %356, label %650, label %357

357:                                              ; preds = %354
  %358 = icmp ult i64 %17, 16
  br i1 %358, label %454, label %359

359:                                              ; preds = %357
  %360 = getelementptr i16, i16* %350, i64 1
  %361 = getelementptr i16, i16* %350, i64 %19
  %362 = getelementptr i16, i16* %1, i64 %19
  %363 = icmp ult i16* %360, %362
  %364 = icmp ult i16* %355, %361
  %365 = and i1 %363, %364
  br i1 %365, label %454, label %366

366:                                              ; preds = %359
  %367 = and i64 %17, -16
  %368 = getelementptr i16, i16* %355, i64 %367
  %369 = sub i64 %17, %367
  %370 = getelementptr i16, i16* %350, i64 %367
  %371 = add i64 %367, -16
  %372 = lshr exact i64 %371, 4
  %373 = add nuw nsw i64 %372, 1
  %374 = and i64 %373, 3
  %375 = icmp ult i64 %371, 48
  br i1 %375, label %431, label %376

376:                                              ; preds = %366
  %377 = sub nsw i64 %373, %374
  %378 = getelementptr i16, i16* %350, i64 1
  %379 = getelementptr i16, i16* %350, i64 1
  %380 = getelementptr i16, i16* %350, i64 1
  %381 = getelementptr i16, i16* %350, i64 1
  br label %382

382:                                              ; preds = %382, %376
  %383 = phi i64 [ 0, %376 ], [ %428, %382 ]
  %384 = phi i64 [ %377, %376 ], [ %429, %382 ]
  %385 = getelementptr i16, i16* %355, i64 %383
  %386 = getelementptr inbounds i16, i16* %378, i64 %383
  %387 = bitcast i16* %385 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !159
  %389 = getelementptr i16, i16* %385, i64 8
  %390 = bitcast i16* %389 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !159
  %392 = bitcast i16* %386 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %392, align 2, !alias.scope !162, !noalias !159
  %393 = getelementptr inbounds i16, i16* %386, i64 8
  %394 = bitcast i16* %393 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %394, align 2, !alias.scope !162, !noalias !159
  %395 = or i64 %383, 16
  %396 = getelementptr i16, i16* %355, i64 %395
  %397 = getelementptr inbounds i16, i16* %379, i64 %395
  %398 = bitcast i16* %396 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !159
  %400 = getelementptr i16, i16* %396, i64 8
  %401 = bitcast i16* %400 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !159
  %403 = bitcast i16* %397 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %403, align 2, !alias.scope !162, !noalias !159
  %404 = getelementptr inbounds i16, i16* %397, i64 8
  %405 = bitcast i16* %404 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %405, align 2, !alias.scope !162, !noalias !159
  %406 = or i64 %383, 32
  %407 = getelementptr i16, i16* %355, i64 %406
  %408 = getelementptr inbounds i16, i16* %380, i64 %406
  %409 = bitcast i16* %407 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !159
  %411 = getelementptr i16, i16* %407, i64 8
  %412 = bitcast i16* %411 to <8 x i16>*
  %413 = load <8 x i16>, <8 x i16>* %412, align 2, !alias.scope !159
  %414 = bitcast i16* %408 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %414, align 2, !alias.scope !162, !noalias !159
  %415 = getelementptr inbounds i16, i16* %408, i64 8
  %416 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %413, <8 x i16>* %416, align 2, !alias.scope !162, !noalias !159
  %417 = or i64 %383, 48
  %418 = getelementptr i16, i16* %355, i64 %417
  %419 = getelementptr inbounds i16, i16* %381, i64 %417
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !159
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !159
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !162, !noalias !159
  %426 = getelementptr inbounds i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !162, !noalias !159
  %428 = add i64 %383, 64
  %429 = add i64 %384, -4
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %382, !llvm.loop !164

431:                                              ; preds = %382, %366
  %432 = phi i64 [ 0, %366 ], [ %428, %382 ]
  %433 = icmp eq i64 %374, 0
  br i1 %433, label %452, label %434

434:                                              ; preds = %431
  %435 = getelementptr i16, i16* %350, i64 1
  br label %436

436:                                              ; preds = %436, %434
  %437 = phi i64 [ %432, %434 ], [ %449, %436 ]
  %438 = phi i64 [ %374, %434 ], [ %450, %436 ]
  %439 = getelementptr i16, i16* %355, i64 %437
  %440 = getelementptr inbounds i16, i16* %435, i64 %437
  %441 = bitcast i16* %439 to <8 x i16>*
  %442 = load <8 x i16>, <8 x i16>* %441, align 2, !alias.scope !159
  %443 = getelementptr i16, i16* %439, i64 8
  %444 = bitcast i16* %443 to <8 x i16>*
  %445 = load <8 x i16>, <8 x i16>* %444, align 2, !alias.scope !159
  %446 = bitcast i16* %440 to <8 x i16>*
  store <8 x i16> %442, <8 x i16>* %446, align 2, !alias.scope !162, !noalias !159
  %447 = getelementptr inbounds i16, i16* %440, i64 8
  %448 = bitcast i16* %447 to <8 x i16>*
  store <8 x i16> %445, <8 x i16>* %448, align 2, !alias.scope !162, !noalias !159
  %449 = add i64 %437, 16
  %450 = add i64 %438, -1
  %451 = icmp eq i64 %450, 0
  br i1 %451, label %452, label %436, !llvm.loop !165

452:                                              ; preds = %436, %431
  %453 = icmp eq i64 %17, %367
  br i1 %453, label %650, label %454

454:                                              ; preds = %452, %359, %357
  %455 = phi i16* [ %355, %359 ], [ %355, %357 ], [ %368, %452 ]
  %456 = phi i64 [ %17, %359 ], [ %17, %357 ], [ %369, %452 ]
  %457 = phi i16* [ %350, %359 ], [ %350, %357 ], [ %370, %452 ]
  %458 = add i64 %456, -1
  %459 = and i64 %456, 7
  %460 = icmp eq i64 %459, 0
  br i1 %460, label %472, label %461

461:                                              ; preds = %454, %461
  %462 = phi i16* [ %469, %461 ], [ %455, %454 ]
  %463 = phi i64 [ %468, %461 ], [ %456, %454 ]
  %464 = phi i16* [ %466, %461 ], [ %457, %454 ]
  %465 = phi i64 [ %470, %461 ], [ %459, %454 ]
  %466 = getelementptr inbounds i16, i16* %464, i64 1
  %467 = load i16, i16* %462, align 2
  store i16 %467, i16* %466, align 2
  %468 = add i64 %463, -1
  %469 = getelementptr inbounds i16, i16* %462, i64 1
  %470 = add i64 %465, -1
  %471 = icmp eq i64 %470, 0
  br i1 %471, label %472, label %461, !llvm.loop !166

472:                                              ; preds = %461, %454
  %473 = phi i16* [ %455, %454 ], [ %469, %461 ]
  %474 = phi i64 [ %456, %454 ], [ %468, %461 ]
  %475 = phi i16* [ %457, %454 ], [ %466, %461 ]
  %476 = icmp ult i64 %458, 7
  br i1 %476, label %650, label %477

477:                                              ; preds = %472, %477
  %478 = phi i16* [ %505, %477 ], [ %473, %472 ]
  %479 = phi i64 [ %504, %477 ], [ %474, %472 ]
  %480 = phi i16* [ %502, %477 ], [ %475, %472 ]
  %481 = getelementptr inbounds i16, i16* %480, i64 1
  %482 = load i16, i16* %478, align 2
  store i16 %482, i16* %481, align 2
  %483 = getelementptr inbounds i16, i16* %478, i64 1
  %484 = getelementptr inbounds i16, i16* %480, i64 2
  %485 = load i16, i16* %483, align 2
  store i16 %485, i16* %484, align 2
  %486 = getelementptr inbounds i16, i16* %478, i64 2
  %487 = getelementptr inbounds i16, i16* %480, i64 3
  %488 = load i16, i16* %486, align 2
  store i16 %488, i16* %487, align 2
  %489 = getelementptr inbounds i16, i16* %478, i64 3
  %490 = getelementptr inbounds i16, i16* %480, i64 4
  %491 = load i16, i16* %489, align 2
  store i16 %491, i16* %490, align 2
  %492 = getelementptr inbounds i16, i16* %478, i64 4
  %493 = getelementptr inbounds i16, i16* %480, i64 5
  %494 = load i16, i16* %492, align 2
  store i16 %494, i16* %493, align 2
  %495 = getelementptr inbounds i16, i16* %478, i64 5
  %496 = getelementptr inbounds i16, i16* %480, i64 6
  %497 = load i16, i16* %495, align 2
  store i16 %497, i16* %496, align 2
  %498 = getelementptr inbounds i16, i16* %478, i64 6
  %499 = getelementptr inbounds i16, i16* %480, i64 7
  %500 = load i16, i16* %498, align 2
  store i16 %500, i16* %499, align 2
  %501 = getelementptr inbounds i16, i16* %478, i64 7
  %502 = getelementptr inbounds i16, i16* %480, i64 8
  %503 = load i16, i16* %501, align 2
  store i16 %503, i16* %502, align 2
  %504 = add i64 %479, -8
  %505 = getelementptr inbounds i16, i16* %478, i64 8
  %506 = icmp eq i64 %504, 0
  br i1 %506, label %650, label %477, !llvm.loop !167

507:                                              ; preds = %352
  %508 = icmp ugt i16* %350, %1
  br i1 %508, label %509, label %650

509:                                              ; preds = %507
  %510 = getelementptr inbounds i16, i16* %1, i64 %19
  %511 = getelementptr inbounds i16, i16* %350, i64 %19
  %512 = icmp ult i64 %19, 16
  br i1 %512, label %597, label %513

513:                                              ; preds = %509
  %514 = icmp ult i16* %350, %510
  %515 = icmp ugt i16* %511, %1
  %516 = and i1 %514, %515
  br i1 %516, label %597, label %517

517:                                              ; preds = %513
  %518 = and i64 %19, -16
  %519 = sub i64 %19, %518
  %520 = sub i64 0, %518
  %521 = getelementptr i16, i16* %510, i64 %520
  %522 = sub i64 0, %518
  %523 = getelementptr i16, i16* %511, i64 %522
  %524 = add i64 %518, -16
  %525 = lshr exact i64 %524, 4
  %526 = add nuw nsw i64 %525, 1
  %527 = and i64 %526, 1
  %528 = icmp eq i64 %524, 0
  br i1 %528, label %575, label %529

529:                                              ; preds = %517
  %530 = sub nuw nsw i64 %526, %527
  %531 = getelementptr i16, i16* %1, i64 %17
  %532 = getelementptr i16, i16* %350, i64 %17
  %533 = getelementptr i16, i16* %1, i64 %17
  %534 = getelementptr i16, i16* %350, i64 %17
  br label %535

535:                                              ; preds = %535, %529
  %536 = phi i64 [ 0, %529 ], [ %570, %535 ]
  %537 = phi i64 [ %530, %529 ], [ %571, %535 ]
  %538 = sub i64 0, %536
  %539 = sub i64 0, %536
  %540 = getelementptr inbounds i16, i16* %532, i64 %539
  %541 = getelementptr inbounds i16, i16* %531, i64 %538
  %542 = getelementptr inbounds i16, i16* %541, i64 -7
  %543 = bitcast i16* %542 to <8 x i16>*
  %544 = load <8 x i16>, <8 x i16>* %543, align 2, !alias.scope !168
  %545 = getelementptr inbounds i16, i16* %541, i64 -8
  %546 = getelementptr inbounds i16, i16* %545, i64 -7
  %547 = bitcast i16* %546 to <8 x i16>*
  %548 = load <8 x i16>, <8 x i16>* %547, align 2, !alias.scope !168
  %549 = getelementptr inbounds i16, i16* %540, i64 -7
  %550 = bitcast i16* %549 to <8 x i16>*
  store <8 x i16> %544, <8 x i16>* %550, align 2, !alias.scope !171, !noalias !168
  %551 = getelementptr inbounds i16, i16* %540, i64 -8
  %552 = getelementptr inbounds i16, i16* %551, i64 -7
  %553 = bitcast i16* %552 to <8 x i16>*
  store <8 x i16> %548, <8 x i16>* %553, align 2, !alias.scope !171, !noalias !168
  %554 = sub nuw nsw i64 -16, %536
  %555 = sub nuw nsw i64 -16, %536
  %556 = getelementptr inbounds i16, i16* %534, i64 %555
  %557 = getelementptr inbounds i16, i16* %533, i64 %554
  %558 = getelementptr inbounds i16, i16* %557, i64 -7
  %559 = bitcast i16* %558 to <8 x i16>*
  %560 = load <8 x i16>, <8 x i16>* %559, align 2, !alias.scope !168
  %561 = getelementptr inbounds i16, i16* %557, i64 -8
  %562 = getelementptr inbounds i16, i16* %561, i64 -7
  %563 = bitcast i16* %562 to <8 x i16>*
  %564 = load <8 x i16>, <8 x i16>* %563, align 2, !alias.scope !168
  %565 = getelementptr inbounds i16, i16* %556, i64 -7
  %566 = bitcast i16* %565 to <8 x i16>*
  store <8 x i16> %560, <8 x i16>* %566, align 2, !alias.scope !171, !noalias !168
  %567 = getelementptr inbounds i16, i16* %556, i64 -8
  %568 = getelementptr inbounds i16, i16* %567, i64 -7
  %569 = bitcast i16* %568 to <8 x i16>*
  store <8 x i16> %564, <8 x i16>* %569, align 2, !alias.scope !171, !noalias !168
  %570 = add i64 %536, 32
  %571 = add i64 %537, -2
  %572 = icmp eq i64 %571, 0
  br i1 %572, label %573, label %535, !llvm.loop !173

573:                                              ; preds = %535
  %574 = sub nuw nsw i64 -32, %536
  br label %575

575:                                              ; preds = %573, %517
  %576 = phi i64 [ 0, %517 ], [ %574, %573 ]
  %577 = icmp eq i64 %527, 0
  br i1 %577, label %595, label %578

578:                                              ; preds = %575
  %579 = getelementptr i16, i16* %1, i64 %17
  %580 = getelementptr i16, i16* %350, i64 %17
  %581 = getelementptr inbounds i16, i16* %580, i64 %576
  %582 = getelementptr inbounds i16, i16* %579, i64 %576
  %583 = getelementptr inbounds i16, i16* %582, i64 -7
  %584 = bitcast i16* %583 to <8 x i16>*
  %585 = load <8 x i16>, <8 x i16>* %584, align 2, !alias.scope !168
  %586 = getelementptr inbounds i16, i16* %582, i64 -8
  %587 = getelementptr inbounds i16, i16* %586, i64 -7
  %588 = bitcast i16* %587 to <8 x i16>*
  %589 = load <8 x i16>, <8 x i16>* %588, align 2, !alias.scope !168
  %590 = getelementptr inbounds i16, i16* %581, i64 -7
  %591 = bitcast i16* %590 to <8 x i16>*
  store <8 x i16> %585, <8 x i16>* %591, align 2, !alias.scope !171, !noalias !168
  %592 = getelementptr inbounds i16, i16* %581, i64 -8
  %593 = getelementptr inbounds i16, i16* %592, i64 -7
  %594 = bitcast i16* %593 to <8 x i16>*
  store <8 x i16> %589, <8 x i16>* %594, align 2, !alias.scope !171, !noalias !168
  br label %595

595:                                              ; preds = %575, %578
  %596 = icmp eq i64 %19, %518
  br i1 %596, label %650, label %597

597:                                              ; preds = %595, %513, %509
  %598 = phi i64 [ %19, %513 ], [ %19, %509 ], [ %519, %595 ]
  %599 = phi i16* [ %510, %513 ], [ %510, %509 ], [ %521, %595 ]
  %600 = phi i16* [ %511, %513 ], [ %511, %509 ], [ %523, %595 ]
  %601 = add i64 %598, -1
  %602 = and i64 %598, 7
  %603 = icmp eq i64 %602, 0
  br i1 %603, label %615, label %604

604:                                              ; preds = %597, %604
  %605 = phi i64 [ %612, %604 ], [ %598, %597 ]
  %606 = phi i16* [ %610, %604 ], [ %599, %597 ]
  %607 = phi i16* [ %609, %604 ], [ %600, %597 ]
  %608 = phi i64 [ %613, %604 ], [ %602, %597 ]
  %609 = getelementptr inbounds i16, i16* %607, i64 -1
  %610 = getelementptr inbounds i16, i16* %606, i64 -1
  %611 = load i16, i16* %610, align 2
  store i16 %611, i16* %609, align 2
  %612 = add i64 %605, -1
  %613 = add i64 %608, -1
  %614 = icmp eq i64 %613, 0
  br i1 %614, label %615, label %604, !llvm.loop !174

615:                                              ; preds = %604, %597
  %616 = phi i64 [ %598, %597 ], [ %612, %604 ]
  %617 = phi i16* [ %599, %597 ], [ %610, %604 ]
  %618 = phi i16* [ %600, %597 ], [ %609, %604 ]
  %619 = icmp ult i64 %601, 7
  br i1 %619, label %650, label %620

620:                                              ; preds = %615, %620
  %621 = phi i64 [ %648, %620 ], [ %616, %615 ]
  %622 = phi i16* [ %646, %620 ], [ %617, %615 ]
  %623 = phi i16* [ %645, %620 ], [ %618, %615 ]
  %624 = getelementptr inbounds i16, i16* %623, i64 -1
  %625 = getelementptr inbounds i16, i16* %622, i64 -1
  %626 = load i16, i16* %625, align 2
  store i16 %626, i16* %624, align 2
  %627 = getelementptr inbounds i16, i16* %623, i64 -2
  %628 = getelementptr inbounds i16, i16* %622, i64 -2
  %629 = load i16, i16* %628, align 2
  store i16 %629, i16* %627, align 2
  %630 = getelementptr inbounds i16, i16* %623, i64 -3
  %631 = getelementptr inbounds i16, i16* %622, i64 -3
  %632 = load i16, i16* %631, align 2
  store i16 %632, i16* %630, align 2
  %633 = getelementptr inbounds i16, i16* %623, i64 -4
  %634 = getelementptr inbounds i16, i16* %622, i64 -4
  %635 = load i16, i16* %634, align 2
  store i16 %635, i16* %633, align 2
  %636 = getelementptr inbounds i16, i16* %623, i64 -5
  %637 = getelementptr inbounds i16, i16* %622, i64 -5
  %638 = load i16, i16* %637, align 2
  store i16 %638, i16* %636, align 2
  %639 = getelementptr inbounds i16, i16* %623, i64 -6
  %640 = getelementptr inbounds i16, i16* %622, i64 -6
  %641 = load i16, i16* %640, align 2
  store i16 %641, i16* %639, align 2
  %642 = getelementptr inbounds i16, i16* %623, i64 -7
  %643 = getelementptr inbounds i16, i16* %622, i64 -7
  %644 = load i16, i16* %643, align 2
  store i16 %644, i16* %642, align 2
  %645 = getelementptr inbounds i16, i16* %623, i64 -8
  %646 = getelementptr inbounds i16, i16* %622, i64 -8
  %647 = load i16, i16* %646, align 2
  store i16 %647, i16* %645, align 2
  %648 = add i64 %621, -8
  %649 = icmp eq i64 %648, 0
  br i1 %649, label %650, label %620, !llvm.loop !175

650:                                              ; preds = %615, %620, %472, %477, %595, %354, %452, %507, %349
  %651 = getelementptr inbounds i16, i16* %350, i64 %19
  store i16 0, i16* %651, align 2
  %652 = load i8, i8* %332, align 1
  %653 = icmp slt i8 %652, 0
  br i1 %653, label %654, label %656

654:                                              ; preds = %650
  %655 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %19, i64* %655, align 8
  br label %1014

656:                                              ; preds = %650
  %657 = trunc i64 %19 to i8
  store i8 %657, i8* %332, align 1
  br label %1014

658:                                              ; preds = %340
  br i1 %334, label %659, label %662

659:                                              ; preds = %658
  %660 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %661 = load i64, i64* %660, align 8
  br label %664

662:                                              ; preds = %658
  %663 = zext i8 %333 to i64
  br label %664

664:                                              ; preds = %662, %659
  %665 = phi i64 [ %661, %659 ], [ %663, %662 ]
  %666 = sub i64 %19, %341
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %341, i64 %666, i64 %665, i64 0, i64 %665, i64 %19, i16* %1) #13
  br label %1014

667:                                              ; preds = %2
  br i1 %5, label %675, label %668

668:                                              ; preds = %667, %668
  %669 = phi i64 [ %671, %668 ], [ 0, %667 ]
  %670 = phi i16* [ %672, %668 ], [ %1, %667 ]
  %671 = add i64 %669, 1
  %672 = getelementptr inbounds i16, i16* %670, i64 1
  %673 = load i16, i16* %672, align 2
  %674 = icmp eq i16 %673, 0
  br i1 %674, label %675, label %668

675:                                              ; preds = %668, %667
  %676 = phi i64 [ 0, %667 ], [ %671, %668 ]
  %677 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %678 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %677, i64 0, i32 1, i32 1
  %679 = load i8, i8* %678, align 1
  %680 = icmp slt i8 %679, 0
  br i1 %680, label %681, label %686

681:                                              ; preds = %675
  %682 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %683 = load i64, i64* %682, align 8
  %684 = and i64 %683, 9223372036854775807
  %685 = add nsw i64 %684, -1
  br label %686

686:                                              ; preds = %681, %675
  %687 = phi i64 [ %685, %681 ], [ 10, %675 ]
  %688 = icmp ugt i64 %676, %687
  br i1 %688, label %1005, label %689

689:                                              ; preds = %686
  br i1 %680, label %690, label %693

690:                                              ; preds = %689
  %691 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %692 = load i16*, i16** %691, align 8
  br label %695

693:                                              ; preds = %689
  %694 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %695

695:                                              ; preds = %693, %690
  %696 = phi i16* [ %692, %690 ], [ %694, %693 ]
  %697 = icmp eq i64 %676, 0
  br i1 %697, label %997, label %698

698:                                              ; preds = %695
  %699 = icmp ult i16* %696, %1
  br i1 %699, label %700, label %854

700:                                              ; preds = %698
  store i16 %3, i16* %696, align 2
  %701 = add i64 %676, -1
  %702 = getelementptr inbounds i16, i16* %1, i64 1
  %703 = icmp eq i64 %701, 0
  br i1 %703, label %997, label %704

704:                                              ; preds = %700
  %705 = icmp ult i64 %701, 16
  br i1 %705, label %801, label %706

706:                                              ; preds = %704
  %707 = getelementptr i16, i16* %696, i64 1
  %708 = getelementptr i16, i16* %696, i64 %676
  %709 = getelementptr i16, i16* %1, i64 %676
  %710 = icmp ult i16* %707, %709
  %711 = icmp ult i16* %702, %708
  %712 = and i1 %710, %711
  br i1 %712, label %801, label %713

713:                                              ; preds = %706
  %714 = and i64 %701, -16
  %715 = getelementptr i16, i16* %702, i64 %714
  %716 = sub i64 %701, %714
  %717 = getelementptr i16, i16* %696, i64 %714
  %718 = add i64 %714, -16
  %719 = lshr exact i64 %718, 4
  %720 = add nuw nsw i64 %719, 1
  %721 = and i64 %720, 3
  %722 = icmp ult i64 %718, 48
  br i1 %722, label %778, label %723

723:                                              ; preds = %713
  %724 = sub nsw i64 %720, %721
  %725 = getelementptr i16, i16* %696, i64 1
  %726 = getelementptr i16, i16* %696, i64 1
  %727 = getelementptr i16, i16* %696, i64 1
  %728 = getelementptr i16, i16* %696, i64 1
  br label %729

729:                                              ; preds = %729, %723
  %730 = phi i64 [ 0, %723 ], [ %775, %729 ]
  %731 = phi i64 [ %724, %723 ], [ %776, %729 ]
  %732 = getelementptr i16, i16* %702, i64 %730
  %733 = getelementptr inbounds i16, i16* %725, i64 %730
  %734 = bitcast i16* %732 to <8 x i16>*
  %735 = load <8 x i16>, <8 x i16>* %734, align 2, !alias.scope !176
  %736 = getelementptr i16, i16* %732, i64 8
  %737 = bitcast i16* %736 to <8 x i16>*
  %738 = load <8 x i16>, <8 x i16>* %737, align 2, !alias.scope !176
  %739 = bitcast i16* %733 to <8 x i16>*
  store <8 x i16> %735, <8 x i16>* %739, align 2, !alias.scope !179, !noalias !176
  %740 = getelementptr inbounds i16, i16* %733, i64 8
  %741 = bitcast i16* %740 to <8 x i16>*
  store <8 x i16> %738, <8 x i16>* %741, align 2, !alias.scope !179, !noalias !176
  %742 = or i64 %730, 16
  %743 = getelementptr i16, i16* %702, i64 %742
  %744 = getelementptr inbounds i16, i16* %726, i64 %742
  %745 = bitcast i16* %743 to <8 x i16>*
  %746 = load <8 x i16>, <8 x i16>* %745, align 2, !alias.scope !176
  %747 = getelementptr i16, i16* %743, i64 8
  %748 = bitcast i16* %747 to <8 x i16>*
  %749 = load <8 x i16>, <8 x i16>* %748, align 2, !alias.scope !176
  %750 = bitcast i16* %744 to <8 x i16>*
  store <8 x i16> %746, <8 x i16>* %750, align 2, !alias.scope !179, !noalias !176
  %751 = getelementptr inbounds i16, i16* %744, i64 8
  %752 = bitcast i16* %751 to <8 x i16>*
  store <8 x i16> %749, <8 x i16>* %752, align 2, !alias.scope !179, !noalias !176
  %753 = or i64 %730, 32
  %754 = getelementptr i16, i16* %702, i64 %753
  %755 = getelementptr inbounds i16, i16* %727, i64 %753
  %756 = bitcast i16* %754 to <8 x i16>*
  %757 = load <8 x i16>, <8 x i16>* %756, align 2, !alias.scope !176
  %758 = getelementptr i16, i16* %754, i64 8
  %759 = bitcast i16* %758 to <8 x i16>*
  %760 = load <8 x i16>, <8 x i16>* %759, align 2, !alias.scope !176
  %761 = bitcast i16* %755 to <8 x i16>*
  store <8 x i16> %757, <8 x i16>* %761, align 2, !alias.scope !179, !noalias !176
  %762 = getelementptr inbounds i16, i16* %755, i64 8
  %763 = bitcast i16* %762 to <8 x i16>*
  store <8 x i16> %760, <8 x i16>* %763, align 2, !alias.scope !179, !noalias !176
  %764 = or i64 %730, 48
  %765 = getelementptr i16, i16* %702, i64 %764
  %766 = getelementptr inbounds i16, i16* %728, i64 %764
  %767 = bitcast i16* %765 to <8 x i16>*
  %768 = load <8 x i16>, <8 x i16>* %767, align 2, !alias.scope !176
  %769 = getelementptr i16, i16* %765, i64 8
  %770 = bitcast i16* %769 to <8 x i16>*
  %771 = load <8 x i16>, <8 x i16>* %770, align 2, !alias.scope !176
  %772 = bitcast i16* %766 to <8 x i16>*
  store <8 x i16> %768, <8 x i16>* %772, align 2, !alias.scope !179, !noalias !176
  %773 = getelementptr inbounds i16, i16* %766, i64 8
  %774 = bitcast i16* %773 to <8 x i16>*
  store <8 x i16> %771, <8 x i16>* %774, align 2, !alias.scope !179, !noalias !176
  %775 = add i64 %730, 64
  %776 = add i64 %731, -4
  %777 = icmp eq i64 %776, 0
  br i1 %777, label %778, label %729, !llvm.loop !181

778:                                              ; preds = %729, %713
  %779 = phi i64 [ 0, %713 ], [ %775, %729 ]
  %780 = icmp eq i64 %721, 0
  br i1 %780, label %799, label %781

781:                                              ; preds = %778
  %782 = getelementptr i16, i16* %696, i64 1
  br label %783

783:                                              ; preds = %783, %781
  %784 = phi i64 [ %779, %781 ], [ %796, %783 ]
  %785 = phi i64 [ %721, %781 ], [ %797, %783 ]
  %786 = getelementptr i16, i16* %702, i64 %784
  %787 = getelementptr inbounds i16, i16* %782, i64 %784
  %788 = bitcast i16* %786 to <8 x i16>*
  %789 = load <8 x i16>, <8 x i16>* %788, align 2, !alias.scope !176
  %790 = getelementptr i16, i16* %786, i64 8
  %791 = bitcast i16* %790 to <8 x i16>*
  %792 = load <8 x i16>, <8 x i16>* %791, align 2, !alias.scope !176
  %793 = bitcast i16* %787 to <8 x i16>*
  store <8 x i16> %789, <8 x i16>* %793, align 2, !alias.scope !179, !noalias !176
  %794 = getelementptr inbounds i16, i16* %787, i64 8
  %795 = bitcast i16* %794 to <8 x i16>*
  store <8 x i16> %792, <8 x i16>* %795, align 2, !alias.scope !179, !noalias !176
  %796 = add i64 %784, 16
  %797 = add i64 %785, -1
  %798 = icmp eq i64 %797, 0
  br i1 %798, label %799, label %783, !llvm.loop !182

799:                                              ; preds = %783, %778
  %800 = icmp eq i64 %701, %714
  br i1 %800, label %997, label %801

801:                                              ; preds = %799, %706, %704
  %802 = phi i16* [ %702, %706 ], [ %702, %704 ], [ %715, %799 ]
  %803 = phi i64 [ %701, %706 ], [ %701, %704 ], [ %716, %799 ]
  %804 = phi i16* [ %696, %706 ], [ %696, %704 ], [ %717, %799 ]
  %805 = add i64 %803, -1
  %806 = and i64 %803, 7
  %807 = icmp eq i64 %806, 0
  br i1 %807, label %819, label %808

808:                                              ; preds = %801, %808
  %809 = phi i16* [ %816, %808 ], [ %802, %801 ]
  %810 = phi i64 [ %815, %808 ], [ %803, %801 ]
  %811 = phi i16* [ %813, %808 ], [ %804, %801 ]
  %812 = phi i64 [ %817, %808 ], [ %806, %801 ]
  %813 = getelementptr inbounds i16, i16* %811, i64 1
  %814 = load i16, i16* %809, align 2
  store i16 %814, i16* %813, align 2
  %815 = add i64 %810, -1
  %816 = getelementptr inbounds i16, i16* %809, i64 1
  %817 = add i64 %812, -1
  %818 = icmp eq i64 %817, 0
  br i1 %818, label %819, label %808, !llvm.loop !183

819:                                              ; preds = %808, %801
  %820 = phi i16* [ %802, %801 ], [ %816, %808 ]
  %821 = phi i64 [ %803, %801 ], [ %815, %808 ]
  %822 = phi i16* [ %804, %801 ], [ %813, %808 ]
  %823 = icmp ult i64 %805, 7
  br i1 %823, label %997, label %824

824:                                              ; preds = %819, %824
  %825 = phi i16* [ %852, %824 ], [ %820, %819 ]
  %826 = phi i64 [ %851, %824 ], [ %821, %819 ]
  %827 = phi i16* [ %849, %824 ], [ %822, %819 ]
  %828 = getelementptr inbounds i16, i16* %827, i64 1
  %829 = load i16, i16* %825, align 2
  store i16 %829, i16* %828, align 2
  %830 = getelementptr inbounds i16, i16* %825, i64 1
  %831 = getelementptr inbounds i16, i16* %827, i64 2
  %832 = load i16, i16* %830, align 2
  store i16 %832, i16* %831, align 2
  %833 = getelementptr inbounds i16, i16* %825, i64 2
  %834 = getelementptr inbounds i16, i16* %827, i64 3
  %835 = load i16, i16* %833, align 2
  store i16 %835, i16* %834, align 2
  %836 = getelementptr inbounds i16, i16* %825, i64 3
  %837 = getelementptr inbounds i16, i16* %827, i64 4
  %838 = load i16, i16* %836, align 2
  store i16 %838, i16* %837, align 2
  %839 = getelementptr inbounds i16, i16* %825, i64 4
  %840 = getelementptr inbounds i16, i16* %827, i64 5
  %841 = load i16, i16* %839, align 2
  store i16 %841, i16* %840, align 2
  %842 = getelementptr inbounds i16, i16* %825, i64 5
  %843 = getelementptr inbounds i16, i16* %827, i64 6
  %844 = load i16, i16* %842, align 2
  store i16 %844, i16* %843, align 2
  %845 = getelementptr inbounds i16, i16* %825, i64 6
  %846 = getelementptr inbounds i16, i16* %827, i64 7
  %847 = load i16, i16* %845, align 2
  store i16 %847, i16* %846, align 2
  %848 = getelementptr inbounds i16, i16* %825, i64 7
  %849 = getelementptr inbounds i16, i16* %827, i64 8
  %850 = load i16, i16* %848, align 2
  store i16 %850, i16* %849, align 2
  %851 = add i64 %826, -8
  %852 = getelementptr inbounds i16, i16* %825, i64 8
  %853 = icmp eq i64 %851, 0
  br i1 %853, label %997, label %824, !llvm.loop !184

854:                                              ; preds = %698
  %855 = icmp ugt i16* %696, %1
  br i1 %855, label %856, label %997

856:                                              ; preds = %854
  %857 = getelementptr inbounds i16, i16* %1, i64 %676
  %858 = getelementptr inbounds i16, i16* %696, i64 %676
  %859 = icmp ult i64 %676, 16
  br i1 %859, label %944, label %860

860:                                              ; preds = %856
  %861 = icmp ult i16* %696, %857
  %862 = icmp ugt i16* %858, %1
  %863 = and i1 %861, %862
  br i1 %863, label %944, label %864

864:                                              ; preds = %860
  %865 = and i64 %676, -16
  %866 = sub i64 %676, %865
  %867 = sub i64 0, %865
  %868 = getelementptr i16, i16* %857, i64 %867
  %869 = sub i64 0, %865
  %870 = getelementptr i16, i16* %858, i64 %869
  %871 = add i64 %865, -16
  %872 = lshr exact i64 %871, 4
  %873 = add nuw nsw i64 %872, 1
  %874 = and i64 %873, 1
  %875 = icmp eq i64 %871, 0
  br i1 %875, label %922, label %876

876:                                              ; preds = %864
  %877 = sub nuw nsw i64 %873, %874
  %878 = getelementptr i16, i16* %857, i64 -1
  %879 = getelementptr i16, i16* %858, i64 -1
  %880 = getelementptr i16, i16* %857, i64 -1
  %881 = getelementptr i16, i16* %858, i64 -1
  br label %882

882:                                              ; preds = %882, %876
  %883 = phi i64 [ 0, %876 ], [ %917, %882 ]
  %884 = phi i64 [ %877, %876 ], [ %918, %882 ]
  %885 = sub i64 0, %883
  %886 = sub i64 0, %883
  %887 = getelementptr inbounds i16, i16* %879, i64 %886
  %888 = getelementptr inbounds i16, i16* %878, i64 %885
  %889 = getelementptr inbounds i16, i16* %888, i64 -7
  %890 = bitcast i16* %889 to <8 x i16>*
  %891 = load <8 x i16>, <8 x i16>* %890, align 2, !alias.scope !185
  %892 = getelementptr inbounds i16, i16* %888, i64 -8
  %893 = getelementptr inbounds i16, i16* %892, i64 -7
  %894 = bitcast i16* %893 to <8 x i16>*
  %895 = load <8 x i16>, <8 x i16>* %894, align 2, !alias.scope !185
  %896 = getelementptr inbounds i16, i16* %887, i64 -7
  %897 = bitcast i16* %896 to <8 x i16>*
  store <8 x i16> %891, <8 x i16>* %897, align 2, !alias.scope !188, !noalias !185
  %898 = getelementptr inbounds i16, i16* %887, i64 -8
  %899 = getelementptr inbounds i16, i16* %898, i64 -7
  %900 = bitcast i16* %899 to <8 x i16>*
  store <8 x i16> %895, <8 x i16>* %900, align 2, !alias.scope !188, !noalias !185
  %901 = sub nuw nsw i64 -16, %883
  %902 = sub nuw nsw i64 -16, %883
  %903 = getelementptr inbounds i16, i16* %881, i64 %902
  %904 = getelementptr inbounds i16, i16* %880, i64 %901
  %905 = getelementptr inbounds i16, i16* %904, i64 -7
  %906 = bitcast i16* %905 to <8 x i16>*
  %907 = load <8 x i16>, <8 x i16>* %906, align 2, !alias.scope !185
  %908 = getelementptr inbounds i16, i16* %904, i64 -8
  %909 = getelementptr inbounds i16, i16* %908, i64 -7
  %910 = bitcast i16* %909 to <8 x i16>*
  %911 = load <8 x i16>, <8 x i16>* %910, align 2, !alias.scope !185
  %912 = getelementptr inbounds i16, i16* %903, i64 -7
  %913 = bitcast i16* %912 to <8 x i16>*
  store <8 x i16> %907, <8 x i16>* %913, align 2, !alias.scope !188, !noalias !185
  %914 = getelementptr inbounds i16, i16* %903, i64 -8
  %915 = getelementptr inbounds i16, i16* %914, i64 -7
  %916 = bitcast i16* %915 to <8 x i16>*
  store <8 x i16> %911, <8 x i16>* %916, align 2, !alias.scope !188, !noalias !185
  %917 = add i64 %883, 32
  %918 = add i64 %884, -2
  %919 = icmp eq i64 %918, 0
  br i1 %919, label %920, label %882, !llvm.loop !190

920:                                              ; preds = %882
  %921 = sub nuw nsw i64 -32, %883
  br label %922

922:                                              ; preds = %920, %864
  %923 = phi i64 [ 0, %864 ], [ %921, %920 ]
  %924 = icmp eq i64 %874, 0
  br i1 %924, label %942, label %925

925:                                              ; preds = %922
  %926 = getelementptr i16, i16* %857, i64 -1
  %927 = getelementptr i16, i16* %858, i64 -1
  %928 = getelementptr inbounds i16, i16* %927, i64 %923
  %929 = getelementptr inbounds i16, i16* %926, i64 %923
  %930 = getelementptr inbounds i16, i16* %929, i64 -7
  %931 = bitcast i16* %930 to <8 x i16>*
  %932 = load <8 x i16>, <8 x i16>* %931, align 2, !alias.scope !185
  %933 = getelementptr inbounds i16, i16* %929, i64 -8
  %934 = getelementptr inbounds i16, i16* %933, i64 -7
  %935 = bitcast i16* %934 to <8 x i16>*
  %936 = load <8 x i16>, <8 x i16>* %935, align 2, !alias.scope !185
  %937 = getelementptr inbounds i16, i16* %928, i64 -7
  %938 = bitcast i16* %937 to <8 x i16>*
  store <8 x i16> %932, <8 x i16>* %938, align 2, !alias.scope !188, !noalias !185
  %939 = getelementptr inbounds i16, i16* %928, i64 -8
  %940 = getelementptr inbounds i16, i16* %939, i64 -7
  %941 = bitcast i16* %940 to <8 x i16>*
  store <8 x i16> %936, <8 x i16>* %941, align 2, !alias.scope !188, !noalias !185
  br label %942

942:                                              ; preds = %922, %925
  %943 = icmp eq i64 %676, %865
  br i1 %943, label %997, label %944

944:                                              ; preds = %942, %860, %856
  %945 = phi i64 [ %676, %860 ], [ %676, %856 ], [ %866, %942 ]
  %946 = phi i16* [ %857, %860 ], [ %857, %856 ], [ %868, %942 ]
  %947 = phi i16* [ %858, %860 ], [ %858, %856 ], [ %870, %942 ]
  %948 = add i64 %945, -1
  %949 = and i64 %945, 7
  %950 = icmp eq i64 %949, 0
  br i1 %950, label %962, label %951

951:                                              ; preds = %944, %951
  %952 = phi i64 [ %959, %951 ], [ %945, %944 ]
  %953 = phi i16* [ %957, %951 ], [ %946, %944 ]
  %954 = phi i16* [ %956, %951 ], [ %947, %944 ]
  %955 = phi i64 [ %960, %951 ], [ %949, %944 ]
  %956 = getelementptr inbounds i16, i16* %954, i64 -1
  %957 = getelementptr inbounds i16, i16* %953, i64 -1
  %958 = load i16, i16* %957, align 2
  store i16 %958, i16* %956, align 2
  %959 = add i64 %952, -1
  %960 = add i64 %955, -1
  %961 = icmp eq i64 %960, 0
  br i1 %961, label %962, label %951, !llvm.loop !191

962:                                              ; preds = %951, %944
  %963 = phi i64 [ %945, %944 ], [ %959, %951 ]
  %964 = phi i16* [ %946, %944 ], [ %957, %951 ]
  %965 = phi i16* [ %947, %944 ], [ %956, %951 ]
  %966 = icmp ult i64 %948, 7
  br i1 %966, label %997, label %967

967:                                              ; preds = %962, %967
  %968 = phi i64 [ %995, %967 ], [ %963, %962 ]
  %969 = phi i16* [ %993, %967 ], [ %964, %962 ]
  %970 = phi i16* [ %992, %967 ], [ %965, %962 ]
  %971 = getelementptr inbounds i16, i16* %970, i64 -1
  %972 = getelementptr inbounds i16, i16* %969, i64 -1
  %973 = load i16, i16* %972, align 2
  store i16 %973, i16* %971, align 2
  %974 = getelementptr inbounds i16, i16* %970, i64 -2
  %975 = getelementptr inbounds i16, i16* %969, i64 -2
  %976 = load i16, i16* %975, align 2
  store i16 %976, i16* %974, align 2
  %977 = getelementptr inbounds i16, i16* %970, i64 -3
  %978 = getelementptr inbounds i16, i16* %969, i64 -3
  %979 = load i16, i16* %978, align 2
  store i16 %979, i16* %977, align 2
  %980 = getelementptr inbounds i16, i16* %970, i64 -4
  %981 = getelementptr inbounds i16, i16* %969, i64 -4
  %982 = load i16, i16* %981, align 2
  store i16 %982, i16* %980, align 2
  %983 = getelementptr inbounds i16, i16* %970, i64 -5
  %984 = getelementptr inbounds i16, i16* %969, i64 -5
  %985 = load i16, i16* %984, align 2
  store i16 %985, i16* %983, align 2
  %986 = getelementptr inbounds i16, i16* %970, i64 -6
  %987 = getelementptr inbounds i16, i16* %969, i64 -6
  %988 = load i16, i16* %987, align 2
  store i16 %988, i16* %986, align 2
  %989 = getelementptr inbounds i16, i16* %970, i64 -7
  %990 = getelementptr inbounds i16, i16* %969, i64 -7
  %991 = load i16, i16* %990, align 2
  store i16 %991, i16* %989, align 2
  %992 = getelementptr inbounds i16, i16* %970, i64 -8
  %993 = getelementptr inbounds i16, i16* %969, i64 -8
  %994 = load i16, i16* %993, align 2
  store i16 %994, i16* %992, align 2
  %995 = add i64 %968, -8
  %996 = icmp eq i64 %995, 0
  br i1 %996, label %997, label %967, !llvm.loop !192

997:                                              ; preds = %962, %967, %819, %824, %942, %700, %799, %854, %695
  %998 = getelementptr inbounds i16, i16* %696, i64 %676
  store i16 0, i16* %998, align 2
  %999 = load i8, i8* %678, align 1
  %1000 = icmp slt i8 %999, 0
  br i1 %1000, label %1001, label %1003

1001:                                             ; preds = %997
  %1002 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %676, i64* %1002, align 8
  br label %1014

1003:                                             ; preds = %997
  %1004 = trunc i64 %676 to i8
  store i8 %1004, i8* %678, align 1
  br label %1014

1005:                                             ; preds = %686
  br i1 %680, label %1006, label %1009

1006:                                             ; preds = %1005
  %1007 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1008 = load i64, i64* %1007, align 8
  br label %1011

1009:                                             ; preds = %1005
  %1010 = zext i8 %679 to i64
  br label %1011

1011:                                             ; preds = %1009, %1006
  %1012 = phi i64 [ %1008, %1006 ], [ %1010, %1009 ]
  %1013 = sub i64 %676, %687
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %687, i64 %1013, i64 %1012, i64 0, i64 %1012, i64 %676, i16* %1) #13
  br label %1014

1014:                                             ; preds = %1011, %1003, %1001, %664, %656, %654, %328
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i16(i16) #12

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { nounwind readnone }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6}
!6 = distinct !{!6, !"LVerDomain"}
!7 = !{!8}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
!13 = distinct !{!13, !12}
!14 = distinct !{!14, !10}
!15 = !{i64 0, i64 65}
!16 = !{!"branch_weights", i32 2000, i32 1}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK4base16StringTokenizerTINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS1_11__wrap_iterIPKDsEEE5tokenEv: argument 0"}
!19 = distinct !{!19, !"_ZNK4base16StringTokenizerTINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS1_11__wrap_iterIPKDsEEE5tokenEv"}
!20 = !{!21}
!21 = distinct !{!21, !22}
!22 = distinct !{!22, !"LVerDomain"}
!23 = !{!24}
!24 = distinct !{!24, !22}
!25 = distinct !{!25, !10}
!26 = distinct !{!26, !12}
!27 = distinct !{!27, !12}
!28 = distinct !{!28, !10}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !10}
!35 = distinct !{!35, !12}
!36 = distinct !{!36, !12}
!37 = distinct !{!37, !10}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK4base16StringTokenizerTINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS1_11__wrap_iterIPKDsEEE5tokenEv: argument 0"}
!40 = distinct !{!40, !"_ZNK4base16StringTokenizerTINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS1_11__wrap_iterIPKDsEEE5tokenEv"}
!41 = !{!42}
!42 = distinct !{!42, !43}
!43 = distinct !{!43, !"LVerDomain"}
!44 = !{!45}
!45 = distinct !{!45, !43}
!46 = distinct !{!46, !10}
!47 = distinct !{!47, !12}
!48 = distinct !{!48, !12}
!49 = distinct !{!49, !10}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNK4base16StringTokenizerTINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS1_11__wrap_iterIPKDsEEE5tokenEv: argument 0"}
!52 = distinct !{!52, !"_ZNK4base16StringTokenizerTINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS1_11__wrap_iterIPKDsEEE5tokenEv"}
!53 = !{!54}
!54 = distinct !{!54, !55}
!55 = distinct !{!55, !"LVerDomain"}
!56 = !{!57}
!57 = distinct !{!57, !55}
!58 = distinct !{!58, !10}
!59 = distinct !{!59, !12}
!60 = distinct !{!60, !12}
!61 = distinct !{!61, !10}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZNK4base16StringTokenizerTINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS1_11__wrap_iterIPKDsEEE5tokenEv: argument 0"}
!64 = distinct !{!64, !"_ZNK4base16StringTokenizerTINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS1_11__wrap_iterIPKDsEEE5tokenEv"}
!65 = !{!66}
!66 = distinct !{!66, !67}
!67 = distinct !{!67, !"LVerDomain"}
!68 = !{!69}
!69 = distinct !{!69, !67}
!70 = distinct !{!70, !10}
!71 = distinct !{!71, !12}
!72 = distinct !{!72, !12}
!73 = distinct !{!73, !10}
!74 = !{!75}
!75 = distinct !{!75, !76}
!76 = distinct !{!76, !"LVerDomain"}
!77 = !{!78}
!78 = distinct !{!78, !76}
!79 = distinct !{!79, !10}
!80 = distinct !{!80, !12}
!81 = distinct !{!81, !12}
!82 = distinct !{!82, !10}
!83 = !{!84}
!84 = distinct !{!84, !85}
!85 = distinct !{!85, !"LVerDomain"}
!86 = !{!87}
!87 = distinct !{!87, !85}
!88 = distinct !{!88, !10}
!89 = distinct !{!89, !12}
!90 = distinct !{!90, !12}
!91 = distinct !{!91, !10}
!92 = !{!93}
!93 = distinct !{!93, !94}
!94 = distinct !{!94, !"LVerDomain"}
!95 = !{!96}
!96 = distinct !{!96, !94}
!97 = distinct !{!97, !10}
!98 = distinct !{!98, !12}
!99 = distinct !{!99, !12}
!100 = distinct !{!100, !10}
!101 = !{!102}
!102 = distinct !{!102, !103}
!103 = distinct !{!103, !"LVerDomain"}
!104 = !{!105}
!105 = distinct !{!105, !103}
!106 = distinct !{!106, !10}
!107 = distinct !{!107, !12}
!108 = distinct !{!108, !12}
!109 = distinct !{!109, !10}
!110 = !{!111}
!111 = distinct !{!111, !112}
!112 = distinct !{!112, !"LVerDomain"}
!113 = !{!114}
!114 = distinct !{!114, !112}
!115 = distinct !{!115, !10}
!116 = distinct !{!116, !12}
!117 = distinct !{!117, !12}
!118 = distinct !{!118, !10}
!119 = distinct !{!119, !10}
!120 = distinct !{!120, !12}
!121 = distinct !{!121, !122, !10}
!122 = !{!"llvm.loop.unroll.runtime.disable"}
!123 = !{!124}
!124 = distinct !{!124, !125}
!125 = distinct !{!125, !"LVerDomain"}
!126 = !{!127}
!127 = distinct !{!127, !125}
!128 = distinct !{!128, !10}
!129 = distinct !{!129, !12}
!130 = distinct !{!130, !12}
!131 = distinct !{!131, !10}
!132 = !{!133}
!133 = distinct !{!133, !134}
!134 = distinct !{!134, !"LVerDomain"}
!135 = !{!136}
!136 = distinct !{!136, !134}
!137 = distinct !{!137, !10}
!138 = distinct !{!138, !12}
!139 = distinct !{!139, !12}
!140 = distinct !{!140, !10}
!141 = distinct !{!141, !12}
!142 = !{!143}
!143 = distinct !{!143, !144}
!144 = distinct !{!144, !"LVerDomain"}
!145 = !{!146}
!146 = distinct !{!146, !144}
!147 = distinct !{!147, !10}
!148 = distinct !{!148, !12}
!149 = distinct !{!149, !12}
!150 = distinct !{!150, !10}
!151 = !{!152}
!152 = distinct !{!152, !153}
!153 = distinct !{!153, !"LVerDomain"}
!154 = !{!155}
!155 = distinct !{!155, !153}
!156 = distinct !{!156, !10}
!157 = distinct !{!157, !12}
!158 = distinct !{!158, !10}
!159 = !{!160}
!160 = distinct !{!160, !161}
!161 = distinct !{!161, !"LVerDomain"}
!162 = !{!163}
!163 = distinct !{!163, !161}
!164 = distinct !{!164, !10}
!165 = distinct !{!165, !12}
!166 = distinct !{!166, !12}
!167 = distinct !{!167, !10}
!168 = !{!169}
!169 = distinct !{!169, !170}
!170 = distinct !{!170, !"LVerDomain"}
!171 = !{!172}
!172 = distinct !{!172, !170}
!173 = distinct !{!173, !10}
!174 = distinct !{!174, !12}
!175 = distinct !{!175, !10}
!176 = !{!177}
!177 = distinct !{!177, !178}
!178 = distinct !{!178, !"LVerDomain"}
!179 = !{!180}
!180 = distinct !{!180, !178}
!181 = distinct !{!181, !10}
!182 = distinct !{!182, !12}
!183 = distinct !{!183, !12}
!184 = distinct !{!184, !10}
!185 = !{!186}
!186 = distinct !{!186, !187}
!187 = distinct !{!187, !"LVerDomain"}
!188 = !{!189}
!189 = distinct !{!189, !187}
!190 = distinct !{!190, !10}
!191 = distinct !{!191, !12}
!192 = distinct !{!192, !10}
