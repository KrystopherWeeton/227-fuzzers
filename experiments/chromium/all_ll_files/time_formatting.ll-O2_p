; ModuleID = '../../base/i18n/time_formatting.cc'
source_filename = "../../base/i18n/time_formatting.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.icu_69::Format.base" = type <{ %"class.icu_69::UObject", [157 x i8], [157 x i8] }>
%"class.icu_69::UObject" = type { i32 (...)** }
%"class.icu_69::Calendar" = type <{ %"class.icu_69::UObject", i8, i8, i8, i8, [23 x i32], [23 x i8], i8, [23 x i32], i32, double, i8, [7 x i8], %"class.icu_69::TimeZone"*, i32, i32, i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, [157 x i8], [157 x i8], [6 x i8] }>
%"class.icu_69::TimeZone" = type { %"class.icu_69::UObject", %"class.icu_69::UnicodeString" }
%"class.icu_69::UnicodeString" = type { %"class.icu_69::Replaceable", %"union.icu_69::UnicodeString::StackBufferOrFields" }
%"class.icu_69::Replaceable" = type { %"class.icu_69::UObject" }
%"union.icu_69::UnicodeString::StackBufferOrFields" = type { %struct.anon.4, [32 x i8] }
%struct.anon.4 = type { i16, i32, i32, i16* }
%"class.icu_69::NumberFormat" = type { %"class.icu_69::Format.base", i8, i32, i32, i32, i32, i8, i8, [4 x i16], i32, [4 x i8] }
%"class.icu_69::EnumSet" = type { i32 }
%"class.icu_69::Locale" = type <{ %"class.icu_69::UObject", [12 x i8], [6 x i8], [4 x i8], [2 x i8], i32, [4 x i8], i8*, [157 x i8], [3 x i8], i8*, i8, [7 x i8] }>
%"class.icu_69::DateFormatSymbols" = type opaque
%"class.icu_69::TimeZoneFormat" = type { %"class.icu_69::Format.base", [6 x i8], %"class.icu_69::Locale", [4 x i8], %"class.icu_69::TimeZoneNames"*, %"class.icu_69::TimeZoneGenericNames"*, %"class.icu_69::UnicodeString", [6 x %"class.icu_69::UnicodeString"], [10 x i32], %"class.icu_69::UnicodeString", i32, %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString", [6 x %"class.icu_69::UVector"*], i8, %"class.icu_69::TZDBTimeZoneNames"* }
%"class.icu_69::TimeZoneNames" = type { %"class.icu_69::UObject" }
%"class.icu_69::TimeZoneGenericNames" = type opaque
%"class.icu_69::UVector" = type opaque
%"class.icu_69::TZDBTimeZoneNames" = type opaque
%"class.icu_69::SharedNumberFormat" = type opaque
%"class.icu_69::number::LocalizedNumberFormatter" = type opaque
%"class.icu_69::BreakIterator" = type <{ %"class.icu_69::UObject", [157 x i8], [157 x i8], [6 x i8] }>
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.icu_69::DateFormat" = type { %"class.icu_69::Format.base", %"class.icu_69::Calendar"*, %"class.icu_69::NumberFormat"*, %"class.icu_69::EnumSet", i32 }
%struct.anon.3 = type { i16, [27 x i16] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.icu_69::SimpleDateFormat" = type { %"class.icu_69::DateFormat", %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString", %"class.icu_69::Locale", %"class.icu_69::DateFormatSymbols"*, %"class.icu_69::TimeZoneFormat"*, double, i8, i8, i8, i32, %"class.icu_69::SharedNumberFormat"**, [5 x %"class.icu_69::number::LocalizedNumberFormatter"*], i8, %"class.icu_69::BreakIterator"* }
%"class.icu_69::DateTimePatternGenerator" = type <{ %"class.icu_69::UObject", %"class.icu_69::Locale", %"class.icu_69::FormatParser"*, %"class.icu_69::DateTimeMatcher"*, %"class.icu_69::DistanceInfo"*, %"class.icu_69::PatternMap"*, [16 x %"class.icu_69::UnicodeString"], [16 x [3 x %"class.icu_69::UnicodeString"]], %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString", %"class.icu_69::DateTimeMatcher"*, %"class.icu_69::Hashtable"*, %"class.icu_69::UnicodeString", i16, [2 x i8], [7 x i32], i32, [4 x i8] }>
%"class.icu_69::FormatParser" = type opaque
%"class.icu_69::DistanceInfo" = type opaque
%"class.icu_69::PatternMap" = type opaque
%"class.icu_69::DateTimeMatcher" = type opaque
%"class.icu_69::Hashtable" = type opaque
%"class.icu_69::FieldPosition" = type <{ %"class.icu_69::UObject", i32, i32, i32, [4 x i8] }>
%"class.base::TimeDelta" = type { i64 }
%"class.icu_69::Measure" = type { %"class.icu_69::UObject", %"class.icu_69::Formattable", %"class.icu_69::MeasureUnit"* }
%"class.icu_69::Formattable" = type { %"class.icu_69::UObject", %union.anon.6, %"class.icu_69::CharString"*, %"class.icu_69::number::impl::DecimalQuantity"*, i32, %"class.icu_69::UnicodeString" }
%union.anon.6 = type { %struct.anon.7 }
%struct.anon.7 = type { %"class.icu_69::Formattable"*, i32 }
%"class.icu_69::CharString" = type opaque
%"class.icu_69::number::impl::DecimalQuantity" = type opaque
%"class.icu_69::MeasureUnit" = type <{ %"class.icu_69::UObject", %"class.icu_69::MeasureUnitImpl"*, i16, i8, [5 x i8] }>
%"class.icu_69::MeasureUnitImpl" = type opaque
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string.8", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.11 }
%union.anon.11 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.icu_69::MeasureFormat" = type { %"class.icu_69::Format.base", %"class.icu_69::MeasureFormatCacheData"*, %"class.icu_69::SharedNumberFormat"*, %"class.icu_69::SharedPluralRules"*, i32, %"class.icu_69::ListFormatter"* }
%"class.icu_69::MeasureFormatCacheData" = type opaque
%"class.icu_69::SharedPluralRules" = type opaque
%"class.icu_69::ListFormatter" = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.icu_69::DateInterval" = type { %"class.icu_69::UObject", double, double }
%"class.icu_69::DateIntervalFormat" = type <{ %"class.icu_69::Format.base", [6 x i8], %"class.icu_69::DateIntervalInfo"*, %"class.icu_69::SimpleDateFormat"*, %"class.icu_69::Calendar"*, %"class.icu_69::Calendar"*, %"class.icu_69::Locale", %"class.icu_69::UnicodeString", [9 x %"struct.icu_69::DateIntervalFormat::PatternInfo"], %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32, [4 x i8] }>
%"class.icu_69::DateIntervalInfo" = type { %"class.icu_69::UObject", %"class.icu_69::UnicodeString", i8, %"class.icu_69::Hashtable"* }
%"struct.icu_69::DateIntervalFormat::PatternInfo" = type <{ %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString", i8, [7 x i8] }>
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.12 }
%struct.anon.12 = type { i8 }

$_ZNK4base9TimeDeltadvES0_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [7 x i8] c"HmsSSS\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"ahm\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"Hm\00", align 1
@.str.3 = private unnamed_addr constant [35 x i8] c"../../base/i18n/time_formatting.cc\00", align 1
@.str.4 = private unnamed_addr constant [37 x i8] c"Creating MeasureUnit or Measure for \00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"m failed: \00", align 1
@.str.7 = private unnamed_addr constant [28 x i8] c"Creating MeasureFormat for \00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c" failed: \00", align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"formatMeasures failed: \00", align 1
@__const._ZN4base12_GLOBAL__N_125CreateSimpleDateFormatterEPKc.formatter = private unnamed_addr constant { { %"class.icu_69::Format.base", [6 x i8], %"class.icu_69::Calendar"*, %"class.icu_69::NumberFormat"*, %"class.icu_69::EnumSet", i32 }, { %"class.icu_69::Replaceable", { { i16, [2 x i8], i32, i32, [4 x i8], i16* }, [32 x i8] } }, { %"class.icu_69::Replaceable", { { i16, [2 x i8], i32, i32, [4 x i8], i16* }, [32 x i8] } }, { %"class.icu_69::Replaceable", { { i16, [2 x i8], i32, i32, [4 x i8], i16* }, [32 x i8] } }, %"class.icu_69::Locale", %"class.icu_69::DateFormatSymbols"*, %"class.icu_69::TimeZoneFormat"*, double, i8, i8, i8, [1 x i8], i32, %"class.icu_69::SharedNumberFormat"**, [5 x %"class.icu_69::number::LocalizedNumberFormatter"*], i8, [7 x i8], %"class.icu_69::BreakIterator"* } { { %"class.icu_69::Format.base", [6 x i8], %"class.icu_69::Calendar"*, %"class.icu_69::NumberFormat"*, %"class.icu_69::EnumSet", i32 } { %"class.icu_69::Format.base" <{ %"class.icu_69::UObject" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, [157 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA", [157 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }>, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.icu_69::Calendar"* inttoptr (i64 -6148914691236517206 to %"class.icu_69::Calendar"*), %"class.icu_69::NumberFormat"* inttoptr (i64 -6148914691236517206 to %"class.icu_69::NumberFormat"*), %"class.icu_69::EnumSet" { i32 -1431655766 }, i32 -1431655766 }, { %"class.icu_69::Replaceable", { { i16, [2 x i8], i32, i32, [4 x i8], i16* }, [32 x i8] } } { %"class.icu_69::Replaceable" { %"class.icu_69::UObject" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) } }, { { i16, [2 x i8], i32, i32, [4 x i8], i16* }, [32 x i8] } { { i16, [2 x i8], i32, i32, [4 x i8], i16* } { i16 -21846, [2 x i8] c"\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i16* inttoptr (i64 -6148914691236517206 to i16*) }, [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, { %"class.icu_69::Replaceable", { { i16, [2 x i8], i32, i32, [4 x i8], i16* }, [32 x i8] } } { %"class.icu_69::Replaceable" { %"class.icu_69::UObject" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) } }, { { i16, [2 x i8], i32, i32, [4 x i8], i16* }, [32 x i8] } { { i16, [2 x i8], i32, i32, [4 x i8], i16* } { i16 -21846, [2 x i8] c"\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i16* inttoptr (i64 -6148914691236517206 to i16*) }, [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, { %"class.icu_69::Replaceable", { { i16, [2 x i8], i32, i32, [4 x i8], i16* }, [32 x i8] } } { %"class.icu_69::Replaceable" { %"class.icu_69::UObject" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) } }, { { i16, [2 x i8], i32, i32, [4 x i8], i16* }, [32 x i8] } { { i16, [2 x i8], i32, i32, [4 x i8], i16* } { i16 -21846, [2 x i8] c"\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i16* inttoptr (i64 -6148914691236517206 to i16*) }, [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, %"class.icu_69::Locale" <{ %"class.icu_69::UObject" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, [12 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA", [6 x i8] c"\AA\AA\AA\AA\AA\AA", [4 x i8] c"\AA\AA\AA\AA", [2 x i8] c"\AA\AA", i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i8* inttoptr (i64 -6148914691236517206 to i8*), [157 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA", [3 x i8] c"\AA\AA\AA", i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, %"class.icu_69::DateFormatSymbols"* inttoptr (i64 -6148914691236517206 to %"class.icu_69::DateFormatSymbols"*), %"class.icu_69::TimeZoneFormat"* inttoptr (i64 -6148914691236517206 to %"class.icu_69::TimeZoneFormat"*), double 0xFFFFFFFFFFFFFFFF, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", i32 -1431655766, %"class.icu_69::SharedNumberFormat"** inttoptr (i64 -6148914691236517206 to %"class.icu_69::SharedNumberFormat"**), [5 x %"class.icu_69::number::LocalizedNumberFormatter"*] [%"class.icu_69::number::LocalizedNumberFormatter"* inttoptr (i64 -6148914691236517206 to %"class.icu_69::number::LocalizedNumberFormatter"*), %"class.icu_69::number::LocalizedNumberFormatter"* inttoptr (i64 -6148914691236517206 to %"class.icu_69::number::LocalizedNumberFormatter"*), %"class.icu_69::number::LocalizedNumberFormatter"* inttoptr (i64 -6148914691236517206 to %"class.icu_69::number::LocalizedNumberFormatter"*), %"class.icu_69::number::LocalizedNumberFormatter"* inttoptr (i64 -6148914691236517206 to %"class.icu_69::number::LocalizedNumberFormatter"*), %"class.icu_69::number::LocalizedNumberFormatter"* inttoptr (i64 -6148914691236517206 to %"class.icu_69::number::LocalizedNumberFormatter"*)], i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.icu_69::BreakIterator"* inttoptr (i64 -6148914691236517206 to %"class.icu_69::BreakIterator"*) }, align 8
@.str.10 = private unnamed_addr constant [6 x i8] c"yMMMM\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"MMMMEEEEd\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"yMMMMd\00", align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.14 = private unnamed_addr constant [27 x i8] c"!is_zero() || !a.is_zero()\00", align 1
@.str.15 = private unnamed_addr constant [25 x i8] c"!is_inf() || !a.is_inf()\00", align 1
@_ZTVN6icu_6913UnicodeStringE = external unnamed_addr constant { [13 x i8*] }, align 8
@_ZTVN6icu_6913FieldPositionE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19TimeFormatTimeOfDayERKNS_4TimeE(%"class.std::__1::basic_string"* noalias sret, %"class.base::Time"* dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca %"class.icu_69::UnicodeString", align 8
  %4 = tail call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() #10
  %5 = tail call %"class.icu_69::DateFormat"* @_ZN6icu_6910DateFormat18createTimeInstanceENS0_6EStyleERKNS_6LocaleE(i32 3, %"class.icu_69::Locale"* dereferenceable(224) %4) #10
  %6 = bitcast %"class.icu_69::UnicodeString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %6) #10, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 64, i1 false) #10, !noalias !2
  %7 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !noalias !2
  %8 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %8, align 8, !noalias !2
  %9 = tail call double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"* %1) #10, !noalias !2
  %10 = fmul double %9, 1.000000e+03
  %11 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6910DateFormat6formatEdRNS_13UnicodeStringE(%"class.icu_69::DateFormat"* %5, double %10, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %3) #10, !noalias !2
  %12 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %12, i64 0, i32 0, i32 0
  %14 = load i16, i16* %13, align 8, !noalias !5
  %15 = sext i16 %14 to i32
  %16 = and i32 %15, 17
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %27

18:                                               ; preds = %2
  %19 = and i32 %15, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %18
  %22 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %12 to %struct.anon.3*
  %23 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %22, i64 0, i32 1, i64 0
  br label %27

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 3
  %26 = load i16*, i16** %25, align 8, !noalias !5
  br label %27

27:                                               ; preds = %24, %21, %2
  %28 = phi i16* [ %23, %21 ], [ %26, %24 ], [ null, %2 ]
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %28) #10, !noalias !5, !srcloc !8
  %29 = load i16, i16* %8, align 8, !noalias !5
  %30 = icmp slt i16 %29, 0
  %31 = lshr i16 %29, 5
  %32 = zext i16 %31 to i32
  %33 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 1
  %34 = load i32, i32* %33, align 4, !noalias !5
  %35 = select i1 %30, i32 %34, i32 %32
  %36 = sext i32 %35 to i64
  %37 = icmp slt i32 %35, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %27
  %39 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %39) #11
  unreachable

40:                                               ; preds = %27
  %41 = icmp ult i32 %35, 11
  br i1 %41, label %55, label %42

42:                                               ; preds = %40
  %43 = add nuw nsw i64 %36, 8
  %44 = and i64 %43, -8
  %45 = icmp slt i64 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %42
  call void @abort() #11
  unreachable

47:                                               ; preds = %42
  %48 = shl nsw i64 %44, 1
  %49 = call i8* @_Znwm(i64 %48) #12
  %50 = bitcast i8* %49 to i16*
  %51 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %49, i8** %51, align 8, !alias.scope !5
  %52 = or i64 %44, -9223372036854775808
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %52, i64* %53, align 8, !alias.scope !5
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %36, i64* %54, align 8, !alias.scope !5
  br label %61

55:                                               ; preds = %40
  %56 = trunc i32 %35 to i8
  %57 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %57, i64 0, i32 1, i32 1
  store i8 %56, i8* %58, align 1, !alias.scope !5
  %59 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %60 = icmp eq i32 %35, 0
  br i1 %60, label %205, label %61

61:                                               ; preds = %55, %47
  %62 = phi i16* [ %50, %47 ], [ %59, %55 ]
  %63 = icmp ult i32 %35, 16
  br i1 %63, label %152, label %64

64:                                               ; preds = %61
  %65 = getelementptr i16, i16* %62, i64 %36
  %66 = getelementptr i16, i16* %28, i64 %36
  %67 = icmp ult i16* %62, %66
  %68 = icmp ult i16* %28, %65
  %69 = and i1 %67, %68
  br i1 %69, label %152, label %70

70:                                               ; preds = %64
  %71 = and i64 %36, -16
  %72 = sub nsw i64 %36, %71
  %73 = getelementptr i16, i16* %28, i64 %71
  %74 = getelementptr i16, i16* %62, i64 %71
  %75 = add nsw i64 %71, -16
  %76 = lshr exact i64 %75, 4
  %77 = add nuw nsw i64 %76, 1
  %78 = and i64 %77, 3
  %79 = icmp ult i64 %75, 48
  br i1 %79, label %131, label %80

80:                                               ; preds = %70
  %81 = sub nsw i64 %77, %78
  br label %82

82:                                               ; preds = %82, %80
  %83 = phi i64 [ 0, %80 ], [ %128, %82 ]
  %84 = phi i64 [ %81, %80 ], [ %129, %82 ]
  %85 = getelementptr i16, i16* %28, i64 %83
  %86 = getelementptr i16, i16* %62, i64 %83
  %87 = bitcast i16* %85 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !9
  %89 = getelementptr i16, i16* %85, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !9
  %92 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %92, align 2, !alias.scope !12, !noalias !9
  %93 = getelementptr i16, i16* %86, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %94, align 2, !alias.scope !12, !noalias !9
  %95 = or i64 %83, 16
  %96 = getelementptr i16, i16* %28, i64 %95
  %97 = getelementptr i16, i16* %62, i64 %95
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !9
  %100 = getelementptr i16, i16* %96, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !9
  %103 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !12, !noalias !9
  %104 = getelementptr i16, i16* %97, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !12, !noalias !9
  %106 = or i64 %83, 32
  %107 = getelementptr i16, i16* %28, i64 %106
  %108 = getelementptr i16, i16* %62, i64 %106
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !9
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !9
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !12, !noalias !9
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !12, !noalias !9
  %117 = or i64 %83, 48
  %118 = getelementptr i16, i16* %28, i64 %117
  %119 = getelementptr i16, i16* %62, i64 %117
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !9
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !9
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !12, !noalias !9
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !12, !noalias !9
  %128 = add i64 %83, 64
  %129 = add i64 %84, -4
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %82, !llvm.loop !14

131:                                              ; preds = %82, %70
  %132 = phi i64 [ 0, %70 ], [ %128, %82 ]
  %133 = icmp eq i64 %78, 0
  br i1 %133, label %150, label %134

134:                                              ; preds = %131, %134
  %135 = phi i64 [ %147, %134 ], [ %132, %131 ]
  %136 = phi i64 [ %148, %134 ], [ %78, %131 ]
  %137 = getelementptr i16, i16* %28, i64 %135
  %138 = getelementptr i16, i16* %62, i64 %135
  %139 = bitcast i16* %137 to <8 x i16>*
  %140 = load <8 x i16>, <8 x i16>* %139, align 2, !alias.scope !9
  %141 = getelementptr i16, i16* %137, i64 8
  %142 = bitcast i16* %141 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !9
  %144 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %140, <8 x i16>* %144, align 2, !alias.scope !12, !noalias !9
  %145 = getelementptr i16, i16* %138, i64 8
  %146 = bitcast i16* %145 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %146, align 2, !alias.scope !12, !noalias !9
  %147 = add i64 %135, 16
  %148 = add i64 %136, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %134, !llvm.loop !16

150:                                              ; preds = %134, %131
  %151 = icmp eq i64 %71, %36
  br i1 %151, label %205, label %152

152:                                              ; preds = %150, %64, %61
  %153 = phi i64 [ %36, %64 ], [ %36, %61 ], [ %72, %150 ]
  %154 = phi i16* [ %28, %64 ], [ %28, %61 ], [ %73, %150 ]
  %155 = phi i16* [ %62, %64 ], [ %62, %61 ], [ %74, %150 ]
  %156 = add nsw i64 %153, -1
  %157 = and i64 %153, 7
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %170, label %159

159:                                              ; preds = %152, %159
  %160 = phi i64 [ %165, %159 ], [ %153, %152 ]
  %161 = phi i16* [ %167, %159 ], [ %154, %152 ]
  %162 = phi i16* [ %166, %159 ], [ %155, %152 ]
  %163 = phi i64 [ %168, %159 ], [ %157, %152 ]
  %164 = load i16, i16* %161, align 2
  store i16 %164, i16* %162, align 2
  %165 = add i64 %160, -1
  %166 = getelementptr inbounds i16, i16* %162, i64 1
  %167 = getelementptr inbounds i16, i16* %161, i64 1
  %168 = add i64 %163, -1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %159, !llvm.loop !18

170:                                              ; preds = %159, %152
  %171 = phi i64 [ %153, %152 ], [ %165, %159 ]
  %172 = phi i16* [ %154, %152 ], [ %167, %159 ]
  %173 = phi i16* [ %155, %152 ], [ %166, %159 ]
  %174 = icmp ult i64 %156, 7
  br i1 %174, label %205, label %175

175:                                              ; preds = %170, %175
  %176 = phi i64 [ %201, %175 ], [ %171, %170 ]
  %177 = phi i16* [ %203, %175 ], [ %172, %170 ]
  %178 = phi i16* [ %202, %175 ], [ %173, %170 ]
  %179 = load i16, i16* %177, align 2
  store i16 %179, i16* %178, align 2
  %180 = getelementptr inbounds i16, i16* %178, i64 1
  %181 = getelementptr inbounds i16, i16* %177, i64 1
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %178, i64 2
  %184 = getelementptr inbounds i16, i16* %177, i64 2
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %178, i64 3
  %187 = getelementptr inbounds i16, i16* %177, i64 3
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %178, i64 4
  %190 = getelementptr inbounds i16, i16* %177, i64 4
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = getelementptr inbounds i16, i16* %178, i64 5
  %193 = getelementptr inbounds i16, i16* %177, i64 5
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2
  %195 = getelementptr inbounds i16, i16* %178, i64 6
  %196 = getelementptr inbounds i16, i16* %177, i64 6
  %197 = load i16, i16* %196, align 2
  store i16 %197, i16* %195, align 2
  %198 = getelementptr inbounds i16, i16* %178, i64 7
  %199 = getelementptr inbounds i16, i16* %177, i64 7
  %200 = load i16, i16* %199, align 2
  store i16 %200, i16* %198, align 2
  %201 = add i64 %176, -8
  %202 = getelementptr inbounds i16, i16* %178, i64 8
  %203 = getelementptr inbounds i16, i16* %177, i64 8
  %204 = icmp eq i64 %201, 0
  br i1 %204, label %205, label %175, !llvm.loop !19

205:                                              ; preds = %170, %175, %150, %55
  %206 = phi i16* [ %59, %55 ], [ %62, %150 ], [ %62, %175 ], [ %62, %170 ]
  %207 = getelementptr inbounds i16, i16* %206, i64 %36
  store i16 0, i16* %207, align 2
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %6) #10, !noalias !2
  %208 = icmp eq %"class.icu_69::DateFormat"* %5, null
  br i1 %208, label %214, label %209

209:                                              ; preds = %205
  %210 = bitcast %"class.icu_69::DateFormat"* %5 to void (%"class.icu_69::DateFormat"*)***
  %211 = load void (%"class.icu_69::DateFormat"*)**, void (%"class.icu_69::DateFormat"*)*** %210, align 8
  %212 = getelementptr inbounds void (%"class.icu_69::DateFormat"*)*, void (%"class.icu_69::DateFormat"*)** %211, i64 1
  %213 = load void (%"class.icu_69::DateFormat"*)*, void (%"class.icu_69::DateFormat"*)** %212, align 8
  call void %213(%"class.icu_69::DateFormat"* nonnull %5) #10
  br label %214

214:                                              ; preds = %205, %209
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.icu_69::DateFormat"* @_ZN6icu_6910DateFormat18createTimeInstanceENS0_6EStyleERKNS_6LocaleE(i32, %"class.icu_69::Locale"* dereferenceable(224)) local_unnamed_addr #2

declare dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base35TimeFormatTimeOfDayWithMillisecondsERKNS_4TimeE(%"class.std::__1::basic_string"* noalias sret, %"class.base::Time"* dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca %"class.icu_69::SimpleDateFormat", align 8
  %4 = bitcast %"class.icu_69::SimpleDateFormat"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 864, i8* nonnull %4) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 bitcast ({ { %"class.icu_69::Format.base", [6 x i8], %"class.icu_69::Calendar"*, %"class.icu_69::NumberFormat"*, %"class.icu_69::EnumSet", i32 }, { %"class.icu_69::Replaceable", { { i16, [2 x i8], i32, i32, [4 x i8], i16* }, [32 x i8] } }, { %"class.icu_69::Replaceable", { { i16, [2 x i8], i32, i32, [4 x i8], i16* }, [32 x i8] } }, { %"class.icu_69::Replaceable", { { i16, [2 x i8], i32, i32, [4 x i8], i16* }, [32 x i8] } }, %"class.icu_69::Locale", %"class.icu_69::DateFormatSymbols"*, %"class.icu_69::TimeZoneFormat"*, double, i8, i8, i8, [1 x i8], i32, %"class.icu_69::SharedNumberFormat"**, [5 x %"class.icu_69::number::LocalizedNumberFormatter"*], i8, [7 x i8], %"class.icu_69::BreakIterator"* }* @__const._ZN4base12_GLOBAL__N_125CreateSimpleDateFormatterEPKc.formatter to i8*), i64 864, i1 false)
  call fastcc void @_ZN4base12_GLOBAL__N_125CreateSimpleDateFormatterEPKc(%"class.icu_69::SimpleDateFormat"* nonnull sret %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0))
  %5 = getelementptr inbounds %"class.icu_69::SimpleDateFormat", %"class.icu_69::SimpleDateFormat"* %3, i64 0, i32 0
  call fastcc void @_ZN4base12_GLOBAL__N_121TimeFormatWithoutAmPmEPKN6icu_6910DateFormatERKNS_4TimeE(%"class.std::__1::basic_string"* sret %0, %"class.icu_69::DateFormat"* nonnull %5, %"class.base::Time"* dereferenceable(8) %1)
  call void @_ZN6icu_6916SimpleDateFormatD1Ev(%"class.icu_69::SimpleDateFormat"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 864, i8* nonnull %4) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN4base12_GLOBAL__N_125CreateSimpleDateFormatterEPKc(%"class.icu_69::SimpleDateFormat"* noalias sret, i8*) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.icu_69::UnicodeString", align 8
  %5 = alloca %"class.icu_69::UnicodeString", align 8
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #10
  store i32 0, i32* %3, align 4
  %7 = call %"class.icu_69::DateTimePatternGenerator"* @_ZN6icu_6924DateTimePatternGenerator14createInstanceER10UErrorCode(i32* nonnull dereferenceable(4) %3) #10
  %8 = bitcast %"class.icu_69::UnicodeString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 64, i1 false)
  %9 = bitcast %"class.icu_69::UnicodeString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #10
  call void @_ZN6icu_6913UnicodeStringC1EPKc(%"class.icu_69::UnicodeString"* nonnull %5, i8* %1) #10
  call void @_ZN6icu_6924DateTimePatternGenerator14getBestPatternERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::UnicodeString"* nonnull sret %4, %"class.icu_69::DateTimePatternGenerator"* %7, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %5, i32* nonnull dereferenceable(4) %3) #10
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #10
  %10 = bitcast %"class.icu_69::SimpleDateFormat"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 bitcast ({ { %"class.icu_69::Format.base", [6 x i8], %"class.icu_69::Calendar"*, %"class.icu_69::NumberFormat"*, %"class.icu_69::EnumSet", i32 }, { %"class.icu_69::Replaceable", { { i16, [2 x i8], i32, i32, [4 x i8], i16* }, [32 x i8] } }, { %"class.icu_69::Replaceable", { { i16, [2 x i8], i32, i32, [4 x i8], i16* }, [32 x i8] } }, { %"class.icu_69::Replaceable", { { i16, [2 x i8], i32, i32, [4 x i8], i16* }, [32 x i8] } }, %"class.icu_69::Locale", %"class.icu_69::DateFormatSymbols"*, %"class.icu_69::TimeZoneFormat"*, double, i8, i8, i8, [1 x i8], i32, %"class.icu_69::SharedNumberFormat"**, [5 x %"class.icu_69::number::LocalizedNumberFormatter"*], i8, [7 x i8], %"class.icu_69::BreakIterator"* }* @__const._ZN4base12_GLOBAL__N_125CreateSimpleDateFormatterEPKc.formatter to i8*), i64 864, i1 false)
  call void @_ZN6icu_6916SimpleDateFormatC1ERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::SimpleDateFormat"* %0, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %4, i32* nonnull dereferenceable(4) %3) #10
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #10
  %11 = icmp eq %"class.icu_69::DateTimePatternGenerator"* %7, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.icu_69::DateTimePatternGenerator"* %7 to void (%"class.icu_69::DateTimePatternGenerator"*)***
  %14 = load void (%"class.icu_69::DateTimePatternGenerator"*)**, void (%"class.icu_69::DateTimePatternGenerator"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.icu_69::DateTimePatternGenerator"*)*, void (%"class.icu_69::DateTimePatternGenerator"*)** %14, i64 1
  %16 = load void (%"class.icu_69::DateTimePatternGenerator"*)*, void (%"class.icu_69::DateTimePatternGenerator"*)** %15, align 8
  call void %16(%"class.icu_69::DateTimePatternGenerator"* nonnull %7) #10
  br label %17

17:                                               ; preds = %2, %12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN4base12_GLOBAL__N_121TimeFormatWithoutAmPmEPKN6icu_6910DateFormatERKNS_4TimeE(%"class.std::__1::basic_string"* noalias sret, %"class.icu_69::DateFormat"*, %"class.base::Time"* dereferenceable(8)) unnamed_addr #0 {
  %4 = alloca %"class.icu_69::UnicodeString", align 8
  %5 = alloca %"class.icu_69::FieldPosition", align 8
  %6 = bitcast %"class.icu_69::UnicodeString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 64, i1 false)
  %7 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %4, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %8, align 8
  %9 = bitcast %"class.icu_69::FieldPosition"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.icu_69::FieldPosition", %"class.icu_69::FieldPosition"* %5, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.icu_69::FieldPosition", %"class.icu_69::FieldPosition"* %5, i64 0, i32 1
  %12 = getelementptr inbounds %"class.icu_69::FieldPosition", %"class.icu_69::FieldPosition"* %5, i64 0, i32 2
  %13 = getelementptr inbounds %"class.icu_69::FieldPosition", %"class.icu_69::FieldPosition"* %5, i64 0, i32 3
  %14 = bitcast %"class.icu_69::FieldPosition"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6icu_6913FieldPositionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  store i32 14, i32* %11, align 8
  store i32 0, i32* %12, align 4
  store i32 0, i32* %13, align 8
  %15 = tail call double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"* %2) #10
  %16 = fmul double %15, 1.000000e+03
  %17 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6910DateFormat6formatEdRNS_13UnicodeStringERNS_13FieldPositionE(%"class.icu_69::DateFormat"* %1, double %16, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %4, %"class.icu_69::FieldPosition"* nonnull dereferenceable(24) %5) #10
  %18 = load i32, i32* %13, align 8
  %19 = load i32, i32* %12, align 4
  %20 = icmp eq i32 %18, %19
  br i1 %20, label %27, label %21

21:                                               ; preds = %3
  %22 = icmp eq i32 %19, 0
  %23 = add nsw i32 %19, -1
  %24 = select i1 %22, i32 0, i32 %23
  %25 = sub nsw i32 %18, %24
  %26 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString9doReplaceEiiPKDsii(%"class.icu_69::UnicodeString"* nonnull %4, i32 %24, i32 %25, i16* null, i32 0, i32 0) #10
  br label %27

27:                                               ; preds = %3, %21
  %28 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %4, i64 0, i32 1
  %29 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %28, i64 0, i32 0, i32 0
  %30 = load i16, i16* %29, align 8, !noalias !20
  %31 = sext i16 %30 to i32
  %32 = and i32 %31, 17
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %43

34:                                               ; preds = %27
  %35 = and i32 %31, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %34
  %38 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %28 to %struct.anon.3*
  %39 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %38, i64 0, i32 1, i64 0
  br label %43

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %4, i64 0, i32 1, i32 0, i32 3
  %42 = load i16*, i16** %41, align 8, !noalias !20
  br label %43

43:                                               ; preds = %40, %37, %27
  %44 = phi i16* [ %39, %37 ], [ %42, %40 ], [ null, %27 ]
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %44) #10, !noalias !20, !srcloc !8
  %45 = load i16, i16* %8, align 8, !noalias !20
  %46 = icmp slt i16 %45, 0
  %47 = lshr i16 %45, 5
  %48 = zext i16 %47 to i32
  %49 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %4, i64 0, i32 1, i32 0, i32 1
  %50 = load i32, i32* %49, align 4, !noalias !20
  %51 = select i1 %46, i32 %50, i32 %48
  %52 = sext i32 %51 to i64
  %53 = icmp slt i32 %51, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %43
  %55 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %55) #11
  unreachable

56:                                               ; preds = %43
  %57 = icmp ult i32 %51, 11
  br i1 %57, label %71, label %58

58:                                               ; preds = %56
  %59 = add nuw nsw i64 %52, 8
  %60 = and i64 %59, -8
  %61 = icmp slt i64 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %58
  call void @abort() #11
  unreachable

63:                                               ; preds = %58
  %64 = shl nsw i64 %60, 1
  %65 = call i8* @_Znwm(i64 %64) #12
  %66 = bitcast i8* %65 to i16*
  %67 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %65, i8** %67, align 8, !alias.scope !20
  %68 = or i64 %60, -9223372036854775808
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %68, i64* %69, align 8, !alias.scope !20
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %52, i64* %70, align 8, !alias.scope !20
  br label %77

71:                                               ; preds = %56
  %72 = trunc i32 %51 to i8
  %73 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %73, i64 0, i32 1, i32 1
  store i8 %72, i8* %74, align 1, !alias.scope !20
  %75 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %76 = icmp eq i32 %51, 0
  br i1 %76, label %221, label %77

77:                                               ; preds = %71, %63
  %78 = phi i16* [ %66, %63 ], [ %75, %71 ]
  %79 = icmp ult i32 %51, 16
  br i1 %79, label %168, label %80

80:                                               ; preds = %77
  %81 = getelementptr i16, i16* %78, i64 %52
  %82 = getelementptr i16, i16* %44, i64 %52
  %83 = icmp ult i16* %78, %82
  %84 = icmp ult i16* %44, %81
  %85 = and i1 %83, %84
  br i1 %85, label %168, label %86

86:                                               ; preds = %80
  %87 = and i64 %52, -16
  %88 = sub nsw i64 %52, %87
  %89 = getelementptr i16, i16* %44, i64 %87
  %90 = getelementptr i16, i16* %78, i64 %87
  %91 = add nsw i64 %87, -16
  %92 = lshr exact i64 %91, 4
  %93 = add nuw nsw i64 %92, 1
  %94 = and i64 %93, 3
  %95 = icmp ult i64 %91, 48
  br i1 %95, label %147, label %96

96:                                               ; preds = %86
  %97 = sub nsw i64 %93, %94
  br label %98

98:                                               ; preds = %98, %96
  %99 = phi i64 [ 0, %96 ], [ %144, %98 ]
  %100 = phi i64 [ %97, %96 ], [ %145, %98 ]
  %101 = getelementptr i16, i16* %44, i64 %99
  %102 = getelementptr i16, i16* %78, i64 %99
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !23
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !23
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !26, !noalias !23
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !26, !noalias !23
  %111 = or i64 %99, 16
  %112 = getelementptr i16, i16* %44, i64 %111
  %113 = getelementptr i16, i16* %78, i64 %111
  %114 = bitcast i16* %112 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !23
  %116 = getelementptr i16, i16* %112, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  %118 = load <8 x i16>, <8 x i16>* %117, align 2, !alias.scope !23
  %119 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %119, align 2, !alias.scope !26, !noalias !23
  %120 = getelementptr i16, i16* %113, i64 8
  %121 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %118, <8 x i16>* %121, align 2, !alias.scope !26, !noalias !23
  %122 = or i64 %99, 32
  %123 = getelementptr i16, i16* %44, i64 %122
  %124 = getelementptr i16, i16* %78, i64 %122
  %125 = bitcast i16* %123 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !23
  %127 = getelementptr i16, i16* %123, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  %129 = load <8 x i16>, <8 x i16>* %128, align 2, !alias.scope !23
  %130 = bitcast i16* %124 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %130, align 2, !alias.scope !26, !noalias !23
  %131 = getelementptr i16, i16* %124, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %132, align 2, !alias.scope !26, !noalias !23
  %133 = or i64 %99, 48
  %134 = getelementptr i16, i16* %44, i64 %133
  %135 = getelementptr i16, i16* %78, i64 %133
  %136 = bitcast i16* %134 to <8 x i16>*
  %137 = load <8 x i16>, <8 x i16>* %136, align 2, !alias.scope !23
  %138 = getelementptr i16, i16* %134, i64 8
  %139 = bitcast i16* %138 to <8 x i16>*
  %140 = load <8 x i16>, <8 x i16>* %139, align 2, !alias.scope !23
  %141 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %137, <8 x i16>* %141, align 2, !alias.scope !26, !noalias !23
  %142 = getelementptr i16, i16* %135, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  store <8 x i16> %140, <8 x i16>* %143, align 2, !alias.scope !26, !noalias !23
  %144 = add i64 %99, 64
  %145 = add i64 %100, -4
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %98, !llvm.loop !28

147:                                              ; preds = %98, %86
  %148 = phi i64 [ 0, %86 ], [ %144, %98 ]
  %149 = icmp eq i64 %94, 0
  br i1 %149, label %166, label %150

150:                                              ; preds = %147, %150
  %151 = phi i64 [ %163, %150 ], [ %148, %147 ]
  %152 = phi i64 [ %164, %150 ], [ %94, %147 ]
  %153 = getelementptr i16, i16* %44, i64 %151
  %154 = getelementptr i16, i16* %78, i64 %151
  %155 = bitcast i16* %153 to <8 x i16>*
  %156 = load <8 x i16>, <8 x i16>* %155, align 2, !alias.scope !23
  %157 = getelementptr i16, i16* %153, i64 8
  %158 = bitcast i16* %157 to <8 x i16>*
  %159 = load <8 x i16>, <8 x i16>* %158, align 2, !alias.scope !23
  %160 = bitcast i16* %154 to <8 x i16>*
  store <8 x i16> %156, <8 x i16>* %160, align 2, !alias.scope !26, !noalias !23
  %161 = getelementptr i16, i16* %154, i64 8
  %162 = bitcast i16* %161 to <8 x i16>*
  store <8 x i16> %159, <8 x i16>* %162, align 2, !alias.scope !26, !noalias !23
  %163 = add i64 %151, 16
  %164 = add i64 %152, -1
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %150, !llvm.loop !29

166:                                              ; preds = %150, %147
  %167 = icmp eq i64 %87, %52
  br i1 %167, label %221, label %168

168:                                              ; preds = %166, %80, %77
  %169 = phi i64 [ %52, %80 ], [ %52, %77 ], [ %88, %166 ]
  %170 = phi i16* [ %44, %80 ], [ %44, %77 ], [ %89, %166 ]
  %171 = phi i16* [ %78, %80 ], [ %78, %77 ], [ %90, %166 ]
  %172 = add nsw i64 %169, -1
  %173 = and i64 %169, 7
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %186, label %175

175:                                              ; preds = %168, %175
  %176 = phi i64 [ %181, %175 ], [ %169, %168 ]
  %177 = phi i16* [ %183, %175 ], [ %170, %168 ]
  %178 = phi i16* [ %182, %175 ], [ %171, %168 ]
  %179 = phi i64 [ %184, %175 ], [ %173, %168 ]
  %180 = load i16, i16* %177, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %176, -1
  %182 = getelementptr inbounds i16, i16* %178, i64 1
  %183 = getelementptr inbounds i16, i16* %177, i64 1
  %184 = add i64 %179, -1
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %175, !llvm.loop !30

186:                                              ; preds = %175, %168
  %187 = phi i64 [ %169, %168 ], [ %181, %175 ]
  %188 = phi i16* [ %170, %168 ], [ %183, %175 ]
  %189 = phi i16* [ %171, %168 ], [ %182, %175 ]
  %190 = icmp ult i64 %172, 7
  br i1 %190, label %221, label %191

191:                                              ; preds = %186, %191
  %192 = phi i64 [ %217, %191 ], [ %187, %186 ]
  %193 = phi i16* [ %219, %191 ], [ %188, %186 ]
  %194 = phi i16* [ %218, %191 ], [ %189, %186 ]
  %195 = load i16, i16* %193, align 2
  store i16 %195, i16* %194, align 2
  %196 = getelementptr inbounds i16, i16* %194, i64 1
  %197 = getelementptr inbounds i16, i16* %193, i64 1
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %194, i64 2
  %200 = getelementptr inbounds i16, i16* %193, i64 2
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = getelementptr inbounds i16, i16* %194, i64 3
  %203 = getelementptr inbounds i16, i16* %193, i64 3
  %204 = load i16, i16* %203, align 2
  store i16 %204, i16* %202, align 2
  %205 = getelementptr inbounds i16, i16* %194, i64 4
  %206 = getelementptr inbounds i16, i16* %193, i64 4
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 2
  %208 = getelementptr inbounds i16, i16* %194, i64 5
  %209 = getelementptr inbounds i16, i16* %193, i64 5
  %210 = load i16, i16* %209, align 2
  store i16 %210, i16* %208, align 2
  %211 = getelementptr inbounds i16, i16* %194, i64 6
  %212 = getelementptr inbounds i16, i16* %193, i64 6
  %213 = load i16, i16* %212, align 2
  store i16 %213, i16* %211, align 2
  %214 = getelementptr inbounds i16, i16* %194, i64 7
  %215 = getelementptr inbounds i16, i16* %193, i64 7
  %216 = load i16, i16* %215, align 2
  store i16 %216, i16* %214, align 2
  %217 = add i64 %192, -8
  %218 = getelementptr inbounds i16, i16* %194, i64 8
  %219 = getelementptr inbounds i16, i16* %193, i64 8
  %220 = icmp eq i64 %217, 0
  br i1 %220, label %221, label %191, !llvm.loop !31

221:                                              ; preds = %186, %191, %166, %71
  %222 = phi i16* [ %75, %71 ], [ %78, %166 ], [ %78, %191 ], [ %78, %186 ]
  %223 = getelementptr inbounds i16, i16* %222, i64 %52
  store i16 0, i16* %223, align 2
  call void @_ZN6icu_6913FieldPositionD1Ev(%"class.icu_69::FieldPosition"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #10
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_6916SimpleDateFormatD1Ev(%"class.icu_69::SimpleDateFormat"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base36TimeFormatTimeOfDayWithHourClockTypeERKNS_4TimeENS_13HourClockTypeENS_13AmPmClockTypeE(%"class.std::__1::basic_string"* noalias sret, %"class.base::Time"* dereferenceable(8), i32, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.icu_69::UnicodeString", align 8
  %6 = alloca %"class.icu_69::SimpleDateFormat", align 8
  %7 = tail call i32 @_ZN4base16GetHourClockTypeEv()
  %8 = icmp eq i32 %7, %2
  br i1 %8, label %9, label %14

9:                                                ; preds = %4
  %10 = icmp eq i32 %2, 1
  %11 = icmp eq i32 %3, 1
  %12 = or i1 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %9
  tail call void @_ZN4base19TimeFormatTimeOfDayERKNS_4TimeE(%"class.std::__1::basic_string"* sret %0, %"class.base::Time"* dereferenceable(8) %1)
  br label %225

14:                                               ; preds = %9, %4
  %15 = icmp eq i32 %2, 0
  %16 = select i1 %15, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)
  %17 = bitcast %"class.icu_69::SimpleDateFormat"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 864, i8* nonnull %17) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 bitcast ({ { %"class.icu_69::Format.base", [6 x i8], %"class.icu_69::Calendar"*, %"class.icu_69::NumberFormat"*, %"class.icu_69::EnumSet", i32 }, { %"class.icu_69::Replaceable", { { i16, [2 x i8], i32, i32, [4 x i8], i16* }, [32 x i8] } }, { %"class.icu_69::Replaceable", { { i16, [2 x i8], i32, i32, [4 x i8], i16* }, [32 x i8] } }, { %"class.icu_69::Replaceable", { { i16, [2 x i8], i32, i32, [4 x i8], i16* }, [32 x i8] } }, %"class.icu_69::Locale", %"class.icu_69::DateFormatSymbols"*, %"class.icu_69::TimeZoneFormat"*, double, i8, i8, i8, [1 x i8], i32, %"class.icu_69::SharedNumberFormat"**, [5 x %"class.icu_69::number::LocalizedNumberFormatter"*], i8, [7 x i8], %"class.icu_69::BreakIterator"* }* @__const._ZN4base12_GLOBAL__N_125CreateSimpleDateFormatterEPKc.formatter to i8*), i64 864, i1 false)
  call fastcc void @_ZN4base12_GLOBAL__N_125CreateSimpleDateFormatterEPKc(%"class.icu_69::SimpleDateFormat"* nonnull sret %6, i8* %16)
  %18 = icmp eq i32 %3, 1
  %19 = getelementptr inbounds %"class.icu_69::SimpleDateFormat", %"class.icu_69::SimpleDateFormat"* %6, i64 0, i32 0
  br i1 %18, label %20, label %223

20:                                               ; preds = %14
  %21 = bitcast %"class.icu_69::UnicodeString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %21) #10, !noalias !32
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 64, i1 false) #10, !noalias !32
  %22 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %5, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8, !noalias !32
  %23 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %5, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %23, align 8, !noalias !32
  %24 = call double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"* %1) #10, !noalias !32
  %25 = fmul double %24, 1.000000e+03
  %26 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6910DateFormat6formatEdRNS_13UnicodeStringE(%"class.icu_69::DateFormat"* nonnull %19, double %25, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %5) #10, !noalias !32
  %27 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %5, i64 0, i32 1
  %28 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %27, i64 0, i32 0, i32 0
  %29 = load i16, i16* %28, align 8, !noalias !35
  %30 = sext i16 %29 to i32
  %31 = and i32 %30, 17
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %42

33:                                               ; preds = %20
  %34 = and i32 %30, 2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %33
  %37 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %27 to %struct.anon.3*
  %38 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %37, i64 0, i32 1, i64 0
  br label %42

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %5, i64 0, i32 1, i32 0, i32 3
  %41 = load i16*, i16** %40, align 8, !noalias !35
  br label %42

42:                                               ; preds = %39, %36, %20
  %43 = phi i16* [ %38, %36 ], [ %41, %39 ], [ null, %20 ]
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %43) #10, !noalias !35, !srcloc !8
  %44 = load i16, i16* %23, align 8, !noalias !35
  %45 = icmp slt i16 %44, 0
  %46 = lshr i16 %44, 5
  %47 = zext i16 %46 to i32
  %48 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %5, i64 0, i32 1, i32 0, i32 1
  %49 = load i32, i32* %48, align 4, !noalias !35
  %50 = select i1 %45, i32 %49, i32 %47
  %51 = sext i32 %50 to i64
  %52 = icmp slt i32 %50, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %42
  %54 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %54) #11
  unreachable

55:                                               ; preds = %42
  %56 = icmp ult i32 %50, 11
  br i1 %56, label %70, label %57

57:                                               ; preds = %55
  %58 = add nuw nsw i64 %51, 8
  %59 = and i64 %58, -8
  %60 = icmp slt i64 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %57
  call void @abort() #11
  unreachable

62:                                               ; preds = %57
  %63 = shl nsw i64 %59, 1
  %64 = call i8* @_Znwm(i64 %63) #12
  %65 = bitcast i8* %64 to i16*
  %66 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %64, i8** %66, align 8, !alias.scope !35
  %67 = or i64 %59, -9223372036854775808
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %67, i64* %68, align 8, !alias.scope !35
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %51, i64* %69, align 8, !alias.scope !35
  br label %76

70:                                               ; preds = %55
  %71 = trunc i32 %50 to i8
  %72 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %72, i64 0, i32 1, i32 1
  store i8 %71, i8* %73, align 1, !alias.scope !35
  %74 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %75 = icmp eq i32 %50, 0
  br i1 %75, label %220, label %76

76:                                               ; preds = %70, %62
  %77 = phi i16* [ %65, %62 ], [ %74, %70 ]
  %78 = icmp ult i32 %50, 16
  br i1 %78, label %167, label %79

79:                                               ; preds = %76
  %80 = getelementptr i16, i16* %77, i64 %51
  %81 = getelementptr i16, i16* %43, i64 %51
  %82 = icmp ult i16* %77, %81
  %83 = icmp ult i16* %43, %80
  %84 = and i1 %82, %83
  br i1 %84, label %167, label %85

85:                                               ; preds = %79
  %86 = and i64 %51, -16
  %87 = sub nsw i64 %51, %86
  %88 = getelementptr i16, i16* %43, i64 %86
  %89 = getelementptr i16, i16* %77, i64 %86
  %90 = add nsw i64 %86, -16
  %91 = lshr exact i64 %90, 4
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp ult i64 %90, 48
  br i1 %94, label %146, label %95

95:                                               ; preds = %85
  %96 = sub nsw i64 %92, %93
  br label %97

97:                                               ; preds = %97, %95
  %98 = phi i64 [ 0, %95 ], [ %143, %97 ]
  %99 = phi i64 [ %96, %95 ], [ %144, %97 ]
  %100 = getelementptr i16, i16* %43, i64 %98
  %101 = getelementptr i16, i16* %77, i64 %98
  %102 = bitcast i16* %100 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !38
  %104 = getelementptr i16, i16* %100, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !38
  %107 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %107, align 2, !alias.scope !41, !noalias !38
  %108 = getelementptr i16, i16* %101, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %109, align 2, !alias.scope !41, !noalias !38
  %110 = or i64 %98, 16
  %111 = getelementptr i16, i16* %43, i64 %110
  %112 = getelementptr i16, i16* %77, i64 %110
  %113 = bitcast i16* %111 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !38
  %115 = getelementptr i16, i16* %111, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !38
  %118 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %118, align 2, !alias.scope !41, !noalias !38
  %119 = getelementptr i16, i16* %112, i64 8
  %120 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %117, <8 x i16>* %120, align 2, !alias.scope !41, !noalias !38
  %121 = or i64 %98, 32
  %122 = getelementptr i16, i16* %43, i64 %121
  %123 = getelementptr i16, i16* %77, i64 %121
  %124 = bitcast i16* %122 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !38
  %126 = getelementptr i16, i16* %122, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !38
  %129 = bitcast i16* %123 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %129, align 2, !alias.scope !41, !noalias !38
  %130 = getelementptr i16, i16* %123, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %131, align 2, !alias.scope !41, !noalias !38
  %132 = or i64 %98, 48
  %133 = getelementptr i16, i16* %43, i64 %132
  %134 = getelementptr i16, i16* %77, i64 %132
  %135 = bitcast i16* %133 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !38
  %137 = getelementptr i16, i16* %133, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  %139 = load <8 x i16>, <8 x i16>* %138, align 2, !alias.scope !38
  %140 = bitcast i16* %134 to <8 x i16>*
  store <8 x i16> %136, <8 x i16>* %140, align 2, !alias.scope !41, !noalias !38
  %141 = getelementptr i16, i16* %134, i64 8
  %142 = bitcast i16* %141 to <8 x i16>*
  store <8 x i16> %139, <8 x i16>* %142, align 2, !alias.scope !41, !noalias !38
  %143 = add i64 %98, 64
  %144 = add i64 %99, -4
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %97, !llvm.loop !43

146:                                              ; preds = %97, %85
  %147 = phi i64 [ 0, %85 ], [ %143, %97 ]
  %148 = icmp eq i64 %93, 0
  br i1 %148, label %165, label %149

149:                                              ; preds = %146, %149
  %150 = phi i64 [ %162, %149 ], [ %147, %146 ]
  %151 = phi i64 [ %163, %149 ], [ %93, %146 ]
  %152 = getelementptr i16, i16* %43, i64 %150
  %153 = getelementptr i16, i16* %77, i64 %150
  %154 = bitcast i16* %152 to <8 x i16>*
  %155 = load <8 x i16>, <8 x i16>* %154, align 2, !alias.scope !38
  %156 = getelementptr i16, i16* %152, i64 8
  %157 = bitcast i16* %156 to <8 x i16>*
  %158 = load <8 x i16>, <8 x i16>* %157, align 2, !alias.scope !38
  %159 = bitcast i16* %153 to <8 x i16>*
  store <8 x i16> %155, <8 x i16>* %159, align 2, !alias.scope !41, !noalias !38
  %160 = getelementptr i16, i16* %153, i64 8
  %161 = bitcast i16* %160 to <8 x i16>*
  store <8 x i16> %158, <8 x i16>* %161, align 2, !alias.scope !41, !noalias !38
  %162 = add i64 %150, 16
  %163 = add i64 %151, -1
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %165, label %149, !llvm.loop !44

165:                                              ; preds = %149, %146
  %166 = icmp eq i64 %86, %51
  br i1 %166, label %220, label %167

167:                                              ; preds = %165, %79, %76
  %168 = phi i64 [ %51, %79 ], [ %51, %76 ], [ %87, %165 ]
  %169 = phi i16* [ %43, %79 ], [ %43, %76 ], [ %88, %165 ]
  %170 = phi i16* [ %77, %79 ], [ %77, %76 ], [ %89, %165 ]
  %171 = add nsw i64 %168, -1
  %172 = and i64 %168, 7
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %185, label %174

174:                                              ; preds = %167, %174
  %175 = phi i64 [ %180, %174 ], [ %168, %167 ]
  %176 = phi i16* [ %182, %174 ], [ %169, %167 ]
  %177 = phi i16* [ %181, %174 ], [ %170, %167 ]
  %178 = phi i64 [ %183, %174 ], [ %172, %167 ]
  %179 = load i16, i16* %176, align 2
  store i16 %179, i16* %177, align 2
  %180 = add i64 %175, -1
  %181 = getelementptr inbounds i16, i16* %177, i64 1
  %182 = getelementptr inbounds i16, i16* %176, i64 1
  %183 = add i64 %178, -1
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %174, !llvm.loop !45

185:                                              ; preds = %174, %167
  %186 = phi i64 [ %168, %167 ], [ %180, %174 ]
  %187 = phi i16* [ %169, %167 ], [ %182, %174 ]
  %188 = phi i16* [ %170, %167 ], [ %181, %174 ]
  %189 = icmp ult i64 %171, 7
  br i1 %189, label %220, label %190

190:                                              ; preds = %185, %190
  %191 = phi i64 [ %216, %190 ], [ %186, %185 ]
  %192 = phi i16* [ %218, %190 ], [ %187, %185 ]
  %193 = phi i16* [ %217, %190 ], [ %188, %185 ]
  %194 = load i16, i16* %192, align 2
  store i16 %194, i16* %193, align 2
  %195 = getelementptr inbounds i16, i16* %193, i64 1
  %196 = getelementptr inbounds i16, i16* %192, i64 1
  %197 = load i16, i16* %196, align 2
  store i16 %197, i16* %195, align 2
  %198 = getelementptr inbounds i16, i16* %193, i64 2
  %199 = getelementptr inbounds i16, i16* %192, i64 2
  %200 = load i16, i16* %199, align 2
  store i16 %200, i16* %198, align 2
  %201 = getelementptr inbounds i16, i16* %193, i64 3
  %202 = getelementptr inbounds i16, i16* %192, i64 3
  %203 = load i16, i16* %202, align 2
  store i16 %203, i16* %201, align 2
  %204 = getelementptr inbounds i16, i16* %193, i64 4
  %205 = getelementptr inbounds i16, i16* %192, i64 4
  %206 = load i16, i16* %205, align 2
  store i16 %206, i16* %204, align 2
  %207 = getelementptr inbounds i16, i16* %193, i64 5
  %208 = getelementptr inbounds i16, i16* %192, i64 5
  %209 = load i16, i16* %208, align 2
  store i16 %209, i16* %207, align 2
  %210 = getelementptr inbounds i16, i16* %193, i64 6
  %211 = getelementptr inbounds i16, i16* %192, i64 6
  %212 = load i16, i16* %211, align 2
  store i16 %212, i16* %210, align 2
  %213 = getelementptr inbounds i16, i16* %193, i64 7
  %214 = getelementptr inbounds i16, i16* %192, i64 7
  %215 = load i16, i16* %214, align 2
  store i16 %215, i16* %213, align 2
  %216 = add i64 %191, -8
  %217 = getelementptr inbounds i16, i16* %193, i64 8
  %218 = getelementptr inbounds i16, i16* %192, i64 8
  %219 = icmp eq i64 %216, 0
  br i1 %219, label %220, label %190, !llvm.loop !46

220:                                              ; preds = %185, %190, %165, %70
  %221 = phi i16* [ %74, %70 ], [ %77, %165 ], [ %77, %190 ], [ %77, %185 ]
  %222 = getelementptr inbounds i16, i16* %221, i64 %51
  store i16 0, i16* %222, align 2
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %21) #10, !noalias !32
  br label %224

223:                                              ; preds = %14
  call fastcc void @_ZN4base12_GLOBAL__N_121TimeFormatWithoutAmPmEPKN6icu_6910DateFormatERKNS_4TimeE(%"class.std::__1::basic_string"* sret %0, %"class.icu_69::DateFormat"* nonnull %19, %"class.base::Time"* dereferenceable(8) %1)
  br label %224

224:                                              ; preds = %223, %220
  call void @_ZN6icu_6916SimpleDateFormatD1Ev(%"class.icu_69::SimpleDateFormat"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 864, i8* nonnull %17) #10
  br label %225

225:                                              ; preds = %224, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4base16GetHourClockTypeEv() local_unnamed_addr #0 {
  %1 = alloca %"class.icu_69::UnicodeString", align 8
  %2 = tail call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() #10
  %3 = tail call %"class.icu_69::DateFormat"* @_ZN6icu_6910DateFormat18createTimeInstanceENS0_6EStyleERKNS_6LocaleE(i32 3, %"class.icu_69::Locale"* dereferenceable(224) %2) #10
  %4 = bitcast %"class.icu_69::DateFormat"* %3 to %"class.icu_69::SimpleDateFormat"*
  %5 = bitcast %"class.icu_69::UnicodeString"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 64, i1 false)
  %6 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %7, align 8
  %8 = bitcast %"class.icu_69::DateFormat"* %3 to %"class.icu_69::UnicodeString"* (%"class.icu_69::SimpleDateFormat"*, %"class.icu_69::UnicodeString"*)***
  %9 = load %"class.icu_69::UnicodeString"* (%"class.icu_69::SimpleDateFormat"*, %"class.icu_69::UnicodeString"*)**, %"class.icu_69::UnicodeString"* (%"class.icu_69::SimpleDateFormat"*, %"class.icu_69::UnicodeString"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.icu_69::UnicodeString"* (%"class.icu_69::SimpleDateFormat"*, %"class.icu_69::UnicodeString"*)*, %"class.icu_69::UnicodeString"* (%"class.icu_69::SimpleDateFormat"*, %"class.icu_69::UnicodeString"*)** %9, i64 30
  %11 = load %"class.icu_69::UnicodeString"* (%"class.icu_69::SimpleDateFormat"*, %"class.icu_69::UnicodeString"*)*, %"class.icu_69::UnicodeString"* (%"class.icu_69::SimpleDateFormat"*, %"class.icu_69::UnicodeString"*)** %10, align 8
  %12 = call dereferenceable(64) %"class.icu_69::UnicodeString"* %11(%"class.icu_69::SimpleDateFormat"* %4, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %1) #10
  %13 = load i16, i16* %7, align 8
  %14 = icmp slt i16 %13, 0
  %15 = lshr i16 %13, 5
  %16 = zext i16 %15 to i32
  %17 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = select i1 %14, i32 %18, i32 %16
  %20 = call i32 @_ZNK6icu_6913UnicodeString9doIndexOfEiii(%"class.icu_69::UnicodeString"* nonnull %1, i32 97, i32 0, i32 %19) #10
  %21 = icmp eq i32 %20, -1
  %22 = zext i1 %21 to i32
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %1) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #10
  %23 = icmp eq %"class.icu_69::DateFormat"* %3, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %0
  %25 = bitcast %"class.icu_69::DateFormat"* %3 to void (%"class.icu_69::SimpleDateFormat"*)***
  %26 = load void (%"class.icu_69::SimpleDateFormat"*)**, void (%"class.icu_69::SimpleDateFormat"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.icu_69::SimpleDateFormat"*)*, void (%"class.icu_69::SimpleDateFormat"*)** %26, i64 1
  %28 = load void (%"class.icu_69::SimpleDateFormat"*)*, void (%"class.icu_69::SimpleDateFormat"*)** %27, align 8
  call void %28(%"class.icu_69::SimpleDateFormat"* nonnull %4) #10
  br label %29

29:                                               ; preds = %0, %24
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19TimeFormatShortDateERKNS_4TimeE(%"class.std::__1::basic_string"* noalias sret, %"class.base::Time"* dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca %"class.icu_69::UnicodeString", align 8
  %4 = tail call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() #10
  %5 = tail call %"class.icu_69::DateFormat"* @_ZN6icu_6910DateFormat18createDateInstanceENS0_6EStyleERKNS_6LocaleE(i32 2, %"class.icu_69::Locale"* dereferenceable(224) %4) #10
  %6 = bitcast %"class.icu_69::UnicodeString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %6) #10, !noalias !47
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 64, i1 false) #10, !noalias !47
  %7 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !noalias !47
  %8 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %8, align 8, !noalias !47
  %9 = tail call double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"* %1) #10, !noalias !47
  %10 = fmul double %9, 1.000000e+03
  %11 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6910DateFormat6formatEdRNS_13UnicodeStringE(%"class.icu_69::DateFormat"* %5, double %10, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %3) #10, !noalias !47
  %12 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %12, i64 0, i32 0, i32 0
  %14 = load i16, i16* %13, align 8, !noalias !50
  %15 = sext i16 %14 to i32
  %16 = and i32 %15, 17
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %27

18:                                               ; preds = %2
  %19 = and i32 %15, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %18
  %22 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %12 to %struct.anon.3*
  %23 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %22, i64 0, i32 1, i64 0
  br label %27

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 3
  %26 = load i16*, i16** %25, align 8, !noalias !50
  br label %27

27:                                               ; preds = %24, %21, %2
  %28 = phi i16* [ %23, %21 ], [ %26, %24 ], [ null, %2 ]
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %28) #10, !noalias !50, !srcloc !8
  %29 = load i16, i16* %8, align 8, !noalias !50
  %30 = icmp slt i16 %29, 0
  %31 = lshr i16 %29, 5
  %32 = zext i16 %31 to i32
  %33 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 1
  %34 = load i32, i32* %33, align 4, !noalias !50
  %35 = select i1 %30, i32 %34, i32 %32
  %36 = sext i32 %35 to i64
  %37 = icmp slt i32 %35, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %27
  %39 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %39) #11
  unreachable

40:                                               ; preds = %27
  %41 = icmp ult i32 %35, 11
  br i1 %41, label %55, label %42

42:                                               ; preds = %40
  %43 = add nuw nsw i64 %36, 8
  %44 = and i64 %43, -8
  %45 = icmp slt i64 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %42
  call void @abort() #11
  unreachable

47:                                               ; preds = %42
  %48 = shl nsw i64 %44, 1
  %49 = call i8* @_Znwm(i64 %48) #12
  %50 = bitcast i8* %49 to i16*
  %51 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %49, i8** %51, align 8, !alias.scope !50
  %52 = or i64 %44, -9223372036854775808
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %52, i64* %53, align 8, !alias.scope !50
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %36, i64* %54, align 8, !alias.scope !50
  br label %61

55:                                               ; preds = %40
  %56 = trunc i32 %35 to i8
  %57 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %57, i64 0, i32 1, i32 1
  store i8 %56, i8* %58, align 1, !alias.scope !50
  %59 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %60 = icmp eq i32 %35, 0
  br i1 %60, label %205, label %61

61:                                               ; preds = %55, %47
  %62 = phi i16* [ %50, %47 ], [ %59, %55 ]
  %63 = icmp ult i32 %35, 16
  br i1 %63, label %152, label %64

64:                                               ; preds = %61
  %65 = getelementptr i16, i16* %62, i64 %36
  %66 = getelementptr i16, i16* %28, i64 %36
  %67 = icmp ult i16* %62, %66
  %68 = icmp ult i16* %28, %65
  %69 = and i1 %67, %68
  br i1 %69, label %152, label %70

70:                                               ; preds = %64
  %71 = and i64 %36, -16
  %72 = sub nsw i64 %36, %71
  %73 = getelementptr i16, i16* %28, i64 %71
  %74 = getelementptr i16, i16* %62, i64 %71
  %75 = add nsw i64 %71, -16
  %76 = lshr exact i64 %75, 4
  %77 = add nuw nsw i64 %76, 1
  %78 = and i64 %77, 3
  %79 = icmp ult i64 %75, 48
  br i1 %79, label %131, label %80

80:                                               ; preds = %70
  %81 = sub nsw i64 %77, %78
  br label %82

82:                                               ; preds = %82, %80
  %83 = phi i64 [ 0, %80 ], [ %128, %82 ]
  %84 = phi i64 [ %81, %80 ], [ %129, %82 ]
  %85 = getelementptr i16, i16* %28, i64 %83
  %86 = getelementptr i16, i16* %62, i64 %83
  %87 = bitcast i16* %85 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !53
  %89 = getelementptr i16, i16* %85, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !53
  %92 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %92, align 2, !alias.scope !56, !noalias !53
  %93 = getelementptr i16, i16* %86, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %94, align 2, !alias.scope !56, !noalias !53
  %95 = or i64 %83, 16
  %96 = getelementptr i16, i16* %28, i64 %95
  %97 = getelementptr i16, i16* %62, i64 %95
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !53
  %100 = getelementptr i16, i16* %96, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !53
  %103 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !56, !noalias !53
  %104 = getelementptr i16, i16* %97, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !56, !noalias !53
  %106 = or i64 %83, 32
  %107 = getelementptr i16, i16* %28, i64 %106
  %108 = getelementptr i16, i16* %62, i64 %106
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !53
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !53
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !56, !noalias !53
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !56, !noalias !53
  %117 = or i64 %83, 48
  %118 = getelementptr i16, i16* %28, i64 %117
  %119 = getelementptr i16, i16* %62, i64 %117
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !53
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !53
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !56, !noalias !53
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !56, !noalias !53
  %128 = add i64 %83, 64
  %129 = add i64 %84, -4
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %82, !llvm.loop !58

131:                                              ; preds = %82, %70
  %132 = phi i64 [ 0, %70 ], [ %128, %82 ]
  %133 = icmp eq i64 %78, 0
  br i1 %133, label %150, label %134

134:                                              ; preds = %131, %134
  %135 = phi i64 [ %147, %134 ], [ %132, %131 ]
  %136 = phi i64 [ %148, %134 ], [ %78, %131 ]
  %137 = getelementptr i16, i16* %28, i64 %135
  %138 = getelementptr i16, i16* %62, i64 %135
  %139 = bitcast i16* %137 to <8 x i16>*
  %140 = load <8 x i16>, <8 x i16>* %139, align 2, !alias.scope !53
  %141 = getelementptr i16, i16* %137, i64 8
  %142 = bitcast i16* %141 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !53
  %144 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %140, <8 x i16>* %144, align 2, !alias.scope !56, !noalias !53
  %145 = getelementptr i16, i16* %138, i64 8
  %146 = bitcast i16* %145 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %146, align 2, !alias.scope !56, !noalias !53
  %147 = add i64 %135, 16
  %148 = add i64 %136, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %134, !llvm.loop !59

150:                                              ; preds = %134, %131
  %151 = icmp eq i64 %71, %36
  br i1 %151, label %205, label %152

152:                                              ; preds = %150, %64, %61
  %153 = phi i64 [ %36, %64 ], [ %36, %61 ], [ %72, %150 ]
  %154 = phi i16* [ %28, %64 ], [ %28, %61 ], [ %73, %150 ]
  %155 = phi i16* [ %62, %64 ], [ %62, %61 ], [ %74, %150 ]
  %156 = add nsw i64 %153, -1
  %157 = and i64 %153, 7
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %170, label %159

159:                                              ; preds = %152, %159
  %160 = phi i64 [ %165, %159 ], [ %153, %152 ]
  %161 = phi i16* [ %167, %159 ], [ %154, %152 ]
  %162 = phi i16* [ %166, %159 ], [ %155, %152 ]
  %163 = phi i64 [ %168, %159 ], [ %157, %152 ]
  %164 = load i16, i16* %161, align 2
  store i16 %164, i16* %162, align 2
  %165 = add i64 %160, -1
  %166 = getelementptr inbounds i16, i16* %162, i64 1
  %167 = getelementptr inbounds i16, i16* %161, i64 1
  %168 = add i64 %163, -1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %159, !llvm.loop !60

170:                                              ; preds = %159, %152
  %171 = phi i64 [ %153, %152 ], [ %165, %159 ]
  %172 = phi i16* [ %154, %152 ], [ %167, %159 ]
  %173 = phi i16* [ %155, %152 ], [ %166, %159 ]
  %174 = icmp ult i64 %156, 7
  br i1 %174, label %205, label %175

175:                                              ; preds = %170, %175
  %176 = phi i64 [ %201, %175 ], [ %171, %170 ]
  %177 = phi i16* [ %203, %175 ], [ %172, %170 ]
  %178 = phi i16* [ %202, %175 ], [ %173, %170 ]
  %179 = load i16, i16* %177, align 2
  store i16 %179, i16* %178, align 2
  %180 = getelementptr inbounds i16, i16* %178, i64 1
  %181 = getelementptr inbounds i16, i16* %177, i64 1
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %178, i64 2
  %184 = getelementptr inbounds i16, i16* %177, i64 2
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %178, i64 3
  %187 = getelementptr inbounds i16, i16* %177, i64 3
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %178, i64 4
  %190 = getelementptr inbounds i16, i16* %177, i64 4
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = getelementptr inbounds i16, i16* %178, i64 5
  %193 = getelementptr inbounds i16, i16* %177, i64 5
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2
  %195 = getelementptr inbounds i16, i16* %178, i64 6
  %196 = getelementptr inbounds i16, i16* %177, i64 6
  %197 = load i16, i16* %196, align 2
  store i16 %197, i16* %195, align 2
  %198 = getelementptr inbounds i16, i16* %178, i64 7
  %199 = getelementptr inbounds i16, i16* %177, i64 7
  %200 = load i16, i16* %199, align 2
  store i16 %200, i16* %198, align 2
  %201 = add i64 %176, -8
  %202 = getelementptr inbounds i16, i16* %178, i64 8
  %203 = getelementptr inbounds i16, i16* %177, i64 8
  %204 = icmp eq i64 %201, 0
  br i1 %204, label %205, label %175, !llvm.loop !61

205:                                              ; preds = %170, %175, %150, %55
  %206 = phi i16* [ %59, %55 ], [ %62, %150 ], [ %62, %175 ], [ %62, %170 ]
  %207 = getelementptr inbounds i16, i16* %206, i64 %36
  store i16 0, i16* %207, align 2
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %6) #10, !noalias !47
  %208 = icmp eq %"class.icu_69::DateFormat"* %5, null
  br i1 %208, label %214, label %209

209:                                              ; preds = %205
  %210 = bitcast %"class.icu_69::DateFormat"* %5 to void (%"class.icu_69::DateFormat"*)***
  %211 = load void (%"class.icu_69::DateFormat"*)**, void (%"class.icu_69::DateFormat"*)*** %210, align 8
  %212 = getelementptr inbounds void (%"class.icu_69::DateFormat"*)*, void (%"class.icu_69::DateFormat"*)** %211, i64 1
  %213 = load void (%"class.icu_69::DateFormat"*)*, void (%"class.icu_69::DateFormat"*)** %212, align 8
  call void %213(%"class.icu_69::DateFormat"* nonnull %5) #10
  br label %214

214:                                              ; preds = %205, %209
  ret void
}

declare %"class.icu_69::DateFormat"* @_ZN6icu_6910DateFormat18createDateInstanceENS0_6EStyleERKNS_6LocaleE(i32, %"class.icu_69::Locale"* dereferenceable(224)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base26TimeFormatShortDateNumericERKNS_4TimeE(%"class.std::__1::basic_string"* noalias sret, %"class.base::Time"* dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca %"class.icu_69::UnicodeString", align 8
  %4 = tail call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() #10
  %5 = tail call %"class.icu_69::DateFormat"* @_ZN6icu_6910DateFormat18createDateInstanceENS0_6EStyleERKNS_6LocaleE(i32 3, %"class.icu_69::Locale"* dereferenceable(224) %4) #10
  %6 = bitcast %"class.icu_69::UnicodeString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %6) #10, !noalias !62
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 64, i1 false) #10, !noalias !62
  %7 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !noalias !62
  %8 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %8, align 8, !noalias !62
  %9 = tail call double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"* %1) #10, !noalias !62
  %10 = fmul double %9, 1.000000e+03
  %11 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6910DateFormat6formatEdRNS_13UnicodeStringE(%"class.icu_69::DateFormat"* %5, double %10, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %3) #10, !noalias !62
  %12 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %12, i64 0, i32 0, i32 0
  %14 = load i16, i16* %13, align 8, !noalias !65
  %15 = sext i16 %14 to i32
  %16 = and i32 %15, 17
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %27

18:                                               ; preds = %2
  %19 = and i32 %15, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %18
  %22 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %12 to %struct.anon.3*
  %23 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %22, i64 0, i32 1, i64 0
  br label %27

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 3
  %26 = load i16*, i16** %25, align 8, !noalias !65
  br label %27

27:                                               ; preds = %24, %21, %2
  %28 = phi i16* [ %23, %21 ], [ %26, %24 ], [ null, %2 ]
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %28) #10, !noalias !65, !srcloc !8
  %29 = load i16, i16* %8, align 8, !noalias !65
  %30 = icmp slt i16 %29, 0
  %31 = lshr i16 %29, 5
  %32 = zext i16 %31 to i32
  %33 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 1
  %34 = load i32, i32* %33, align 4, !noalias !65
  %35 = select i1 %30, i32 %34, i32 %32
  %36 = sext i32 %35 to i64
  %37 = icmp slt i32 %35, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %27
  %39 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %39) #11
  unreachable

40:                                               ; preds = %27
  %41 = icmp ult i32 %35, 11
  br i1 %41, label %55, label %42

42:                                               ; preds = %40
  %43 = add nuw nsw i64 %36, 8
  %44 = and i64 %43, -8
  %45 = icmp slt i64 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %42
  call void @abort() #11
  unreachable

47:                                               ; preds = %42
  %48 = shl nsw i64 %44, 1
  %49 = call i8* @_Znwm(i64 %48) #12
  %50 = bitcast i8* %49 to i16*
  %51 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %49, i8** %51, align 8, !alias.scope !65
  %52 = or i64 %44, -9223372036854775808
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %52, i64* %53, align 8, !alias.scope !65
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %36, i64* %54, align 8, !alias.scope !65
  br label %61

55:                                               ; preds = %40
  %56 = trunc i32 %35 to i8
  %57 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %57, i64 0, i32 1, i32 1
  store i8 %56, i8* %58, align 1, !alias.scope !65
  %59 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %60 = icmp eq i32 %35, 0
  br i1 %60, label %205, label %61

61:                                               ; preds = %55, %47
  %62 = phi i16* [ %50, %47 ], [ %59, %55 ]
  %63 = icmp ult i32 %35, 16
  br i1 %63, label %152, label %64

64:                                               ; preds = %61
  %65 = getelementptr i16, i16* %62, i64 %36
  %66 = getelementptr i16, i16* %28, i64 %36
  %67 = icmp ult i16* %62, %66
  %68 = icmp ult i16* %28, %65
  %69 = and i1 %67, %68
  br i1 %69, label %152, label %70

70:                                               ; preds = %64
  %71 = and i64 %36, -16
  %72 = sub nsw i64 %36, %71
  %73 = getelementptr i16, i16* %28, i64 %71
  %74 = getelementptr i16, i16* %62, i64 %71
  %75 = add nsw i64 %71, -16
  %76 = lshr exact i64 %75, 4
  %77 = add nuw nsw i64 %76, 1
  %78 = and i64 %77, 3
  %79 = icmp ult i64 %75, 48
  br i1 %79, label %131, label %80

80:                                               ; preds = %70
  %81 = sub nsw i64 %77, %78
  br label %82

82:                                               ; preds = %82, %80
  %83 = phi i64 [ 0, %80 ], [ %128, %82 ]
  %84 = phi i64 [ %81, %80 ], [ %129, %82 ]
  %85 = getelementptr i16, i16* %28, i64 %83
  %86 = getelementptr i16, i16* %62, i64 %83
  %87 = bitcast i16* %85 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !68
  %89 = getelementptr i16, i16* %85, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !68
  %92 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %92, align 2, !alias.scope !71, !noalias !68
  %93 = getelementptr i16, i16* %86, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %94, align 2, !alias.scope !71, !noalias !68
  %95 = or i64 %83, 16
  %96 = getelementptr i16, i16* %28, i64 %95
  %97 = getelementptr i16, i16* %62, i64 %95
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !68
  %100 = getelementptr i16, i16* %96, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !68
  %103 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !71, !noalias !68
  %104 = getelementptr i16, i16* %97, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !71, !noalias !68
  %106 = or i64 %83, 32
  %107 = getelementptr i16, i16* %28, i64 %106
  %108 = getelementptr i16, i16* %62, i64 %106
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !68
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !68
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !71, !noalias !68
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !71, !noalias !68
  %117 = or i64 %83, 48
  %118 = getelementptr i16, i16* %28, i64 %117
  %119 = getelementptr i16, i16* %62, i64 %117
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !68
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !68
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !71, !noalias !68
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !71, !noalias !68
  %128 = add i64 %83, 64
  %129 = add i64 %84, -4
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %82, !llvm.loop !73

131:                                              ; preds = %82, %70
  %132 = phi i64 [ 0, %70 ], [ %128, %82 ]
  %133 = icmp eq i64 %78, 0
  br i1 %133, label %150, label %134

134:                                              ; preds = %131, %134
  %135 = phi i64 [ %147, %134 ], [ %132, %131 ]
  %136 = phi i64 [ %148, %134 ], [ %78, %131 ]
  %137 = getelementptr i16, i16* %28, i64 %135
  %138 = getelementptr i16, i16* %62, i64 %135
  %139 = bitcast i16* %137 to <8 x i16>*
  %140 = load <8 x i16>, <8 x i16>* %139, align 2, !alias.scope !68
  %141 = getelementptr i16, i16* %137, i64 8
  %142 = bitcast i16* %141 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !68
  %144 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %140, <8 x i16>* %144, align 2, !alias.scope !71, !noalias !68
  %145 = getelementptr i16, i16* %138, i64 8
  %146 = bitcast i16* %145 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %146, align 2, !alias.scope !71, !noalias !68
  %147 = add i64 %135, 16
  %148 = add i64 %136, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %134, !llvm.loop !74

150:                                              ; preds = %134, %131
  %151 = icmp eq i64 %71, %36
  br i1 %151, label %205, label %152

152:                                              ; preds = %150, %64, %61
  %153 = phi i64 [ %36, %64 ], [ %36, %61 ], [ %72, %150 ]
  %154 = phi i16* [ %28, %64 ], [ %28, %61 ], [ %73, %150 ]
  %155 = phi i16* [ %62, %64 ], [ %62, %61 ], [ %74, %150 ]
  %156 = add nsw i64 %153, -1
  %157 = and i64 %153, 7
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %170, label %159

159:                                              ; preds = %152, %159
  %160 = phi i64 [ %165, %159 ], [ %153, %152 ]
  %161 = phi i16* [ %167, %159 ], [ %154, %152 ]
  %162 = phi i16* [ %166, %159 ], [ %155, %152 ]
  %163 = phi i64 [ %168, %159 ], [ %157, %152 ]
  %164 = load i16, i16* %161, align 2
  store i16 %164, i16* %162, align 2
  %165 = add i64 %160, -1
  %166 = getelementptr inbounds i16, i16* %162, i64 1
  %167 = getelementptr inbounds i16, i16* %161, i64 1
  %168 = add i64 %163, -1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %159, !llvm.loop !75

170:                                              ; preds = %159, %152
  %171 = phi i64 [ %153, %152 ], [ %165, %159 ]
  %172 = phi i16* [ %154, %152 ], [ %167, %159 ]
  %173 = phi i16* [ %155, %152 ], [ %166, %159 ]
  %174 = icmp ult i64 %156, 7
  br i1 %174, label %205, label %175

175:                                              ; preds = %170, %175
  %176 = phi i64 [ %201, %175 ], [ %171, %170 ]
  %177 = phi i16* [ %203, %175 ], [ %172, %170 ]
  %178 = phi i16* [ %202, %175 ], [ %173, %170 ]
  %179 = load i16, i16* %177, align 2
  store i16 %179, i16* %178, align 2
  %180 = getelementptr inbounds i16, i16* %178, i64 1
  %181 = getelementptr inbounds i16, i16* %177, i64 1
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %178, i64 2
  %184 = getelementptr inbounds i16, i16* %177, i64 2
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %178, i64 3
  %187 = getelementptr inbounds i16, i16* %177, i64 3
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %178, i64 4
  %190 = getelementptr inbounds i16, i16* %177, i64 4
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = getelementptr inbounds i16, i16* %178, i64 5
  %193 = getelementptr inbounds i16, i16* %177, i64 5
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2
  %195 = getelementptr inbounds i16, i16* %178, i64 6
  %196 = getelementptr inbounds i16, i16* %177, i64 6
  %197 = load i16, i16* %196, align 2
  store i16 %197, i16* %195, align 2
  %198 = getelementptr inbounds i16, i16* %178, i64 7
  %199 = getelementptr inbounds i16, i16* %177, i64 7
  %200 = load i16, i16* %199, align 2
  store i16 %200, i16* %198, align 2
  %201 = add i64 %176, -8
  %202 = getelementptr inbounds i16, i16* %178, i64 8
  %203 = getelementptr inbounds i16, i16* %177, i64 8
  %204 = icmp eq i64 %201, 0
  br i1 %204, label %205, label %175, !llvm.loop !76

205:                                              ; preds = %170, %175, %150, %55
  %206 = phi i16* [ %59, %55 ], [ %62, %150 ], [ %62, %175 ], [ %62, %170 ]
  %207 = getelementptr inbounds i16, i16* %206, i64 %36
  store i16 0, i16* %207, align 2
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %6) #10, !noalias !62
  %208 = icmp eq %"class.icu_69::DateFormat"* %5, null
  br i1 %208, label %214, label %209

209:                                              ; preds = %205
  %210 = bitcast %"class.icu_69::DateFormat"* %5 to void (%"class.icu_69::DateFormat"*)***
  %211 = load void (%"class.icu_69::DateFormat"*)**, void (%"class.icu_69::DateFormat"*)*** %210, align 8
  %212 = getelementptr inbounds void (%"class.icu_69::DateFormat"*)*, void (%"class.icu_69::DateFormat"*)** %211, i64 1
  %213 = load void (%"class.icu_69::DateFormat"*)*, void (%"class.icu_69::DateFormat"*)** %212, align 8
  call void %213(%"class.icu_69::DateFormat"* nonnull %5) #10
  br label %214

214:                                              ; preds = %205, %209
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base26TimeFormatShortDateAndTimeERKNS_4TimeE(%"class.std::__1::basic_string"* noalias sret, %"class.base::Time"* dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca %"class.icu_69::UnicodeString", align 8
  %4 = tail call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() #10
  %5 = tail call %"class.icu_69::DateFormat"* @_ZN6icu_6910DateFormat22createDateTimeInstanceENS0_6EStyleES1_RKNS_6LocaleE(i32 3, i32 2, %"class.icu_69::Locale"* dereferenceable(224) %4) #10
  %6 = bitcast %"class.icu_69::UnicodeString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %6) #10, !noalias !77
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 64, i1 false) #10, !noalias !77
  %7 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !noalias !77
  %8 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %8, align 8, !noalias !77
  %9 = tail call double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"* %1) #10, !noalias !77
  %10 = fmul double %9, 1.000000e+03
  %11 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6910DateFormat6formatEdRNS_13UnicodeStringE(%"class.icu_69::DateFormat"* %5, double %10, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %3) #10, !noalias !77
  %12 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %12, i64 0, i32 0, i32 0
  %14 = load i16, i16* %13, align 8, !noalias !80
  %15 = sext i16 %14 to i32
  %16 = and i32 %15, 17
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %27

18:                                               ; preds = %2
  %19 = and i32 %15, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %18
  %22 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %12 to %struct.anon.3*
  %23 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %22, i64 0, i32 1, i64 0
  br label %27

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 3
  %26 = load i16*, i16** %25, align 8, !noalias !80
  br label %27

27:                                               ; preds = %24, %21, %2
  %28 = phi i16* [ %23, %21 ], [ %26, %24 ], [ null, %2 ]
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %28) #10, !noalias !80, !srcloc !8
  %29 = load i16, i16* %8, align 8, !noalias !80
  %30 = icmp slt i16 %29, 0
  %31 = lshr i16 %29, 5
  %32 = zext i16 %31 to i32
  %33 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 1
  %34 = load i32, i32* %33, align 4, !noalias !80
  %35 = select i1 %30, i32 %34, i32 %32
  %36 = sext i32 %35 to i64
  %37 = icmp slt i32 %35, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %27
  %39 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %39) #11
  unreachable

40:                                               ; preds = %27
  %41 = icmp ult i32 %35, 11
  br i1 %41, label %55, label %42

42:                                               ; preds = %40
  %43 = add nuw nsw i64 %36, 8
  %44 = and i64 %43, -8
  %45 = icmp slt i64 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %42
  call void @abort() #11
  unreachable

47:                                               ; preds = %42
  %48 = shl nsw i64 %44, 1
  %49 = call i8* @_Znwm(i64 %48) #12
  %50 = bitcast i8* %49 to i16*
  %51 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %49, i8** %51, align 8, !alias.scope !80
  %52 = or i64 %44, -9223372036854775808
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %52, i64* %53, align 8, !alias.scope !80
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %36, i64* %54, align 8, !alias.scope !80
  br label %61

55:                                               ; preds = %40
  %56 = trunc i32 %35 to i8
  %57 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %57, i64 0, i32 1, i32 1
  store i8 %56, i8* %58, align 1, !alias.scope !80
  %59 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %60 = icmp eq i32 %35, 0
  br i1 %60, label %205, label %61

61:                                               ; preds = %55, %47
  %62 = phi i16* [ %50, %47 ], [ %59, %55 ]
  %63 = icmp ult i32 %35, 16
  br i1 %63, label %152, label %64

64:                                               ; preds = %61
  %65 = getelementptr i16, i16* %62, i64 %36
  %66 = getelementptr i16, i16* %28, i64 %36
  %67 = icmp ult i16* %62, %66
  %68 = icmp ult i16* %28, %65
  %69 = and i1 %67, %68
  br i1 %69, label %152, label %70

70:                                               ; preds = %64
  %71 = and i64 %36, -16
  %72 = sub nsw i64 %36, %71
  %73 = getelementptr i16, i16* %28, i64 %71
  %74 = getelementptr i16, i16* %62, i64 %71
  %75 = add nsw i64 %71, -16
  %76 = lshr exact i64 %75, 4
  %77 = add nuw nsw i64 %76, 1
  %78 = and i64 %77, 3
  %79 = icmp ult i64 %75, 48
  br i1 %79, label %131, label %80

80:                                               ; preds = %70
  %81 = sub nsw i64 %77, %78
  br label %82

82:                                               ; preds = %82, %80
  %83 = phi i64 [ 0, %80 ], [ %128, %82 ]
  %84 = phi i64 [ %81, %80 ], [ %129, %82 ]
  %85 = getelementptr i16, i16* %28, i64 %83
  %86 = getelementptr i16, i16* %62, i64 %83
  %87 = bitcast i16* %85 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !83
  %89 = getelementptr i16, i16* %85, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !83
  %92 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %92, align 2, !alias.scope !86, !noalias !83
  %93 = getelementptr i16, i16* %86, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %94, align 2, !alias.scope !86, !noalias !83
  %95 = or i64 %83, 16
  %96 = getelementptr i16, i16* %28, i64 %95
  %97 = getelementptr i16, i16* %62, i64 %95
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !83
  %100 = getelementptr i16, i16* %96, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !83
  %103 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !86, !noalias !83
  %104 = getelementptr i16, i16* %97, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !86, !noalias !83
  %106 = or i64 %83, 32
  %107 = getelementptr i16, i16* %28, i64 %106
  %108 = getelementptr i16, i16* %62, i64 %106
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !83
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !83
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !86, !noalias !83
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !86, !noalias !83
  %117 = or i64 %83, 48
  %118 = getelementptr i16, i16* %28, i64 %117
  %119 = getelementptr i16, i16* %62, i64 %117
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !83
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !83
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !86, !noalias !83
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !86, !noalias !83
  %128 = add i64 %83, 64
  %129 = add i64 %84, -4
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %82, !llvm.loop !88

131:                                              ; preds = %82, %70
  %132 = phi i64 [ 0, %70 ], [ %128, %82 ]
  %133 = icmp eq i64 %78, 0
  br i1 %133, label %150, label %134

134:                                              ; preds = %131, %134
  %135 = phi i64 [ %147, %134 ], [ %132, %131 ]
  %136 = phi i64 [ %148, %134 ], [ %78, %131 ]
  %137 = getelementptr i16, i16* %28, i64 %135
  %138 = getelementptr i16, i16* %62, i64 %135
  %139 = bitcast i16* %137 to <8 x i16>*
  %140 = load <8 x i16>, <8 x i16>* %139, align 2, !alias.scope !83
  %141 = getelementptr i16, i16* %137, i64 8
  %142 = bitcast i16* %141 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !83
  %144 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %140, <8 x i16>* %144, align 2, !alias.scope !86, !noalias !83
  %145 = getelementptr i16, i16* %138, i64 8
  %146 = bitcast i16* %145 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %146, align 2, !alias.scope !86, !noalias !83
  %147 = add i64 %135, 16
  %148 = add i64 %136, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %134, !llvm.loop !89

150:                                              ; preds = %134, %131
  %151 = icmp eq i64 %71, %36
  br i1 %151, label %205, label %152

152:                                              ; preds = %150, %64, %61
  %153 = phi i64 [ %36, %64 ], [ %36, %61 ], [ %72, %150 ]
  %154 = phi i16* [ %28, %64 ], [ %28, %61 ], [ %73, %150 ]
  %155 = phi i16* [ %62, %64 ], [ %62, %61 ], [ %74, %150 ]
  %156 = add nsw i64 %153, -1
  %157 = and i64 %153, 7
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %170, label %159

159:                                              ; preds = %152, %159
  %160 = phi i64 [ %165, %159 ], [ %153, %152 ]
  %161 = phi i16* [ %167, %159 ], [ %154, %152 ]
  %162 = phi i16* [ %166, %159 ], [ %155, %152 ]
  %163 = phi i64 [ %168, %159 ], [ %157, %152 ]
  %164 = load i16, i16* %161, align 2
  store i16 %164, i16* %162, align 2
  %165 = add i64 %160, -1
  %166 = getelementptr inbounds i16, i16* %162, i64 1
  %167 = getelementptr inbounds i16, i16* %161, i64 1
  %168 = add i64 %163, -1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %159, !llvm.loop !90

170:                                              ; preds = %159, %152
  %171 = phi i64 [ %153, %152 ], [ %165, %159 ]
  %172 = phi i16* [ %154, %152 ], [ %167, %159 ]
  %173 = phi i16* [ %155, %152 ], [ %166, %159 ]
  %174 = icmp ult i64 %156, 7
  br i1 %174, label %205, label %175

175:                                              ; preds = %170, %175
  %176 = phi i64 [ %201, %175 ], [ %171, %170 ]
  %177 = phi i16* [ %203, %175 ], [ %172, %170 ]
  %178 = phi i16* [ %202, %175 ], [ %173, %170 ]
  %179 = load i16, i16* %177, align 2
  store i16 %179, i16* %178, align 2
  %180 = getelementptr inbounds i16, i16* %178, i64 1
  %181 = getelementptr inbounds i16, i16* %177, i64 1
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %178, i64 2
  %184 = getelementptr inbounds i16, i16* %177, i64 2
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %178, i64 3
  %187 = getelementptr inbounds i16, i16* %177, i64 3
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %178, i64 4
  %190 = getelementptr inbounds i16, i16* %177, i64 4
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = getelementptr inbounds i16, i16* %178, i64 5
  %193 = getelementptr inbounds i16, i16* %177, i64 5
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2
  %195 = getelementptr inbounds i16, i16* %178, i64 6
  %196 = getelementptr inbounds i16, i16* %177, i64 6
  %197 = load i16, i16* %196, align 2
  store i16 %197, i16* %195, align 2
  %198 = getelementptr inbounds i16, i16* %178, i64 7
  %199 = getelementptr inbounds i16, i16* %177, i64 7
  %200 = load i16, i16* %199, align 2
  store i16 %200, i16* %198, align 2
  %201 = add i64 %176, -8
  %202 = getelementptr inbounds i16, i16* %178, i64 8
  %203 = getelementptr inbounds i16, i16* %177, i64 8
  %204 = icmp eq i64 %201, 0
  br i1 %204, label %205, label %175, !llvm.loop !91

205:                                              ; preds = %170, %175, %150, %55
  %206 = phi i16* [ %59, %55 ], [ %62, %150 ], [ %62, %175 ], [ %62, %170 ]
  %207 = getelementptr inbounds i16, i16* %206, i64 %36
  store i16 0, i16* %207, align 2
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %6) #10, !noalias !77
  %208 = icmp eq %"class.icu_69::DateFormat"* %5, null
  br i1 %208, label %214, label %209

209:                                              ; preds = %205
  %210 = bitcast %"class.icu_69::DateFormat"* %5 to void (%"class.icu_69::DateFormat"*)***
  %211 = load void (%"class.icu_69::DateFormat"*)**, void (%"class.icu_69::DateFormat"*)*** %210, align 8
  %212 = getelementptr inbounds void (%"class.icu_69::DateFormat"*)*, void (%"class.icu_69::DateFormat"*)** %211, i64 1
  %213 = load void (%"class.icu_69::DateFormat"*)*, void (%"class.icu_69::DateFormat"*)** %212, align 8
  call void %213(%"class.icu_69::DateFormat"* nonnull %5) #10
  br label %214

214:                                              ; preds = %205, %209
  ret void
}

declare %"class.icu_69::DateFormat"* @_ZN6icu_6910DateFormat22createDateTimeInstanceENS0_6EStyleES1_RKNS_6LocaleE(i32, i32, %"class.icu_69::Locale"* dereferenceable(224)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base38TimeFormatShortDateAndTimeWithTimeZoneERKNS_4TimeE(%"class.std::__1::basic_string"* noalias sret, %"class.base::Time"* dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca %"class.icu_69::UnicodeString", align 8
  %4 = tail call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() #10
  %5 = tail call %"class.icu_69::DateFormat"* @_ZN6icu_6910DateFormat22createDateTimeInstanceENS0_6EStyleES1_RKNS_6LocaleE(i32 3, i32 1, %"class.icu_69::Locale"* dereferenceable(224) %4) #10
  %6 = bitcast %"class.icu_69::UnicodeString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %6) #10, !noalias !92
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 64, i1 false) #10, !noalias !92
  %7 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !noalias !92
  %8 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %8, align 8, !noalias !92
  %9 = tail call double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"* %1) #10, !noalias !92
  %10 = fmul double %9, 1.000000e+03
  %11 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6910DateFormat6formatEdRNS_13UnicodeStringE(%"class.icu_69::DateFormat"* %5, double %10, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %3) #10, !noalias !92
  %12 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %12, i64 0, i32 0, i32 0
  %14 = load i16, i16* %13, align 8, !noalias !95
  %15 = sext i16 %14 to i32
  %16 = and i32 %15, 17
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %27

18:                                               ; preds = %2
  %19 = and i32 %15, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %18
  %22 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %12 to %struct.anon.3*
  %23 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %22, i64 0, i32 1, i64 0
  br label %27

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 3
  %26 = load i16*, i16** %25, align 8, !noalias !95
  br label %27

27:                                               ; preds = %24, %21, %2
  %28 = phi i16* [ %23, %21 ], [ %26, %24 ], [ null, %2 ]
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %28) #10, !noalias !95, !srcloc !8
  %29 = load i16, i16* %8, align 8, !noalias !95
  %30 = icmp slt i16 %29, 0
  %31 = lshr i16 %29, 5
  %32 = zext i16 %31 to i32
  %33 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 1
  %34 = load i32, i32* %33, align 4, !noalias !95
  %35 = select i1 %30, i32 %34, i32 %32
  %36 = sext i32 %35 to i64
  %37 = icmp slt i32 %35, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %27
  %39 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %39) #11
  unreachable

40:                                               ; preds = %27
  %41 = icmp ult i32 %35, 11
  br i1 %41, label %55, label %42

42:                                               ; preds = %40
  %43 = add nuw nsw i64 %36, 8
  %44 = and i64 %43, -8
  %45 = icmp slt i64 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %42
  call void @abort() #11
  unreachable

47:                                               ; preds = %42
  %48 = shl nsw i64 %44, 1
  %49 = call i8* @_Znwm(i64 %48) #12
  %50 = bitcast i8* %49 to i16*
  %51 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %49, i8** %51, align 8, !alias.scope !95
  %52 = or i64 %44, -9223372036854775808
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %52, i64* %53, align 8, !alias.scope !95
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %36, i64* %54, align 8, !alias.scope !95
  br label %61

55:                                               ; preds = %40
  %56 = trunc i32 %35 to i8
  %57 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %57, i64 0, i32 1, i32 1
  store i8 %56, i8* %58, align 1, !alias.scope !95
  %59 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %60 = icmp eq i32 %35, 0
  br i1 %60, label %205, label %61

61:                                               ; preds = %55, %47
  %62 = phi i16* [ %50, %47 ], [ %59, %55 ]
  %63 = icmp ult i32 %35, 16
  br i1 %63, label %152, label %64

64:                                               ; preds = %61
  %65 = getelementptr i16, i16* %62, i64 %36
  %66 = getelementptr i16, i16* %28, i64 %36
  %67 = icmp ult i16* %62, %66
  %68 = icmp ult i16* %28, %65
  %69 = and i1 %67, %68
  br i1 %69, label %152, label %70

70:                                               ; preds = %64
  %71 = and i64 %36, -16
  %72 = sub nsw i64 %36, %71
  %73 = getelementptr i16, i16* %28, i64 %71
  %74 = getelementptr i16, i16* %62, i64 %71
  %75 = add nsw i64 %71, -16
  %76 = lshr exact i64 %75, 4
  %77 = add nuw nsw i64 %76, 1
  %78 = and i64 %77, 3
  %79 = icmp ult i64 %75, 48
  br i1 %79, label %131, label %80

80:                                               ; preds = %70
  %81 = sub nsw i64 %77, %78
  br label %82

82:                                               ; preds = %82, %80
  %83 = phi i64 [ 0, %80 ], [ %128, %82 ]
  %84 = phi i64 [ %81, %80 ], [ %129, %82 ]
  %85 = getelementptr i16, i16* %28, i64 %83
  %86 = getelementptr i16, i16* %62, i64 %83
  %87 = bitcast i16* %85 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !98
  %89 = getelementptr i16, i16* %85, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !98
  %92 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %92, align 2, !alias.scope !101, !noalias !98
  %93 = getelementptr i16, i16* %86, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %94, align 2, !alias.scope !101, !noalias !98
  %95 = or i64 %83, 16
  %96 = getelementptr i16, i16* %28, i64 %95
  %97 = getelementptr i16, i16* %62, i64 %95
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !98
  %100 = getelementptr i16, i16* %96, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !98
  %103 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !101, !noalias !98
  %104 = getelementptr i16, i16* %97, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !101, !noalias !98
  %106 = or i64 %83, 32
  %107 = getelementptr i16, i16* %28, i64 %106
  %108 = getelementptr i16, i16* %62, i64 %106
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !98
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !98
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !101, !noalias !98
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !101, !noalias !98
  %117 = or i64 %83, 48
  %118 = getelementptr i16, i16* %28, i64 %117
  %119 = getelementptr i16, i16* %62, i64 %117
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !98
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !98
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !101, !noalias !98
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !101, !noalias !98
  %128 = add i64 %83, 64
  %129 = add i64 %84, -4
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %82, !llvm.loop !103

131:                                              ; preds = %82, %70
  %132 = phi i64 [ 0, %70 ], [ %128, %82 ]
  %133 = icmp eq i64 %78, 0
  br i1 %133, label %150, label %134

134:                                              ; preds = %131, %134
  %135 = phi i64 [ %147, %134 ], [ %132, %131 ]
  %136 = phi i64 [ %148, %134 ], [ %78, %131 ]
  %137 = getelementptr i16, i16* %28, i64 %135
  %138 = getelementptr i16, i16* %62, i64 %135
  %139 = bitcast i16* %137 to <8 x i16>*
  %140 = load <8 x i16>, <8 x i16>* %139, align 2, !alias.scope !98
  %141 = getelementptr i16, i16* %137, i64 8
  %142 = bitcast i16* %141 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !98
  %144 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %140, <8 x i16>* %144, align 2, !alias.scope !101, !noalias !98
  %145 = getelementptr i16, i16* %138, i64 8
  %146 = bitcast i16* %145 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %146, align 2, !alias.scope !101, !noalias !98
  %147 = add i64 %135, 16
  %148 = add i64 %136, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %134, !llvm.loop !104

150:                                              ; preds = %134, %131
  %151 = icmp eq i64 %71, %36
  br i1 %151, label %205, label %152

152:                                              ; preds = %150, %64, %61
  %153 = phi i64 [ %36, %64 ], [ %36, %61 ], [ %72, %150 ]
  %154 = phi i16* [ %28, %64 ], [ %28, %61 ], [ %73, %150 ]
  %155 = phi i16* [ %62, %64 ], [ %62, %61 ], [ %74, %150 ]
  %156 = add nsw i64 %153, -1
  %157 = and i64 %153, 7
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %170, label %159

159:                                              ; preds = %152, %159
  %160 = phi i64 [ %165, %159 ], [ %153, %152 ]
  %161 = phi i16* [ %167, %159 ], [ %154, %152 ]
  %162 = phi i16* [ %166, %159 ], [ %155, %152 ]
  %163 = phi i64 [ %168, %159 ], [ %157, %152 ]
  %164 = load i16, i16* %161, align 2
  store i16 %164, i16* %162, align 2
  %165 = add i64 %160, -1
  %166 = getelementptr inbounds i16, i16* %162, i64 1
  %167 = getelementptr inbounds i16, i16* %161, i64 1
  %168 = add i64 %163, -1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %159, !llvm.loop !105

170:                                              ; preds = %159, %152
  %171 = phi i64 [ %153, %152 ], [ %165, %159 ]
  %172 = phi i16* [ %154, %152 ], [ %167, %159 ]
  %173 = phi i16* [ %155, %152 ], [ %166, %159 ]
  %174 = icmp ult i64 %156, 7
  br i1 %174, label %205, label %175

175:                                              ; preds = %170, %175
  %176 = phi i64 [ %201, %175 ], [ %171, %170 ]
  %177 = phi i16* [ %203, %175 ], [ %172, %170 ]
  %178 = phi i16* [ %202, %175 ], [ %173, %170 ]
  %179 = load i16, i16* %177, align 2
  store i16 %179, i16* %178, align 2
  %180 = getelementptr inbounds i16, i16* %178, i64 1
  %181 = getelementptr inbounds i16, i16* %177, i64 1
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %178, i64 2
  %184 = getelementptr inbounds i16, i16* %177, i64 2
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %178, i64 3
  %187 = getelementptr inbounds i16, i16* %177, i64 3
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %178, i64 4
  %190 = getelementptr inbounds i16, i16* %177, i64 4
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = getelementptr inbounds i16, i16* %178, i64 5
  %193 = getelementptr inbounds i16, i16* %177, i64 5
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2
  %195 = getelementptr inbounds i16, i16* %178, i64 6
  %196 = getelementptr inbounds i16, i16* %177, i64 6
  %197 = load i16, i16* %196, align 2
  store i16 %197, i16* %195, align 2
  %198 = getelementptr inbounds i16, i16* %178, i64 7
  %199 = getelementptr inbounds i16, i16* %177, i64 7
  %200 = load i16, i16* %199, align 2
  store i16 %200, i16* %198, align 2
  %201 = add i64 %176, -8
  %202 = getelementptr inbounds i16, i16* %178, i64 8
  %203 = getelementptr inbounds i16, i16* %177, i64 8
  %204 = icmp eq i64 %201, 0
  br i1 %204, label %205, label %175, !llvm.loop !106

205:                                              ; preds = %170, %175, %150, %55
  %206 = phi i16* [ %59, %55 ], [ %62, %150 ], [ %62, %175 ], [ %62, %170 ]
  %207 = getelementptr inbounds i16, i16* %206, i64 %36
  store i16 0, i16* %207, align 2
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %6) #10, !noalias !92
  %208 = icmp eq %"class.icu_69::DateFormat"* %5, null
  br i1 %208, label %214, label %209

209:                                              ; preds = %205
  %210 = bitcast %"class.icu_69::DateFormat"* %5 to void (%"class.icu_69::DateFormat"*)***
  %211 = load void (%"class.icu_69::DateFormat"*)**, void (%"class.icu_69::DateFormat"*)*** %210, align 8
  %212 = getelementptr inbounds void (%"class.icu_69::DateFormat"*)*, void (%"class.icu_69::DateFormat"*)** %211, i64 1
  %213 = load void (%"class.icu_69::DateFormat"*)*, void (%"class.icu_69::DateFormat"*)** %212, align 8
  call void %213(%"class.icu_69::DateFormat"* nonnull %5) #10
  br label %214

214:                                              ; preds = %205, %209
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base22TimeFormatMonthAndYearERKNS_4TimeE(%"class.std::__1::basic_string"* noalias sret, %"class.base::Time"* dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca %"class.icu_69::UnicodeString", align 8
  %4 = alloca %"class.icu_69::SimpleDateFormat", align 8
  %5 = bitcast %"class.icu_69::SimpleDateFormat"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 864, i8* nonnull %5) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ { %"class.icu_69::Format.base", [6 x i8], %"class.icu_69::Calendar"*, %"class.icu_69::NumberFormat"*, %"class.icu_69::EnumSet", i32 }, { %"class.icu_69::Replaceable", { { i16, [2 x i8], i32, i32, [4 x i8], i16* }, [32 x i8] } }, { %"class.icu_69::Replaceable", { { i16, [2 x i8], i32, i32, [4 x i8], i16* }, [32 x i8] } }, { %"class.icu_69::Replaceable", { { i16, [2 x i8], i32, i32, [4 x i8], i16* }, [32 x i8] } }, %"class.icu_69::Locale", %"class.icu_69::DateFormatSymbols"*, %"class.icu_69::TimeZoneFormat"*, double, i8, i8, i8, [1 x i8], i32, %"class.icu_69::SharedNumberFormat"**, [5 x %"class.icu_69::number::LocalizedNumberFormatter"*], i8, [7 x i8], %"class.icu_69::BreakIterator"* }* @__const._ZN4base12_GLOBAL__N_125CreateSimpleDateFormatterEPKc.formatter to i8*), i64 864, i1 false)
  call fastcc void @_ZN4base12_GLOBAL__N_125CreateSimpleDateFormatterEPKc(%"class.icu_69::SimpleDateFormat"* nonnull sret %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0))
  %6 = getelementptr inbounds %"class.icu_69::SimpleDateFormat", %"class.icu_69::SimpleDateFormat"* %4, i64 0, i32 0
  %7 = bitcast %"class.icu_69::UnicodeString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %7) #10, !noalias !107
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 64, i1 false) #10, !noalias !107
  %8 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8, !noalias !107
  %9 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %9, align 8, !noalias !107
  %10 = call double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"* %1) #10, !noalias !107
  %11 = fmul double %10, 1.000000e+03
  %12 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6910DateFormat6formatEdRNS_13UnicodeStringE(%"class.icu_69::DateFormat"* nonnull %6, double %11, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %3) #10, !noalias !107
  %13 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1
  %14 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %13, i64 0, i32 0, i32 0
  %15 = load i16, i16* %14, align 8, !noalias !110
  %16 = sext i16 %15 to i32
  %17 = and i32 %16, 17
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %28

19:                                               ; preds = %2
  %20 = and i32 %16, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %19
  %23 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %13 to %struct.anon.3*
  %24 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %23, i64 0, i32 1, i64 0
  br label %28

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 3
  %27 = load i16*, i16** %26, align 8, !noalias !110
  br label %28

28:                                               ; preds = %25, %22, %2
  %29 = phi i16* [ %24, %22 ], [ %27, %25 ], [ null, %2 ]
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %29) #10, !noalias !110, !srcloc !8
  %30 = load i16, i16* %9, align 8, !noalias !110
  %31 = icmp slt i16 %30, 0
  %32 = lshr i16 %30, 5
  %33 = zext i16 %32 to i32
  %34 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 1
  %35 = load i32, i32* %34, align 4, !noalias !110
  %36 = select i1 %31, i32 %35, i32 %33
  %37 = sext i32 %36 to i64
  %38 = icmp slt i32 %36, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %28
  %40 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %40) #11
  unreachable

41:                                               ; preds = %28
  %42 = icmp ult i32 %36, 11
  br i1 %42, label %56, label %43

43:                                               ; preds = %41
  %44 = add nuw nsw i64 %37, 8
  %45 = and i64 %44, -8
  %46 = icmp slt i64 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %43
  call void @abort() #11
  unreachable

48:                                               ; preds = %43
  %49 = shl nsw i64 %45, 1
  %50 = call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to i16*
  %52 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %50, i8** %52, align 8, !alias.scope !110
  %53 = or i64 %45, -9223372036854775808
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %53, i64* %54, align 8, !alias.scope !110
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %37, i64* %55, align 8, !alias.scope !110
  br label %62

56:                                               ; preds = %41
  %57 = trunc i32 %36 to i8
  %58 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %58, i64 0, i32 1, i32 1
  store i8 %57, i8* %59, align 1, !alias.scope !110
  %60 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %61 = icmp eq i32 %36, 0
  br i1 %61, label %206, label %62

62:                                               ; preds = %56, %48
  %63 = phi i16* [ %51, %48 ], [ %60, %56 ]
  %64 = icmp ult i32 %36, 16
  br i1 %64, label %153, label %65

65:                                               ; preds = %62
  %66 = getelementptr i16, i16* %63, i64 %37
  %67 = getelementptr i16, i16* %29, i64 %37
  %68 = icmp ult i16* %63, %67
  %69 = icmp ult i16* %29, %66
  %70 = and i1 %68, %69
  br i1 %70, label %153, label %71

71:                                               ; preds = %65
  %72 = and i64 %37, -16
  %73 = sub nsw i64 %37, %72
  %74 = getelementptr i16, i16* %29, i64 %72
  %75 = getelementptr i16, i16* %63, i64 %72
  %76 = add nsw i64 %72, -16
  %77 = lshr exact i64 %76, 4
  %78 = add nuw nsw i64 %77, 1
  %79 = and i64 %78, 3
  %80 = icmp ult i64 %76, 48
  br i1 %80, label %132, label %81

81:                                               ; preds = %71
  %82 = sub nsw i64 %78, %79
  br label %83

83:                                               ; preds = %83, %81
  %84 = phi i64 [ 0, %81 ], [ %129, %83 ]
  %85 = phi i64 [ %82, %81 ], [ %130, %83 ]
  %86 = getelementptr i16, i16* %29, i64 %84
  %87 = getelementptr i16, i16* %63, i64 %84
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !113
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !113
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !116, !noalias !113
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !116, !noalias !113
  %96 = or i64 %84, 16
  %97 = getelementptr i16, i16* %29, i64 %96
  %98 = getelementptr i16, i16* %63, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !113
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !113
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !116, !noalias !113
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !116, !noalias !113
  %107 = or i64 %84, 32
  %108 = getelementptr i16, i16* %29, i64 %107
  %109 = getelementptr i16, i16* %63, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !113
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !113
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !116, !noalias !113
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !116, !noalias !113
  %118 = or i64 %84, 48
  %119 = getelementptr i16, i16* %29, i64 %118
  %120 = getelementptr i16, i16* %63, i64 %118
  %121 = bitcast i16* %119 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !113
  %123 = getelementptr i16, i16* %119, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !113
  %126 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %126, align 2, !alias.scope !116, !noalias !113
  %127 = getelementptr i16, i16* %120, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %128, align 2, !alias.scope !116, !noalias !113
  %129 = add i64 %84, 64
  %130 = add i64 %85, -4
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %83, !llvm.loop !118

132:                                              ; preds = %83, %71
  %133 = phi i64 [ 0, %71 ], [ %129, %83 ]
  %134 = icmp eq i64 %79, 0
  br i1 %134, label %151, label %135

135:                                              ; preds = %132, %135
  %136 = phi i64 [ %148, %135 ], [ %133, %132 ]
  %137 = phi i64 [ %149, %135 ], [ %79, %132 ]
  %138 = getelementptr i16, i16* %29, i64 %136
  %139 = getelementptr i16, i16* %63, i64 %136
  %140 = bitcast i16* %138 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !113
  %142 = getelementptr i16, i16* %138, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !113
  %145 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %145, align 2, !alias.scope !116, !noalias !113
  %146 = getelementptr i16, i16* %139, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %147, align 2, !alias.scope !116, !noalias !113
  %148 = add i64 %136, 16
  %149 = add i64 %137, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %135, !llvm.loop !119

151:                                              ; preds = %135, %132
  %152 = icmp eq i64 %72, %37
  br i1 %152, label %206, label %153

153:                                              ; preds = %151, %65, %62
  %154 = phi i64 [ %37, %65 ], [ %37, %62 ], [ %73, %151 ]
  %155 = phi i16* [ %29, %65 ], [ %29, %62 ], [ %74, %151 ]
  %156 = phi i16* [ %63, %65 ], [ %63, %62 ], [ %75, %151 ]
  %157 = add nsw i64 %154, -1
  %158 = and i64 %154, 7
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %171, label %160

160:                                              ; preds = %153, %160
  %161 = phi i64 [ %166, %160 ], [ %154, %153 ]
  %162 = phi i16* [ %168, %160 ], [ %155, %153 ]
  %163 = phi i16* [ %167, %160 ], [ %156, %153 ]
  %164 = phi i64 [ %169, %160 ], [ %158, %153 ]
  %165 = load i16, i16* %162, align 2
  store i16 %165, i16* %163, align 2
  %166 = add i64 %161, -1
  %167 = getelementptr inbounds i16, i16* %163, i64 1
  %168 = getelementptr inbounds i16, i16* %162, i64 1
  %169 = add i64 %164, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %160, !llvm.loop !120

171:                                              ; preds = %160, %153
  %172 = phi i64 [ %154, %153 ], [ %166, %160 ]
  %173 = phi i16* [ %155, %153 ], [ %168, %160 ]
  %174 = phi i16* [ %156, %153 ], [ %167, %160 ]
  %175 = icmp ult i64 %157, 7
  br i1 %175, label %206, label %176

176:                                              ; preds = %171, %176
  %177 = phi i64 [ %202, %176 ], [ %172, %171 ]
  %178 = phi i16* [ %204, %176 ], [ %173, %171 ]
  %179 = phi i16* [ %203, %176 ], [ %174, %171 ]
  %180 = load i16, i16* %178, align 2
  store i16 %180, i16* %179, align 2
  %181 = getelementptr inbounds i16, i16* %179, i64 1
  %182 = getelementptr inbounds i16, i16* %178, i64 1
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %179, i64 2
  %185 = getelementptr inbounds i16, i16* %178, i64 2
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %179, i64 3
  %188 = getelementptr inbounds i16, i16* %178, i64 3
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %179, i64 4
  %191 = getelementptr inbounds i16, i16* %178, i64 4
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %179, i64 5
  %194 = getelementptr inbounds i16, i16* %178, i64 5
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %179, i64 6
  %197 = getelementptr inbounds i16, i16* %178, i64 6
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %179, i64 7
  %200 = getelementptr inbounds i16, i16* %178, i64 7
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = add i64 %177, -8
  %203 = getelementptr inbounds i16, i16* %179, i64 8
  %204 = getelementptr inbounds i16, i16* %178, i64 8
  %205 = icmp eq i64 %202, 0
  br i1 %205, label %206, label %176, !llvm.loop !121

206:                                              ; preds = %171, %176, %151, %56
  %207 = phi i16* [ %60, %56 ], [ %63, %151 ], [ %63, %176 ], [ %63, %171 ]
  %208 = getelementptr inbounds i16, i16* %207, i64 %37
  store i16 0, i16* %208, align 2
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %7) #10, !noalias !107
  call void @_ZN6icu_6916SimpleDateFormatD1Ev(%"class.icu_69::SimpleDateFormat"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 864, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base29TimeFormatFriendlyDateAndTimeERKNS_4TimeE(%"class.std::__1::basic_string"* noalias sret, %"class.base::Time"* dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca %"class.icu_69::UnicodeString", align 8
  %4 = tail call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() #10
  %5 = tail call %"class.icu_69::DateFormat"* @_ZN6icu_6910DateFormat22createDateTimeInstanceENS0_6EStyleES1_RKNS_6LocaleE(i32 0, i32 2, %"class.icu_69::Locale"* dereferenceable(224) %4) #10
  %6 = bitcast %"class.icu_69::UnicodeString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %6) #10, !noalias !122
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 64, i1 false) #10, !noalias !122
  %7 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !noalias !122
  %8 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %8, align 8, !noalias !122
  %9 = tail call double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"* %1) #10, !noalias !122
  %10 = fmul double %9, 1.000000e+03
  %11 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6910DateFormat6formatEdRNS_13UnicodeStringE(%"class.icu_69::DateFormat"* %5, double %10, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %3) #10, !noalias !122
  %12 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %12, i64 0, i32 0, i32 0
  %14 = load i16, i16* %13, align 8, !noalias !125
  %15 = sext i16 %14 to i32
  %16 = and i32 %15, 17
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %27

18:                                               ; preds = %2
  %19 = and i32 %15, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %18
  %22 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %12 to %struct.anon.3*
  %23 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %22, i64 0, i32 1, i64 0
  br label %27

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 3
  %26 = load i16*, i16** %25, align 8, !noalias !125
  br label %27

27:                                               ; preds = %24, %21, %2
  %28 = phi i16* [ %23, %21 ], [ %26, %24 ], [ null, %2 ]
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %28) #10, !noalias !125, !srcloc !8
  %29 = load i16, i16* %8, align 8, !noalias !125
  %30 = icmp slt i16 %29, 0
  %31 = lshr i16 %29, 5
  %32 = zext i16 %31 to i32
  %33 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 1
  %34 = load i32, i32* %33, align 4, !noalias !125
  %35 = select i1 %30, i32 %34, i32 %32
  %36 = sext i32 %35 to i64
  %37 = icmp slt i32 %35, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %27
  %39 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %39) #11
  unreachable

40:                                               ; preds = %27
  %41 = icmp ult i32 %35, 11
  br i1 %41, label %55, label %42

42:                                               ; preds = %40
  %43 = add nuw nsw i64 %36, 8
  %44 = and i64 %43, -8
  %45 = icmp slt i64 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %42
  call void @abort() #11
  unreachable

47:                                               ; preds = %42
  %48 = shl nsw i64 %44, 1
  %49 = call i8* @_Znwm(i64 %48) #12
  %50 = bitcast i8* %49 to i16*
  %51 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %49, i8** %51, align 8, !alias.scope !125
  %52 = or i64 %44, -9223372036854775808
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %52, i64* %53, align 8, !alias.scope !125
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %36, i64* %54, align 8, !alias.scope !125
  br label %61

55:                                               ; preds = %40
  %56 = trunc i32 %35 to i8
  %57 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %57, i64 0, i32 1, i32 1
  store i8 %56, i8* %58, align 1, !alias.scope !125
  %59 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %60 = icmp eq i32 %35, 0
  br i1 %60, label %205, label %61

61:                                               ; preds = %55, %47
  %62 = phi i16* [ %50, %47 ], [ %59, %55 ]
  %63 = icmp ult i32 %35, 16
  br i1 %63, label %152, label %64

64:                                               ; preds = %61
  %65 = getelementptr i16, i16* %62, i64 %36
  %66 = getelementptr i16, i16* %28, i64 %36
  %67 = icmp ult i16* %62, %66
  %68 = icmp ult i16* %28, %65
  %69 = and i1 %67, %68
  br i1 %69, label %152, label %70

70:                                               ; preds = %64
  %71 = and i64 %36, -16
  %72 = sub nsw i64 %36, %71
  %73 = getelementptr i16, i16* %28, i64 %71
  %74 = getelementptr i16, i16* %62, i64 %71
  %75 = add nsw i64 %71, -16
  %76 = lshr exact i64 %75, 4
  %77 = add nuw nsw i64 %76, 1
  %78 = and i64 %77, 3
  %79 = icmp ult i64 %75, 48
  br i1 %79, label %131, label %80

80:                                               ; preds = %70
  %81 = sub nsw i64 %77, %78
  br label %82

82:                                               ; preds = %82, %80
  %83 = phi i64 [ 0, %80 ], [ %128, %82 ]
  %84 = phi i64 [ %81, %80 ], [ %129, %82 ]
  %85 = getelementptr i16, i16* %28, i64 %83
  %86 = getelementptr i16, i16* %62, i64 %83
  %87 = bitcast i16* %85 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !128
  %89 = getelementptr i16, i16* %85, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !128
  %92 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %92, align 2, !alias.scope !131, !noalias !128
  %93 = getelementptr i16, i16* %86, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %94, align 2, !alias.scope !131, !noalias !128
  %95 = or i64 %83, 16
  %96 = getelementptr i16, i16* %28, i64 %95
  %97 = getelementptr i16, i16* %62, i64 %95
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !128
  %100 = getelementptr i16, i16* %96, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !128
  %103 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !131, !noalias !128
  %104 = getelementptr i16, i16* %97, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !131, !noalias !128
  %106 = or i64 %83, 32
  %107 = getelementptr i16, i16* %28, i64 %106
  %108 = getelementptr i16, i16* %62, i64 %106
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !128
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !128
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !131, !noalias !128
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !131, !noalias !128
  %117 = or i64 %83, 48
  %118 = getelementptr i16, i16* %28, i64 %117
  %119 = getelementptr i16, i16* %62, i64 %117
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !128
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !128
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !131, !noalias !128
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !131, !noalias !128
  %128 = add i64 %83, 64
  %129 = add i64 %84, -4
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %82, !llvm.loop !133

131:                                              ; preds = %82, %70
  %132 = phi i64 [ 0, %70 ], [ %128, %82 ]
  %133 = icmp eq i64 %78, 0
  br i1 %133, label %150, label %134

134:                                              ; preds = %131, %134
  %135 = phi i64 [ %147, %134 ], [ %132, %131 ]
  %136 = phi i64 [ %148, %134 ], [ %78, %131 ]
  %137 = getelementptr i16, i16* %28, i64 %135
  %138 = getelementptr i16, i16* %62, i64 %135
  %139 = bitcast i16* %137 to <8 x i16>*
  %140 = load <8 x i16>, <8 x i16>* %139, align 2, !alias.scope !128
  %141 = getelementptr i16, i16* %137, i64 8
  %142 = bitcast i16* %141 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !128
  %144 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %140, <8 x i16>* %144, align 2, !alias.scope !131, !noalias !128
  %145 = getelementptr i16, i16* %138, i64 8
  %146 = bitcast i16* %145 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %146, align 2, !alias.scope !131, !noalias !128
  %147 = add i64 %135, 16
  %148 = add i64 %136, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %134, !llvm.loop !134

150:                                              ; preds = %134, %131
  %151 = icmp eq i64 %71, %36
  br i1 %151, label %205, label %152

152:                                              ; preds = %150, %64, %61
  %153 = phi i64 [ %36, %64 ], [ %36, %61 ], [ %72, %150 ]
  %154 = phi i16* [ %28, %64 ], [ %28, %61 ], [ %73, %150 ]
  %155 = phi i16* [ %62, %64 ], [ %62, %61 ], [ %74, %150 ]
  %156 = add nsw i64 %153, -1
  %157 = and i64 %153, 7
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %170, label %159

159:                                              ; preds = %152, %159
  %160 = phi i64 [ %165, %159 ], [ %153, %152 ]
  %161 = phi i16* [ %167, %159 ], [ %154, %152 ]
  %162 = phi i16* [ %166, %159 ], [ %155, %152 ]
  %163 = phi i64 [ %168, %159 ], [ %157, %152 ]
  %164 = load i16, i16* %161, align 2
  store i16 %164, i16* %162, align 2
  %165 = add i64 %160, -1
  %166 = getelementptr inbounds i16, i16* %162, i64 1
  %167 = getelementptr inbounds i16, i16* %161, i64 1
  %168 = add i64 %163, -1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %159, !llvm.loop !135

170:                                              ; preds = %159, %152
  %171 = phi i64 [ %153, %152 ], [ %165, %159 ]
  %172 = phi i16* [ %154, %152 ], [ %167, %159 ]
  %173 = phi i16* [ %155, %152 ], [ %166, %159 ]
  %174 = icmp ult i64 %156, 7
  br i1 %174, label %205, label %175

175:                                              ; preds = %170, %175
  %176 = phi i64 [ %201, %175 ], [ %171, %170 ]
  %177 = phi i16* [ %203, %175 ], [ %172, %170 ]
  %178 = phi i16* [ %202, %175 ], [ %173, %170 ]
  %179 = load i16, i16* %177, align 2
  store i16 %179, i16* %178, align 2
  %180 = getelementptr inbounds i16, i16* %178, i64 1
  %181 = getelementptr inbounds i16, i16* %177, i64 1
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %178, i64 2
  %184 = getelementptr inbounds i16, i16* %177, i64 2
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %178, i64 3
  %187 = getelementptr inbounds i16, i16* %177, i64 3
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %178, i64 4
  %190 = getelementptr inbounds i16, i16* %177, i64 4
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = getelementptr inbounds i16, i16* %178, i64 5
  %193 = getelementptr inbounds i16, i16* %177, i64 5
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2
  %195 = getelementptr inbounds i16, i16* %178, i64 6
  %196 = getelementptr inbounds i16, i16* %177, i64 6
  %197 = load i16, i16* %196, align 2
  store i16 %197, i16* %195, align 2
  %198 = getelementptr inbounds i16, i16* %178, i64 7
  %199 = getelementptr inbounds i16, i16* %177, i64 7
  %200 = load i16, i16* %199, align 2
  store i16 %200, i16* %198, align 2
  %201 = add i64 %176, -8
  %202 = getelementptr inbounds i16, i16* %178, i64 8
  %203 = getelementptr inbounds i16, i16* %177, i64 8
  %204 = icmp eq i64 %201, 0
  br i1 %204, label %205, label %175, !llvm.loop !136

205:                                              ; preds = %170, %175, %150, %55
  %206 = phi i16* [ %59, %55 ], [ %62, %150 ], [ %62, %175 ], [ %62, %170 ]
  %207 = getelementptr inbounds i16, i16* %206, i64 %36
  store i16 0, i16* %207, align 2
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %6) #10, !noalias !122
  %208 = icmp eq %"class.icu_69::DateFormat"* %5, null
  br i1 %208, label %214, label %209

209:                                              ; preds = %205
  %210 = bitcast %"class.icu_69::DateFormat"* %5 to void (%"class.icu_69::DateFormat"*)***
  %211 = load void (%"class.icu_69::DateFormat"*)**, void (%"class.icu_69::DateFormat"*)*** %210, align 8
  %212 = getelementptr inbounds void (%"class.icu_69::DateFormat"*)*, void (%"class.icu_69::DateFormat"*)** %211, i64 1
  %213 = load void (%"class.icu_69::DateFormat"*)*, void (%"class.icu_69::DateFormat"*)** %212, align 8
  call void %213(%"class.icu_69::DateFormat"* nonnull %5) #10
  br label %214

214:                                              ; preds = %205, %209
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base22TimeFormatFriendlyDateERKNS_4TimeE(%"class.std::__1::basic_string"* noalias sret, %"class.base::Time"* dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca %"class.icu_69::UnicodeString", align 8
  %4 = tail call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() #10
  %5 = tail call %"class.icu_69::DateFormat"* @_ZN6icu_6910DateFormat18createDateInstanceENS0_6EStyleERKNS_6LocaleE(i32 0, %"class.icu_69::Locale"* dereferenceable(224) %4) #10
  %6 = bitcast %"class.icu_69::UnicodeString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %6) #10, !noalias !137
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 64, i1 false) #10, !noalias !137
  %7 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !noalias !137
  %8 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %8, align 8, !noalias !137
  %9 = tail call double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"* %1) #10, !noalias !137
  %10 = fmul double %9, 1.000000e+03
  %11 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6910DateFormat6formatEdRNS_13UnicodeStringE(%"class.icu_69::DateFormat"* %5, double %10, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %3) #10, !noalias !137
  %12 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %12, i64 0, i32 0, i32 0
  %14 = load i16, i16* %13, align 8, !noalias !140
  %15 = sext i16 %14 to i32
  %16 = and i32 %15, 17
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %27

18:                                               ; preds = %2
  %19 = and i32 %15, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %18
  %22 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %12 to %struct.anon.3*
  %23 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %22, i64 0, i32 1, i64 0
  br label %27

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 3
  %26 = load i16*, i16** %25, align 8, !noalias !140
  br label %27

27:                                               ; preds = %24, %21, %2
  %28 = phi i16* [ %23, %21 ], [ %26, %24 ], [ null, %2 ]
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %28) #10, !noalias !140, !srcloc !8
  %29 = load i16, i16* %8, align 8, !noalias !140
  %30 = icmp slt i16 %29, 0
  %31 = lshr i16 %29, 5
  %32 = zext i16 %31 to i32
  %33 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 1
  %34 = load i32, i32* %33, align 4, !noalias !140
  %35 = select i1 %30, i32 %34, i32 %32
  %36 = sext i32 %35 to i64
  %37 = icmp slt i32 %35, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %27
  %39 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %39) #11
  unreachable

40:                                               ; preds = %27
  %41 = icmp ult i32 %35, 11
  br i1 %41, label %55, label %42

42:                                               ; preds = %40
  %43 = add nuw nsw i64 %36, 8
  %44 = and i64 %43, -8
  %45 = icmp slt i64 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %42
  call void @abort() #11
  unreachable

47:                                               ; preds = %42
  %48 = shl nsw i64 %44, 1
  %49 = call i8* @_Znwm(i64 %48) #12
  %50 = bitcast i8* %49 to i16*
  %51 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %49, i8** %51, align 8, !alias.scope !140
  %52 = or i64 %44, -9223372036854775808
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %52, i64* %53, align 8, !alias.scope !140
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %36, i64* %54, align 8, !alias.scope !140
  br label %61

55:                                               ; preds = %40
  %56 = trunc i32 %35 to i8
  %57 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %57, i64 0, i32 1, i32 1
  store i8 %56, i8* %58, align 1, !alias.scope !140
  %59 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %60 = icmp eq i32 %35, 0
  br i1 %60, label %205, label %61

61:                                               ; preds = %55, %47
  %62 = phi i16* [ %50, %47 ], [ %59, %55 ]
  %63 = icmp ult i32 %35, 16
  br i1 %63, label %152, label %64

64:                                               ; preds = %61
  %65 = getelementptr i16, i16* %62, i64 %36
  %66 = getelementptr i16, i16* %28, i64 %36
  %67 = icmp ult i16* %62, %66
  %68 = icmp ult i16* %28, %65
  %69 = and i1 %67, %68
  br i1 %69, label %152, label %70

70:                                               ; preds = %64
  %71 = and i64 %36, -16
  %72 = sub nsw i64 %36, %71
  %73 = getelementptr i16, i16* %28, i64 %71
  %74 = getelementptr i16, i16* %62, i64 %71
  %75 = add nsw i64 %71, -16
  %76 = lshr exact i64 %75, 4
  %77 = add nuw nsw i64 %76, 1
  %78 = and i64 %77, 3
  %79 = icmp ult i64 %75, 48
  br i1 %79, label %131, label %80

80:                                               ; preds = %70
  %81 = sub nsw i64 %77, %78
  br label %82

82:                                               ; preds = %82, %80
  %83 = phi i64 [ 0, %80 ], [ %128, %82 ]
  %84 = phi i64 [ %81, %80 ], [ %129, %82 ]
  %85 = getelementptr i16, i16* %28, i64 %83
  %86 = getelementptr i16, i16* %62, i64 %83
  %87 = bitcast i16* %85 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !143
  %89 = getelementptr i16, i16* %85, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !143
  %92 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %92, align 2, !alias.scope !146, !noalias !143
  %93 = getelementptr i16, i16* %86, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %94, align 2, !alias.scope !146, !noalias !143
  %95 = or i64 %83, 16
  %96 = getelementptr i16, i16* %28, i64 %95
  %97 = getelementptr i16, i16* %62, i64 %95
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !143
  %100 = getelementptr i16, i16* %96, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !143
  %103 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !146, !noalias !143
  %104 = getelementptr i16, i16* %97, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !146, !noalias !143
  %106 = or i64 %83, 32
  %107 = getelementptr i16, i16* %28, i64 %106
  %108 = getelementptr i16, i16* %62, i64 %106
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !143
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !143
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !146, !noalias !143
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !146, !noalias !143
  %117 = or i64 %83, 48
  %118 = getelementptr i16, i16* %28, i64 %117
  %119 = getelementptr i16, i16* %62, i64 %117
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !143
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !143
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !146, !noalias !143
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !146, !noalias !143
  %128 = add i64 %83, 64
  %129 = add i64 %84, -4
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %82, !llvm.loop !148

131:                                              ; preds = %82, %70
  %132 = phi i64 [ 0, %70 ], [ %128, %82 ]
  %133 = icmp eq i64 %78, 0
  br i1 %133, label %150, label %134

134:                                              ; preds = %131, %134
  %135 = phi i64 [ %147, %134 ], [ %132, %131 ]
  %136 = phi i64 [ %148, %134 ], [ %78, %131 ]
  %137 = getelementptr i16, i16* %28, i64 %135
  %138 = getelementptr i16, i16* %62, i64 %135
  %139 = bitcast i16* %137 to <8 x i16>*
  %140 = load <8 x i16>, <8 x i16>* %139, align 2, !alias.scope !143
  %141 = getelementptr i16, i16* %137, i64 8
  %142 = bitcast i16* %141 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !143
  %144 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %140, <8 x i16>* %144, align 2, !alias.scope !146, !noalias !143
  %145 = getelementptr i16, i16* %138, i64 8
  %146 = bitcast i16* %145 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %146, align 2, !alias.scope !146, !noalias !143
  %147 = add i64 %135, 16
  %148 = add i64 %136, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %134, !llvm.loop !149

150:                                              ; preds = %134, %131
  %151 = icmp eq i64 %71, %36
  br i1 %151, label %205, label %152

152:                                              ; preds = %150, %64, %61
  %153 = phi i64 [ %36, %64 ], [ %36, %61 ], [ %72, %150 ]
  %154 = phi i16* [ %28, %64 ], [ %28, %61 ], [ %73, %150 ]
  %155 = phi i16* [ %62, %64 ], [ %62, %61 ], [ %74, %150 ]
  %156 = add nsw i64 %153, -1
  %157 = and i64 %153, 7
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %170, label %159

159:                                              ; preds = %152, %159
  %160 = phi i64 [ %165, %159 ], [ %153, %152 ]
  %161 = phi i16* [ %167, %159 ], [ %154, %152 ]
  %162 = phi i16* [ %166, %159 ], [ %155, %152 ]
  %163 = phi i64 [ %168, %159 ], [ %157, %152 ]
  %164 = load i16, i16* %161, align 2
  store i16 %164, i16* %162, align 2
  %165 = add i64 %160, -1
  %166 = getelementptr inbounds i16, i16* %162, i64 1
  %167 = getelementptr inbounds i16, i16* %161, i64 1
  %168 = add i64 %163, -1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %159, !llvm.loop !150

170:                                              ; preds = %159, %152
  %171 = phi i64 [ %153, %152 ], [ %165, %159 ]
  %172 = phi i16* [ %154, %152 ], [ %167, %159 ]
  %173 = phi i16* [ %155, %152 ], [ %166, %159 ]
  %174 = icmp ult i64 %156, 7
  br i1 %174, label %205, label %175

175:                                              ; preds = %170, %175
  %176 = phi i64 [ %201, %175 ], [ %171, %170 ]
  %177 = phi i16* [ %203, %175 ], [ %172, %170 ]
  %178 = phi i16* [ %202, %175 ], [ %173, %170 ]
  %179 = load i16, i16* %177, align 2
  store i16 %179, i16* %178, align 2
  %180 = getelementptr inbounds i16, i16* %178, i64 1
  %181 = getelementptr inbounds i16, i16* %177, i64 1
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %178, i64 2
  %184 = getelementptr inbounds i16, i16* %177, i64 2
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %178, i64 3
  %187 = getelementptr inbounds i16, i16* %177, i64 3
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %178, i64 4
  %190 = getelementptr inbounds i16, i16* %177, i64 4
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = getelementptr inbounds i16, i16* %178, i64 5
  %193 = getelementptr inbounds i16, i16* %177, i64 5
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2
  %195 = getelementptr inbounds i16, i16* %178, i64 6
  %196 = getelementptr inbounds i16, i16* %177, i64 6
  %197 = load i16, i16* %196, align 2
  store i16 %197, i16* %195, align 2
  %198 = getelementptr inbounds i16, i16* %178, i64 7
  %199 = getelementptr inbounds i16, i16* %177, i64 7
  %200 = load i16, i16* %199, align 2
  store i16 %200, i16* %198, align 2
  %201 = add i64 %176, -8
  %202 = getelementptr inbounds i16, i16* %178, i64 8
  %203 = getelementptr inbounds i16, i16* %177, i64 8
  %204 = icmp eq i64 %201, 0
  br i1 %204, label %205, label %175, !llvm.loop !151

205:                                              ; preds = %170, %175, %150, %55
  %206 = phi i16* [ %59, %55 ], [ %62, %150 ], [ %62, %175 ], [ %62, %170 ]
  %207 = getelementptr inbounds i16, i16* %206, i64 %36
  store i16 0, i16* %207, align 2
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %6) #10, !noalias !137
  %208 = icmp eq %"class.icu_69::DateFormat"* %5, null
  br i1 %208, label %214, label %209

209:                                              ; preds = %205
  %210 = bitcast %"class.icu_69::DateFormat"* %5 to void (%"class.icu_69::DateFormat"*)***
  %211 = load void (%"class.icu_69::DateFormat"*)**, void (%"class.icu_69::DateFormat"*)*** %210, align 8
  %212 = getelementptr inbounds void (%"class.icu_69::DateFormat"*)*, void (%"class.icu_69::DateFormat"*)** %211, i64 1
  %213 = load void (%"class.icu_69::DateFormat"*)*, void (%"class.icu_69::DateFormat"*)** %212, align 8
  call void %213(%"class.icu_69::DateFormat"* nonnull %5) #10
  br label %214

214:                                              ; preds = %205, %209
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base21TimeFormatWithPatternERKNS_4TimeEPKc(%"class.std::__1::basic_string"* noalias sret, %"class.base::Time"* dereferenceable(8), i8*) local_unnamed_addr #0 {
  %4 = alloca %"class.icu_69::UnicodeString", align 8
  %5 = alloca %"class.icu_69::SimpleDateFormat", align 8
  %6 = bitcast %"class.icu_69::SimpleDateFormat"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 864, i8* nonnull %6) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 bitcast ({ { %"class.icu_69::Format.base", [6 x i8], %"class.icu_69::Calendar"*, %"class.icu_69::NumberFormat"*, %"class.icu_69::EnumSet", i32 }, { %"class.icu_69::Replaceable", { { i16, [2 x i8], i32, i32, [4 x i8], i16* }, [32 x i8] } }, { %"class.icu_69::Replaceable", { { i16, [2 x i8], i32, i32, [4 x i8], i16* }, [32 x i8] } }, { %"class.icu_69::Replaceable", { { i16, [2 x i8], i32, i32, [4 x i8], i16* }, [32 x i8] } }, %"class.icu_69::Locale", %"class.icu_69::DateFormatSymbols"*, %"class.icu_69::TimeZoneFormat"*, double, i8, i8, i8, [1 x i8], i32, %"class.icu_69::SharedNumberFormat"**, [5 x %"class.icu_69::number::LocalizedNumberFormatter"*], i8, [7 x i8], %"class.icu_69::BreakIterator"* }* @__const._ZN4base12_GLOBAL__N_125CreateSimpleDateFormatterEPKc.formatter to i8*), i64 864, i1 false)
  call fastcc void @_ZN4base12_GLOBAL__N_125CreateSimpleDateFormatterEPKc(%"class.icu_69::SimpleDateFormat"* nonnull sret %5, i8* %2)
  %7 = getelementptr inbounds %"class.icu_69::SimpleDateFormat", %"class.icu_69::SimpleDateFormat"* %5, i64 0, i32 0
  %8 = bitcast %"class.icu_69::UnicodeString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #10, !noalias !152
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 64, i1 false) #10, !noalias !152
  %9 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8, !noalias !152
  %10 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %4, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %10, align 8, !noalias !152
  %11 = call double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"* %1) #10, !noalias !152
  %12 = fmul double %11, 1.000000e+03
  %13 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6910DateFormat6formatEdRNS_13UnicodeStringE(%"class.icu_69::DateFormat"* nonnull %7, double %12, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %4) #10, !noalias !152
  %14 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %4, i64 0, i32 1
  %15 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %14, i64 0, i32 0, i32 0
  %16 = load i16, i16* %15, align 8, !noalias !155
  %17 = sext i16 %16 to i32
  %18 = and i32 %17, 17
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %29

20:                                               ; preds = %3
  %21 = and i32 %17, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %20
  %24 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %14 to %struct.anon.3*
  %25 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %24, i64 0, i32 1, i64 0
  br label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %4, i64 0, i32 1, i32 0, i32 3
  %28 = load i16*, i16** %27, align 8, !noalias !155
  br label %29

29:                                               ; preds = %26, %23, %3
  %30 = phi i16* [ %25, %23 ], [ %28, %26 ], [ null, %3 ]
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %30) #10, !noalias !155, !srcloc !8
  %31 = load i16, i16* %10, align 8, !noalias !155
  %32 = icmp slt i16 %31, 0
  %33 = lshr i16 %31, 5
  %34 = zext i16 %33 to i32
  %35 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %4, i64 0, i32 1, i32 0, i32 1
  %36 = load i32, i32* %35, align 4, !noalias !155
  %37 = select i1 %32, i32 %36, i32 %34
  %38 = sext i32 %37 to i64
  %39 = icmp slt i32 %37, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %29
  %41 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %41) #11
  unreachable

42:                                               ; preds = %29
  %43 = icmp ult i32 %37, 11
  br i1 %43, label %57, label %44

44:                                               ; preds = %42
  %45 = add nuw nsw i64 %38, 8
  %46 = and i64 %45, -8
  %47 = icmp slt i64 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %44
  call void @abort() #11
  unreachable

49:                                               ; preds = %44
  %50 = shl nsw i64 %46, 1
  %51 = call i8* @_Znwm(i64 %50) #12
  %52 = bitcast i8* %51 to i16*
  %53 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %51, i8** %53, align 8, !alias.scope !155
  %54 = or i64 %46, -9223372036854775808
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %54, i64* %55, align 8, !alias.scope !155
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %38, i64* %56, align 8, !alias.scope !155
  br label %63

57:                                               ; preds = %42
  %58 = trunc i32 %37 to i8
  %59 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %59, i64 0, i32 1, i32 1
  store i8 %58, i8* %60, align 1, !alias.scope !155
  %61 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %62 = icmp eq i32 %37, 0
  br i1 %62, label %207, label %63

63:                                               ; preds = %57, %49
  %64 = phi i16* [ %52, %49 ], [ %61, %57 ]
  %65 = icmp ult i32 %37, 16
  br i1 %65, label %154, label %66

66:                                               ; preds = %63
  %67 = getelementptr i16, i16* %64, i64 %38
  %68 = getelementptr i16, i16* %30, i64 %38
  %69 = icmp ult i16* %64, %68
  %70 = icmp ult i16* %30, %67
  %71 = and i1 %69, %70
  br i1 %71, label %154, label %72

72:                                               ; preds = %66
  %73 = and i64 %38, -16
  %74 = sub nsw i64 %38, %73
  %75 = getelementptr i16, i16* %30, i64 %73
  %76 = getelementptr i16, i16* %64, i64 %73
  %77 = add nsw i64 %73, -16
  %78 = lshr exact i64 %77, 4
  %79 = add nuw nsw i64 %78, 1
  %80 = and i64 %79, 3
  %81 = icmp ult i64 %77, 48
  br i1 %81, label %133, label %82

82:                                               ; preds = %72
  %83 = sub nsw i64 %79, %80
  br label %84

84:                                               ; preds = %84, %82
  %85 = phi i64 [ 0, %82 ], [ %130, %84 ]
  %86 = phi i64 [ %83, %82 ], [ %131, %84 ]
  %87 = getelementptr i16, i16* %30, i64 %85
  %88 = getelementptr i16, i16* %64, i64 %85
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !158
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !158
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !161, !noalias !158
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !161, !noalias !158
  %97 = or i64 %85, 16
  %98 = getelementptr i16, i16* %30, i64 %97
  %99 = getelementptr i16, i16* %64, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !158
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !158
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !161, !noalias !158
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !161, !noalias !158
  %108 = or i64 %85, 32
  %109 = getelementptr i16, i16* %30, i64 %108
  %110 = getelementptr i16, i16* %64, i64 %108
  %111 = bitcast i16* %109 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !158
  %113 = getelementptr i16, i16* %109, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !158
  %116 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %116, align 2, !alias.scope !161, !noalias !158
  %117 = getelementptr i16, i16* %110, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %118, align 2, !alias.scope !161, !noalias !158
  %119 = or i64 %85, 48
  %120 = getelementptr i16, i16* %30, i64 %119
  %121 = getelementptr i16, i16* %64, i64 %119
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !158
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !158
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !161, !noalias !158
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !161, !noalias !158
  %130 = add i64 %85, 64
  %131 = add i64 %86, -4
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %84, !llvm.loop !163

133:                                              ; preds = %84, %72
  %134 = phi i64 [ 0, %72 ], [ %130, %84 ]
  %135 = icmp eq i64 %80, 0
  br i1 %135, label %152, label %136

136:                                              ; preds = %133, %136
  %137 = phi i64 [ %149, %136 ], [ %134, %133 ]
  %138 = phi i64 [ %150, %136 ], [ %80, %133 ]
  %139 = getelementptr i16, i16* %30, i64 %137
  %140 = getelementptr i16, i16* %64, i64 %137
  %141 = bitcast i16* %139 to <8 x i16>*
  %142 = load <8 x i16>, <8 x i16>* %141, align 2, !alias.scope !158
  %143 = getelementptr i16, i16* %139, i64 8
  %144 = bitcast i16* %143 to <8 x i16>*
  %145 = load <8 x i16>, <8 x i16>* %144, align 2, !alias.scope !158
  %146 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %142, <8 x i16>* %146, align 2, !alias.scope !161, !noalias !158
  %147 = getelementptr i16, i16* %140, i64 8
  %148 = bitcast i16* %147 to <8 x i16>*
  store <8 x i16> %145, <8 x i16>* %148, align 2, !alias.scope !161, !noalias !158
  %149 = add i64 %137, 16
  %150 = add i64 %138, -1
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %152, label %136, !llvm.loop !164

152:                                              ; preds = %136, %133
  %153 = icmp eq i64 %73, %38
  br i1 %153, label %207, label %154

154:                                              ; preds = %152, %66, %63
  %155 = phi i64 [ %38, %66 ], [ %38, %63 ], [ %74, %152 ]
  %156 = phi i16* [ %30, %66 ], [ %30, %63 ], [ %75, %152 ]
  %157 = phi i16* [ %64, %66 ], [ %64, %63 ], [ %76, %152 ]
  %158 = add nsw i64 %155, -1
  %159 = and i64 %155, 7
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %172, label %161

161:                                              ; preds = %154, %161
  %162 = phi i64 [ %167, %161 ], [ %155, %154 ]
  %163 = phi i16* [ %169, %161 ], [ %156, %154 ]
  %164 = phi i16* [ %168, %161 ], [ %157, %154 ]
  %165 = phi i64 [ %170, %161 ], [ %159, %154 ]
  %166 = load i16, i16* %163, align 2
  store i16 %166, i16* %164, align 2
  %167 = add i64 %162, -1
  %168 = getelementptr inbounds i16, i16* %164, i64 1
  %169 = getelementptr inbounds i16, i16* %163, i64 1
  %170 = add i64 %165, -1
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %161, !llvm.loop !165

172:                                              ; preds = %161, %154
  %173 = phi i64 [ %155, %154 ], [ %167, %161 ]
  %174 = phi i16* [ %156, %154 ], [ %169, %161 ]
  %175 = phi i16* [ %157, %154 ], [ %168, %161 ]
  %176 = icmp ult i64 %158, 7
  br i1 %176, label %207, label %177

177:                                              ; preds = %172, %177
  %178 = phi i64 [ %203, %177 ], [ %173, %172 ]
  %179 = phi i16* [ %205, %177 ], [ %174, %172 ]
  %180 = phi i16* [ %204, %177 ], [ %175, %172 ]
  %181 = load i16, i16* %179, align 2
  store i16 %181, i16* %180, align 2
  %182 = getelementptr inbounds i16, i16* %180, i64 1
  %183 = getelementptr inbounds i16, i16* %179, i64 1
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %180, i64 2
  %186 = getelementptr inbounds i16, i16* %179, i64 2
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %180, i64 3
  %189 = getelementptr inbounds i16, i16* %179, i64 3
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = getelementptr inbounds i16, i16* %180, i64 4
  %192 = getelementptr inbounds i16, i16* %179, i64 4
  %193 = load i16, i16* %192, align 2
  store i16 %193, i16* %191, align 2
  %194 = getelementptr inbounds i16, i16* %180, i64 5
  %195 = getelementptr inbounds i16, i16* %179, i64 5
  %196 = load i16, i16* %195, align 2
  store i16 %196, i16* %194, align 2
  %197 = getelementptr inbounds i16, i16* %180, i64 6
  %198 = getelementptr inbounds i16, i16* %179, i64 6
  %199 = load i16, i16* %198, align 2
  store i16 %199, i16* %197, align 2
  %200 = getelementptr inbounds i16, i16* %180, i64 7
  %201 = getelementptr inbounds i16, i16* %179, i64 7
  %202 = load i16, i16* %201, align 2
  store i16 %202, i16* %200, align 2
  %203 = add i64 %178, -8
  %204 = getelementptr inbounds i16, i16* %180, i64 8
  %205 = getelementptr inbounds i16, i16* %179, i64 8
  %206 = icmp eq i64 %203, 0
  br i1 %206, label %207, label %177, !llvm.loop !166

207:                                              ; preds = %172, %177, %152, %57
  %208 = phi i16* [ %61, %57 ], [ %64, %152 ], [ %64, %177 ], [ %64, %172 ]
  %209 = getelementptr inbounds i16, i16* %208, i64 %38
  store i16 0, i16* %209, align 2
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #10, !noalias !152
  call void @_ZN6icu_6916SimpleDateFormatD1Ev(%"class.icu_69::SimpleDateFormat"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 864, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base18TimeDurationFormatENS_9TimeDeltaENS_19DurationFormatWidthEPNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEE(i64, i32, %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #0 {
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = alloca i32, align 4
  %6 = alloca [2 x %"class.icu_69::Measure"], align 16
  %7 = alloca %"class.icu_69::Formattable", align 8
  %8 = alloca %"class.icu_69::Formattable", align 8
  %9 = alloca %"class.logging::LogMessage", align 8
  %10 = alloca %"class.icu_69::MeasureFormat", align 8
  %11 = alloca %"class.logging::LogMessage", align 8
  %12 = alloca %"class.icu_69::UnicodeString", align 8
  %13 = alloca %"class.icu_69::FieldPosition", align 8
  %14 = alloca %"class.logging::LogMessage", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %0, i64* %16, align 8
  %17 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #10
  store i32 0, i32* %5, align 4
  %18 = call double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"* nonnull %4, i64 60000000)
  %19 = fcmp oge double %18, 0.000000e+00
  %20 = fadd double %18, 5.000000e-01
  %21 = call double @llvm.floor.f64(double %20) #10
  %22 = fadd double %18, -5.000000e-01
  %23 = call double @llvm.ceil.f64(double %22) #10
  %24 = select i1 %19, double %21, double %23
  %25 = fcmp ult double %24, 0xC1E0000000000000
  %26 = fcmp ugt double %24, 0x41DFFFFFFFC00000
  %27 = fcmp ogt double %24, 0xC1E0000000000000
  %28 = select i1 %27, double %24, double 0xC1E0000000000000
  %29 = fptosi double %28 to i32
  %30 = select i1 %25, i32 0, i32 2147483647
  %31 = select i1 %26, i32 %30, i32 %29
  %32 = sdiv i32 %31, 60
  %33 = srem i32 %31, 60
  %34 = bitcast [2 x %"class.icu_69::Measure"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %34) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 256, i1 false)
  %35 = getelementptr inbounds [2 x %"class.icu_69::Measure"], [2 x %"class.icu_69::Measure"]* %6, i64 0, i64 0
  %36 = bitcast %"class.icu_69::Formattable"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %36) #10
  call void @_ZN6icu_6911FormattableC1Ei(%"class.icu_69::Formattable"* nonnull %7, i32 %32) #10
  %37 = call %"class.icu_69::MeasureUnit"* @_ZN6icu_6911MeasureUnit10createHourER10UErrorCode(i32* nonnull dereferenceable(4) %5) #10
  call void @_ZN6icu_697MeasureC1ERKNS_11FormattableEPNS_11MeasureUnitER10UErrorCode(%"class.icu_69::Measure"* nonnull %35, %"class.icu_69::Formattable"* nonnull dereferenceable(112) %7, %"class.icu_69::MeasureUnit"* %37, i32* nonnull dereferenceable(4) %5) #10
  %38 = getelementptr inbounds [2 x %"class.icu_69::Measure"], [2 x %"class.icu_69::Measure"]* %6, i64 0, i64 1
  %39 = bitcast %"class.icu_69::Formattable"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %39) #10
  call void @_ZN6icu_6911FormattableC1Ei(%"class.icu_69::Formattable"* nonnull %8, i32 %33) #10
  %40 = call %"class.icu_69::MeasureUnit"* @_ZN6icu_6911MeasureUnit12createMinuteER10UErrorCode(i32* nonnull dereferenceable(4) %5) #10
  call void @_ZN6icu_697MeasureC1ERKNS_11FormattableEPNS_11MeasureUnitER10UErrorCode(%"class.icu_69::Measure"* %38, %"class.icu_69::Formattable"* nonnull dereferenceable(112) %8, %"class.icu_69::MeasureUnit"* %40, i32* nonnull dereferenceable(4) %5) #10
  call void @_ZN6icu_6911FormattableD1Ev(%"class.icu_69::Formattable"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %39) #10
  call void @_ZN6icu_6911FormattableD1Ev(%"class.icu_69::Formattable"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %36) #10
  %41 = load i32, i32* %5, align 4
  %42 = icmp slt i32 %41, 1
  br i1 %42, label %58, label %43

43:                                               ; preds = %3
  %44 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %44, label %45, label %317

45:                                               ; preds = %43
  %46 = bitcast %"class.logging::LogMessage"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %46) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %9, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0), i32 207, i32 2) #10
  %47 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %9, i64 0, i32 2
  %48 = bitcast %"class.std::__1::basic_ostringstream"* %47 to %"class.std::__1::basic_ostream"*
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %48, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i64 36) #10
  %50 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %49, i32 %32) #10
  %51 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %50, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i64 1) #10
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %51, i32 %33) #10
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %52, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i64 10) #10
  %54 = load i32, i32* %5, align 4
  %55 = call i8* @u_errorName_69(i32 %54) #10
  %56 = call i64 @strlen(i8* %55) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %53, i8* %55, i64 %56) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %46) #10
  br label %317

58:                                               ; preds = %3
  %59 = icmp ult i32 %1, 4
  %60 = select i1 %59, i32 %1, i32 4
  %61 = bitcast %"class.icu_69::MeasureFormat"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 368, i8* nonnull %61) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 368, i1 false)
  %62 = call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() #10
  call void @_ZN6icu_6913MeasureFormatC1ERKNS_6LocaleE19UMeasureFormatWidthR10UErrorCode(%"class.icu_69::MeasureFormat"* nonnull %10, %"class.icu_69::Locale"* dereferenceable(224) %62, i32 %60, i32* nonnull dereferenceable(4) %5) #10
  %63 = load i32, i32* %5, align 4
  %64 = icmp slt i32 %63, 1
  br i1 %64, label %82, label %65

65:                                               ; preds = %58
  %66 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %66, label %67, label %315

67:                                               ; preds = %65
  %68 = bitcast %"class.logging::LogMessage"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %68) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %11, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0), i32 214, i32 2) #10
  %69 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %11, i64 0, i32 2
  %70 = bitcast %"class.std::__1::basic_ostringstream"* %69 to %"class.std::__1::basic_ostream"*
  %71 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %70, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0), i64 27) #10
  %72 = call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() #10
  %73 = getelementptr inbounds %"class.icu_69::Locale", %"class.icu_69::Locale"* %72, i64 0, i32 7
  %74 = load i8*, i8** %73, align 8
  %75 = call i64 @strlen(i8* %74) #10
  %76 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %71, i8* %74, i64 %75) #10
  %77 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %76, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i64 9) #10
  %78 = load i32, i32* %5, align 4
  %79 = call i8* @u_errorName_69(i32 %78) #10
  %80 = call i64 @strlen(i8* %79) #10
  %81 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %77, i8* %79, i64 %80) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %68) #10
  br label %315

82:                                               ; preds = %58
  %83 = bitcast %"class.icu_69::UnicodeString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %83) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 -86, i64 64, i1 false)
  %84 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %12, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %84, align 8
  %85 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %12, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %85, align 8
  %86 = bitcast %"class.icu_69::FieldPosition"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #10
  %87 = getelementptr inbounds %"class.icu_69::FieldPosition", %"class.icu_69::FieldPosition"* %13, i64 0, i32 0, i32 0
  %88 = getelementptr inbounds %"class.icu_69::FieldPosition", %"class.icu_69::FieldPosition"* %13, i64 0, i32 1
  %89 = getelementptr inbounds %"class.icu_69::FieldPosition", %"class.icu_69::FieldPosition"* %13, i64 0, i32 2
  %90 = getelementptr inbounds %"class.icu_69::FieldPosition", %"class.icu_69::FieldPosition"* %13, i64 0, i32 3
  %91 = bitcast %"class.icu_69::FieldPosition"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 -86, i64 24, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6icu_6913FieldPositionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %87, align 8
  store i32 -1, i32* %88, align 8
  store i32 0, i32* %89, align 4
  store i32 0, i32* %90, align 8
  %92 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6913MeasureFormat14formatMeasuresEPKNS_7MeasureEiRNS_13UnicodeStringERNS_13FieldPositionER10UErrorCode(%"class.icu_69::MeasureFormat"* nonnull %10, %"class.icu_69::Measure"* nonnull %35, i32 2, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %12, %"class.icu_69::FieldPosition"* nonnull dereferenceable(24) %13, i32* nonnull dereferenceable(4) %5) #10
  %93 = load i32, i32* %5, align 4
  %94 = icmp slt i32 %93, 1
  br i1 %94, label %106, label %95

95:                                               ; preds = %82
  %96 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %96, label %97, label %313

97:                                               ; preds = %95
  %98 = bitcast %"class.logging::LogMessage"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %98) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %14, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0), i32 224, i32 2) #10
  %99 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %14, i64 0, i32 2
  %100 = bitcast %"class.std::__1::basic_ostringstream"* %99 to %"class.std::__1::basic_ostream"*
  %101 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %100, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i64 0, i64 0), i64 23) #10
  %102 = load i32, i32* %5, align 4
  %103 = call i8* @u_errorName_69(i32 %102) #10
  %104 = call i64 @strlen(i8* %103) #10
  %105 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %101, i8* %103, i64 %104) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %98) #10
  br label %313

106:                                              ; preds = %82
  %107 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #10
  %108 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %12, i64 0, i32 1
  %109 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %108, i64 0, i32 0, i32 0
  %110 = load i16, i16* %109, align 8, !noalias !167
  %111 = sext i16 %110 to i32
  %112 = and i32 %111, 17
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %123

114:                                              ; preds = %106
  %115 = and i32 %111, 2
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %120, label %117

117:                                              ; preds = %114
  %118 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %108 to %struct.anon.3*
  %119 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %118, i64 0, i32 1, i64 0
  br label %123

120:                                              ; preds = %114
  %121 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %12, i64 0, i32 1, i32 0, i32 3
  %122 = load i16*, i16** %121, align 8, !noalias !167
  br label %123

123:                                              ; preds = %120, %117, %106
  %124 = phi i16* [ %119, %117 ], [ %122, %120 ], [ null, %106 ]
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %124) #10, !noalias !167, !srcloc !8
  %125 = load i16, i16* %85, align 8, !noalias !167
  %126 = icmp slt i16 %125, 0
  %127 = lshr i16 %125, 5
  %128 = zext i16 %127 to i32
  %129 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %12, i64 0, i32 1, i32 0, i32 1
  %130 = load i32, i32* %129, align 4, !noalias !167
  %131 = select i1 %126, i32 %130, i32 %128
  %132 = sext i32 %131 to i64
  %133 = icmp slt i32 %131, 0
  br i1 %133, label %134, label %136

134:                                              ; preds = %123
  %135 = bitcast %"class.std::__1::basic_string"* %15 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %135) #11
  unreachable

136:                                              ; preds = %123
  %137 = icmp ult i32 %131, 11
  br i1 %137, label %151, label %138

138:                                              ; preds = %136
  %139 = add nuw nsw i64 %132, 8
  %140 = and i64 %139, -8
  %141 = icmp slt i64 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %138
  call void @abort() #11
  unreachable

143:                                              ; preds = %138
  %144 = shl nsw i64 %140, 1
  %145 = call i8* @_Znwm(i64 %144) #12
  %146 = bitcast i8* %145 to i16*
  %147 = bitcast %"class.std::__1::basic_string"* %15 to i8**
  store i8* %145, i8** %147, align 8, !alias.scope !167
  %148 = or i64 %140, -9223372036854775808
  %149 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %148, i64* %149, align 8, !alias.scope !167
  %150 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %132, i64* %150, align 8, !alias.scope !167
  br label %157

151:                                              ; preds = %136
  %152 = trunc i32 %131 to i8
  %153 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %154 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %153, i64 0, i32 1, i32 1
  store i8 %152, i8* %154, align 1, !alias.scope !167
  %155 = bitcast %"class.std::__1::basic_string"* %15 to i16*
  %156 = icmp eq i32 %131, 0
  br i1 %156, label %301, label %157

157:                                              ; preds = %151, %143
  %158 = phi i16* [ %146, %143 ], [ %155, %151 ]
  %159 = icmp ult i32 %131, 16
  br i1 %159, label %248, label %160

160:                                              ; preds = %157
  %161 = getelementptr i16, i16* %158, i64 %132
  %162 = getelementptr i16, i16* %124, i64 %132
  %163 = icmp ult i16* %158, %162
  %164 = icmp ult i16* %124, %161
  %165 = and i1 %163, %164
  br i1 %165, label %248, label %166

166:                                              ; preds = %160
  %167 = and i64 %132, -16
  %168 = sub nsw i64 %132, %167
  %169 = getelementptr i16, i16* %124, i64 %167
  %170 = getelementptr i16, i16* %158, i64 %167
  %171 = add nsw i64 %167, -16
  %172 = lshr exact i64 %171, 4
  %173 = add nuw nsw i64 %172, 1
  %174 = and i64 %173, 3
  %175 = icmp ult i64 %171, 48
  br i1 %175, label %227, label %176

176:                                              ; preds = %166
  %177 = sub nsw i64 %173, %174
  br label %178

178:                                              ; preds = %178, %176
  %179 = phi i64 [ 0, %176 ], [ %224, %178 ]
  %180 = phi i64 [ %177, %176 ], [ %225, %178 ]
  %181 = getelementptr i16, i16* %124, i64 %179
  %182 = getelementptr i16, i16* %158, i64 %179
  %183 = bitcast i16* %181 to <8 x i16>*
  %184 = load <8 x i16>, <8 x i16>* %183, align 2, !alias.scope !170
  %185 = getelementptr i16, i16* %181, i64 8
  %186 = bitcast i16* %185 to <8 x i16>*
  %187 = load <8 x i16>, <8 x i16>* %186, align 2, !alias.scope !170
  %188 = bitcast i16* %182 to <8 x i16>*
  store <8 x i16> %184, <8 x i16>* %188, align 2, !alias.scope !173, !noalias !170
  %189 = getelementptr i16, i16* %182, i64 8
  %190 = bitcast i16* %189 to <8 x i16>*
  store <8 x i16> %187, <8 x i16>* %190, align 2, !alias.scope !173, !noalias !170
  %191 = or i64 %179, 16
  %192 = getelementptr i16, i16* %124, i64 %191
  %193 = getelementptr i16, i16* %158, i64 %191
  %194 = bitcast i16* %192 to <8 x i16>*
  %195 = load <8 x i16>, <8 x i16>* %194, align 2, !alias.scope !170
  %196 = getelementptr i16, i16* %192, i64 8
  %197 = bitcast i16* %196 to <8 x i16>*
  %198 = load <8 x i16>, <8 x i16>* %197, align 2, !alias.scope !170
  %199 = bitcast i16* %193 to <8 x i16>*
  store <8 x i16> %195, <8 x i16>* %199, align 2, !alias.scope !173, !noalias !170
  %200 = getelementptr i16, i16* %193, i64 8
  %201 = bitcast i16* %200 to <8 x i16>*
  store <8 x i16> %198, <8 x i16>* %201, align 2, !alias.scope !173, !noalias !170
  %202 = or i64 %179, 32
  %203 = getelementptr i16, i16* %124, i64 %202
  %204 = getelementptr i16, i16* %158, i64 %202
  %205 = bitcast i16* %203 to <8 x i16>*
  %206 = load <8 x i16>, <8 x i16>* %205, align 2, !alias.scope !170
  %207 = getelementptr i16, i16* %203, i64 8
  %208 = bitcast i16* %207 to <8 x i16>*
  %209 = load <8 x i16>, <8 x i16>* %208, align 2, !alias.scope !170
  %210 = bitcast i16* %204 to <8 x i16>*
  store <8 x i16> %206, <8 x i16>* %210, align 2, !alias.scope !173, !noalias !170
  %211 = getelementptr i16, i16* %204, i64 8
  %212 = bitcast i16* %211 to <8 x i16>*
  store <8 x i16> %209, <8 x i16>* %212, align 2, !alias.scope !173, !noalias !170
  %213 = or i64 %179, 48
  %214 = getelementptr i16, i16* %124, i64 %213
  %215 = getelementptr i16, i16* %158, i64 %213
  %216 = bitcast i16* %214 to <8 x i16>*
  %217 = load <8 x i16>, <8 x i16>* %216, align 2, !alias.scope !170
  %218 = getelementptr i16, i16* %214, i64 8
  %219 = bitcast i16* %218 to <8 x i16>*
  %220 = load <8 x i16>, <8 x i16>* %219, align 2, !alias.scope !170
  %221 = bitcast i16* %215 to <8 x i16>*
  store <8 x i16> %217, <8 x i16>* %221, align 2, !alias.scope !173, !noalias !170
  %222 = getelementptr i16, i16* %215, i64 8
  %223 = bitcast i16* %222 to <8 x i16>*
  store <8 x i16> %220, <8 x i16>* %223, align 2, !alias.scope !173, !noalias !170
  %224 = add i64 %179, 64
  %225 = add i64 %180, -4
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %227, label %178, !llvm.loop !175

227:                                              ; preds = %178, %166
  %228 = phi i64 [ 0, %166 ], [ %224, %178 ]
  %229 = icmp eq i64 %174, 0
  br i1 %229, label %246, label %230

230:                                              ; preds = %227, %230
  %231 = phi i64 [ %243, %230 ], [ %228, %227 ]
  %232 = phi i64 [ %244, %230 ], [ %174, %227 ]
  %233 = getelementptr i16, i16* %124, i64 %231
  %234 = getelementptr i16, i16* %158, i64 %231
  %235 = bitcast i16* %233 to <8 x i16>*
  %236 = load <8 x i16>, <8 x i16>* %235, align 2, !alias.scope !170
  %237 = getelementptr i16, i16* %233, i64 8
  %238 = bitcast i16* %237 to <8 x i16>*
  %239 = load <8 x i16>, <8 x i16>* %238, align 2, !alias.scope !170
  %240 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %236, <8 x i16>* %240, align 2, !alias.scope !173, !noalias !170
  %241 = getelementptr i16, i16* %234, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  store <8 x i16> %239, <8 x i16>* %242, align 2, !alias.scope !173, !noalias !170
  %243 = add i64 %231, 16
  %244 = add i64 %232, -1
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %246, label %230, !llvm.loop !176

246:                                              ; preds = %230, %227
  %247 = icmp eq i64 %167, %132
  br i1 %247, label %301, label %248

248:                                              ; preds = %246, %160, %157
  %249 = phi i64 [ %132, %160 ], [ %132, %157 ], [ %168, %246 ]
  %250 = phi i16* [ %124, %160 ], [ %124, %157 ], [ %169, %246 ]
  %251 = phi i16* [ %158, %160 ], [ %158, %157 ], [ %170, %246 ]
  %252 = add nsw i64 %249, -1
  %253 = and i64 %249, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %266, label %255

255:                                              ; preds = %248, %255
  %256 = phi i64 [ %261, %255 ], [ %249, %248 ]
  %257 = phi i16* [ %263, %255 ], [ %250, %248 ]
  %258 = phi i16* [ %262, %255 ], [ %251, %248 ]
  %259 = phi i64 [ %264, %255 ], [ %253, %248 ]
  %260 = load i16, i16* %257, align 2
  store i16 %260, i16* %258, align 2
  %261 = add i64 %256, -1
  %262 = getelementptr inbounds i16, i16* %258, i64 1
  %263 = getelementptr inbounds i16, i16* %257, i64 1
  %264 = add i64 %259, -1
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %266, label %255, !llvm.loop !177

266:                                              ; preds = %255, %248
  %267 = phi i64 [ %249, %248 ], [ %261, %255 ]
  %268 = phi i16* [ %250, %248 ], [ %263, %255 ]
  %269 = phi i16* [ %251, %248 ], [ %262, %255 ]
  %270 = icmp ult i64 %252, 7
  br i1 %270, label %301, label %271

271:                                              ; preds = %266, %271
  %272 = phi i64 [ %297, %271 ], [ %267, %266 ]
  %273 = phi i16* [ %299, %271 ], [ %268, %266 ]
  %274 = phi i16* [ %298, %271 ], [ %269, %266 ]
  %275 = load i16, i16* %273, align 2
  store i16 %275, i16* %274, align 2
  %276 = getelementptr inbounds i16, i16* %274, i64 1
  %277 = getelementptr inbounds i16, i16* %273, i64 1
  %278 = load i16, i16* %277, align 2
  store i16 %278, i16* %276, align 2
  %279 = getelementptr inbounds i16, i16* %274, i64 2
  %280 = getelementptr inbounds i16, i16* %273, i64 2
  %281 = load i16, i16* %280, align 2
  store i16 %281, i16* %279, align 2
  %282 = getelementptr inbounds i16, i16* %274, i64 3
  %283 = getelementptr inbounds i16, i16* %273, i64 3
  %284 = load i16, i16* %283, align 2
  store i16 %284, i16* %282, align 2
  %285 = getelementptr inbounds i16, i16* %274, i64 4
  %286 = getelementptr inbounds i16, i16* %273, i64 4
  %287 = load i16, i16* %286, align 2
  store i16 %287, i16* %285, align 2
  %288 = getelementptr inbounds i16, i16* %274, i64 5
  %289 = getelementptr inbounds i16, i16* %273, i64 5
  %290 = load i16, i16* %289, align 2
  store i16 %290, i16* %288, align 2
  %291 = getelementptr inbounds i16, i16* %274, i64 6
  %292 = getelementptr inbounds i16, i16* %273, i64 6
  %293 = load i16, i16* %292, align 2
  store i16 %293, i16* %291, align 2
  %294 = getelementptr inbounds i16, i16* %274, i64 7
  %295 = getelementptr inbounds i16, i16* %273, i64 7
  %296 = load i16, i16* %295, align 2
  store i16 %296, i16* %294, align 2
  %297 = add i64 %272, -8
  %298 = getelementptr inbounds i16, i16* %274, i64 8
  %299 = getelementptr inbounds i16, i16* %273, i64 8
  %300 = icmp eq i64 %297, 0
  br i1 %300, label %301, label %271, !llvm.loop !178

301:                                              ; preds = %266, %271, %246, %151
  %302 = phi i16* [ %155, %151 ], [ %158, %246 ], [ %158, %271 ], [ %158, %266 ]
  %303 = getelementptr inbounds i16, i16* %302, i64 %132
  store i16 0, i16* %303, align 2
  %304 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %305 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %304, i64 0, i32 1, i32 1
  %306 = load i8, i8* %305, align 1
  %307 = icmp slt i8 %306, 0
  br i1 %307, label %308, label %311

308:                                              ; preds = %301
  %309 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %310 = load i8*, i8** %309, align 8
  call void @_ZdlPv(i8* %310) #12
  br label %311

311:                                              ; preds = %308, %301
  %312 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %312, i8* nonnull align 8 %107, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #10
  br label %313

313:                                              ; preds = %97, %95, %311
  %314 = phi i1 [ true, %311 ], [ false, %95 ], [ false, %97 ]
  call void @_ZN6icu_6913FieldPositionD1Ev(%"class.icu_69::FieldPosition"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #10
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %83) #10
  br label %315

315:                                              ; preds = %67, %65, %313
  %316 = phi i1 [ %314, %313 ], [ false, %65 ], [ false, %67 ]
  call void @_ZN6icu_6913MeasureFormatD1Ev(%"class.icu_69::MeasureFormat"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 368, i8* nonnull %61) #10
  br label %317

317:                                              ; preds = %45, %43, %315
  %318 = phi i1 [ %316, %315 ], [ false, %43 ], [ false, %45 ]
  %319 = getelementptr inbounds [2 x %"class.icu_69::Measure"], [2 x %"class.icu_69::Measure"]* %6, i64 0, i64 1
  call void @_ZN6icu_697MeasureD1Ev(%"class.icu_69::Measure"* %319) #10
  %320 = getelementptr inbounds [2 x %"class.icu_69::Measure"], [2 x %"class.icu_69::Measure"]* %6, i64 0, i64 0
  call void @_ZN6icu_697MeasureD1Ev(%"class.icu_69::Measure"* nonnull %320) #10
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %34) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #10
  ret i1 %318
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = or i64 %6, %1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i32 302, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0)) #10
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  %12 = load i64, i64* %5, align 8
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i64 [ %6, %2 ], [ %12, %9 ]
  %15 = add i64 %14, -9223372036854775807
  %16 = add i64 %1, -9223372036854775807
  %17 = or i64 %15, %16
  %18 = icmp ult i64 %17, 2
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i32 303, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.15, i64 0, i64 0)) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  %22 = load i64, i64* %5, align 8
  %23 = add i64 %22, -9223372036854775807
  br label %24

24:                                               ; preds = %13, %19
  %25 = phi i64 [ %15, %13 ], [ %23, %19 ]
  %26 = phi i64 [ %14, %13 ], [ %22, %19 ]
  %27 = icmp ult i64 %25, 2
  %28 = icmp slt i64 %26, 0
  %29 = select i1 %28, double 0xFFF0000000000000, double 0x7FF0000000000000
  %30 = sitofp i64 %26 to double
  %31 = select i1 %27, double %29, double %30
  %32 = icmp ult i64 %16, 2
  %33 = icmp slt i64 %1, 0
  %34 = select i1 %33, double 0xFFF0000000000000, double 0x7FF0000000000000
  %35 = sitofp i64 %1 to double
  %36 = select i1 %32, double %34, double %35
  %37 = fdiv double %31, %36
  ret double %37
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN6icu_6911FormattableC1Ei(%"class.icu_69::Formattable"*, i32) unnamed_addr #2

declare %"class.icu_69::MeasureUnit"* @_ZN6icu_6911MeasureUnit10createHourER10UErrorCode(i32* dereferenceable(4)) local_unnamed_addr #2

declare void @_ZN6icu_697MeasureC1ERKNS_11FormattableEPNS_11MeasureUnitER10UErrorCode(%"class.icu_69::Measure"*, %"class.icu_69::Formattable"* dereferenceable(112), %"class.icu_69::MeasureUnit"*, i32* dereferenceable(4)) unnamed_addr #2

declare %"class.icu_69::MeasureUnit"* @_ZN6icu_6911MeasureUnit12createMinuteER10UErrorCode(i32* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6icu_6911FormattableD1Ev(%"class.icu_69::Formattable"*) unnamed_addr #3

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #2

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

declare i8* @u_errorName_69(i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

declare void @_ZN6icu_6913MeasureFormatC1ERKNS_6LocaleE19UMeasureFormatWidthR10UErrorCode(%"class.icu_69::MeasureFormat"*, %"class.icu_69::Locale"* dereferenceable(224), i32, i32* dereferenceable(4)) unnamed_addr #2

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6913MeasureFormat14formatMeasuresEPKNS_7MeasureEiRNS_13UnicodeStringERNS_13FieldPositionER10UErrorCode(%"class.icu_69::MeasureFormat"*, %"class.icu_69::Measure"*, i32, %"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::FieldPosition"* dereferenceable(24), i32* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6icu_6913FieldPositionD1Ev(%"class.icu_69::FieldPosition"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6icu_6913MeasureFormatD1Ev(%"class.icu_69::MeasureFormat"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6icu_697MeasureD1Ev(%"class.icu_69::Measure"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base29TimeDurationFormatWithSecondsENS_9TimeDeltaENS_19DurationFormatWidthEPNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEE(i64, i32, %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca [3 x %"class.icu_69::Measure"], align 16
  %6 = alloca %"class.icu_69::Formattable", align 8
  %7 = alloca %"class.icu_69::Formattable", align 8
  %8 = alloca %"class.icu_69::Formattable", align 8
  %9 = alloca %"class.icu_69::MeasureFormat", align 8
  %10 = alloca %"class.icu_69::UnicodeString", align 8
  %11 = alloca %"class.icu_69::FieldPosition", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #10
  store i32 0, i32* %4, align 4
  %14 = add i64 %0, -9223372036854775807
  %15 = icmp ult i64 %14, 2
  br i1 %15, label %19, label %16

16:                                               ; preds = %3
  %17 = sitofp i64 %0 to double
  %18 = fdiv double %17, 1.000000e+06
  br label %22

19:                                               ; preds = %3
  %20 = icmp slt i64 %0, 0
  %21 = select i1 %20, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %22

22:                                               ; preds = %16, %19
  %23 = phi double [ %21, %19 ], [ %18, %16 ]
  %24 = fcmp oge double %23, 0.000000e+00
  %25 = fadd double %23, 5.000000e-01
  %26 = tail call double @llvm.floor.f64(double %25) #10
  %27 = fadd double %23, -5.000000e-01
  %28 = tail call double @llvm.ceil.f64(double %27) #10
  %29 = select i1 %24, double %26, double %28
  %30 = fcmp ult double %29, 0xC3E0000000000000
  %31 = fcmp ugt double %29, 0x43DFFFFFFFFFFFFF
  %32 = fcmp ogt double %29, 0xC3E0000000000000
  %33 = select i1 %32, double %29, double 0xC3E0000000000000
  %34 = fptosi double %33 to i64
  %35 = select i1 %30, i64 0, i64 9223372036854775807
  %36 = select i1 %31, i64 %35, i64 %34
  %37 = sdiv i64 %36, 3600
  %38 = mul i64 %37, -3600
  %39 = add i64 %38, %36
  %40 = sdiv i64 %39, 60
  %41 = srem i64 %36, 60
  %42 = icmp ult i32 %1, 4
  %43 = select i1 %42, i32 %1, i32 4
  %44 = bitcast [3 x %"class.icu_69::Measure"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 384, i8* nonnull %44) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %44, i8 -86, i64 384, i1 false)
  %45 = getelementptr inbounds [3 x %"class.icu_69::Measure"], [3 x %"class.icu_69::Measure"]* %5, i64 0, i64 0
  %46 = bitcast %"class.icu_69::Formattable"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %46) #10
  call void @_ZN6icu_6911FormattableC1El(%"class.icu_69::Formattable"* nonnull %6, i64 %37) #10
  %47 = call %"class.icu_69::MeasureUnit"* @_ZN6icu_6911MeasureUnit10createHourER10UErrorCode(i32* nonnull dereferenceable(4) %4) #10
  call void @_ZN6icu_697MeasureC1ERKNS_11FormattableEPNS_11MeasureUnitER10UErrorCode(%"class.icu_69::Measure"* nonnull %45, %"class.icu_69::Formattable"* nonnull dereferenceable(112) %6, %"class.icu_69::MeasureUnit"* %47, i32* nonnull dereferenceable(4) %4) #10
  %48 = getelementptr inbounds [3 x %"class.icu_69::Measure"], [3 x %"class.icu_69::Measure"]* %5, i64 0, i64 1
  %49 = bitcast %"class.icu_69::Formattable"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %49) #10
  call void @_ZN6icu_6911FormattableC1El(%"class.icu_69::Formattable"* nonnull %7, i64 %40) #10
  %50 = call %"class.icu_69::MeasureUnit"* @_ZN6icu_6911MeasureUnit12createMinuteER10UErrorCode(i32* nonnull dereferenceable(4) %4) #10
  call void @_ZN6icu_697MeasureC1ERKNS_11FormattableEPNS_11MeasureUnitER10UErrorCode(%"class.icu_69::Measure"* %48, %"class.icu_69::Formattable"* nonnull dereferenceable(112) %7, %"class.icu_69::MeasureUnit"* %50, i32* nonnull dereferenceable(4) %4) #10
  %51 = getelementptr inbounds [3 x %"class.icu_69::Measure"], [3 x %"class.icu_69::Measure"]* %5, i64 0, i64 2
  %52 = bitcast %"class.icu_69::Formattable"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %52) #10
  call void @_ZN6icu_6911FormattableC1El(%"class.icu_69::Formattable"* nonnull %8, i64 %41) #10
  %53 = call %"class.icu_69::MeasureUnit"* @_ZN6icu_6911MeasureUnit12createSecondER10UErrorCode(i32* nonnull dereferenceable(4) %4) #10
  call void @_ZN6icu_697MeasureC1ERKNS_11FormattableEPNS_11MeasureUnitER10UErrorCode(%"class.icu_69::Measure"* %51, %"class.icu_69::Formattable"* nonnull dereferenceable(112) %8, %"class.icu_69::MeasureUnit"* %53, i32* nonnull dereferenceable(4) %4) #10
  call void @_ZN6icu_6911FormattableD1Ev(%"class.icu_69::Formattable"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %52) #10
  call void @_ZN6icu_6911FormattableD1Ev(%"class.icu_69::Formattable"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %49) #10
  call void @_ZN6icu_6911FormattableD1Ev(%"class.icu_69::Formattable"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %46) #10
  %54 = bitcast %"class.icu_69::MeasureFormat"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 368, i8* nonnull %54) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 368, i1 false)
  %55 = call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() #10
  call void @_ZN6icu_6913MeasureFormatC1ERKNS_6LocaleE19UMeasureFormatWidthR10UErrorCode(%"class.icu_69::MeasureFormat"* nonnull %9, %"class.icu_69::Locale"* dereferenceable(224) %55, i32 %43, i32* nonnull dereferenceable(4) %4) #10
  %56 = bitcast %"class.icu_69::UnicodeString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %56) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 64, i1 false)
  %57 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %10, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %58 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %10, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %58, align 8
  %59 = bitcast %"class.icu_69::FieldPosition"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #10
  %60 = getelementptr inbounds %"class.icu_69::FieldPosition", %"class.icu_69::FieldPosition"* %11, i64 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.icu_69::FieldPosition", %"class.icu_69::FieldPosition"* %11, i64 0, i32 1
  %62 = getelementptr inbounds %"class.icu_69::FieldPosition", %"class.icu_69::FieldPosition"* %11, i64 0, i32 2
  %63 = getelementptr inbounds %"class.icu_69::FieldPosition", %"class.icu_69::FieldPosition"* %11, i64 0, i32 3
  %64 = bitcast %"class.icu_69::FieldPosition"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 24, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6icu_6913FieldPositionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  store i32 -1, i32* %61, align 8
  store i32 0, i32* %62, align 4
  store i32 0, i32* %63, align 8
  %65 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6913MeasureFormat14formatMeasuresEPKNS_7MeasureEiRNS_13UnicodeStringERNS_13FieldPositionER10UErrorCode(%"class.icu_69::MeasureFormat"* nonnull %9, %"class.icu_69::Measure"* nonnull %45, i32 3, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %10, %"class.icu_69::FieldPosition"* nonnull dereferenceable(24) %11, i32* nonnull dereferenceable(4) %4) #10
  %66 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #10
  %67 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %10, i64 0, i32 1
  %68 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %67, i64 0, i32 0, i32 0
  %69 = load i16, i16* %68, align 8, !noalias !179
  %70 = sext i16 %69 to i32
  %71 = and i32 %70, 17
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %82

73:                                               ; preds = %22
  %74 = and i32 %70, 2
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %73
  %77 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %67 to %struct.anon.3*
  %78 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %77, i64 0, i32 1, i64 0
  br label %82

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %10, i64 0, i32 1, i32 0, i32 3
  %81 = load i16*, i16** %80, align 8, !noalias !179
  br label %82

82:                                               ; preds = %79, %76, %22
  %83 = phi i16* [ %78, %76 ], [ %81, %79 ], [ null, %22 ]
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %83) #10, !noalias !179, !srcloc !8
  %84 = load i16, i16* %58, align 8, !noalias !179
  %85 = icmp slt i16 %84, 0
  %86 = lshr i16 %84, 5
  %87 = zext i16 %86 to i32
  %88 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %10, i64 0, i32 1, i32 0, i32 1
  %89 = load i32, i32* %88, align 4, !noalias !179
  %90 = select i1 %85, i32 %89, i32 %87
  %91 = sext i32 %90 to i64
  %92 = icmp slt i32 %90, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %82
  %94 = bitcast %"class.std::__1::basic_string"* %12 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %94) #11
  unreachable

95:                                               ; preds = %82
  %96 = icmp ult i32 %90, 11
  br i1 %96, label %110, label %97

97:                                               ; preds = %95
  %98 = add nuw nsw i64 %91, 8
  %99 = and i64 %98, -8
  %100 = icmp slt i64 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %97
  call void @abort() #11
  unreachable

102:                                              ; preds = %97
  %103 = shl nsw i64 %99, 1
  %104 = call i8* @_Znwm(i64 %103) #12
  %105 = bitcast i8* %104 to i16*
  %106 = bitcast %"class.std::__1::basic_string"* %12 to i8**
  store i8* %104, i8** %106, align 8, !alias.scope !179
  %107 = or i64 %99, -9223372036854775808
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %107, i64* %108, align 8, !alias.scope !179
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %91, i64* %109, align 8, !alias.scope !179
  br label %116

110:                                              ; preds = %95
  %111 = trunc i32 %90 to i8
  %112 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %112, i64 0, i32 1, i32 1
  store i8 %111, i8* %113, align 1, !alias.scope !179
  %114 = bitcast %"class.std::__1::basic_string"* %12 to i16*
  %115 = icmp eq i32 %90, 0
  br i1 %115, label %260, label %116

116:                                              ; preds = %110, %102
  %117 = phi i16* [ %105, %102 ], [ %114, %110 ]
  %118 = icmp ult i32 %90, 16
  br i1 %118, label %207, label %119

119:                                              ; preds = %116
  %120 = getelementptr i16, i16* %117, i64 %91
  %121 = getelementptr i16, i16* %83, i64 %91
  %122 = icmp ult i16* %117, %121
  %123 = icmp ult i16* %83, %120
  %124 = and i1 %122, %123
  br i1 %124, label %207, label %125

125:                                              ; preds = %119
  %126 = and i64 %91, -16
  %127 = sub nsw i64 %91, %126
  %128 = getelementptr i16, i16* %83, i64 %126
  %129 = getelementptr i16, i16* %117, i64 %126
  %130 = add nsw i64 %126, -16
  %131 = lshr exact i64 %130, 4
  %132 = add nuw nsw i64 %131, 1
  %133 = and i64 %132, 3
  %134 = icmp ult i64 %130, 48
  br i1 %134, label %186, label %135

135:                                              ; preds = %125
  %136 = sub nsw i64 %132, %133
  br label %137

137:                                              ; preds = %137, %135
  %138 = phi i64 [ 0, %135 ], [ %183, %137 ]
  %139 = phi i64 [ %136, %135 ], [ %184, %137 ]
  %140 = getelementptr i16, i16* %83, i64 %138
  %141 = getelementptr i16, i16* %117, i64 %138
  %142 = bitcast i16* %140 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !182
  %144 = getelementptr i16, i16* %140, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2, !alias.scope !182
  %147 = bitcast i16* %141 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %147, align 2, !alias.scope !185, !noalias !182
  %148 = getelementptr i16, i16* %141, i64 8
  %149 = bitcast i16* %148 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %149, align 2, !alias.scope !185, !noalias !182
  %150 = or i64 %138, 16
  %151 = getelementptr i16, i16* %83, i64 %150
  %152 = getelementptr i16, i16* %117, i64 %150
  %153 = bitcast i16* %151 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !182
  %155 = getelementptr i16, i16* %151, i64 8
  %156 = bitcast i16* %155 to <8 x i16>*
  %157 = load <8 x i16>, <8 x i16>* %156, align 2, !alias.scope !182
  %158 = bitcast i16* %152 to <8 x i16>*
  store <8 x i16> %154, <8 x i16>* %158, align 2, !alias.scope !185, !noalias !182
  %159 = getelementptr i16, i16* %152, i64 8
  %160 = bitcast i16* %159 to <8 x i16>*
  store <8 x i16> %157, <8 x i16>* %160, align 2, !alias.scope !185, !noalias !182
  %161 = or i64 %138, 32
  %162 = getelementptr i16, i16* %83, i64 %161
  %163 = getelementptr i16, i16* %117, i64 %161
  %164 = bitcast i16* %162 to <8 x i16>*
  %165 = load <8 x i16>, <8 x i16>* %164, align 2, !alias.scope !182
  %166 = getelementptr i16, i16* %162, i64 8
  %167 = bitcast i16* %166 to <8 x i16>*
  %168 = load <8 x i16>, <8 x i16>* %167, align 2, !alias.scope !182
  %169 = bitcast i16* %163 to <8 x i16>*
  store <8 x i16> %165, <8 x i16>* %169, align 2, !alias.scope !185, !noalias !182
  %170 = getelementptr i16, i16* %163, i64 8
  %171 = bitcast i16* %170 to <8 x i16>*
  store <8 x i16> %168, <8 x i16>* %171, align 2, !alias.scope !185, !noalias !182
  %172 = or i64 %138, 48
  %173 = getelementptr i16, i16* %83, i64 %172
  %174 = getelementptr i16, i16* %117, i64 %172
  %175 = bitcast i16* %173 to <8 x i16>*
  %176 = load <8 x i16>, <8 x i16>* %175, align 2, !alias.scope !182
  %177 = getelementptr i16, i16* %173, i64 8
  %178 = bitcast i16* %177 to <8 x i16>*
  %179 = load <8 x i16>, <8 x i16>* %178, align 2, !alias.scope !182
  %180 = bitcast i16* %174 to <8 x i16>*
  store <8 x i16> %176, <8 x i16>* %180, align 2, !alias.scope !185, !noalias !182
  %181 = getelementptr i16, i16* %174, i64 8
  %182 = bitcast i16* %181 to <8 x i16>*
  store <8 x i16> %179, <8 x i16>* %182, align 2, !alias.scope !185, !noalias !182
  %183 = add i64 %138, 64
  %184 = add i64 %139, -4
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %137, !llvm.loop !187

186:                                              ; preds = %137, %125
  %187 = phi i64 [ 0, %125 ], [ %183, %137 ]
  %188 = icmp eq i64 %133, 0
  br i1 %188, label %205, label %189

189:                                              ; preds = %186, %189
  %190 = phi i64 [ %202, %189 ], [ %187, %186 ]
  %191 = phi i64 [ %203, %189 ], [ %133, %186 ]
  %192 = getelementptr i16, i16* %83, i64 %190
  %193 = getelementptr i16, i16* %117, i64 %190
  %194 = bitcast i16* %192 to <8 x i16>*
  %195 = load <8 x i16>, <8 x i16>* %194, align 2, !alias.scope !182
  %196 = getelementptr i16, i16* %192, i64 8
  %197 = bitcast i16* %196 to <8 x i16>*
  %198 = load <8 x i16>, <8 x i16>* %197, align 2, !alias.scope !182
  %199 = bitcast i16* %193 to <8 x i16>*
  store <8 x i16> %195, <8 x i16>* %199, align 2, !alias.scope !185, !noalias !182
  %200 = getelementptr i16, i16* %193, i64 8
  %201 = bitcast i16* %200 to <8 x i16>*
  store <8 x i16> %198, <8 x i16>* %201, align 2, !alias.scope !185, !noalias !182
  %202 = add i64 %190, 16
  %203 = add i64 %191, -1
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %205, label %189, !llvm.loop !188

205:                                              ; preds = %189, %186
  %206 = icmp eq i64 %126, %91
  br i1 %206, label %260, label %207

207:                                              ; preds = %205, %119, %116
  %208 = phi i64 [ %91, %119 ], [ %91, %116 ], [ %127, %205 ]
  %209 = phi i16* [ %83, %119 ], [ %83, %116 ], [ %128, %205 ]
  %210 = phi i16* [ %117, %119 ], [ %117, %116 ], [ %129, %205 ]
  %211 = add nsw i64 %208, -1
  %212 = and i64 %208, 7
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %225, label %214

214:                                              ; preds = %207, %214
  %215 = phi i64 [ %220, %214 ], [ %208, %207 ]
  %216 = phi i16* [ %222, %214 ], [ %209, %207 ]
  %217 = phi i16* [ %221, %214 ], [ %210, %207 ]
  %218 = phi i64 [ %223, %214 ], [ %212, %207 ]
  %219 = load i16, i16* %216, align 2
  store i16 %219, i16* %217, align 2
  %220 = add i64 %215, -1
  %221 = getelementptr inbounds i16, i16* %217, i64 1
  %222 = getelementptr inbounds i16, i16* %216, i64 1
  %223 = add i64 %218, -1
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %225, label %214, !llvm.loop !189

225:                                              ; preds = %214, %207
  %226 = phi i64 [ %208, %207 ], [ %220, %214 ]
  %227 = phi i16* [ %209, %207 ], [ %222, %214 ]
  %228 = phi i16* [ %210, %207 ], [ %221, %214 ]
  %229 = icmp ult i64 %211, 7
  br i1 %229, label %260, label %230

230:                                              ; preds = %225, %230
  %231 = phi i64 [ %256, %230 ], [ %226, %225 ]
  %232 = phi i16* [ %258, %230 ], [ %227, %225 ]
  %233 = phi i16* [ %257, %230 ], [ %228, %225 ]
  %234 = load i16, i16* %232, align 2
  store i16 %234, i16* %233, align 2
  %235 = getelementptr inbounds i16, i16* %233, i64 1
  %236 = getelementptr inbounds i16, i16* %232, i64 1
  %237 = load i16, i16* %236, align 2
  store i16 %237, i16* %235, align 2
  %238 = getelementptr inbounds i16, i16* %233, i64 2
  %239 = getelementptr inbounds i16, i16* %232, i64 2
  %240 = load i16, i16* %239, align 2
  store i16 %240, i16* %238, align 2
  %241 = getelementptr inbounds i16, i16* %233, i64 3
  %242 = getelementptr inbounds i16, i16* %232, i64 3
  %243 = load i16, i16* %242, align 2
  store i16 %243, i16* %241, align 2
  %244 = getelementptr inbounds i16, i16* %233, i64 4
  %245 = getelementptr inbounds i16, i16* %232, i64 4
  %246 = load i16, i16* %245, align 2
  store i16 %246, i16* %244, align 2
  %247 = getelementptr inbounds i16, i16* %233, i64 5
  %248 = getelementptr inbounds i16, i16* %232, i64 5
  %249 = load i16, i16* %248, align 2
  store i16 %249, i16* %247, align 2
  %250 = getelementptr inbounds i16, i16* %233, i64 6
  %251 = getelementptr inbounds i16, i16* %232, i64 6
  %252 = load i16, i16* %251, align 2
  store i16 %252, i16* %250, align 2
  %253 = getelementptr inbounds i16, i16* %233, i64 7
  %254 = getelementptr inbounds i16, i16* %232, i64 7
  %255 = load i16, i16* %254, align 2
  store i16 %255, i16* %253, align 2
  %256 = add i64 %231, -8
  %257 = getelementptr inbounds i16, i16* %233, i64 8
  %258 = getelementptr inbounds i16, i16* %232, i64 8
  %259 = icmp eq i64 %256, 0
  br i1 %259, label %260, label %230, !llvm.loop !190

260:                                              ; preds = %225, %230, %205, %110
  %261 = phi i16* [ %114, %110 ], [ %117, %205 ], [ %117, %230 ], [ %117, %225 ]
  %262 = getelementptr inbounds i16, i16* %261, i64 %91
  store i16 0, i16* %262, align 2
  %263 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %264 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %263, i64 0, i32 1, i32 1
  %265 = load i8, i8* %264, align 1
  %266 = icmp slt i8 %265, 0
  br i1 %266, label %267, label %270

267:                                              ; preds = %260
  %268 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %269 = load i8*, i8** %268, align 8
  call void @_ZdlPv(i8* %269) #12
  br label %270

270:                                              ; preds = %267, %260
  %271 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %271, i8* nonnull align 8 %66, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #10
  %272 = load i32, i32* %4, align 4
  call void @_ZN6icu_6913FieldPositionD1Ev(%"class.icu_69::FieldPosition"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #10
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %56) #10
  call void @_ZN6icu_6913MeasureFormatD1Ev(%"class.icu_69::MeasureFormat"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 368, i8* nonnull %54) #10
  %273 = getelementptr inbounds [3 x %"class.icu_69::Measure"], [3 x %"class.icu_69::Measure"]* %5, i64 0, i64 2
  call void @_ZN6icu_697MeasureD1Ev(%"class.icu_69::Measure"* %273) #10
  %274 = getelementptr inbounds [3 x %"class.icu_69::Measure"], [3 x %"class.icu_69::Measure"]* %5, i64 0, i64 1
  call void @_ZN6icu_697MeasureD1Ev(%"class.icu_69::Measure"* %274) #10
  %275 = getelementptr inbounds [3 x %"class.icu_69::Measure"], [3 x %"class.icu_69::Measure"]* %5, i64 0, i64 0
  call void @_ZN6icu_697MeasureD1Ev(%"class.icu_69::Measure"* nonnull %275) #10
  %276 = icmp slt i32 %272, 1
  call void @llvm.lifetime.end.p0i8(i64 384, i8* nonnull %44) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #10
  ret i1 %276
}

declare void @_ZN6icu_6911FormattableC1El(%"class.icu_69::Formattable"*, i64) unnamed_addr #2

declare %"class.icu_69::MeasureUnit"* @_ZN6icu_6911MeasureUnit12createSecondER10UErrorCode(i32* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base18DateIntervalFormatERKNS_4TimeES2_NS_10DateFormatE(%"class.std::__1::basic_string"* noalias sret, %"class.base::Time"* dereferenceable(8), %"class.base::Time"* dereferenceable(8), i32) local_unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca %"class.icu_69::UnicodeString", align 8
  %7 = alloca %"class.icu_69::FieldPosition", align 8
  %8 = alloca %"class.icu_69::DateInterval", align 8
  %9 = alloca %"class.icu_69::UnicodeString", align 8
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #10
  store i32 0, i32* %5, align 4
  %11 = bitcast %"class.icu_69::UnicodeString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %11) #10
  %12 = icmp eq i32 %3, 1
  %13 = select i1 %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0)
  %14 = icmp eq i32 %3, 0
  %15 = select i1 %14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), i8* %13
  call void @_ZN6icu_6913UnicodeStringC1EPKc(%"class.icu_69::UnicodeString"* nonnull %6, i8* %15) #10
  %16 = call %"class.icu_69::DateIntervalFormat"* @_ZN6icu_6918DateIntervalFormat14createInstanceERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %6, i32* nonnull dereferenceable(4) %5) #10
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %11) #10
  %17 = bitcast %"class.icu_69::FieldPosition"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.icu_69::FieldPosition", %"class.icu_69::FieldPosition"* %7, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.icu_69::FieldPosition", %"class.icu_69::FieldPosition"* %7, i64 0, i32 1
  %20 = getelementptr inbounds %"class.icu_69::FieldPosition", %"class.icu_69::FieldPosition"* %7, i64 0, i32 2
  %21 = getelementptr inbounds %"class.icu_69::FieldPosition", %"class.icu_69::FieldPosition"* %7, i64 0, i32 3
  %22 = bitcast %"class.icu_69::FieldPosition"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6icu_6913FieldPositionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  store i32 0, i32* %19, align 8
  store i32 0, i32* %20, align 4
  store i32 0, i32* %21, align 8
  %23 = call double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"* %1) #10
  %24 = fmul double %23, 1.000000e+03
  %25 = call double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"* %2) #10
  %26 = fmul double %25, 1.000000e+03
  %27 = bitcast %"class.icu_69::DateInterval"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #10
  %28 = getelementptr inbounds %"class.icu_69::DateInterval", %"class.icu_69::DateInterval"* %8, i64 0, i32 0, i32 0
  store i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i32 (...)*** %28, align 8
  %29 = getelementptr inbounds %"class.icu_69::DateInterval", %"class.icu_69::DateInterval"* %8, i64 0, i32 1
  %30 = bitcast double* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 -1, i64 16, i1 false)
  call void @_ZN6icu_6912DateIntervalC1Edd(%"class.icu_69::DateInterval"* nonnull %8, double %24, double %26) #10
  %31 = bitcast %"class.icu_69::UnicodeString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %31) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 64, i1 false)
  %32 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %9, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %9, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %33, align 8
  %34 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6918DateIntervalFormat6formatEPKNS_12DateIntervalERNS_13UnicodeStringERNS_13FieldPositionER10UErrorCode(%"class.icu_69::DateIntervalFormat"* %16, %"class.icu_69::DateInterval"* nonnull %8, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %9, %"class.icu_69::FieldPosition"* nonnull dereferenceable(24) %7, i32* nonnull dereferenceable(4) %5) #10
  %35 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %9, i64 0, i32 1
  %36 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %35, i64 0, i32 0, i32 0
  %37 = load i16, i16* %36, align 8, !noalias !191
  %38 = sext i16 %37 to i32
  %39 = and i32 %38, 17
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %50

41:                                               ; preds = %4
  %42 = and i32 %38, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %41
  %45 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %35 to %struct.anon.3*
  %46 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %45, i64 0, i32 1, i64 0
  br label %50

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %9, i64 0, i32 1, i32 0, i32 3
  %49 = load i16*, i16** %48, align 8, !noalias !191
  br label %50

50:                                               ; preds = %47, %44, %4
  %51 = phi i16* [ %46, %44 ], [ %49, %47 ], [ null, %4 ]
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %51) #10, !noalias !191, !srcloc !8
  %52 = load i16, i16* %33, align 8, !noalias !191
  %53 = icmp slt i16 %52, 0
  %54 = lshr i16 %52, 5
  %55 = zext i16 %54 to i32
  %56 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %9, i64 0, i32 1, i32 0, i32 1
  %57 = load i32, i32* %56, align 4, !noalias !191
  %58 = select i1 %53, i32 %57, i32 %55
  %59 = sext i32 %58 to i64
  %60 = icmp slt i32 %58, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %50
  %62 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %62) #11
  unreachable

63:                                               ; preds = %50
  %64 = icmp ult i32 %58, 11
  br i1 %64, label %78, label %65

65:                                               ; preds = %63
  %66 = add nuw nsw i64 %59, 8
  %67 = and i64 %66, -8
  %68 = icmp slt i64 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %65
  call void @abort() #11
  unreachable

70:                                               ; preds = %65
  %71 = shl nsw i64 %67, 1
  %72 = call i8* @_Znwm(i64 %71) #12
  %73 = bitcast i8* %72 to i16*
  %74 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %72, i8** %74, align 8, !alias.scope !191
  %75 = or i64 %67, -9223372036854775808
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %75, i64* %76, align 8, !alias.scope !191
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %59, i64* %77, align 8, !alias.scope !191
  br label %84

78:                                               ; preds = %63
  %79 = trunc i32 %58 to i8
  %80 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %80, i64 0, i32 1, i32 1
  store i8 %79, i8* %81, align 1, !alias.scope !191
  %82 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %83 = icmp eq i32 %58, 0
  br i1 %83, label %228, label %84

84:                                               ; preds = %78, %70
  %85 = phi i16* [ %73, %70 ], [ %82, %78 ]
  %86 = icmp ult i32 %58, 16
  br i1 %86, label %175, label %87

87:                                               ; preds = %84
  %88 = getelementptr i16, i16* %85, i64 %59
  %89 = getelementptr i16, i16* %51, i64 %59
  %90 = icmp ult i16* %85, %89
  %91 = icmp ult i16* %51, %88
  %92 = and i1 %90, %91
  br i1 %92, label %175, label %93

93:                                               ; preds = %87
  %94 = and i64 %59, -16
  %95 = sub nsw i64 %59, %94
  %96 = getelementptr i16, i16* %51, i64 %94
  %97 = getelementptr i16, i16* %85, i64 %94
  %98 = add nsw i64 %94, -16
  %99 = lshr exact i64 %98, 4
  %100 = add nuw nsw i64 %99, 1
  %101 = and i64 %100, 3
  %102 = icmp ult i64 %98, 48
  br i1 %102, label %154, label %103

103:                                              ; preds = %93
  %104 = sub nsw i64 %100, %101
  br label %105

105:                                              ; preds = %105, %103
  %106 = phi i64 [ 0, %103 ], [ %151, %105 ]
  %107 = phi i64 [ %104, %103 ], [ %152, %105 ]
  %108 = getelementptr i16, i16* %51, i64 %106
  %109 = getelementptr i16, i16* %85, i64 %106
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !194
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !194
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !197, !noalias !194
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !197, !noalias !194
  %118 = or i64 %106, 16
  %119 = getelementptr i16, i16* %51, i64 %118
  %120 = getelementptr i16, i16* %85, i64 %118
  %121 = bitcast i16* %119 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !194
  %123 = getelementptr i16, i16* %119, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !194
  %126 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %126, align 2, !alias.scope !197, !noalias !194
  %127 = getelementptr i16, i16* %120, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %128, align 2, !alias.scope !197, !noalias !194
  %129 = or i64 %106, 32
  %130 = getelementptr i16, i16* %51, i64 %129
  %131 = getelementptr i16, i16* %85, i64 %129
  %132 = bitcast i16* %130 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !194
  %134 = getelementptr i16, i16* %130, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !194
  %137 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %137, align 2, !alias.scope !197, !noalias !194
  %138 = getelementptr i16, i16* %131, i64 8
  %139 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %136, <8 x i16>* %139, align 2, !alias.scope !197, !noalias !194
  %140 = or i64 %106, 48
  %141 = getelementptr i16, i16* %51, i64 %140
  %142 = getelementptr i16, i16* %85, i64 %140
  %143 = bitcast i16* %141 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !194
  %145 = getelementptr i16, i16* %141, i64 8
  %146 = bitcast i16* %145 to <8 x i16>*
  %147 = load <8 x i16>, <8 x i16>* %146, align 2, !alias.scope !194
  %148 = bitcast i16* %142 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %148, align 2, !alias.scope !197, !noalias !194
  %149 = getelementptr i16, i16* %142, i64 8
  %150 = bitcast i16* %149 to <8 x i16>*
  store <8 x i16> %147, <8 x i16>* %150, align 2, !alias.scope !197, !noalias !194
  %151 = add i64 %106, 64
  %152 = add i64 %107, -4
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %105, !llvm.loop !199

154:                                              ; preds = %105, %93
  %155 = phi i64 [ 0, %93 ], [ %151, %105 ]
  %156 = icmp eq i64 %101, 0
  br i1 %156, label %173, label %157

157:                                              ; preds = %154, %157
  %158 = phi i64 [ %170, %157 ], [ %155, %154 ]
  %159 = phi i64 [ %171, %157 ], [ %101, %154 ]
  %160 = getelementptr i16, i16* %51, i64 %158
  %161 = getelementptr i16, i16* %85, i64 %158
  %162 = bitcast i16* %160 to <8 x i16>*
  %163 = load <8 x i16>, <8 x i16>* %162, align 2, !alias.scope !194
  %164 = getelementptr i16, i16* %160, i64 8
  %165 = bitcast i16* %164 to <8 x i16>*
  %166 = load <8 x i16>, <8 x i16>* %165, align 2, !alias.scope !194
  %167 = bitcast i16* %161 to <8 x i16>*
  store <8 x i16> %163, <8 x i16>* %167, align 2, !alias.scope !197, !noalias !194
  %168 = getelementptr i16, i16* %161, i64 8
  %169 = bitcast i16* %168 to <8 x i16>*
  store <8 x i16> %166, <8 x i16>* %169, align 2, !alias.scope !197, !noalias !194
  %170 = add i64 %158, 16
  %171 = add i64 %159, -1
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %173, label %157, !llvm.loop !200

173:                                              ; preds = %157, %154
  %174 = icmp eq i64 %94, %59
  br i1 %174, label %228, label %175

175:                                              ; preds = %173, %87, %84
  %176 = phi i64 [ %59, %87 ], [ %59, %84 ], [ %95, %173 ]
  %177 = phi i16* [ %51, %87 ], [ %51, %84 ], [ %96, %173 ]
  %178 = phi i16* [ %85, %87 ], [ %85, %84 ], [ %97, %173 ]
  %179 = add nsw i64 %176, -1
  %180 = and i64 %176, 7
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %193, label %182

182:                                              ; preds = %175, %182
  %183 = phi i64 [ %188, %182 ], [ %176, %175 ]
  %184 = phi i16* [ %190, %182 ], [ %177, %175 ]
  %185 = phi i16* [ %189, %182 ], [ %178, %175 ]
  %186 = phi i64 [ %191, %182 ], [ %180, %175 ]
  %187 = load i16, i16* %184, align 2
  store i16 %187, i16* %185, align 2
  %188 = add i64 %183, -1
  %189 = getelementptr inbounds i16, i16* %185, i64 1
  %190 = getelementptr inbounds i16, i16* %184, i64 1
  %191 = add i64 %186, -1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %182, !llvm.loop !201

193:                                              ; preds = %182, %175
  %194 = phi i64 [ %176, %175 ], [ %188, %182 ]
  %195 = phi i16* [ %177, %175 ], [ %190, %182 ]
  %196 = phi i16* [ %178, %175 ], [ %189, %182 ]
  %197 = icmp ult i64 %179, 7
  br i1 %197, label %228, label %198

198:                                              ; preds = %193, %198
  %199 = phi i64 [ %224, %198 ], [ %194, %193 ]
  %200 = phi i16* [ %226, %198 ], [ %195, %193 ]
  %201 = phi i16* [ %225, %198 ], [ %196, %193 ]
  %202 = load i16, i16* %200, align 2
  store i16 %202, i16* %201, align 2
  %203 = getelementptr inbounds i16, i16* %201, i64 1
  %204 = getelementptr inbounds i16, i16* %200, i64 1
  %205 = load i16, i16* %204, align 2
  store i16 %205, i16* %203, align 2
  %206 = getelementptr inbounds i16, i16* %201, i64 2
  %207 = getelementptr inbounds i16, i16* %200, i64 2
  %208 = load i16, i16* %207, align 2
  store i16 %208, i16* %206, align 2
  %209 = getelementptr inbounds i16, i16* %201, i64 3
  %210 = getelementptr inbounds i16, i16* %200, i64 3
  %211 = load i16, i16* %210, align 2
  store i16 %211, i16* %209, align 2
  %212 = getelementptr inbounds i16, i16* %201, i64 4
  %213 = getelementptr inbounds i16, i16* %200, i64 4
  %214 = load i16, i16* %213, align 2
  store i16 %214, i16* %212, align 2
  %215 = getelementptr inbounds i16, i16* %201, i64 5
  %216 = getelementptr inbounds i16, i16* %200, i64 5
  %217 = load i16, i16* %216, align 2
  store i16 %217, i16* %215, align 2
  %218 = getelementptr inbounds i16, i16* %201, i64 6
  %219 = getelementptr inbounds i16, i16* %200, i64 6
  %220 = load i16, i16* %219, align 2
  store i16 %220, i16* %218, align 2
  %221 = getelementptr inbounds i16, i16* %201, i64 7
  %222 = getelementptr inbounds i16, i16* %200, i64 7
  %223 = load i16, i16* %222, align 2
  store i16 %223, i16* %221, align 2
  %224 = add i64 %199, -8
  %225 = getelementptr inbounds i16, i16* %201, i64 8
  %226 = getelementptr inbounds i16, i16* %200, i64 8
  %227 = icmp eq i64 %224, 0
  br i1 %227, label %228, label %198, !llvm.loop !202

228:                                              ; preds = %193, %198, %173, %78
  %229 = phi i16* [ %82, %78 ], [ %85, %173 ], [ %85, %198 ], [ %85, %193 ]
  %230 = getelementptr inbounds i16, i16* %229, i64 %59
  store i16 0, i16* %230, align 2
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %31) #10
  call void @_ZN6icu_6912DateIntervalD1Ev(%"class.icu_69::DateInterval"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #10
  call void @_ZN6icu_6913FieldPositionD1Ev(%"class.icu_69::FieldPosition"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #10
  %231 = icmp eq %"class.icu_69::DateIntervalFormat"* %16, null
  br i1 %231, label %237, label %232

232:                                              ; preds = %228
  %233 = bitcast %"class.icu_69::DateIntervalFormat"* %16 to void (%"class.icu_69::DateIntervalFormat"*)***
  %234 = load void (%"class.icu_69::DateIntervalFormat"*)**, void (%"class.icu_69::DateIntervalFormat"*)*** %233, align 8
  %235 = getelementptr inbounds void (%"class.icu_69::DateIntervalFormat"*)*, void (%"class.icu_69::DateIntervalFormat"*)** %234, i64 1
  %236 = load void (%"class.icu_69::DateIntervalFormat"*)*, void (%"class.icu_69::DateIntervalFormat"*)** %235, align 8
  call void %236(%"class.icu_69::DateIntervalFormat"* nonnull %16) #10
  br label %237

237:                                              ; preds = %228, %232
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #10
  ret void
}

declare %"class.icu_69::DateIntervalFormat"* @_ZN6icu_6918DateIntervalFormat14createInstanceERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) local_unnamed_addr #2

declare void @_ZN6icu_6913UnicodeStringC1EPKc(%"class.icu_69::UnicodeString"*, i8*) unnamed_addr #2

declare double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"*) local_unnamed_addr #2

declare void @_ZN6icu_6912DateIntervalC1Edd(%"class.icu_69::DateInterval"*, double, double) unnamed_addr #2

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6918DateIntervalFormat6formatEPKNS_12DateIntervalERNS_13UnicodeStringERNS_13FieldPositionER10UErrorCode(%"class.icu_69::DateIntervalFormat"*, %"class.icu_69::DateInterval"*, %"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::FieldPosition"* dereferenceable(24), i32* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6icu_6912DateIntervalD1Ev(%"class.icu_69::DateInterval"*) unnamed_addr #3

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6910DateFormat6formatEdRNS_13UnicodeStringE(%"class.icu_69::DateFormat"*, double, %"class.icu_69::UnicodeString"* dereferenceable(64)) local_unnamed_addr #2

declare %"class.icu_69::DateTimePatternGenerator"* @_ZN6icu_6924DateTimePatternGenerator14createInstanceER10UErrorCode(i32* dereferenceable(4)) local_unnamed_addr #2

declare void @_ZN6icu_6924DateTimePatternGenerator14getBestPatternERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::UnicodeString"* sret, %"class.icu_69::DateTimePatternGenerator"*, %"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) local_unnamed_addr #2

declare void @_ZN6icu_6916SimpleDateFormatC1ERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::SimpleDateFormat"*, %"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) unnamed_addr #2

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6910DateFormat6formatEdRNS_13UnicodeStringERNS_13FieldPositionE(%"class.icu_69::DateFormat"*, double, %"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::FieldPosition"* dereferenceable(24)) local_unnamed_addr #2

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString9doReplaceEiiPKDsii(%"class.icu_69::UnicodeString"*, i32, i32, i16*, i32, i32) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare i32 @_ZNK6icu_6913UnicodeString9doIndexOfEiii(%"class.icu_69::UnicodeString"*, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #8

; Function Attrs: nounwind readnone speculatable
declare double @llvm.ceil.f64(double) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !203
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string.8", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string.8"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string.8"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #12
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string.8"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string.8"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4base12_GLOBAL__N_110TimeFormatEPKN6icu_6910DateFormatERKNS_4TimeE: argument 0"}
!4 = distinct !{!4, !"_ZN4base12_GLOBAL__N_110TimeFormatEPKN6icu_6910DateFormatERKNS_4TimeE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE: argument 0"}
!7 = distinct !{!7, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE"}
!8 = !{i32 -2143929020}
!9 = !{!10}
!10 = distinct !{!10, !11}
!11 = distinct !{!11, !"LVerDomain"}
!12 = !{!13}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.isvectorized", i32 1}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.unroll.disable"}
!18 = distinct !{!18, !17}
!19 = distinct !{!19, !15}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE: argument 0"}
!22 = distinct !{!22, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE"}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !15}
!29 = distinct !{!29, !17}
!30 = distinct !{!30, !17}
!31 = distinct !{!31, !15}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN4base12_GLOBAL__N_110TimeFormatEPKN6icu_6910DateFormatERKNS_4TimeE: argument 0"}
!34 = distinct !{!34, !"_ZN4base12_GLOBAL__N_110TimeFormatEPKN6icu_6910DateFormatERKNS_4TimeE"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE: argument 0"}
!37 = distinct !{!37, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE"}
!38 = !{!39}
!39 = distinct !{!39, !40}
!40 = distinct !{!40, !"LVerDomain"}
!41 = !{!42}
!42 = distinct !{!42, !40}
!43 = distinct !{!43, !15}
!44 = distinct !{!44, !17}
!45 = distinct !{!45, !17}
!46 = distinct !{!46, !15}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN4base12_GLOBAL__N_110TimeFormatEPKN6icu_6910DateFormatERKNS_4TimeE: argument 0"}
!49 = distinct !{!49, !"_ZN4base12_GLOBAL__N_110TimeFormatEPKN6icu_6910DateFormatERKNS_4TimeE"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE: argument 0"}
!52 = distinct !{!52, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE"}
!53 = !{!54}
!54 = distinct !{!54, !55}
!55 = distinct !{!55, !"LVerDomain"}
!56 = !{!57}
!57 = distinct !{!57, !55}
!58 = distinct !{!58, !15}
!59 = distinct !{!59, !17}
!60 = distinct !{!60, !17}
!61 = distinct !{!61, !15}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZN4base12_GLOBAL__N_110TimeFormatEPKN6icu_6910DateFormatERKNS_4TimeE: argument 0"}
!64 = distinct !{!64, !"_ZN4base12_GLOBAL__N_110TimeFormatEPKN6icu_6910DateFormatERKNS_4TimeE"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE: argument 0"}
!67 = distinct !{!67, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE"}
!68 = !{!69}
!69 = distinct !{!69, !70}
!70 = distinct !{!70, !"LVerDomain"}
!71 = !{!72}
!72 = distinct !{!72, !70}
!73 = distinct !{!73, !15}
!74 = distinct !{!74, !17}
!75 = distinct !{!75, !17}
!76 = distinct !{!76, !15}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZN4base12_GLOBAL__N_110TimeFormatEPKN6icu_6910DateFormatERKNS_4TimeE: argument 0"}
!79 = distinct !{!79, !"_ZN4base12_GLOBAL__N_110TimeFormatEPKN6icu_6910DateFormatERKNS_4TimeE"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE: argument 0"}
!82 = distinct !{!82, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE"}
!83 = !{!84}
!84 = distinct !{!84, !85}
!85 = distinct !{!85, !"LVerDomain"}
!86 = !{!87}
!87 = distinct !{!87, !85}
!88 = distinct !{!88, !15}
!89 = distinct !{!89, !17}
!90 = distinct !{!90, !17}
!91 = distinct !{!91, !15}
!92 = !{!93}
!93 = distinct !{!93, !94, !"_ZN4base12_GLOBAL__N_110TimeFormatEPKN6icu_6910DateFormatERKNS_4TimeE: argument 0"}
!94 = distinct !{!94, !"_ZN4base12_GLOBAL__N_110TimeFormatEPKN6icu_6910DateFormatERKNS_4TimeE"}
!95 = !{!96}
!96 = distinct !{!96, !97, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE: argument 0"}
!97 = distinct !{!97, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE"}
!98 = !{!99}
!99 = distinct !{!99, !100}
!100 = distinct !{!100, !"LVerDomain"}
!101 = !{!102}
!102 = distinct !{!102, !100}
!103 = distinct !{!103, !15}
!104 = distinct !{!104, !17}
!105 = distinct !{!105, !17}
!106 = distinct !{!106, !15}
!107 = !{!108}
!108 = distinct !{!108, !109, !"_ZN4base12_GLOBAL__N_110TimeFormatEPKN6icu_6910DateFormatERKNS_4TimeE: argument 0"}
!109 = distinct !{!109, !"_ZN4base12_GLOBAL__N_110TimeFormatEPKN6icu_6910DateFormatERKNS_4TimeE"}
!110 = !{!111}
!111 = distinct !{!111, !112, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE: argument 0"}
!112 = distinct !{!112, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE"}
!113 = !{!114}
!114 = distinct !{!114, !115}
!115 = distinct !{!115, !"LVerDomain"}
!116 = !{!117}
!117 = distinct !{!117, !115}
!118 = distinct !{!118, !15}
!119 = distinct !{!119, !17}
!120 = distinct !{!120, !17}
!121 = distinct !{!121, !15}
!122 = !{!123}
!123 = distinct !{!123, !124, !"_ZN4base12_GLOBAL__N_110TimeFormatEPKN6icu_6910DateFormatERKNS_4TimeE: argument 0"}
!124 = distinct !{!124, !"_ZN4base12_GLOBAL__N_110TimeFormatEPKN6icu_6910DateFormatERKNS_4TimeE"}
!125 = !{!126}
!126 = distinct !{!126, !127, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE: argument 0"}
!127 = distinct !{!127, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE"}
!128 = !{!129}
!129 = distinct !{!129, !130}
!130 = distinct !{!130, !"LVerDomain"}
!131 = !{!132}
!132 = distinct !{!132, !130}
!133 = distinct !{!133, !15}
!134 = distinct !{!134, !17}
!135 = distinct !{!135, !17}
!136 = distinct !{!136, !15}
!137 = !{!138}
!138 = distinct !{!138, !139, !"_ZN4base12_GLOBAL__N_110TimeFormatEPKN6icu_6910DateFormatERKNS_4TimeE: argument 0"}
!139 = distinct !{!139, !"_ZN4base12_GLOBAL__N_110TimeFormatEPKN6icu_6910DateFormatERKNS_4TimeE"}
!140 = !{!141}
!141 = distinct !{!141, !142, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE: argument 0"}
!142 = distinct !{!142, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE"}
!143 = !{!144}
!144 = distinct !{!144, !145}
!145 = distinct !{!145, !"LVerDomain"}
!146 = !{!147}
!147 = distinct !{!147, !145}
!148 = distinct !{!148, !15}
!149 = distinct !{!149, !17}
!150 = distinct !{!150, !17}
!151 = distinct !{!151, !15}
!152 = !{!153}
!153 = distinct !{!153, !154, !"_ZN4base12_GLOBAL__N_110TimeFormatEPKN6icu_6910DateFormatERKNS_4TimeE: argument 0"}
!154 = distinct !{!154, !"_ZN4base12_GLOBAL__N_110TimeFormatEPKN6icu_6910DateFormatERKNS_4TimeE"}
!155 = !{!156}
!156 = distinct !{!156, !157, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE: argument 0"}
!157 = distinct !{!157, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE"}
!158 = !{!159}
!159 = distinct !{!159, !160}
!160 = distinct !{!160, !"LVerDomain"}
!161 = !{!162}
!162 = distinct !{!162, !160}
!163 = distinct !{!163, !15}
!164 = distinct !{!164, !17}
!165 = distinct !{!165, !17}
!166 = distinct !{!166, !15}
!167 = !{!168}
!168 = distinct !{!168, !169, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE: argument 0"}
!169 = distinct !{!169, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE"}
!170 = !{!171}
!171 = distinct !{!171, !172}
!172 = distinct !{!172, !"LVerDomain"}
!173 = !{!174}
!174 = distinct !{!174, !172}
!175 = distinct !{!175, !15}
!176 = distinct !{!176, !17}
!177 = distinct !{!177, !17}
!178 = distinct !{!178, !15}
!179 = !{!180}
!180 = distinct !{!180, !181, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE: argument 0"}
!181 = distinct !{!181, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE"}
!182 = !{!183}
!183 = distinct !{!183, !184}
!184 = distinct !{!184, !"LVerDomain"}
!185 = !{!186}
!186 = distinct !{!186, !184}
!187 = distinct !{!187, !15}
!188 = distinct !{!188, !17}
!189 = distinct !{!189, !17}
!190 = distinct !{!190, !15}
!191 = !{!192}
!192 = distinct !{!192, !193, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE: argument 0"}
!193 = distinct !{!193, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE"}
!194 = !{!195}
!195 = distinct !{!195, !196}
!196 = distinct !{!196, !"LVerDomain"}
!197 = !{!198}
!198 = distinct !{!198, !196}
!199 = distinct !{!199, !15}
!200 = distinct !{!200, !17}
!201 = distinct !{!201, !17}
!202 = distinct !{!202, !15}
!203 = !{i8 0, i8 2}
