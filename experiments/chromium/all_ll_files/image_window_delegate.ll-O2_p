; ModuleID = '../../ui/aura_extra/image_window_delegate.cc'
source_filename = "../../ui/aura_extra/image_window_delegate.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::PaintContext" = type opaque
%class.scoped_refptr.90 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type <{ %"class.base::RefCountedThreadSafe.91", [4 x i8], %"class.cc::RTree", %"class.cc::DiscardableImageMap", %"class.cc::PaintOpBuffer", %"class.std::__1::vector.64", %"class.std::__1::vector.162", %"class.std::__1::vector.169", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.91" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.cc::RTree" = type <{ i64, %"struct.cc::RTree<unsigned long>::Branch", %"class.std::__1::vector.92", i8, [7 x i8] }>
%"struct.cc::RTree<unsigned long>::Branch" = type { %"struct.cc::RTree<unsigned long>::Node"*, i64, %"class.gfx::Rect" }
%"struct.cc::RTree<unsigned long>::Node" = type opaque
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"*, %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.cc::RTree<unsigned long>::Node"* }
%"class.cc::DiscardableImageMap" = type { %"class.base::flat_map", %"class.std::__1::vector.106", %"class.base::flat_map.120", i8, i8, [6 x i8], %"class.cc::RTree.130", %"class.std::__1::vector.154" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.99" }
%"class.std::__1::vector.99" = type { %"class.std::__1::__vector_base.100" }
%"class.std::__1::__vector_base.100" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.101" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.106" = type { %"class.std::__1::__vector_base.107" }
%"class.std::__1::__vector_base.107" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"class.std::__1::__compressed_pair.115" }
%"struct.cc::DiscardableImageMap::AnimatedImageMetadata" = type { i32, i32, %"class.std::__1::vector.108", i32, i32 }
%"class.std::__1::vector.108" = type { %"class.std::__1::__vector_base.109" }
%"class.std::__1::__vector_base.109" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.110" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.cc::FrameMetadata"* }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"* }
%"class.base::flat_map.120" = type { %"class.base::internal::flat_tree.121" }
%"class.base::internal::flat_tree.121" = type { %"class.std::__1::vector.122" }
%"class.std::__1::vector.122" = type { %"class.std::__1::__vector_base.123" }
%"class.std::__1::__vector_base.123" = type { %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"*, %"class.std::__1::__compressed_pair.125" }
%"struct.std::__1::pair.124" = type { i32, i32 }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.std::__1::pair.124"* }
%"class.cc::RTree.130" = type <{ i64, %"struct.cc::RTree<cc::DrawImage>::Branch", %"class.std::__1::vector.146", i8, [7 x i8] }>
%"struct.cc::RTree<cc::DrawImage>::Branch" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.cc::DrawImage", %"class.gfx::Rect" }
%"struct.cc::RTree<cc::DrawImage>::Node" = type opaque
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional", %"class.absl::optional.141", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp.131, %class.sk_sp.132, %"class.gfx::Rect", i32, %class.sk_sp.137, %class.sk_sp.138, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.131, %class.scoped_refptr.139 }
%class.sk_sp.132 = type { %"class.cc::PaintOpBuffer"* }
%class.sk_sp.137 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.138 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp.131 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.2, i32, i32 }
%class.sk_sp.2 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.4" }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.scoped_refptr.139 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.140", [4 x i8] }>
%"class.base::RefCountedThreadSafe.140" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkSize = type { float, float }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.absl::optional.141" = type { %"class.absl::optional_internal::optional_data.142" }
%"class.absl::optional_internal::optional_data.142" = type { %"class.absl::optional_internal::optional_data_base.143" }
%"class.absl::optional_internal::optional_data_base.143" = type { %"class.absl::optional_internal::optional_data_dtor_base.144" }
%"class.absl::optional_internal::optional_data_dtor_base.144" = type { i8, %union.anon.145 }
%union.anon.145 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::vector.146" = type { %"class.std::__1::__vector_base.147" }
%"class.std::__1::__vector_base.147" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.cc::RTree<cc::DrawImage>::Node"* }
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %"struct.std::__1::pair.156"*, %"struct.std::__1::pair.156"*, %"class.std::__1::__compressed_pair.157" }
%"struct.std::__1::pair.156" = type opaque
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"struct.std::__1::pair.156"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.133", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { i8* }
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.gfx::Rect"* }
%"class.std::__1::vector.162" = type { %"class.std::__1::__vector_base.163" }
%"class.std::__1::__vector_base.163" = type { i64*, i64*, %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { i64* }
%"class.std::__1::vector.169" = type { %"class.std::__1::__vector_base.170" }
%"class.std::__1::__vector_base.170" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"class.std::__1::__compressed_pair.171" }
%"struct.cc::DisplayItemList::PairedBeginInfo" = type { i64, i64 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"* }
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.181 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.182 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%struct.SkRect = type { float, float, float, float }
%union.anon.203 = type { %class.SkBitmap }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.9 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.9 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.181, [384 x i64], %class.sk_sp.182, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.183", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.189" }
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"class.ui::PaintCache" = type opaque
%"class.gfx::Size" = type { i32, i32 }
%"class.aura_extra::ImageWindowDelegate" = type <{ %"class.aura::WindowDelegate", i32, [4 x i8], %"class.gfx::Image", %"class.gfx::Vector2d", %"class.gfx::Size", i8, [7 x i8] }>
%"class.aura::WindowDelegate" = type { %"class.ui::EventHandler" }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type opaque
%"class.gfx::Image" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.gfx::ImageSkia" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"class.ui::Cursor" = type { i32, %class.scoped_refptr.1, float, %"class.gfx::Point", %class.SkBitmap }
%class.scoped_refptr.1 = type { %"class.ui::PlatformCursor"* }
%"class.ui::PlatformCursor" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.aura::Window" = type { %"class.ui::LayerDelegate", %"class.ui::LayerOwner", %"class.ui::EventTarget", %"class.ui::GestureConsumer", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", %"class.viz::HostFrameSinkClient", %"class.gfx::Rect", %"class.aura::WindowTreeHost"*, i32, i8, i8, %"class.aura::WindowDelegate"*, %"class.aura::Window"*, %"class.std::__1::vector.45", i8, i32, %class.SkRegion, i32, i8, i8, %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.58", %"class.std::__1::vector.64", i32, i32, i32, [4 x i8], %"class.base::ObserverList.71", i32, %"class.viz::SubtreeCaptureId", float, %"class.viz::FrameSinkId", i8, i8, i8, %"class.std::__1::unique_ptr.83", %"class.base::WeakPtr.89" }
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.ui::Layer"*, %"class.base::ObserverList" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.11" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.14", %"class.std::__1::vector.21", %"class.ui::EventHandler"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.16" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.ui::EventHandler"** }
%"class.ui::GestureConsumer" = type { i32 (...)** }
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { i64 }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.36" }
%"class.std::__1::map.36" = type { %"class.std::__1::__tree.37" }
%"class.std::__1::__tree.37" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.viz::HostFrameSinkClient" = type { i32 (...)** }
%"class.aura::WindowTreeHost" = type opaque
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"class.aura::Window"**, %"class.aura::Window"**, %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.aura::Window"** }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.aura::LayoutManager"* }
%"class.aura::LayoutManager" = type opaque
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.aura::WindowTargeter"* }
%"class.aura::WindowTargeter" = type opaque
%"class.base::ObserverList.71" = type <{ %"class.std::__1::vector.72", %"class.base::LinkedList.80", i64, i32, [4 x i8] }>
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.75" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.74 }
%class.scoped_refptr.74 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.4" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.80" = type { %"class.base::LinkNode.81" }
%"class.base::LinkNode.81" = type { %"class.base::internal::LinkNodeBase" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.viz::ParentLocalSurfaceIdAllocator"* }
%"class.viz::ParentLocalSurfaceIdAllocator" = type opaque
%"class.base::WeakPtr.89" = type { %"class.base::internal::WeakPtrBase" }
%"class.ui::PaintRecorder" = type { %"class.ui::PaintContext"*, %class.scoped_refptr.90, %"class.cc::RecordPaintCanvas", %"class.gfx::Canvas", %"class.ui::PaintCache"*, %"class.gfx::Size" }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.176", %struct.SkRect }
%"class.absl::optional.176" = type { %"class.absl::optional_internal::optional_data.177" }
%"class.absl::optional_internal::optional_data.177" = type { %"class.absl::optional_internal::optional_data_base.178" }
%"class.absl::optional_internal::optional_data_base.178" = type { %"class.absl::optional_internal::optional_data_dtor_base.179" }
%"class.absl::optional_internal::optional_data_dtor_base.179" = type { i8, %union.anon.180 }
%union.anon.180 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%"class.gfx::Canvas" = type { i32 (...)**, float, %"class.absl::optional.199", %"class.absl::optional.204", %"class.cc::PaintCanvas"* }
%"class.absl::optional.199" = type { %"class.absl::optional_internal::optional_data.200" }
%"class.absl::optional_internal::optional_data.200" = type { %"class.absl::optional_internal::optional_data_base.201" }
%"class.absl::optional_internal::optional_data_base.201" = type { %"class.absl::optional_internal::optional_data_dtor_base.202" }
%"class.absl::optional_internal::optional_data_dtor_base.202" = type { i8, %union.anon.203 }
%"class.absl::optional.204" = type { %"class.absl::optional_internal::optional_data.205" }
%"class.absl::optional_internal::optional_data.205" = type { %"class.absl::optional_internal::optional_data_base.206" }
%"class.absl::optional_internal::optional_data_base.206" = type { %"class.absl::optional_internal::optional_data_dtor_base.207" }
%"class.absl::optional_internal::optional_data_dtor_base.207" = type { i8, [7 x i8], %union.anon.208 }
%union.anon.208 = type { %"class.cc::SkiaPaintCanvas" }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.209", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%class.SkPath = type <{ %class.sk_sp.215, i32, %"struct.std::__1::atomic.4", %"struct.std::__1::atomic.4", i8, i8 }>
%class.sk_sp.215 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.216, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.217, %class.SkTDArray.218, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.216 = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.217 = type { i8*, i32, i32 }
%class.SkTDArray.218 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.219 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.219 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.220", [3 x i8] }
%"struct.std::__1::atomic.220" = type { %"struct.std::__1::__atomic_base.221" }
%"struct.std::__1::__atomic_base.221" = type { %"struct.std::__1::__cxx_atomic_impl.222" }
%"struct.std::__1::__cxx_atomic_impl.222" = type { %"struct.std::__1::__cxx_atomic_base_impl.223" }
%"struct.std::__1::__cxx_atomic_base_impl.223" = type { i8 }
%"class.ui::Event" = type opaque
%"class.ui::KeyEvent" = type opaque
%"class.ui::MouseEvent" = type opaque
%"class.ui::ScrollEvent" = type opaque
%"class.ui::TouchEvent" = type opaque
%"class.ui::GestureEvent" = type opaque
%"class.ui::CancelModeEvent" = type opaque

$_ZN4aura14WindowDelegate24OnWindowOcclusionChangedENS_6Window14OcclusionStateE = comdat any

$_ZN4aura14WindowDelegate17UpdateVisualStateEv = comdat any

@_ZTVN10aura_extra19ImageWindowDelegateE = hidden unnamed_addr constant { [30 x i8*] } { [30 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.aura_extra::ImageWindowDelegate"*)* @_ZN10aura_extra19ImageWindowDelegateD2Ev to i8*), i8* bitcast (void (%"class.aura_extra::ImageWindowDelegate"*)* @_ZN10aura_extra19ImageWindowDelegateD0Ev to i8*), i8* bitcast (void (%"class.ui::EventHandler"*, %"class.ui::Event"*)* @_ZN2ui12EventHandler7OnEventEPNS_5EventE to i8*), i8* bitcast (void (%"class.ui::EventHandler"*, %"class.ui::KeyEvent"*)* @_ZN2ui12EventHandler10OnKeyEventEPNS_8KeyEventE to i8*), i8* bitcast (void (%"class.ui::EventHandler"*, %"class.ui::MouseEvent"*)* @_ZN2ui12EventHandler12OnMouseEventEPNS_10MouseEventE to i8*), i8* bitcast (void (%"class.ui::EventHandler"*, %"class.ui::ScrollEvent"*)* @_ZN2ui12EventHandler13OnScrollEventEPNS_11ScrollEventE to i8*), i8* bitcast (void (%"class.ui::EventHandler"*, %"class.ui::TouchEvent"*)* @_ZN2ui12EventHandler12OnTouchEventEPNS_10TouchEventE to i8*), i8* bitcast (void (%"class.ui::EventHandler"*, %"class.ui::GestureEvent"*)* @_ZN2ui12EventHandler14OnGestureEventEPNS_12GestureEventE to i8*), i8* bitcast (void (%"class.ui::EventHandler"*, %"class.ui::CancelModeEvent"*)* @_ZN2ui12EventHandler12OnCancelModeEPNS_15CancelModeEventE to i8*), i8* bitcast ({ i8*, i64 } (%"class.ui::EventHandler"*)* @_ZNK2ui12EventHandler13GetLogContextEv to i8*), i8* bitcast (i64 (%"class.aura_extra::ImageWindowDelegate"*)* @_ZNK10aura_extra19ImageWindowDelegate14GetMinimumSizeEv to i8*), i8* bitcast (i64 (%"class.aura_extra::ImageWindowDelegate"*)* @_ZNK10aura_extra19ImageWindowDelegate14GetMaximumSizeEv to i8*), i8* bitcast (void (%"class.aura_extra::ImageWindowDelegate"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*)* @_ZN10aura_extra19ImageWindowDelegate15OnBoundsChangedERKN3gfx4RectES4_ to i8*), i8* bitcast (void (%"class.ui::Cursor"*, %"class.aura_extra::ImageWindowDelegate"*, %"class.gfx::Point"*)* @_ZN10aura_extra19ImageWindowDelegate9GetCursorERKN3gfx5PointE to i8*), i8* bitcast (i32 (%"class.aura_extra::ImageWindowDelegate"*, %"class.gfx::Point"*)* @_ZNK10aura_extra19ImageWindowDelegate21GetNonClientComponentERKN3gfx5PointE to i8*), i8* bitcast (i1 (%"class.aura_extra::ImageWindowDelegate"*, %"class.aura::Window"*, %"class.gfx::Point"*)* @_ZN10aura_extra19ImageWindowDelegate38ShouldDescendIntoChildForEventHandlingEPN4aura6WindowERKN3gfx5PointE to i8*), i8* bitcast (i1 (%"class.aura_extra::ImageWindowDelegate"*)* @_ZN10aura_extra19ImageWindowDelegate8CanFocusEv to i8*), i8* bitcast (void (%"class.aura_extra::ImageWindowDelegate"*)* @_ZN10aura_extra19ImageWindowDelegate13OnCaptureLostEv to i8*), i8* bitcast (void (%"class.aura_extra::ImageWindowDelegate"*, %"class.ui::PaintContext"*)* @_ZN10aura_extra19ImageWindowDelegate7OnPaintERKN2ui12PaintContextE to i8*), i8* bitcast (void (%"class.aura_extra::ImageWindowDelegate"*, float, float)* @_ZN10aura_extra19ImageWindowDelegate26OnDeviceScaleFactorChangedEff to i8*), i8* bitcast (void (%"class.aura_extra::ImageWindowDelegate"*, %"class.aura::Window"*)* @_ZN10aura_extra19ImageWindowDelegate18OnWindowDestroyingEPN4aura6WindowE to i8*), i8* bitcast (void (%"class.aura_extra::ImageWindowDelegate"*, %"class.aura::Window"*)* @_ZN10aura_extra19ImageWindowDelegate17OnWindowDestroyedEPN4aura6WindowE to i8*), i8* bitcast (void (%"class.aura_extra::ImageWindowDelegate"*, i1)* @_ZN10aura_extra19ImageWindowDelegate31OnWindowTargetVisibilityChangedEb to i8*), i8* bitcast (void (%"class.aura::WindowDelegate"*, i32)* @_ZN4aura14WindowDelegate24OnWindowOcclusionChangedENS_6Window14OcclusionStateE to i8*), i8* bitcast (i1 (%"class.aura_extra::ImageWindowDelegate"*)* @_ZNK10aura_extra19ImageWindowDelegate14HasHitTestMaskEv to i8*), i8* bitcast (void (%"class.aura_extra::ImageWindowDelegate"*, %class.SkPath*)* @_ZNK10aura_extra19ImageWindowDelegate14GetHitTestMaskEP6SkPath to i8*), i8* bitcast (i1 (%"class.aura::WindowDelegate"*)* @_ZNK4aura14WindowDelegate30RequiresDoubleTapGestureEventsEv to i8*), i8* bitcast (void (%"class.aura::WindowDelegate"*)* @_ZN4aura14WindowDelegate17UpdateVisualStateEv to i8*)] }, align 8
@__const._ZN10aura_extra19ImageWindowDelegate7OnPaintERKN2ui12PaintContextE.recorder = private unnamed_addr constant { %"class.ui::PaintContext"*, %class.scoped_refptr.90, { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, { { { { i8, [7 x i8], { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.181, [384 x i64], %class.sk_sp.182, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.183", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.189" } } } } } } } }, %struct.SkRect }, { i32 (...)**, float, [4 x i8], { { { { i8, [7 x i8], %union.anon.203 } } } }, { { { { i8, [7 x i8], { <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.209", %"class.cc::ImageProvider"*, { i8, [3 x i8], i32 }, i32, [4 x i8] }> } } } } }, %"class.cc::PaintCanvas"* }, %"class.ui::PaintCache"*, %"class.gfx::Size" } { %"class.ui::PaintContext"* inttoptr (i64 -6148914691236517206 to %"class.ui::PaintContext"*), %class.scoped_refptr.90 { %"class.cc::DisplayItemList"* inttoptr (i64 -6148914691236517206 to %"class.cc::DisplayItemList"*) }, { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, { { { { i8, [7 x i8], { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.181, [384 x i64], %class.sk_sp.182, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.183", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.189" } } } } } } } }, %struct.SkRect } { %"class.cc::PaintCanvas" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %"class.printing::MetafileSkia"* inttoptr (i64 -6148914691236517206 to %"class.printing::MetafileSkia"*), %"class.paint_preview::PaintPreviewTracker"* inttoptr (i64 -6148914691236517206 to %"class.paint_preview::PaintPreviewTracker"*) }, %"class.cc::DisplayItemList"* inttoptr (i64 -6148914691236517206 to %"class.cc::DisplayItemList"*), { { { { i8, [7 x i8], { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.181, [384 x i64], %class.sk_sp.182, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.183", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.189" } } } } } } } } { { { { i8, [7 x i8], { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.181, [384 x i64], %class.sk_sp.182, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.183", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.189" } } } } } } } { { { i8, [7 x i8], { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.181, [384 x i64], %class.sk_sp.182, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.183", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.189" } } } } } } { { i8, [7 x i8], { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.181, [384 x i64], %class.sk_sp.182, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.183", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.189" } } } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.181, [384 x i64], %class.sk_sp.182, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.183", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.189" } } } } { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.181, [384 x i64], %class.sk_sp.182, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.183", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.189" } } } { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.181, [384 x i64], %class.sk_sp.182, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.183", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.189" } } { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.181, [384 x i64], %class.sk_sp.182, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.183", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.189" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkDeque { i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), i64 -6148914691236517206, i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 }, %"class.SkCanvas::MCRec"* inttoptr (i64 -6148914691236517206 to %"class.SkCanvas::MCRec"*), %class.sk_sp.181 { %class.SkMarkerStack* inttoptr (i64 -6148914691236517206 to %class.SkMarkerStack*) }, [384 x i64] [i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206], %class.sk_sp.182 { %class.SkBaseDevice* inttoptr (i64 -6148914691236517206 to %class.SkBaseDevice*) }, %class.SkSurfaceProps { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr.183" { %"class.std::__1::__compressed_pair.184" { %"struct.std::__1::__compressed_pair_elem.185" { %class.SkRasterHandleAllocator* inttoptr (i64 -6148914691236517206 to %class.SkRasterHandleAllocator*) } } }, %class.SkSurface_Base* inttoptr (i64 -6148914691236517206 to %class.SkSurface_Base*), %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.std::__1::unique_ptr.189" { %"class.std::__1::__compressed_pair.190" { %"struct.std::__1::__compressed_pair_elem.191" { %class.SkGlyphRunBuilder* inttoptr (i64 -6148914691236517206 to %class.SkGlyphRunBuilder*) } } } } } } } } } } }, %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, { i32 (...)**, float, [4 x i8], { { { { i8, [7 x i8], %union.anon.203 } } } }, { { { { i8, [7 x i8], { <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.209", %"class.cc::ImageProvider"*, { i8, [3 x i8], i32 }, i32, [4 x i8] }> } } } } }, %"class.cc::PaintCanvas"* } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.203 } } } } { { { { i8, [7 x i8], %union.anon.203 } } } { { { i8, [7 x i8], %union.anon.203 } } { { i8, [7 x i8], %union.anon.203 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.203 { %class.SkBitmap { %class.sk_sp { %class.SkPixelRef* inttoptr (i64 -6148914691236517206 to %class.SkPixelRef*) }, %class.SkPixmap { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, %struct.SkImageInfo { %class.SkColorInfo { %class.sk_sp.2 { %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*) }, i32 -1431655766, i32 -1431655766 }, %struct.SkISize { i32 -1431655766, i32 -1431655766 } } }, %class.sk_sp.9 { %class.SkMipmap* inttoptr (i64 -6148914691236517206 to %class.SkMipmap*) } } } } } } }, { { { { i8, [7 x i8], { <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.209", %"class.cc::ImageProvider"*, { i8, [3 x i8], i32 }, i32, [4 x i8] }> } } } } } { { { { i8, [7 x i8], { <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.209", %"class.cc::ImageProvider"*, { i8, [3 x i8], i32 }, i32, [4 x i8] }> } } } } { { { i8, [7 x i8], { <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.209", %"class.cc::ImageProvider"*, { i8, [3 x i8], i32 }, i32, [4 x i8] }> } } } { { i8, [7 x i8], { <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.209", %"class.cc::ImageProvider"*, { i8, [3 x i8], i32 }, i32, [4 x i8] }> } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.209", %"class.cc::ImageProvider"*, { i8, [3 x i8], i32 }, i32, [4 x i8] }> } { <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.209", %"class.cc::ImageProvider"*, { i8, [3 x i8], i32 }, i32, [4 x i8] }> <{ %"class.cc::PaintCanvas" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %"class.printing::MetafileSkia"* inttoptr (i64 -6148914691236517206 to %"class.printing::MetafileSkia"*), %"class.paint_preview::PaintPreviewTracker"* inttoptr (i64 -6148914691236517206 to %"class.paint_preview::PaintPreviewTracker"*) }, %class.SkCanvas* inttoptr (i64 -6148914691236517206 to %class.SkCanvas*), %class.SkBitmap { %class.sk_sp { %class.SkPixelRef* inttoptr (i64 -6148914691236517206 to %class.SkPixelRef*) }, %class.SkPixmap { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, %struct.SkImageInfo { %class.SkColorInfo { %class.sk_sp.2 { %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*) }, i32 -1431655766, i32 -1431655766 }, %struct.SkISize { i32 -1431655766, i32 -1431655766 } } }, %class.sk_sp.9 { %class.SkMipmap* inttoptr (i64 -6148914691236517206 to %class.SkMipmap*) } }, %"class.std::__1::unique_ptr.209" { %"class.std::__1::__compressed_pair.210" { %"struct.std::__1::__compressed_pair_elem.211" { %class.SkCanvas* inttoptr (i64 -6148914691236517206 to %class.SkCanvas*) } } }, %"class.cc::ImageProvider"* inttoptr (i64 -6148914691236517206 to %"class.cc::ImageProvider"*), { i8, [3 x i8], i32 } { i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> } } } } }, %"class.cc::PaintCanvas"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintCanvas"*) }, %"class.ui::PaintCache"* inttoptr (i64 -6148914691236517206 to %"class.ui::PaintCache"*), %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, align 8

@_ZN10aura_extra19ImageWindowDelegateC1Ev = hidden unnamed_addr alias void (%"class.aura_extra::ImageWindowDelegate"*), void (%"class.aura_extra::ImageWindowDelegate"*)* @_ZN10aura_extra19ImageWindowDelegateC2Ev
@_ZN10aura_extra19ImageWindowDelegateD1Ev = hidden unnamed_addr alias void (%"class.aura_extra::ImageWindowDelegate"*), void (%"class.aura_extra::ImageWindowDelegate"*)* @_ZN10aura_extra19ImageWindowDelegateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10aura_extra19ImageWindowDelegateC2Ev(%"class.aura_extra::ImageWindowDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura_extra::ImageWindowDelegate", %"class.aura_extra::ImageWindowDelegate"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN2ui12EventHandlerC2Ev(%"class.ui::EventHandler"* %2) #6
  %3 = getelementptr inbounds %"class.aura_extra::ImageWindowDelegate", %"class.aura_extra::ImageWindowDelegate"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTVN10aura_extra19ImageWindowDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.aura_extra::ImageWindowDelegate", %"class.aura_extra::ImageWindowDelegate"* %0, i64 0, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.aura_extra::ImageWindowDelegate", %"class.aura_extra::ImageWindowDelegate"* %0, i64 0, i32 3
  tail call void @_ZN3gfx5ImageC1Ev(%"class.gfx::Image"* %5) #6
  %6 = getelementptr inbounds %"class.aura_extra::ImageWindowDelegate", %"class.aura_extra::ImageWindowDelegate"* %0, i64 0, i32 4, i32 0
  %7 = bitcast i32* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 17, i1 false)
  ret void
}

declare void @_ZN3gfx5ImageC1Ev(%"class.gfx::Image"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10aura_extra19ImageWindowDelegateD2Ev(%"class.aura_extra::ImageWindowDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura_extra::ImageWindowDelegate", %"class.aura_extra::ImageWindowDelegate"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTVN10aura_extra19ImageWindowDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.aura_extra::ImageWindowDelegate", %"class.aura_extra::ImageWindowDelegate"* %0, i64 0, i32 3
  tail call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* %3) #6
  %4 = getelementptr inbounds %"class.aura_extra::ImageWindowDelegate", %"class.aura_extra::ImageWindowDelegate"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN2ui12EventHandlerD2Ev(%"class.ui::EventHandler"* %4) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2ui12EventHandlerD2Ev(%"class.ui::EventHandler"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10aura_extra19ImageWindowDelegateD0Ev(%"class.aura_extra::ImageWindowDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura_extra::ImageWindowDelegate", %"class.aura_extra::ImageWindowDelegate"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTVN10aura_extra19ImageWindowDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.aura_extra::ImageWindowDelegate", %"class.aura_extra::ImageWindowDelegate"* %0, i64 0, i32 3
  tail call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* %3) #6
  %4 = getelementptr inbounds %"class.aura_extra::ImageWindowDelegate", %"class.aura_extra::ImageWindowDelegate"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN2ui12EventHandlerD2Ev(%"class.ui::EventHandler"* %4) #6
  %5 = bitcast %"class.aura_extra::ImageWindowDelegate"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10aura_extra19ImageWindowDelegate8SetImageERKN3gfx5ImageE(%"class.aura_extra::ImageWindowDelegate"*, %"class.gfx::Image"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::ImageSkia", align 8
  %4 = getelementptr inbounds %"class.aura_extra::ImageWindowDelegate", %"class.aura_extra::ImageWindowDelegate"* %0, i64 0, i32 3
  %5 = tail call dereferenceable(8) %"class.gfx::Image"* @_ZN3gfx5ImageaSERKS0_(%"class.gfx::Image"* %4, %"class.gfx::Image"* dereferenceable(8) %1) #6
  %6 = getelementptr inbounds %"class.aura_extra::ImageWindowDelegate", %"class.aura_extra::ImageWindowDelegate"* %0, i64 0, i32 5, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %30, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.aura_extra::ImageWindowDelegate", %"class.aura_extra::ImageWindowDelegate"* %0, i64 0, i32 5, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %30, label %13

13:                                               ; preds = %9
  %14 = tail call zeroext i1 @_ZNK3gfx5Image7IsEmptyEv(%"class.gfx::Image"* %4) #6
  br i1 %14, label %30, label %15

15:                                               ; preds = %13
  %16 = bitcast %"class.gfx::ImageSkia"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  call void @_ZNK3gfx5Image11AsImageSkiaEv(%"class.gfx::ImageSkia"* nonnull sret %3, %"class.gfx::Image"* %4) #6
  %17 = call i64 @_ZNK3gfx9ImageSkia4sizeEv(%"class.gfx::ImageSkia"* nonnull %3) #6
  %18 = trunc i64 %17 to i32
  %19 = load i32, i32* %6, align 4
  %20 = icmp eq i32 %19, %18
  br i1 %20, label %21, label %27

21:                                               ; preds = %15
  %22 = lshr i64 %17, 32
  %23 = trunc i64 %22 to i32
  %24 = load i32, i32* %10, align 4
  %25 = icmp ne i32 %24, %23
  %26 = zext i1 %25 to i8
  br label %27

27:                                               ; preds = %15, %21
  %28 = phi i8 [ 1, %15 ], [ %26, %21 ]
  %29 = getelementptr inbounds %"class.aura_extra::ImageWindowDelegate", %"class.aura_extra::ImageWindowDelegate"* %0, i64 0, i32 6
  store i8 %28, i8* %29, align 8
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  br label %30

30:                                               ; preds = %2, %27, %13, %9
  ret void
}

declare dereferenceable(8) %"class.gfx::Image"* @_ZN3gfx5ImageaSERKS0_(%"class.gfx::Image"*, %"class.gfx::Image"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZNK3gfx5Image7IsEmptyEv(%"class.gfx::Image"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZNK3gfx5Image11AsImageSkiaEv(%"class.gfx::ImageSkia"* sret, %"class.gfx::Image"*) local_unnamed_addr #1

declare i64 @_ZNK3gfx9ImageSkia4sizeEv(%"class.gfx::ImageSkia"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK10aura_extra19ImageWindowDelegate14GetMinimumSizeEv(%"class.aura_extra::ImageWindowDelegate"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK10aura_extra19ImageWindowDelegate14GetMaximumSizeEv(%"class.aura_extra::ImageWindowDelegate"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10aura_extra19ImageWindowDelegate15OnBoundsChangedERKN3gfx4RectES4_(%"class.aura_extra::ImageWindowDelegate"*, %"class.gfx::Rect"* nocapture readnone dereferenceable(16), %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.gfx::ImageSkia", align 8
  %5 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1
  %6 = getelementptr inbounds %"class.aura_extra::ImageWindowDelegate", %"class.aura_extra::ImageWindowDelegate"* %0, i64 0, i32 5
  %7 = bitcast %"class.gfx::Size"* %5 to i64*
  %8 = bitcast %"class.gfx::Size"* %6 to i64*
  %9 = load i64, i64* %7, align 4
  store i64 %9, i64* %8, align 8
  %10 = getelementptr inbounds %"class.aura_extra::ImageWindowDelegate", %"class.aura_extra::ImageWindowDelegate"* %0, i64 0, i32 3
  %11 = tail call zeroext i1 @_ZNK3gfx5Image7IsEmptyEv(%"class.gfx::Image"* %10) #6
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.gfx::ImageSkia"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #6
  call void @_ZNK3gfx5Image11AsImageSkiaEv(%"class.gfx::ImageSkia"* nonnull sret %4, %"class.gfx::Image"* %10) #6
  %14 = call i64 @_ZNK3gfx9ImageSkia4sizeEv(%"class.gfx::ImageSkia"* nonnull %4) #6
  %15 = trunc i64 %14 to i32
  %16 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %6, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, %15
  br i1 %18, label %19, label %26

19:                                               ; preds = %12
  %20 = lshr i64 %14, 32
  %21 = trunc i64 %20 to i32
  %22 = getelementptr inbounds %"class.aura_extra::ImageWindowDelegate", %"class.aura_extra::ImageWindowDelegate"* %0, i64 0, i32 5, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp ne i32 %23, %21
  %25 = zext i1 %24 to i8
  br label %26

26:                                               ; preds = %12, %19
  %27 = phi i8 [ 1, %12 ], [ %25, %19 ]
  %28 = getelementptr inbounds %"class.aura_extra::ImageWindowDelegate", %"class.aura_extra::ImageWindowDelegate"* %0, i64 0, i32 6
  store i8 %27, i8* %28, align 8
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #6
  br label %29

29:                                               ; preds = %26, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10aura_extra19ImageWindowDelegate9GetCursorERKN3gfx5PointE(%"class.ui::Cursor"* noalias sret, %"class.aura_extra::ImageWindowDelegate"* nocapture readnone, %"class.gfx::Point"* nocapture readnone dereferenceable(8)) unnamed_addr #0 align 2 {
  tail call void @_ZN2ui6CursorC1ENS_5mojom10CursorTypeE(%"class.ui::Cursor"* %0, i32 -1) #6
  ret void
}

declare void @_ZN2ui6CursorC1ENS_5mojom10CursorTypeE(%"class.ui::Cursor"*, i32) unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK10aura_extra19ImageWindowDelegate21GetNonClientComponentERKN3gfx5PointE(%"class.aura_extra::ImageWindowDelegate"* nocapture readnone, %"class.gfx::Point"* nocapture readnone dereferenceable(8)) unnamed_addr #5 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN10aura_extra19ImageWindowDelegate38ShouldDescendIntoChildForEventHandlingEPN4aura6WindowERKN3gfx5PointE(%"class.aura_extra::ImageWindowDelegate"* nocapture readnone, %"class.aura::Window"* nocapture readnone, %"class.gfx::Point"* nocapture readnone dereferenceable(8)) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN10aura_extra19ImageWindowDelegate8CanFocusEv(%"class.aura_extra::ImageWindowDelegate"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10aura_extra19ImageWindowDelegate13OnCaptureLostEv(%"class.aura_extra::ImageWindowDelegate"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10aura_extra19ImageWindowDelegate7OnPaintERKN2ui12PaintContextE(%"class.aura_extra::ImageWindowDelegate"*, %"class.ui::PaintContext"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.ui::PaintRecorder", align 8
  %4 = alloca %"class.gfx::ImageSkia", align 8
  %5 = bitcast %"class.ui::PaintRecorder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3536, i8* nonnull %5) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ %"class.ui::PaintContext"*, %class.scoped_refptr.90, { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, { { { { i8, [7 x i8], { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.181, [384 x i64], %class.sk_sp.182, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.183", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.189" } } } } } } } }, %struct.SkRect }, { i32 (...)**, float, [4 x i8], { { { { i8, [7 x i8], %union.anon.203 } } } }, { { { { i8, [7 x i8], { <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.209", %"class.cc::ImageProvider"*, { i8, [3 x i8], i32 }, i32, [4 x i8] }> } } } } }, %"class.cc::PaintCanvas"* }, %"class.ui::PaintCache"*, %"class.gfx::Size" }* @__const._ZN10aura_extra19ImageWindowDelegate7OnPaintERKN2ui12PaintContextE.recorder to i8*), i64 3536, i1 false)
  %6 = getelementptr inbounds %"class.aura_extra::ImageWindowDelegate", %"class.aura_extra::ImageWindowDelegate"* %0, i64 0, i32 5
  call void @_ZN2ui13PaintRecorderC1ERKNS_12PaintContextERKN3gfx4SizeE(%"class.ui::PaintRecorder"* nonnull %3, %"class.ui::PaintContext"* %1, %"class.gfx::Size"* dereferenceable(8) %6) #6
  %7 = getelementptr inbounds %"class.aura_extra::ImageWindowDelegate", %"class.aura_extra::ImageWindowDelegate"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %23, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.aura_extra::ImageWindowDelegate", %"class.aura_extra::ImageWindowDelegate"* %0, i64 0, i32 3
  %12 = call zeroext i1 @_ZNK3gfx5Image7IsEmptyEv(%"class.gfx::Image"* %11) #6
  br i1 %12, label %20, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.aura_extra::ImageWindowDelegate", %"class.aura_extra::ImageWindowDelegate"* %0, i64 0, i32 6
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.aura_extra::ImageWindowDelegate", %"class.aura_extra::ImageWindowDelegate"* %0, i64 0, i32 4
  %19 = call zeroext i1 @_ZNK3gfx8Vector2d6IsZeroEv(%"class.gfx::Vector2d"* %18) #6
  br i1 %19, label %23, label %20

20:                                               ; preds = %13, %17, %10
  %21 = getelementptr inbounds %"class.ui::PaintRecorder", %"class.ui::PaintRecorder"* %3, i64 0, i32 3
  %22 = load i32, i32* %7, align 8
  call void @_ZN3gfx6Canvas9DrawColorEj(%"class.gfx::Canvas"* %21, i32 %22) #6
  br label %23

23:                                               ; preds = %2, %20, %17
  %24 = getelementptr inbounds %"class.aura_extra::ImageWindowDelegate", %"class.aura_extra::ImageWindowDelegate"* %0, i64 0, i32 3
  %25 = call zeroext i1 @_ZNK3gfx5Image7IsEmptyEv(%"class.gfx::Image"* %24) #6
  br i1 %25, label %33, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.ui::PaintRecorder", %"class.ui::PaintRecorder"* %3, i64 0, i32 3
  %28 = bitcast %"class.gfx::ImageSkia"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #6
  call void @_ZNK3gfx5Image11AsImageSkiaEv(%"class.gfx::ImageSkia"* nonnull sret %4, %"class.gfx::Image"* %24) #6
  %29 = getelementptr inbounds %"class.aura_extra::ImageWindowDelegate", %"class.aura_extra::ImageWindowDelegate"* %0, i64 0, i32 4, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.aura_extra::ImageWindowDelegate", %"class.aura_extra::ImageWindowDelegate"* %0, i64 0, i32 4, i32 1
  %32 = load i32, i32* %31, align 4
  call void @_ZN3gfx6Canvas12DrawImageIntERKNS_9ImageSkiaEii(%"class.gfx::Canvas"* %27, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %4, i32 %30, i32 %32) #6
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #6
  br label %33

33:                                               ; preds = %26, %23
  call void @_ZN2ui13PaintRecorderD1Ev(%"class.ui::PaintRecorder"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 3536, i8* nonnull %5) #6
  ret void
}

declare void @_ZN2ui13PaintRecorderC1ERKNS_12PaintContextERKN3gfx4SizeE(%"class.ui::PaintRecorder"*, %"class.ui::PaintContext"*, %"class.gfx::Size"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK3gfx8Vector2d6IsZeroEv(%"class.gfx::Vector2d"*) local_unnamed_addr #1

declare void @_ZN3gfx6Canvas9DrawColorEj(%"class.gfx::Canvas"*, i32) local_unnamed_addr #1

declare void @_ZN3gfx6Canvas12DrawImageIntERKNS_9ImageSkiaEii(%"class.gfx::Canvas"*, %"class.gfx::ImageSkia"* dereferenceable(8), i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2ui13PaintRecorderD1Ev(%"class.ui::PaintRecorder"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10aura_extra19ImageWindowDelegate26OnDeviceScaleFactorChangedEff(%"class.aura_extra::ImageWindowDelegate"* nocapture, float, float) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10aura_extra19ImageWindowDelegate18OnWindowDestroyingEPN4aura6WindowE(%"class.aura_extra::ImageWindowDelegate"* nocapture, %"class.aura::Window"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10aura_extra19ImageWindowDelegate17OnWindowDestroyedEPN4aura6WindowE(%"class.aura_extra::ImageWindowDelegate"*, %"class.aura::Window"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.aura_extra::ImageWindowDelegate"* %0, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.aura_extra::ImageWindowDelegate"* %0 to void (%"class.aura_extra::ImageWindowDelegate"*)***
  %6 = load void (%"class.aura_extra::ImageWindowDelegate"*)**, void (%"class.aura_extra::ImageWindowDelegate"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.aura_extra::ImageWindowDelegate"*)*, void (%"class.aura_extra::ImageWindowDelegate"*)** %6, i64 1
  %8 = load void (%"class.aura_extra::ImageWindowDelegate"*)*, void (%"class.aura_extra::ImageWindowDelegate"*)** %7, align 8
  tail call void %8(%"class.aura_extra::ImageWindowDelegate"* nonnull %0) #6
  br label %9

9:                                                ; preds = %4, %2
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10aura_extra19ImageWindowDelegate31OnWindowTargetVisibilityChangedEb(%"class.aura_extra::ImageWindowDelegate"* nocapture, i1 zeroext) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK10aura_extra19ImageWindowDelegate14HasHitTestMaskEv(%"class.aura_extra::ImageWindowDelegate"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK10aura_extra19ImageWindowDelegate14GetHitTestMaskEP6SkPath(%"class.aura_extra::ImageWindowDelegate"* nocapture, %class.SkPath* nocapture) unnamed_addr #5 align 2 {
  ret void
}

declare void @_ZN2ui12EventHandler7OnEventEPNS_5EventE(%"class.ui::EventHandler"*, %"class.ui::Event"*) unnamed_addr #1

declare void @_ZN2ui12EventHandler10OnKeyEventEPNS_8KeyEventE(%"class.ui::EventHandler"*, %"class.ui::KeyEvent"*) unnamed_addr #1

declare void @_ZN2ui12EventHandler12OnMouseEventEPNS_10MouseEventE(%"class.ui::EventHandler"*, %"class.ui::MouseEvent"*) unnamed_addr #1

declare void @_ZN2ui12EventHandler13OnScrollEventEPNS_11ScrollEventE(%"class.ui::EventHandler"*, %"class.ui::ScrollEvent"*) unnamed_addr #1

declare void @_ZN2ui12EventHandler12OnTouchEventEPNS_10TouchEventE(%"class.ui::EventHandler"*, %"class.ui::TouchEvent"*) unnamed_addr #1

declare void @_ZN2ui12EventHandler14OnGestureEventEPNS_12GestureEventE(%"class.ui::EventHandler"*, %"class.ui::GestureEvent"*) unnamed_addr #1

declare void @_ZN2ui12EventHandler12OnCancelModeEPNS_15CancelModeEventE(%"class.ui::EventHandler"*, %"class.ui::CancelModeEvent"*) unnamed_addr #1

declare { i8*, i64 } @_ZNK2ui12EventHandler13GetLogContextEv(%"class.ui::EventHandler"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowDelegate24OnWindowOcclusionChangedENS_6Window14OcclusionStateE(%"class.aura::WindowDelegate"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK4aura14WindowDelegate30RequiresDoubleTapGestureEventsEv(%"class.aura::WindowDelegate"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowDelegate17UpdateVisualStateEv(%"class.aura::WindowDelegate"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN2ui12EventHandlerC2Ev(%"class.ui::EventHandler"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
