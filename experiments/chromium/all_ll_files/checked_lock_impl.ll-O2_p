; ModuleID = '../../base/task/common/checked_lock_impl.cc'
source_filename = "../../base/task/common/checked_lock_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [88 x i8] }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.base::internal::CheckedLockImpl" = type <{ %"class.base::Lock", i8, i8, [6 x i8] }>
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker" = type { %"class.base::Lock", %"class.std::__1::unordered_map", %"class.base::ThreadLocalOwnedPointer" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.base::ThreadLocalOwnedPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.base::internal::CheckedLockImpl"** }
%"class.std::__1::tuple.20" = type { i8 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24", %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.21" }
%"struct.std::__1::pair.21" = type { %"class.base::internal::CheckedLockImpl"*, %"class.base::internal::CheckedLockImpl"* }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.7"*, i8, [7 x i8] }>
%"class.std::__1::allocator.7" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::ConditionVariable" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t*, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.17, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.17 = type { i64 }

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4base8internal15CheckedLockImplES6_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJRKS6_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4base8internal15CheckedLockImplES6_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4base8internal15CheckedLockImplES6_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4base8internal15CheckedLockImplES6_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEE = comdat any

$_ZN4base23ThreadLocalOwnedPointerINSt3__16vectorIPKNS_8internal15CheckedLockImplENS1_9allocatorIS6_EEEEE12DeleteTlsPtrEPv = comdat any

@_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN4base8internal15CheckedLockImplC1Ev = hidden unnamed_addr alias void (%"class.base::internal::CheckedLockImpl"*), void (%"class.base::internal::CheckedLockImpl"*)* @_ZN4base8internal15CheckedLockImplC2Ev
@_ZN4base8internal15CheckedLockImplC1EPKS1_ = hidden unnamed_addr alias void (%"class.base::internal::CheckedLockImpl"*, %"class.base::internal::CheckedLockImpl"*), void (%"class.base::internal::CheckedLockImpl"*, %"class.base::internal::CheckedLockImpl"*)* @_ZN4base8internal15CheckedLockImplC2EPKS1_
@_ZN4base8internal15CheckedLockImplC1ENS0_20UniversalPredecessorE = hidden unnamed_addr alias void (%"class.base::internal::CheckedLockImpl"*), void (%"class.base::internal::CheckedLockImpl"*)* @_ZN4base8internal15CheckedLockImplC2ENS0_20UniversalPredecessorE
@_ZN4base8internal15CheckedLockImplC1ENS0_18UniversalSuccessorE = hidden unnamed_addr alias void (%"class.base::internal::CheckedLockImpl"*), void (%"class.base::internal::CheckedLockImpl"*)* @_ZN4base8internal15CheckedLockImplC2ENS0_18UniversalSuccessorE
@_ZN4base8internal15CheckedLockImplD1Ev = hidden unnamed_addr alias void (%"class.base::internal::CheckedLockImpl"*), void (%"class.base::internal::CheckedLockImpl"*)* @_ZN4base8internal15CheckedLockImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal15CheckedLockImplC2Ev(%"class.base::internal::CheckedLockImpl"*) unnamed_addr #0 align 2 {
  tail call void @_ZN4base8internal15CheckedLockImplC2EPKS1_(%"class.base::internal::CheckedLockImpl"* %0, %"class.base::internal::CheckedLockImpl"* null)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal15CheckedLockImplC2EPKS1_(%"class.base::internal::CheckedLockImpl"*, %"class.base::internal::CheckedLockImpl"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::CheckedLockImpl", %"class.base::internal::CheckedLockImpl"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %3) #10
  %4 = getelementptr inbounds %"class.base::internal::CheckedLockImpl", %"class.base::internal::CheckedLockImpl"* %0, i64 0, i32 1
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.base::internal::CheckedLockImpl", %"class.base::internal::CheckedLockImpl"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 1
  %6 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 0) acquire, align 8
  %7 = icmp ugt i64 %6, 1
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 0)) #10
  br i1 %9, label %10, label %11

10:                                               ; preds = %8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 0), i8 0, i64 88, i1 false) #10
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 0) to %"class.base::internal::LockImpl"*)) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 40), i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 72) to i32*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 80) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* nonnull @_ZN4base23ThreadLocalOwnedPointerINSt3__16vectorIPKNS_8internal15CheckedLockImplENS1_9allocatorIS6_EEEEE12DeleteTlsPtrEPv) #10
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE to i8*)) #10
  br label %13

11:                                               ; preds = %8
  %12 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 0) acquire, align 8
  br label %13

13:                                               ; preds = %2, %10, %11
  %14 = phi i64 [ %6, %2 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 0) to i64), %10 ], [ %12, %11 ]
  %15 = inttoptr i64 %14 to %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker"*
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_122SafeAcquisitionTracker12RegisterLockEPKNS0_15CheckedLockImplES5_(%"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker"* %15, %"class.base::internal::CheckedLockImpl"* %0, %"class.base::internal::CheckedLockImpl"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN4base8internal12_GLOBAL__N_122SafeAcquisitionTracker12RegisterLockEPKNS0_15CheckedLockImplES5_(%"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker"*, %"class.base::internal::CheckedLockImpl"*, %"class.base::internal::CheckedLockImpl"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.20", align 1
  %6 = alloca %"class.base::internal::CheckedLockImpl"*, align 8
  store %"class.base::internal::CheckedLockImpl"* %1, %"class.base::internal::CheckedLockImpl"** %6, align 8
  %7 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker", %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %7) #10
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10, !prof !2

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker", %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %11) #10
  br label %12

12:                                               ; preds = %3, %10
  %13 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker", %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker"* %0, i64 0, i32 1, i32 0
  %14 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::CheckedLockImpl"** %6, %"class.base::internal::CheckedLockImpl"*** %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::tuple.20", %"class.std::__1::tuple.20"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #10
  %17 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4base8internal15CheckedLockImplES6_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJRKS6_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %13, %"class.base::internal::CheckedLockImpl"** nonnull dereferenceable(8) %6, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.20"* nonnull dereferenceable(1) %5) #10
  %18 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %17, 0
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %18, i64 3
  %20 = bitcast %"struct.std::__1::__hash_node_base"* %19 to %"class.base::internal::CheckedLockImpl"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  store %"class.base::internal::CheckedLockImpl"* %2, %"class.base::internal::CheckedLockImpl"** %20, align 8
  %21 = load %"class.base::internal::CheckedLockImpl"*, %"class.base::internal::CheckedLockImpl"** %6, align 8
  %22 = ptrtoint %"class.base::internal::CheckedLockImpl"* %21 to i64
  %23 = lshr i64 %22, 32
  %24 = shl i64 %22, 3
  %25 = and i64 %24, 4294967288
  %26 = add nuw nsw i64 %25, 8
  %27 = xor i64 %26, %23
  %28 = mul i64 %27, -7070675565921424023
  %29 = lshr i64 %28, 47
  %30 = xor i64 %28, %23
  %31 = xor i64 %30, %29
  %32 = mul i64 %31, -7070675565921424023
  %33 = lshr i64 %32, 47
  %34 = xor i64 %33, %32
  %35 = mul i64 %34, -7070675565921424023
  %36 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker", %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %87, label %39

39:                                               ; preds = %12
  %40 = call i64 @llvm.ctpop.i64(i64 %37) #10, !range !3
  %41 = icmp ugt i64 %40, 1
  br i1 %41, label %45, label %42

42:                                               ; preds = %39
  %43 = add i64 %37, -1
  %44 = and i64 %35, %43
  br label %49

45:                                               ; preds = %39
  %46 = icmp ult i64 %35, %37
  br i1 %46, label %49, label %47

47:                                               ; preds = %45
  %48 = urem i64 %35, %37
  br label %49

49:                                               ; preds = %47, %45, %42
  %50 = phi i64 [ %44, %42 ], [ %48, %47 ], [ %35, %45 ]
  %51 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker", %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %51, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %50
  %54 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base"* %54, null
  br i1 %55, label %87, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 0, i32 0
  %58 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %57, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base"* %58, null
  br i1 %59, label %87, label %60

60:                                               ; preds = %56
  %61 = add i64 %37, -1
  br label %62

62:                                               ; preds = %83, %60
  %63 = phi %"struct.std::__1::__hash_node_base"* [ %58, %60 ], [ %85, %83 ]
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %63, i64 1
  %65 = bitcast %"struct.std::__1::__hash_node_base"* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = icmp eq i64 %35, %66
  br i1 %67, label %78, label %68

68:                                               ; preds = %62
  br i1 %41, label %71, label %69

69:                                               ; preds = %68
  %70 = and i64 %66, %61
  br label %75

71:                                               ; preds = %68
  %72 = icmp ult i64 %66, %37
  br i1 %72, label %75, label %73

73:                                               ; preds = %71
  %74 = urem i64 %66, %37
  br label %75

75:                                               ; preds = %73, %71, %69
  %76 = phi i64 [ %70, %69 ], [ %74, %73 ], [ %66, %71 ]
  %77 = icmp eq i64 %76, %50
  br i1 %77, label %83, label %87

78:                                               ; preds = %62
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %63, i64 2
  %80 = bitcast %"struct.std::__1::__hash_node_base"* %79 to %"class.base::internal::CheckedLockImpl"**
  %81 = load %"class.base::internal::CheckedLockImpl"*, %"class.base::internal::CheckedLockImpl"** %80, align 8
  %82 = icmp eq %"class.base::internal::CheckedLockImpl"* %81, %21
  br i1 %82, label %88, label %83

83:                                               ; preds = %78, %75
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %63, i64 0, i32 0
  %85 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %84, align 8
  %86 = icmp eq %"struct.std::__1::__hash_node_base"* %85, null
  br i1 %86, label %87, label %62

87:                                               ; preds = %83, %75, %56, %49, %12
  call void @abort() #11
  unreachable

88:                                               ; preds = %78
  %89 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal15CheckedLockImplC2ENS0_20UniversalPredecessorE(%"class.base::internal::CheckedLockImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::CheckedLockImpl", %"class.base::internal::CheckedLockImpl"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %2) #10
  %3 = getelementptr inbounds %"class.base::internal::CheckedLockImpl", %"class.base::internal::CheckedLockImpl"* %0, i64 0, i32 1
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %"class.base::internal::CheckedLockImpl", %"class.base::internal::CheckedLockImpl"* %0, i64 0, i32 2
  store i8 0, i8* %4, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal15CheckedLockImplC2ENS0_18UniversalSuccessorE(%"class.base::internal::CheckedLockImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::CheckedLockImpl", %"class.base::internal::CheckedLockImpl"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %2) #10
  %3 = getelementptr inbounds %"class.base::internal::CheckedLockImpl", %"class.base::internal::CheckedLockImpl"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.base::internal::CheckedLockImpl", %"class.base::internal::CheckedLockImpl"* %0, i64 0, i32 2
  store i8 1, i8* %4, align 1
  %5 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 0) acquire, align 8
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 0)) #10
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 0), i8 0, i64 88, i1 false) #10
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 0) to %"class.base::internal::LockImpl"*)) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 40), i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 72) to i32*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 80) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* nonnull @_ZN4base23ThreadLocalOwnedPointerINSt3__16vectorIPKNS_8internal15CheckedLockImplENS1_9allocatorIS6_EEEEE12DeleteTlsPtrEPv) #10
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE to i8*)) #10
  br label %12

10:                                               ; preds = %7
  %11 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 0) acquire, align 8
  br label %12

12:                                               ; preds = %1, %9, %10
  %13 = phi i64 [ %5, %1 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 0) to i64), %9 ], [ %11, %10 ]
  %14 = inttoptr i64 %13 to %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker"*
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_122SafeAcquisitionTracker12RegisterLockEPKNS0_15CheckedLockImplES5_(%"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker"* %14, %"class.base::internal::CheckedLockImpl"* %0, %"class.base::internal::CheckedLockImpl"* null)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal15CheckedLockImplD2Ev(%"class.base::internal::CheckedLockImpl"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.22", align 8
  %3 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 0) acquire, align 8
  %4 = icmp ugt i64 %3, 1
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 0)) #10
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 0), i8 0, i64 88, i1 false) #10
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 0) to %"class.base::internal::LockImpl"*)) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 40), i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 72) to i32*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 80) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* nonnull @_ZN4base23ThreadLocalOwnedPointerINSt3__16vectorIPKNS_8internal15CheckedLockImplENS1_9allocatorIS6_EEEEE12DeleteTlsPtrEPv) #10
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE to i8*)) #10
  br label %10

8:                                                ; preds = %5
  %9 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 0) acquire, align 8
  br label %10

10:                                               ; preds = %1, %7, %8
  %11 = phi i64 [ %3, %1 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 0) to i64), %7 ], [ %9, %8 ]
  %12 = inttoptr i64 %11 to %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker"*
  %13 = ptrtoint %"class.base::internal::CheckedLockImpl"* %0 to i64
  %14 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker", %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker"* %12, i64 0, i32 0, i32 0, i32 0
  %15 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %14) #10
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %19, label %17, !prof !2

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker", %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker"* %12, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %18) #10
  br label %19

19:                                               ; preds = %17, %10
  %20 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker", %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker"* %12, i64 0, i32 1, i32 0
  %21 = lshr i64 %13, 32
  %22 = shl i64 %13, 3
  %23 = and i64 %22, 4294967288
  %24 = add nuw nsw i64 %23, 8
  %25 = xor i64 %24, %21
  %26 = mul i64 %25, -7070675565921424023
  %27 = lshr i64 %26, 47
  %28 = xor i64 %26, %21
  %29 = xor i64 %28, %27
  %30 = mul i64 %29, -7070675565921424023
  %31 = lshr i64 %30, 47
  %32 = xor i64 %31, %30
  %33 = mul i64 %32, -7070675565921424023
  %34 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker", %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker"* %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %93, label %37

37:                                               ; preds = %19
  %38 = tail call i64 @llvm.ctpop.i64(i64 %35) #10, !range !3
  %39 = icmp ugt i64 %38, 1
  br i1 %39, label %43, label %40

40:                                               ; preds = %37
  %41 = add i64 %35, -1
  %42 = and i64 %41, %33
  br label %47

43:                                               ; preds = %37
  %44 = icmp ult i64 %33, %35
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %33, %35
  br label %47

47:                                               ; preds = %45, %43, %40
  %48 = phi i64 [ %42, %40 ], [ %46, %45 ], [ %33, %43 ]
  %49 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %49, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %50, i64 %48
  %52 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base"* %52, null
  br i1 %53, label %93, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %52, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base"* %56, null
  br i1 %57, label %93, label %58

58:                                               ; preds = %54
  %59 = add i64 %35, -1
  br label %60

60:                                               ; preds = %81, %58
  %61 = phi %"struct.std::__1::__hash_node_base"* [ %56, %58 ], [ %83, %81 ]
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %61, i64 1
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, %33
  br i1 %65, label %76, label %66

66:                                               ; preds = %60
  br i1 %39, label %69, label %67

67:                                               ; preds = %66
  %68 = and i64 %64, %59
  br label %73

69:                                               ; preds = %66
  %70 = icmp ult i64 %64, %35
  br i1 %70, label %73, label %71

71:                                               ; preds = %69
  %72 = urem i64 %64, %35
  br label %73

73:                                               ; preds = %71, %69, %67
  %74 = phi i64 [ %68, %67 ], [ %72, %71 ], [ %64, %69 ]
  %75 = icmp eq i64 %74, %48
  br i1 %75, label %81, label %93

76:                                               ; preds = %60
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %61, i64 2
  %78 = bitcast %"struct.std::__1::__hash_node_base"* %77 to %"class.base::internal::CheckedLockImpl"**
  %79 = load %"class.base::internal::CheckedLockImpl"*, %"class.base::internal::CheckedLockImpl"** %78, align 8
  %80 = icmp eq %"class.base::internal::CheckedLockImpl"* %79, %0
  br i1 %80, label %85, label %81

81:                                               ; preds = %76, %73
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %61, i64 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base"* %83, null
  br i1 %84, label %93, label %60

85:                                               ; preds = %76
  %86 = bitcast %"class.std::__1::unique_ptr.22"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #10
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4base8internal15CheckedLockImplES6_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEE(%"class.std::__1::unique_ptr.22"* nonnull sret %2, %"class.std::__1::__hash_table"* %20, %"struct.std::__1::__hash_node_base"* nonnull %61) #10
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %2, i64 0, i32 0, i32 0, i32 0
  %88 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %87, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %87, align 8
  %89 = icmp eq %"struct.std::__1::__hash_node"* %88, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %85
  %91 = bitcast %"struct.std::__1::__hash_node"* %88 to i8*
  call void @_ZdlPv(i8* %91) #12
  br label %92

92:                                               ; preds = %90, %85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #10
  br label %93

93:                                               ; preds = %73, %81, %19, %47, %54, %92
  %94 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %14) #10
  %95 = getelementptr inbounds %"class.base::internal::CheckedLockImpl", %"class.base::internal::CheckedLockImpl"* %0, i64 0, i32 0, i32 0
  call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %95) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal15CheckedLockImpl31AssertNoLockHeldOnCurrentThreadEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 0) acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %8, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 0)) #10
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 0), i8 0, i64 88, i1 false) #10
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 0) to %"class.base::internal::LockImpl"*)) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 40), i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 72) to i32*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 80) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* nonnull @_ZN4base23ThreadLocalOwnedPointerINSt3__16vectorIPKNS_8internal15CheckedLockImplENS1_9allocatorIS6_EEEEE12DeleteTlsPtrEPv) #10
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE to i8*)) #10
  br label %8

6:                                                ; preds = %3
  %7 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 0) acquire, align 8
  br label %8

8:                                                ; preds = %0, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal15CheckedLockImpl7AcquireEv(%"class.base::internal::CheckedLockImpl"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::CheckedLockImpl", %"class.base::internal::CheckedLockImpl"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %2) #10
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %7, label %5, !prof !2

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::internal::CheckedLockImpl", %"class.base::internal::CheckedLockImpl"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %6) #10
  br label %7

7:                                                ; preds = %1, %5
  %8 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 0) acquire, align 8
  %9 = icmp ugt i64 %8, 1
  br i1 %9, label %15, label %10

10:                                               ; preds = %7
  %11 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 0)) #10
  br i1 %11, label %12, label %13

12:                                               ; preds = %10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 0), i8 0, i64 88, i1 false) #10
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 0) to %"class.base::internal::LockImpl"*)) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 40), i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 72) to i32*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 80) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* nonnull @_ZN4base23ThreadLocalOwnedPointerINSt3__16vectorIPKNS_8internal15CheckedLockImplENS1_9allocatorIS6_EEEEE12DeleteTlsPtrEPv) #10
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE to i8*)) #10
  br label %15

13:                                               ; preds = %10
  %14 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 0) acquire, align 8
  br label %15

15:                                               ; preds = %7, %12, %13
  %16 = phi i64 [ %8, %7 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 0) to i64), %12 ], [ %14, %13 ]
  %17 = inttoptr i64 %16 to %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker"*
  %18 = ptrtoint %"class.base::internal::CheckedLockImpl"* %0 to i64
  %19 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker", %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker"* %17, i64 0, i32 2, i32 0
  %20 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %19) #10
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %36

22:                                               ; preds = %15
  %23 = tail call i8* @_Znwm(i64 24) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 24, i1 false) #10
  %24 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %19) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %19, i8* nonnull %23) #10
  %25 = icmp eq i8* %24, null
  br i1 %25, label %36, label %26

26:                                               ; preds = %22
  %27 = bitcast i8* %24 to %"class.base::internal::CheckedLockImpl"***
  %28 = load %"class.base::internal::CheckedLockImpl"**, %"class.base::internal::CheckedLockImpl"*** %27, align 8
  %29 = icmp eq %"class.base::internal::CheckedLockImpl"** %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint %"class.base::internal::CheckedLockImpl"** %28 to i64
  %32 = getelementptr inbounds i8, i8* %24, i64 8
  %33 = bitcast i8* %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast %"class.base::internal::CheckedLockImpl"** %28 to i8*
  tail call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %30, %26
  tail call void @_ZdlPv(i8* nonnull %24) #12
  br label %36

36:                                               ; preds = %35, %22, %15
  %37 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %19) #10
  %38 = bitcast i8* %37 to %"class.base::internal::CheckedLockImpl"***
  %39 = load %"class.base::internal::CheckedLockImpl"**, %"class.base::internal::CheckedLockImpl"*** %38, align 8
  %40 = getelementptr inbounds i8, i8* %37, i64 8
  %41 = bitcast i8* %40 to %"class.base::internal::CheckedLockImpl"***
  %42 = load %"class.base::internal::CheckedLockImpl"**, %"class.base::internal::CheckedLockImpl"*** %41, align 8
  %43 = icmp eq %"class.base::internal::CheckedLockImpl"** %39, %42
  br i1 %43, label %124, label %44

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.base::internal::CheckedLockImpl"*, %"class.base::internal::CheckedLockImpl"** %42, i64 -1
  %46 = load %"class.base::internal::CheckedLockImpl"*, %"class.base::internal::CheckedLockImpl"** %45, align 8
  %47 = getelementptr inbounds %"class.base::internal::CheckedLockImpl", %"class.base::internal::CheckedLockImpl"* %46, i64 0, i32 1
  %48 = load i8, i8* %47, align 8, !range !4
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %124

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker", %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker"* %17, i64 0, i32 0, i32 0, i32 0
  %52 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %51) #10
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %56, label %54, !prof !2

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker", %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker"* %17, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %55) #10
  br label %56

56:                                               ; preds = %54, %50
  %57 = lshr i64 %18, 32
  %58 = shl i64 %18, 3
  %59 = and i64 %58, 4294967288
  %60 = add nuw nsw i64 %59, 8
  %61 = xor i64 %60, %57
  %62 = mul i64 %61, -7070675565921424023
  %63 = lshr i64 %62, 47
  %64 = xor i64 %62, %57
  %65 = xor i64 %64, %63
  %66 = mul i64 %65, -7070675565921424023
  %67 = lshr i64 %66, 47
  %68 = xor i64 %67, %66
  %69 = mul i64 %68, -7070675565921424023
  %70 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker", %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker"* %17, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %121, label %73

73:                                               ; preds = %56
  %74 = tail call i64 @llvm.ctpop.i64(i64 %71) #10, !range !3
  %75 = icmp ugt i64 %74, 1
  br i1 %75, label %79, label %76

76:                                               ; preds = %73
  %77 = add i64 %71, -1
  %78 = and i64 %77, %69
  br label %83

79:                                               ; preds = %73
  %80 = icmp ult i64 %69, %71
  br i1 %80, label %83, label %81

81:                                               ; preds = %79
  %82 = urem i64 %69, %71
  br label %83

83:                                               ; preds = %81, %79, %76
  %84 = phi i64 [ %78, %76 ], [ %82, %81 ], [ %69, %79 ]
  %85 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker", %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker"* %17, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %85, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %84
  %88 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %87, align 8
  %89 = icmp eq %"struct.std::__1::__hash_node_base"* %88, null
  br i1 %89, label %121, label %90

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %88, i64 0, i32 0
  %92 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %91, align 8
  %93 = icmp eq %"struct.std::__1::__hash_node_base"* %92, null
  br i1 %93, label %121, label %94

94:                                               ; preds = %90
  %95 = add i64 %71, -1
  br label %96

96:                                               ; preds = %117, %94
  %97 = phi %"struct.std::__1::__hash_node_base"* [ %92, %94 ], [ %119, %117 ]
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %97, i64 1
  %99 = bitcast %"struct.std::__1::__hash_node_base"* %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = icmp eq i64 %100, %69
  br i1 %101, label %112, label %102

102:                                              ; preds = %96
  br i1 %75, label %105, label %103

103:                                              ; preds = %102
  %104 = and i64 %100, %95
  br label %109

105:                                              ; preds = %102
  %106 = icmp ult i64 %100, %71
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %100, %71
  br label %109

109:                                              ; preds = %107, %105, %103
  %110 = phi i64 [ %104, %103 ], [ %108, %107 ], [ %100, %105 ]
  %111 = icmp eq i64 %110, %84
  br i1 %111, label %117, label %121

112:                                              ; preds = %96
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %97, i64 2
  %114 = bitcast %"struct.std::__1::__hash_node_base"* %113 to %"class.base::internal::CheckedLockImpl"**
  %115 = load %"class.base::internal::CheckedLockImpl"*, %"class.base::internal::CheckedLockImpl"** %114, align 8
  %116 = icmp eq %"class.base::internal::CheckedLockImpl"* %115, %0
  br i1 %116, label %122, label %117

117:                                              ; preds = %112, %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %97, i64 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %118, align 8
  %120 = icmp eq %"struct.std::__1::__hash_node_base"* %119, null
  br i1 %120, label %121, label %96

121:                                              ; preds = %117, %109, %90, %83, %56
  tail call void @abort() #11
  unreachable

122:                                              ; preds = %112
  %123 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %51) #10
  br label %124

124:                                              ; preds = %122, %44, %36
  %125 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %19) #10
  %126 = icmp eq i8* %125, null
  br i1 %126, label %127, label %141

127:                                              ; preds = %124
  %128 = tail call i8* @_Znwm(i64 24) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %128, i8 0, i64 24, i1 false) #10
  %129 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %19) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %19, i8* nonnull %128) #10
  %130 = icmp eq i8* %129, null
  br i1 %130, label %141, label %131

131:                                              ; preds = %127
  %132 = bitcast i8* %129 to %"class.base::internal::CheckedLockImpl"***
  %133 = load %"class.base::internal::CheckedLockImpl"**, %"class.base::internal::CheckedLockImpl"*** %132, align 8
  %134 = icmp eq %"class.base::internal::CheckedLockImpl"** %133, null
  br i1 %134, label %140, label %135

135:                                              ; preds = %131
  %136 = ptrtoint %"class.base::internal::CheckedLockImpl"** %133 to i64
  %137 = getelementptr inbounds i8, i8* %129, i64 8
  %138 = bitcast i8* %137 to i64*
  store i64 %136, i64* %138, align 8
  %139 = bitcast %"class.base::internal::CheckedLockImpl"** %133 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %135, %131
  tail call void @_ZdlPv(i8* nonnull %129) #12
  br label %141

141:                                              ; preds = %140, %127, %124
  %142 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %19) #10
  %143 = getelementptr inbounds i8, i8* %142, i64 8
  %144 = bitcast i8* %143 to %"class.base::internal::CheckedLockImpl"***
  %145 = load %"class.base::internal::CheckedLockImpl"**, %"class.base::internal::CheckedLockImpl"*** %144, align 8
  %146 = getelementptr inbounds i8, i8* %142, i64 16
  %147 = bitcast i8* %146 to %"class.base::internal::CheckedLockImpl"***
  %148 = load %"class.base::internal::CheckedLockImpl"**, %"class.base::internal::CheckedLockImpl"*** %147, align 8
  %149 = icmp eq %"class.base::internal::CheckedLockImpl"** %145, %148
  %150 = ptrtoint %"class.base::internal::CheckedLockImpl"** %148 to i64
  br i1 %149, label %156, label %151

151:                                              ; preds = %141
  %152 = bitcast %"class.base::internal::CheckedLockImpl"** %145 to i64*
  store i64 %18, i64* %152, align 8
  %153 = getelementptr inbounds %"class.base::internal::CheckedLockImpl"*, %"class.base::internal::CheckedLockImpl"** %145, i64 1
  %154 = ptrtoint %"class.base::internal::CheckedLockImpl"** %153 to i64
  %155 = bitcast i8* %143 to i64*
  store i64 %154, i64* %155, align 8
  br label %213

156:                                              ; preds = %141
  %157 = ptrtoint %"class.base::internal::CheckedLockImpl"** %145 to i64
  %158 = bitcast i8* %143 to i64*
  %159 = bitcast i8* %142 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = sub i64 %157, %160
  %162 = ashr exact i64 %161, 3
  %163 = add nsw i64 %162, 1
  %164 = icmp ugt i64 %163, 2305843009213693951
  br i1 %164, label %165, label %167

165:                                              ; preds = %156
  %166 = bitcast i8* %142 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %166) #11
  unreachable

167:                                              ; preds = %156
  %168 = bitcast i8* %146 to i64*
  %169 = sub i64 %150, %160
  %170 = ashr exact i64 %169, 3
  %171 = icmp ult i64 %170, 1152921504606846975
  br i1 %171, label %172, label %180

172:                                              ; preds = %167
  %173 = ashr exact i64 %169, 2
  %174 = icmp ult i64 %173, %163
  %175 = select i1 %174, i64 %163, i64 %173
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %185, label %177

177:                                              ; preds = %172
  %178 = icmp ugt i64 %175, 2305843009213693951
  br i1 %178, label %179, label %180

179:                                              ; preds = %177
  tail call void @abort() #11
  unreachable

180:                                              ; preds = %177, %167
  %181 = phi i64 [ %175, %177 ], [ 2305843009213693951, %167 ]
  %182 = shl i64 %181, 3
  %183 = tail call i8* @_Znwm(i64 %182) #12
  %184 = bitcast i8* %183 to %"class.base::internal::CheckedLockImpl"**
  br label %185

185:                                              ; preds = %180, %172
  %186 = phi i64 [ %181, %180 ], [ 0, %172 ]
  %187 = phi %"class.base::internal::CheckedLockImpl"** [ %184, %180 ], [ null, %172 ]
  %188 = getelementptr inbounds %"class.base::internal::CheckedLockImpl"*, %"class.base::internal::CheckedLockImpl"** %187, i64 %162
  %189 = getelementptr inbounds %"class.base::internal::CheckedLockImpl"*, %"class.base::internal::CheckedLockImpl"** %187, i64 %186
  %190 = ptrtoint %"class.base::internal::CheckedLockImpl"** %189 to i64
  %191 = bitcast %"class.base::internal::CheckedLockImpl"** %188 to i64*
  store i64 %18, i64* %191, align 8
  %192 = getelementptr inbounds %"class.base::internal::CheckedLockImpl"*, %"class.base::internal::CheckedLockImpl"** %188, i64 1
  %193 = ptrtoint %"class.base::internal::CheckedLockImpl"** %192 to i64
  %194 = bitcast i8* %142 to %"class.base::internal::CheckedLockImpl"***
  %195 = load %"class.base::internal::CheckedLockImpl"**, %"class.base::internal::CheckedLockImpl"*** %194, align 8
  %196 = load i64, i64* %158, align 8
  %197 = ptrtoint %"class.base::internal::CheckedLockImpl"** %195 to i64
  %198 = sub i64 %196, %197
  %199 = ashr exact i64 %198, 3
  %200 = sub nsw i64 0, %199
  %201 = getelementptr inbounds %"class.base::internal::CheckedLockImpl"*, %"class.base::internal::CheckedLockImpl"** %188, i64 %200
  %202 = ptrtoint %"class.base::internal::CheckedLockImpl"** %201 to i64
  %203 = icmp sgt i64 %198, 0
  br i1 %203, label %204, label %208

204:                                              ; preds = %185
  %205 = bitcast %"class.base::internal::CheckedLockImpl"** %201 to i8*
  %206 = bitcast %"class.base::internal::CheckedLockImpl"** %195 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %205, i8* align 8 %206, i64 %198, i1 false) #10
  %207 = load %"class.base::internal::CheckedLockImpl"**, %"class.base::internal::CheckedLockImpl"*** %194, align 8
  br label %208

208:                                              ; preds = %204, %185
  %209 = phi %"class.base::internal::CheckedLockImpl"** [ %195, %185 ], [ %207, %204 ]
  store i64 %202, i64* %159, align 8
  store i64 %193, i64* %158, align 8
  store i64 %190, i64* %168, align 8
  %210 = icmp eq %"class.base::internal::CheckedLockImpl"** %209, null
  br i1 %210, label %213, label %211

211:                                              ; preds = %208
  %212 = bitcast %"class.base::internal::CheckedLockImpl"** %209 to i8*
  tail call void @_ZdlPv(i8* %212) #12
  br label %213

213:                                              ; preds = %151, %208, %211
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal15CheckedLockImpl7ReleaseEv(%"class.base::internal::CheckedLockImpl"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::CheckedLockImpl", %"class.base::internal::CheckedLockImpl"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %2) #10
  %4 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 0) acquire, align 8
  %5 = icmp ugt i64 %4, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 0)) #10
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 0), i8 0, i64 88, i1 false) #10
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 0) to %"class.base::internal::LockImpl"*)) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 40), i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 72) to i32*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 80) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* nonnull @_ZN4base23ThreadLocalOwnedPointerINSt3__16vectorIPKNS_8internal15CheckedLockImplENS1_9allocatorIS6_EEEEE12DeleteTlsPtrEPv) #10
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE to i8*)) #10
  br label %11

9:                                                ; preds = %6
  %10 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 0) acquire, align 8
  br label %11

11:                                               ; preds = %1, %8, %9
  %12 = phi i64 [ %4, %1 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_126g_safe_acquisition_trackerE, i64 0, i32 1, i64 0) to i64), %8 ], [ %10, %9 ]
  %13 = inttoptr i64 %12 to %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker"*
  %14 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker", %"class.base::internal::(anonymous namespace)::SafeAcquisitionTracker"* %13, i64 0, i32 2, i32 0
  %15 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %14) #10
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %31

17:                                               ; preds = %11
  %18 = tail call i8* @_Znwm(i64 24) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #10
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %14) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %14, i8* nonnull %18) #10
  %20 = icmp eq i8* %19, null
  br i1 %20, label %31, label %21

21:                                               ; preds = %17
  %22 = bitcast i8* %19 to %"class.base::internal::CheckedLockImpl"***
  %23 = load %"class.base::internal::CheckedLockImpl"**, %"class.base::internal::CheckedLockImpl"*** %22, align 8
  %24 = icmp eq %"class.base::internal::CheckedLockImpl"** %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %21
  %26 = ptrtoint %"class.base::internal::CheckedLockImpl"** %23 to i64
  %27 = getelementptr inbounds i8, i8* %19, i64 8
  %28 = bitcast i8* %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = bitcast %"class.base::internal::CheckedLockImpl"** %23 to i8*
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %25, %21
  tail call void @_ZdlPv(i8* nonnull %19) #12
  br label %31

31:                                               ; preds = %30, %17, %11
  %32 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %14) #10
  %33 = bitcast i8* %32 to %"class.base::internal::CheckedLockImpl"***
  %34 = load %"class.base::internal::CheckedLockImpl"**, %"class.base::internal::CheckedLockImpl"*** %33, align 8
  %35 = getelementptr inbounds i8, i8* %32, i64 8
  %36 = bitcast i8* %35 to %"class.base::internal::CheckedLockImpl"***
  %37 = load %"class.base::internal::CheckedLockImpl"**, %"class.base::internal::CheckedLockImpl"*** %36, align 8
  %38 = icmp eq %"class.base::internal::CheckedLockImpl"** %34, %37
  %39 = ptrtoint %"class.base::internal::CheckedLockImpl"** %37 to i64
  br i1 %38, label %47, label %40

40:                                               ; preds = %31, %44
  %41 = phi %"class.base::internal::CheckedLockImpl"** [ %45, %44 ], [ %34, %31 ]
  %42 = load %"class.base::internal::CheckedLockImpl"*, %"class.base::internal::CheckedLockImpl"** %41, align 8
  %43 = icmp eq %"class.base::internal::CheckedLockImpl"* %42, %0
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.base::internal::CheckedLockImpl"*, %"class.base::internal::CheckedLockImpl"** %41, i64 1
  %46 = icmp eq %"class.base::internal::CheckedLockImpl"** %45, %37
  br i1 %46, label %47, label %40

47:                                               ; preds = %44, %40, %31
  %48 = phi %"class.base::internal::CheckedLockImpl"** [ %34, %31 ], [ %41, %40 ], [ %37, %44 ]
  %49 = getelementptr inbounds %"class.base::internal::CheckedLockImpl"*, %"class.base::internal::CheckedLockImpl"** %48, i64 1
  %50 = ptrtoint %"class.base::internal::CheckedLockImpl"** %49 to i64
  %51 = sub i64 %39, %50
  %52 = ashr exact i64 %51, 3
  %53 = icmp eq i64 %51, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %47
  %55 = bitcast %"class.base::internal::CheckedLockImpl"** %48 to i8*
  %56 = bitcast %"class.base::internal::CheckedLockImpl"** %49 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 %51, i1 false) #10
  br label %57

57:                                               ; preds = %47, %54
  %58 = getelementptr inbounds %"class.base::internal::CheckedLockImpl"*, %"class.base::internal::CheckedLockImpl"** %48, i64 %52
  store %"class.base::internal::CheckedLockImpl"** %58, %"class.base::internal::CheckedLockImpl"*** %36, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK4base8internal15CheckedLockImpl14AssertAcquiredEv(%"class.base::internal::CheckedLockImpl"* nocapture) local_unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.base::ConditionVariable"* @_ZN4base8internal15CheckedLockImpl23CreateConditionVariableEv(%"class.base::internal::CheckedLockImpl"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::CheckedLockImpl", %"class.base::internal::CheckedLockImpl"* %0, i64 0, i32 0
  %3 = tail call i8* @_Znwm(i64 64) #12
  %4 = bitcast i8* %3 to %"class.base::ConditionVariable"*
  tail call void @_ZN4base17ConditionVariableC1EPNS_4LockE(%"class.base::ConditionVariable"* nonnull %4, %"class.base::Lock"* %2) #10
  ret %"class.base::ConditionVariable"* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4base8internal15CheckedLockImplES6_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJRKS6_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.base::internal::CheckedLockImpl"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.20"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.base::internal::CheckedLockImpl"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.base::internal::CheckedLockImpl"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #10, !range !3
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base"* %65 to %"class.base::internal::CheckedLockImpl"**
  %67 = load %"class.base::internal::CheckedLockImpl"*, %"class.base::internal::CheckedLockImpl"** %66, align 8
  %68 = icmp eq %"class.base::internal::CheckedLockImpl"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #12, !noalias !5
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !5
  %75 = load i64, i64* %74, align 8, !noalias !5
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !5
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.base::internal::CheckedLockImpl"**
  store %"class.base::internal::CheckedLockImpl"* null, %"class.base::internal::CheckedLockImpl"** %78, align 8, !noalias !5
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !5
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %81, align 8, !noalias !5
  %82 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #10, !range !3
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #10
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4base8internal15CheckedLockImplES6_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #10, !range !3
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base"* %124, %"struct.std::__1::__hash_node_base"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #10, !range !3
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4base8internal15CheckedLockImplES6_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #10
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4base8internal15CheckedLockImplES6_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #10, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #10
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #10, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #10
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4base8internal15CheckedLockImplES6_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4base8internal15CheckedLockImplES6_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #11
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !8

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #10, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to %"class.base::internal::CheckedLockImpl"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to %"class.base::internal::CheckedLockImpl"**
  %112 = load %"class.base::internal::CheckedLockImpl"*, %"class.base::internal::CheckedLockImpl"** %102, align 8
  %113 = load %"class.base::internal::CheckedLockImpl"*, %"class.base::internal::CheckedLockImpl"** %111, align 8
  %114 = icmp eq %"class.base::internal::CheckedLockImpl"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4base8internal15CheckedLockImplES6_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEE(%"class.std::__1::unique_ptr.22"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #10, !range !3
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.4"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.22"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.7"** %98 to %"class.std::__1::__compressed_pair.4"**
  store %"class.std::__1::__compressed_pair.4"* %30, %"class.std::__1::__compressed_pair.4"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #8

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #8

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #3

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base23ThreadLocalOwnedPointerINSt3__16vectorIPKNS_8internal15CheckedLockImplENS1_9allocatorIS6_EEEEE12DeleteTlsPtrEPv(i8*) #0 comdat align 2 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %13, label %3

3:                                                ; preds = %1
  %4 = bitcast i8* %0 to %"class.base::internal::CheckedLockImpl"***
  %5 = load %"class.base::internal::CheckedLockImpl"**, %"class.base::internal::CheckedLockImpl"*** %4, align 8
  %6 = icmp eq %"class.base::internal::CheckedLockImpl"** %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = ptrtoint %"class.base::internal::CheckedLockImpl"** %5 to i64
  %9 = getelementptr inbounds i8, i8* %0, i64 8
  %10 = bitcast i8* %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = bitcast %"class.base::internal::CheckedLockImpl"** %5 to i8*
  tail call void @_ZdlPv(i8* %11) #12
  br label %12

12:                                               ; preds = %3, %7
  tail call void @_ZdlPv(i8* nonnull %0) #12
  br label %13

13:                                               ; preds = %12, %1
  ret void
}

declare void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"*, void (i8*)*) unnamed_addr #3

declare void @_ZN4base17ConditionVariableC1EPNS_4LockE(%"class.base::ConditionVariable"*, %"class.base::Lock"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i64 0, i64 65}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4base8internal15CheckedLockImplES6_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS6_EEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISV_EEEEEEmOT_DpOT0_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4base8internal15CheckedLockImplES6_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS6_EEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISV_EEEEEEmOT_DpOT0_"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
