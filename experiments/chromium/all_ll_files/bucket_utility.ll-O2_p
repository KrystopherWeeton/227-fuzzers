; ModuleID = '../../media/capabilities/bucket_utility.cc'
source_filename = "../../media/capabilities/bucket_utility.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Size" = type { i32, i32 }

@_ZN12_GLOBAL__N_112kSizeBucketsE = internal constant [33 x i32] [i32 50, i32 100, i32 144, i32 240, i32 256, i32 280, i32 360, i32 426, i32 480, i32 640, i32 720, i32 854, i32 960, i32 1080, i32 1280, i32 1440, i32 1920, i32 2160, i32 2560, i32 2880, i32 3160, i32 3840, i32 4128, i32 4320, i32 5120, i32 6144, i32 7360, i32 7680, i32 8000, i32 9000, i32 10000, i32 11000, i32 11520], align 16
@_ZN12_GLOBAL__N_117kFrameRateBucketsE = internal constant [32 x i32] [i32 5, i32 10, i32 20, i32 25, i32 30, i32 40, i32 50, i32 60, i32 70, i32 80, i32 90, i32 100, i32 120, i32 150, i32 200, i32 250, i32 300, i32 350, i32 400, i32 450, i32 500, i32 550, i32 600, i32 650, i32 700, i32 750, i32 800, i32 850, i32 900, i32 950, i32 1000, i32 1500], align 16

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZN5media13GetSizeBucketERKN3gfx4SizeE(%"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp slt i32 %3, 38
  br i1 %4, label %51, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %7, 38
  br i1 %8, label %51, label %9

9:                                                ; preds = %5, %9
  %10 = phi i64 [ %20, %9 ], [ 33, %5 ]
  %11 = phi i32* [ %19, %9 ], [ getelementptr inbounds ([33 x i32], [33 x i32]* @_ZN12_GLOBAL__N_112kSizeBucketsE, i64 0, i64 0), %5 ]
  %12 = lshr i64 %10, 1
  %13 = getelementptr inbounds i32, i32* %11, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %14, %3
  %16 = getelementptr inbounds i32, i32* %13, i64 1
  %17 = xor i64 %12, -1
  %18 = add i64 %10, %17
  %19 = select i1 %15, i32* %16, i32* %11
  %20 = select i1 %15, i64 %18, i64 %12
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %9

22:                                               ; preds = %9, %22
  %23 = phi i64 [ %33, %22 ], [ 33, %9 ]
  %24 = phi i32* [ %32, %22 ], [ getelementptr inbounds ([33 x i32], [33 x i32]* @_ZN12_GLOBAL__N_112kSizeBucketsE, i64 0, i64 0), %9 ]
  %25 = lshr i64 %23, 1
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %27, %7
  %29 = getelementptr inbounds i32, i32* %26, i64 1
  %30 = xor i64 %25, -1
  %31 = add i64 %23, %30
  %32 = select i1 %28, i32* %29, i32* %24
  %33 = select i1 %28, i64 %31, i64 %25
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22

35:                                               ; preds = %22
  %36 = icmp eq i32* %19, getelementptr inbounds ([33 x i32], [33 x i32]* @_ZN12_GLOBAL__N_112kSizeBucketsE, i64 1, i64 0)
  %37 = getelementptr inbounds i32, i32* %19, i64 -1
  %38 = select i1 %36, i32* %37, i32* %19
  %39 = icmp eq i32* %32, getelementptr inbounds ([33 x i32], [33 x i32]* @_ZN12_GLOBAL__N_112kSizeBucketsE, i64 1, i64 0)
  %40 = getelementptr inbounds i32, i32* %32, i64 -1
  %41 = select i1 %39, i32* %40, i32* %32
  %42 = load i32, i32* %38, align 4
  %43 = load i32, i32* %41, align 4
  %44 = icmp sgt i32 %42, 0
  %45 = select i1 %44, i32 %42, i32 0
  %46 = icmp sgt i32 %43, 0
  %47 = select i1 %46, i32 %43, i32 0
  %48 = zext i32 %47 to i64
  %49 = shl nuw nsw i64 %48, 32
  %50 = zext i32 %45 to i64
  br label %51

51:                                               ; preds = %1, %5, %35
  %52 = phi i64 [ %50, %35 ], [ 0, %5 ], [ 0, %1 ]
  %53 = phi i64 [ %49, %35 ], [ 0, %5 ], [ 0, %1 ]
  %54 = or i64 %53, %52
  ret i64 %54
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN5media12GetFpsBucketEd(double) local_unnamed_addr #0 {
  %2 = tail call double @llvm.round.f64(double %0)
  %3 = fptosi double %2 to i32
  br label %4

4:                                                ; preds = %4, %1
  %5 = phi i64 [ 32, %1 ], [ %15, %4 ]
  %6 = phi i32* [ getelementptr inbounds ([32 x i32], [32 x i32]* @_ZN12_GLOBAL__N_117kFrameRateBucketsE, i64 0, i64 0), %1 ], [ %14, %4 ]
  %7 = lshr i64 %5, 1
  %8 = getelementptr inbounds i32, i32* %6, i64 %7
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, %3
  %11 = getelementptr inbounds i32, i32* %8, i64 1
  %12 = xor i64 %7, -1
  %13 = add i64 %5, %12
  %14 = select i1 %10, i32* %6, i32* %11
  %15 = select i1 %10, i64 %7, i64 %13
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %4

17:                                               ; preds = %4
  %18 = icmp eq i32* %14, getelementptr inbounds ([32 x i32], [32 x i32]* @_ZN12_GLOBAL__N_117kFrameRateBucketsE, i64 1, i64 0)
  br i1 %18, label %35, label %19

19:                                               ; preds = %17
  %20 = icmp eq i32* %14, getelementptr inbounds ([32 x i32], [32 x i32]* @_ZN12_GLOBAL__N_117kFrameRateBucketsE, i64 0, i64 0)
  %21 = load i32, i32* %14, align 4
  br i1 %20, label %35, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds i32, i32* %14, i64 -1
  %24 = load i32, i32* %23, align 4
  %25 = sub nsw i32 %24, %3
  %26 = icmp slt i32 %25, 0
  %27 = sub nsw i32 0, %25
  %28 = select i1 %26, i32 %27, i32 %25
  %29 = sub nsw i32 %21, %3
  %30 = icmp slt i32 %29, 0
  %31 = sub nsw i32 0, %29
  %32 = select i1 %30, i32 %31, i32 %29
  %33 = icmp slt i32 %28, %32
  %34 = select i1 %33, i32 %24, i32 %21
  br label %35

35:                                               ; preds = %17, %19, %22
  %36 = phi i32 [ %34, %22 ], [ %21, %19 ], [ 1500, %17 ]
  ret i32 %36
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.round.f64(double) #1

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
