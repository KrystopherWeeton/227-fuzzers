; ModuleID = '../../net/dns/dns_session.cc'
source_filename = "../../net/dns/dns_session.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::DnsSession" = type { %"class.base::RefCounted", %"struct.net::DnsConfig", %"class.std::__1::unique_ptr.38", %"class.net::DnsUdpTracker", %"class.base::RepeatingCallback", %"class.net::NetLog"*, %"class.base::WeakPtrFactory" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"struct.net::DnsConfig" = type { %"class.std::__1::vector", i8, %"class.std::__1::basic_string", %"class.std::__1::vector.6", %"class.std::__1::unordered_map", i8, i8, i32, %"class.base::TimeDelta", i32, i32, i8, i8, %"class.std::__1::vector.31", i32, i8, %"class.std::__1::vector.6" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*, %"class.std::__1::__compressed_pair" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::IPEndPoint"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.21", %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.28", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14", %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i64 }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { float }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"*, %"class.std::__1::__compressed_pair.33" }
%"struct.net::DnsOverHttpsServerConfig" = type <{ %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.net::DnsOverHttpsServerConfig"* }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.net::DnsSocketAllocator"* }
%"class.net::DnsUdpTracker" = type { i8, %"class.base::circular_deque", %"class.base::circular_deque.56", %"class.base::circular_deque.56", %"class.base::TickClock"* }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"struct.net::DnsUdpTracker::QueryData"*, i64 }
%"struct.net::DnsUdpTracker::QueryData" = type opaque
%"class.base::circular_deque.56" = type { %"class.base::internal::VectorBuffer.57", i64, i64 }
%"class.base::internal::VectorBuffer.57" = type { %"class.base::TimeTicks"*, i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.59 }
%class.scoped_refptr.59 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.60", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.60" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.61" }
%"struct.std::__1::atomic.61" = type { %"struct.std::__1::__atomic_base.62" }
%"struct.std::__1::__atomic_base.62" = type { %"struct.std::__1::__atomic_base.63" }
%"struct.std::__1::__atomic_base.63" = type { %"struct.std::__1::__cxx_atomic_impl.64" }
%"struct.std::__1::__cxx_atomic_impl.64" = type { %"struct.std::__1::__cxx_atomic_base_impl.65" }
%"struct.std::__1::__cxx_atomic_base_impl.65" = type { i8 }
%"class.net::DnsSocketAllocator" = type { %"class.net::ClientSocketFactory"*, %"class.net::NetLog"*, %"class.std::__1::vector" }
%"class.net::ClientSocketFactory" = type opaque
%"class.base::RepeatingCallback.66" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.41", %"class.std::__1::vector.48" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.43" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.50" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"struct.base::internal::BindState" = type { %"class.base::internal::BindStateBase", %"class.base::RepeatingCallback.66", %"class.std::__1::tuple" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type <{ %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.67", [2 x i8] }>
%"class.std::__1::__tuple_leaf" = type { i32 }
%"class.std::__1::__tuple_leaf.67" = type { i16 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

$_ZN4base8internal9BindStateINS_17RepeatingCallbackIFiiiEEEJitEE6CreateIRKS4_JitEEEPS5_PFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateINS_17RepeatingCallbackIFiiiEEEJitEEEFivEE3RunEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateINS_17RepeatingCallbackIFiiiEEEJitEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_17RepeatingCallbackIFiiiEEEJitEEEEEbPKNS0_13BindStateBaseENS7_21CancellationQueryModeE = comdat any

@.str = private unnamed_addr constant [27 x i8] c"../../base/bind_internal.h\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"!IsNull(functor_)\00", align 1

@_ZN3net10DnsSessionC1ERKNS_9DnsConfigENSt3__110unique_ptrINS_18DnsSocketAllocatorENS4_14default_deleteIS6_EEEERKN4base17RepeatingCallbackIFiiiEEEPNS_6NetLogE = hidden unnamed_addr alias void (%"class.net::DnsSession"*, %"struct.net::DnsConfig"*, %"class.net::DnsSocketAllocator"*, %"class.base::RepeatingCallback.66"*, %"class.net::NetLog"*), void (%"class.net::DnsSession"*, %"struct.net::DnsConfig"*, %"class.net::DnsSocketAllocator"*, %"class.base::RepeatingCallback.66"*, %"class.net::NetLog"*)* @_ZN3net10DnsSessionC2ERKNS_9DnsConfigENSt3__110unique_ptrINS_18DnsSocketAllocatorENS4_14default_deleteIS6_EEEERKN4base17RepeatingCallbackIFiiiEEEPNS_6NetLogE
@_ZN3net10DnsSessionD1Ev = hidden unnamed_addr alias void (%"class.net::DnsSession"*), void (%"class.net::DnsSession"*)* @_ZN3net10DnsSessionD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net10DnsSessionC2ERKNS_9DnsConfigENSt3__110unique_ptrINS_18DnsSocketAllocatorENS4_14default_deleteIS6_EEEERKN4base17RepeatingCallbackIFiiiEEEPNS_6NetLogE(%"class.net::DnsSession"*, %"struct.net::DnsConfig"* dereferenceable(208), %"class.net::DnsSocketAllocator"*, %"class.base::RepeatingCallback.66"* dereferenceable(8), %"class.net::NetLog"*) unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i16, align 2
  %8 = ptrtoint %"class.net::DnsSocketAllocator"* %2 to i64
  %9 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %0, i64 0, i32 1
  tail call void @_ZN3net9DnsConfigC1ERKS0_(%"struct.net::DnsConfig"* %10, %"struct.net::DnsConfig"* dereferenceable(208) %1) #6
  %11 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %0, i64 0, i32 2
  %12 = bitcast %"class.std::__1::unique_ptr.38"* %11 to i64*
  store i64 %8, i64* %12, align 8
  %13 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %0, i64 0, i32 3
  tail call void @_ZN3net13DnsUdpTrackerC1Ev(%"class.net::DnsUdpTracker"* %13) #6
  %14 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #6
  store i32 0, i32* %6, align 4
  %15 = bitcast i16* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %15) #6
  store i16 -1, i16* %7, align 2
  %16 = call %"struct.base::internal::BindState"* @_ZN4base8internal9BindStateINS_17RepeatingCallbackIFiiiEEEJitEE6CreateIRKS4_JitEEEPS5_PFvvEOT_DpOT0_(void ()* bitcast (i32 (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateINS_17RepeatingCallbackIFiiiEEEJitEEEFivEE3RunEPNS0_13BindStateBaseE to void ()*), %"class.base::RepeatingCallback.66"* dereferenceable(8) %3, i32* nonnull dereferenceable(4) %6, i16* nonnull dereferenceable(2) %7) #6, !noalias !2
  %17 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %16, i64 0, i32 0
  %18 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* %17, %"class.base::internal::BindStateBase"** %18, align 8, !alias.scope !2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #6
  %19 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %0, i64 0, i32 5
  store %"class.net::NetLog"* %4, %"class.net::NetLog"** %19, align 8
  %20 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %0, i64 0, i32 6, i32 0
  %21 = ptrtoint %"class.net::DnsSession"* %0 to i64
  call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %20, i64 %21) #6
  ret void
}

declare void @_ZN3net9DnsConfigC1ERKS0_(%"struct.net::DnsConfig"*, %"struct.net::DnsConfig"* dereferenceable(208)) unnamed_addr #1

declare void @_ZN3net13DnsUdpTrackerC1Ev(%"class.net::DnsUdpTracker"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net10DnsSessionD2Ev(%"class.net::DnsSession"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %0, i64 0, i32 6, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %2) #6
  %3 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #6
  %4 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %0, i64 0, i32 3
  tail call void @_ZN3net13DnsUdpTrackerD1Ev(%"class.net::DnsUdpTracker"* %4) #6
  %5 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.net::DnsSocketAllocator"*, %"class.net::DnsSocketAllocator"** %5, align 8
  store %"class.net::DnsSocketAllocator"* null, %"class.net::DnsSocketAllocator"** %5, align 8
  %7 = icmp eq %"class.net::DnsSocketAllocator"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  tail call void @_ZN3net18DnsSocketAllocatorD1Ev(%"class.net::DnsSocketAllocator"* nonnull %6) #6
  %9 = bitcast %"class.net::DnsSocketAllocator"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #7
  br label %10

10:                                               ; preds = %1, %8
  %11 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %0, i64 0, i32 1
  tail call void @_ZN3net9DnsConfigD1Ev(%"struct.net::DnsConfig"* %11) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net13DnsUdpTrackerD1Ev(%"class.net::DnsUdpTracker"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net9DnsConfigD1Ev(%"struct.net::DnsConfig"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @_ZNK3net10DnsSession11NextQueryIdEv(%"class.net::DnsSession"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %2, align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %3, i64 0, i32 1
  %5 = bitcast void ()** %4 to i32 (%"class.base::internal::BindStateBase"*)**
  %6 = load i32 (%"class.base::internal::BindStateBase"*)*, i32 (%"class.base::internal::BindStateBase"*)** %5, align 8
  %7 = tail call i32 %6(%"class.base::internal::BindStateBase"* %3) #6
  %8 = trunc i32 %7 to i16
  ret i16 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net10DnsSession28InvalidateWeakPtrsForTestingEv(%"class.net::DnsSession"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %0, i64 0, i32 6, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %2) #6
  ret void
}

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net18DnsSocketAllocatorD1Ev(%"class.net::DnsSocketAllocator"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.base::internal::BindState"* @_ZN4base8internal9BindStateINS_17RepeatingCallbackIFiiiEEEJitEE6CreateIRKS4_JitEEEPS5_PFvvEOT_DpOT0_(void ()*, %"class.base::RepeatingCallback.66"* dereferenceable(8), i32* dereferenceable(4), i16* dereferenceable(2)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = tail call i8* @_Znwm(i64 48) #7
  %7 = bitcast i8* %6 to %"struct.base::internal::BindState"*
  %8 = bitcast i8* %6 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %8, void ()* %0, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateINS_17RepeatingCallbackIFiiiEEEJitEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_17RepeatingCallbackIFiiiEEEJitEEEEEbPKNS0_13BindStateBaseENS7_21CancellationQueryModeE) #6
  %9 = getelementptr inbounds i8, i8* %6, i64 32
  %10 = bitcast i8* %9 to %"class.base::internal::CallbackBaseCopyable"*
  %11 = getelementptr inbounds %"class.base::RepeatingCallback.66", %"class.base::RepeatingCallback.66"* %1, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %10, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %11) #6
  %12 = getelementptr inbounds i8, i8* %6, i64 40
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %2, align 4
  store i32 %14, i32* %13, align 4
  %15 = getelementptr inbounds i8, i8* %6, i64 44
  %16 = bitcast i8* %15 to i16*
  %17 = load i16, i16* %3, align 2
  store i16 %17, i16* %16, align 2
  %18 = bitcast i8* %9 to %"class.base::internal::BindStateBase"**
  %19 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %18, align 8
  %20 = icmp eq %"class.base::internal::BindStateBase"* %19, null
  br i1 %20, label %21, label %24

21:                                               ; preds = %4
  %22 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i32 896, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0)) #6
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #6
  br label %24

24:                                               ; preds = %4, %21
  ret %"struct.base::internal::BindState"* %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4base8internal7InvokerINS0_9BindStateINS_17RepeatingCallbackIFiiiEEEJitEEEFivEE3RunEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.std::__1::tuple"*
  %5 = bitcast void ()** %3 to i32*
  %6 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 1, i32 0
  %7 = load i32, i32* %5, align 4
  %8 = load i16, i16* %6, align 2
  %9 = zext i16 %8 to i32
  %10 = bitcast %"class.base::internal::BindStateBase"* %2 to %"class.base::internal::BindStateBase"**
  %11 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %10, align 8
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %11, i64 0, i32 1
  %13 = bitcast void ()** %12 to i32 (%"class.base::internal::BindStateBase"*, i32, i32)**
  %14 = load i32 (%"class.base::internal::BindStateBase"*, i32, i32)*, i32 (%"class.base::internal::BindStateBase"*, i32, i32)** %13, align 8
  %15 = tail call i32 %14(%"class.base::internal::BindStateBase"* %11, i32 %7, i32 %9) #6
  ret i32 %15
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateINS_17RepeatingCallbackIFiiiEEEJitEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #6
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #7
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_17RepeatingCallbackIFiiiEEEJitEEEEEbPKNS0_13BindStateBaseENS7_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  switch i32 %1, label %10 [
    i32 0, label %4
    i32 1, label %7
  ]

4:                                                ; preds = %2
  %5 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %6 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"* %5) #6
  br label %10

7:                                                ; preds = %2
  %8 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %9 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"* %8) #6
  br label %10

10:                                               ; preds = %2, %4, %7
  %11 = phi i1 [ %9, %7 ], [ %6, %4 ], [ false, %2 ]
  ret i1 %11
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #1

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERKNS2_IFiiiEEEJitEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERKNS2_IFiiiEEEJitEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base13BindRepeatingIRKNS_17RepeatingCallbackIFiiiEEEJitEEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS8_DpOS9_: argument 0"}
!6 = distinct !{!6, !"_ZN4base13BindRepeatingIRKNS_17RepeatingCallbackIFiiiEEEJitEEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS8_DpOS9_"}
